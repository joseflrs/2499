From db4943e0675c46538294782d23c85cf04b7b6aba Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Fri, 22 Dec 2023 00:24:24 -0500
Subject: [PATCH 01/38] Revert "linux-firmware: update to 20231211"

This reverts commit 8e948ca20b4271c22a0e23ad1e64770da06202ee.
---
 package/firmware/linux-firmware/Makefile | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/package/firmware/linux-firmware/Makefile b/package/firmware/linux-firmware/Makefile
index 79341c30cb..ef6cd075de 100644
--- a/package/firmware/linux-firmware/Makefile
+++ b/package/firmware/linux-firmware/Makefile
@@ -8,12 +8,12 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=linux-firmware
-PKG_VERSION:=20231211
+PKG_VERSION:=20230804
 PKG_RELEASE:=1
 
 PKG_SOURCE_URL:=@KERNEL/linux/kernel/firmware
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.xz
-PKG_HASH:=96af7e4b5eabd37869cdb3dcbb7ab36911106d39b76e799fa1caab16a9dbe8bb
+PKG_HASH:=88d46c543847ee3b03404d4941d91c92974690ee1f6fdcbee9cef3e5f97db688
 
 PKG_MAINTAINER:=Felix Fietkau <nbd@nbd.name>
 
-- 
2.40.1


From cc65e4aa29a3cf7b1622fea7df38189ef62baade Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Fri, 5 Jan 2024 17:36:28 -0500
Subject: [PATCH 02/38] CI: build rockchip ext4 images

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .github/workflows/config.buildinfo2  | 649 +++++++++++++++++++++++++
 .github/workflows/config.buildinfo3  | 688 +++++++++++++++++++++++++++
 .github/workflows/rockchip-ext4.yaml |  98 ++++
 3 files changed, 1435 insertions(+)
 create mode 100644 .github/workflows/config.buildinfo2
 create mode 100644 .github/workflows/config.buildinfo3
 create mode 100755 .github/workflows/rockchip-ext4.yaml

diff --git a/.github/workflows/config.buildinfo2 b/.github/workflows/config.buildinfo2
new file mode 100644
index 0000000000..ad63237131
--- /dev/null
+++ b/.github/workflows/config.buildinfo2
@@ -0,0 +1,649 @@
+CONFIG_TARGET_rockchip=y
+CONFIG_TARGET_rockchip_armv8=y
+CONFIG_TARGET_MULTI_PROFILE=y
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r2s=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyarm_nanopi-r2s=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r4s=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyarm_nanopi-r4s=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5c=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5c=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5s=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5s=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_pine64_quartz64-a=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_pine64_quartz64-a=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_radxa_rock-pi-4=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_radxa_rock-pi-4=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_radxa_rock-3a=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_radxa_rock-3a=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_rockchip_bpi-r2-pro=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_rockchip_bpi-r2-pro=""
+CONFIG_DEVEL=y
+CONFIG_BUSYBOX_CUSTOM=y
+CONFIG_TARGET_PER_DEVICE_ROOTFS=y
+CONFIG_ATH10K_LEDS=y
+CONFIG_ATH9K_HWRNG=y
+CONFIG_ATH_USER_REGD=y
+CONFIG_AUTOREMOVE=y
+CONFIG_BUILD_LOG=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_GETOPT_LONG=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_SEAMLESS_XZ=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_TAR_LONG_OPTIONS=y
+CONFIG_BUSYBOX_CONFIG_GETOPT=y
+CONFIG_BUSYBOX_CONFIG_MOUNTPOINT=y
+CONFIG_BUSYBOX_CONFIG_UNXZ=y
+CONFIG_BUSYBOX_CONFIG_XZ=y
+CONFIG_CGROUPFS_MOUNT_KERNEL_CGROUPS=y
+CONFIG_DOCKER_CGROUP_OPTIONS=y
+CONFIG_DOCKER_CHECK_CONFIG=y
+CONFIG_DOCKER_NET_ENCRYPT=y
+CONFIG_DOCKER_NET_MACVLAN=y
+CONFIG_DOCKER_NET_OVERLAY=y
+CONFIG_DOCKER_NET_TFTP=y
+CONFIG_DOCKER_OPTIONAL_FEATURES=y
+CONFIG_DOCKER_STO_BTRFS=y
+CONFIG_DOCKER_STO_EXT4=y
+CONFIG_DRIVER_11AX_SUPPORT=y
+CONFIG_GNUTLS_ALPN=y
+CONFIG_GNUTLS_ANON=y
+CONFIG_GNUTLS_DTLS_SRTP=y
+CONFIG_GNUTLS_HEARTBEAT=y
+CONFIG_GNUTLS_OCSP=y
+CONFIG_GNUTLS_PSK=y
+CONFIG_HTOP_LMSENSORS=y
+CONFIG_KERNEL_ARM_PMU=y
+CONFIG_KERNEL_BTRFS_FS_POSIX_ACL=y
+CONFIG_KERNEL_CFQ_GROUP_IOSCHED=y
+CONFIG_KERNEL_CGROUP_DEVICE=y
+CONFIG_KERNEL_CGROUP_FREEZER=y
+CONFIG_KERNEL_CGROUP_HUGETLB=y
+CONFIG_KERNEL_CGROUP_NET_PRIO=y
+CONFIG_KERNEL_CGROUP_PERF=y
+CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
+CONFIG_KERNEL_EXT4_FS_SECURITY=y
+CONFIG_KERNEL_FS_POSIX_ACL=y
+CONFIG_KERNEL_HUGETLBFS=y
+CONFIG_KERNEL_HUGETLB_PAGE=y
+CONFIG_KERNEL_MEMCG_SWAP_ENABLED=y
+CONFIG_KERNEL_NET_CLS_CGROUP=y
+CONFIG_KERNEL_PAGE_POOL=y
+CONFIG_KERNEL_PERF_EVENTS=y
+CONFIG_KERNEL_RELAY=y
+CONFIG_KERNEL_TRANSPARENT_HUGEPAGE=y
+CONFIG_KERNEL_TRANSPARENT_HUGEPAGE_ALWAYS=y
+CONFIG_LXC_BUSYBOX_OPTIONS=y
+CONFIG_LXC_KERNEL_OPTIONS=y
+CONFIG_LXC_NETWORKING=y
+CONFIG_LXC_SECCOMP=y
+CONFIG_OPENSSL_ENGINE_BUILTIN=y
+CONFIG_OPENSSL_ENGINE_BUILTIN_DEVCRYPTO=y
+CONFIG_OPENSSL_OPTIMIZE_SPEED=y
+CONFIG_OPENVPN_openssl_ENABLE_FRAGMENT=y
+CONFIG_OPENVPN_openssl_ENABLE_LZ4=y
+CONFIG_OPENVPN_openssl_ENABLE_LZO=y
+CONFIG_OPENVPN_openssl_ENABLE_PORT_SHARE=y
+CONFIG_PACKAGE_ATH_DFS=y
+CONFIG_PACKAGE_MAC80211_DEBUGFS=y
+CONFIG_PACKAGE_MAC80211_MESH=y
+CONFIG_PACKAGE_NTFS-3G_HAS_PROBE=y
+CONFIG_PACKAGE_adb=y
+CONFIG_PACKAGE_adblock=y
+CONFIG_PACKAGE_arp-scan=y
+CONFIG_PACKAGE_arp-scan-database=y
+CONFIG_PACKAGE_ath10k-firmware-qca6174=y
+CONFIG_PACKAGE_atop=y
+CONFIG_PACKAGE_attr=y
+CONFIG_PACKAGE_avahi-dbus-daemon=y
+CONFIG_PACKAGE_bash=y
+CONFIG_PACKAGE_blkdiscard=y
+CONFIG_PACKAGE_blkid=y
+CONFIG_PACKAGE_block-mount=y
+CONFIG_PACKAGE_blockd=y
+CONFIG_PACKAGE_blockdev=y
+CONFIG_PACKAGE_bluez-daemon=y
+CONFIG_PACKAGE_bluez-libs=y
+CONFIG_PACKAGE_bluez-tools=y
+CONFIG_PACKAGE_bluez-utils=y
+CONFIG_PACKAGE_bluez-utils-extra=y
+CONFIG_PACKAGE_btop=y
+CONFIG_PACKAGE_btrfs-progs=y
+CONFIG_PACKAGE_ca-certificates=y
+CONFIG_PACKAGE_ccrypt=y
+CONFIG_PACKAGE_certtool=y
+CONFIG_PACKAGE_cgi-io=y
+CONFIG_PACKAGE_cgroup-tools=y
+CONFIG_PACKAGE_cgroupfs-mount=y
+CONFIG_PACKAGE_collectd=y
+CONFIG_PACKAGE_collectd-mod-conntrack=y
+CONFIG_PACKAGE_collectd-mod-cpu=y
+CONFIG_PACKAGE_collectd-mod-cpufreq=y
+CONFIG_PACKAGE_collectd-mod-interface=y
+CONFIG_PACKAGE_collectd-mod-irq=y
+CONFIG_PACKAGE_collectd-mod-iwinfo=y
+CONFIG_PACKAGE_collectd-mod-load=y
+CONFIG_PACKAGE_collectd-mod-memory=y
+CONFIG_PACKAGE_collectd-mod-network=y
+CONFIG_PACKAGE_collectd-mod-rrdtool=y
+CONFIG_PACKAGE_collectd-mod-sensors=y
+CONFIG_PACKAGE_collectd-mod-thermal=y
+CONFIG_PACKAGE_containerd=y
+CONFIG_PACKAGE_coreutils=y
+CONFIG_PACKAGE_coreutils-sort=y
+CONFIG_PACKAGE_cryptsetup=y
+CONFIG_PACKAGE_cryptsetup-ssh=y
+CONFIG_PACKAGE_dbus=y
+CONFIG_PACKAGE_dnsmasq=m
+CONFIG_PACKAGE_dnsmasq-full=y
+CONFIG_PACKAGE_dnsmasq_full_auth=y
+CONFIG_PACKAGE_dnsmasq_full_conntrack=y
+CONFIG_PACKAGE_dnsmasq_full_dhcp=y
+CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
+CONFIG_PACKAGE_dnsmasq_full_dnssec=y
+CONFIG_PACKAGE_dnsmasq_full_nftset=y
+CONFIG_PACKAGE_dnsmasq_full_noid=y
+CONFIG_PACKAGE_dnsmasq_full_tftp=y
+CONFIG_PACKAGE_docker=y
+CONFIG_PACKAGE_docker-compose=y
+CONFIG_PACKAGE_dockerd=y
+CONFIG_PACKAGE_ethtool-full=y
+CONFIG_PACKAGE_exfat-fsck=y
+CONFIG_PACKAGE_exfat-mkfs=y
+CONFIG_PACKAGE_f2fs-tools=y
+CONFIG_PACKAGE_f2fsck=y
+CONFIG_PACKAGE_fdisk=y
+CONFIG_PACKAGE_findfs=y
+CONFIG_PACKAGE_fixparts=y
+CONFIG_PACKAGE_flock=y
+CONFIG_PACKAGE_fuse-utils=y
+CONFIG_PACKAGE_fuse3-utils=y
+CONFIG_PACKAGE_gdisk=y
+CONFIG_PACKAGE_getopt=y
+CONFIG_PACKAGE_glib2=y
+CONFIG_PACKAGE_gnupg=y
+CONFIG_PACKAGE_gnutls-utils=y
+CONFIG_PACKAGE_hdparm=y
+CONFIG_PACKAGE_hostapd-common=y
+CONFIG_PACKAGE_htop=y
+CONFIG_PACKAGE_hwclock=y
+CONFIG_PACKAGE_ip-full=y
+CONFIG_PACKAGE_ip6tables-nft=y
+CONFIG_PACKAGE_iperf3-ssl=y
+CONFIG_PACKAGE_ipset=y
+CONFIG_PACKAGE_iptables-mod-extra=y
+CONFIG_PACKAGE_iptables-mod-ipopt=y
+CONFIG_PACKAGE_iptables-nft=y
+CONFIG_PACKAGE_irqbalance=y
+# CONFIG_PACKAGE_iw is not set
+CONFIG_PACKAGE_iw-full=y
+CONFIG_PACKAGE_iwinfo=y
+CONFIG_PACKAGE_kmod-asn1-decoder=y
+CONFIG_PACKAGE_kmod-asn1-encoder=y
+CONFIG_PACKAGE_kmod-ata-ahci=y
+CONFIG_PACKAGE_kmod-ata-core=y
+CONFIG_PACKAGE_kmod-ata-dwc=y
+CONFIG_PACKAGE_kmod-ath=y
+CONFIG_PACKAGE_kmod-ath10k=y
+CONFIG_PACKAGE_kmod-ath9k=y
+CONFIG_PACKAGE_kmod-ath9k-common=y
+CONFIG_PACKAGE_kmod-atm=y
+CONFIG_PACKAGE_kmod-bluetooth=y
+CONFIG_PACKAGE_kmod-br-netfilter=y
+CONFIG_PACKAGE_kmod-cdrom=y
+CONFIG_PACKAGE_kmod-cfg80211=y
+CONFIG_PACKAGE_kmod-crypto-acompress=y
+CONFIG_PACKAGE_kmod-crypto-aead=y
+CONFIG_PACKAGE_kmod-crypto-arc4=y
+CONFIG_PACKAGE_kmod-crypto-authenc=y
+CONFIG_PACKAGE_kmod-crypto-cbc=y
+CONFIG_PACKAGE_kmod-crypto-ccm=y
+CONFIG_PACKAGE_kmod-crypto-cmac=y
+CONFIG_PACKAGE_kmod-crypto-crc32=y
+CONFIG_PACKAGE_kmod-crypto-ctr=y
+CONFIG_PACKAGE_kmod-crypto-deflate=y
+CONFIG_PACKAGE_kmod-crypto-des=y
+CONFIG_PACKAGE_kmod-crypto-ecb=y
+CONFIG_PACKAGE_kmod-crypto-ecdh=y
+CONFIG_PACKAGE_kmod-crypto-echainiv=y
+CONFIG_PACKAGE_kmod-crypto-gcm=y
+CONFIG_PACKAGE_kmod-crypto-gf128=y
+CONFIG_PACKAGE_kmod-crypto-ghash=y
+CONFIG_PACKAGE_kmod-crypto-hmac=y
+CONFIG_PACKAGE_kmod-crypto-kpp=y
+CONFIG_PACKAGE_kmod-crypto-lib-chacha20=y
+CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=y
+CONFIG_PACKAGE_kmod-crypto-lib-curve25519=y
+CONFIG_PACKAGE_kmod-crypto-lib-poly1305=y
+CONFIG_PACKAGE_kmod-crypto-manager=y
+CONFIG_PACKAGE_kmod-crypto-md5=y
+CONFIG_PACKAGE_kmod-crypto-misc=y
+CONFIG_PACKAGE_kmod-crypto-null=y
+CONFIG_PACKAGE_kmod-crypto-rng=y
+CONFIG_PACKAGE_kmod-crypto-seqiv=y
+CONFIG_PACKAGE_kmod-crypto-sha1=y
+CONFIG_PACKAGE_kmod-crypto-sha256=y
+CONFIG_PACKAGE_kmod-crypto-sha512=y
+CONFIG_PACKAGE_kmod-crypto-user=y
+CONFIG_PACKAGE_kmod-crypto-xts=y
+CONFIG_PACKAGE_kmod-cryptodev=y
+CONFIG_PACKAGE_kmod-dax=y
+CONFIG_PACKAGE_kmod-dm=y
+CONFIG_PACKAGE_kmod-dummy=y
+CONFIG_PACKAGE_kmod-fs-autofs4=y
+CONFIG_PACKAGE_kmod-fs-btrfs=y
+CONFIG_PACKAGE_kmod-fs-exfat=y
+CONFIG_PACKAGE_kmod-fs-exportfs=y
+CONFIG_PACKAGE_kmod-fs-ext4=y
+CONFIG_PACKAGE_kmod-fs-f2fs=y
+CONFIG_PACKAGE_kmod-fs-hfs=y
+CONFIG_PACKAGE_kmod-fs-hfsplus=y
+CONFIG_PACKAGE_kmod-fs-ntfs3=y
+CONFIG_PACKAGE_kmod-fs-squashfs=y
+CONFIG_PACKAGE_kmod-fs-vfat=y
+CONFIG_PACKAGE_kmod-fs-xfs=y
+CONFIG_PACKAGE_kmod-fuse=y
+CONFIG_PACKAGE_kmod-gre=y
+CONFIG_PACKAGE_kmod-hid=y
+CONFIG_PACKAGE_kmod-hwmon-gpiofan=y
+CONFIG_PACKAGE_kmod-hwmon-pwmfan=y
+CONFIG_PACKAGE_kmod-i2c-core=y
+CONFIG_PACKAGE_kmod-ifb=y
+CONFIG_PACKAGE_kmod-ikconfig=y
+CONFIG_PACKAGE_kmod-input-core=y
+CONFIG_PACKAGE_kmod-input-evdev=y
+CONFIG_PACKAGE_kmod-ip6tables=y
+CONFIG_PACKAGE_kmod-ipsec=y
+CONFIG_PACKAGE_kmod-ipt-conntrack=y
+CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
+CONFIG_PACKAGE_kmod-ipt-core=y
+CONFIG_PACKAGE_kmod-ipt-extra=y
+CONFIG_PACKAGE_kmod-ipt-ipopt=y
+CONFIG_PACKAGE_kmod-ipt-ipset=y
+CONFIG_PACKAGE_kmod-ipt-nat=y
+CONFIG_PACKAGE_kmod-ipt-nat6=y
+CONFIG_PACKAGE_kmod-ipt-physdev=y
+CONFIG_PACKAGE_kmod-iptunnel=y
+CONFIG_PACKAGE_kmod-keys-encrypted=y
+CONFIG_PACKAGE_kmod-keys-trusted=y
+CONFIG_PACKAGE_kmod-l2tp=y
+CONFIG_PACKAGE_kmod-lib-crc16=y
+CONFIG_PACKAGE_kmod-lib-lzo=y
+CONFIG_PACKAGE_kmod-lib-raid6=y
+CONFIG_PACKAGE_kmod-lib-textsearch=y
+CONFIG_PACKAGE_kmod-lib-xor=y
+CONFIG_PACKAGE_kmod-lib-zlib-deflate=y
+CONFIG_PACKAGE_kmod-lib-zlib-inflate=y
+CONFIG_PACKAGE_kmod-lib-zstd=y
+CONFIG_PACKAGE_kmod-libphy=y
+CONFIG_PACKAGE_kmod-mac80211=y
+CONFIG_PACKAGE_kmod-macvlan=y
+CONFIG_PACKAGE_kmod-mdio-devres=y
+CONFIG_PACKAGE_kmod-mii=y
+CONFIG_PACKAGE_kmod-mppe=y
+CONFIG_PACKAGE_kmod-mt76-connac=y
+CONFIG_PACKAGE_kmod-mt76-core=y
+CONFIG_PACKAGE_kmod-mt76-usb=y
+CONFIG_PACKAGE_kmod-mt76x02-common=y
+CONFIG_PACKAGE_kmod-mt76x02-usb=y
+CONFIG_PACKAGE_kmod-mt76x2-common=y
+CONFIG_PACKAGE_kmod-mt76x2u=y
+CONFIG_PACKAGE_kmod-mt7915-firmware=y
+CONFIG_PACKAGE_kmod-mt7915e=y
+CONFIG_PACKAGE_kmod-mt7916-firmware=y
+CONFIG_PACKAGE_kmod-mt7921-common=y
+CONFIG_PACKAGE_kmod-mt7921-firmware=y
+CONFIG_PACKAGE_kmod-mt7921e=y
+CONFIG_PACKAGE_kmod-mt7921u=y
+CONFIG_PACKAGE_kmod-mt7922-firmware=y
+CONFIG_PACKAGE_kmod-mt792x-common=y
+CONFIG_PACKAGE_kmod-mt792x-usb=y
+CONFIG_PACKAGE_kmod-nf-conntrack-netlink=y
+CONFIG_PACKAGE_kmod-nf-ipt=y
+CONFIG_PACKAGE_kmod-nf-ipt6=y
+CONFIG_PACKAGE_kmod-nf-ipvs=y
+CONFIG_PACKAGE_kmod-nf-nat6=y
+CONFIG_PACKAGE_kmod-nf-nathelper=y
+CONFIG_PACKAGE_kmod-nf-nathelper-extra=y
+CONFIG_PACKAGE_kmod-nft-compat=y
+CONFIG_PACKAGE_kmod-nls-base=y
+CONFIG_PACKAGE_kmod-nls-cp437=y
+CONFIG_PACKAGE_kmod-nls-iso8859-1=y
+CONFIG_PACKAGE_kmod-nls-utf8=y
+CONFIG_PACKAGE_kmod-nvme=y
+CONFIG_PACKAGE_kmod-oid-registry=y
+CONFIG_PACKAGE_kmod-phy-realtek=y
+CONFIG_PACKAGE_kmod-pppoa=y
+CONFIG_PACKAGE_kmod-pppol2tp=y
+CONFIG_PACKAGE_kmod-pptp=y
+CONFIG_PACKAGE_kmod-r8169=y
+CONFIG_PACKAGE_kmod-random-core=y
+CONFIG_PACKAGE_kmod-regmap-core=y
+CONFIG_PACKAGE_kmod-rtl8812au-ac=y
+CONFIG_PACKAGE_kmod-rtl8821ae=y
+CONFIG_PACKAGE_kmod-rtlwifi=y
+CONFIG_PACKAGE_kmod-rtlwifi-btcoexist=y
+CONFIG_PACKAGE_kmod-rtlwifi-pci=y
+CONFIG_PACKAGE_kmod-rtw88=y
+CONFIG_PACKAGE_kmod-rtw88-8723d=y
+CONFIG_PACKAGE_kmod-rtw88-8723de=y
+CONFIG_PACKAGE_kmod-rtw88-8821c=y
+CONFIG_PACKAGE_kmod-rtw88-8821ce=y
+CONFIG_PACKAGE_kmod-rtw88-8821cu=y
+CONFIG_PACKAGE_kmod-rtw88-8822b=y
+CONFIG_PACKAGE_kmod-rtw88-8822be=y
+CONFIG_PACKAGE_kmod-rtw88-8822bu=y
+CONFIG_PACKAGE_kmod-rtw88-8822c=y
+CONFIG_PACKAGE_kmod-rtw88-8822ce=y
+CONFIG_PACKAGE_kmod-rtw88-8822cu=y
+CONFIG_PACKAGE_kmod-rtw88-pci=y
+CONFIG_PACKAGE_kmod-rtw88-usb=y
+CONFIG_PACKAGE_kmod-rtw89=y
+CONFIG_PACKAGE_kmod-sched-cake=y
+CONFIG_PACKAGE_kmod-sched-core=y
+CONFIG_PACKAGE_kmod-scsi-core=y
+CONFIG_PACKAGE_kmod-tpm=y
+CONFIG_PACKAGE_kmod-tun=y
+CONFIG_PACKAGE_kmod-udptunnel4=y
+CONFIG_PACKAGE_kmod-udptunnel6=y
+CONFIG_PACKAGE_kmod-usb-core=y
+CONFIG_PACKAGE_kmod-usb-dwc2=y
+CONFIG_PACKAGE_kmod-usb-dwc3=y
+CONFIG_PACKAGE_kmod-usb-ehci=y
+CONFIG_PACKAGE_kmod-usb-gadget=y
+CONFIG_PACKAGE_kmod-usb-net=y
+CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
+CONFIG_PACKAGE_kmod-usb-net-cdc-ncm=y
+CONFIG_PACKAGE_kmod-usb-net-ipheth=y
+CONFIG_PACKAGE_kmod-usb-net-rndis=y
+CONFIG_PACKAGE_kmod-usb-net-rtl8152=y
+CONFIG_PACKAGE_kmod-usb-ohci=y
+CONFIG_PACKAGE_kmod-usb-printer=y
+CONFIG_PACKAGE_kmod-usb-roles=y
+CONFIG_PACKAGE_kmod-usb-storage=y
+CONFIG_PACKAGE_kmod-usb-storage-extras=y
+CONFIG_PACKAGE_kmod-usb-storage-uas=y
+CONFIG_PACKAGE_kmod-usb-xhci-hcd=y
+CONFIG_PACKAGE_kmod-usb2=y
+CONFIG_PACKAGE_kmod-usb2-pci=y
+CONFIG_PACKAGE_kmod-usb3=y
+CONFIG_PACKAGE_kmod-veth=y
+CONFIG_PACKAGE_kmod-vxlan=y
+CONFIG_PACKAGE_kmod-wireguard=y
+CONFIG_PACKAGE_libaio=y
+CONFIG_PACKAGE_libatomic=y
+CONFIG_PACKAGE_libattr=y
+CONFIG_PACKAGE_libavahi-client=y
+CONFIG_PACKAGE_libavahi-dbus-support=y
+CONFIG_PACKAGE_libbpf=y
+CONFIG_PACKAGE_libcap=y
+CONFIG_PACKAGE_libcap-ng=y
+CONFIG_PACKAGE_libcgroup=y
+CONFIG_PACKAGE_libdaemon=y
+CONFIG_PACKAGE_libdbus=y
+CONFIG_PACKAGE_libdevmapper=y
+CONFIG_PACKAGE_libelf=y
+CONFIG_PACKAGE_libevdev=y
+CONFIG_PACKAGE_libexpat=y
+CONFIG_PACKAGE_libfdisk=y
+CONFIG_PACKAGE_libffi=y
+CONFIG_PACKAGE_libfuse=y
+CONFIG_PACKAGE_libfuse3=y
+CONFIG_PACKAGE_libgmp=y
+CONFIG_PACKAGE_libgnutls=y
+CONFIG_PACKAGE_libical=y
+CONFIG_PACKAGE_libipset=y
+CONFIG_PACKAGE_libiptext=y
+CONFIG_PACKAGE_libiptext-nft=y
+CONFIG_PACKAGE_libiptext6=y
+CONFIG_PACKAGE_libiwinfo=y
+CONFIG_PACKAGE_libiwinfo-data=y
+CONFIG_PACKAGE_libkmod=y
+CONFIG_PACKAGE_libltdl=y
+CONFIG_PACKAGE_liblua=y
+CONFIG_PACKAGE_liblucihttp=y
+CONFIG_PACKAGE_liblucihttp-lua=y
+CONFIG_PACKAGE_liblucihttp-ucode=y
+CONFIG_PACKAGE_liblxc=y
+CONFIG_PACKAGE_liblz4=y
+CONFIG_PACKAGE_liblzma=y
+CONFIG_PACKAGE_liblzo=y
+CONFIG_PACKAGE_libmount=y
+CONFIG_PACKAGE_libncurses=y
+CONFIG_PACKAGE_libnetfilter-conntrack=y
+CONFIG_PACKAGE_libnettle=y
+CONFIG_PACKAGE_libnfnetlink=y
+CONFIG_PACKAGE_libopenssl=y
+CONFIG_PACKAGE_libopenssl-conf=y
+CONFIG_PACKAGE_libopenssl-legacy=y
+CONFIG_PACKAGE_libparted=y
+CONFIG_PACKAGE_libpcap=y
+CONFIG_PACKAGE_libpci=y
+CONFIG_PACKAGE_libpcre=y
+CONFIG_PACKAGE_libpcre2=y
+CONFIG_PACKAGE_libpopt=y
+CONFIG_PACKAGE_libqrencode=y
+CONFIG_PACKAGE_libreadline=y
+CONFIG_PACKAGE_librrd1=y
+CONFIG_PACKAGE_libseccomp=y
+CONFIG_PACKAGE_libsensors=y
+CONFIG_PACKAGE_libssh=y
+CONFIG_PACKAGE_libstdcpp=y
+CONFIG_PACKAGE_libsysfs=y
+CONFIG_PACKAGE_libtasn1=y
+CONFIG_PACKAGE_libtirpc=y
+CONFIG_PACKAGE_libubus-lua=y
+CONFIG_PACKAGE_libudev-zero=y
+CONFIG_PACKAGE_liburing=y
+CONFIG_PACKAGE_libusb-1.0=y
+CONFIG_PACKAGE_libuv=y
+CONFIG_PACKAGE_libwebsockets-full=y
+CONFIG_PACKAGE_libxtables=y
+CONFIG_PACKAGE_libzstd=y
+CONFIG_PACKAGE_linux-atm=y
+CONFIG_PACKAGE_lm-sensors=y
+CONFIG_PACKAGE_losetup=y
+CONFIG_PACKAGE_lsblk=y
+CONFIG_PACKAGE_lua=y
+CONFIG_PACKAGE_luci=y
+CONFIG_PACKAGE_luci-app-adblock=y
+CONFIG_PACKAGE_luci-app-diskman=y
+CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs=y
+CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk=y
+CONFIG_PACKAGE_luci-app-dockerman=y
+CONFIG_PACKAGE_luci-app-firewall=y
+CONFIG_PACKAGE_luci-app-irqbalance=y
+CONFIG_PACKAGE_luci-app-lxc=y
+CONFIG_PACKAGE_luci-app-nlbwmon=y
+CONFIG_PACKAGE_luci-app-openvpn=y
+CONFIG_PACKAGE_luci-app-opkg=y
+CONFIG_PACKAGE_luci-app-pbr=y
+CONFIG_PACKAGE_luci-app-samba4=y
+CONFIG_PACKAGE_luci-app-sqm=y
+CONFIG_PACKAGE_luci-app-statistics=y
+CONFIG_PACKAGE_luci-app-ttyd=y
+CONFIG_PACKAGE_luci-base=y
+CONFIG_PACKAGE_luci-compat=y
+CONFIG_PACKAGE_luci-lib-base=y
+CONFIG_PACKAGE_luci-lib-docker=y
+CONFIG_PACKAGE_luci-lib-ip=y
+CONFIG_PACKAGE_luci-lib-jsonc=y
+CONFIG_PACKAGE_luci-lib-nixio=y
+CONFIG_PACKAGE_luci-light=y
+CONFIG_PACKAGE_luci-lua-runtime=y
+CONFIG_PACKAGE_luci-mod-admin-full=y
+CONFIG_PACKAGE_luci-mod-network=y
+CONFIG_PACKAGE_luci-mod-status=y
+CONFIG_PACKAGE_luci-mod-system=y
+CONFIG_PACKAGE_luci-proto-ipv6=y
+CONFIG_PACKAGE_luci-proto-ppp=y
+CONFIG_PACKAGE_luci-proto-wireguard=y
+CONFIG_PACKAGE_luci-theme-bootstrap=y
+CONFIG_PACKAGE_lvm2=y
+CONFIG_PACKAGE_lxc=y
+CONFIG_PACKAGE_lxc-attach=y
+CONFIG_PACKAGE_lxc-auto=y
+CONFIG_PACKAGE_lxc-autostart=y
+CONFIG_PACKAGE_lxc-cgroup=y
+CONFIG_PACKAGE_lxc-checkconfig=y
+CONFIG_PACKAGE_lxc-common=y
+CONFIG_PACKAGE_lxc-config=y
+CONFIG_PACKAGE_lxc-configs=y
+CONFIG_PACKAGE_lxc-console=y
+CONFIG_PACKAGE_lxc-copy=y
+CONFIG_PACKAGE_lxc-create=y
+CONFIG_PACKAGE_lxc-destroy=y
+CONFIG_PACKAGE_lxc-device=y
+CONFIG_PACKAGE_lxc-execute=y
+CONFIG_PACKAGE_lxc-freeze=y
+CONFIG_PACKAGE_lxc-hooks=y
+CONFIG_PACKAGE_lxc-info=y
+CONFIG_PACKAGE_lxc-init=y
+CONFIG_PACKAGE_lxc-ls=y
+CONFIG_PACKAGE_lxc-monitor=y
+CONFIG_PACKAGE_lxc-monitord=y
+CONFIG_PACKAGE_lxc-snapshot=y
+CONFIG_PACKAGE_lxc-start=y
+CONFIG_PACKAGE_lxc-stop=y
+CONFIG_PACKAGE_lxc-templates=y
+CONFIG_PACKAGE_lxc-top=y
+CONFIG_PACKAGE_lxc-unfreeze=y
+CONFIG_PACKAGE_lxc-unprivileged=y
+CONFIG_PACKAGE_lxc-unshare=y
+CONFIG_PACKAGE_lxc-user-nic=y
+CONFIG_PACKAGE_lxc-usernsexec=y
+CONFIG_PACKAGE_lxc-wait=y
+CONFIG_PACKAGE_mmc-utils=y
+CONFIG_PACKAGE_mount-utils=y
+CONFIG_PACKAGE_mt7921bt-firmware=y
+CONFIG_PACKAGE_mt7922bt-firmware=y
+CONFIG_PACKAGE_musl-fts=y
+CONFIG_PACKAGE_nano=y
+CONFIG_PACKAGE_nlbwmon=y
+CONFIG_PACKAGE_ntfs-3g=y
+CONFIG_PACKAGE_openssl-util=y
+CONFIG_PACKAGE_openvpn-easy-rsa=y
+CONFIG_PACKAGE_openvpn-openssl=y
+CONFIG_PACKAGE_parted=y
+CONFIG_PACKAGE_pbr=y
+CONFIG_PACKAGE_pciids=y
+CONFIG_PACKAGE_pciutils=y
+CONFIG_PACKAGE_ppp-mod-pppoa=y
+CONFIG_PACKAGE_ppp-mod-pppol2tp=y
+CONFIG_PACKAGE_ppp-mod-pptp=y
+CONFIG_PACKAGE_pptpd=y
+CONFIG_PACKAGE_qrencode=y
+CONFIG_PACKAGE_r8152-firmware=y
+CONFIG_PACKAGE_r8169-firmware=y
+CONFIG_PACKAGE_realtek-bluetooth-firmware=y
+CONFIG_PACKAGE_resize2fs=y
+CONFIG_PACKAGE_resolveip=y
+CONFIG_PACKAGE_rpcd=y
+CONFIG_PACKAGE_rpcd-mod-file=y
+CONFIG_PACKAGE_rpcd-mod-iwinfo=y
+CONFIG_PACKAGE_rpcd-mod-luci=y
+CONFIG_PACKAGE_rpcd-mod-lxc=y
+CONFIG_PACKAGE_rpcd-mod-rrdns=y
+CONFIG_PACKAGE_rpcd-mod-ucode=y
+CONFIG_PACKAGE_rrdtool1=y
+CONFIG_PACKAGE_rtl8723bu-firmware=y
+CONFIG_PACKAGE_rtl8723de-firmware=y
+CONFIG_PACKAGE_rtl8821ae-firmware=y
+CONFIG_PACKAGE_rtl8821ce-firmware=y
+CONFIG_PACKAGE_rtl8822be-firmware=y
+CONFIG_PACKAGE_rtl8822ce-firmware=y
+CONFIG_PACKAGE_rtl8851be-firmware=y
+CONFIG_PACKAGE_rtl8852ae-firmware=y
+CONFIG_PACKAGE_rtl8852be-firmware=y
+CONFIG_PACKAGE_rtl8852ce-firmware=y
+CONFIG_PACKAGE_runc=y
+CONFIG_PACKAGE_samba4-libs=y
+CONFIG_PACKAGE_samba4-server=y
+CONFIG_PACKAGE_sfdisk=y
+CONFIG_PACKAGE_shadow=y
+CONFIG_PACKAGE_shadow-chage=y
+CONFIG_PACKAGE_shadow-chfn=y
+CONFIG_PACKAGE_shadow-chgpasswd=y
+CONFIG_PACKAGE_shadow-chpasswd=y
+CONFIG_PACKAGE_shadow-chsh=y
+CONFIG_PACKAGE_shadow-common=y
+CONFIG_PACKAGE_shadow-expiry=y
+CONFIG_PACKAGE_shadow-faillog=y
+CONFIG_PACKAGE_shadow-gpasswd=y
+CONFIG_PACKAGE_shadow-groupadd=y
+CONFIG_PACKAGE_shadow-groupdel=y
+CONFIG_PACKAGE_shadow-groupmems=y
+CONFIG_PACKAGE_shadow-groupmod=y
+CONFIG_PACKAGE_shadow-groups=y
+CONFIG_PACKAGE_shadow-grpck=y
+CONFIG_PACKAGE_shadow-grpconv=y
+CONFIG_PACKAGE_shadow-grpunconv=y
+CONFIG_PACKAGE_shadow-lastlog=y
+CONFIG_PACKAGE_shadow-login=y
+CONFIG_PACKAGE_shadow-logoutd=y
+CONFIG_PACKAGE_shadow-newgidmap=y
+CONFIG_PACKAGE_shadow-newgrp=y
+CONFIG_PACKAGE_shadow-newuidmap=y
+CONFIG_PACKAGE_shadow-newusers=y
+CONFIG_PACKAGE_shadow-nologin=y
+CONFIG_PACKAGE_shadow-passwd=y
+CONFIG_PACKAGE_shadow-pwck=y
+CONFIG_PACKAGE_shadow-pwconv=y
+CONFIG_PACKAGE_shadow-pwunconv=y
+CONFIG_PACKAGE_shadow-su=y
+CONFIG_PACKAGE_shadow-useradd=y
+CONFIG_PACKAGE_shadow-userdel=y
+CONFIG_PACKAGE_shadow-usermod=y
+CONFIG_PACKAGE_shadow-utils=y
+CONFIG_PACKAGE_shadow-vipw=y
+CONFIG_PACKAGE_smartmontools=y
+CONFIG_PACKAGE_smartmontools-drivedb=y
+CONFIG_PACKAGE_sqm-scripts=y
+CONFIG_PACKAGE_sqm-scripts-extra=y
+CONFIG_PACKAGE_squashfs-tools-mksquashfs=y
+CONFIG_PACKAGE_sysfsutils=y
+CONFIG_PACKAGE_tc-tiny=y
+CONFIG_PACKAGE_tcpdump-mini=y
+CONFIG_PACKAGE_terminfo=y
+CONFIG_PACKAGE_tini=y
+CONFIG_PACKAGE_ttyd=y
+CONFIG_PACKAGE_ucert-full=y
+CONFIG_PACKAGE_ucode-mod-html=y
+CONFIG_PACKAGE_ucode-mod-lua=y
+CONFIG_PACKAGE_ucode-mod-math=y
+CONFIG_PACKAGE_ucode-mod-nl80211=y
+CONFIG_PACKAGE_ucode-mod-rtnl=y
+CONFIG_PACKAGE_ucode-mod-uloop=y
+CONFIG_PACKAGE_uencrypt-openssl=y
+CONFIG_PACKAGE_uhttpd=y
+CONFIG_PACKAGE_uhttpd-mod-ubus=y
+CONFIG_PACKAGE_usb-modeswitch=y
+CONFIG_PACKAGE_usbutils=y
+CONFIG_PACKAGE_uuidd=y
+CONFIG_PACKAGE_vsftpd-tls=y
+CONFIG_PACKAGE_wget-ssl=y
+CONFIG_PACKAGE_wireguard-tools=y
+CONFIG_PACKAGE_wireless-regdb=y
+CONFIG_PACKAGE_wpad-openssl=y
+CONFIG_PACKAGE_wsdd2=y
+CONFIG_PACKAGE_xl2tpd=y
+CONFIG_PACKAGE_xtables-nft=y
+CONFIG_PACKAGE_zlib=y
+CONFIG_PARTED_READLINE=y
+CONFIG_SAMBA4_SERVER_AVAHI=y
+CONFIG_SAMBA4_SERVER_NETBIOS=y
+CONFIG_SAMBA4_SERVER_VFS=y
+CONFIG_SAMBA4_SERVER_WSDD2=y
+CONFIG_SQUASHFS_TOOLS_XZ_SUPPORT=y
+CONFIG_SQUASHFS_TOOLS_ZSTD_SUPPORT=y
+CONFIG_TARGET_ALL_PROFILES=y
+CONFIG_TARGET_OPTIONS=y
+# CONFIG_TARGET_ROOTFS_SQUASHFS is not set
+CONFIG_TARGET_ROOTFS_PARTSIZE=512
+CONFIG_ZSTD_OPTIMIZE_O3=y
+CONFIG_shadow-all=y
+# CONFIG_OPENVPN_openssl_ENABLE_SMALL is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_firefly_roc-rk3328-cc is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-neo3 is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c-plus is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6s is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_pine64_rockpro64 is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_xunlong_orangepi-5-plus is not set
diff --git a/.github/workflows/config.buildinfo3 b/.github/workflows/config.buildinfo3
new file mode 100644
index 0000000000..008e8f860c
--- /dev/null
+++ b/.github/workflows/config.buildinfo3
@@ -0,0 +1,688 @@
+CONFIG_TARGET_rockchip=y
+CONFIG_TARGET_rockchip_armv8=y
+CONFIG_TARGET_MULTI_PROFILE=y
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c-plus=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c-plus=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6s=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6s=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_xunlong_orangepi-5-plus=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_xunlong_orangepi-5-plus=""
+CONFIG_DEVEL=y
+CONFIG_BUSYBOX_CUSTOM=y
+CONFIG_TARGET_PER_DEVICE_ROOTFS=y
+CONFIG_ATH10K_LEDS=y
+CONFIG_ATH9K_HWRNG=y
+CONFIG_ATH_USER_REGD=y
+CONFIG_AUTOREMOVE=y
+CONFIG_BRCMFMAC_PCIE=y
+CONFIG_BRCMFMAC_SDIO=y
+CONFIG_BRCMFMAC_USB=y
+CONFIG_BUILD_LOG=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_GETOPT_LONG=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_SEAMLESS_XZ=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_TAR_LONG_OPTIONS=y
+CONFIG_BUSYBOX_CONFIG_GETOPT=y
+CONFIG_BUSYBOX_CONFIG_MOUNTPOINT=y
+CONFIG_BUSYBOX_CONFIG_UNXZ=y
+CONFIG_BUSYBOX_CONFIG_XZ=y
+CONFIG_DOCKER_CGROUP_OPTIONS=y
+CONFIG_DOCKER_CHECK_CONFIG=y
+CONFIG_DOCKER_NET_ENCRYPT=y
+CONFIG_DOCKER_NET_MACVLAN=y
+CONFIG_DOCKER_NET_OVERLAY=y
+CONFIG_DOCKER_NET_TFTP=y
+CONFIG_DOCKER_OPTIONAL_FEATURES=y
+CONFIG_DOCKER_STO_BTRFS=y
+CONFIG_DOCKER_STO_EXT4=y
+CONFIG_DRIVER_11AC_SUPPORT=y
+CONFIG_DRIVER_11AX_SUPPORT=y
+CONFIG_GNUTLS_ALPN=y
+CONFIG_GNUTLS_ANON=y
+CONFIG_GNUTLS_DTLS_SRTP=y
+CONFIG_GNUTLS_HEARTBEAT=y
+CONFIG_GNUTLS_OCSP=y
+CONFIG_GNUTLS_PSK=y
+CONFIG_HTOP_LMSENSORS=y
+CONFIG_KERNEL_ARM_PMU=y
+CONFIG_KERNEL_BTRFS_FS_POSIX_ACL=y
+CONFIG_KERNEL_CFQ_GROUP_IOSCHED=y
+CONFIG_KERNEL_CGROUP_DEVICE=y
+CONFIG_KERNEL_CGROUP_FREEZER=y
+CONFIG_KERNEL_CGROUP_HUGETLB=y
+CONFIG_KERNEL_CGROUP_NET_PRIO=y
+CONFIG_KERNEL_CGROUP_PERF=y
+CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
+CONFIG_KERNEL_EXT4_FS_SECURITY=y
+CONFIG_KERNEL_FS_POSIX_ACL=y
+CONFIG_KERNEL_HUGETLBFS=y
+CONFIG_KERNEL_HUGETLB_PAGE=y
+CONFIG_KERNEL_MEMCG_SWAP_ENABLED=y
+CONFIG_KERNEL_NET_CLS_CGROUP=y
+CONFIG_KERNEL_PAGE_POOL=y
+CONFIG_KERNEL_PERF_EVENTS=y
+CONFIG_KERNEL_RELAY=y
+CONFIG_KERNEL_TRANSPARENT_HUGEPAGE=y
+CONFIG_KERNEL_TRANSPARENT_HUGEPAGE_ALWAYS=y
+CONFIG_LIBCURL_COOKIES=y
+CONFIG_LIBCURL_FILE=y
+CONFIG_LIBCURL_FTP=y
+CONFIG_LIBCURL_HTTP=y
+CONFIG_LIBCURL_MBEDTLS=y
+CONFIG_LIBCURL_NGHTTP2=y
+CONFIG_LIBCURL_NO_SMB="!"
+CONFIG_LIBCURL_PROXY=y
+CONFIG_LIBCURL_UNIX_SOCKETS=y
+CONFIG_LXC_BUSYBOX_OPTIONS=y
+CONFIG_LXC_KERNEL_OPTIONS=y
+CONFIG_LXC_NETWORKING=y
+CONFIG_LXC_SECCOMP=y
+CONFIG_OPENSSL_ENGINE=y
+CONFIG_OPENSSL_ENGINE_BUILTIN=y
+CONFIG_OPENSSL_ENGINE_BUILTIN_DEVCRYPTO=y
+CONFIG_OPENSSL_OPTIMIZE_SPEED=y
+CONFIG_OPENSSL_WITH_ASM=y
+CONFIG_OPENSSL_WITH_CHACHA_POLY1305=y
+CONFIG_OPENSSL_WITH_CMS=y
+CONFIG_OPENSSL_WITH_DEPRECATED=y
+CONFIG_OPENSSL_WITH_ERROR_MESSAGES=y
+CONFIG_OPENSSL_WITH_IDEA=y
+CONFIG_OPENSSL_WITH_MDC2=y
+CONFIG_OPENSSL_WITH_PSK=y
+CONFIG_OPENSSL_WITH_SEED=y
+CONFIG_OPENSSL_WITH_SRP=y
+CONFIG_OPENSSL_WITH_TLS13=y
+CONFIG_OPENSSL_WITH_WHIRLPOOL=y
+CONFIG_OPENVPN_openssl_ENABLE_FRAGMENT=y
+CONFIG_OPENVPN_openssl_ENABLE_LZ4=y
+CONFIG_OPENVPN_openssl_ENABLE_LZO=y
+CONFIG_OPENVPN_openssl_ENABLE_PORT_SHARE=y
+CONFIG_PACKAGE_ATH_DFS=y
+CONFIG_PACKAGE_MAC80211_DEBUGFS=y
+CONFIG_PACKAGE_MAC80211_MESH=y
+CONFIG_PACKAGE_NTFS-3G_HAS_PROBE=y
+CONFIG_PACKAGE_TAR_BZIP2=y
+CONFIG_PACKAGE_TAR_GZIP=y
+CONFIG_PACKAGE_TAR_XZ=y
+CONFIG_PACKAGE_TAR_ZSTD=y
+CONFIG_PACKAGE_adb=y
+CONFIG_PACKAGE_adblock=y
+CONFIG_PACKAGE_arp-scan=y
+CONFIG_PACKAGE_arp-scan-database=y
+CONFIG_PACKAGE_ath10k-firmware-qca6174=y
+CONFIG_PACKAGE_atop=y
+CONFIG_PACKAGE_attr=y
+CONFIG_PACKAGE_avahi-dbus-daemon=y
+CONFIG_PACKAGE_bash=y
+CONFIG_PACKAGE_blkdiscard=y
+CONFIG_PACKAGE_blkid=y
+CONFIG_PACKAGE_block-mount=y
+CONFIG_PACKAGE_blockd=y
+CONFIG_PACKAGE_blockdev=y
+CONFIG_PACKAGE_bluez-daemon=y
+CONFIG_PACKAGE_bluez-libs=y
+CONFIG_PACKAGE_bluez-tools=y
+CONFIG_PACKAGE_bluez-utils=y
+CONFIG_PACKAGE_bluez-utils-extra=y
+CONFIG_PACKAGE_brcmfmac-firmware-43456-sdio=m
+CONFIG_PACKAGE_brcmfmac-firmware-43456-sdio-rockpi-4=m
+CONFIG_PACKAGE_brcmfmac-firmware-usb=m
+CONFIG_PACKAGE_btop=y
+CONFIG_PACKAGE_btrfs-progs=y
+CONFIG_PACKAGE_bzip2=y
+CONFIG_PACKAGE_ca-certificates=y
+CONFIG_PACKAGE_ccrypt=y
+CONFIG_PACKAGE_certtool=y
+CONFIG_PACKAGE_cgi-io=y
+CONFIG_PACKAGE_cgroupfs-mount=y
+CONFIG_PACKAGE_collectd=y
+CONFIG_PACKAGE_collectd-mod-conntrack=y
+CONFIG_PACKAGE_collectd-mod-cpu=y
+CONFIG_PACKAGE_collectd-mod-cpufreq=y
+CONFIG_PACKAGE_collectd-mod-interface=y
+CONFIG_PACKAGE_collectd-mod-irq=y
+CONFIG_PACKAGE_collectd-mod-iwinfo=y
+CONFIG_PACKAGE_collectd-mod-load=y
+CONFIG_PACKAGE_collectd-mod-memory=y
+CONFIG_PACKAGE_collectd-mod-network=y
+CONFIG_PACKAGE_collectd-mod-rrdtool=y
+CONFIG_PACKAGE_collectd-mod-sensors=y
+CONFIG_PACKAGE_collectd-mod-thermal=y
+CONFIG_PACKAGE_containerd=y
+CONFIG_PACKAGE_coreutils=y
+CONFIG_PACKAGE_coreutils-sort=y
+CONFIG_PACKAGE_cryptsetup=y
+CONFIG_PACKAGE_cryptsetup-ssh=y
+CONFIG_PACKAGE_dbus=y
+CONFIG_PACKAGE_dnsmasq=m
+CONFIG_PACKAGE_dnsmasq-full=y
+CONFIG_PACKAGE_dnsmasq_full_auth=y
+CONFIG_PACKAGE_dnsmasq_full_conntrack=y
+CONFIG_PACKAGE_dnsmasq_full_dhcp=y
+CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
+CONFIG_PACKAGE_dnsmasq_full_dnssec=y
+CONFIG_PACKAGE_dnsmasq_full_nftset=y
+CONFIG_PACKAGE_dnsmasq_full_noid=y
+CONFIG_PACKAGE_dnsmasq_full_tftp=y
+CONFIG_PACKAGE_docker=y
+CONFIG_PACKAGE_docker-compose=y
+CONFIG_PACKAGE_dockerd=y
+CONFIG_PACKAGE_ethtool-full=y
+CONFIG_PACKAGE_exfat-fsck=y
+CONFIG_PACKAGE_exfat-mkfs=y
+CONFIG_PACKAGE_f2fs-tools=y
+CONFIG_PACKAGE_f2fsck=y
+CONFIG_PACKAGE_fdisk=y
+CONFIG_PACKAGE_findfs=y
+CONFIG_PACKAGE_fixparts=y
+CONFIG_PACKAGE_flock=y
+CONFIG_PACKAGE_fuse-utils=y
+CONFIG_PACKAGE_fuse3-utils=y
+CONFIG_PACKAGE_gdisk=y
+CONFIG_PACKAGE_getopt=y
+CONFIG_PACKAGE_glib2=y
+CONFIG_PACKAGE_gnupg=y
+CONFIG_PACKAGE_gnupg-utils=y
+CONFIG_PACKAGE_gnutls-utils=y
+CONFIG_PACKAGE_hdparm=y
+CONFIG_PACKAGE_hostapd-common=y
+CONFIG_PACKAGE_htop=y
+CONFIG_PACKAGE_hwclock=y
+CONFIG_PACKAGE_ip-full=y
+CONFIG_PACKAGE_ip6tables-nft=y
+CONFIG_PACKAGE_iperf3-ssl=y
+CONFIG_PACKAGE_ipset=y
+CONFIG_PACKAGE_iptables-mod-extra=y
+CONFIG_PACKAGE_iptables-mod-ipopt=y
+CONFIG_PACKAGE_iptables-nft=y
+CONFIG_PACKAGE_irqbalance=y
+CONFIG_PACKAGE_iw-full=y
+CONFIG_PACKAGE_iwinfo=y
+CONFIG_PACKAGE_kmod-asn1-decoder=y
+CONFIG_PACKAGE_kmod-asn1-encoder=y
+CONFIG_PACKAGE_kmod-ata-ahci=y
+CONFIG_PACKAGE_kmod-ata-core=y
+CONFIG_PACKAGE_kmod-ata-dwc=y
+CONFIG_PACKAGE_kmod-ath=y
+CONFIG_PACKAGE_kmod-ath10k=y
+CONFIG_PACKAGE_kmod-ath9k=y
+CONFIG_PACKAGE_kmod-ath9k-common=y
+CONFIG_PACKAGE_kmod-atm=y
+CONFIG_PACKAGE_kmod-bluetooth=y
+CONFIG_PACKAGE_kmod-br-netfilter=y
+CONFIG_PACKAGE_kmod-brcmfmac=m
+CONFIG_PACKAGE_kmod-brcmutil=m
+CONFIG_PACKAGE_kmod-cdrom=y
+CONFIG_PACKAGE_kmod-cfg80211=y
+CONFIG_PACKAGE_kmod-crypto-acompress=y
+CONFIG_PACKAGE_kmod-crypto-aead=y
+CONFIG_PACKAGE_kmod-crypto-arc4=y
+CONFIG_PACKAGE_kmod-crypto-authenc=y
+CONFIG_PACKAGE_kmod-crypto-cbc=y
+CONFIG_PACKAGE_kmod-crypto-ccm=y
+CONFIG_PACKAGE_kmod-crypto-cmac=y
+CONFIG_PACKAGE_kmod-crypto-crc32=y
+CONFIG_PACKAGE_kmod-crypto-ctr=y
+CONFIG_PACKAGE_kmod-crypto-deflate=y
+CONFIG_PACKAGE_kmod-crypto-des=y
+CONFIG_PACKAGE_kmod-crypto-ecb=y
+CONFIG_PACKAGE_kmod-crypto-ecdh=y
+CONFIG_PACKAGE_kmod-crypto-echainiv=y
+CONFIG_PACKAGE_kmod-crypto-gcm=y
+CONFIG_PACKAGE_kmod-crypto-gf128=y
+CONFIG_PACKAGE_kmod-crypto-ghash=y
+CONFIG_PACKAGE_kmod-crypto-hmac=y
+CONFIG_PACKAGE_kmod-crypto-kpp=y
+CONFIG_PACKAGE_kmod-crypto-lib-chacha20=y
+CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=y
+CONFIG_PACKAGE_kmod-crypto-lib-curve25519=y
+CONFIG_PACKAGE_kmod-crypto-lib-poly1305=y
+CONFIG_PACKAGE_kmod-crypto-manager=y
+CONFIG_PACKAGE_kmod-crypto-md5=y
+CONFIG_PACKAGE_kmod-crypto-misc=y
+CONFIG_PACKAGE_kmod-crypto-null=y
+CONFIG_PACKAGE_kmod-crypto-rng=y
+CONFIG_PACKAGE_kmod-crypto-seqiv=y
+CONFIG_PACKAGE_kmod-crypto-sha1=y
+CONFIG_PACKAGE_kmod-crypto-sha256=y
+CONFIG_PACKAGE_kmod-crypto-sha512=y
+CONFIG_PACKAGE_kmod-crypto-user=y
+CONFIG_PACKAGE_kmod-crypto-xts=y
+CONFIG_PACKAGE_kmod-cryptodev=y
+CONFIG_PACKAGE_kmod-dax=y
+CONFIG_PACKAGE_kmod-dm=y
+CONFIG_PACKAGE_kmod-dummy=y
+CONFIG_PACKAGE_kmod-fs-autofs4=y
+CONFIG_PACKAGE_kmod-fs-btrfs=y
+CONFIG_PACKAGE_kmod-fs-exfat=y
+CONFIG_PACKAGE_kmod-fs-exportfs=y
+CONFIG_PACKAGE_kmod-fs-ext4=y
+CONFIG_PACKAGE_kmod-fs-f2fs=y
+CONFIG_PACKAGE_kmod-fs-hfs=y
+CONFIG_PACKAGE_kmod-fs-hfsplus=y
+CONFIG_PACKAGE_kmod-fs-ntfs3=y
+CONFIG_PACKAGE_kmod-fs-squashfs=y
+CONFIG_PACKAGE_kmod-fs-vfat=y
+CONFIG_PACKAGE_kmod-fs-xfs=y
+CONFIG_PACKAGE_kmod-fuse=y
+CONFIG_PACKAGE_kmod-gre=y
+CONFIG_PACKAGE_kmod-hid=y
+CONFIG_PACKAGE_kmod-hwmon-gpiofan=y
+CONFIG_PACKAGE_kmod-hwmon-pwmfan=y
+CONFIG_PACKAGE_kmod-i2c-core=y
+CONFIG_PACKAGE_kmod-ifb=y
+CONFIG_PACKAGE_kmod-ikconfig=y
+CONFIG_PACKAGE_kmod-input-core=y
+CONFIG_PACKAGE_kmod-input-evdev=y
+CONFIG_PACKAGE_kmod-ip6tables=y
+CONFIG_PACKAGE_kmod-ipsec=y
+CONFIG_PACKAGE_kmod-ipt-conntrack=y
+CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
+CONFIG_PACKAGE_kmod-ipt-core=y
+CONFIG_PACKAGE_kmod-ipt-extra=y
+CONFIG_PACKAGE_kmod-ipt-ipopt=y
+CONFIG_PACKAGE_kmod-ipt-ipset=y
+CONFIG_PACKAGE_kmod-ipt-nat=y
+CONFIG_PACKAGE_kmod-ipt-nat6=y
+CONFIG_PACKAGE_kmod-ipt-physdev=y
+CONFIG_PACKAGE_kmod-iptunnel=y
+CONFIG_PACKAGE_kmod-keys-encrypted=y
+CONFIG_PACKAGE_kmod-keys-trusted=y
+CONFIG_PACKAGE_kmod-l2tp=y
+CONFIG_PACKAGE_kmod-lib-crc16=y
+CONFIG_PACKAGE_kmod-lib-lzo=y
+CONFIG_PACKAGE_kmod-lib-raid6=y
+CONFIG_PACKAGE_kmod-lib-textsearch=y
+CONFIG_PACKAGE_kmod-lib-xor=y
+CONFIG_PACKAGE_kmod-lib-zlib-deflate=y
+CONFIG_PACKAGE_kmod-lib-zlib-inflate=y
+CONFIG_PACKAGE_kmod-lib-zstd=y
+CONFIG_PACKAGE_kmod-libphy=y
+CONFIG_PACKAGE_kmod-mac80211=y
+CONFIG_PACKAGE_kmod-macvlan=y
+CONFIG_PACKAGE_kmod-mdio-devres=y
+CONFIG_PACKAGE_kmod-mii=y
+CONFIG_PACKAGE_kmod-mmc=m
+CONFIG_PACKAGE_kmod-mppe=y
+CONFIG_PACKAGE_kmod-mt76-connac=y
+CONFIG_PACKAGE_kmod-mt76-core=y
+CONFIG_PACKAGE_kmod-mt76-usb=y
+CONFIG_PACKAGE_kmod-mt76x02-common=y
+CONFIG_PACKAGE_kmod-mt76x02-usb=y
+CONFIG_PACKAGE_kmod-mt76x2-common=y
+CONFIG_PACKAGE_kmod-mt76x2u=y
+CONFIG_PACKAGE_kmod-mt7915-firmware=y
+CONFIG_PACKAGE_kmod-mt7915e=y
+CONFIG_PACKAGE_kmod-mt7916-firmware=y
+CONFIG_PACKAGE_kmod-mt7921-common=y
+CONFIG_PACKAGE_kmod-mt7921-firmware=y
+CONFIG_PACKAGE_kmod-mt7921e=y
+CONFIG_PACKAGE_kmod-mt7921u=y
+CONFIG_PACKAGE_kmod-mt7922-firmware=y
+CONFIG_PACKAGE_kmod-mt792x-common=y
+CONFIG_PACKAGE_kmod-mt792x-usb=y
+CONFIG_PACKAGE_kmod-nf-conncount=y
+CONFIG_PACKAGE_kmod-nf-conntrack-netlink=y
+CONFIG_PACKAGE_kmod-nf-ipt=y
+CONFIG_PACKAGE_kmod-nf-ipt6=y
+CONFIG_PACKAGE_kmod-nf-ipvs=y
+CONFIG_PACKAGE_kmod-nf-nat6=y
+CONFIG_PACKAGE_kmod-nf-nathelper=y
+CONFIG_PACKAGE_kmod-nf-nathelper-extra=y
+CONFIG_PACKAGE_kmod-nft-compat=y
+CONFIG_PACKAGE_kmod-nls-base=y
+CONFIG_PACKAGE_kmod-nls-cp437=y
+CONFIG_PACKAGE_kmod-nls-iso8859-1=y
+CONFIG_PACKAGE_kmod-nls-utf8=y
+CONFIG_PACKAGE_kmod-nvme=y
+CONFIG_PACKAGE_kmod-oid-registry=y
+CONFIG_PACKAGE_kmod-phy-realtek=y
+CONFIG_PACKAGE_kmod-pppoa=y
+CONFIG_PACKAGE_kmod-pppol2tp=y
+CONFIG_PACKAGE_kmod-pptp=y
+CONFIG_PACKAGE_kmod-r8169=y
+CONFIG_PACKAGE_kmod-random-core=y
+CONFIG_PACKAGE_kmod-regmap-core=y
+CONFIG_PACKAGE_kmod-rtl8812au-ac=y
+CONFIG_PACKAGE_kmod-rtl8821ae=y
+CONFIG_PACKAGE_kmod-rtlwifi=y
+CONFIG_PACKAGE_kmod-rtlwifi-btcoexist=y
+CONFIG_PACKAGE_kmod-rtlwifi-pci=y
+CONFIG_PACKAGE_kmod-rtw88=y
+CONFIG_PACKAGE_kmod-rtw88-8723d=y
+CONFIG_PACKAGE_kmod-rtw88-8723de=y
+CONFIG_PACKAGE_kmod-rtw88-8821c=y
+CONFIG_PACKAGE_kmod-rtw88-8821ce=y
+CONFIG_PACKAGE_kmod-rtw88-8821cu=y
+CONFIG_PACKAGE_kmod-rtw88-8822b=y
+CONFIG_PACKAGE_kmod-rtw88-8822be=y
+CONFIG_PACKAGE_kmod-rtw88-8822bu=y
+CONFIG_PACKAGE_kmod-rtw88-8822c=y
+CONFIG_PACKAGE_kmod-rtw88-8822ce=y
+CONFIG_PACKAGE_kmod-rtw88-8822cu=y
+CONFIG_PACKAGE_kmod-rtw88-pci=y
+CONFIG_PACKAGE_kmod-rtw88-usb=y
+CONFIG_PACKAGE_kmod-rtw89=y
+CONFIG_PACKAGE_kmod-sched-cake=y
+CONFIG_PACKAGE_kmod-sched-core=y
+CONFIG_PACKAGE_kmod-scsi-core=y
+CONFIG_PACKAGE_kmod-tpm=y
+CONFIG_PACKAGE_kmod-tun=y
+CONFIG_PACKAGE_kmod-udptunnel4=y
+CONFIG_PACKAGE_kmod-udptunnel6=y
+CONFIG_PACKAGE_kmod-usb-core=y
+CONFIG_PACKAGE_kmod-usb-dwc2=y
+CONFIG_PACKAGE_kmod-usb-dwc3=y
+CONFIG_PACKAGE_kmod-usb-ehci=y
+CONFIG_PACKAGE_kmod-usb-gadget=y
+CONFIG_PACKAGE_kmod-usb-net=y
+CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
+CONFIG_PACKAGE_kmod-usb-net-cdc-ncm=y
+CONFIG_PACKAGE_kmod-usb-net-ipheth=y
+CONFIG_PACKAGE_kmod-usb-net-rndis=y
+CONFIG_PACKAGE_kmod-usb-net-rtl8152=y
+CONFIG_PACKAGE_kmod-usb-ohci=y
+CONFIG_PACKAGE_kmod-usb-printer=y
+CONFIG_PACKAGE_kmod-usb-roles=y
+CONFIG_PACKAGE_kmod-usb-storage=y
+CONFIG_PACKAGE_kmod-usb-storage-extras=y
+CONFIG_PACKAGE_kmod-usb-storage-uas=y
+CONFIG_PACKAGE_kmod-usb-xhci-hcd=y
+CONFIG_PACKAGE_kmod-usb2=y
+CONFIG_PACKAGE_kmod-usb2-pci=y
+CONFIG_PACKAGE_kmod-usb3=y
+CONFIG_PACKAGE_kmod-veth=y
+CONFIG_PACKAGE_kmod-vxlan=y
+CONFIG_PACKAGE_kmod-wireguard=y
+CONFIG_PACKAGE_libaio=y
+CONFIG_PACKAGE_libatomic=y
+CONFIG_PACKAGE_libattr=y
+CONFIG_PACKAGE_libavahi-client=y
+CONFIG_PACKAGE_libavahi-dbus-support=y
+CONFIG_PACKAGE_libbpf=y
+CONFIG_PACKAGE_libbz2=y
+CONFIG_PACKAGE_libcap=y
+CONFIG_PACKAGE_libcap-ng=y
+CONFIG_PACKAGE_libcurl=y
+CONFIG_PACKAGE_libdaemon=y
+CONFIG_PACKAGE_libdbus=y
+CONFIG_PACKAGE_libdevmapper=y
+CONFIG_PACKAGE_libelf=y
+CONFIG_PACKAGE_libevdev=y
+CONFIG_PACKAGE_libexpat=y
+CONFIG_PACKAGE_libfdisk=y
+CONFIG_PACKAGE_libffi=y
+CONFIG_PACKAGE_libfuse=y
+CONFIG_PACKAGE_libfuse3=y
+CONFIG_PACKAGE_libgmp=y
+CONFIG_PACKAGE_libgnutls=y
+CONFIG_PACKAGE_libical=y
+CONFIG_PACKAGE_libipset=y
+CONFIG_PACKAGE_libiptext=y
+CONFIG_PACKAGE_libiptext-nft=y
+CONFIG_PACKAGE_libiptext6=y
+CONFIG_PACKAGE_libiwinfo=y
+CONFIG_PACKAGE_libiwinfo-data=y
+CONFIG_PACKAGE_libkmod=y
+CONFIG_PACKAGE_libltdl=y
+CONFIG_PACKAGE_liblua=y
+CONFIG_PACKAGE_liblucihttp=y
+CONFIG_PACKAGE_liblucihttp-lua=y
+CONFIG_PACKAGE_liblucihttp-ucode=y
+CONFIG_PACKAGE_liblxc=y
+CONFIG_PACKAGE_liblz4=y
+CONFIG_PACKAGE_liblzma=y
+CONFIG_PACKAGE_liblzo=y
+CONFIG_PACKAGE_libmount=y
+CONFIG_PACKAGE_libncurses=y
+CONFIG_PACKAGE_libnetfilter-conntrack=y
+CONFIG_PACKAGE_libnettle=y
+CONFIG_PACKAGE_libnfnetlink=y
+CONFIG_PACKAGE_libnghttp2=y
+CONFIG_PACKAGE_libopenssl=y
+CONFIG_PACKAGE_libopenssl-conf=y
+CONFIG_PACKAGE_libopenssl-legacy=y
+CONFIG_PACKAGE_libparted=y
+CONFIG_PACKAGE_libpcap=y
+CONFIG_PACKAGE_libpci=y
+CONFIG_PACKAGE_libpcre=y
+CONFIG_PACKAGE_libpcre2=y
+CONFIG_PACKAGE_libpopt=y
+CONFIG_PACKAGE_libqrencode=y
+CONFIG_PACKAGE_libreadline=y
+CONFIG_PACKAGE_librrd1=y
+CONFIG_PACKAGE_libseccomp=y
+CONFIG_PACKAGE_libsensors=y
+CONFIG_PACKAGE_libssh=y
+CONFIG_PACKAGE_libstdcpp=y
+CONFIG_PACKAGE_libsysfs=y
+CONFIG_PACKAGE_libtasn1=y
+CONFIG_PACKAGE_libtirpc=y
+CONFIG_PACKAGE_libubus-lua=y
+CONFIG_PACKAGE_libudev-zero=y
+CONFIG_PACKAGE_liburing=y
+CONFIG_PACKAGE_libusb-1.0=y
+CONFIG_PACKAGE_libuv=y
+CONFIG_PACKAGE_libwebsockets-full=y
+CONFIG_PACKAGE_libxtables=y
+CONFIG_PACKAGE_libzstd=y
+CONFIG_PACKAGE_linux-atm=y
+CONFIG_PACKAGE_lm-sensors=y
+CONFIG_PACKAGE_losetup=y
+CONFIG_PACKAGE_lsblk=y
+CONFIG_PACKAGE_lua=y
+CONFIG_PACKAGE_luci=y
+CONFIG_PACKAGE_luci-app-adblock=y
+CONFIG_PACKAGE_luci-app-diskman=y
+CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs=y
+CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk=y
+CONFIG_PACKAGE_luci-app-dockerman=y
+CONFIG_PACKAGE_luci-app-firewall=y
+CONFIG_PACKAGE_luci-app-irqbalance=y
+CONFIG_PACKAGE_luci-app-lxc=y
+CONFIG_PACKAGE_luci-app-nlbwmon=y
+CONFIG_PACKAGE_luci-app-openvpn=y
+CONFIG_PACKAGE_luci-app-opkg=y
+CONFIG_PACKAGE_luci-app-pbr=y
+CONFIG_PACKAGE_luci-app-samba4=y
+CONFIG_PACKAGE_luci-app-sqm=y
+CONFIG_PACKAGE_luci-app-statistics=y
+CONFIG_PACKAGE_luci-app-ttyd=y
+CONFIG_PACKAGE_luci-base=y
+CONFIG_PACKAGE_luci-compat=y
+CONFIG_PACKAGE_luci-lib-base=y
+CONFIG_PACKAGE_luci-lib-docker=y
+CONFIG_PACKAGE_luci-lib-ip=y
+CONFIG_PACKAGE_luci-lib-jsonc=y
+CONFIG_PACKAGE_luci-lib-nixio=y
+CONFIG_PACKAGE_luci-light=y
+CONFIG_PACKAGE_luci-lua-runtime=y
+CONFIG_PACKAGE_luci-mod-admin-full=y
+CONFIG_PACKAGE_luci-mod-network=y
+CONFIG_PACKAGE_luci-mod-status=y
+CONFIG_PACKAGE_luci-mod-system=y
+CONFIG_PACKAGE_luci-proto-ipv6=y
+CONFIG_PACKAGE_luci-proto-ppp=y
+CONFIG_PACKAGE_luci-proto-wireguard=y
+CONFIG_PACKAGE_luci-theme-bootstrap=y
+CONFIG_PACKAGE_lvm2=y
+CONFIG_PACKAGE_lxc=y
+CONFIG_PACKAGE_lxc-attach=y
+CONFIG_PACKAGE_lxc-auto=y
+CONFIG_PACKAGE_lxc-autostart=y
+CONFIG_PACKAGE_lxc-cgroup=y
+CONFIG_PACKAGE_lxc-checkconfig=y
+CONFIG_PACKAGE_lxc-common=y
+CONFIG_PACKAGE_lxc-config=y
+CONFIG_PACKAGE_lxc-configs=y
+CONFIG_PACKAGE_lxc-console=y
+CONFIG_PACKAGE_lxc-copy=y
+CONFIG_PACKAGE_lxc-create=y
+CONFIG_PACKAGE_lxc-destroy=y
+CONFIG_PACKAGE_lxc-device=y
+CONFIG_PACKAGE_lxc-execute=y
+CONFIG_PACKAGE_lxc-freeze=y
+CONFIG_PACKAGE_lxc-hooks=y
+CONFIG_PACKAGE_lxc-info=y
+CONFIG_PACKAGE_lxc-init=y
+CONFIG_PACKAGE_lxc-ls=y
+CONFIG_PACKAGE_lxc-monitor=y
+CONFIG_PACKAGE_lxc-monitord=y
+CONFIG_PACKAGE_lxc-snapshot=y
+CONFIG_PACKAGE_lxc-start=y
+CONFIG_PACKAGE_lxc-stop=y
+CONFIG_PACKAGE_lxc-templates=y
+CONFIG_PACKAGE_lxc-top=y
+CONFIG_PACKAGE_lxc-unfreeze=y
+CONFIG_PACKAGE_lxc-unprivileged=y
+CONFIG_PACKAGE_lxc-unshare=y
+CONFIG_PACKAGE_lxc-user-nic=y
+CONFIG_PACKAGE_lxc-usernsexec=y
+CONFIG_PACKAGE_lxc-wait=y
+CONFIG_PACKAGE_mmc-utils=y
+CONFIG_PACKAGE_mount-utils=y
+CONFIG_PACKAGE_mt7921bt-firmware=y
+CONFIG_PACKAGE_mt7922bt-firmware=y
+CONFIG_PACKAGE_nano=y
+CONFIG_PACKAGE_nlbwmon=y
+CONFIG_PACKAGE_ntfs-3g=y
+CONFIG_PACKAGE_openssl-util=y
+CONFIG_PACKAGE_openvpn-easy-rsa=y
+CONFIG_PACKAGE_openvpn-openssl=y
+CONFIG_PACKAGE_parted=y
+CONFIG_PACKAGE_pbr=y
+CONFIG_PACKAGE_pciids=y
+CONFIG_PACKAGE_pciutils=y
+CONFIG_PACKAGE_ppp-mod-pppoa=y
+CONFIG_PACKAGE_ppp-mod-pppol2tp=y
+CONFIG_PACKAGE_ppp-mod-pptp=y
+CONFIG_PACKAGE_pptpd=y
+CONFIG_PACKAGE_qrencode=y
+CONFIG_PACKAGE_r8152-firmware=y
+CONFIG_PACKAGE_r8169-firmware=y
+CONFIG_PACKAGE_realtek-bluetooth-firmware=y
+CONFIG_PACKAGE_resize2fs=y
+CONFIG_PACKAGE_resolveip=y
+CONFIG_PACKAGE_rpcd=y
+CONFIG_PACKAGE_rpcd-mod-file=y
+CONFIG_PACKAGE_rpcd-mod-iwinfo=y
+CONFIG_PACKAGE_rpcd-mod-luci=y
+CONFIG_PACKAGE_rpcd-mod-lxc=y
+CONFIG_PACKAGE_rpcd-mod-rrdns=y
+CONFIG_PACKAGE_rpcd-mod-ucode=y
+CONFIG_PACKAGE_rrdtool1=y
+CONFIG_PACKAGE_rtl8723bu-firmware=y
+CONFIG_PACKAGE_rtl8723de-firmware=y
+CONFIG_PACKAGE_rtl8821ae-firmware=y
+CONFIG_PACKAGE_rtl8821ce-firmware=y
+CONFIG_PACKAGE_rtl8822be-firmware=y
+CONFIG_PACKAGE_rtl8822ce-firmware=y
+CONFIG_PACKAGE_rtl8851be-firmware=y
+CONFIG_PACKAGE_rtl8852ae-firmware=y
+CONFIG_PACKAGE_rtl8852be-firmware=y
+CONFIG_PACKAGE_rtl8852ce-firmware=y
+CONFIG_PACKAGE_runc=y
+CONFIG_PACKAGE_samba4-libs=y
+CONFIG_PACKAGE_samba4-server=y
+CONFIG_PACKAGE_sfdisk=y
+CONFIG_PACKAGE_shadow=y
+CONFIG_PACKAGE_shadow-chage=y
+CONFIG_PACKAGE_shadow-chfn=y
+CONFIG_PACKAGE_shadow-chgpasswd=y
+CONFIG_PACKAGE_shadow-chpasswd=y
+CONFIG_PACKAGE_shadow-chsh=y
+CONFIG_PACKAGE_shadow-common=y
+CONFIG_PACKAGE_shadow-expiry=y
+CONFIG_PACKAGE_shadow-faillog=y
+CONFIG_PACKAGE_shadow-gpasswd=y
+CONFIG_PACKAGE_shadow-groupadd=y
+CONFIG_PACKAGE_shadow-groupdel=y
+CONFIG_PACKAGE_shadow-groupmems=y
+CONFIG_PACKAGE_shadow-groupmod=y
+CONFIG_PACKAGE_shadow-groups=y
+CONFIG_PACKAGE_shadow-grpck=y
+CONFIG_PACKAGE_shadow-grpconv=y
+CONFIG_PACKAGE_shadow-grpunconv=y
+CONFIG_PACKAGE_shadow-lastlog=y
+CONFIG_PACKAGE_shadow-login=y
+CONFIG_PACKAGE_shadow-logoutd=y
+CONFIG_PACKAGE_shadow-newgidmap=y
+CONFIG_PACKAGE_shadow-newgrp=y
+CONFIG_PACKAGE_shadow-newuidmap=y
+CONFIG_PACKAGE_shadow-newusers=y
+CONFIG_PACKAGE_shadow-nologin=y
+CONFIG_PACKAGE_shadow-passwd=y
+CONFIG_PACKAGE_shadow-pwck=y
+CONFIG_PACKAGE_shadow-pwconv=y
+CONFIG_PACKAGE_shadow-pwunconv=y
+CONFIG_PACKAGE_shadow-su=y
+CONFIG_PACKAGE_shadow-useradd=y
+CONFIG_PACKAGE_shadow-userdel=y
+CONFIG_PACKAGE_shadow-usermod=y
+CONFIG_PACKAGE_shadow-utils=y
+CONFIG_PACKAGE_shadow-vipw=y
+CONFIG_PACKAGE_smartmontools=y
+CONFIG_PACKAGE_smartmontools-drivedb=y
+CONFIG_PACKAGE_sqm-scripts=y
+CONFIG_PACKAGE_sqm-scripts-extra=y
+CONFIG_PACKAGE_squashfs-tools-mksquashfs=y
+CONFIG_PACKAGE_sysfsutils=y
+CONFIG_PACKAGE_tar=y
+CONFIG_PACKAGE_tc-tiny=y
+CONFIG_PACKAGE_tcpdump-mini=y
+CONFIG_PACKAGE_terminfo=y
+CONFIG_PACKAGE_tini=y
+CONFIG_PACKAGE_ttyd=y
+CONFIG_PACKAGE_ucert-full=y
+CONFIG_PACKAGE_ucode-mod-html=y
+CONFIG_PACKAGE_ucode-mod-lua=y
+CONFIG_PACKAGE_ucode-mod-math=y
+CONFIG_PACKAGE_ucode-mod-nl80211=y
+CONFIG_PACKAGE_ucode-mod-rtnl=y
+CONFIG_PACKAGE_ucode-mod-uloop=y
+CONFIG_PACKAGE_uencrypt-openssl=y
+CONFIG_PACKAGE_uhttpd=y
+CONFIG_PACKAGE_uhttpd-mod-ubus=y
+CONFIG_PACKAGE_usb-modeswitch=y
+CONFIG_PACKAGE_usbutils=y
+CONFIG_PACKAGE_uuidd=y
+CONFIG_PACKAGE_vsftpd-tls=y
+CONFIG_PACKAGE_wget-ssl=y
+CONFIG_PACKAGE_wireguard-tools=y
+CONFIG_PACKAGE_wireless-regdb=y
+CONFIG_PACKAGE_wpad-openssl=y
+CONFIG_PACKAGE_wsdd2=y
+CONFIG_PACKAGE_xl2tpd=y
+CONFIG_PACKAGE_xtables-nft=y
+CONFIG_PACKAGE_xz=y
+CONFIG_PACKAGE_xz-utils=y
+CONFIG_PACKAGE_zlib=y
+CONFIG_PARTED_READLINE=y
+CONFIG_SAMBA4_SERVER_AVAHI=y
+CONFIG_SAMBA4_SERVER_NETBIOS=y
+CONFIG_SAMBA4_SERVER_VFS=y
+CONFIG_SAMBA4_SERVER_WSDD2=y
+CONFIG_SQUASHFS_TOOLS_XZ_SUPPORT=y
+CONFIG_SQUASHFS_TOOLS_ZSTD_SUPPORT=y
+CONFIG_TARGET_ALL_PROFILES=y
+CONFIG_TARGET_OPTIONS=y
+CONFIG_TARGET_ROOTFS_PARTSIZE=512
+# CONFIG_TARGET_ROOTFS_SQUASHFS is not set
+CONFIG_WPA_MBO_SUPPORT=y
+CONFIG_WPA_MSG_MIN_PRIORITY=3
+CONFIG_ZSTD_OPTIMIZE_O3=y
+CONFIG_shadow-all=y
+# CONFIG_CGROUPFS_MOUNT_KERNEL_CGROUPS is not set
+# CONFIG_OPENVPN_openssl_ENABLE_SMALL is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_firefly_roc-rk3328-cc is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-neo3 is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r2s is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r4s is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5c is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5s is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_pine64_quartz64-a is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_pine64_rockpro64 is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_radxa_rock-3a is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_radxa_rock-pi-4 is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_rockchip_bpi-r2-pro is not set
diff --git a/.github/workflows/rockchip-ext4.yaml b/.github/workflows/rockchip-ext4.yaml
new file mode 100755
index 0000000000..1b97cdd8d1
--- /dev/null
+++ b/.github/workflows/rockchip-ext4.yaml
@@ -0,0 +1,98 @@
+name: Build rockchip-6.1 ext4
+on: [push]
+
+jobs:
+    build:
+        name: Prepare and build rockchip-6.1 ext4 images
+        runs-on: ubuntu-latest
+
+        steps:
+            - name: Setup Ubuntu
+              run: |
+                sudo apt update
+                sudo apt install -y python3 python3-pip python3-ply python3-distutils python3-pyelftools libpython3-dev swig
+            - name: Maximize build space
+              uses: AdityaGarg8/remove-unwanted-software@v1
+              with:
+                remove-android: 'true'
+                remove-dotnet: 'true'
+            - name: Checkout
+              uses: actions/checkout@v3
+
+            - name: Build
+              run: |
+                ./scripts/feeds update -a
+                ./scripts/feeds install -a
+                cd feeds/luci
+
+                wget https://gist.githubusercontent.com/mj22226/f6db007367a22a31f9cb1c109a032b45/raw/be368c4f1605f652a001d81548c3a3e14adf6cb7/luci-app-diskman.patch
+
+                git apply luci-app-diskman.patch
+                cd -
+                cd  feeds/packages
+                wget https://gist.githubusercontent.com/mj22226/351f11e66f08f06e37a985719a31ddb4/raw/b35ba7a3aac1949bd6bbeaad065a0a93dc3c34f0/01-cpu.patch
+                wget https://gist.githubusercontent.com/mj22226/b66f5c1bd5fc7e1cb3cf2c690b5dbd5a/raw/b955e726cbb0948d932c8d6143229ad604320149/20-lxc.patch
+                git apply 01-cpu.patch
+                git apply 20-lxc.patch
+                cd -
+                sed -i "70s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
+                sed -i "83s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
+                sed -i "194s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
+                sed -i "211s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
+                sed -i "13s/'1'/'0'/" feeds/packages/utils/dockerd/files/etc/config/dockerd
+
+                ./scripts/feeds update -a
+                ./scripts/feeds install -a -f
+                wget https://gist.githubusercontent.com/mj22226/84281c9a52b6518631c775222a2cde2e/raw/fe72098ff49c73ff2b0f3eebee03f123690a2b07/10.patch
+                git apply 10.patch
+                cp .github/workflows/config.buildinfo2 .config
+                make defconfig
+                wget https://gist.githubusercontent.com/mj22226/23edc25efeb65ef69d8eb6598f4f8179/raw/29c862e3e2558852523f4e8edd5f3d0cc145067e/01-key.patch
+                git apply 01-key.patch
+                make download -j32
+                rm 01-key.patch
+                make tools/install -j$(nproc)
+                make toolchain/install -j$(nproc)
+                make -j$(nproc) 'IGNORE_ERRORS=n m'
+                mkdir squashfs
+                rm -rf build_dir
+                cp bin/targets/rockchip/armv8/*.gz squashfs/
+                make clean
+                rm -rf tmp
+                sed -i "73s/# CONFIG_ARM_ROCKCHIP_CPUFREQ is not set/CONFIG_ARM_ROCKCHIP_CPUFREQ=y/" target/linux/rockchip/armv8/config-6.1
+                cp .github/workflows/config.buildinfo3 .config
+                make defconfig
+                mkdir bin/targets/rockchip/armv8
+                cp squashfs/*.gz bin/targets/rockchip/armv8/
+                make -j$(nproc) 'IGNORE_ERRORS=n m'
+                rm -rf build_dir
+                tar -cvf rockchip-images.tar bin/targets/rockchip/armv8
+
+            - name: Upload artifacts
+              uses: actions/upload-artifact@v3
+              with:
+                name: rockchip-images
+                path: rockchip-images.tar
+
+    release:
+          name: Make a release
+          runs-on: ubuntu-latest
+          needs: build
+
+          steps:
+            - name: Download the image artifacts
+              uses: actions/download-artifact@v3
+              with:
+                name: rockchip-images
+
+            - name: Extract the image artifacts
+              run: tar xf rockchip-images.tar
+
+            - name: Create a release
+              uses: "marvinpinto/action-automatic-releases@latest"
+              with:
+                repo_token: "${{ secrets.GITHUB_TOKEN }}"
+                prerelease: true
+                title: "Rockchip v6.1 ext4 Images"
+                automatic_release_tag: "linux-6.1-ext4"
+                files: bin/targets/rockchip/armv8/*
-- 
2.40.1


From 0bbc6197a041e49e985f0bca7011e2cf1b1cccdc Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Fri, 5 Jan 2024 17:40:18 -0500
Subject: [PATCH 03/38] CI: build rockchip images

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .github/workflows/config.buildinfo            | 649 +++++++++++++++++
 .github/workflows/config.buildinfo1           | 688 ++++++++++++++++++
 .../workflows/{coverity.yml => coverityyml}   |   0
 .github/workflows/{formal.yml => formalyml}   |   0
 .github/workflows/{kernel.yml => kernelyml}   |   0
 .../{label-kernel.yml => label-kernelyml}     |   0
 .../{label-target.yml => label-targetyml}     |   0
 .github/workflows/{labeler.yml => labeleryml} |   0
 .../workflows/{packages.yml => packagesyml}   |   0
 ...push-containers.yml => push-containersyml} |   0
 .github/workflows/rockchip.yaml               |  96 +++
 .../workflows/{toolchain.yml => toolchainyml} |   0
 .github/workflows/{tools.yml => toolsyml}     |   0
 13 files changed, 1433 insertions(+)
 create mode 100644 .github/workflows/config.buildinfo
 create mode 100644 .github/workflows/config.buildinfo1
 rename .github/workflows/{coverity.yml => coverityyml} (100%)
 rename .github/workflows/{formal.yml => formalyml} (100%)
 rename .github/workflows/{kernel.yml => kernelyml} (100%)
 rename .github/workflows/{label-kernel.yml => label-kernelyml} (100%)
 rename .github/workflows/{label-target.yml => label-targetyml} (100%)
 rename .github/workflows/{labeler.yml => labeleryml} (100%)
 rename .github/workflows/{packages.yml => packagesyml} (100%)
 rename .github/workflows/{push-containers.yml => push-containersyml} (100%)
 create mode 100755 .github/workflows/rockchip.yaml
 rename .github/workflows/{toolchain.yml => toolchainyml} (100%)
 rename .github/workflows/{tools.yml => toolsyml} (100%)

diff --git a/.github/workflows/config.buildinfo b/.github/workflows/config.buildinfo
new file mode 100644
index 0000000000..f8a347caa8
--- /dev/null
+++ b/.github/workflows/config.buildinfo
@@ -0,0 +1,649 @@
+CONFIG_TARGET_rockchip=y
+CONFIG_TARGET_rockchip_armv8=y
+CONFIG_TARGET_MULTI_PROFILE=y
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r2s=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyarm_nanopi-r2s=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r4s=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyarm_nanopi-r4s=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5c=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5c=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5s=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5s=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_pine64_quartz64-a=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_pine64_quartz64-a=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_radxa_rock-pi-4=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_radxa_rock-pi-4=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_radxa_rock-3a=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_radxa_rock-3a=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_rockchip_bpi-r2-pro=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_rockchip_bpi-r2-pro=""
+CONFIG_DEVEL=y
+CONFIG_BUSYBOX_CUSTOM=y
+CONFIG_TARGET_PER_DEVICE_ROOTFS=y
+CONFIG_ATH10K_LEDS=y
+CONFIG_ATH9K_HWRNG=y
+CONFIG_ATH_USER_REGD=y
+CONFIG_AUTOREMOVE=y
+CONFIG_BUILD_LOG=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_GETOPT_LONG=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_SEAMLESS_XZ=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_TAR_LONG_OPTIONS=y
+CONFIG_BUSYBOX_CONFIG_GETOPT=y
+CONFIG_BUSYBOX_CONFIG_MOUNTPOINT=y
+CONFIG_BUSYBOX_CONFIG_UNXZ=y
+CONFIG_BUSYBOX_CONFIG_XZ=y
+CONFIG_CGROUPFS_MOUNT_KERNEL_CGROUPS=y
+CONFIG_DOCKER_CGROUP_OPTIONS=y
+CONFIG_DOCKER_CHECK_CONFIG=y
+CONFIG_DOCKER_NET_ENCRYPT=y
+CONFIG_DOCKER_NET_MACVLAN=y
+CONFIG_DOCKER_NET_OVERLAY=y
+CONFIG_DOCKER_NET_TFTP=y
+CONFIG_DOCKER_OPTIONAL_FEATURES=y
+CONFIG_DOCKER_STO_BTRFS=y
+CONFIG_DOCKER_STO_EXT4=y
+CONFIG_DRIVER_11AX_SUPPORT=y
+CONFIG_GNUTLS_ALPN=y
+CONFIG_GNUTLS_ANON=y
+CONFIG_GNUTLS_DTLS_SRTP=y
+CONFIG_GNUTLS_HEARTBEAT=y
+CONFIG_GNUTLS_OCSP=y
+CONFIG_GNUTLS_PSK=y
+CONFIG_HTOP_LMSENSORS=y
+CONFIG_KERNEL_ARM_PMU=y
+CONFIG_KERNEL_BTRFS_FS_POSIX_ACL=y
+CONFIG_KERNEL_CFQ_GROUP_IOSCHED=y
+CONFIG_KERNEL_CGROUP_DEVICE=y
+CONFIG_KERNEL_CGROUP_FREEZER=y
+CONFIG_KERNEL_CGROUP_HUGETLB=y
+CONFIG_KERNEL_CGROUP_NET_PRIO=y
+CONFIG_KERNEL_CGROUP_PERF=y
+CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
+CONFIG_KERNEL_EXT4_FS_SECURITY=y
+CONFIG_KERNEL_FS_POSIX_ACL=y
+CONFIG_KERNEL_HUGETLBFS=y
+CONFIG_KERNEL_HUGETLB_PAGE=y
+CONFIG_KERNEL_MEMCG_SWAP_ENABLED=y
+CONFIG_KERNEL_NET_CLS_CGROUP=y
+CONFIG_KERNEL_PAGE_POOL=y
+CONFIG_KERNEL_PERF_EVENTS=y
+CONFIG_KERNEL_RELAY=y
+CONFIG_KERNEL_TRANSPARENT_HUGEPAGE=y
+CONFIG_KERNEL_TRANSPARENT_HUGEPAGE_ALWAYS=y
+CONFIG_LXC_BUSYBOX_OPTIONS=y
+CONFIG_LXC_KERNEL_OPTIONS=y
+CONFIG_LXC_NETWORKING=y
+CONFIG_LXC_SECCOMP=y
+CONFIG_OPENSSL_ENGINE_BUILTIN=y
+CONFIG_OPENSSL_ENGINE_BUILTIN_DEVCRYPTO=y
+CONFIG_OPENSSL_OPTIMIZE_SPEED=y
+CONFIG_OPENVPN_openssl_ENABLE_FRAGMENT=y
+CONFIG_OPENVPN_openssl_ENABLE_LZ4=y
+CONFIG_OPENVPN_openssl_ENABLE_LZO=y
+CONFIG_OPENVPN_openssl_ENABLE_PORT_SHARE=y
+CONFIG_PACKAGE_ATH_DFS=y
+CONFIG_PACKAGE_MAC80211_DEBUGFS=y
+CONFIG_PACKAGE_MAC80211_MESH=y
+CONFIG_PACKAGE_NTFS-3G_HAS_PROBE=y
+CONFIG_PACKAGE_adb=y
+CONFIG_PACKAGE_adblock=y
+CONFIG_PACKAGE_arp-scan=y
+CONFIG_PACKAGE_arp-scan-database=y
+CONFIG_PACKAGE_ath10k-firmware-qca6174=y
+CONFIG_PACKAGE_atop=y
+CONFIG_PACKAGE_attr=y
+CONFIG_PACKAGE_avahi-dbus-daemon=y
+CONFIG_PACKAGE_bash=y
+CONFIG_PACKAGE_blkdiscard=y
+CONFIG_PACKAGE_blkid=y
+CONFIG_PACKAGE_block-mount=y
+CONFIG_PACKAGE_blockd=y
+CONFIG_PACKAGE_blockdev=y
+CONFIG_PACKAGE_bluez-daemon=y
+CONFIG_PACKAGE_bluez-libs=y
+CONFIG_PACKAGE_bluez-tools=y
+CONFIG_PACKAGE_bluez-utils=y
+CONFIG_PACKAGE_bluez-utils-extra=y
+CONFIG_PACKAGE_btop=y
+CONFIG_PACKAGE_btrfs-progs=y
+CONFIG_PACKAGE_ca-certificates=y
+CONFIG_PACKAGE_ccrypt=y
+CONFIG_PACKAGE_certtool=y
+CONFIG_PACKAGE_cgi-io=y
+CONFIG_PACKAGE_cgroup-tools=y
+CONFIG_PACKAGE_cgroupfs-mount=y
+CONFIG_PACKAGE_collectd=y
+CONFIG_PACKAGE_collectd-mod-conntrack=y
+CONFIG_PACKAGE_collectd-mod-cpu=y
+CONFIG_PACKAGE_collectd-mod-cpufreq=y
+CONFIG_PACKAGE_collectd-mod-interface=y
+CONFIG_PACKAGE_collectd-mod-irq=y
+CONFIG_PACKAGE_collectd-mod-iwinfo=y
+CONFIG_PACKAGE_collectd-mod-load=y
+CONFIG_PACKAGE_collectd-mod-memory=y
+CONFIG_PACKAGE_collectd-mod-network=y
+CONFIG_PACKAGE_collectd-mod-rrdtool=y
+CONFIG_PACKAGE_collectd-mod-sensors=y
+CONFIG_PACKAGE_collectd-mod-thermal=y
+CONFIG_PACKAGE_containerd=y
+CONFIG_PACKAGE_coreutils=y
+CONFIG_PACKAGE_coreutils-sort=y
+CONFIG_PACKAGE_cryptsetup=y
+CONFIG_PACKAGE_cryptsetup-ssh=y
+CONFIG_PACKAGE_dbus=y
+CONFIG_PACKAGE_dnsmasq=m
+CONFIG_PACKAGE_dnsmasq-full=y
+CONFIG_PACKAGE_dnsmasq_full_auth=y
+CONFIG_PACKAGE_dnsmasq_full_conntrack=y
+CONFIG_PACKAGE_dnsmasq_full_dhcp=y
+CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
+CONFIG_PACKAGE_dnsmasq_full_dnssec=y
+CONFIG_PACKAGE_dnsmasq_full_nftset=y
+CONFIG_PACKAGE_dnsmasq_full_noid=y
+CONFIG_PACKAGE_dnsmasq_full_tftp=y
+CONFIG_PACKAGE_docker=y
+CONFIG_PACKAGE_docker-compose=y
+CONFIG_PACKAGE_dockerd=y
+CONFIG_PACKAGE_ethtool-full=y
+CONFIG_PACKAGE_exfat-fsck=y
+CONFIG_PACKAGE_exfat-mkfs=y
+CONFIG_PACKAGE_f2fs-tools=y
+CONFIG_PACKAGE_f2fsck=y
+CONFIG_PACKAGE_fdisk=y
+CONFIG_PACKAGE_findfs=y
+CONFIG_PACKAGE_fixparts=y
+CONFIG_PACKAGE_flock=y
+CONFIG_PACKAGE_fuse-utils=y
+CONFIG_PACKAGE_fuse3-utils=y
+CONFIG_PACKAGE_gdisk=y
+CONFIG_PACKAGE_getopt=y
+CONFIG_PACKAGE_glib2=y
+CONFIG_PACKAGE_gnupg=y
+CONFIG_PACKAGE_gnutls-utils=y
+CONFIG_PACKAGE_hdparm=y
+CONFIG_PACKAGE_hostapd-common=y
+CONFIG_PACKAGE_htop=y
+CONFIG_PACKAGE_hwclock=y
+CONFIG_PACKAGE_ip-full=y
+CONFIG_PACKAGE_ip6tables-nft=y
+CONFIG_PACKAGE_iperf3-ssl=y
+CONFIG_PACKAGE_ipset=y
+CONFIG_PACKAGE_iptables-mod-extra=y
+CONFIG_PACKAGE_iptables-mod-ipopt=y
+CONFIG_PACKAGE_iptables-nft=y
+CONFIG_PACKAGE_irqbalance=y
+# CONFIG_PACKAGE_iw is not set
+CONFIG_PACKAGE_iw-full=y
+CONFIG_PACKAGE_iwinfo=y
+CONFIG_PACKAGE_kmod-asn1-decoder=y
+CONFIG_PACKAGE_kmod-asn1-encoder=y
+CONFIG_PACKAGE_kmod-ata-ahci=y
+CONFIG_PACKAGE_kmod-ata-core=y
+CONFIG_PACKAGE_kmod-ata-dwc=y
+CONFIG_PACKAGE_kmod-ath=y
+CONFIG_PACKAGE_kmod-ath10k=y
+CONFIG_PACKAGE_kmod-ath9k=y
+CONFIG_PACKAGE_kmod-ath9k-common=y
+CONFIG_PACKAGE_kmod-atm=y
+CONFIG_PACKAGE_kmod-bluetooth=y
+CONFIG_PACKAGE_kmod-br-netfilter=y
+CONFIG_PACKAGE_kmod-cdrom=y
+CONFIG_PACKAGE_kmod-cfg80211=y
+CONFIG_PACKAGE_kmod-crypto-acompress=y
+CONFIG_PACKAGE_kmod-crypto-aead=y
+CONFIG_PACKAGE_kmod-crypto-arc4=y
+CONFIG_PACKAGE_kmod-crypto-authenc=y
+CONFIG_PACKAGE_kmod-crypto-cbc=y
+CONFIG_PACKAGE_kmod-crypto-ccm=y
+CONFIG_PACKAGE_kmod-crypto-cmac=y
+CONFIG_PACKAGE_kmod-crypto-crc32=y
+CONFIG_PACKAGE_kmod-crypto-ctr=y
+CONFIG_PACKAGE_kmod-crypto-deflate=y
+CONFIG_PACKAGE_kmod-crypto-des=y
+CONFIG_PACKAGE_kmod-crypto-ecb=y
+CONFIG_PACKAGE_kmod-crypto-ecdh=y
+CONFIG_PACKAGE_kmod-crypto-echainiv=y
+CONFIG_PACKAGE_kmod-crypto-gcm=y
+CONFIG_PACKAGE_kmod-crypto-gf128=y
+CONFIG_PACKAGE_kmod-crypto-ghash=y
+CONFIG_PACKAGE_kmod-crypto-hmac=y
+CONFIG_PACKAGE_kmod-crypto-kpp=y
+CONFIG_PACKAGE_kmod-crypto-lib-chacha20=y
+CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=y
+CONFIG_PACKAGE_kmod-crypto-lib-curve25519=y
+CONFIG_PACKAGE_kmod-crypto-lib-poly1305=y
+CONFIG_PACKAGE_kmod-crypto-manager=y
+CONFIG_PACKAGE_kmod-crypto-md5=y
+CONFIG_PACKAGE_kmod-crypto-misc=y
+CONFIG_PACKAGE_kmod-crypto-null=y
+CONFIG_PACKAGE_kmod-crypto-rng=y
+CONFIG_PACKAGE_kmod-crypto-seqiv=y
+CONFIG_PACKAGE_kmod-crypto-sha1=y
+CONFIG_PACKAGE_kmod-crypto-sha256=y
+CONFIG_PACKAGE_kmod-crypto-sha512=y
+CONFIG_PACKAGE_kmod-crypto-user=y
+CONFIG_PACKAGE_kmod-crypto-xts=y
+CONFIG_PACKAGE_kmod-cryptodev=y
+CONFIG_PACKAGE_kmod-dax=y
+CONFIG_PACKAGE_kmod-dm=y
+CONFIG_PACKAGE_kmod-dummy=y
+CONFIG_PACKAGE_kmod-fs-autofs4=y
+CONFIG_PACKAGE_kmod-fs-btrfs=y
+CONFIG_PACKAGE_kmod-fs-exfat=y
+CONFIG_PACKAGE_kmod-fs-exportfs=y
+CONFIG_PACKAGE_kmod-fs-ext4=y
+CONFIG_PACKAGE_kmod-fs-f2fs=y
+CONFIG_PACKAGE_kmod-fs-hfs=y
+CONFIG_PACKAGE_kmod-fs-hfsplus=y
+CONFIG_PACKAGE_kmod-fs-ntfs3=y
+CONFIG_PACKAGE_kmod-fs-squashfs=y
+CONFIG_PACKAGE_kmod-fs-vfat=y
+CONFIG_PACKAGE_kmod-fs-xfs=y
+CONFIG_PACKAGE_kmod-fuse=y
+CONFIG_PACKAGE_kmod-gre=y
+CONFIG_PACKAGE_kmod-hid=y
+CONFIG_PACKAGE_kmod-hwmon-gpiofan=y
+CONFIG_PACKAGE_kmod-hwmon-pwmfan=y
+CONFIG_PACKAGE_kmod-i2c-core=y
+CONFIG_PACKAGE_kmod-ifb=y
+CONFIG_PACKAGE_kmod-ikconfig=y
+CONFIG_PACKAGE_kmod-input-core=y
+CONFIG_PACKAGE_kmod-input-evdev=y
+CONFIG_PACKAGE_kmod-ip6tables=y
+CONFIG_PACKAGE_kmod-ipsec=y
+CONFIG_PACKAGE_kmod-ipt-conntrack=y
+CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
+CONFIG_PACKAGE_kmod-ipt-core=y
+CONFIG_PACKAGE_kmod-ipt-extra=y
+CONFIG_PACKAGE_kmod-ipt-ipopt=y
+CONFIG_PACKAGE_kmod-ipt-ipset=y
+CONFIG_PACKAGE_kmod-ipt-nat=y
+CONFIG_PACKAGE_kmod-ipt-nat6=y
+CONFIG_PACKAGE_kmod-ipt-physdev=y
+CONFIG_PACKAGE_kmod-iptunnel=y
+CONFIG_PACKAGE_kmod-keys-encrypted=y
+CONFIG_PACKAGE_kmod-keys-trusted=y
+CONFIG_PACKAGE_kmod-l2tp=y
+CONFIG_PACKAGE_kmod-lib-crc16=y
+CONFIG_PACKAGE_kmod-lib-lzo=y
+CONFIG_PACKAGE_kmod-lib-raid6=y
+CONFIG_PACKAGE_kmod-lib-textsearch=y
+CONFIG_PACKAGE_kmod-lib-xor=y
+CONFIG_PACKAGE_kmod-lib-zlib-deflate=y
+CONFIG_PACKAGE_kmod-lib-zlib-inflate=y
+CONFIG_PACKAGE_kmod-lib-zstd=y
+CONFIG_PACKAGE_kmod-libphy=y
+CONFIG_PACKAGE_kmod-mac80211=y
+CONFIG_PACKAGE_kmod-macvlan=y
+CONFIG_PACKAGE_kmod-mdio-devres=y
+CONFIG_PACKAGE_kmod-mii=y
+CONFIG_PACKAGE_kmod-mppe=y
+CONFIG_PACKAGE_kmod-mt76-connac=y
+CONFIG_PACKAGE_kmod-mt76-core=y
+CONFIG_PACKAGE_kmod-mt76-usb=y
+CONFIG_PACKAGE_kmod-mt76x02-common=y
+CONFIG_PACKAGE_kmod-mt76x02-usb=y
+CONFIG_PACKAGE_kmod-mt76x2-common=y
+CONFIG_PACKAGE_kmod-mt76x2u=y
+CONFIG_PACKAGE_kmod-mt7915-firmware=y
+CONFIG_PACKAGE_kmod-mt7915e=y
+CONFIG_PACKAGE_kmod-mt7916-firmware=y
+CONFIG_PACKAGE_kmod-mt7921-common=y
+CONFIG_PACKAGE_kmod-mt7921-firmware=y
+CONFIG_PACKAGE_kmod-mt7921e=y
+CONFIG_PACKAGE_kmod-mt7921u=y
+CONFIG_PACKAGE_kmod-mt7922-firmware=y
+CONFIG_PACKAGE_kmod-mt792x-common=y
+CONFIG_PACKAGE_kmod-mt792x-usb=y
+CONFIG_PACKAGE_kmod-nf-conntrack-netlink=y
+CONFIG_PACKAGE_kmod-nf-ipt=y
+CONFIG_PACKAGE_kmod-nf-ipt6=y
+CONFIG_PACKAGE_kmod-nf-ipvs=y
+CONFIG_PACKAGE_kmod-nf-nat6=y
+CONFIG_PACKAGE_kmod-nf-nathelper=y
+CONFIG_PACKAGE_kmod-nf-nathelper-extra=y
+CONFIG_PACKAGE_kmod-nft-compat=y
+CONFIG_PACKAGE_kmod-nls-base=y
+CONFIG_PACKAGE_kmod-nls-cp437=y
+CONFIG_PACKAGE_kmod-nls-iso8859-1=y
+CONFIG_PACKAGE_kmod-nls-utf8=y
+CONFIG_PACKAGE_kmod-nvme=y
+CONFIG_PACKAGE_kmod-oid-registry=y
+CONFIG_PACKAGE_kmod-phy-realtek=y
+CONFIG_PACKAGE_kmod-pppoa=y
+CONFIG_PACKAGE_kmod-pppol2tp=y
+CONFIG_PACKAGE_kmod-pptp=y
+CONFIG_PACKAGE_kmod-r8169=y
+CONFIG_PACKAGE_kmod-random-core=y
+CONFIG_PACKAGE_kmod-regmap-core=y
+CONFIG_PACKAGE_kmod-rtl8812au-ac=y
+CONFIG_PACKAGE_kmod-rtl8821ae=y
+CONFIG_PACKAGE_kmod-rtlwifi=y
+CONFIG_PACKAGE_kmod-rtlwifi-btcoexist=y
+CONFIG_PACKAGE_kmod-rtlwifi-pci=y
+CONFIG_PACKAGE_kmod-rtw88=y
+CONFIG_PACKAGE_kmod-rtw88-8723d=y
+CONFIG_PACKAGE_kmod-rtw88-8723de=y
+CONFIG_PACKAGE_kmod-rtw88-8821c=y
+CONFIG_PACKAGE_kmod-rtw88-8821ce=y
+CONFIG_PACKAGE_kmod-rtw88-8821cu=y
+CONFIG_PACKAGE_kmod-rtw88-8822b=y
+CONFIG_PACKAGE_kmod-rtw88-8822be=y
+CONFIG_PACKAGE_kmod-rtw88-8822bu=y
+CONFIG_PACKAGE_kmod-rtw88-8822c=y
+CONFIG_PACKAGE_kmod-rtw88-8822ce=y
+CONFIG_PACKAGE_kmod-rtw88-8822cu=y
+CONFIG_PACKAGE_kmod-rtw88-pci=y
+CONFIG_PACKAGE_kmod-rtw88-usb=y
+CONFIG_PACKAGE_kmod-rtw89=y
+CONFIG_PACKAGE_kmod-sched-cake=y
+CONFIG_PACKAGE_kmod-sched-core=y
+CONFIG_PACKAGE_kmod-scsi-core=y
+CONFIG_PACKAGE_kmod-tpm=y
+CONFIG_PACKAGE_kmod-tun=y
+CONFIG_PACKAGE_kmod-udptunnel4=y
+CONFIG_PACKAGE_kmod-udptunnel6=y
+CONFIG_PACKAGE_kmod-usb-core=y
+CONFIG_PACKAGE_kmod-usb-dwc2=y
+CONFIG_PACKAGE_kmod-usb-dwc3=y
+CONFIG_PACKAGE_kmod-usb-ehci=y
+CONFIG_PACKAGE_kmod-usb-gadget=y
+CONFIG_PACKAGE_kmod-usb-net=y
+CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
+CONFIG_PACKAGE_kmod-usb-net-cdc-ncm=y
+CONFIG_PACKAGE_kmod-usb-net-ipheth=y
+CONFIG_PACKAGE_kmod-usb-net-rndis=y
+CONFIG_PACKAGE_kmod-usb-net-rtl8152=y
+CONFIG_PACKAGE_kmod-usb-ohci=y
+CONFIG_PACKAGE_kmod-usb-printer=y
+CONFIG_PACKAGE_kmod-usb-roles=y
+CONFIG_PACKAGE_kmod-usb-storage=y
+CONFIG_PACKAGE_kmod-usb-storage-extras=y
+CONFIG_PACKAGE_kmod-usb-storage-uas=y
+CONFIG_PACKAGE_kmod-usb-xhci-hcd=y
+CONFIG_PACKAGE_kmod-usb2=y
+CONFIG_PACKAGE_kmod-usb2-pci=y
+CONFIG_PACKAGE_kmod-usb3=y
+CONFIG_PACKAGE_kmod-veth=y
+CONFIG_PACKAGE_kmod-vxlan=y
+CONFIG_PACKAGE_kmod-wireguard=y
+CONFIG_PACKAGE_libaio=y
+CONFIG_PACKAGE_libatomic=y
+CONFIG_PACKAGE_libattr=y
+CONFIG_PACKAGE_libavahi-client=y
+CONFIG_PACKAGE_libavahi-dbus-support=y
+CONFIG_PACKAGE_libbpf=y
+CONFIG_PACKAGE_libcap=y
+CONFIG_PACKAGE_libcap-ng=y
+CONFIG_PACKAGE_libcgroup=y
+CONFIG_PACKAGE_libdaemon=y
+CONFIG_PACKAGE_libdbus=y
+CONFIG_PACKAGE_libdevmapper=y
+CONFIG_PACKAGE_libelf=y
+CONFIG_PACKAGE_libevdev=y
+CONFIG_PACKAGE_libexpat=y
+CONFIG_PACKAGE_libfdisk=y
+CONFIG_PACKAGE_libffi=y
+CONFIG_PACKAGE_libfuse=y
+CONFIG_PACKAGE_libfuse3=y
+CONFIG_PACKAGE_libgmp=y
+CONFIG_PACKAGE_libgnutls=y
+CONFIG_PACKAGE_libical=y
+CONFIG_PACKAGE_libipset=y
+CONFIG_PACKAGE_libiptext=y
+CONFIG_PACKAGE_libiptext-nft=y
+CONFIG_PACKAGE_libiptext6=y
+CONFIG_PACKAGE_libiwinfo=y
+CONFIG_PACKAGE_libiwinfo-data=y
+CONFIG_PACKAGE_libkmod=y
+CONFIG_PACKAGE_libltdl=y
+CONFIG_PACKAGE_liblua=y
+CONFIG_PACKAGE_liblucihttp=y
+CONFIG_PACKAGE_liblucihttp-lua=y
+CONFIG_PACKAGE_liblucihttp-ucode=y
+CONFIG_PACKAGE_liblxc=y
+CONFIG_PACKAGE_liblz4=y
+CONFIG_PACKAGE_liblzma=y
+CONFIG_PACKAGE_liblzo=y
+CONFIG_PACKAGE_libmount=y
+CONFIG_PACKAGE_libncurses=y
+CONFIG_PACKAGE_libnetfilter-conntrack=y
+CONFIG_PACKAGE_libnettle=y
+CONFIG_PACKAGE_libnfnetlink=y
+CONFIG_PACKAGE_libopenssl=y
+CONFIG_PACKAGE_libopenssl-conf=y
+CONFIG_PACKAGE_libopenssl-legacy=y
+CONFIG_PACKAGE_libparted=y
+CONFIG_PACKAGE_libpcap=y
+CONFIG_PACKAGE_libpci=y
+CONFIG_PACKAGE_libpcre=y
+CONFIG_PACKAGE_libpcre2=y
+CONFIG_PACKAGE_libpopt=y
+CONFIG_PACKAGE_libqrencode=y
+CONFIG_PACKAGE_libreadline=y
+CONFIG_PACKAGE_librrd1=y
+CONFIG_PACKAGE_libseccomp=y
+CONFIG_PACKAGE_libsensors=y
+CONFIG_PACKAGE_libssh=y
+CONFIG_PACKAGE_libstdcpp=y
+CONFIG_PACKAGE_libsysfs=y
+CONFIG_PACKAGE_libtasn1=y
+CONFIG_PACKAGE_libtirpc=y
+CONFIG_PACKAGE_libubus-lua=y
+CONFIG_PACKAGE_libudev-zero=y
+CONFIG_PACKAGE_liburing=y
+CONFIG_PACKAGE_libusb-1.0=y
+CONFIG_PACKAGE_libuv=y
+CONFIG_PACKAGE_libwebsockets-full=y
+CONFIG_PACKAGE_libxtables=y
+CONFIG_PACKAGE_libzstd=y
+CONFIG_PACKAGE_linux-atm=y
+CONFIG_PACKAGE_lm-sensors=y
+CONFIG_PACKAGE_losetup=y
+CONFIG_PACKAGE_lsblk=y
+CONFIG_PACKAGE_lua=y
+CONFIG_PACKAGE_luci=y
+CONFIG_PACKAGE_luci-app-adblock=y
+CONFIG_PACKAGE_luci-app-diskman=y
+CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs=y
+CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk=y
+CONFIG_PACKAGE_luci-app-dockerman=y
+CONFIG_PACKAGE_luci-app-firewall=y
+CONFIG_PACKAGE_luci-app-irqbalance=y
+CONFIG_PACKAGE_luci-app-lxc=y
+CONFIG_PACKAGE_luci-app-nlbwmon=y
+CONFIG_PACKAGE_luci-app-openvpn=y
+CONFIG_PACKAGE_luci-app-opkg=y
+CONFIG_PACKAGE_luci-app-pbr=y
+CONFIG_PACKAGE_luci-app-samba4=y
+CONFIG_PACKAGE_luci-app-sqm=y
+CONFIG_PACKAGE_luci-app-statistics=y
+CONFIG_PACKAGE_luci-app-ttyd=y
+CONFIG_PACKAGE_luci-base=y
+CONFIG_PACKAGE_luci-compat=y
+CONFIG_PACKAGE_luci-lib-base=y
+CONFIG_PACKAGE_luci-lib-docker=y
+CONFIG_PACKAGE_luci-lib-ip=y
+CONFIG_PACKAGE_luci-lib-jsonc=y
+CONFIG_PACKAGE_luci-lib-nixio=y
+CONFIG_PACKAGE_luci-light=y
+CONFIG_PACKAGE_luci-lua-runtime=y
+CONFIG_PACKAGE_luci-mod-admin-full=y
+CONFIG_PACKAGE_luci-mod-network=y
+CONFIG_PACKAGE_luci-mod-status=y
+CONFIG_PACKAGE_luci-mod-system=y
+CONFIG_PACKAGE_luci-proto-ipv6=y
+CONFIG_PACKAGE_luci-proto-ppp=y
+CONFIG_PACKAGE_luci-proto-wireguard=y
+CONFIG_PACKAGE_luci-theme-bootstrap=y
+CONFIG_PACKAGE_lvm2=y
+CONFIG_PACKAGE_lxc=y
+CONFIG_PACKAGE_lxc-attach=y
+CONFIG_PACKAGE_lxc-auto=y
+CONFIG_PACKAGE_lxc-autostart=y
+CONFIG_PACKAGE_lxc-cgroup=y
+CONFIG_PACKAGE_lxc-checkconfig=y
+CONFIG_PACKAGE_lxc-common=y
+CONFIG_PACKAGE_lxc-config=y
+CONFIG_PACKAGE_lxc-configs=y
+CONFIG_PACKAGE_lxc-console=y
+CONFIG_PACKAGE_lxc-copy=y
+CONFIG_PACKAGE_lxc-create=y
+CONFIG_PACKAGE_lxc-destroy=y
+CONFIG_PACKAGE_lxc-device=y
+CONFIG_PACKAGE_lxc-execute=y
+CONFIG_PACKAGE_lxc-freeze=y
+CONFIG_PACKAGE_lxc-hooks=y
+CONFIG_PACKAGE_lxc-info=y
+CONFIG_PACKAGE_lxc-init=y
+CONFIG_PACKAGE_lxc-ls=y
+CONFIG_PACKAGE_lxc-monitor=y
+CONFIG_PACKAGE_lxc-monitord=y
+CONFIG_PACKAGE_lxc-snapshot=y
+CONFIG_PACKAGE_lxc-start=y
+CONFIG_PACKAGE_lxc-stop=y
+CONFIG_PACKAGE_lxc-templates=y
+CONFIG_PACKAGE_lxc-top=y
+CONFIG_PACKAGE_lxc-unfreeze=y
+CONFIG_PACKAGE_lxc-unprivileged=y
+CONFIG_PACKAGE_lxc-unshare=y
+CONFIG_PACKAGE_lxc-user-nic=y
+CONFIG_PACKAGE_lxc-usernsexec=y
+CONFIG_PACKAGE_lxc-wait=y
+CONFIG_PACKAGE_mmc-utils=y
+CONFIG_PACKAGE_mount-utils=y
+CONFIG_PACKAGE_mt7921bt-firmware=y
+CONFIG_PACKAGE_mt7922bt-firmware=y
+CONFIG_PACKAGE_musl-fts=y
+CONFIG_PACKAGE_nano=y
+CONFIG_PACKAGE_nlbwmon=y
+CONFIG_PACKAGE_ntfs-3g=y
+CONFIG_PACKAGE_openssl-util=y
+CONFIG_PACKAGE_openvpn-easy-rsa=y
+CONFIG_PACKAGE_openvpn-openssl=y
+CONFIG_PACKAGE_parted=y
+CONFIG_PACKAGE_pbr=y
+CONFIG_PACKAGE_pciids=y
+CONFIG_PACKAGE_pciutils=y
+CONFIG_PACKAGE_ppp-mod-pppoa=y
+CONFIG_PACKAGE_ppp-mod-pppol2tp=y
+CONFIG_PACKAGE_ppp-mod-pptp=y
+CONFIG_PACKAGE_pptpd=y
+CONFIG_PACKAGE_qrencode=y
+CONFIG_PACKAGE_r8152-firmware=y
+CONFIG_PACKAGE_r8169-firmware=y
+CONFIG_PACKAGE_realtek-bluetooth-firmware=y
+CONFIG_PACKAGE_resize2fs=y
+CONFIG_PACKAGE_resolveip=y
+CONFIG_PACKAGE_rpcd=y
+CONFIG_PACKAGE_rpcd-mod-file=y
+CONFIG_PACKAGE_rpcd-mod-iwinfo=y
+CONFIG_PACKAGE_rpcd-mod-luci=y
+CONFIG_PACKAGE_rpcd-mod-lxc=y
+CONFIG_PACKAGE_rpcd-mod-rrdns=y
+CONFIG_PACKAGE_rpcd-mod-ucode=y
+CONFIG_PACKAGE_rrdtool1=y
+CONFIG_PACKAGE_rtl8723bu-firmware=y
+CONFIG_PACKAGE_rtl8723de-firmware=y
+CONFIG_PACKAGE_rtl8821ae-firmware=y
+CONFIG_PACKAGE_rtl8821ce-firmware=y
+CONFIG_PACKAGE_rtl8822be-firmware=y
+CONFIG_PACKAGE_rtl8822ce-firmware=y
+CONFIG_PACKAGE_rtl8851be-firmware=y
+CONFIG_PACKAGE_rtl8852ae-firmware=y
+CONFIG_PACKAGE_rtl8852be-firmware=y
+CONFIG_PACKAGE_rtl8852ce-firmware=y
+CONFIG_PACKAGE_runc=y
+CONFIG_PACKAGE_samba4-libs=y
+CONFIG_PACKAGE_samba4-server=y
+CONFIG_PACKAGE_sfdisk=y
+CONFIG_PACKAGE_shadow=y
+CONFIG_PACKAGE_shadow-chage=y
+CONFIG_PACKAGE_shadow-chfn=y
+CONFIG_PACKAGE_shadow-chgpasswd=y
+CONFIG_PACKAGE_shadow-chpasswd=y
+CONFIG_PACKAGE_shadow-chsh=y
+CONFIG_PACKAGE_shadow-common=y
+CONFIG_PACKAGE_shadow-expiry=y
+CONFIG_PACKAGE_shadow-faillog=y
+CONFIG_PACKAGE_shadow-gpasswd=y
+CONFIG_PACKAGE_shadow-groupadd=y
+CONFIG_PACKAGE_shadow-groupdel=y
+CONFIG_PACKAGE_shadow-groupmems=y
+CONFIG_PACKAGE_shadow-groupmod=y
+CONFIG_PACKAGE_shadow-groups=y
+CONFIG_PACKAGE_shadow-grpck=y
+CONFIG_PACKAGE_shadow-grpconv=y
+CONFIG_PACKAGE_shadow-grpunconv=y
+CONFIG_PACKAGE_shadow-lastlog=y
+CONFIG_PACKAGE_shadow-login=y
+CONFIG_PACKAGE_shadow-logoutd=y
+CONFIG_PACKAGE_shadow-newgidmap=y
+CONFIG_PACKAGE_shadow-newgrp=y
+CONFIG_PACKAGE_shadow-newuidmap=y
+CONFIG_PACKAGE_shadow-newusers=y
+CONFIG_PACKAGE_shadow-nologin=y
+CONFIG_PACKAGE_shadow-passwd=y
+CONFIG_PACKAGE_shadow-pwck=y
+CONFIG_PACKAGE_shadow-pwconv=y
+CONFIG_PACKAGE_shadow-pwunconv=y
+CONFIG_PACKAGE_shadow-su=y
+CONFIG_PACKAGE_shadow-useradd=y
+CONFIG_PACKAGE_shadow-userdel=y
+CONFIG_PACKAGE_shadow-usermod=y
+CONFIG_PACKAGE_shadow-utils=y
+CONFIG_PACKAGE_shadow-vipw=y
+CONFIG_PACKAGE_smartmontools=y
+CONFIG_PACKAGE_smartmontools-drivedb=y
+CONFIG_PACKAGE_sqm-scripts=y
+CONFIG_PACKAGE_sqm-scripts-extra=y
+CONFIG_PACKAGE_squashfs-tools-mksquashfs=y
+CONFIG_PACKAGE_sysfsutils=y
+CONFIG_PACKAGE_tc-tiny=y
+CONFIG_PACKAGE_tcpdump-mini=y
+CONFIG_PACKAGE_terminfo=y
+CONFIG_PACKAGE_tini=y
+CONFIG_PACKAGE_ttyd=y
+CONFIG_PACKAGE_ucert-full=y
+CONFIG_PACKAGE_ucode-mod-html=y
+CONFIG_PACKAGE_ucode-mod-lua=y
+CONFIG_PACKAGE_ucode-mod-math=y
+CONFIG_PACKAGE_ucode-mod-nl80211=y
+CONFIG_PACKAGE_ucode-mod-rtnl=y
+CONFIG_PACKAGE_ucode-mod-uloop=y
+CONFIG_PACKAGE_uencrypt-openssl=y
+CONFIG_PACKAGE_uhttpd=y
+CONFIG_PACKAGE_uhttpd-mod-ubus=y
+CONFIG_PACKAGE_usb-modeswitch=y
+CONFIG_PACKAGE_usbutils=y
+CONFIG_PACKAGE_uuidd=y
+CONFIG_PACKAGE_vsftpd-tls=y
+CONFIG_PACKAGE_wget-ssl=y
+CONFIG_PACKAGE_wireguard-tools=y
+CONFIG_PACKAGE_wireless-regdb=y
+CONFIG_PACKAGE_wpad-openssl=y
+CONFIG_PACKAGE_wsdd2=y
+CONFIG_PACKAGE_xl2tpd=y
+CONFIG_PACKAGE_xtables-nft=y
+CONFIG_PACKAGE_zlib=y
+CONFIG_PARTED_READLINE=y
+CONFIG_SAMBA4_SERVER_AVAHI=y
+CONFIG_SAMBA4_SERVER_NETBIOS=y
+CONFIG_SAMBA4_SERVER_VFS=y
+CONFIG_SAMBA4_SERVER_WSDD2=y
+CONFIG_SQUASHFS_TOOLS_XZ_SUPPORT=y
+CONFIG_SQUASHFS_TOOLS_ZSTD_SUPPORT=y
+CONFIG_TARGET_ALL_PROFILES=y
+CONFIG_TARGET_OPTIONS=y
+# CONFIG_TARGET_ROOTFS_EXT4FS is not set
+CONFIG_TARGET_ROOTFS_PARTSIZE=512
+CONFIG_ZSTD_OPTIMIZE_O3=y
+CONFIG_shadow-all=y
+# CONFIG_OPENVPN_openssl_ENABLE_SMALL is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_firefly_roc-rk3328-cc is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-neo3 is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c-plus is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6s is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_pine64_rockpro64 is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_xunlong_orangepi-5-plus is not set
diff --git a/.github/workflows/config.buildinfo1 b/.github/workflows/config.buildinfo1
new file mode 100644
index 0000000000..a568c2f32b
--- /dev/null
+++ b/.github/workflows/config.buildinfo1
@@ -0,0 +1,688 @@
+CONFIG_TARGET_rockchip=y
+CONFIG_TARGET_rockchip_armv8=y
+CONFIG_TARGET_MULTI_PROFILE=y
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c-plus=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6c-plus=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6s=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_friendlyelec_nanopi-r6s=""
+CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_xunlong_orangepi-5-plus=y
+CONFIG_TARGET_DEVICE_PACKAGES_rockchip_armv8_DEVICE_xunlong_orangepi-5-plus=""
+CONFIG_DEVEL=y
+CONFIG_BUSYBOX_CUSTOM=y
+CONFIG_TARGET_PER_DEVICE_ROOTFS=y
+CONFIG_ATH10K_LEDS=y
+CONFIG_ATH9K_HWRNG=y
+CONFIG_ATH_USER_REGD=y
+CONFIG_AUTOREMOVE=y
+CONFIG_BRCMFMAC_PCIE=y
+CONFIG_BRCMFMAC_SDIO=y
+CONFIG_BRCMFMAC_USB=y
+CONFIG_BUILD_LOG=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_GETOPT_LONG=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_SEAMLESS_XZ=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_TAR_LONG_OPTIONS=y
+CONFIG_BUSYBOX_CONFIG_GETOPT=y
+CONFIG_BUSYBOX_CONFIG_MOUNTPOINT=y
+CONFIG_BUSYBOX_CONFIG_UNXZ=y
+CONFIG_BUSYBOX_CONFIG_XZ=y
+CONFIG_DOCKER_CGROUP_OPTIONS=y
+CONFIG_DOCKER_CHECK_CONFIG=y
+CONFIG_DOCKER_NET_ENCRYPT=y
+CONFIG_DOCKER_NET_MACVLAN=y
+CONFIG_DOCKER_NET_OVERLAY=y
+CONFIG_DOCKER_NET_TFTP=y
+CONFIG_DOCKER_OPTIONAL_FEATURES=y
+CONFIG_DOCKER_STO_BTRFS=y
+CONFIG_DOCKER_STO_EXT4=y
+CONFIG_DRIVER_11AC_SUPPORT=y
+CONFIG_DRIVER_11AX_SUPPORT=y
+CONFIG_GNUTLS_ALPN=y
+CONFIG_GNUTLS_ANON=y
+CONFIG_GNUTLS_DTLS_SRTP=y
+CONFIG_GNUTLS_HEARTBEAT=y
+CONFIG_GNUTLS_OCSP=y
+CONFIG_GNUTLS_PSK=y
+CONFIG_HTOP_LMSENSORS=y
+CONFIG_KERNEL_ARM_PMU=y
+CONFIG_KERNEL_BTRFS_FS_POSIX_ACL=y
+CONFIG_KERNEL_CFQ_GROUP_IOSCHED=y
+CONFIG_KERNEL_CGROUP_DEVICE=y
+CONFIG_KERNEL_CGROUP_FREEZER=y
+CONFIG_KERNEL_CGROUP_HUGETLB=y
+CONFIG_KERNEL_CGROUP_NET_PRIO=y
+CONFIG_KERNEL_CGROUP_PERF=y
+CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
+CONFIG_KERNEL_EXT4_FS_SECURITY=y
+CONFIG_KERNEL_FS_POSIX_ACL=y
+CONFIG_KERNEL_HUGETLBFS=y
+CONFIG_KERNEL_HUGETLB_PAGE=y
+CONFIG_KERNEL_MEMCG_SWAP_ENABLED=y
+CONFIG_KERNEL_NET_CLS_CGROUP=y
+CONFIG_KERNEL_PAGE_POOL=y
+CONFIG_KERNEL_PERF_EVENTS=y
+CONFIG_KERNEL_RELAY=y
+CONFIG_KERNEL_TRANSPARENT_HUGEPAGE=y
+CONFIG_KERNEL_TRANSPARENT_HUGEPAGE_ALWAYS=y
+CONFIG_LIBCURL_COOKIES=y
+CONFIG_LIBCURL_FILE=y
+CONFIG_LIBCURL_FTP=y
+CONFIG_LIBCURL_HTTP=y
+CONFIG_LIBCURL_MBEDTLS=y
+CONFIG_LIBCURL_NGHTTP2=y
+CONFIG_LIBCURL_NO_SMB="!"
+CONFIG_LIBCURL_PROXY=y
+CONFIG_LIBCURL_UNIX_SOCKETS=y
+CONFIG_LXC_BUSYBOX_OPTIONS=y
+CONFIG_LXC_KERNEL_OPTIONS=y
+CONFIG_LXC_NETWORKING=y
+CONFIG_LXC_SECCOMP=y
+CONFIG_OPENSSL_ENGINE=y
+CONFIG_OPENSSL_ENGINE_BUILTIN=y
+CONFIG_OPENSSL_ENGINE_BUILTIN_DEVCRYPTO=y
+CONFIG_OPENSSL_OPTIMIZE_SPEED=y
+CONFIG_OPENSSL_WITH_ASM=y
+CONFIG_OPENSSL_WITH_CHACHA_POLY1305=y
+CONFIG_OPENSSL_WITH_CMS=y
+CONFIG_OPENSSL_WITH_DEPRECATED=y
+CONFIG_OPENSSL_WITH_ERROR_MESSAGES=y
+CONFIG_OPENSSL_WITH_IDEA=y
+CONFIG_OPENSSL_WITH_MDC2=y
+CONFIG_OPENSSL_WITH_PSK=y
+CONFIG_OPENSSL_WITH_SEED=y
+CONFIG_OPENSSL_WITH_SRP=y
+CONFIG_OPENSSL_WITH_TLS13=y
+CONFIG_OPENSSL_WITH_WHIRLPOOL=y
+CONFIG_OPENVPN_openssl_ENABLE_FRAGMENT=y
+CONFIG_OPENVPN_openssl_ENABLE_LZ4=y
+CONFIG_OPENVPN_openssl_ENABLE_LZO=y
+CONFIG_OPENVPN_openssl_ENABLE_PORT_SHARE=y
+CONFIG_PACKAGE_ATH_DFS=y
+CONFIG_PACKAGE_MAC80211_DEBUGFS=y
+CONFIG_PACKAGE_MAC80211_MESH=y
+CONFIG_PACKAGE_NTFS-3G_HAS_PROBE=y
+CONFIG_PACKAGE_TAR_BZIP2=y
+CONFIG_PACKAGE_TAR_GZIP=y
+CONFIG_PACKAGE_TAR_XZ=y
+CONFIG_PACKAGE_TAR_ZSTD=y
+CONFIG_PACKAGE_adb=y
+CONFIG_PACKAGE_adblock=y
+CONFIG_PACKAGE_arp-scan=y
+CONFIG_PACKAGE_arp-scan-database=y
+CONFIG_PACKAGE_ath10k-firmware-qca6174=y
+CONFIG_PACKAGE_atop=y
+CONFIG_PACKAGE_attr=y
+CONFIG_PACKAGE_avahi-dbus-daemon=y
+CONFIG_PACKAGE_bash=y
+CONFIG_PACKAGE_blkdiscard=y
+CONFIG_PACKAGE_blkid=y
+CONFIG_PACKAGE_block-mount=y
+CONFIG_PACKAGE_blockd=y
+CONFIG_PACKAGE_blockdev=y
+CONFIG_PACKAGE_bluez-daemon=y
+CONFIG_PACKAGE_bluez-libs=y
+CONFIG_PACKAGE_bluez-tools=y
+CONFIG_PACKAGE_bluez-utils=y
+CONFIG_PACKAGE_bluez-utils-extra=y
+CONFIG_PACKAGE_brcmfmac-firmware-43456-sdio=m
+CONFIG_PACKAGE_brcmfmac-firmware-43456-sdio-rockpi-4=m
+CONFIG_PACKAGE_brcmfmac-firmware-usb=m
+CONFIG_PACKAGE_btop=y
+CONFIG_PACKAGE_btrfs-progs=y
+CONFIG_PACKAGE_bzip2=y
+CONFIG_PACKAGE_ca-certificates=y
+CONFIG_PACKAGE_ccrypt=y
+CONFIG_PACKAGE_certtool=y
+CONFIG_PACKAGE_cgi-io=y
+CONFIG_PACKAGE_cgroupfs-mount=y
+CONFIG_PACKAGE_collectd=y
+CONFIG_PACKAGE_collectd-mod-conntrack=y
+CONFIG_PACKAGE_collectd-mod-cpu=y
+CONFIG_PACKAGE_collectd-mod-cpufreq=y
+CONFIG_PACKAGE_collectd-mod-interface=y
+CONFIG_PACKAGE_collectd-mod-irq=y
+CONFIG_PACKAGE_collectd-mod-iwinfo=y
+CONFIG_PACKAGE_collectd-mod-load=y
+CONFIG_PACKAGE_collectd-mod-memory=y
+CONFIG_PACKAGE_collectd-mod-network=y
+CONFIG_PACKAGE_collectd-mod-rrdtool=y
+CONFIG_PACKAGE_collectd-mod-sensors=y
+CONFIG_PACKAGE_collectd-mod-thermal=y
+CONFIG_PACKAGE_containerd=y
+CONFIG_PACKAGE_coreutils=y
+CONFIG_PACKAGE_coreutils-sort=y
+CONFIG_PACKAGE_cryptsetup=y
+CONFIG_PACKAGE_cryptsetup-ssh=y
+CONFIG_PACKAGE_dbus=y
+CONFIG_PACKAGE_dnsmasq=m
+CONFIG_PACKAGE_dnsmasq-full=y
+CONFIG_PACKAGE_dnsmasq_full_auth=y
+CONFIG_PACKAGE_dnsmasq_full_conntrack=y
+CONFIG_PACKAGE_dnsmasq_full_dhcp=y
+CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
+CONFIG_PACKAGE_dnsmasq_full_dnssec=y
+CONFIG_PACKAGE_dnsmasq_full_nftset=y
+CONFIG_PACKAGE_dnsmasq_full_noid=y
+CONFIG_PACKAGE_dnsmasq_full_tftp=y
+CONFIG_PACKAGE_docker=y
+CONFIG_PACKAGE_docker-compose=y
+CONFIG_PACKAGE_dockerd=y
+CONFIG_PACKAGE_ethtool-full=y
+CONFIG_PACKAGE_exfat-fsck=y
+CONFIG_PACKAGE_exfat-mkfs=y
+CONFIG_PACKAGE_f2fs-tools=y
+CONFIG_PACKAGE_f2fsck=y
+CONFIG_PACKAGE_fdisk=y
+CONFIG_PACKAGE_findfs=y
+CONFIG_PACKAGE_fixparts=y
+CONFIG_PACKAGE_flock=y
+CONFIG_PACKAGE_fuse-utils=y
+CONFIG_PACKAGE_fuse3-utils=y
+CONFIG_PACKAGE_gdisk=y
+CONFIG_PACKAGE_getopt=y
+CONFIG_PACKAGE_glib2=y
+CONFIG_PACKAGE_gnupg=y
+CONFIG_PACKAGE_gnupg-utils=y
+CONFIG_PACKAGE_gnutls-utils=y
+CONFIG_PACKAGE_hdparm=y
+CONFIG_PACKAGE_hostapd-common=y
+CONFIG_PACKAGE_htop=y
+CONFIG_PACKAGE_hwclock=y
+CONFIG_PACKAGE_ip-full=y
+CONFIG_PACKAGE_ip6tables-nft=y
+CONFIG_PACKAGE_iperf3-ssl=y
+CONFIG_PACKAGE_ipset=y
+CONFIG_PACKAGE_iptables-mod-extra=y
+CONFIG_PACKAGE_iptables-mod-ipopt=y
+CONFIG_PACKAGE_iptables-nft=y
+CONFIG_PACKAGE_irqbalance=y
+CONFIG_PACKAGE_iw-full=y
+CONFIG_PACKAGE_iwinfo=y
+CONFIG_PACKAGE_kmod-asn1-decoder=y
+CONFIG_PACKAGE_kmod-asn1-encoder=y
+CONFIG_PACKAGE_kmod-ata-ahci=y
+CONFIG_PACKAGE_kmod-ata-core=y
+CONFIG_PACKAGE_kmod-ata-dwc=y
+CONFIG_PACKAGE_kmod-ath=y
+CONFIG_PACKAGE_kmod-ath10k=y
+CONFIG_PACKAGE_kmod-ath9k=y
+CONFIG_PACKAGE_kmod-ath9k-common=y
+CONFIG_PACKAGE_kmod-atm=y
+CONFIG_PACKAGE_kmod-bluetooth=y
+CONFIG_PACKAGE_kmod-br-netfilter=y
+CONFIG_PACKAGE_kmod-brcmfmac=m
+CONFIG_PACKAGE_kmod-brcmutil=m
+CONFIG_PACKAGE_kmod-cdrom=y
+CONFIG_PACKAGE_kmod-cfg80211=y
+CONFIG_PACKAGE_kmod-crypto-acompress=y
+CONFIG_PACKAGE_kmod-crypto-aead=y
+CONFIG_PACKAGE_kmod-crypto-arc4=y
+CONFIG_PACKAGE_kmod-crypto-authenc=y
+CONFIG_PACKAGE_kmod-crypto-cbc=y
+CONFIG_PACKAGE_kmod-crypto-ccm=y
+CONFIG_PACKAGE_kmod-crypto-cmac=y
+CONFIG_PACKAGE_kmod-crypto-crc32=y
+CONFIG_PACKAGE_kmod-crypto-ctr=y
+CONFIG_PACKAGE_kmod-crypto-deflate=y
+CONFIG_PACKAGE_kmod-crypto-des=y
+CONFIG_PACKAGE_kmod-crypto-ecb=y
+CONFIG_PACKAGE_kmod-crypto-ecdh=y
+CONFIG_PACKAGE_kmod-crypto-echainiv=y
+CONFIG_PACKAGE_kmod-crypto-gcm=y
+CONFIG_PACKAGE_kmod-crypto-gf128=y
+CONFIG_PACKAGE_kmod-crypto-ghash=y
+CONFIG_PACKAGE_kmod-crypto-hmac=y
+CONFIG_PACKAGE_kmod-crypto-kpp=y
+CONFIG_PACKAGE_kmod-crypto-lib-chacha20=y
+CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=y
+CONFIG_PACKAGE_kmod-crypto-lib-curve25519=y
+CONFIG_PACKAGE_kmod-crypto-lib-poly1305=y
+CONFIG_PACKAGE_kmod-crypto-manager=y
+CONFIG_PACKAGE_kmod-crypto-md5=y
+CONFIG_PACKAGE_kmod-crypto-misc=y
+CONFIG_PACKAGE_kmod-crypto-null=y
+CONFIG_PACKAGE_kmod-crypto-rng=y
+CONFIG_PACKAGE_kmod-crypto-seqiv=y
+CONFIG_PACKAGE_kmod-crypto-sha1=y
+CONFIG_PACKAGE_kmod-crypto-sha256=y
+CONFIG_PACKAGE_kmod-crypto-sha512=y
+CONFIG_PACKAGE_kmod-crypto-user=y
+CONFIG_PACKAGE_kmod-crypto-xts=y
+CONFIG_PACKAGE_kmod-cryptodev=y
+CONFIG_PACKAGE_kmod-dax=y
+CONFIG_PACKAGE_kmod-dm=y
+CONFIG_PACKAGE_kmod-dummy=y
+CONFIG_PACKAGE_kmod-fs-autofs4=y
+CONFIG_PACKAGE_kmod-fs-btrfs=y
+CONFIG_PACKAGE_kmod-fs-exfat=y
+CONFIG_PACKAGE_kmod-fs-exportfs=y
+CONFIG_PACKAGE_kmod-fs-ext4=y
+CONFIG_PACKAGE_kmod-fs-f2fs=y
+CONFIG_PACKAGE_kmod-fs-hfs=y
+CONFIG_PACKAGE_kmod-fs-hfsplus=y
+CONFIG_PACKAGE_kmod-fs-ntfs3=y
+CONFIG_PACKAGE_kmod-fs-squashfs=y
+CONFIG_PACKAGE_kmod-fs-vfat=y
+CONFIG_PACKAGE_kmod-fs-xfs=y
+CONFIG_PACKAGE_kmod-fuse=y
+CONFIG_PACKAGE_kmod-gre=y
+CONFIG_PACKAGE_kmod-hid=y
+CONFIG_PACKAGE_kmod-hwmon-gpiofan=y
+CONFIG_PACKAGE_kmod-hwmon-pwmfan=y
+CONFIG_PACKAGE_kmod-i2c-core=y
+CONFIG_PACKAGE_kmod-ifb=y
+CONFIG_PACKAGE_kmod-ikconfig=y
+CONFIG_PACKAGE_kmod-input-core=y
+CONFIG_PACKAGE_kmod-input-evdev=y
+CONFIG_PACKAGE_kmod-ip6tables=y
+CONFIG_PACKAGE_kmod-ipsec=y
+CONFIG_PACKAGE_kmod-ipt-conntrack=y
+CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
+CONFIG_PACKAGE_kmod-ipt-core=y
+CONFIG_PACKAGE_kmod-ipt-extra=y
+CONFIG_PACKAGE_kmod-ipt-ipopt=y
+CONFIG_PACKAGE_kmod-ipt-ipset=y
+CONFIG_PACKAGE_kmod-ipt-nat=y
+CONFIG_PACKAGE_kmod-ipt-nat6=y
+CONFIG_PACKAGE_kmod-ipt-physdev=y
+CONFIG_PACKAGE_kmod-iptunnel=y
+CONFIG_PACKAGE_kmod-keys-encrypted=y
+CONFIG_PACKAGE_kmod-keys-trusted=y
+CONFIG_PACKAGE_kmod-l2tp=y
+CONFIG_PACKAGE_kmod-lib-crc16=y
+CONFIG_PACKAGE_kmod-lib-lzo=y
+CONFIG_PACKAGE_kmod-lib-raid6=y
+CONFIG_PACKAGE_kmod-lib-textsearch=y
+CONFIG_PACKAGE_kmod-lib-xor=y
+CONFIG_PACKAGE_kmod-lib-zlib-deflate=y
+CONFIG_PACKAGE_kmod-lib-zlib-inflate=y
+CONFIG_PACKAGE_kmod-lib-zstd=y
+CONFIG_PACKAGE_kmod-libphy=y
+CONFIG_PACKAGE_kmod-mac80211=y
+CONFIG_PACKAGE_kmod-macvlan=y
+CONFIG_PACKAGE_kmod-mdio-devres=y
+CONFIG_PACKAGE_kmod-mii=y
+CONFIG_PACKAGE_kmod-mmc=m
+CONFIG_PACKAGE_kmod-mppe=y
+CONFIG_PACKAGE_kmod-mt76-connac=y
+CONFIG_PACKAGE_kmod-mt76-core=y
+CONFIG_PACKAGE_kmod-mt76-usb=y
+CONFIG_PACKAGE_kmod-mt76x02-common=y
+CONFIG_PACKAGE_kmod-mt76x02-usb=y
+CONFIG_PACKAGE_kmod-mt76x2-common=y
+CONFIG_PACKAGE_kmod-mt76x2u=y
+CONFIG_PACKAGE_kmod-mt7915-firmware=y
+CONFIG_PACKAGE_kmod-mt7915e=y
+CONFIG_PACKAGE_kmod-mt7916-firmware=y
+CONFIG_PACKAGE_kmod-mt7921-common=y
+CONFIG_PACKAGE_kmod-mt7921-firmware=y
+CONFIG_PACKAGE_kmod-mt7921e=y
+CONFIG_PACKAGE_kmod-mt7921u=y
+CONFIG_PACKAGE_kmod-mt7922-firmware=y
+CONFIG_PACKAGE_kmod-mt792x-common=y
+CONFIG_PACKAGE_kmod-mt792x-usb=y
+CONFIG_PACKAGE_kmod-nf-conncount=y
+CONFIG_PACKAGE_kmod-nf-conntrack-netlink=y
+CONFIG_PACKAGE_kmod-nf-ipt=y
+CONFIG_PACKAGE_kmod-nf-ipt6=y
+CONFIG_PACKAGE_kmod-nf-ipvs=y
+CONFIG_PACKAGE_kmod-nf-nat6=y
+CONFIG_PACKAGE_kmod-nf-nathelper=y
+CONFIG_PACKAGE_kmod-nf-nathelper-extra=y
+CONFIG_PACKAGE_kmod-nft-compat=y
+CONFIG_PACKAGE_kmod-nls-base=y
+CONFIG_PACKAGE_kmod-nls-cp437=y
+CONFIG_PACKAGE_kmod-nls-iso8859-1=y
+CONFIG_PACKAGE_kmod-nls-utf8=y
+CONFIG_PACKAGE_kmod-nvme=y
+CONFIG_PACKAGE_kmod-oid-registry=y
+CONFIG_PACKAGE_kmod-phy-realtek=y
+CONFIG_PACKAGE_kmod-pppoa=y
+CONFIG_PACKAGE_kmod-pppol2tp=y
+CONFIG_PACKAGE_kmod-pptp=y
+CONFIG_PACKAGE_kmod-r8169=y
+CONFIG_PACKAGE_kmod-random-core=y
+CONFIG_PACKAGE_kmod-regmap-core=y
+CONFIG_PACKAGE_kmod-rtl8812au-ac=y
+CONFIG_PACKAGE_kmod-rtl8821ae=y
+CONFIG_PACKAGE_kmod-rtlwifi=y
+CONFIG_PACKAGE_kmod-rtlwifi-btcoexist=y
+CONFIG_PACKAGE_kmod-rtlwifi-pci=y
+CONFIG_PACKAGE_kmod-rtw88=y
+CONFIG_PACKAGE_kmod-rtw88-8723d=y
+CONFIG_PACKAGE_kmod-rtw88-8723de=y
+CONFIG_PACKAGE_kmod-rtw88-8821c=y
+CONFIG_PACKAGE_kmod-rtw88-8821ce=y
+CONFIG_PACKAGE_kmod-rtw88-8821cu=y
+CONFIG_PACKAGE_kmod-rtw88-8822b=y
+CONFIG_PACKAGE_kmod-rtw88-8822be=y
+CONFIG_PACKAGE_kmod-rtw88-8822bu=y
+CONFIG_PACKAGE_kmod-rtw88-8822c=y
+CONFIG_PACKAGE_kmod-rtw88-8822ce=y
+CONFIG_PACKAGE_kmod-rtw88-8822cu=y
+CONFIG_PACKAGE_kmod-rtw88-pci=y
+CONFIG_PACKAGE_kmod-rtw88-usb=y
+CONFIG_PACKAGE_kmod-rtw89=y
+CONFIG_PACKAGE_kmod-sched-cake=y
+CONFIG_PACKAGE_kmod-sched-core=y
+CONFIG_PACKAGE_kmod-scsi-core=y
+CONFIG_PACKAGE_kmod-tpm=y
+CONFIG_PACKAGE_kmod-tun=y
+CONFIG_PACKAGE_kmod-udptunnel4=y
+CONFIG_PACKAGE_kmod-udptunnel6=y
+CONFIG_PACKAGE_kmod-usb-core=y
+CONFIG_PACKAGE_kmod-usb-dwc2=y
+CONFIG_PACKAGE_kmod-usb-dwc3=y
+CONFIG_PACKAGE_kmod-usb-ehci=y
+CONFIG_PACKAGE_kmod-usb-gadget=y
+CONFIG_PACKAGE_kmod-usb-net=y
+CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
+CONFIG_PACKAGE_kmod-usb-net-cdc-ncm=y
+CONFIG_PACKAGE_kmod-usb-net-ipheth=y
+CONFIG_PACKAGE_kmod-usb-net-rndis=y
+CONFIG_PACKAGE_kmod-usb-net-rtl8152=y
+CONFIG_PACKAGE_kmod-usb-ohci=y
+CONFIG_PACKAGE_kmod-usb-printer=y
+CONFIG_PACKAGE_kmod-usb-roles=y
+CONFIG_PACKAGE_kmod-usb-storage=y
+CONFIG_PACKAGE_kmod-usb-storage-extras=y
+CONFIG_PACKAGE_kmod-usb-storage-uas=y
+CONFIG_PACKAGE_kmod-usb-xhci-hcd=y
+CONFIG_PACKAGE_kmod-usb2=y
+CONFIG_PACKAGE_kmod-usb2-pci=y
+CONFIG_PACKAGE_kmod-usb3=y
+CONFIG_PACKAGE_kmod-veth=y
+CONFIG_PACKAGE_kmod-vxlan=y
+CONFIG_PACKAGE_kmod-wireguard=y
+CONFIG_PACKAGE_libaio=y
+CONFIG_PACKAGE_libatomic=y
+CONFIG_PACKAGE_libattr=y
+CONFIG_PACKAGE_libavahi-client=y
+CONFIG_PACKAGE_libavahi-dbus-support=y
+CONFIG_PACKAGE_libbpf=y
+CONFIG_PACKAGE_libbz2=y
+CONFIG_PACKAGE_libcap=y
+CONFIG_PACKAGE_libcap-ng=y
+CONFIG_PACKAGE_libcurl=y
+CONFIG_PACKAGE_libdaemon=y
+CONFIG_PACKAGE_libdbus=y
+CONFIG_PACKAGE_libdevmapper=y
+CONFIG_PACKAGE_libelf=y
+CONFIG_PACKAGE_libevdev=y
+CONFIG_PACKAGE_libexpat=y
+CONFIG_PACKAGE_libfdisk=y
+CONFIG_PACKAGE_libffi=y
+CONFIG_PACKAGE_libfuse=y
+CONFIG_PACKAGE_libfuse3=y
+CONFIG_PACKAGE_libgmp=y
+CONFIG_PACKAGE_libgnutls=y
+CONFIG_PACKAGE_libical=y
+CONFIG_PACKAGE_libipset=y
+CONFIG_PACKAGE_libiptext=y
+CONFIG_PACKAGE_libiptext-nft=y
+CONFIG_PACKAGE_libiptext6=y
+CONFIG_PACKAGE_libiwinfo=y
+CONFIG_PACKAGE_libiwinfo-data=y
+CONFIG_PACKAGE_libkmod=y
+CONFIG_PACKAGE_libltdl=y
+CONFIG_PACKAGE_liblua=y
+CONFIG_PACKAGE_liblucihttp=y
+CONFIG_PACKAGE_liblucihttp-lua=y
+CONFIG_PACKAGE_liblucihttp-ucode=y
+CONFIG_PACKAGE_liblxc=y
+CONFIG_PACKAGE_liblz4=y
+CONFIG_PACKAGE_liblzma=y
+CONFIG_PACKAGE_liblzo=y
+CONFIG_PACKAGE_libmount=y
+CONFIG_PACKAGE_libncurses=y
+CONFIG_PACKAGE_libnetfilter-conntrack=y
+CONFIG_PACKAGE_libnettle=y
+CONFIG_PACKAGE_libnfnetlink=y
+CONFIG_PACKAGE_libnghttp2=y
+CONFIG_PACKAGE_libopenssl=y
+CONFIG_PACKAGE_libopenssl-conf=y
+CONFIG_PACKAGE_libopenssl-legacy=y
+CONFIG_PACKAGE_libparted=y
+CONFIG_PACKAGE_libpcap=y
+CONFIG_PACKAGE_libpci=y
+CONFIG_PACKAGE_libpcre=y
+CONFIG_PACKAGE_libpcre2=y
+CONFIG_PACKAGE_libpopt=y
+CONFIG_PACKAGE_libqrencode=y
+CONFIG_PACKAGE_libreadline=y
+CONFIG_PACKAGE_librrd1=y
+CONFIG_PACKAGE_libseccomp=y
+CONFIG_PACKAGE_libsensors=y
+CONFIG_PACKAGE_libssh=y
+CONFIG_PACKAGE_libstdcpp=y
+CONFIG_PACKAGE_libsysfs=y
+CONFIG_PACKAGE_libtasn1=y
+CONFIG_PACKAGE_libtirpc=y
+CONFIG_PACKAGE_libubus-lua=y
+CONFIG_PACKAGE_libudev-zero=y
+CONFIG_PACKAGE_liburing=y
+CONFIG_PACKAGE_libusb-1.0=y
+CONFIG_PACKAGE_libuv=y
+CONFIG_PACKAGE_libwebsockets-full=y
+CONFIG_PACKAGE_libxtables=y
+CONFIG_PACKAGE_libzstd=y
+CONFIG_PACKAGE_linux-atm=y
+CONFIG_PACKAGE_lm-sensors=y
+CONFIG_PACKAGE_losetup=y
+CONFIG_PACKAGE_lsblk=y
+CONFIG_PACKAGE_lua=y
+CONFIG_PACKAGE_luci=y
+CONFIG_PACKAGE_luci-app-adblock=y
+CONFIG_PACKAGE_luci-app-diskman=y
+CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs=y
+CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk=y
+CONFIG_PACKAGE_luci-app-dockerman=y
+CONFIG_PACKAGE_luci-app-firewall=y
+CONFIG_PACKAGE_luci-app-irqbalance=y
+CONFIG_PACKAGE_luci-app-lxc=y
+CONFIG_PACKAGE_luci-app-nlbwmon=y
+CONFIG_PACKAGE_luci-app-openvpn=y
+CONFIG_PACKAGE_luci-app-opkg=y
+CONFIG_PACKAGE_luci-app-pbr=y
+CONFIG_PACKAGE_luci-app-samba4=y
+CONFIG_PACKAGE_luci-app-sqm=y
+CONFIG_PACKAGE_luci-app-statistics=y
+CONFIG_PACKAGE_luci-app-ttyd=y
+CONFIG_PACKAGE_luci-base=y
+CONFIG_PACKAGE_luci-compat=y
+CONFIG_PACKAGE_luci-lib-base=y
+CONFIG_PACKAGE_luci-lib-docker=y
+CONFIG_PACKAGE_luci-lib-ip=y
+CONFIG_PACKAGE_luci-lib-jsonc=y
+CONFIG_PACKAGE_luci-lib-nixio=y
+CONFIG_PACKAGE_luci-light=y
+CONFIG_PACKAGE_luci-lua-runtime=y
+CONFIG_PACKAGE_luci-mod-admin-full=y
+CONFIG_PACKAGE_luci-mod-network=y
+CONFIG_PACKAGE_luci-mod-status=y
+CONFIG_PACKAGE_luci-mod-system=y
+CONFIG_PACKAGE_luci-proto-ipv6=y
+CONFIG_PACKAGE_luci-proto-ppp=y
+CONFIG_PACKAGE_luci-proto-wireguard=y
+CONFIG_PACKAGE_luci-theme-bootstrap=y
+CONFIG_PACKAGE_lvm2=y
+CONFIG_PACKAGE_lxc=y
+CONFIG_PACKAGE_lxc-attach=y
+CONFIG_PACKAGE_lxc-auto=y
+CONFIG_PACKAGE_lxc-autostart=y
+CONFIG_PACKAGE_lxc-cgroup=y
+CONFIG_PACKAGE_lxc-checkconfig=y
+CONFIG_PACKAGE_lxc-common=y
+CONFIG_PACKAGE_lxc-config=y
+CONFIG_PACKAGE_lxc-configs=y
+CONFIG_PACKAGE_lxc-console=y
+CONFIG_PACKAGE_lxc-copy=y
+CONFIG_PACKAGE_lxc-create=y
+CONFIG_PACKAGE_lxc-destroy=y
+CONFIG_PACKAGE_lxc-device=y
+CONFIG_PACKAGE_lxc-execute=y
+CONFIG_PACKAGE_lxc-freeze=y
+CONFIG_PACKAGE_lxc-hooks=y
+CONFIG_PACKAGE_lxc-info=y
+CONFIG_PACKAGE_lxc-init=y
+CONFIG_PACKAGE_lxc-ls=y
+CONFIG_PACKAGE_lxc-monitor=y
+CONFIG_PACKAGE_lxc-monitord=y
+CONFIG_PACKAGE_lxc-snapshot=y
+CONFIG_PACKAGE_lxc-start=y
+CONFIG_PACKAGE_lxc-stop=y
+CONFIG_PACKAGE_lxc-templates=y
+CONFIG_PACKAGE_lxc-top=y
+CONFIG_PACKAGE_lxc-unfreeze=y
+CONFIG_PACKAGE_lxc-unprivileged=y
+CONFIG_PACKAGE_lxc-unshare=y
+CONFIG_PACKAGE_lxc-user-nic=y
+CONFIG_PACKAGE_lxc-usernsexec=y
+CONFIG_PACKAGE_lxc-wait=y
+CONFIG_PACKAGE_mmc-utils=y
+CONFIG_PACKAGE_mount-utils=y
+CONFIG_PACKAGE_mt7921bt-firmware=y
+CONFIG_PACKAGE_mt7922bt-firmware=y
+CONFIG_PACKAGE_nano=y
+CONFIG_PACKAGE_nlbwmon=y
+CONFIG_PACKAGE_ntfs-3g=y
+CONFIG_PACKAGE_openssl-util=y
+CONFIG_PACKAGE_openvpn-easy-rsa=y
+CONFIG_PACKAGE_openvpn-openssl=y
+CONFIG_PACKAGE_parted=y
+CONFIG_PACKAGE_pbr=y
+CONFIG_PACKAGE_pciids=y
+CONFIG_PACKAGE_pciutils=y
+CONFIG_PACKAGE_ppp-mod-pppoa=y
+CONFIG_PACKAGE_ppp-mod-pppol2tp=y
+CONFIG_PACKAGE_ppp-mod-pptp=y
+CONFIG_PACKAGE_pptpd=y
+CONFIG_PACKAGE_qrencode=y
+CONFIG_PACKAGE_r8152-firmware=y
+CONFIG_PACKAGE_r8169-firmware=y
+CONFIG_PACKAGE_realtek-bluetooth-firmware=y
+CONFIG_PACKAGE_resize2fs=y
+CONFIG_PACKAGE_resolveip=y
+CONFIG_PACKAGE_rpcd=y
+CONFIG_PACKAGE_rpcd-mod-file=y
+CONFIG_PACKAGE_rpcd-mod-iwinfo=y
+CONFIG_PACKAGE_rpcd-mod-luci=y
+CONFIG_PACKAGE_rpcd-mod-lxc=y
+CONFIG_PACKAGE_rpcd-mod-rrdns=y
+CONFIG_PACKAGE_rpcd-mod-ucode=y
+CONFIG_PACKAGE_rrdtool1=y
+CONFIG_PACKAGE_rtl8723bu-firmware=y
+CONFIG_PACKAGE_rtl8723de-firmware=y
+CONFIG_PACKAGE_rtl8821ae-firmware=y
+CONFIG_PACKAGE_rtl8821ce-firmware=y
+CONFIG_PACKAGE_rtl8822be-firmware=y
+CONFIG_PACKAGE_rtl8822ce-firmware=y
+CONFIG_PACKAGE_rtl8851be-firmware=y
+CONFIG_PACKAGE_rtl8852ae-firmware=y
+CONFIG_PACKAGE_rtl8852be-firmware=y
+CONFIG_PACKAGE_rtl8852ce-firmware=y
+CONFIG_PACKAGE_runc=y
+CONFIG_PACKAGE_samba4-libs=y
+CONFIG_PACKAGE_samba4-server=y
+CONFIG_PACKAGE_sfdisk=y
+CONFIG_PACKAGE_shadow=y
+CONFIG_PACKAGE_shadow-chage=y
+CONFIG_PACKAGE_shadow-chfn=y
+CONFIG_PACKAGE_shadow-chgpasswd=y
+CONFIG_PACKAGE_shadow-chpasswd=y
+CONFIG_PACKAGE_shadow-chsh=y
+CONFIG_PACKAGE_shadow-common=y
+CONFIG_PACKAGE_shadow-expiry=y
+CONFIG_PACKAGE_shadow-faillog=y
+CONFIG_PACKAGE_shadow-gpasswd=y
+CONFIG_PACKAGE_shadow-groupadd=y
+CONFIG_PACKAGE_shadow-groupdel=y
+CONFIG_PACKAGE_shadow-groupmems=y
+CONFIG_PACKAGE_shadow-groupmod=y
+CONFIG_PACKAGE_shadow-groups=y
+CONFIG_PACKAGE_shadow-grpck=y
+CONFIG_PACKAGE_shadow-grpconv=y
+CONFIG_PACKAGE_shadow-grpunconv=y
+CONFIG_PACKAGE_shadow-lastlog=y
+CONFIG_PACKAGE_shadow-login=y
+CONFIG_PACKAGE_shadow-logoutd=y
+CONFIG_PACKAGE_shadow-newgidmap=y
+CONFIG_PACKAGE_shadow-newgrp=y
+CONFIG_PACKAGE_shadow-newuidmap=y
+CONFIG_PACKAGE_shadow-newusers=y
+CONFIG_PACKAGE_shadow-nologin=y
+CONFIG_PACKAGE_shadow-passwd=y
+CONFIG_PACKAGE_shadow-pwck=y
+CONFIG_PACKAGE_shadow-pwconv=y
+CONFIG_PACKAGE_shadow-pwunconv=y
+CONFIG_PACKAGE_shadow-su=y
+CONFIG_PACKAGE_shadow-useradd=y
+CONFIG_PACKAGE_shadow-userdel=y
+CONFIG_PACKAGE_shadow-usermod=y
+CONFIG_PACKAGE_shadow-utils=y
+CONFIG_PACKAGE_shadow-vipw=y
+CONFIG_PACKAGE_smartmontools=y
+CONFIG_PACKAGE_smartmontools-drivedb=y
+CONFIG_PACKAGE_sqm-scripts=y
+CONFIG_PACKAGE_sqm-scripts-extra=y
+CONFIG_PACKAGE_squashfs-tools-mksquashfs=y
+CONFIG_PACKAGE_sysfsutils=y
+CONFIG_PACKAGE_tar=y
+CONFIG_PACKAGE_tc-tiny=y
+CONFIG_PACKAGE_tcpdump-mini=y
+CONFIG_PACKAGE_terminfo=y
+CONFIG_PACKAGE_tini=y
+CONFIG_PACKAGE_ttyd=y
+CONFIG_PACKAGE_ucert-full=y
+CONFIG_PACKAGE_ucode-mod-html=y
+CONFIG_PACKAGE_ucode-mod-lua=y
+CONFIG_PACKAGE_ucode-mod-math=y
+CONFIG_PACKAGE_ucode-mod-nl80211=y
+CONFIG_PACKAGE_ucode-mod-rtnl=y
+CONFIG_PACKAGE_ucode-mod-uloop=y
+CONFIG_PACKAGE_uencrypt-openssl=y
+CONFIG_PACKAGE_uhttpd=y
+CONFIG_PACKAGE_uhttpd-mod-ubus=y
+CONFIG_PACKAGE_usb-modeswitch=y
+CONFIG_PACKAGE_usbutils=y
+CONFIG_PACKAGE_uuidd=y
+CONFIG_PACKAGE_vsftpd-tls=y
+CONFIG_PACKAGE_wget-ssl=y
+CONFIG_PACKAGE_wireguard-tools=y
+CONFIG_PACKAGE_wireless-regdb=y
+CONFIG_PACKAGE_wpad-openssl=y
+CONFIG_PACKAGE_wsdd2=y
+CONFIG_PACKAGE_xl2tpd=y
+CONFIG_PACKAGE_xtables-nft=y
+CONFIG_PACKAGE_xz=y
+CONFIG_PACKAGE_xz-utils=y
+CONFIG_PACKAGE_zlib=y
+CONFIG_PARTED_READLINE=y
+CONFIG_SAMBA4_SERVER_AVAHI=y
+CONFIG_SAMBA4_SERVER_NETBIOS=y
+CONFIG_SAMBA4_SERVER_VFS=y
+CONFIG_SAMBA4_SERVER_WSDD2=y
+CONFIG_SQUASHFS_TOOLS_XZ_SUPPORT=y
+CONFIG_SQUASHFS_TOOLS_ZSTD_SUPPORT=y
+CONFIG_TARGET_ALL_PROFILES=y
+CONFIG_TARGET_OPTIONS=y
+CONFIG_TARGET_ROOTFS_PARTSIZE=512
+# CONFIG_TARGET_ROOTFS_EXT4FS is not set
+CONFIG_WPA_MBO_SUPPORT=y
+CONFIG_WPA_MSG_MIN_PRIORITY=3
+CONFIG_ZSTD_OPTIMIZE_O3=y
+CONFIG_shadow-all=y
+# CONFIG_CGROUPFS_MOUNT_KERNEL_CGROUPS is not set
+# CONFIG_OPENVPN_openssl_ENABLE_SMALL is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_firefly_roc-rk3328-cc is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-neo3 is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r2s is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyarm_nanopi-r4s is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5c is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_friendlyelec_nanopi-r5s is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_pine64_quartz64-a is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_pine64_rockpro64 is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_radxa_rock-3a is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_radxa_rock-pi-4 is not set
+# CONFIG_TARGET_DEVICE_rockchip_armv8_DEVICE_rockchip_bpi-r2-pro is not set
diff --git a/.github/workflows/coverity.yml b/.github/workflows/coverityyml
similarity index 100%
rename from .github/workflows/coverity.yml
rename to .github/workflows/coverityyml
diff --git a/.github/workflows/formal.yml b/.github/workflows/formalyml
similarity index 100%
rename from .github/workflows/formal.yml
rename to .github/workflows/formalyml
diff --git a/.github/workflows/kernel.yml b/.github/workflows/kernelyml
similarity index 100%
rename from .github/workflows/kernel.yml
rename to .github/workflows/kernelyml
diff --git a/.github/workflows/label-kernel.yml b/.github/workflows/label-kernelyml
similarity index 100%
rename from .github/workflows/label-kernel.yml
rename to .github/workflows/label-kernelyml
diff --git a/.github/workflows/label-target.yml b/.github/workflows/label-targetyml
similarity index 100%
rename from .github/workflows/label-target.yml
rename to .github/workflows/label-targetyml
diff --git a/.github/workflows/labeler.yml b/.github/workflows/labeleryml
similarity index 100%
rename from .github/workflows/labeler.yml
rename to .github/workflows/labeleryml
diff --git a/.github/workflows/packages.yml b/.github/workflows/packagesyml
similarity index 100%
rename from .github/workflows/packages.yml
rename to .github/workflows/packagesyml
diff --git a/.github/workflows/push-containers.yml b/.github/workflows/push-containersyml
similarity index 100%
rename from .github/workflows/push-containers.yml
rename to .github/workflows/push-containersyml
diff --git a/.github/workflows/rockchip.yaml b/.github/workflows/rockchip.yaml
new file mode 100755
index 0000000000..ed989aa5e5
--- /dev/null
+++ b/.github/workflows/rockchip.yaml
@@ -0,0 +1,96 @@
+name: Build rockchip-6.1
+on: [push]
+
+jobs:
+    build:
+        name: Prepare and build rockchip-6.1 images
+        runs-on: ubuntu-latest
+
+        steps:
+            - name: Setup Ubuntu
+              run: |
+                sudo apt update
+                sudo apt install -y python3 python3-pip python3-ply python3-distutils python3-pyelftools libpython3-dev swig
+            - name: Maximize build space
+              uses: AdityaGarg8/remove-unwanted-software@v1
+              with:
+                remove-android: 'true'
+                remove-dotnet: 'true'
+            - name: Checkout
+              uses: actions/checkout@v3
+
+            - name: Build
+              run: |
+                ./scripts/feeds update -a
+                ./scripts/feeds install -a
+                cd feeds/luci
+
+                wget https://gist.githubusercontent.com/mj22226/f6db007367a22a31f9cb1c109a032b45/raw/be368c4f1605f652a001d81548c3a3e14adf6cb7/luci-app-diskman.patch
+
+                git apply luci-app-diskman.patch
+                cd -
+                cd  feeds/packages
+                wget https://gist.githubusercontent.com/mj22226/351f11e66f08f06e37a985719a31ddb4/raw/b35ba7a3aac1949bd6bbeaad065a0a93dc3c34f0/01-cpu.patch
+                wget https://gist.githubusercontent.com/mj22226/b66f5c1bd5fc7e1cb3cf2c690b5dbd5a/raw/b955e726cbb0948d932c8d6143229ad604320149/20-lxc.patch
+                git apply 01-cpu.patch
+                git apply 20-lxc.patch
+                cd -
+                sed -i "70s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
+                sed -i "83s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
+                sed -i "194s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
+                sed -i "211s/'0'/'1'/" feeds/luci/applications/luci-app-statistics/root/etc/config/luci_statistics
+                sed -i "13s/'1'/'0'/" feeds/packages/utils/dockerd/files/etc/config/dockerd
+
+                ./scripts/feeds update -a
+                ./scripts/feeds install -a -f
+                cp .github/workflows/config.buildinfo .config
+                make defconfig
+                wget https://gist.githubusercontent.com/mj22226/23edc25efeb65ef69d8eb6598f4f8179/raw/29c862e3e2558852523f4e8edd5f3d0cc145067e/01-key.patch
+                git apply 01-key.patch
+                make download -j32
+                rm 01-key.patch
+                make tools/install -j$(nproc)
+                make toolchain/install -j$(nproc)
+                make -j$(nproc) 'IGNORE_ERRORS=n m'
+                mkdir squashfs
+                rm -rf build_dir
+                cp bin/targets/rockchip/armv8/*.gz squashfs/
+                make clean
+                rm -rf tmp
+                sed -i "73s/# CONFIG_ARM_ROCKCHIP_CPUFREQ is not set/CONFIG_ARM_ROCKCHIP_CPUFREQ=y/" target/linux/rockchip/armv8/config-6.1
+                cp .github/workflows/config.buildinfo1 .config
+                make defconfig
+                mkdir bin/targets/rockchip/armv8
+                cp squashfs/*.gz bin/targets/rockchip/armv8/
+                make -j$(nproc) 'IGNORE_ERRORS=n m'
+                rm -rf build_dir
+                tar -cvf rockchip-images.tar bin/targets/rockchip/armv8
+
+            - name: Upload artifacts
+              uses: actions/upload-artifact@v3
+              with:
+                name: rockchip-images
+                path: rockchip-images.tar
+
+    release:
+          name: Make a release
+          runs-on: ubuntu-latest
+          needs: build
+
+          steps:
+            - name: Download the image artifacts
+              uses: actions/download-artifact@v3
+              with:
+                name: rockchip-images
+
+            - name: Extract the image artifacts
+              run: tar xf rockchip-images.tar
+
+            - name: Create a release
+              uses: "marvinpinto/action-automatic-releases@latest"
+              with:
+                repo_token: "${{ secrets.GITHUB_TOKEN }}"
+                prerelease: false
+                title: "Rockchip v6.1 Images"
+                automatic_release_tag: "linux-6.1"
+                files: bin/targets/rockchip/armv8/*
diff --git a/.github/workflows/toolchain.yml b/.github/workflows/toolchainyml
similarity index 100%
rename from .github/workflows/toolchain.yml
rename to .github/workflows/toolchainyml
diff --git a/.github/workflows/tools.yml b/.github/workflows/toolsyml
similarity index 100%
rename from .github/workflows/tools.yml
rename to .github/workflows/toolsyml
-- 
2.40.1


From 7eeda4ed4775b61ac73b2df0a2a27cff9bdd5f7b Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Tue, 5 Sep 2023 21:36:15 -0400
Subject: [PATCH 04/38] revert fw_devlink=permissive

---
 ...vert-driver-core-Set-fw_devlink-on-b.patch | 30 -------------------
 1 file changed, 30 deletions(-)
 delete mode 100644 target/linux/generic/hack-6.1/930-Revert-Revert-Revert-driver-core-Set-fw_devlink-on-b.patch

diff --git a/target/linux/generic/hack-6.1/930-Revert-Revert-Revert-driver-core-Set-fw_devlink-on-b.patch b/target/linux/generic/hack-6.1/930-Revert-Revert-Revert-driver-core-Set-fw_devlink-on-b.patch
deleted file mode 100644
index 98081c4b64..0000000000
--- a/target/linux/generic/hack-6.1/930-Revert-Revert-Revert-driver-core-Set-fw_devlink-on-b.patch
+++ /dev/null
@@ -1,30 +0,0 @@
-From: =?UTF-8?q?Rafa=C5=82=20Mi=C5=82ecki?= <rafal@milecki.pl>
-Date: Tue, 19 Jul 2022 06:17:48 +0200
-Subject: [PATCH] Revert "Revert "Revert "driver core: Set fw_devlink=on by
- default"""
-MIME-Version: 1.0
-Content-Type: text/plain; charset=UTF-8
-Content-Transfer-Encoding: 8bit
-
-This reverts commit ea718c699055c8566eb64432388a04974c43b2ea.
-
-With of_platform_populate() called for MTD partitions that commit breaks
-probing devices which reference MTD in device tree.
-
-Link: https://lore.kernel.org/all/696cb2da-20b9-b3dd-46d9-de4bf91a1506@gmail.com/T/#u
-Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
----
- drivers/base/core.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
---- a/drivers/base/core.c
-+++ b/drivers/base/core.c
-@@ -1700,7 +1700,7 @@ static void device_links_purge(struct de
- #define FW_DEVLINK_FLAGS_RPM		(FW_DEVLINK_FLAGS_ON | \
- 					 DL_FLAG_PM_RUNTIME)
- 
--static u32 fw_devlink_flags = FW_DEVLINK_FLAGS_ON;
-+static u32 fw_devlink_flags = FW_DEVLINK_FLAGS_PERMISSIVE;
- static int __init fw_devlink_setup(char *arg)
- {
- 	if (!arg)
-- 
2.40.1


From 3abcf5d2db634e4c276a40ec7fa783dda21eeb9b Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Thu, 4 Jan 2024 18:11:10 -0500
Subject: [PATCH 05/38] rockchip: add support for rk3566/68/88 boards

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 include/target.mk                             |    2 +
 .../patches/001-flow_offloading.patch         |    8 +
 target/linux/rockchip/Makefile                |    2 +-
 .../armv8/base-files/etc/board.d/01_leds      |   20 +-
 .../armv8/base-files/etc/board.d/02_network   |   24 +-
 .../etc/hotplug.d/net/40-net-smp-affinity     |   14 +-
 .../uci-defaults/01_enable_packet_steering    |    5 +
 target/linux/rockchip/armv8/config-5.15       |  635 +++
 target/linux/rockchip/armv8/config-6.1        |  224 +-
 target/linux/rockchip/armv8/target.mk         |    4 +-
 target/linux/rockchip/image/Makefile          |    3 -
 target/linux/rockchip/image/armv8.mk          |   70 +-
 target/linux/rockchip/image/mmc.bootscript    |   10 +-
 .../rockchip/image/nanopi-r2s.bootscript      |    7 +
 .../rockchip/image/nanopi-r4s.bootscript      |    7 +
 ...r-supply-define-monitored-battery-in.patch |  132 +
 ...rockchip-add-Theobroma-Systems-PX30-.patch |   36 +
 ...kchip-Add-Hardkernel-ODROID-M1-board.patch |   33 +
 ...rockchip-Add-Anbernic-RG353V-and-RG3.patch |   36 +
 ...chip-Add-Rockchip-rk3566-box-demo-bo.patch |   31 +
 ...arm-rockchip-Add-more-RK3326-devices.patch |   48 +
 ...ings-arm-rockchip-Add-SOQuartz-Blade.patch |   35 +
 ...gs-arm-rockchip-Add-SOQuartz-Model-A.patch |   35 +
 ...rockchip-Add-Edgeble-Neural-Compute-.patch |   42 +
 ...rockchip-Add-Rockchip-RK3128-Evaluat.patch |   31 +
 ...ings-arm-rockchip-add-Radxa-CM3I-E25.patch |   34 +
 ...rm-rockchip-Add-EmbedFire-LubanCat-1.patch |   31 +
 ...rm-rockchip-Add-EmbedFire-LubanCat-2.patch |   30 +
 ...s-arm-rockchip-Add-Orange-Pi-R1-Plus.patch |   30 +
 ...m-rockchip-add-initial-rk3588-boards.patch |   51 +
 ...nfigure-eth-pad-driver-strength-for-.patch |   33 -
 ...rockchip-Add-Edgeble-Neural-Compute-.patch |   41 +
 ...-rockchip-Add-Radxa-Compute-Module-3.patch |   45 +
 ...ockchip-Fix-compatible-for-Radxa-CM3.patch |   36 +
 ...-arm-rockchip-Add-Khadas-Edge2-board.patch |   45 +
 ...s-Add-doc-for-FriendlyARM-NanoPi-R5S.patch |   30 +
 ...s-Add-doc-for-FriendlyARM-NanoPi-R5C.patch |   32 +
 ...s-Add-doc-for-FriendlyARM-NanoPi-R2C.patch |   33 +
 ...doc-for-Xunlong-OrangePi-R1-Plus-LTS.patch |   33 +
 ...ings-Add-doc-for-Fastrhino-R66S-R68S.patch |   33 +
 ...gs-arm-rockchip-add-Anbernic-RG353PS.patch |   34 +
 ...rockchip-add-FriendlyARM-NanoPi-R2C-.patch |   27 +
 ...-Use-device_get_match_data-to-simpli.patch |   35 +
 ...-remove-MODULE_LICENSE-in-non-module.patch |   42 +
 ...kchip-drop-of_match_ptr-for-ID-table.patch |   32 +
 ...-unnecessary-linux-of_irq.h-includes.patch |  147 +
 ...ie-remove-unused-phy_rd_cfg-function.patch |   44 +
 ...-naneng-combo-phy-support-for-RK3588.patch |  234 +
 ...ip-remove-unused-hw_to_inno-function.patch |   35 +
 ...y-rk817-Drop-unneeded-debugging-code.patch |   37 +
 ...39-iommu-Remove-detach_dev-callbacks.patch |   37 +
 ...dd-missing-set_platform_dma_ops-call.patch |  178 +
 ...ip-add-PX30-Q7-Ringneck-SoM-with-Hai.patch |  674 +++
 ...kchip-Add-Hardkernel-ODROID-M1-board.patch |  447 ++
 ...hip-add-thermal-support-to-ODROID-M1.patch |   32 +
 ...-rockchip-Add-NOR-flash-to-ODROID-M1.patch |   96 +
 ...ckchip-Add-analog-audio-on-ODROID-M1.patch |   95 +
 ...ip-Enable-vop2-and-hdmi-tx-on-ODROID.patch |   91 +
 ...kchip-Enable-HDMI-audio-on-ODROID-M1.patch |   41 +
 ...rockchip-Enable-the-GPU-on-ODROID-M1.patch |   30 +
 ...ip-Enable-the-USB-2.0-ports-on-ODROI.patch |  105 +
 ...ip-Enable-the-USB-3.0-ports-on-ODROI.patch |  108 +
 ...ckchip-Add-SATA-support-to-ODROID-M1.patch |   41 +
 ...chip-Add-PCIEe-v3-nodes-to-ODROID-M1.patch |   73 +
 ...ip-Add-IR-receiver-node-to-ODROID-M1.patch |   48 +
 ...chip-Add-regulator-suffix-to-rock-3a.patch |   82 +
 ...ockchip-Add-PCIe-v3-nodes-to-rock-3a.patch |   76 +
 ...ip-add-BT-wifi-nodes-to-Pinephone-Pr.patch |  130 +
 ...ts-rockchip-enable-tsadc-for-ROCK-4C.patch |   30 +
 ...-dts-rockchip-add-rk3328-crypto-node.patch |   36 +
 ...-dts-rockchip-rk3399-add-crypto-node.patch |   47 +
 ...ip-fix-spdif-fe460000-ordering-on-rk.patch |   60 +
 ...rockchip-RK356x-Add-I2S2-device-node.patch |   46 +
 ...chip-Add-I2S2-node-for-RADXA-Rock-3A.patch |   31 +
 ...ip-Add-nodes-for-SDIO-UART-Wi-Fi-Blu.patch |  116 +
 ...chip-add-Anbernic-RG353V-and-RG353VS.patch |  575 +++
 ...ip-add-rk817-chg-to-RG353P-and-RG503.patch |  104 +
 ...ip-add-poll-interval-to-RGxx3-device.patch |   27 +
 ...ip-Update-joystick-to-polled-for-OG2.patch |   28 +
 ...ckchip-enable-pcie2-on-rk3566-roc-pc.patch |   80 +
 ...ip-Enable-video-output-and-HDMI-on-S.patch |   91 +
 ...ckchip-Enable-HDMI-sound-on-SOQuartz.patch |   40 +
 ...chip-Enable-PCIe-2-on-SOQuartz-CM4IO.patch |   76 +
 ...ip-Add-dts-for-rockchip-rk3566-box-d.patch |  548 +++
 ...ockchip-Add-HDMI-supplies-on-Rock960.patch |   30 +
 ...ip-Add-support-of-external-clock-to-.patch |   55 +
 ...ip-Add-support-of-regulator-for-ethe.patch |   31 +
 ...ip-Move-most-of-Odroid-Go-Advance-DT.patch | 1280 ++++++
 ...ip-Add-Odroid-Go-Advance-Black-Editi.patch |  188 +
 ...m64-dts-rockchip-Add-Odroid-Go-Super.patch |  217 +
 ...m64-dts-rockchip-Add-Anbernic-RG351M.patch |   77 +
 ...ts-rockchip-Add-SOQuartz-blade-board.patch |  235 +
 ...kchip-Add-SOQuartz-Model-A-baseboard.patch |  272 ++
 ...ip-update-cache-properties-for-rk330.patch |   43 +
 ...ip-use-correct-reset-names-for-rk339.patch |   37 +
 ...rm64-dts-rockchip-Add-Radxa-CM3I-E25.patch |  690 +++
 ...ts-rockchip-Add-EmbedFire-LubanCat-1.patch |  643 +++
 ...ip-remove-unsupported-property-from-.patch |   27 +
 ...hip-add-audio-nodes-to-rk3566-roc-pc.patch |  107 +
 ...ip-Add-dts-for-EmbedFire-rk3568-Luba.patch |  778 ++++
 ...ockchip-Add-IR-receiver-to-BPI-R2Pro.patch |   48 +
 ...ckchip-rk3328-Add-Orange-Pi-R1-Plus.patch} |    9 +-
 ...ip-Change-audio-card-name-for-Odroid.patch |   34 +
 ...ip-don-t-set-cpll-rate-for-Odroid-Go.patch |   38 +
 ...ip-update-px30-thermal-zones-for-GPU.patch |   75 +
 ...ip-Update-leds-for-Odroid-Go-Advance.patch |   91 +
 ...ip-increase-spi-max-frequency-of-nor.patch |   29 +
 ...dts-rockchip-Add-rk3588-pinctrl-data.patch | 3958 +++++++++++++++++
 ...-rockchip-Add-base-DT-for-rk3588-SoC.patch | 1800 ++++++++
 ...4-dts-rockchip-Add-rk3588-evb1-board.patch |  163 +
 ...arm64-dts-rockchip-Add-rock-5a-board.patch |  105 +
 ...arm64-dts-rockchip-Add-rock-5b-board.patch |   79 +
 ...kchip-Update-sdhci-alias-for-rock-5a.patch |   29 +
 ...kchip-Remove-empty-line-from-rock-5a.patch |   26 +
 ...kchip-Update-sdhci-alias-for-rock-5b.patch |   29 +
 ...ip-assign-rate-to-clk_rtc_32k-on-rk3.patch |   34 +
 ...dts-rockchip-fix-hdmi-cec-on-rock-3a.patch |   33 +
 .../patches-6.1/106-r4s-openwrt-leds.patch    |   16 -
 ...ip-Update-LED-properties-for-Orange-.patch |   56 -
 ...ip-rk3588-Add-Edgeble-Neu6-Model-A-S.patch |   68 +
 ...ip-add-LED-configuration-to-Orange-P.patch |   24 -
 ...ip-rk3588-Add-Edgeble-Neu6-Model-A-I.patch |   68 +
 ...ip-add-io-domain-setting-to-rk3566-b.patch |   38 +
 .../109-nanopc-t4-add-led-aliases.patch       |   16 -
 ...ip-Enable-wifi-module-AP6398s-for-rk.patch |   67 +
 ...ip-Update-LED-properties-for-NanoPi-.patch |   97 -
 ...ip-add-Hynitron-cst340-for-Anbernic-.patch |   80 +
 ...ip-Fix-RX-delay-for-ethernet-phy-on-.patch |   38 +
 ...ip-Add-rk3566-based-Radxa-Compute-Mo.patch |  388 ++
 ...ip-Add-Radxa-Compute-Module-3-IO-boa.patch |  235 +
 ...ip-Update-eMMC-SD-aliases-for-Radxa-.patch |   49 +
 ...ip-Update-eMMC-SD-aliases-for-Radxa-.patch |   62 +
 ...ip-add-pinctrls-for-16-bit-18-bit-rg.patch |  122 +
 ...64-dts-rockchip-add-display-to-RG503.patch |   99 +
 ...hip-Enable-Ethernet-for-Radxa-CM3-IO.patch |  133 +
 ...ip-rk3566-Enable-WiFi-BT-support-for.patch |  135 +
 ...ockchip-Fix-compatible-for-Radxa-CM3.patch |   46 +
 ...ip-Add-missing-CM3i-fallback-compati.patch |   36 +
 ...ip-Drop-unneeded-model-for-Radxa-CM3.patch |   39 +
 ...ip-Correct-the-model-name-for-Radxa-.patch |   30 +
 ...kchip-Fix-rk3399-GICv3-ITS-node-name.patch |   27 +
 ...ip-Lower-SD-card-speed-on-rk3399-Pin.patch |   37 +
 ...ts-rockchip-Add-sdmmc-node-to-rk3588.patch |   41 +
 ...ip-Enable-USB-OTG-for-rk3566-Radxa-C.patch |   34 +
 ...ip-Add-display-support-to-Odroid-Go-.patch |   31 +
 ...-dts-rockchip-Add-Khadas-edge2-board.patch |   69 +
 ...ockchip-Add-FriendlyElec-Nanopi-R5S.patch} |   11 +-
 ...ip-add-rk3588-cache-level-informatio.patch |   90 +
 ...p-create-common-dtsi-for-NanoPi-R5-.patch} |    6 +-
 ...rockchip-Add-FriendlyARM-NanoPi-R5C.patch} |   12 +-
 ...hip-fix-gmac-support-for-NanoPi-R5S.patch} |    5 +-
 ...p-remove-I2S1-TDM-node-for-the-Nano.patch} |    7 +-
 ...rm64-dts-rockchip-fix-px30-lvds-node.patch |   39 +
 ...arm64-dts-rockchip-fix-px30-dsi-node.patch |   39 +
 ...m64-dts-rockchip-fix-rk3399-dsi-node.patch |   62 +
 ...rm64-dts-rockchip-fix-rk3399-dp-node.patch |   48 +
 ...ip-rename-vbus-supply-to-phy-supply-.patch |   28 +
 ...ip-remove-hclk-from-dsi-node-on-rk35.patch |   41 +
 ...ip-Enable-watchdog-support-for-RK358.patch |   33 +
 ...ip-Add-internal-display-support-to-r.patch |  162 +
 ...ip-Add-touchscreen-support-to-rk3399.patch |   52 +
 ...rockchip-Add-FriendlyARM-NanoPi-R2C.patch} |   11 +-
 ...ip-Add-Xunlong-OrangePi-R1-Plus-LTS.patch} |    8 +-
 ...ip-Add-clk_rtc_32k-to-Anbernic-xx3-D.patch |   51 +
 ...ip-Remove-non-existing-pwm-delay-us-.patch |   60 +
 ...kchip-Enable-RTC-support-for-Rock-5B.patch |   50 +
 ...ckchip-Add-pwm-fan-to-rk3588-rock-5b.patch |   45 +
 ...s-rockchip-add-rk3588-thermal-sensor.patch |   53 +
 ...ip-Fix-SCMI-assigned-clocks-on-rk358.patch |   70 +
 ...ip-Assign-PLL_PPLL-clock-rate-to-1.1.patch |   30 +
 ...4-dts-rockchip-Add-rk3588s-I2S-nodes.patch |  186 +
 ...64-dts-rockchip-Add-I2S-rk3588-nodes.patch |   96 +
 ...chip-Add-rk3588-rock-5b-analog-audio.patch |  107 +
 ...ip-use-just-port-in-panel-on-Pineboo.patch |   44 +
 ...ip-use-just-port-in-panel-on-RockPro.patch |   43 +
 ...ip-correct-panel-supplies-on-some-rk.patch |   70 +
 ...ip-correct-panel-supplies-on-Odroid-.patch |   31 +
 ...ip-Add-pinctrl-gpio-ranges-for-rk356.patch |   58 +
 ...ip-Drop-RTC-clock-frequency-on-rk358.patch |   33 +
 ...ip-Use-generic-name-for-es8316-on-Pi.patch |   40 +
 ...ip-Add-vdd_cpu_big-regulators-to-rk3.patch |   85 +
 ...ip-Add-support-for-volume-keys-to-rk.patch |   76 +
 ...chip-Update-compatible-for-bluetooth.patch |   25 +
 ...ip-add-panel-to-Anbernic-RG353-serie.patch |   91 +
 ...rockchip-fix-USB-regulator-on-ROCK64.patch |   62 +
 ...ockchip-add-missing-cache-properties.patch |  114 +
 ...ckchip-add-GIC-ITS-support-to-rk3588.patch |   46 +
 ...-arm64-dts-rockchip-Add-rk3588-timer.patch |   32 +
 ...ts-rockchip-Add-Lunzn-Fastrhino-R66S.patch |  554 +++
 ...ts-rockchip-Add-Lunzn-Fastrhino-R68S.patch |  147 +
 ...64-dts-rockchip-add-Anbernic-RG353PS.patch |  154 +
 ...ip-Update-leds-for-Anbernic-RGxx3-Se.patch |  101 +
 ...chip-Add-FriendlyARM-NanoPi-R2C-Plus.patch |   64 +
 ...m64-dts-rockchip-Add-rk3588-OTP-node.patch |   82 +
 ...p-fix-button-reset-pin-for-nanopi-r.patch} |    6 +-
 ...kchip-dtpm-use-C99-array-init-syntax.patch |   94 +
 ...er-domain-add-rk3588-mem-module-supp.patch |  264 ++
 ...dd-Rockchip-3588001-erratum-workarou.patch |  154 +
 ...rockchip-Add-pmu-compatible-for-rv11.patch |   35 +
 ...ndings-clock-add-rk3588-cru-bindings.patch |   93 +
 ...lay-rockchip-convert-rockchip-lvds.t.patch |  292 ++
 ...lay-rockchip-convert-dw_mipi_dsi_roc.patch |  290 ++
 ...lay-rockchip-convert-analogix_dp-roc.patch |  231 +
 ...lay-dsi-controller-move-clock-master.patch |   52 +
 ...lay-bridge-snps-dw-mipi-dsi-fix-cloc.patch |   42 +
 ...lay-bridge-convert-analogix_dp.txt-t.patch |  155 +
 ...92-dt-bindings-mfd-Add-rk806-binding.patch |  426 ++
 ...rockchip-dw-mshc-Add-power-domains-p.patch |   31 +
 ...rockchip-dw-mshc-Add-RK3588-compatib.patch |   30 +
 ...mtd-rockchip-add-rockchip-rk3128-nfc.patch |   29 +
 ...Convert-Rockchip-RK3399-PCIe-to-DT-s.patch |  519 +++
 ...dwc-Apply-common-schema-to-Rockchip-.patch |   36 +
 ...ndings-PCI-dwc-Add-rk3588-compatible.patch |   32 +
 ...s-phy-rockchip-Add-rk3588-compatible.patch |   27 +
 ...trl-rockchip-further-increase-max-am.patch |   31 +
 ...trl-rockchip-pinctrl-mark-gpio-sub-n.patch |   40 +
 ...dings-Convert-Fairchild-FAN53555-to-.patch |  118 +
 ...dings-fcs-fan53555-Add-support-for-R.patch |   51 +
 ...rockchip-add-initial-rk3588-syscon-c.patch |   32 +
 ...rockchip-grf-add-rockchip-rk3288-dp-.patch |   32 +
 ...y-rename-phy-rockchip-inno-usb2.yaml.patch |  413 ++
 ...-rockchip-grf-add-rockchip-lvds.yaml.patch |   41 +
 ...c-rockchip-add-rk3588-usb2phy-syscon.patch |   35 +
 ...chip-thermal-Support-the-RK3588-SoC-.patch |   28 +
 ...r-rockchip-Add-rockchip-rk3128-timer.patch |   28 +
 ...imer-rk-timer-Add-rktimer-for-rv1126.patch |   26 +
 ...r-rockchip-Drop-superfluous-rk3288-c.patch |   40 +
 ...timer-rockchip-Add-rk3588-compatible.patch |   27 +
 ...rockchip-dwc3-Move-RK3399-to-its-own.patch |  186 +
 ...-register-offset-of-the-cores-select.patch |   81 +
 ...clk-rockchip-add-pll-type-for-RK3588.patch |  301 ++
 ...ow-additional-mux-options-for-cpu-cl.patch |  123 +
 ...hip-simplify-rockchip_clk_add_lookup.patch |   73 +
 ...lk-rockchip-add-lookup-table-support.patch |  131 +
 ...-add-clock-controller-for-the-RK3588.patch | 3517 +++++++++++++++
 .../221-clk-Remove-a-useless-include.patch    |   29 +
 ...ove-values-for-mmask-and-nmask-in-st.patch |   31 +
 ...588-make-gate-linked-clocks-critical.patch |  150 +
 ...-clk-RK808-Reduce-struct-rk808-usage.patch |  133 +
 ...fd-rk808-Convert-to-i2c-s-.probe_new.patch |   40 +
 ...ermit-having-multiple-PMIC-instances.patch |   97 +
 ...d-rk808-Re-add-rk808-clkout-to-RK818.patch |   32 +
 ...-Convert-to-device-managed-resources.patch |  152 +
 .../229-mfd-rk808-Use-dev_err_probe.patch     |  104 +
 ...e-struct-i2c_client-with-struct-devi.patch |   61 +
 ...31-mfd-rk808-Split-into-core-and-i2c.patch | 1915 ++++++++
 ...-rk8xx-i2c-Use-device_get_match_data.patch |  159 +
 .../233-mfd-rk8xx-Add-rk806-support.patch     |  744 ++++
 ...ator-rk808-reduce-struct-rk808-usage.patch |   83 +
 ...35-regulator-rk808-Use-dev_err_probe.patch |   35 +
 ...OBE_PREFER_ASYNCHRONOUS-for-drivers-.patch |   57 +
 ...dings-usb-Add-H616-compatible-string.patch |   39 +
 ...Convert-multiple-usb-ohci-bindings-t.patch |  178 +
 ...Convert-OMAP-OHCI-EHCI-bindings-to-s.patch |  132 +
 ...allow-evaluated-properties-in-OHCI-c.patch |   33 +
 ...ctrl-rk805-add-rk806-pinctrl-support.patch |  337 ++
 ...expose-regulator_find_closest_bigger.patch |   75 +
 ...lator-rk808-fix-asynchronous-probing.patch |   30 +
 ...or-rk808-cleanup-parent-device-usage.patch |   69 +
 ...-rk808-revert-to-synchronous-probing.patch |   39 +
 ...46-regulator-rk808-add-rk806-support.patch |  481 ++
 ...64-defconfig-update-RK8XX-MFD-config.patch |   26 +
 ...64-dts-rockchip-rk3588-evb1-add-pmic.patch |  764 ++++
 ...rockchip-Introduce-driver-for-rk3588.patch |  708 +++
 ...ip-rk3588-add-cpu-frequency-scaling-.patch |  556 +++
 ...ip-rk3588-evb1-add-cpu-regulator-inf.patch |   50 +
 .../252-dt-bindings-usb-Add-RK3588-OHCI.patch |   55 +
 .../253-dt-bindings-usb-Add-RK3588-EHCI.patch |   26 +
 ...atform-increase-max-clock-number-to-.patch |   26 +
 ...phy-rockchip-inno-usb2phy-add-rk3588.patch |   64 +
 ...ockchip-inno-usb2-add-rk3588-support.patch |  350 ++
 ...rockchip-inno-usb2-add-reset-support.patch |   96 +
 ...-inno-usb2-add-rk3588-phy-tuning-sup.patch |  148 +
 ...-inno-usb2-simplify-phy-clock-handli.patch |   61 +
 ...-inno-usb2-simplify-getting-match-da.patch |   55 +
 ...chip-inno-usb2-improve-error-message.patch |   27 +
 ...dts-rockchip-rk3588-add-USB2-support.patch |  122 +
 ...64-dts-rockchip-rk3588-evb1-add-USB2.patch |  109 +
 ...-dts-rockchip-rk3588-rock5b-add-USB2.patch |   96 +
 ...-rockchip-add-rk3588-pipe-phy-syscon.patch |   26 +
 ...-ata-ahci-add-RK3588-AHCI-controller.patch |   57 +
 ...-rockchip-rk3588-has-two-reset-lines.patch |   33 +
 ...4-dts-rockchip-rk3588-add-combo-PHYs.patch |  108 +
 ...dts-rockchip-rk3588-add-SATA-support.patch |  110 +
 ...64-dts-rockchip-rk3588-evb1-add-SATA.patch |   32 +
 ...ts-rockchip-rk3588-add-PCIe2-support.patch |  201 +
 ...ckchip-rk3588-evb1-add-PCIe2-support.patch |   74 +
 ...-rockchip-Add-RK806-regulator-config.patch |  197 +
 ...rockchip-rock-5a-Add-SD-card-support.patch |   80 +
 ...rockchip-rock-5b-Add-SD-card-support.patch |   64 +
 ...64-dts-rockchip-rk3588-Add-I2S-nodes.patch |   27 +
 ...ip-RK3588s-Enable-PCIE2.0x1-fe190000.patch |   48 +
 ...ndings-PCI-tegra234-Add-ECAM-support.patch |   30 +
 ...-dwc-Detach-common-RP-EP-DT-bindings.patch |   82 +
 ...dwc-Remove-bus-node-from-the-example.patch |   60 +
 ...dwc-Add-phys-phy-names-common-proper.patch |   37 +
 ...dwc-Add-max-link-speed-common-proper.patch |   31 +
 ...dwc-Apply-generic-schema-for-generic.patch |   67 +
 ...dwc-Add-interrupts-interrupt-names-c.patch |  138 +
 ...dwc-Add-reg-reg-names-common-propert.patch |  132 +
 ...dwc-Add-clocks-resets-common-propert.patch |   44 +
 ...dwc-rockchip-Fix-interrupt-names-iss.patch |   90 +
 ...dwc-rockchip-Add-missing-legacy-inte.patch |   58 +
 ...s-PCI-dwc-rockchip-Update-for-RK3588.patch |   64 +
 ...efconfig-Enable-ethernet-for-Rock-5B.patch |   29 +
 ...config-Enable-Sound-Card-for-Rock-5B.patch |   29 +
 ...rockchip-rk3588s-Add-USBDP-phy-nodes.patch |  197 +
 ...ockchip-rk3588s-Add-USB3-controllers.patch |  130 +
 ...94-fix-USB3-do-not-disable-sub-nodes.patch |   39 +
 ...-rockchip-add-usbdp-combo-phy-driver.patch | 1780 ++++++++
 ...add-rockchip-usbdp-combo-phy-documen.patch |  166 +
 ...use-dev_err-for-error-message-about-.patch |   27 +
 ...ip-do-not-use-uninitialized-variable.patch |   25 +
 ...to-rockchip-fix-privete-private-typo.patch |   25 +
 .../300-crypto-rockchip-rewrite-type.patch    |  175 +
 .../301-crypto-rockchip-add-debugfs.patch     |  233 +
 .../302-crypto-rockchip-introduce-PM.patch    |  182 +
 ...pto-rockchip-handle-reset-also-in-PM.patch |   67 +
 ...use-clk_bulk-to-simplify-clock-manag.patch |  119 +
 ...to-rockchip-add-myself-as-maintainer.patch |   31 +
 ...rypto-rockchip-use-read_poll_timeout.patch |   55 +
 .../307-crypto-rockchip-fix-style-issue.patch |   56 +
 ...ypto-rockchip-add-support-for-rk3328.patch |   24 +
 ...chip-rename-ablk-functions-to-cipher.patch |  120 +
 ...ckchip-rework-rk_handle_req-function.patch |  181 +
 ...use-a-rk_crypto_info-variable-instea.patch |  173 +
 ...use-the-rk_crypto_info-given-as-para.patch |   35 +
 ...ypto-convert-rockchip-crypto-to-YAML.patch |  116 +
 ...s-crypto-rockchip-add-new-compatible.patch |  115 +
 ...5-clk-rk3399-use-proper-crypto0-name.patch |   38 +
 ...store-crypto_info-in-request-context.patch |  126 +
 ...Check-for-clocks-numbers-and-their-f.patch |  166 +
 ...rk_ahash_reg_init-use-crypto_info-fr.patch |   41 +
 ...p-permit-to-have-more-than-one-reset.patch |   25 +
 ...ypto-rockchip-Add-support-for-RK3399.patch |  465 ++
 ...move-kconfig-to-its-dedicated-direct.patch |  107 +
 ...to-add-support-for-rockchip-crypto-r.patch |   90 +
 ...new-dt-binding-doc-to-the-right-entr.patch |   24 +
 ...support-the-new-crypto-IP-for-rk3568.patch | 1634 +++++++
 ...325-ARM64-dts-rk3568-add-crypto-node.patch |   37 +
 ...rs-crypto-rockchip-fix-openwrt-build.patch |   31 +
 ...PCI-Add-ROCKCHIP-PCIe-ASPM-interface.patch |  403 ++
 ...enable-LRT-for-L1SS-after-power-loss.patch |   26 +
 ...m_ext-Fix-Add-missing-MODULE_LICENSE.patch |   39 +
 ...mshc-enable-host-V4-support-for-Blue.patch |   33 +
 ...shc-Update-DLL-and-pre-change-delay.patch} |    7 +-
 ...mshc-add-the-missing-device-table-ID.patch |   28 +
 ...shc-properly-determine-max-clock-on.patch} |    7 +-
 ...s-reset-add-rk3588-reset-definitions.patch |  782 ++++
 ...-rtc-rk808-reduce-struct-rk808-usage.patch |  216 +
 ...s-clock-add-rk3588-clock-definitions.patch |  793 ++++
 ...ers-rockchip-Fix-kernel-doc-warnings.patch |   60 +
 ...rockchip-Use-devm_platform_get_and_i.patch |   38 +
 ...ebug-or-error-messages-in-get_temp-o.patch |   47 +
 ...-not-set-no_hwmon-before-calling-the.patch |   38 +
 ...rockchip-Simplify-getting-match-data.patch |   44 +
 ...rivers-rockchip-Simplify-clock-logic.patch |  107 +
 ...l-drivers-rockchip-Use-dev_err_probe.patch |   97 +
 ...s-rockchip-Simplify-channel-id-logic.patch |  158 +
 ...rockchip-Support-dynamic-sized-senso.patch |   55 +
 ...rockchip-Support-RK3588-SoC-in-the-t.patch |  320 ++
 ...rockchip-use-devm_reset_control_arra.patch |   29 +
 ...ckchip_saradc-Add-support-for-RK3588.patch |  214 +
 ..._saradc-Make-use-of-devm_clk_get_ena.patch |  137 +
 ..._saradc-Use-of_device_get_match_data.patch |   46 +
 ..._saradc-Match-alignment-with-open-pa.patch |   37 +
 ...dc-rockchip_saradc-Use-dev_err_probe.patch |   87 +
 ...ip-Add-DT-node-for-ADC-support-in-RK.patch |   36 +
 ...vider-Fix-handling-of-rates-UINT_MAX.patch |   44 +
 ...ite-Fix-handling-of-high-clock-rates.patch |   46 +
 ...s-media-rockchip-rga-add-rockchip-rk.patch |   38 +
 ...-rockchip-Add-RGA2-support-to-rk356x.patch |   38 +
 ...rockchip-Add-Edgeble-Neural-Compute-.patch |   41 +
 ...64-dts-rockchip-Add-Rockchip-RK3588J.patch |   33 +
 ...ip-rk3588-Add-Edgeble-Neu6-Model-B-S.patch |   68 +
 ...ip-rk3588-Add-Edgeble-Neu6-Model-B-I.patch |   88 +
 ...chip-add-EEPROM-node-for-NanoPi-R4S.patch} |    5 +-
 ...rockchip-use-system-LED-for-OpenWrt.patch} |   32 +-
 ...d-OF-node-for-USB-eth-on-NanoPi-R2S.patch} |   10 +-
 ...ip-disable-UHS-modes-for-NanoPi-R4S.patch} |   19 +-
 ...add-support-for-FriendlyARM-NanoPi-N.patch |  398 ++
 .../367-dts-rockchip-fix-rock3-a.patch        |  110 +
 ...-dts-rockchip-fix-wifi-on-rock-pi-4b.patch |   21 +
 .../369-dts-rockchip-fix-nanopi-r5c-r5s.patch |  233 +
 ...chip-add-FriendlyElec-NanoPi-R6C-R6S.patch |  802 ++++
 ...55-Remove-unused-_SLEW_SHIFT-definit.patch |   36 +
 ...-fan53555-Make-use-of-the-bit-macros.patch |   53 +
 ...n53555-Improve-vsel_mask-computation.patch |   39 +
 ...regulator-fan53555-Use-dev_err_probe.patch |  106 +
 ...ator-fan53555-Add-support-for-RK860X.patch |  263 ++
 ...s_tdm-Make-the-grf-property-optional.patch |   56 +
 ...kchip-i2s_tdm-Add-support-for-RK3588.patch |   33 +
 ...ckchip-i2s-Add-compatible-for-RK3588.patch |   25 +
 ...ip-add-default-pinctrl-for-rk3588-em.patch |   26 +
 ...dts-rockchip-Add-sdio-node-to-rk3588.patch |   37 +
 ...dings-vendor-prefixes-add-Indiedroid.patch |   25 +
 ...ngs-arm-rockchip-Add-Indiedroid-Nova.patch |   27 +
 ...s-rockchip-Add-Indiedroid-Nova-board.patch |  822 ++++
 ...hip-dfi-Embed-desc-into-private-data.patch |   43 +
 ...hip-dfi-use-consistent-name-for-priv.patch |  182 +
 ...hip-dfi-Add-SoC-specific-init-functi.patch |  119 +
 ...hip-dfi-dfi-store-raw-values-in-coun.patch |   36 +
 ...ockchip-dfi-Use-free-running-counter.patch |  122 +
 ...-rockchip-dfi-introduce-channel-mask.patch |   84 +
 ...9_dmc-dfi-generalize-DDRTYPE-defines.patch |  124 +
 ...hip-dfi-Clean-up-DDR-type-register-d.patch |   85 +
 ...freq-rockchip-dfi-Add-RK3568-support.patch |   71 +
 ...rockchip-dfi-Handle-LPDDR2-correctly.patch |   40 +
 ...-devfreq-rockchip-dfi-Handle-LPDDR4X.patch |   35 +
 ...hip-dfi-Pass-private-data-struct-to-.patch |   77 +
 ...kchip-dfi-Prepare-for-multiple-users.patch |  135 +
 ...chip-dfi-give-variable-a-better-name.patch |   78 +
 ...evfreq-rockchip-dfi-Add-perf-support.patch |  593 +++
 ...hip-dfi-make-register-stride-SoC-spe.patch |   56 +
 ...hip-dfi-account-for-multiple-DDRMON_.patch |  137 +
 ...-rockchip-dfi-add-support-for-RK3588.patch |   88 +
 ...req-event-convert-Rockchip-DFI-bindi.patch |  114 +
 ...req-event-rockchip-dfi-Add-rk3568-su.patch |   50 +
 ...req-event-rockchip-dfi-Add-rk3588-su.patch |   46 +
 ...arm64-dts-rockchip-rk3399-Enable-DFI.patch |   24 +
 ...12-arm64-dts-rockchip-rk356x-Add-DFI.patch |   29 +
 ...3-arm64-dts-rockchip-rk3588s-Add-DFI.patch |   47 +
 ...ip-rk3588-add-cpu-2.4-GHz-operating-.patch |   39 +
 ...rockchip-Fix-oneOf-condition-failed-.patch |   37 +
 ...hip-add-FriendlyElec-NanoPi-R6C-Plus.patch |  144 +
 ...nable-Rockchip-3588001-erratum-worka.patch |   33 +
 ...ig-Enable-Rockchip-OTP-memory-driver.patch |   27 +
 ...03-mfd-rk808-Make-MFD_RK8XX-tristate.patch |   26 +
 ...ndor-prefixes-Add-prefix-for-belling.patch |   26 +
 ...ngs-eeprom-at24-add-Belling-BL24C16A.patch |   27 +
 ...-phy-rockchip-add-RK3588-PCIe-v3-phy.patch |   72 +
 ...indings-PCI-dwc-improve-msi-handling.patch |   43 +
 ...ig-enable-Synopsys-AHCI-SATA-support.patch |   23 +
 ...add-rk3588-compatible-to-rockchip-dw.patch |   61 +
 ...-soc-rockchip-add-rk3588-USB3-syscon.patch |   57 +
 ...a-rockchip-Add-resets-property-into-.patch |   27 +
 ...s-es8328-convert-to-DT-schema-format.patch |  136 +
 ...3588-fix-pclk_vo0grf-and-pclk_vo1grf.patch |   72 +
 .../514-rockchip-add-orange-pi-5-plus.patch   |   20 +
 ...dwc-rockchip-Fix-interrupt-names-iss.patch |   91 +
 .../516-rockchip-sync-rk3588.patch            |  588 +++
 ...-to-get-role-switch-from-tcpc-fwnode.patch |   54 +
 ...8-usb-typec-tcpm-avoid-graph-warning.patch |   42 +
 .../519-irqchip-fix-its-timeout-issue.patch   |  210 +
 ...dts-rockchip-Add-sfc-node-to-rk3588s.patch |   35 +
 ...1-arm64-dts-rockchip-Add-Orange-Pi-5.patch |  693 +++
 ...ip-Add-I2S2-M0-pin-definitions-to-rk.patch |   58 +
 ...ip-Add-UART9-M0-pin-definitions-to-r.patch |   32 +
 ...gs-PCI-dwc-rockchip-Add-atu-property.patch |   43 +
 ...ip-add-missing-mandatory-rk3588-PCIe.patch |  125 +
 ...-PCI-dwc-rockchip-Add-dma-properties.patch |   78 +
 ...ip-add-missing-rk3588-PCIe-dma-prope.patch |   63 +
 ...rockchip-dwc3-fix-reference-to-nonex.patch |   29 +
 ...rk8xx-Deprecate-rockchip-system-powe.patch |   95 +
 ...rk806-Allow-system-power-controller-.patch |   26 +
 ...pport-for-standard-system-power-cont.patch |   26 +
 ...k8xx-Add-support-for-RK806-power-off.patch |   27 +
 ...p-Fix-rk3588-USB-power-domain-clocks.patch |   44 +
 458 files changed, 62018 insertions(+), 495 deletions(-)
 create mode 100644 package/network/config/firewall4/patches/001-flow_offloading.patch
 create mode 100644 target/linux/rockchip/armv8/base-files/etc/uci-defaults/01_enable_packet_steering
 create mode 100644 target/linux/rockchip/armv8/config-5.15
 create mode 100644 target/linux/rockchip/image/nanopi-r2s.bootscript
 create mode 100644 target/linux/rockchip/image/nanopi-r4s.bootscript
 create mode 100644 target/linux/rockchip/patches-6.1/001-dt-bindings-power-supply-define-monitored-battery-in.patch
 create mode 100644 target/linux/rockchip/patches-6.1/002-dt-bindings-arm-rockchip-add-Theobroma-Systems-PX30-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/003-dt-bindings-rockchip-Add-Hardkernel-ODROID-M1-board.patch
 create mode 100644 target/linux/rockchip/patches-6.1/004-dt-bindings-arm-rockchip-Add-Anbernic-RG353V-and-RG3.patch
 create mode 100644 target/linux/rockchip/patches-6.1/005-dt-bindings-rockchip-Add-Rockchip-rk3566-box-demo-bo.patch
 create mode 100644 target/linux/rockchip/patches-6.1/006-dt-bindings-arm-rockchip-Add-more-RK3326-devices.patch
 create mode 100644 target/linux/rockchip/patches-6.1/007-dt-bindings-arm-rockchip-Add-SOQuartz-Blade.patch
 create mode 100644 target/linux/rockchip/patches-6.1/008-dt-bindings-arm-rockchip-Add-SOQuartz-Model-A.patch
 create mode 100644 target/linux/rockchip/patches-6.1/009-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/010-dt-bindings-arm-rockchip-Add-Rockchip-RK3128-Evaluat.patch
 create mode 100644 target/linux/rockchip/patches-6.1/011-dt-bindings-arm-rockchip-add-Radxa-CM3I-E25.patch
 create mode 100644 target/linux/rockchip/patches-6.1/012-dt-bindings-arm-rockchip-Add-EmbedFire-LubanCat-1.patch
 create mode 100644 target/linux/rockchip/patches-6.1/013-dt-bindings-arm-rockchip-Add-EmbedFire-LubanCat-2.patch
 create mode 100644 target/linux/rockchip/patches-6.1/014-dt-bindings-arm-rockchip-Add-Orange-Pi-R1-Plus.patch
 create mode 100644 target/linux/rockchip/patches-6.1/015-dt-bindings-arm-rockchip-add-initial-rk3588-boards.patch
 delete mode 100644 target/linux/rockchip/patches-6.1/015-v6.8-arm64-dts-rockchip-configure-eth-pad-driver-strength-for-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/016-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/017-dt-bindings-arm-rockchip-Add-Radxa-Compute-Module-3.patch
 create mode 100644 target/linux/rockchip/patches-6.1/018-arm64-dts-rockchip-Fix-compatible-for-Radxa-CM3.patch
 create mode 100644 target/linux/rockchip/patches-6.1/019-dt-bindings-arm-rockchip-Add-Khadas-Edge2-board.patch
 create mode 100644 target/linux/rockchip/patches-6.1/020-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R5S.patch
 create mode 100644 target/linux/rockchip/patches-6.1/021-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R5C.patch
 create mode 100644 target/linux/rockchip/patches-6.1/022-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R2C.patch
 create mode 100644 target/linux/rockchip/patches-6.1/023-dt-bindings-Add-doc-for-Xunlong-OrangePi-R1-Plus-LTS.patch
 create mode 100644 target/linux/rockchip/patches-6.1/024-dt-bindings-Add-doc-for-Fastrhino-R66S-R68S.patch
 create mode 100644 target/linux/rockchip/patches-6.1/025-dt-bindings-arm-rockchip-add-Anbernic-RG353PS.patch
 create mode 100644 target/linux/rockchip/patches-6.1/026-dt-bindings-arm-rockchip-add-FriendlyARM-NanoPi-R2C-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/027-mailbox-rockchip-Use-device_get_match_data-to-simpli.patch
 create mode 100644 target/linux/rockchip/patches-6.1/028-mailbox-rockchip-remove-MODULE_LICENSE-in-non-module.patch
 create mode 100644 target/linux/rockchip/patches-6.1/029-mailbox-rockchip-drop-of_match_ptr-for-ID-table.patch
 create mode 100644 target/linux/rockchip/patches-6.1/030-PCI-Remove-unnecessary-linux-of_irq.h-includes.patch
 create mode 100644 target/linux/rockchip/patches-6.1/035-phy-rockchip-pcie-remove-unused-phy_rd_cfg-function.patch
 create mode 100644 target/linux/rockchip/patches-6.1/036-phy-rockchip-Add-naneng-combo-phy-support-for-RK3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/037-phy-rockchip-remove-unused-hw_to_inno-function.patch
 create mode 100644 target/linux/rockchip/patches-6.1/038-power-supply-rk817-Drop-unneeded-debugging-code.patch
 create mode 100644 target/linux/rockchip/patches-6.1/039-iommu-Remove-detach_dev-callbacks.patch
 create mode 100644 target/linux/rockchip/patches-6.1/040-iommu-rockchip-Add-missing-set_platform_dma_ops-call.patch
 create mode 100644 target/linux/rockchip/patches-6.1/041-arm64-dts-rockchip-add-PX30-Q7-Ringneck-SoM-with-Hai.patch
 create mode 100644 target/linux/rockchip/patches-6.1/042-arm64-dts-rockchip-Add-Hardkernel-ODROID-M1-board.patch
 create mode 100644 target/linux/rockchip/patches-6.1/043-arm64-dts-rockchip-add-thermal-support-to-ODROID-M1.patch
 create mode 100644 target/linux/rockchip/patches-6.1/044-arm64-dts-rockchip-Add-NOR-flash-to-ODROID-M1.patch
 create mode 100644 target/linux/rockchip/patches-6.1/045-arm64-dts-rockchip-Add-analog-audio-on-ODROID-M1.patch
 create mode 100644 target/linux/rockchip/patches-6.1/046-arm64-dts-rockchip-Enable-vop2-and-hdmi-tx-on-ODROID.patch
 create mode 100644 target/linux/rockchip/patches-6.1/047-arm64-dts-rockchip-Enable-HDMI-audio-on-ODROID-M1.patch
 create mode 100644 target/linux/rockchip/patches-6.1/048-arm64-dts-rockchip-Enable-the-GPU-on-ODROID-M1.patch
 create mode 100644 target/linux/rockchip/patches-6.1/049-arm64-dts-rockchip-Enable-the-USB-2.0-ports-on-ODROI.patch
 create mode 100644 target/linux/rockchip/patches-6.1/050-arm64-dts-rockchip-Enable-the-USB-3.0-ports-on-ODROI.patch
 create mode 100644 target/linux/rockchip/patches-6.1/051-arm64-dts-rockchip-Add-SATA-support-to-ODROID-M1.patch
 create mode 100644 target/linux/rockchip/patches-6.1/052-arm64-dts-rockchip-Add-PCIEe-v3-nodes-to-ODROID-M1.patch
 create mode 100644 target/linux/rockchip/patches-6.1/053-arm64-dts-rockchip-Add-IR-receiver-node-to-ODROID-M1.patch
 create mode 100644 target/linux/rockchip/patches-6.1/054-arm64-dts-rockchip-Add-regulator-suffix-to-rock-3a.patch
 create mode 100644 target/linux/rockchip/patches-6.1/055-arm64-dts-rockchip-Add-PCIe-v3-nodes-to-rock-3a.patch
 create mode 100644 target/linux/rockchip/patches-6.1/056-arm64-dts-rockchip-add-BT-wifi-nodes-to-Pinephone-Pr.patch
 create mode 100644 target/linux/rockchip/patches-6.1/057-arm64-dts-rockchip-enable-tsadc-for-ROCK-4C.patch
 create mode 100644 target/linux/rockchip/patches-6.1/058-arm64-dts-rockchip-add-rk3328-crypto-node.patch
 create mode 100644 target/linux/rockchip/patches-6.1/059-arm64-dts-rockchip-rk3399-add-crypto-node.patch
 create mode 100644 target/linux/rockchip/patches-6.1/060-arm64-dts-rockchip-fix-spdif-fe460000-ordering-on-rk.patch
 create mode 100644 target/linux/rockchip/patches-6.1/061-arm64-dts-rockchip-RK356x-Add-I2S2-device-node.patch
 create mode 100644 target/linux/rockchip/patches-6.1/062-arm64-dts-rockchip-Add-I2S2-node-for-RADXA-Rock-3A.patch
 create mode 100644 target/linux/rockchip/patches-6.1/063-arm64-dts-rockchip-Add-nodes-for-SDIO-UART-Wi-Fi-Blu.patch
 create mode 100644 target/linux/rockchip/patches-6.1/064-arm64-dts-rockchip-add-Anbernic-RG353V-and-RG353VS.patch
 create mode 100644 target/linux/rockchip/patches-6.1/065-arm64-dts-rockchip-add-rk817-chg-to-RG353P-and-RG503.patch
 create mode 100644 target/linux/rockchip/patches-6.1/066-arm64-dts-rockchip-add-poll-interval-to-RGxx3-device.patch
 create mode 100644 target/linux/rockchip/patches-6.1/067-arm64-dts-rockchip-Update-joystick-to-polled-for-OG2.patch
 create mode 100644 target/linux/rockchip/patches-6.1/068-arm64-dts-rockchip-enable-pcie2-on-rk3566-roc-pc.patch
 create mode 100644 target/linux/rockchip/patches-6.1/070-arm64-dts-rockchip-Enable-video-output-and-HDMI-on-S.patch
 create mode 100644 target/linux/rockchip/patches-6.1/071-arm64-dts-rockchip-Enable-HDMI-sound-on-SOQuartz.patch
 create mode 100644 target/linux/rockchip/patches-6.1/072-arm64-dts-rockchip-Enable-PCIe-2-on-SOQuartz-CM4IO.patch
 create mode 100644 target/linux/rockchip/patches-6.1/073-arm64-dts-rockchip-Add-dts-for-rockchip-rk3566-box-d.patch
 create mode 100644 target/linux/rockchip/patches-6.1/074-arm64-dts-rockchip-Add-HDMI-supplies-on-Rock960.patch
 create mode 100644 target/linux/rockchip/patches-6.1/075-arm64-dts-rockchip-Add-support-of-external-clock-to-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/076-arm64-dts-rockchip-Add-support-of-regulator-for-ethe.patch
 create mode 100644 target/linux/rockchip/patches-6.1/077-arm64-dts-rockchip-Move-most-of-Odroid-Go-Advance-DT.patch
 create mode 100644 target/linux/rockchip/patches-6.1/078-arm64-dts-rockchip-Add-Odroid-Go-Advance-Black-Editi.patch
 create mode 100644 target/linux/rockchip/patches-6.1/079-arm64-dts-rockchip-Add-Odroid-Go-Super.patch
 create mode 100644 target/linux/rockchip/patches-6.1/080-arm64-dts-rockchip-Add-Anbernic-RG351M.patch
 create mode 100644 target/linux/rockchip/patches-6.1/081-arm64-dts-rockchip-Add-SOQuartz-blade-board.patch
 create mode 100644 target/linux/rockchip/patches-6.1/082-arm64-dts-rockchip-Add-SOQuartz-Model-A-baseboard.patch
 create mode 100644 target/linux/rockchip/patches-6.1/083-arm64-dts-rockchip-update-cache-properties-for-rk330.patch
 create mode 100644 target/linux/rockchip/patches-6.1/084-arm64-dts-rockchip-use-correct-reset-names-for-rk339.patch
 create mode 100644 target/linux/rockchip/patches-6.1/085-arm64-dts-rockchip-Add-Radxa-CM3I-E25.patch
 create mode 100644 target/linux/rockchip/patches-6.1/086-arm64-dts-rockchip-Add-EmbedFire-LubanCat-1.patch
 create mode 100644 target/linux/rockchip/patches-6.1/087-arm64-dts-rockchip-remove-unsupported-property-from-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/088-arm64-dts-rockchip-add-audio-nodes-to-rk3566-roc-pc.patch
 create mode 100644 target/linux/rockchip/patches-6.1/089-arm64-dts-rockchip-Add-dts-for-EmbedFire-rk3568-Luba.patch
 create mode 100644 target/linux/rockchip/patches-6.1/090-arm64-dts-rockchip-Add-IR-receiver-to-BPI-R2Pro.patch
 rename target/linux/rockchip/patches-6.1/{007-v6.3-arm64-dts-rockchip-rk3328-Add-Orange-Pi-R1-Plus.patch => 091-arm64-dts-rockchip-rk3328-Add-Orange-Pi-R1-Plus.patch} (96%)
 create mode 100644 target/linux/rockchip/patches-6.1/092-arm64-dts-rockchip-Change-audio-card-name-for-Odroid.patch
 create mode 100644 target/linux/rockchip/patches-6.1/093-arm64-dts-rockchip-don-t-set-cpll-rate-for-Odroid-Go.patch
 create mode 100644 target/linux/rockchip/patches-6.1/094-arm64-dts-rockchip-update-px30-thermal-zones-for-GPU.patch
 create mode 100644 target/linux/rockchip/patches-6.1/095-arm64-dts-rockchip-Update-leds-for-Odroid-Go-Advance.patch
 create mode 100644 target/linux/rockchip/patches-6.1/096-arm64-dts-rockchip-increase-spi-max-frequency-of-nor.patch
 create mode 100644 target/linux/rockchip/patches-6.1/097-arm64-dts-rockchip-Add-rk3588-pinctrl-data.patch
 create mode 100644 target/linux/rockchip/patches-6.1/098-arm64-dts-rockchip-Add-base-DT-for-rk3588-SoC.patch
 create mode 100644 target/linux/rockchip/patches-6.1/099-arm64-dts-rockchip-Add-rk3588-evb1-board.patch
 create mode 100644 target/linux/rockchip/patches-6.1/100-arm64-dts-rockchip-Add-rock-5a-board.patch
 create mode 100644 target/linux/rockchip/patches-6.1/101-arm64-dts-rockchip-Add-rock-5b-board.patch
 create mode 100644 target/linux/rockchip/patches-6.1/102-arm64-dts-rockchip-Update-sdhci-alias-for-rock-5a.patch
 create mode 100644 target/linux/rockchip/patches-6.1/103-arm64-dts-rockchip-Remove-empty-line-from-rock-5a.patch
 create mode 100644 target/linux/rockchip/patches-6.1/104-arm64-dts-rockchip-Update-sdhci-alias-for-rock-5b.patch
 create mode 100644 target/linux/rockchip/patches-6.1/105-arm64-dts-rockchip-assign-rate-to-clk_rtc_32k-on-rk3.patch
 create mode 100644 target/linux/rockchip/patches-6.1/106-arm64-dts-rockchip-fix-hdmi-cec-on-rock-3a.patch
 delete mode 100644 target/linux/rockchip/patches-6.1/106-r4s-openwrt-leds.patch
 delete mode 100644 target/linux/rockchip/patches-6.1/107-arm64-dts-rockchip-Update-LED-properties-for-Orange-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/107-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-A-S.patch
 delete mode 100644 target/linux/rockchip/patches-6.1/108-arm64-dts-rockchip-add-LED-configuration-to-Orange-P.patch
 create mode 100644 target/linux/rockchip/patches-6.1/108-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-A-I.patch
 create mode 100644 target/linux/rockchip/patches-6.1/109-arm64-dts-rockchip-add-io-domain-setting-to-rk3566-b.patch
 delete mode 100644 target/linux/rockchip/patches-6.1/109-nanopc-t4-add-led-aliases.patch
 create mode 100644 target/linux/rockchip/patches-6.1/110-arm64-dts-rockchip-Enable-wifi-module-AP6398s-for-rk.patch
 delete mode 100644 target/linux/rockchip/patches-6.1/110-arm64-dts-rockchip-Update-LED-properties-for-NanoPi-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/111-arm64-dts-rockchip-add-Hynitron-cst340-for-Anbernic-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/112-arm64-dts-rockchip-Fix-RX-delay-for-ethernet-phy-on-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/113-arm64-dts-rockchip-Add-rk3566-based-Radxa-Compute-Mo.patch
 create mode 100644 target/linux/rockchip/patches-6.1/114-arm64-dts-rockchip-Add-Radxa-Compute-Module-3-IO-boa.patch
 create mode 100644 target/linux/rockchip/patches-6.1/115-arm64-dts-rockchip-Update-eMMC-SD-aliases-for-Radxa-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/116-arm64-dts-rockchip-Update-eMMC-SD-aliases-for-Radxa-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/117-arm64-dts-rockchip-add-pinctrls-for-16-bit-18-bit-rg.patch
 create mode 100644 target/linux/rockchip/patches-6.1/118-arm64-dts-rockchip-add-display-to-RG503.patch
 create mode 100644 target/linux/rockchip/patches-6.1/119-arm64-dts-rockchip-Enable-Ethernet-for-Radxa-CM3-IO.patch
 create mode 100644 target/linux/rockchip/patches-6.1/120-arm64-dts-rockchip-rk3566-Enable-WiFi-BT-support-for.patch
 create mode 100644 target/linux/rockchip/patches-6.1/121-arm64-dts-rockchip-Fix-compatible-for-Radxa-CM3.patch
 create mode 100644 target/linux/rockchip/patches-6.1/122-arm64-dts-rockchip-Add-missing-CM3i-fallback-compati.patch
 create mode 100644 target/linux/rockchip/patches-6.1/123-arm64-dts-rockchip-Drop-unneeded-model-for-Radxa-CM3.patch
 create mode 100644 target/linux/rockchip/patches-6.1/124-arm64-dts-rockchip-Correct-the-model-name-for-Radxa-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/125-arm64-dts-rockchip-Fix-rk3399-GICv3-ITS-node-name.patch
 create mode 100644 target/linux/rockchip/patches-6.1/126-arm64-dts-rockchip-Lower-SD-card-speed-on-rk3399-Pin.patch
 create mode 100644 target/linux/rockchip/patches-6.1/127-arm64-dts-rockchip-Add-sdmmc-node-to-rk3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/128-arm64-dts-rockchip-Enable-USB-OTG-for-rk3566-Radxa-C.patch
 create mode 100644 target/linux/rockchip/patches-6.1/129-arm64-dts-rockchip-Add-display-support-to-Odroid-Go-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/130-arm64-dts-rockchip-Add-Khadas-edge2-board.patch
 rename target/linux/rockchip/patches-6.1/{009-v6.4-arm64-dts-rockchip-Add-FriendlyElec-Nanopi-R5S.patch => 131-arm64-dts-rockchip-Add-FriendlyElec-Nanopi-R5S.patch} (97%)
 create mode 100644 target/linux/rockchip/patches-6.1/132-arm64-dts-rockchip-add-rk3588-cache-level-informatio.patch
 rename target/linux/rockchip/patches-6.1/{010-v6.4-arm64-dts-rockchip-create-common-dtsi-for-NanoPi-R5-serie.patch => 133-arm64-dts-rockchip-create-common-dtsi-for-NanoPi-R5-.patch} (99%)
 rename target/linux/rockchip/patches-6.1/{013-v6.4-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R5C.patch => 134-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R5C.patch} (90%)
 rename target/linux/rockchip/patches-6.1/{011-v6.4-arm64-dts-rockchip-fix-gmac-support-for-NanoPi-R5S.patch => 135-arm64-dts-rockchip-fix-gmac-support-for-NanoPi-R5S.patch} (87%)
 rename target/linux/rockchip/patches-6.1/{012-v6.4-arm64-dts-rockchip-remove-I2S1-TDM-node-for-the-NanoPi-R5.patch => 136-arm64-dts-rockchip-remove-I2S1-TDM-node-for-the-Nano.patch} (82%)
 create mode 100644 target/linux/rockchip/patches-6.1/137-arm64-dts-rockchip-fix-px30-lvds-node.patch
 create mode 100644 target/linux/rockchip/patches-6.1/138-arm64-dts-rockchip-fix-px30-dsi-node.patch
 create mode 100644 target/linux/rockchip/patches-6.1/139-arm64-dts-rockchip-fix-rk3399-dsi-node.patch
 create mode 100644 target/linux/rockchip/patches-6.1/140-arm64-dts-rockchip-fix-rk3399-dp-node.patch
 create mode 100644 target/linux/rockchip/patches-6.1/141-arm64-dts-rockchip-rename-vbus-supply-to-phy-supply-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/142-arm64-dts-rockchip-remove-hclk-from-dsi-node-on-rk35.patch
 create mode 100644 target/linux/rockchip/patches-6.1/143-arm64-dts-rockchip-Enable-watchdog-support-for-RK358.patch
 create mode 100644 target/linux/rockchip/patches-6.1/144-arm64-dts-rockchip-Add-internal-display-support-to-r.patch
 create mode 100644 target/linux/rockchip/patches-6.1/145-arm64-dts-rockchip-Add-touchscreen-support-to-rk3399.patch
 rename target/linux/rockchip/patches-6.1/{006-v6.4-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C.patch => 146-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C.patch} (84%)
 rename target/linux/rockchip/patches-6.1/{008-v6.4-arm64-dts-rockchip-Add-Xunlong-OrangePi-R1-Plus-LTS.patch => 147-arm64-dts-rockchip-Add-Xunlong-OrangePi-R1-Plus-LTS.patch} (89%)
 create mode 100644 target/linux/rockchip/patches-6.1/148-arm64-dts-rockchip-Add-clk_rtc_32k-to-Anbernic-xx3-D.patch
 create mode 100644 target/linux/rockchip/patches-6.1/149-arm64-dts-rockchip-Remove-non-existing-pwm-delay-us-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/150-arm64-dts-rockchip-Enable-RTC-support-for-Rock-5B.patch
 create mode 100644 target/linux/rockchip/patches-6.1/151-arm64-dts-rockchip-Add-pwm-fan-to-rk3588-rock-5b.patch
 create mode 100644 target/linux/rockchip/patches-6.1/152-arm64-dts-rockchip-add-rk3588-thermal-sensor.patch
 create mode 100644 target/linux/rockchip/patches-6.1/153-arm64-dts-rockchip-Fix-SCMI-assigned-clocks-on-rk358.patch
 create mode 100644 target/linux/rockchip/patches-6.1/154-arm64-dts-rockchip-Assign-PLL_PPLL-clock-rate-to-1.1.patch
 create mode 100644 target/linux/rockchip/patches-6.1/155-arm64-dts-rockchip-Add-rk3588s-I2S-nodes.patch
 create mode 100644 target/linux/rockchip/patches-6.1/156-arm64-dts-rockchip-Add-I2S-rk3588-nodes.patch
 create mode 100644 target/linux/rockchip/patches-6.1/157-arm64-dts-rockchip-Add-rk3588-rock-5b-analog-audio.patch
 create mode 100644 target/linux/rockchip/patches-6.1/158-arm64-dts-rockchip-use-just-port-in-panel-on-Pineboo.patch
 create mode 100644 target/linux/rockchip/patches-6.1/159-arm64-dts-rockchip-use-just-port-in-panel-on-RockPro.patch
 create mode 100644 target/linux/rockchip/patches-6.1/160-arm64-dts-rockchip-correct-panel-supplies-on-some-rk.patch
 create mode 100644 target/linux/rockchip/patches-6.1/161-arm64-dts-rockchip-correct-panel-supplies-on-Odroid-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/162-arm64-dts-rockchip-Add-pinctrl-gpio-ranges-for-rk356.patch
 create mode 100644 target/linux/rockchip/patches-6.1/163-arm64-dts-rockchip-Drop-RTC-clock-frequency-on-rk358.patch
 create mode 100644 target/linux/rockchip/patches-6.1/164-arm64-dts-rockchip-Use-generic-name-for-es8316-on-Pi.patch
 create mode 100644 target/linux/rockchip/patches-6.1/165-arm64-dts-rockchip-Add-vdd_cpu_big-regulators-to-rk3.patch
 create mode 100644 target/linux/rockchip/patches-6.1/166-arm64-dts-rockchip-Add-support-for-volume-keys-to-rk.patch
 create mode 100644 target/linux/rockchip/patches-6.1/167-arm64-dts-rockchip-Update-compatible-for-bluetooth.patch
 create mode 100644 target/linux/rockchip/patches-6.1/168-arm64-dts-rockchip-add-panel-to-Anbernic-RG353-serie.patch
 create mode 100644 target/linux/rockchip/patches-6.1/169-arm64-dts-rockchip-fix-USB-regulator-on-ROCK64.patch
 create mode 100644 target/linux/rockchip/patches-6.1/170-arm64-dts-rockchip-add-missing-cache-properties.patch
 create mode 100644 target/linux/rockchip/patches-6.1/172-arm64-dts-rockchip-add-GIC-ITS-support-to-rk3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/173-arm64-dts-rockchip-Add-rk3588-timer.patch
 create mode 100644 target/linux/rockchip/patches-6.1/174-arm64-dts-rockchip-Add-Lunzn-Fastrhino-R66S.patch
 create mode 100644 target/linux/rockchip/patches-6.1/175-arm64-dts-rockchip-Add-Lunzn-Fastrhino-R68S.patch
 create mode 100644 target/linux/rockchip/patches-6.1/176-arm64-dts-rockchip-add-Anbernic-RG353PS.patch
 create mode 100644 target/linux/rockchip/patches-6.1/177-arm64-dts-rockchip-Update-leds-for-Anbernic-RGxx3-Se.patch
 create mode 100644 target/linux/rockchip/patches-6.1/178-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C-Plus.patch
 create mode 100644 target/linux/rockchip/patches-6.1/179-arm64-dts-rockchip-Add-rk3588-OTP-node.patch
 rename target/linux/rockchip/patches-6.1/{014-v6.4-arm64-dts-rockchip-fix-button-reset-pin-for-nanopi-r5c.patch => 180-arm64-dts-rockchip-fix-button-reset-pin-for-nanopi-r.patch} (85%)
 create mode 100644 target/linux/rockchip/patches-6.1/181-soc-rockchip-dtpm-use-C99-array-init-syntax.patch
 create mode 100644 target/linux/rockchip/patches-6.1/182-soc-rockchip-power-domain-add-rk3588-mem-module-supp.patch
 create mode 100644 target/linux/rockchip/patches-6.1/183-irqchip-gic-v3-Add-Rockchip-3588001-erratum-workarou.patch
 create mode 100644 target/linux/rockchip/patches-6.1/184-dt-bindings-arm-rockchip-Add-pmu-compatible-for-rv11.patch
 create mode 100644 target/linux/rockchip/patches-6.1/185-dt-bindings-clock-add-rk3588-cru-bindings.patch
 create mode 100644 target/linux/rockchip/patches-6.1/186-dt-bindings-display-rockchip-convert-rockchip-lvds.t.patch
 create mode 100644 target/linux/rockchip/patches-6.1/187-dt-bindings-display-rockchip-convert-dw_mipi_dsi_roc.patch
 create mode 100644 target/linux/rockchip/patches-6.1/188-dt-bindings-display-rockchip-convert-analogix_dp-roc.patch
 create mode 100644 target/linux/rockchip/patches-6.1/189-dt-bindings-display-dsi-controller-move-clock-master.patch
 create mode 100644 target/linux/rockchip/patches-6.1/190-dt-bindings-display-bridge-snps-dw-mipi-dsi-fix-cloc.patch
 create mode 100644 target/linux/rockchip/patches-6.1/191-dt-bindings-display-bridge-convert-analogix_dp.txt-t.patch
 create mode 100644 target/linux/rockchip/patches-6.1/192-dt-bindings-mfd-Add-rk806-binding.patch
 create mode 100644 target/linux/rockchip/patches-6.1/193-dt-bindings-mmc-rockchip-dw-mshc-Add-power-domains-p.patch
 create mode 100644 target/linux/rockchip/patches-6.1/194-dt-bindings-mmc-rockchip-dw-mshc-Add-RK3588-compatib.patch
 create mode 100644 target/linux/rockchip/patches-6.1/195-dt-bindings-mtd-rockchip-add-rockchip-rk3128-nfc.patch
 create mode 100644 target/linux/rockchip/patches-6.1/196-dt-bindings-PCI-Convert-Rockchip-RK3399-PCIe-to-DT-s.patch
 create mode 100644 target/linux/rockchip/patches-6.1/197-dt-bindings-PCI-dwc-Apply-common-schema-to-Rockchip-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/198-dt-bindings-PCI-dwc-Add-rk3588-compatible.patch
 create mode 100644 target/linux/rockchip/patches-6.1/199-dt-bindings-phy-rockchip-Add-rk3588-compatible.patch
 create mode 100644 target/linux/rockchip/patches-6.1/200-dt-bindings-pinctrl-rockchip-further-increase-max-am.patch
 create mode 100644 target/linux/rockchip/patches-6.1/201-dt-bindings-pinctrl-rockchip-pinctrl-mark-gpio-sub-n.patch
 create mode 100644 target/linux/rockchip/patches-6.1/202-regulator-dt-bindings-Convert-Fairchild-FAN53555-to-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/203-regulator-dt-bindings-fcs-fan53555-Add-support-for-R.patch
 create mode 100644 target/linux/rockchip/patches-6.1/204-dt-bindings-soc-rockchip-add-initial-rk3588-syscon-c.patch
 create mode 100644 target/linux/rockchip/patches-6.1/205-dt-bindings-soc-rockchip-grf-add-rockchip-rk3288-dp-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/206-dt-bindings-phy-rename-phy-rockchip-inno-usb2.yaml.patch
 create mode 100644 target/linux/rockchip/patches-6.1/207-dt-bindings-soc-rockchip-grf-add-rockchip-lvds.yaml.patch
 create mode 100644 target/linux/rockchip/patches-6.1/208-dt-bindings-soc-rockchip-add-rk3588-usb2phy-syscon.patch
 create mode 100644 target/linux/rockchip/patches-6.1/209-dt-bindings-rockchip-thermal-Support-the-RK3588-SoC-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/210-dt-bindings-timer-rockchip-Add-rockchip-rk3128-timer.patch
 create mode 100644 target/linux/rockchip/patches-6.1/211-dt-bindings-timer-rk-timer-Add-rktimer-for-rv1126.patch
 create mode 100644 target/linux/rockchip/patches-6.1/212-dt-bindings-timer-rockchip-Drop-superfluous-rk3288-c.patch
 create mode 100644 target/linux/rockchip/patches-6.1/213-dt-bindings-timer-rockchip-Add-rk3588-compatible.patch
 create mode 100644 target/linux/rockchip/patches-6.1/214-dt-bindings-usb-rockchip-dwc3-Move-RK3399-to-its-own.patch
 create mode 100644 target/linux/rockchip/patches-6.1/215-clk-rockchip-add-register-offset-of-the-cores-select.patch
 create mode 100644 target/linux/rockchip/patches-6.1/216-clk-rockchip-add-pll-type-for-RK3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/217-clk-rockchip-allow-additional-mux-options-for-cpu-cl.patch
 create mode 100644 target/linux/rockchip/patches-6.1/218-clk-rockchip-simplify-rockchip_clk_add_lookup.patch
 create mode 100644 target/linux/rockchip/patches-6.1/219-clk-rockchip-add-lookup-table-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/220-clk-rockchip-add-clock-controller-for-the-RK3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/221-clk-Remove-a-useless-include.patch
 create mode 100644 target/linux/rockchip/patches-6.1/222-clk-rockchip-Remove-values-for-mmask-and-nmask-in-st.patch
 create mode 100644 target/linux/rockchip/patches-6.1/223-clk-rockchip-rk3588-make-gate-linked-clocks-critical.patch
 create mode 100644 target/linux/rockchip/patches-6.1/224-clk-RK808-Reduce-struct-rk808-usage.patch
 create mode 100644 target/linux/rockchip/patches-6.1/225-mfd-rk808-Convert-to-i2c-s-.probe_new.patch
 create mode 100644 target/linux/rockchip/patches-6.1/226-mfd-rk808-Permit-having-multiple-PMIC-instances.patch
 create mode 100644 target/linux/rockchip/patches-6.1/227-mfd-rk808-Re-add-rk808-clkout-to-RK818.patch
 create mode 100644 target/linux/rockchip/patches-6.1/228-mfd-rk808-Convert-to-device-managed-resources.patch
 create mode 100644 target/linux/rockchip/patches-6.1/229-mfd-rk808-Use-dev_err_probe.patch
 create mode 100644 target/linux/rockchip/patches-6.1/230-mfd-rk808-Replace-struct-i2c_client-with-struct-devi.patch
 create mode 100644 target/linux/rockchip/patches-6.1/231-mfd-rk808-Split-into-core-and-i2c.patch
 create mode 100644 target/linux/rockchip/patches-6.1/232-mfd-rk8xx-i2c-Use-device_get_match_data.patch
 create mode 100644 target/linux/rockchip/patches-6.1/233-mfd-rk8xx-Add-rk806-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/234-regulator-rk808-reduce-struct-rk808-usage.patch
 create mode 100644 target/linux/rockchip/patches-6.1/235-regulator-rk808-Use-dev_err_probe.patch
 create mode 100644 target/linux/rockchip/patches-6.1/236-regulator-Set-PROBE_PREFER_ASYNCHRONOUS-for-drivers-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/237-dt-bindings-usb-Add-H616-compatible-string.patch
 create mode 100644 target/linux/rockchip/patches-6.1/238-dt-bindings-usb-Convert-multiple-usb-ohci-bindings-t.patch
 create mode 100644 target/linux/rockchip/patches-6.1/239-dt-bindings-usb-Convert-OMAP-OHCI-EHCI-bindings-to-s.patch
 create mode 100644 target/linux/rockchip/patches-6.1/240-dt-bindings-usb-allow-evaluated-properties-in-OHCI-c.patch
 create mode 100644 target/linux/rockchip/patches-6.1/241-pinctrl-rk805-add-rk806-pinctrl-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/242-regulator-expose-regulator_find_closest_bigger.patch
 create mode 100644 target/linux/rockchip/patches-6.1/243-regulator-rk808-fix-asynchronous-probing.patch
 create mode 100644 target/linux/rockchip/patches-6.1/244-regulator-rk808-cleanup-parent-device-usage.patch
 create mode 100644 target/linux/rockchip/patches-6.1/245-regulator-rk808-revert-to-synchronous-probing.patch
 create mode 100644 target/linux/rockchip/patches-6.1/246-regulator-rk808-add-rk806-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/247-arm64-defconfig-update-RK8XX-MFD-config.patch
 create mode 100644 target/linux/rockchip/patches-6.1/248-arm64-dts-rockchip-rk3588-evb1-add-pmic.patch
 create mode 100644 target/linux/rockchip/patches-6.1/249-cpufreq-rockchip-Introduce-driver-for-rk3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/250-arm64-dts-rockchip-rk3588-add-cpu-frequency-scaling-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/251-arm64-dts-rockchip-rk3588-evb1-add-cpu-regulator-inf.patch
 create mode 100644 target/linux/rockchip/patches-6.1/252-dt-bindings-usb-Add-RK3588-OHCI.patch
 create mode 100644 target/linux/rockchip/patches-6.1/253-dt-bindings-usb-Add-RK3588-EHCI.patch
 create mode 100644 target/linux/rockchip/patches-6.1/254-usb-host-ohci-platform-increase-max-clock-number-to-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/255-dt-bindings-phy-rockchip-inno-usb2phy-add-rk3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/256-phy-phy-rockchip-inno-usb2-add-rk3588-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/257-phy-phy-rockchip-inno-usb2-add-reset-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/258-phy-phy-rockchip-inno-usb2-add-rk3588-phy-tuning-sup.patch
 create mode 100644 target/linux/rockchip/patches-6.1/259-phy-phy-rockchip-inno-usb2-simplify-phy-clock-handli.patch
 create mode 100644 target/linux/rockchip/patches-6.1/260-phy-phy-rockchip-inno-usb2-simplify-getting-match-da.patch
 create mode 100644 target/linux/rockchip/patches-6.1/261-phy-phy-rockchip-inno-usb2-improve-error-message.patch
 create mode 100644 target/linux/rockchip/patches-6.1/262-arm64-dts-rockchip-rk3588-add-USB2-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/263-arm64-dts-rockchip-rk3588-evb1-add-USB2.patch
 create mode 100644 target/linux/rockchip/patches-6.1/264-arm64-dts-rockchip-rk3588-rock5b-add-USB2.patch
 create mode 100644 target/linux/rockchip/patches-6.1/265-dt-bindings-soc-rockchip-add-rk3588-pipe-phy-syscon.patch
 create mode 100644 target/linux/rockchip/patches-6.1/266-dt-bindings-ata-ahci-add-RK3588-AHCI-controller.patch
 create mode 100644 target/linux/rockchip/patches-6.1/267-dt-bindings-phy-rockchip-rk3588-has-two-reset-lines.patch
 create mode 100644 target/linux/rockchip/patches-6.1/268-arm64-dts-rockchip-rk3588-add-combo-PHYs.patch
 create mode 100644 target/linux/rockchip/patches-6.1/269-arm64-dts-rockchip-rk3588-add-SATA-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/270-arm64-dts-rockchip-rk3588-evb1-add-SATA.patch
 create mode 100644 target/linux/rockchip/patches-6.1/271-arm64-dts-rockchip-rk3588-add-PCIe2-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/272-arm64-dts-rockchip-rk3588-evb1-add-PCIe2-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/273-arm64-dts-rockchip-Add-RK806-regulator-config.patch
 create mode 100644 target/linux/rockchip/patches-6.1/274-arm64-dts-rockchip-rock-5a-Add-SD-card-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/275-arm64-dts-rockchip-rock-5b-Add-SD-card-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/276-arm64-dts-rockchip-rk3588-Add-I2S-nodes.patch
 create mode 100644 target/linux/rockchip/patches-6.1/277-arm64-dts-rockchip-RK3588s-Enable-PCIE2.0x1-fe190000.patch
 create mode 100644 target/linux/rockchip/patches-6.1/278-dt-bindings-PCI-tegra234-Add-ECAM-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/279-dt-bindings-PCI-dwc-Detach-common-RP-EP-DT-bindings.patch
 create mode 100644 target/linux/rockchip/patches-6.1/280-dt-bindings-PCI-dwc-Remove-bus-node-from-the-example.patch
 create mode 100644 target/linux/rockchip/patches-6.1/281-dt-bindings-PCI-dwc-Add-phys-phy-names-common-proper.patch
 create mode 100644 target/linux/rockchip/patches-6.1/282-dt-bindings-PCI-dwc-Add-max-link-speed-common-proper.patch
 create mode 100644 target/linux/rockchip/patches-6.1/283-dt-bindings-PCI-dwc-Apply-generic-schema-for-generic.patch
 create mode 100644 target/linux/rockchip/patches-6.1/284-dt-bindings-PCI-dwc-Add-interrupts-interrupt-names-c.patch
 create mode 100644 target/linux/rockchip/patches-6.1/285-dt-bindings-PCI-dwc-Add-reg-reg-names-common-propert.patch
 create mode 100644 target/linux/rockchip/patches-6.1/286-dt-bindings-PCI-dwc-Add-clocks-resets-common-propert.patch
 create mode 100644 target/linux/rockchip/patches-6.1/287-dt-bindings-PCI-dwc-rockchip-Fix-interrupt-names-iss.patch
 create mode 100644 target/linux/rockchip/patches-6.1/288-dt-bindings-PCI-dwc-rockchip-Add-missing-legacy-inte.patch
 create mode 100644 target/linux/rockchip/patches-6.1/289-dt-bindings-PCI-dwc-rockchip-Update-for-RK3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/290-arm64-defconfig-Enable-ethernet-for-Rock-5B.patch
 create mode 100644 target/linux/rockchip/patches-6.1/291-arm64-defconfig-Enable-Sound-Card-for-Rock-5B.patch
 create mode 100644 target/linux/rockchip/patches-6.1/292-arm64-dts-rockchip-rk3588s-Add-USBDP-phy-nodes.patch
 create mode 100644 target/linux/rockchip/patches-6.1/293-arm64-dts-rockchip-rk3588s-Add-USB3-controllers.patch
 create mode 100644 target/linux/rockchip/patches-6.1/294-fix-USB3-do-not-disable-sub-nodes.patch
 create mode 100644 target/linux/rockchip/patches-6.1/295-phy-rockchip-add-usbdp-combo-phy-driver.patch
 create mode 100644 target/linux/rockchip/patches-6.1/296-dt-bindings-phy-add-rockchip-usbdp-combo-phy-documen.patch
 create mode 100644 target/linux/rockchip/patches-6.1/297-crypto-rockchip-use-dev_err-for-error-message-about-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/298-crypto-rockchip-do-not-use-uninitialized-variable.patch
 create mode 100644 target/linux/rockchip/patches-6.1/299-crypto-rockchip-fix-privete-private-typo.patch
 create mode 100644 target/linux/rockchip/patches-6.1/300-crypto-rockchip-rewrite-type.patch
 create mode 100644 target/linux/rockchip/patches-6.1/301-crypto-rockchip-add-debugfs.patch
 create mode 100644 target/linux/rockchip/patches-6.1/302-crypto-rockchip-introduce-PM.patch
 create mode 100644 target/linux/rockchip/patches-6.1/303-crypto-rockchip-handle-reset-also-in-PM.patch
 create mode 100644 target/linux/rockchip/patches-6.1/304-crypto-rockchip-use-clk_bulk-to-simplify-clock-manag.patch
 create mode 100644 target/linux/rockchip/patches-6.1/305-crypto-rockchip-add-myself-as-maintainer.patch
 create mode 100644 target/linux/rockchip/patches-6.1/306-crypto-rockchip-use-read_poll_timeout.patch
 create mode 100644 target/linux/rockchip/patches-6.1/307-crypto-rockchip-fix-style-issue.patch
 create mode 100644 target/linux/rockchip/patches-6.1/308-crypto-rockchip-add-support-for-rk3328.patch
 create mode 100644 target/linux/rockchip/patches-6.1/309-crypto-rockchip-rename-ablk-functions-to-cipher.patch
 create mode 100644 target/linux/rockchip/patches-6.1/310-crypto-rockchip-rework-rk_handle_req-function.patch
 create mode 100644 target/linux/rockchip/patches-6.1/311-crypto-rockchip-use-a-rk_crypto_info-variable-instea.patch
 create mode 100644 target/linux/rockchip/patches-6.1/312-crypto-rockchip-use-the-rk_crypto_info-given-as-para.patch
 create mode 100644 target/linux/rockchip/patches-6.1/313-dt-bindings-crypto-convert-rockchip-crypto-to-YAML.patch
 create mode 100644 target/linux/rockchip/patches-6.1/314-dt-bindings-crypto-rockchip-add-new-compatible.patch
 create mode 100644 target/linux/rockchip/patches-6.1/315-clk-rk3399-use-proper-crypto0-name.patch
 create mode 100644 target/linux/rockchip/patches-6.1/316-crypto-rockchip-store-crypto_info-in-request-context.patch
 create mode 100644 target/linux/rockchip/patches-6.1/317-crypto-rockchip-Check-for-clocks-numbers-and-their-f.patch
 create mode 100644 target/linux/rockchip/patches-6.1/318-crypto-rockchip-rk_ahash_reg_init-use-crypto_info-fr.patch
 create mode 100644 target/linux/rockchip/patches-6.1/319-crypto-rockchip-permit-to-have-more-than-one-reset.patch
 create mode 100644 target/linux/rockchip/patches-6.1/320-crypto-rockchip-Add-support-for-RK3399.patch
 create mode 100644 target/linux/rockchip/patches-6.1/321-crypto-rockchip-move-kconfig-to-its-dedicated-direct.patch
 create mode 100644 target/linux/rockchip/patches-6.1/322-dt-bindings-crypto-add-support-for-rockchip-crypto-r.patch
 create mode 100644 target/linux/rockchip/patches-6.1/323-MAINTAINERS-add-new-dt-binding-doc-to-the-right-entr.patch
 create mode 100644 target/linux/rockchip/patches-6.1/324-crypto-rockchip-support-the-new-crypto-IP-for-rk3568.patch
 create mode 100644 target/linux/rockchip/patches-6.1/325-ARM64-dts-rk3568-add-crypto-node.patch
 create mode 100644 target/linux/rockchip/patches-6.1/326-drivers-crypto-rockchip-fix-openwrt-build.patch
 create mode 100644 target/linux/rockchip/patches-6.1/327-PCI-Add-ROCKCHIP-PCIe-ASPM-interface.patch
 create mode 100644 target/linux/rockchip/patches-6.1/328-PCI-aspm_ext-Re-enable-LRT-for-L1SS-after-power-loss.patch
 create mode 100644 target/linux/rockchip/patches-6.1/329-PCI-aspm_ext-Fix-Add-missing-MODULE_LICENSE.patch
 create mode 100644 target/linux/rockchip/patches-6.1/330-mmc-sdhci-of-dwcmshc-enable-host-V4-support-for-Blue.patch
 rename target/linux/rockchip/patches-6.1/{001-v6.3-mmc-sdhci-of-dwcmshc-Update-DLL-and-pre-change-delay-for.patch => 331-mmc-sdhci-of-dwcmshc-Update-DLL-and-pre-change-delay.patch} (91%)
 create mode 100644 target/linux/rockchip/patches-6.1/332-mmc-sdhci-of-dwcmshc-add-the-missing-device-table-ID.patch
 rename target/linux/rockchip/patches-6.1/{002-v6.4-mmc-sdhci-of-dwcmshc-properly-determine-max-clock-on.patch => 333-mmc-sdhci-of-dwcmshc-properly-determine-max-clock-on.patch} (90%)
 create mode 100644 target/linux/rockchip/patches-6.1/334-dt-bindings-reset-add-rk3588-reset-definitions.patch
 create mode 100644 target/linux/rockchip/patches-6.1/335-rtc-rk808-reduce-struct-rk808-usage.patch
 create mode 100644 target/linux/rockchip/patches-6.1/336-dt-bindings-clock-add-rk3588-clock-definitions.patch
 create mode 100644 target/linux/rockchip/patches-6.1/337-thermal-drivers-rockchip-Fix-kernel-doc-warnings.patch
 create mode 100644 target/linux/rockchip/patches-6.1/338-thermal-drivers-rockchip-Use-devm_platform_get_and_i.patch
 create mode 100644 target/linux/rockchip/patches-6.1/339-thermal-Remove-debug-or-error-messages-in-get_temp-o.patch
 create mode 100644 target/linux/rockchip/patches-6.1/340-thermal-hwmon-Do-not-set-no_hwmon-before-calling-the.patch
 create mode 100644 target/linux/rockchip/patches-6.1/341-thermal-drivers-rockchip-Simplify-getting-match-data.patch
 create mode 100644 target/linux/rockchip/patches-6.1/342-thermal-drivers-rockchip-Simplify-clock-logic.patch
 create mode 100644 target/linux/rockchip/patches-6.1/343-thermal-drivers-rockchip-Use-dev_err_probe.patch
 create mode 100644 target/linux/rockchip/patches-6.1/344-thermal-drivers-rockchip-Simplify-channel-id-logic.patch
 create mode 100644 target/linux/rockchip/patches-6.1/345-thermal-drivers-rockchip-Support-dynamic-sized-senso.patch
 create mode 100644 target/linux/rockchip/patches-6.1/346-thermal-drivers-rockchip-Support-RK3588-SoC-in-the-t.patch
 create mode 100644 target/linux/rockchip/patches-6.1/347-thermal-drivers-rockchip-use-devm_reset_control_arra.patch
 create mode 100644 target/linux/rockchip/patches-6.1/348-iio-adc-rockchip_saradc-Add-support-for-RK3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/349-iio-adc-rockchip_saradc-Make-use-of-devm_clk_get_ena.patch
 create mode 100644 target/linux/rockchip/patches-6.1/350-iio-adc-rockchip_saradc-Use-of_device_get_match_data.patch
 create mode 100644 target/linux/rockchip/patches-6.1/351-iio-adc-rockchip_saradc-Match-alignment-with-open-pa.patch
 create mode 100644 target/linux/rockchip/patches-6.1/352-iio-adc-rockchip_saradc-Use-dev_err_probe.patch
 create mode 100644 target/linux/rockchip/patches-6.1/353-arm64-dts-rockchip-Add-DT-node-for-ADC-support-in-RK.patch
 create mode 100644 target/linux/rockchip/patches-6.1/354-clk-divider-Fix-handling-of-rates-UINT_MAX.patch
 create mode 100644 target/linux/rockchip/patches-6.1/355-clk-composite-Fix-handling-of-high-clock-rates.patch
 create mode 100644 target/linux/rockchip/patches-6.1/356-media-dt-bindings-media-rockchip-rga-add-rockchip-rk.patch
 create mode 100644 target/linux/rockchip/patches-6.1/357-arm64-dts-rockchip-Add-RGA2-support-to-rk356x.patch
 create mode 100644 target/linux/rockchip/patches-6.1/358-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/359-arm64-dts-rockchip-Add-Rockchip-RK3588J.patch
 create mode 100644 target/linux/rockchip/patches-6.1/360-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-B-S.patch
 create mode 100644 target/linux/rockchip/patches-6.1/361-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-B-I.patch
 rename target/linux/rockchip/patches-6.1/{005-arm64-dts-rockchip-add-EEPROM-node-for-NanoPi-R4S.patch => 362-arm64-dts-rockchip-add-EEPROM-node-for-NanoPi-R4S.patch} (78%)
 rename target/linux/rockchip/patches-6.1/{100-rockchip-use-system-LED-for-OpenWrt.patch => 363-rockchip-use-system-LED-for-OpenWrt.patch} (57%)
 rename target/linux/rockchip/patches-6.1/{103-arm64-rockchip-add-OF-node-for-USB-eth-on-NanoPi-R2S.patch => 364-arm64-rockchip-add-OF-node-for-USB-eth-on-NanoPi-R2S.patch} (67%)
 rename target/linux/rockchip/patches-6.1/{105-nanopi-r4s-sd-signalling.patch => 365-arm64-dts-rockchip-disable-UHS-modes-for-NanoPi-R4S.patch} (67%)
 create mode 100644 target/linux/rockchip/patches-6.1/366-rockchip-rk3328-add-support-for-FriendlyARM-NanoPi-N.patch
 create mode 100644 target/linux/rockchip/patches-6.1/367-dts-rockchip-fix-rock3-a.patch
 create mode 100644 target/linux/rockchip/patches-6.1/368-dts-rockchip-fix-wifi-on-rock-pi-4b.patch
 create mode 100644 target/linux/rockchip/patches-6.1/369-dts-rockchip-fix-nanopi-r5c-r5s.patch
 create mode 100644 target/linux/rockchip/patches-6.1/370-arm64-dts-rockchip-add-FriendlyElec-NanoPi-R6C-R6S.patch
 create mode 100644 target/linux/rockchip/patches-6.1/371-regulator-fan53555-Remove-unused-_SLEW_SHIFT-definit.patch
 create mode 100644 target/linux/rockchip/patches-6.1/372-regulator-fan53555-Make-use-of-the-bit-macros.patch
 create mode 100644 target/linux/rockchip/patches-6.1/373-regulator-fan53555-Improve-vsel_mask-computation.patch
 create mode 100644 target/linux/rockchip/patches-6.1/374-regulator-fan53555-Use-dev_err_probe.patch
 create mode 100644 target/linux/rockchip/patches-6.1/375-regulator-fan53555-Add-support-for-RK860X.patch
 create mode 100644 target/linux/rockchip/patches-6.1/376-ASoC-rockchip-i2s_tdm-Make-the-grf-property-optional.patch
 create mode 100644 target/linux/rockchip/patches-6.1/377-ASoC-rockchip-i2s_tdm-Add-support-for-RK3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/378-ASoC-rockchip-i2s-Add-compatible-for-RK3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/384-arm64-dts-rockchip-add-default-pinctrl-for-rk3588-em.patch
 create mode 100644 target/linux/rockchip/patches-6.1/385-arm64-dts-rockchip-Add-sdio-node-to-rk3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/386-dt-bindings-vendor-prefixes-add-Indiedroid.patch
 create mode 100644 target/linux/rockchip/patches-6.1/387-dt-bindings-arm-rockchip-Add-Indiedroid-Nova.patch
 create mode 100644 target/linux/rockchip/patches-6.1/388-arm64-dts-rockchip-Add-Indiedroid-Nova-board.patch
 create mode 100644 target/linux/rockchip/patches-6.1/390-PM-devfreq-rockchip-dfi-Embed-desc-into-private-data.patch
 create mode 100644 target/linux/rockchip/patches-6.1/391-PM-devfreq-rockchip-dfi-use-consistent-name-for-priv.patch
 create mode 100644 target/linux/rockchip/patches-6.1/392-PM-devfreq-rockchip-dfi-Add-SoC-specific-init-functi.patch
 create mode 100644 target/linux/rockchip/patches-6.1/393-PM-devfreq-rockchip-dfi-dfi-store-raw-values-in-coun.patch
 create mode 100644 target/linux/rockchip/patches-6.1/394-PM-devfreq-rockchip-dfi-Use-free-running-counter.patch
 create mode 100644 target/linux/rockchip/patches-6.1/395-PM-devfreq-rockchip-dfi-introduce-channel-mask.patch
 create mode 100644 target/linux/rockchip/patches-6.1/396-PM-devfreq-rk3399_dmc-dfi-generalize-DDRTYPE-defines.patch
 create mode 100644 target/linux/rockchip/patches-6.1/397-PM-devfreq-rockchip-dfi-Clean-up-DDR-type-register-d.patch
 create mode 100644 target/linux/rockchip/patches-6.1/398-PM-devfreq-rockchip-dfi-Add-RK3568-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/399-PM-devfreq-rockchip-dfi-Handle-LPDDR2-correctly.patch
 create mode 100644 target/linux/rockchip/patches-6.1/400-PM-devfreq-rockchip-dfi-Handle-LPDDR4X.patch
 create mode 100644 target/linux/rockchip/patches-6.1/401-PM-devfreq-rockchip-dfi-Pass-private-data-struct-to-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/402-PM-devfreq-rockchip-dfi-Prepare-for-multiple-users.patch
 create mode 100644 target/linux/rockchip/patches-6.1/403-PM-devfreq-rockchip-dfi-give-variable-a-better-name.patch
 create mode 100644 target/linux/rockchip/patches-6.1/404-PM-devfreq-rockchip-dfi-Add-perf-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/405-PM-devfreq-rockchip-dfi-make-register-stride-SoC-spe.patch
 create mode 100644 target/linux/rockchip/patches-6.1/406-PM-devfreq-rockchip-dfi-account-for-multiple-DDRMON_.patch
 create mode 100644 target/linux/rockchip/patches-6.1/407-PM-devfreq-rockchip-dfi-add-support-for-RK3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/408-dt-bindings-devfreq-event-convert-Rockchip-DFI-bindi.patch
 create mode 100644 target/linux/rockchip/patches-6.1/409-dt-bindings-devfreq-event-rockchip-dfi-Add-rk3568-su.patch
 create mode 100644 target/linux/rockchip/patches-6.1/410-dt-bindings-devfreq-event-rockchip-dfi-Add-rk3588-su.patch
 create mode 100644 target/linux/rockchip/patches-6.1/411-arm64-dts-rockchip-rk3399-Enable-DFI.patch
 create mode 100644 target/linux/rockchip/patches-6.1/412-arm64-dts-rockchip-rk356x-Add-DFI.patch
 create mode 100644 target/linux/rockchip/patches-6.1/413-arm64-dts-rockchip-rk3588s-Add-DFI.patch
 create mode 100644 target/linux/rockchip/patches-6.1/414-arm64-dts-rockchip-rk3588-add-cpu-2.4-GHz-operating-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/416-dt-bindings-iio-rockchip-Fix-oneOf-condition-failed-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/417-rockchip-add-FriendlyElec-NanoPi-R6C-Plus.patch
 create mode 100644 target/linux/rockchip/patches-6.1/418-irqchip-gic-v3-Enable-Rockchip-3588001-erratum-worka.patch
 create mode 100644 target/linux/rockchip/patches-6.1/502-arm64-defconfig-Enable-Rockchip-OTP-memory-driver.patch
 create mode 100644 target/linux/rockchip/patches-6.1/503-mfd-rk808-Make-MFD_RK8XX-tristate.patch
 create mode 100644 target/linux/rockchip/patches-6.1/504-dt-bindings-vendor-prefixes-Add-prefix-for-belling.patch
 create mode 100644 target/linux/rockchip/patches-6.1/505-dt-bindings-eeprom-at24-add-Belling-BL24C16A.patch
 create mode 100644 target/linux/rockchip/patches-6.1/506-dt-bindings-phy-rockchip-add-RK3588-PCIe-v3-phy.patch
 create mode 100644 target/linux/rockchip/patches-6.1/507-dt-bindings-PCI-dwc-improve-msi-handling.patch
 create mode 100644 target/linux/rockchip/patches-6.1/508-arm64-defconfig-enable-Synopsys-AHCI-SATA-support.patch
 create mode 100644 target/linux/rockchip/patches-6.1/509-dt-bindings-usb-add-rk3588-compatible-to-rockchip-dw.patch
 create mode 100644 target/linux/rockchip/patches-6.1/510-dt-bindings-soc-rockchip-add-rk3588-USB3-syscon.patch
 create mode 100644 target/linux/rockchip/patches-6.1/511-dt-bindings-media-rockchip-Add-resets-property-into-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/512-dt-bindings-es8328-convert-to-DT-schema-format.patch
 create mode 100644 target/linux/rockchip/patches-6.1/513-clk-rockchip-rk3588-fix-pclk_vo0grf-and-pclk_vo1grf.patch
 create mode 100644 target/linux/rockchip/patches-6.1/514-rockchip-add-orange-pi-5-plus.patch
 create mode 100644 target/linux/rockchip/patches-6.1/515-dt-bindings-PCI-dwc-rockchip-Fix-interrupt-names-iss.patch
 create mode 100644 target/linux/rockchip/patches-6.1/516-rockchip-sync-rk3588.patch
 create mode 100644 target/linux/rockchip/patches-6.1/517-usb-typec-tcpm:-try-to-get-role-switch-from-tcpc-fwnode.patch
 create mode 100644 target/linux/rockchip/patches-6.1/518-usb-typec-tcpm-avoid-graph-warning.patch
 create mode 100644 target/linux/rockchip/patches-6.1/519-irqchip-fix-its-timeout-issue.patch
 create mode 100644 target/linux/rockchip/patches-6.1/520-arm64-dts-rockchip-Add-sfc-node-to-rk3588s.patch
 create mode 100644 target/linux/rockchip/patches-6.1/521-arm64-dts-rockchip-Add-Orange-Pi-5.patch
 create mode 100644 target/linux/rockchip/patches-6.1/522-arm64-dts-rockchip-Add-I2S2-M0-pin-definitions-to-rk.patch
 create mode 100644 target/linux/rockchip/patches-6.1/523-arm64-dts-rockchip-Add-UART9-M0-pin-definitions-to-r.patch
 create mode 100644 target/linux/rockchip/patches-6.1/524-1-dt-bindings-PCI-dwc-rockchip-Add-atu-property.patch
 create mode 100644 target/linux/rockchip/patches-6.1/524-2-arm64-dts-rockchip-add-missing-mandatory-rk3588-PCIe.patch
 create mode 100644 target/linux/rockchip/patches-6.1/524-3-dt-bindings-PCI-dwc-rockchip-Add-dma-properties.patch
 create mode 100644 target/linux/rockchip/patches-6.1/525-arm64-dts-rockchip-add-missing-rk3588-PCIe-dma-prope.patch
 create mode 100644 target/linux/rockchip/patches-6.1/526-dt-bindings-usb-rockchip-dwc3-fix-reference-to-nonex.patch
 create mode 100644 target/linux/rockchip/patches-6.1/527-dt-bindings-mfd-rk8xx-Deprecate-rockchip-system-powe.patch
 create mode 100644 target/linux/rockchip/patches-6.1/528-dt-bindings-mfd-rk806-Allow-system-power-controller-.patch
 create mode 100644 target/linux/rockchip/patches-6.1/529-mfd-rk8xx-Add-support-for-standard-system-power-cont.patch
 create mode 100644 target/linux/rockchip/patches-6.1/530-mfd-rk8xx-Add-support-for-RK806-power-off.patch
 create mode 100644 target/linux/rockchip/patches-6.1/531-arm64-dts-rockchip-Fix-rk3588-USB-power-domain-clocks.patch

diff --git a/include/target.mk b/include/target.mk
index b5e3e7ff6f..265abe2bad 100644
--- a/include/target.mk
+++ b/include/target.mk
@@ -253,6 +253,8 @@ ifeq ($(DUMP),1)
     CPU_TYPE ?= generic
     CPU_CFLAGS_generic = -mcpu=generic
     CPU_CFLAGS_cortex-a53 = -mcpu=cortex-a53
+    CPU_CFLAGS_cortex-a55 = -mcpu=cortex-a55
+    CPU_CFLAGS_cortex-a76 = -mcpu=cortex-a76
   endif
   ifeq ($(ARCH),arc)
     CPU_TYPE ?= arc700
diff --git a/package/network/config/firewall4/patches/001-flow_offloading.patch b/package/network/config/firewall4/patches/001-flow_offloading.patch
new file mode 100644
index 0000000000..0833ce391e
--- /dev/null
+++ b/package/network/config/firewall4/patches/001-flow_offloading.patch
@@ -0,0 +1,8 @@
+--- a/root/etc/config/firewall
++++ b/root/etc/config/firewall
+@@ -1,4 +1,5 @@
+ config defaults
++	option flow_offloading	1
+ 	option syn_flood	1
+ 	option input		REJECT
+ 	option output		ACCEPT
diff --git a/target/linux/rockchip/Makefile b/target/linux/rockchip/Makefile
index 42d75e3b4f..308f36c56a 100644
--- a/target/linux/rockchip/Makefile
+++ b/target/linux/rockchip/Makefile
@@ -15,7 +15,7 @@ endef
 
 include $(INCLUDE_DIR)/target.mk
 
-DEFAULT_PACKAGES += uboot-envtools partx-utils e2fsprogs mkf2fs kmod-gpio-button-hotplug
+DEFAULT_PACKAGES += uboot-envtools partx-utils e2fsprogs mkf2fs kmod-gpio-button-hotplug kmod-thermal
 
 KERNELNAME:=Image dtbs
 
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index fbbe2735e9..b10c43ba60 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -8,23 +8,13 @@ boardname="${board##*,}"
 board_config_update
 
 case $board in
-friendlyarm,nanopi-r2c|\
-friendlyarm,nanopi-r2s|\
-friendlyarm,nanopi-r4s|\
-xunlong,orangepi-r1-plus|\
-xunlong,orangepi-r1-plus-lts)
-	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth0"
-	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth1"
+friendlyarm,nanopi-r2s)
+	ucidef_set_led_netdev "wan" "WAN" "$boardname:green:wan" "eth0"
+	ucidef_set_led_netdev "lan" "LAN" "$boardname:green:lan" "eth1"
 	;;
-friendlyarm,nanopi-r5c)
-	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth1"
-	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth0"
-	ucidef_set_led_netdev "wlan" "WLAN" "green:wlan" "phy0-ap0"
-	;;
-friendlyarm,nanopi-r5s)
+friendlyarm,nanopi-r4s)
 	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth0"
-	ucidef_set_led_netdev "lan1" "LAN1" "green:lan1" "eth1"
-	ucidef_set_led_netdev "lan2" "LAN2" "green:lan2" "eth2"
+	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth1"
 	;;
 esac
 
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index 01e32c7740..816045a480 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -7,19 +7,10 @@ rockchip_setup_interfaces()
 	local board="$1"
 
 	case "$board" in
-	friendlyarm,nanopi-r2c|\
 	friendlyarm,nanopi-r2s|\
-	friendlyarm,nanopi-r4s|\
-	xunlong,orangepi-r1-plus|\
-	xunlong,orangepi-r1-plus-lts)
+	friendlyarm,nanopi-r4s)
 		ucidef_set_interfaces_lan_wan 'eth1' 'eth0'
 		;;
-	friendlyarm,nanopi-r5c)
-		ucidef_set_interfaces_lan_wan 'eth0' 'eth1'
-		;;
-	friendlyarm,nanopi-r5s)
-		ucidef_set_interfaces_lan_wan 'eth1 eth2' 'eth0'
-		;;
 	*)
 		ucidef_set_interface_lan 'eth0'
 		;;
@@ -55,7 +46,6 @@ rockchip_setup_macs()
 	local label_mac=""
 
 	case "$board" in
-	friendlyarm,nanopi-r2c|\
 	friendlyarm,nanopi-r2s)
 		wan_mac=$(macaddr_generate_from_mmc_cid mmcblk0)
 		lan_mac=$(macaddr_add "$wan_mac" 1)
@@ -64,18 +54,6 @@ rockchip_setup_macs()
 		wan_mac=$(nanopi_r4s_get_mac wan)
 		lan_mac=$(nanopi_r4s_get_mac lan)
 		;;
-	friendlyarm,nanopi-r5c)
-		wan_mac=$(macaddr_generate_from_mmc_cid mmcblk*)
-		lan_mac=$(macaddr_add "$wan_mac" 1)
-		;;
-	friendlyarm,nanopi-r5s)
-		wan_mac=$(macaddr_generate_from_mmc_cid mmcblk1)
-		lan_mac=$(macaddr_add "$wan_mac" 1)
-		;;
-	xunlong,orangepi-r1-plus|\
-	xunlong,orangepi-r1-plus-lts)
-		wan_mac=$(macaddr_add "$(cat /sys/class/net/eth1/address)" -1)
-		;;
 	esac
 
 	[ -n "$lan_mac" ] && ucidef_set_interface_macaddr "lan" $lan_mac
diff --git a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
index 09fc420fec..d8385b3c69 100644
--- a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
+++ b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
@@ -29,10 +29,7 @@ set_interface_core() {
 }
 
 case "$(board_name)" in
-friendlyarm,nanopi-r2c|\
-friendlyarm,nanopi-r2s|\
-xunlong,orangepi-r1-plus|\
-xunlong,orangepi-r1-plus-lts)
+friendlyarm,nanopi-r2s)
 	set_interface_core 2 "eth0"
 	set_interface_core 4 "eth1" "xhci-hcd:usb[0-9]+"
 	;;
@@ -40,14 +37,5 @@ friendlyarm,nanopi-r4s)
 	set_interface_core 10 "eth0"
 	set_interface_core 20 "eth1"
 	;;
-friendlyarm,nanopi-r5c)
-	set_interface_core 2 "eth0"
-	set_interface_core 4 "eth1"
-	;;
-friendlyarm,nanopi-r5s)
-	set_interface_core 2 "eth0"
-	set_interface_core 4 "eth1"
-	set_interface_core 8 "eth2"
-	;;
 esac
 
diff --git a/target/linux/rockchip/armv8/base-files/etc/uci-defaults/01_enable_packet_steering b/target/linux/rockchip/armv8/base-files/etc/uci-defaults/01_enable_packet_steering
new file mode 100644
index 0000000000..114c7e1a46
--- /dev/null
+++ b/target/linux/rockchip/armv8/base-files/etc/uci-defaults/01_enable_packet_steering
@@ -0,0 +1,5 @@
+uci -q get network.globals.packet_steering > /dev/null || {
+	uci set network.globals='globals'
+	uci set network.globals.packet_steering=1
+	uci commit network
+}
diff --git a/target/linux/rockchip/armv8/config-5.15 b/target/linux/rockchip/armv8/config-5.15
new file mode 100644
index 0000000000..54fad098dd
--- /dev/null
+++ b/target/linux/rockchip/armv8/config-5.15
@@ -0,0 +1,635 @@
+CONFIG_64BIT=y
+CONFIG_ARCH_DMA_ADDR_T_64BIT=y
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+CONFIG_ARCH_KEEP_MEMBLOCK=y
+CONFIG_ARCH_MHP_MEMMAP_ON_MEMORY_ENABLE=y
+CONFIG_ARCH_MMAP_RND_BITS=18
+CONFIG_ARCH_MMAP_RND_BITS_MAX=33
+CONFIG_ARCH_MMAP_RND_BITS_MIN=18
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MIN=11
+CONFIG_ARCH_PROC_KCORE_TEXT=y
+CONFIG_ARCH_ROCKCHIP=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_ARCH_STACKWALK=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_ARCH_WANTS_NO_INSTR=y
+CONFIG_ARC_EMAC_CORE=y
+CONFIG_ARM64=y
+CONFIG_ARM64_4K_PAGES=y
+CONFIG_ARM64_CNP=y
+CONFIG_ARM64_CRYPTO=y
+CONFIG_ARM64_EPAN=y
+CONFIG_ARM64_ERRATUM_819472=y
+CONFIG_ARM64_ERRATUM_824069=y
+CONFIG_ARM64_ERRATUM_826319=y
+CONFIG_ARM64_ERRATUM_827319=y
+CONFIG_ARM64_ERRATUM_832075=y
+CONFIG_ARM64_ERRATUM_843419=y
+CONFIG_ARM64_ERRATUM_858921=y
+CONFIG_ARM64_HW_AFDBM=y
+CONFIG_ARM64_LD_HAS_FIX_ERRATUM_843419=y
+CONFIG_ARM64_PAGE_SHIFT=12
+CONFIG_ARM64_PAN=y
+CONFIG_ARM64_PA_BITS=48
+CONFIG_ARM64_PA_BITS_48=y
+CONFIG_ARM64_PTR_AUTH=y
+CONFIG_ARM64_PTR_AUTH_KERNEL=y
+CONFIG_ARM64_RAS_EXTN=y
+CONFIG_ARM64_SVE=y
+CONFIG_ARM64_TAGGED_ADDR_ABI=y
+CONFIG_ARM64_VA_BITS=48
+# CONFIG_ARM64_VA_BITS_39 is not set
+CONFIG_ARM64_VA_BITS_48=y
+CONFIG_ARM64_WORKAROUND_CLEAN_CACHE=y
+CONFIG_ARM_AMBA=y
+CONFIG_ARM_ARCH_TIMER=y
+CONFIG_ARM_ARCH_TIMER_EVTSTREAM=y
+CONFIG_ARM_ARCH_TIMER_OOL_WORKAROUND=y
+CONFIG_ARM_CPUIDLE=y
+CONFIG_ARM_GIC=y
+CONFIG_ARM_GIC_V2M=y
+CONFIG_ARM_GIC_V3=y
+CONFIG_ARM_GIC_V3_ITS=y
+CONFIG_ARM_GIC_V3_ITS_PCI=y
+CONFIG_ARM_MHU=y
+CONFIG_ARM_MHU_V2=y
+CONFIG_ARM_PSCI_CPUIDLE=y
+CONFIG_ARM_PSCI_CPUIDLE_DOMAIN=y
+CONFIG_ARM_PSCI_FW=y
+# CONFIG_ARM_RK3399_DMC_DEVFREQ is not set
+CONFIG_ARM_SCPI_CPUFREQ=y
+CONFIG_ARM_SCPI_POWER_DOMAIN=y
+CONFIG_ARM_SCPI_PROTOCOL=y
+CONFIG_ARM_SMMU=y
+CONFIG_ARM_SMMU_DISABLE_BYPASS_BY_DEFAULT=y
+# CONFIG_ARM_SMMU_LEGACY_DT_BINDINGS is not set
+CONFIG_ARM_SMMU_V3=y
+# CONFIG_ARM_SMMU_V3_SVA is not set
+CONFIG_AUDIT_ARCH_COMPAT_GENERIC=y
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+CONFIG_BACKLIGHT_GPIO=y
+CONFIG_BACKLIGHT_PWM=y
+CONFIG_BLK_DEV_BSG=y
+CONFIG_BLK_DEV_BSGLIB=y
+CONFIG_BLK_DEV_BSG_COMMON=y
+# CONFIG_BLK_DEV_INITRD is not set
+CONFIG_BLK_DEV_INTEGRITY=y
+CONFIG_BLK_DEV_INTEGRITY_T10=y
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_NVME=y
+CONFIG_BLK_DEV_PCIESSD_MTIP32XX=y
+CONFIG_BLK_DEV_SD=y
+CONFIG_BLK_MQ_PCI=y
+CONFIG_BLK_PM=y
+CONFIG_BRCMSTB_GISB_ARB=y
+CONFIG_BSD_PROCESS_ACCT=y
+CONFIG_BSD_PROCESS_ACCT_V3=y
+CONFIG_CC_HAVE_SHADOW_CALL_STACK=y
+CONFIG_CC_HAVE_STACKPROTECTOR_SYSREG=y
+CONFIG_CHARGER_GPIO=y
+CONFIG_CLKSRC_MMIO=y
+CONFIG_CLK_PX30=y
+CONFIG_CLK_RK3308=y
+CONFIG_CLK_RK3328=y
+CONFIG_CLK_RK3368=y
+CONFIG_CLK_RK3399=y
+CONFIG_CLK_RK3568=y
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_CMA=y
+CONFIG_CMA_ALIGNMENT=8
+CONFIG_CMA_AREAS=7
+# CONFIG_CMA_DEBUG is not set
+# CONFIG_CMA_DEBUGFS is not set
+CONFIG_CMA_SIZE_MBYTES=5
+# CONFIG_CMA_SIZE_SEL_MAX is not set
+CONFIG_CMA_SIZE_SEL_MBYTES=y
+# CONFIG_CMA_SIZE_SEL_MIN is not set
+# CONFIG_CMA_SIZE_SEL_PERCENTAGE is not set
+# CONFIG_CMA_SYSFS is not set
+CONFIG_COMMON_CLK=y
+CONFIG_COMMON_CLK_RK808=y
+CONFIG_COMMON_CLK_ROCKCHIP=y
+CONFIG_COMMON_CLK_SCPI=y
+CONFIG_COMPAT_32BIT_TIME=y
+CONFIG_CONFIGFS_FS=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_CONTIG_ALLOC=y
+CONFIG_CPUFREQ_DT=y
+CONFIG_CPUFREQ_DT_PLATDEV=y
+CONFIG_CPU_FREQ=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL=y
+CONFIG_CPU_FREQ_GOV_ATTR_SET=y
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_GOV_ONDEMAND is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_SCHEDUTIL=y
+# CONFIG_CPU_FREQ_GOV_USERSPACE is not set
+CONFIG_CPU_FREQ_STAT=y
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+CONFIG_CPU_IDLE_MULTIPLE_DRIVERS=y
+CONFIG_CPU_ISOLATION=y
+CONFIG_CPU_LITTLE_ENDIAN=y
+CONFIG_CPU_PM=y
+CONFIG_CPU_RMAP=y
+CONFIG_CPU_THERMAL=y
+CONFIG_CRASH_CORE=y
+CONFIG_CRASH_DUMP=y
+CONFIG_CRC16=y
+# CONFIG_CRC32_SARWATE is not set
+CONFIG_CRC32_SLICEBY8=y
+CONFIG_CRC_T10DIF=y
+CONFIG_CROSS_MEMORY_ATTACH=y
+CONFIG_CRYPTO_AES_ARM64=y
+CONFIG_CRYPTO_AES_ARM64_CE=y
+CONFIG_CRYPTO_AES_ARM64_CE_BLK=y
+CONFIG_CRYPTO_AES_ARM64_CE_CCM=y
+CONFIG_CRYPTO_CRC32=y
+CONFIG_CRYPTO_CRC32C=y
+CONFIG_CRYPTO_CRCT10DIF=y
+CONFIG_CRYPTO_CRCT10DIF_ARM64_CE=y
+CONFIG_CRYPTO_CRYPTD=y
+# CONFIG_CRYPTO_DEV_ROCKCHIP is not set
+CONFIG_CRYPTO_GHASH_ARM64_CE=y
+CONFIG_CRYPTO_HW=y
+CONFIG_CRYPTO_LIB_BLAKE2S_GENERIC=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_SIMD=y
+CONFIG_DCACHE_WORD_ACCESS=y
+CONFIG_DEBUG_BUGVERBOSE=y
+# CONFIG_DEVFREQ_GOV_PASSIVE is not set
+CONFIG_DEVFREQ_GOV_PERFORMANCE=y
+CONFIG_DEVFREQ_GOV_POWERSAVE=y
+CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND=y
+CONFIG_DEVFREQ_GOV_USERSPACE=y
+# CONFIG_DEVFREQ_THERMAL is not set
+CONFIG_DEVMEM=y
+# CONFIG_DEVPORT is not set
+CONFIG_DMADEVICES=y
+CONFIG_DMA_CMA=y
+CONFIG_DMA_DIRECT_REMAP=y
+CONFIG_DMA_ENGINE=y
+CONFIG_DMA_OF=y
+CONFIG_DMA_OPS=y
+CONFIG_DMA_REMAP=y
+CONFIG_DMA_SHARED_BUFFER=y
+CONFIG_DNOTIFY=y
+CONFIG_DTC=y
+CONFIG_DT_IDLE_STATES=y
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_DWMAC_DWC_QOS_ETH=y
+CONFIG_DWMAC_GENERIC=y
+CONFIG_DWMAC_ROCKCHIP=y
+CONFIG_DW_WATCHDOG=y
+CONFIG_EDAC_SUPPORT=y
+CONFIG_EEPROM_AT24=y
+CONFIG_EMAC_ROCKCHIP=y
+CONFIG_ENERGY_MODEL=y
+CONFIG_EXT4_FS=y
+CONFIG_EXT4_FS_POSIX_ACL=y
+CONFIG_EXTCON=y
+CONFIG_F2FS_FS=y
+CONFIG_FANOTIFY=y
+CONFIG_FHANDLE=y
+CONFIG_FIXED_PHY=y
+CONFIG_FIX_EARLYCON_MEM=y
+# CONFIG_FORTIFY_SOURCE is not set
+CONFIG_FRAME_POINTER=y
+CONFIG_FS_IOMAP=y
+CONFIG_FS_MBCACHE=y
+CONFIG_FS_POSIX_ACL=y
+CONFIG_FWNODE_MDIO=y
+CONFIG_FW_LOADER_PAGED_BUF=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_GENERIC_ARCH_TOPOLOGY=y
+CONFIG_GENERIC_BUG=y
+CONFIG_GENERIC_BUG_RELATIVE_POINTERS=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_GENERIC_CPU_AUTOPROBE=y
+CONFIG_GENERIC_CPU_VULNERABILITIES=y
+CONFIG_GENERIC_CSUM=y
+CONFIG_GENERIC_EARLY_IOREMAP=y
+CONFIG_GENERIC_FIND_FIRST_BIT=y
+CONFIG_GENERIC_GETTIMEOFDAY=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_GENERIC_IRQ_CHIP=y
+CONFIG_GENERIC_IRQ_EFFECTIVE_AFF_MASK=y
+CONFIG_GENERIC_IRQ_MIGRATION=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_IRQ_SHOW_LEVEL=y
+CONFIG_GENERIC_LIB_DEVMEM_IS_ALLOWED=y
+CONFIG_GENERIC_MSI_IRQ=y
+CONFIG_GENERIC_MSI_IRQ_DOMAIN=y
+CONFIG_GENERIC_PCI_IOMAP=y
+CONFIG_GENERIC_PHY=y
+CONFIG_GENERIC_PINCONF=y
+CONFIG_GENERIC_SCHED_CLOCK=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+CONFIG_GENERIC_TIME_VSYSCALL=y
+CONFIG_GPIOLIB_IRQCHIP=y
+CONFIG_GPIO_CDEV=y
+CONFIG_GPIO_DWAPB=y
+CONFIG_GPIO_GENERIC=y
+CONFIG_GPIO_GENERIC_PLATFORM=y
+CONFIG_GPIO_ROCKCHIP=y
+CONFIG_GPIO_SYSCON=y
+CONFIG_HANDLE_DOMAIN_IRQ=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_HAS_DMA=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT_MAP=y
+CONFIG_HID=y
+CONFIG_HID_GENERIC=y
+CONFIG_HOTPLUG_CPU=y
+CONFIG_HOTPLUG_PCI=y
+# CONFIG_HOTPLUG_PCI_PCIE is not set
+CONFIG_HUGETLBFS=y
+CONFIG_HUGETLB_PAGE=y
+CONFIG_HWMON=y
+CONFIG_HWSPINLOCK=y
+CONFIG_HW_CONSOLE=y
+CONFIG_I2C=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_CHARDEV=y
+CONFIG_I2C_COMPAT=y
+CONFIG_I2C_HELPER_AUTO=y
+CONFIG_I2C_RK3X=y
+CONFIG_IIO=y
+CONFIG_ILLEGAL_POINTER_VALUE=0xdead000000000000
+CONFIG_INDIRECT_PIO=y
+CONFIG_INPUT=y
+CONFIG_INPUT_EVDEV=y
+CONFIG_INPUT_FF_MEMLESS=y
+CONFIG_INPUT_KEYBOARD=y
+CONFIG_INPUT_LEDS=y
+CONFIG_INPUT_MATRIXKMAP=y
+# CONFIG_INPUT_RK805_PWRKEY is not set
+CONFIG_IOMMU_API=y
+# CONFIG_IOMMU_DEBUGFS is not set
+CONFIG_IOMMU_DEFAULT_PASSTHROUGH=y
+CONFIG_IOMMU_DMA=y
+CONFIG_IOMMU_IOVA=y
+CONFIG_IOMMU_IO_PGTABLE=y
+# CONFIG_IOMMU_IO_PGTABLE_ARMV7S is not set
+CONFIG_IOMMU_IO_PGTABLE_LPAE=y
+# CONFIG_IOMMU_IO_PGTABLE_LPAE_SELFTEST is not set
+CONFIG_IOMMU_SUPPORT=y
+# CONFIG_IO_STRICT_DEVMEM is not set
+CONFIG_IRQCHIP=y
+CONFIG_IRQ_DOMAIN=y
+CONFIG_IRQ_DOMAIN_HIERARCHY=y
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_IRQ_MSI_IOMMU=y
+CONFIG_IRQ_TIME_ACCOUNTING=y
+CONFIG_IRQ_WORK=y
+CONFIG_JBD2=y
+CONFIG_JFFS2_ZLIB=y
+CONFIG_JUMP_LABEL=y
+CONFIG_KALLSYMS=y
+CONFIG_KCMP=y
+CONFIG_KEXEC_CORE=y
+CONFIG_KEXEC_FILE=y
+CONFIG_KSM=y
+# CONFIG_LEDS_BRIGHTNESS_HW_CHANGED is not set
+CONFIG_LEDS_GPIO=y
+CONFIG_LEDS_PWM=y
+CONFIG_LEDS_SYSCON=y
+CONFIG_LEDS_TRIGGER_CPU=y
+CONFIG_LEDS_TRIGGER_PANIC=y
+CONFIG_LIBCRC32C=y
+CONFIG_LIBFDT=y
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_LOCK_DEBUGGING_SUPPORT=y
+CONFIG_LOCK_SPIN_ON_OWNER=y
+CONFIG_LOG_BUF_SHIFT=19
+CONFIG_MAGIC_SYSRQ=y
+CONFIG_MAGIC_SYSRQ_SERIAL=y
+CONFIG_MAILBOX=y
+# CONFIG_MAILBOX_TEST is not set
+CONFIG_MDIO_BUS=y
+CONFIG_MDIO_BUS_MUX=y
+CONFIG_MDIO_BUS_MUX_GPIO=y
+CONFIG_MDIO_BUS_MUX_MMIOREG=y
+CONFIG_MDIO_DEVICE=y
+CONFIG_MDIO_DEVRES=y
+CONFIG_MEMFD_CREATE=y
+CONFIG_MEMORY_ISOLATION=y
+CONFIG_MFD_CORE=y
+# CONFIG_MFD_KHADAS_MCU is not set
+CONFIG_MFD_RK808=y
+CONFIG_MFD_SYSCON=y
+CONFIG_MIGRATION=y
+CONFIG_MMC=y
+CONFIG_MMC_BLOCK=y
+CONFIG_MMC_BLOCK_MINORS=32
+CONFIG_MMC_CQHCI=y
+CONFIG_MMC_DW=y
+# CONFIG_MMC_DW_BLUEFIELD is not set
+# CONFIG_MMC_DW_EXYNOS is not set
+# CONFIG_MMC_DW_HI3798CV200 is not set
+# CONFIG_MMC_DW_K3 is not set
+# CONFIG_MMC_DW_PCI is not set
+CONFIG_MMC_DW_PLTFM=y
+CONFIG_MMC_DW_ROCKCHIP=y
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_OF_ARASAN=y
+CONFIG_MMC_SDHCI_OF_DWCMSHC=y
+# CONFIG_MMC_SDHCI_PCI is not set
+CONFIG_MMC_SDHCI_PLTFM=y
+CONFIG_MODULES_USE_ELF_RELA=y
+CONFIG_MOTORCOMM_PHY=y
+CONFIG_MQ_IOSCHED_DEADLINE=y
+# CONFIG_MTD_CFI is not set
+CONFIG_MTD_CMDLINE_PARTS=y
+# CONFIG_MTD_COMPLEX_MAPPINGS is not set
+CONFIG_MTD_SPI_NOR=y
+CONFIG_MTD_SPI_NOR_USE_4K_SECTORS=y
+CONFIG_MTD_SPLIT_FIRMWARE=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_NEED_SG_DMA_LENGTH=y
+CONFIG_NET_FLOW_LIMIT=y
+CONFIG_NET_PTP_CLASSIFY=y
+CONFIG_NET_SELFTESTS=y
+CONFIG_NLS=y
+CONFIG_NLS_ISO8859_1=y
+CONFIG_NOP_USB_XCEIV=y
+CONFIG_NO_HZ_COMMON=y
+CONFIG_NO_HZ_IDLE=y
+CONFIG_NR_CPUS=256
+CONFIG_NVMEM=y
+CONFIG_NVMEM_ROCKCHIP_EFUSE=y
+# CONFIG_NVMEM_ROCKCHIP_OTP is not set
+CONFIG_NVMEM_SYSFS=y
+CONFIG_NVME_CORE=y
+# CONFIG_NVME_HWMON is not set
+# CONFIG_NVME_MULTIPATH is not set
+CONFIG_OF=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_DYNAMIC=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_GPIO=y
+CONFIG_OF_IOMMU=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_KOBJ=y
+CONFIG_OF_MDIO=y
+CONFIG_OF_OVERLAY=y
+CONFIG_OF_RESOLVE=y
+# CONFIG_OVERLAY_FS_XINO_AUTO is not set
+CONFIG_PADATA=y
+CONFIG_PAGE_POOL=y
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+CONFIG_PANIC_TIMEOUT=0
+# CONFIG_PARTITION_ADVANCED is not set
+CONFIG_PARTITION_PERCPU=y
+CONFIG_PCI=y
+CONFIG_PCIEAER=y
+CONFIG_PCIEASPM=y
+CONFIG_PCIEASPM_DEFAULT=y
+# CONFIG_PCIEASPM_PERFORMANCE is not set
+# CONFIG_PCIEASPM_POWERSAVE is not set
+# CONFIG_PCIEASPM_POWER_SUPERSAVE is not set
+CONFIG_PCIEPORTBUS=y
+CONFIG_PCIE_DW=y
+CONFIG_PCIE_DW_HOST=y
+CONFIG_PCIE_PME=y
+CONFIG_PCIE_ROCKCHIP=y
+CONFIG_PCIE_ROCKCHIP_DW_HOST=y
+CONFIG_PCIE_ROCKCHIP_HOST=y
+CONFIG_PCI_DOMAINS=y
+CONFIG_PCI_DOMAINS_GENERIC=y
+CONFIG_PCI_MSI=y
+CONFIG_PCI_MSI_IRQ_DOMAIN=y
+CONFIG_PCI_STUB=y
+CONFIG_PCS_XPCS=y
+CONFIG_PGTABLE_LEVELS=4
+CONFIG_PHYLIB=y
+CONFIG_PHYLINK=y
+CONFIG_PHYS_ADDR_T_64BIT=y
+CONFIG_PHY_ROCKCHIP_DP=y
+# CONFIG_PHY_ROCKCHIP_DPHY_RX0 is not set
+CONFIG_PHY_ROCKCHIP_EMMC=y
+# CONFIG_PHY_ROCKCHIP_INNO_CSIDPHY is not set
+# CONFIG_PHY_ROCKCHIP_INNO_DSIDPHY is not set
+# CONFIG_PHY_ROCKCHIP_INNO_HDMI is not set
+CONFIG_PHY_ROCKCHIP_INNO_USB2=y
+CONFIG_PHY_ROCKCHIP_PCIE=y
+CONFIG_PHY_ROCKCHIP_TYPEC=y
+CONFIG_PHY_ROCKCHIP_USB=y
+CONFIG_PINCTRL=y
+CONFIG_PINCTRL_RK805=y
+CONFIG_PINCTRL_ROCKCHIP=y
+# CONFIG_PINCTRL_SINGLE is not set
+CONFIG_PL330_DMA=y
+CONFIG_PLATFORM_MHU=y
+CONFIG_PM=y
+CONFIG_PM_CLK=y
+CONFIG_PM_DEVFREQ=y
+# CONFIG_PM_DEVFREQ_EVENT is not set
+CONFIG_PM_GENERIC_DOMAINS=y
+CONFIG_PM_GENERIC_DOMAINS_OF=y
+CONFIG_PM_OPP=y
+CONFIG_POWER_RESET=y
+CONFIG_POWER_SUPPLY=y
+CONFIG_POWER_SUPPLY_HWMON=y
+CONFIG_PPS=y
+CONFIG_PREEMPT=y
+CONFIG_PREEMPTION=y
+CONFIG_PREEMPT_COUNT=y
+# CONFIG_PREEMPT_NONE is not set
+CONFIG_PREEMPT_RCU=y
+CONFIG_PRINTK_TIME=y
+# CONFIG_PRINT_QUOTA_WARNING is not set
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_PROC_VMCORE=y
+CONFIG_PTP_1588_CLOCK=y
+CONFIG_PTP_1588_CLOCK_OPTIONAL=y
+CONFIG_PWM=y
+CONFIG_PWM_ROCKCHIP=y
+CONFIG_PWM_SYSFS=y
+# CONFIG_QFMT_V2 is not set
+CONFIG_QUEUED_RWLOCKS=y
+CONFIG_QUEUED_SPINLOCKS=y
+CONFIG_QUOTA=y
+CONFIG_QUOTACTL=y
+CONFIG_RAID_ATTRS=y
+CONFIG_RANDOMIZE_BASE=y
+CONFIG_RANDOMIZE_MODULE_REGION_FULL=y
+CONFIG_RAS=y
+CONFIG_RATIONAL=y
+# CONFIG_RAVE_SP_CORE is not set
+CONFIG_RCU_TRACE=y
+CONFIG_REALTEK_PHY=y
+CONFIG_REGMAP=y
+CONFIG_REGMAP_I2C=y
+CONFIG_REGMAP_IRQ=y
+CONFIG_REGMAP_MMIO=y
+CONFIG_REGULATOR=y
+CONFIG_REGULATOR_FAN53555=y
+CONFIG_REGULATOR_FIXED_VOLTAGE=y
+CONFIG_REGULATOR_GPIO=y
+CONFIG_REGULATOR_PWM=y
+CONFIG_REGULATOR_RK808=y
+CONFIG_RELOCATABLE=y
+CONFIG_RESET_CONTROLLER=y
+CONFIG_RFS_ACCEL=y
+CONFIG_ROCKCHIP_GRF=y
+CONFIG_ROCKCHIP_IODOMAIN=y
+CONFIG_ROCKCHIP_IOMMU=y
+CONFIG_ROCKCHIP_MBOX=y
+CONFIG_ROCKCHIP_PHY=y
+CONFIG_ROCKCHIP_PM_DOMAINS=y
+# CONFIG_ROCKCHIP_SARADC is not set
+CONFIG_ROCKCHIP_THERMAL=y
+CONFIG_ROCKCHIP_TIMER=y
+CONFIG_RODATA_FULL_DEFAULT_ENABLED=y
+CONFIG_RPS=y
+CONFIG_RSEQ=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_DRV_RK808=y
+CONFIG_RTC_I2C_AND_SPI=y
+CONFIG_RTC_NVMEM=y
+# CONFIG_RUNTIME_TESTING_MENU is not set
+CONFIG_RWSEM_SPIN_ON_OWNER=y
+CONFIG_SCHED_MC=y
+CONFIG_SCSI=y
+CONFIG_SCSI_COMMON=y
+# CONFIG_SCSI_LOWLEVEL is not set
+# CONFIG_SCSI_PROC_FS is not set
+CONFIG_SCSI_SAS_ATTRS=y
+CONFIG_SCSI_SAS_HOST_SMP=y
+CONFIG_SCSI_SAS_LIBSAS=y
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+CONFIG_SENSORS_ARM_SCPI=y
+CONFIG_SERIAL_8250_DEPRECATED_OPTIONS=y
+CONFIG_SERIAL_8250_DW=y
+CONFIG_SERIAL_8250_DWLIB=y
+CONFIG_SERIAL_8250_EXAR=y
+CONFIG_SERIAL_8250_EXTENDED=y
+CONFIG_SERIAL_8250_FSL=y
+CONFIG_SERIAL_8250_NR_UARTS=4
+CONFIG_SERIAL_8250_PCI=y
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+CONFIG_SERIAL_8250_SHARE_IRQ=y
+CONFIG_SERIAL_AMBA_PL011=y
+CONFIG_SERIAL_AMBA_PL011_CONSOLE=y
+CONFIG_SERIAL_DEV_BUS=y
+CONFIG_SERIAL_DEV_CTRL_TTYPORT=y
+CONFIG_SERIAL_MCTRL_GPIO=y
+CONFIG_SERIAL_OF_PLATFORM=y
+CONFIG_SERIO=y
+CONFIG_SERIO_AMBAKMI=y
+CONFIG_SERIO_LIBPS2=y
+CONFIG_SG_POOL=y
+CONFIG_SMP=y
+CONFIG_SOCK_RX_QUEUE_MAPPING=y
+CONFIG_SPARSEMEM=y
+CONFIG_SPARSEMEM_EXTREME=y
+CONFIG_SPARSEMEM_VMEMMAP=y
+CONFIG_SPARSEMEM_VMEMMAP_ENABLE=y
+CONFIG_SPARSE_IRQ=y
+CONFIG_SPI=y
+CONFIG_SPI_BITBANG=y
+CONFIG_SPI_DYNAMIC=y
+CONFIG_SPI_MASTER=y
+CONFIG_SPI_MEM=y
+CONFIG_SPI_ROCKCHIP=y
+# CONFIG_SPI_ROCKCHIP_SFC is not set
+CONFIG_SPI_SPIDEV=y
+# CONFIG_SQUASHFS_DECOMP_MULTI_PERCPU is not set
+CONFIG_SQUASHFS_DECOMP_SINGLE=y
+# CONFIG_SQUASHFS_EMBEDDED is not set
+CONFIG_SQUASHFS_FILE_CACHE=y
+# CONFIG_SQUASHFS_FILE_DIRECT is not set
+CONFIG_SRAM=y
+CONFIG_SRCU=y
+CONFIG_STACKPROTECTOR=y
+CONFIG_STACKPROTECTOR_PER_TASK=y
+CONFIG_STACKPROTECTOR_STRONG=y
+CONFIG_STMMAC_ETH=y
+CONFIG_STMMAC_PLATFORM=y
+CONFIG_STRICT_DEVMEM=y
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_SWAP is not set
+CONFIG_SWIOTLB=y
+CONFIG_SWPHY=y
+CONFIG_SYNC_FILE=y
+CONFIG_SYSCTL_EXCEPTION_TRACE=y
+CONFIG_SYSFS_SYSCALL=y
+# CONFIG_TEXTSEARCH is not set
+CONFIG_THERMAL=y
+CONFIG_THERMAL_DEFAULT_GOV_STEP_WISE=y
+CONFIG_THERMAL_EMERGENCY_POWEROFF_DELAY_MS=0
+CONFIG_THERMAL_EMULATION=y
+CONFIG_THERMAL_GOV_POWER_ALLOCATOR=y
+CONFIG_THERMAL_GOV_STEP_WISE=y
+CONFIG_THERMAL_HWMON=y
+CONFIG_THERMAL_OF=y
+CONFIG_THREAD_INFO_IN_TASK=y
+CONFIG_TICK_CPU_ACCOUNTING=y
+CONFIG_TIMER_OF=y
+CONFIG_TIMER_PROBE=y
+CONFIG_TRACE_CLOCK=y
+CONFIG_TRACE_IRQFLAGS_NMI_SUPPORT=y
+CONFIG_TRANSPARENT_HUGEPAGE=y
+CONFIG_TRANSPARENT_HUGEPAGE_ALWAYS=y
+# CONFIG_TRANSPARENT_HUGEPAGE_MADVISE is not set
+CONFIG_TREE_RCU=y
+CONFIG_TREE_SRCU=y
+CONFIG_TYPEC=y
+# CONFIG_TYPEC_DP_ALTMODE is not set
+CONFIG_TYPEC_FUSB302=y
+# CONFIG_TYPEC_HD3SS3220 is not set
+# CONFIG_TYPEC_MUX_PI3USB30532 is not set
+# CONFIG_TYPEC_STUSB160X is not set
+# CONFIG_TYPEC_TCPCI is not set
+CONFIG_TYPEC_TCPM=y
+# CONFIG_TYPEC_TPS6598X is not set
+# CONFIG_UACCE is not set
+# CONFIG_UCLAMP_TASK is not set
+# CONFIG_UEVENT_HELPER is not set
+CONFIG_UNINLINE_SPIN_UNLOCK=y
+CONFIG_UNMAP_KERNEL_AT_EL0=y
+CONFIG_USB=y
+CONFIG_USB_COMMON=y
+CONFIG_USB_DWC3=y
+CONFIG_USB_DWC3_HOST=y
+CONFIG_USB_DWC3_OF_SIMPLE=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_EHCI_HCD_PLATFORM=y
+# CONFIG_USB_EHCI_ROOT_HUB_TT is not set
+CONFIG_USB_HID=y
+CONFIG_USB_OHCI_HCD=y
+CONFIG_USB_OHCI_HCD_PLATFORM=y
+CONFIG_USB_PHY=y
+CONFIG_USB_ROLE_SWITCH=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_ULPI=y
+CONFIG_USB_ULPI_BUS=y
+CONFIG_USB_ULPI_VIEWPORT=y
+CONFIG_USB_XHCI_HCD=y
+CONFIG_USB_XHCI_PLATFORM=y
+# CONFIG_VIRTIO_MENU is not set
+CONFIG_VMAP_STACK=y
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_VT=y
+CONFIG_VT_CONSOLE=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_WATCHDOG_CORE=y
+CONFIG_XARRAY_MULTI=y
+CONFIG_XPS=y
+CONFIG_XXHASH=y
+CONFIG_XZ_DEC_ARM=y
+CONFIG_XZ_DEC_ARMTHUMB=y
+CONFIG_XZ_DEC_BCJ=y
+CONFIG_ZLIB_DEFLATE=y
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZONE_DMA32=y
diff --git a/target/linux/rockchip/armv8/config-6.1 b/target/linux/rockchip/armv8/config-6.1
index 1830a89c93..d71c8c5088 100644
--- a/target/linux/rockchip/armv8/config-6.1
+++ b/target/linux/rockchip/armv8/config-6.1
@@ -1,4 +1,5 @@
 CONFIG_64BIT=y
+CONFIG_AHCI_DWC=y
 CONFIG_ARCH_BINFMT_ELF_EXTRA_PHDRS=y
 CONFIG_ARCH_CORRECT_STACKTRACE_ON_KRETPROBE=y
 CONFIG_ARCH_DMA_ADDR_T_64BIT=y
@@ -22,16 +23,16 @@ CONFIG_ARM64=y
 CONFIG_ARM64_4K_PAGES=y
 CONFIG_ARM64_CNP=y
 CONFIG_ARM64_EPAN=y
-CONFIG_ARM64_ERRATUM_2051678=y
-CONFIG_ARM64_ERRATUM_2054223=y
-CONFIG_ARM64_ERRATUM_2067961=y
-CONFIG_ARM64_ERRATUM_2077057=y
-CONFIG_ARM64_ERRATUM_2658417=y
+CONFIG_ARM64_ERRATUM_1024718=y
+CONFIG_ARM64_ERRATUM_1165522=y
+CONFIG_ARM64_ERRATUM_1286807=y
+CONFIG_ARM64_ERRATUM_1463225=y
+CONFIG_ARM64_ERRATUM_1530923=y
+CONFIG_ARM64_ERRATUM_2441007=y
 CONFIG_ARM64_ERRATUM_819472=y
 CONFIG_ARM64_ERRATUM_824069=y
 CONFIG_ARM64_ERRATUM_826319=y
 CONFIG_ARM64_ERRATUM_827319=y
-CONFIG_ARM64_ERRATUM_832075=y
 CONFIG_ARM64_ERRATUM_843419=y
 CONFIG_ARM64_ERRATUM_858921=y
 CONFIG_ARM64_HW_AFDBM=y
@@ -50,22 +51,26 @@ CONFIG_ARM64_VA_BITS=48
 # CONFIG_ARM64_VA_BITS_39 is not set
 CONFIG_ARM64_VA_BITS_48=y
 CONFIG_ARM64_WORKAROUND_CLEAN_CACHE=y
-CONFIG_ARM64_WORKAROUND_TSB_FLUSH_FAILURE=y
+CONFIG_ARM64_WORKAROUND_REPEAT_TLBI=y
+CONFIG_ARM64_WORKAROUND_SPECULATIVE_AT=y
 CONFIG_ARM_AMBA=y
 CONFIG_ARM_ARCH_TIMER=y
 CONFIG_ARM_ARCH_TIMER_EVTSTREAM=y
 CONFIG_ARM_ARCH_TIMER_OOL_WORKAROUND=y
+CONFIG_ARM_FFA_SMCCC=y
+CONFIG_ARM_FFA_TRANSPORT=y
 CONFIG_ARM_GIC=y
 CONFIG_ARM_GIC_V2M=y
 CONFIG_ARM_GIC_V3=y
 CONFIG_ARM_GIC_V3_ITS=y
 CONFIG_ARM_GIC_V3_ITS_PCI=y
 CONFIG_ARM_MHU=y
-CONFIG_ARM_MHU_V2=y
+# CONFIG_ARM_MHU_V2 is not set
 CONFIG_ARM_PSCI_CPUIDLE=y
 CONFIG_ARM_PSCI_CPUIDLE_DOMAIN=y
 CONFIG_ARM_PSCI_FW=y
 # CONFIG_ARM_RK3399_DMC_DEVFREQ is not set
+# CONFIG_ARM_ROCKCHIP_CPUFREQ is not set
 CONFIG_ARM_SCMI_CPUFREQ=y
 CONFIG_ARM_SCMI_HAVE_SHMEM=y
 CONFIG_ARM_SCMI_HAVE_TRANSPORT=y
@@ -75,14 +80,14 @@ CONFIG_ARM_SCMI_PROTOCOL=y
 CONFIG_ARM_SCMI_TRANSPORT_MAILBOX=y
 CONFIG_ARM_SCMI_TRANSPORT_SMC=y
 CONFIG_ARM_SCMI_TRANSPORT_SMC_ATOMIC_ENABLE=y
-CONFIG_ARM_SCPI_CPUFREQ=y
-CONFIG_ARM_SCPI_POWER_DOMAIN=y
-CONFIG_ARM_SCPI_PROTOCOL=y
+CONFIG_ARM_SMCCC_SOC_ID=y
 CONFIG_ARM_SMMU=y
 CONFIG_ARM_SMMU_DISABLE_BYPASS_BY_DEFAULT=y
 # CONFIG_ARM_SMMU_LEGACY_DT_BINDINGS is not set
 CONFIG_ARM_SMMU_V3=y
 # CONFIG_ARM_SMMU_V3_SVA is not set
+CONFIG_ATA=y
+CONFIG_ATA_GENERIC=y
 CONFIG_AUDIT_ARCH_COMPAT_GENERIC=y
 CONFIG_BACKLIGHT_CLASS_DEVICE=y
 CONFIG_BACKLIGHT_GPIO=y
@@ -94,11 +99,16 @@ CONFIG_BLK_DEV_BSG_COMMON=y
 CONFIG_BLK_DEV_INTEGRITY=y
 CONFIG_BLK_DEV_INTEGRITY_T10=y
 CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_NBD=m
 CONFIG_BLK_DEV_NVME=y
 CONFIG_BLK_DEV_PCIESSD_MTIP32XX=y
+CONFIG_BLK_DEV_RAM=y
+CONFIG_BLK_DEV_RAM_COUNT=16
+CONFIG_BLK_DEV_RAM_SIZE=4096
 CONFIG_BLK_DEV_SD=y
 CONFIG_BLK_MQ_PCI=y
 CONFIG_BLK_PM=y
+CONFIG_BLOCK_LEGACY_AUTOLOAD=y
 CONFIG_BRCMSTB_GISB_ARB=y
 CONFIG_BSD_PROCESS_ACCT=y
 CONFIG_BSD_PROCESS_ACCT_V3=y
@@ -107,21 +117,23 @@ CONFIG_CC_HAVE_STACKPROTECTOR_SYSREG=y
 CONFIG_CC_IMPLICIT_FALLTHROUGH="-Wimplicit-fallthrough=5"
 CONFIG_CC_NO_ARRAY_BOUNDS=y
 CONFIG_CHARGER_GPIO=y
-# CONFIG_CHARGER_RK817 is not set
+CONFIG_CHARGER_RK817=y
+CONFIG_CHR_DEV_SG=y
 CONFIG_CLKSRC_MMIO=y
-CONFIG_CLK_PX30=y
-CONFIG_CLK_RK3308=y
+# CONFIG_CLK_PX30 is not set
+# CONFIG_CLK_RK3308 is not set
 CONFIG_CLK_RK3328=y
-CONFIG_CLK_RK3368=y
+# CONFIG_CLK_RK3368 is not set
 CONFIG_CLK_RK3399=y
 CONFIG_CLK_RK3568=y
+CONFIG_CLK_RK3588=y
 CONFIG_CLONE_BACKWARDS=y
 CONFIG_CMA=y
 CONFIG_CMA_ALIGNMENT=8
 CONFIG_CMA_AREAS=7
 # CONFIG_CMA_DEBUG is not set
 # CONFIG_CMA_DEBUGFS is not set
-CONFIG_CMA_SIZE_MBYTES=16
+CONFIG_CMA_SIZE_MBYTES=5
 # CONFIG_CMA_SIZE_SEL_MAX is not set
 CONFIG_CMA_SIZE_SEL_MBYTES=y
 # CONFIG_CMA_SIZE_SEL_MIN is not set
@@ -131,10 +143,10 @@ CONFIG_COMMON_CLK=y
 CONFIG_COMMON_CLK_RK808=y
 CONFIG_COMMON_CLK_ROCKCHIP=y
 CONFIG_COMMON_CLK_SCMI=y
-CONFIG_COMMON_CLK_SCPI=y
 CONFIG_COMPACT_UNEVICTABLE_DEFAULT=1
 CONFIG_COMPAT_32BIT_TIME=y
 CONFIG_CONFIGFS_FS=y
+CONFIG_CONNECTOR=y
 CONFIG_CONSOLE_TRANSLATIONS=y
 CONFIG_CONTEXT_TRACKING=y
 CONFIG_CONTEXT_TRACKING_IDLE=y
@@ -167,41 +179,52 @@ CONFIG_CRC16=y
 CONFIG_CRC32_SLICEBY8=y
 CONFIG_CRC64=y
 CONFIG_CRC64_ROCKSOFT=y
+CONFIG_CRC7=y
+CONFIG_CRC_ITU_T=y
 CONFIG_CRC_T10DIF=y
 CONFIG_CROSS_MEMORY_ATTACH=y
 CONFIG_CRYPTO_AES_ARM64=y
 CONFIG_CRYPTO_AES_ARM64_CE=y
 CONFIG_CRYPTO_AES_ARM64_CE_BLK=y
 CONFIG_CRYPTO_AES_ARM64_CE_CCM=y
+CONFIG_CRYPTO_CBC=y
 CONFIG_CRYPTO_CRC32=y
 CONFIG_CRYPTO_CRC32C=y
 CONFIG_CRYPTO_CRC64_ROCKSOFT=y
 CONFIG_CRYPTO_CRCT10DIF=y
 CONFIG_CRYPTO_CRCT10DIF_ARM64_CE=y
 CONFIG_CRYPTO_CRYPTD=y
-# CONFIG_CRYPTO_DEV_ROCKCHIP is not set
+CONFIG_CRYPTO_DES=y
+CONFIG_CRYPTO_DEV_ROCKCHIP=y
+CONFIG_CRYPTO_DEV_ROCKCHIP2=y
+# CONFIG_CRYPTO_DEV_ROCKCHIP2_DEBUG is not set
+# CONFIG_CRYPTO_DEV_ROCKCHIP_DEBUG is not set
+CONFIG_CRYPTO_ECB=y
+CONFIG_CRYPTO_ENGINE=y
 CONFIG_CRYPTO_GHASH_ARM64_CE=y
 CONFIG_CRYPTO_HW=y
 CONFIG_CRYPTO_LIB_BLAKE2S_GENERIC=y
+CONFIG_CRYPTO_LIB_DES=y
 CONFIG_CRYPTO_LIB_SHA1=y
+CONFIG_CRYPTO_LIB_SHA256=y
 CONFIG_CRYPTO_LIB_UTILS=y
-CONFIG_CRYPTO_POLYVAL=y
-CONFIG_CRYPTO_POLYVAL_ARM64_CE=y
+CONFIG_CRYPTO_MD5=y
 CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_SHA1=y
+CONFIG_CRYPTO_SHA256=y
+CONFIG_CRYPTO_SHA512=y
 CONFIG_CRYPTO_SM3=y
-CONFIG_CRYPTO_SM3_NEON=y
-CONFIG_CRYPTO_SM4=y
-CONFIG_CRYPTO_SM4_ARM64_CE_BLK=y
-CONFIG_CRYPTO_SM4_ARM64_NEON_BLK=y
+CONFIG_CRYPTO_SM3_GENERIC=y
 CONFIG_DCACHE_WORD_ACCESS=y
 CONFIG_DEBUG_BUGVERBOSE=y
 CONFIG_DEBUG_INFO=y
+CONFIG_DEVFREQ_EVENT_ROCKCHIP_DFI=y
 # CONFIG_DEVFREQ_GOV_PASSIVE is not set
 CONFIG_DEVFREQ_GOV_PERFORMANCE=y
 CONFIG_DEVFREQ_GOV_POWERSAVE=y
 CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND=y
 CONFIG_DEVFREQ_GOV_USERSPACE=y
-# CONFIG_DEVFREQ_THERMAL is not set
+CONFIG_DEVFREQ_THERMAL=y
 CONFIG_DEVMEM=y
 # CONFIG_DEVPORT is not set
 CONFIG_DMADEVICES=y
@@ -212,6 +235,22 @@ CONFIG_DMA_OF=y
 CONFIG_DMA_OPS=y
 CONFIG_DMA_SHARED_BUFFER=y
 CONFIG_DNOTIFY=y
+CONFIG_DRM=y
+CONFIG_DRM_BRIDGE=y
+CONFIG_DRM_DEBUG_MODESET_LOCK=y
+CONFIG_DRM_DISPLAY_HDMI_HELPER=y
+CONFIG_DRM_DISPLAY_HELPER=y
+CONFIG_DRM_DW_HDMI=y
+CONFIG_DRM_DW_MIPI_DSI=y
+CONFIG_DRM_GEM_DMA_HELPER=y
+CONFIG_DRM_KMS_HELPER=y
+CONFIG_DRM_MALI_DISPLAY=y
+CONFIG_DRM_MIPI_DSI=y
+CONFIG_DRM_NOMODESET=y
+CONFIG_DRM_PANEL=y
+CONFIG_DRM_PANEL_BRIDGE=y
+CONFIG_DRM_PANEL_ORIENTATION_QUIRKS=y
+CONFIG_DRM_ROCKCHIP=y
 CONFIG_DTC=y
 CONFIG_DT_IDLE_GENPD=y
 CONFIG_DT_IDLE_STATES=y
@@ -230,6 +269,7 @@ CONFIG_EXT4_FS_POSIX_ACL=y
 CONFIG_EXTCON=y
 CONFIG_F2FS_FS=y
 CONFIG_FANOTIFY=y
+CONFIG_FB_CMDLINE=y
 CONFIG_FHANDLE=y
 CONFIG_FIXED_PHY=y
 CONFIG_FIX_EARLYCON_MEM=y
@@ -266,12 +306,14 @@ CONFIG_GENERIC_MSI_IRQ=y
 CONFIG_GENERIC_MSI_IRQ_DOMAIN=y
 CONFIG_GENERIC_PCI_IOMAP=y
 CONFIG_GENERIC_PHY=y
+CONFIG_GENERIC_PHY_MIPI_DPHY=y
 CONFIG_GENERIC_PINCONF=y
 CONFIG_GENERIC_SCHED_CLOCK=y
 CONFIG_GENERIC_SMP_IDLE_THREAD=y
 CONFIG_GENERIC_STRNCPY_FROM_USER=y
 CONFIG_GENERIC_STRNLEN_USER=y
 CONFIG_GENERIC_TIME_VSYSCALL=y
+CONFIG_GLOB=y
 CONFIG_GPIOLIB_IRQCHIP=y
 CONFIG_GPIO_CDEV=y
 CONFIG_GPIO_DWAPB=y
@@ -279,30 +321,38 @@ CONFIG_GPIO_GENERIC=y
 CONFIG_GPIO_GENERIC_PLATFORM=y
 CONFIG_GPIO_ROCKCHIP=y
 CONFIG_GPIO_SYSCON=y
+CONFIG_GRO_CELLS=y
 CONFIG_HARDIRQS_SW_RESEND=y
 CONFIG_HAS_DMA=y
 CONFIG_HAS_IOMEM=y
 CONFIG_HAS_IOPORT_MAP=y
+CONFIG_HDMI=y
 CONFIG_HID=y
 CONFIG_HID_GENERIC=y
 CONFIG_HOTPLUG_CPU=y
 CONFIG_HOTPLUG_PCI=y
 # CONFIG_HOTPLUG_PCI_CPCI is not set
-# CONFIG_HOTPLUG_PCI_PCIE is not set
-# CONFIG_HOTPLUG_PCI_SHPC is not set
+CONFIG_HOTPLUG_PCI_PCIE=y
+CONFIG_HOTPLUG_PCI_SHPC=y
 CONFIG_HUGETLBFS=y
 CONFIG_HUGETLB_PAGE=y
 CONFIG_HWMON=y
 CONFIG_HWSPINLOCK=y
 CONFIG_HW_CONSOLE=y
+CONFIG_HW_RANDOM=y
+CONFIG_HZ=300
+# CONFIG_HZ_100 is not set
+CONFIG_HZ_300=y
 CONFIG_I2C=y
+CONFIG_I2C_ALGOBIT=y
 CONFIG_I2C_BOARDINFO=y
 CONFIG_I2C_CHARDEV=y
 CONFIG_I2C_COMPAT=y
 CONFIG_I2C_HELPER_AUTO=y
 CONFIG_I2C_RK3X=y
-CONFIG_IIO=y
-# CONFIG_IIO_SCMI is not set
+CONFIG_IGB=y
+CONFIG_IGB_HWMON=y
+CONFIG_IGC=y
 CONFIG_ILLEGAL_POINTER_VALUE=0xdead000000000000
 CONFIG_INDIRECT_PIO=y
 CONFIG_INPUT=y
@@ -311,12 +361,18 @@ CONFIG_INPUT_FF_MEMLESS=y
 CONFIG_INPUT_KEYBOARD=y
 CONFIG_INPUT_LEDS=y
 CONFIG_INPUT_MATRIXKMAP=y
+CONFIG_INPUT_MOUSE=y
+CONFIG_INPUT_MOUSEDEV=y
+CONFIG_INPUT_MOUSEDEV_PSAUX=y
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
 CONFIG_INPUT_RK805_PWRKEY=y
+CONFIG_INPUT_SPARSEKMAP=y
 CONFIG_IOMMU_API=y
 # CONFIG_IOMMU_DEBUGFS is not set
 # CONFIG_IOMMU_DEFAULT_DMA_LAZY is not set
-# CONFIG_IOMMU_DEFAULT_DMA_STRICT is not set
-CONFIG_IOMMU_DEFAULT_PASSTHROUGH=y
+CONFIG_IOMMU_DEFAULT_DMA_STRICT=y
+# CONFIG_IOMMU_DEFAULT_PASSTHROUGH is not set
 CONFIG_IOMMU_DMA=y
 CONFIG_IOMMU_IOVA=y
 CONFIG_IOMMU_IO_PGTABLE=y
@@ -357,17 +413,21 @@ CONFIG_MAGIC_SYSRQ=y
 CONFIG_MAGIC_SYSRQ_SERIAL=y
 CONFIG_MAILBOX=y
 # CONFIG_MAILBOX_TEST is not set
+CONFIG_MD=y
 CONFIG_MDIO_BUS=y
 CONFIG_MDIO_BUS_MUX=y
 CONFIG_MDIO_BUS_MUX_GPIO=y
 CONFIG_MDIO_BUS_MUX_MMIOREG=y
 CONFIG_MDIO_DEVICE=y
 CONFIG_MDIO_DEVRES=y
+CONFIG_MEDIATEK_GE_PHY=y
 CONFIG_MEMFD_CREATE=y
 CONFIG_MEMORY_ISOLATION=y
 CONFIG_MFD_CORE=y
 # CONFIG_MFD_KHADAS_MCU is not set
-CONFIG_MFD_RK808=y
+CONFIG_MFD_RK8XX=y
+CONFIG_MFD_RK8XX_I2C=y
+CONFIG_MFD_RK8XX_SPI=y
 CONFIG_MFD_SYSCON=y
 CONFIG_MIGRATION=y
 CONFIG_MMC=y
@@ -379,16 +439,37 @@ CONFIG_MMC_DW=y
 # CONFIG_MMC_DW_EXYNOS is not set
 # CONFIG_MMC_DW_HI3798CV200 is not set
 # CONFIG_MMC_DW_K3 is not set
-# CONFIG_MMC_DW_PCI is not set
+CONFIG_MMC_DW_PCI=y
 CONFIG_MMC_DW_PLTFM=y
 CONFIG_MMC_DW_ROCKCHIP=y
+CONFIG_MMC_HSQ=y
 CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_CADENCE=y
+CONFIG_MMC_SDHCI_F_SDH30=y
 CONFIG_MMC_SDHCI_OF_ARASAN=y
 CONFIG_MMC_SDHCI_OF_DWCMSHC=y
 # CONFIG_MMC_SDHCI_PCI is not set
 CONFIG_MMC_SDHCI_PLTFM=y
+CONFIG_MMC_SPI=y
+CONFIG_MMC_USDHI6ROL0=y
+CONFIG_MMC_USHC=y
 CONFIG_MODULES_USE_ELF_RELA=y
 CONFIG_MOTORCOMM_PHY=y
+# CONFIG_MOUSE_BCM5974 is not set
+# CONFIG_MOUSE_CYAPA is not set
+CONFIG_MOUSE_PS2=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_BYD=y
+CONFIG_MOUSE_PS2_CYPRESS=y
+# CONFIG_MOUSE_PS2_ELANTECH is not set
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SMBUS=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_SYNAPTICS_SMBUS=y
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+# CONFIG_MOUSE_SERIAL is not set
+# CONFIG_MOUSE_VSXXXAA is not set
 CONFIG_MQ_IOSCHED_DEADLINE=y
 # CONFIG_MTD_CFI is not set
 CONFIG_MTD_CMDLINE_PARTS=y
@@ -399,22 +480,32 @@ CONFIG_MTD_SPLIT_FIRMWARE=y
 CONFIG_MUTEX_SPIN_ON_OWNER=y
 CONFIG_NEED_DMA_MAP_STATE=y
 CONFIG_NEED_SG_DMA_LENGTH=y
+CONFIG_NET_DEVLINK=y
+CONFIG_NET_DSA=y
+CONFIG_NET_DSA_MT7530=y
+CONFIG_NET_DSA_MT7530_MDIO=y
+CONFIG_NET_DSA_MT7530_MMIO=y
+CONFIG_NET_DSA_TAG_MTK=y
 CONFIG_NET_FLOW_LIMIT=y
 CONFIG_NET_PTP_CLASSIFY=y
 CONFIG_NET_SELFTESTS=y
+CONFIG_NET_SWITCHDEV=y
 CONFIG_NLS=y
 CONFIG_NLS_ISO8859_1=y
 CONFIG_NOP_USB_XCEIV=y
 CONFIG_NO_HZ_COMMON=y
 CONFIG_NO_HZ_IDLE=y
 CONFIG_NR_CPUS=256
+CONFIG_NTFS_FS=y
+CONFIG_NTFS_RW=y
 CONFIG_NVMEM=y
+CONFIG_NVMEM_LAYOUTS=y
 CONFIG_NVMEM_ROCKCHIP_EFUSE=y
-# CONFIG_NVMEM_ROCKCHIP_OTP is not set
+CONFIG_NVMEM_ROCKCHIP_OTP=y
 CONFIG_NVMEM_SYSFS=y
 CONFIG_NVME_CORE=y
 # CONFIG_NVME_HWMON is not set
-# CONFIG_NVME_MULTIPATH is not set
+CONFIG_NVME_MULTIPATH=y
 CONFIG_OF=y
 CONFIG_OF_ADDRESS=y
 CONFIG_OF_DYNAMIC=y
@@ -427,6 +518,7 @@ CONFIG_OF_KOBJ=y
 CONFIG_OF_MDIO=y
 CONFIG_OF_OVERLAY=y
 CONFIG_OF_RESOLVE=y
+# CONFIG_OPTEE is not set
 # CONFIG_OVERLAY_FS_XINO_AUTO is not set
 CONFIG_PADATA=y
 CONFIG_PAGE_POOL=y
@@ -437,11 +529,13 @@ CONFIG_PANIC_ON_OOPS_VALUE=0
 CONFIG_PANIC_TIMEOUT=0
 # CONFIG_PARTITION_ADVANCED is not set
 CONFIG_PARTITION_PERCPU=y
+CONFIG_PATA_SIS=y
 CONFIG_PCI=y
 CONFIG_PCIEAER=y
 CONFIG_PCIEASPM=y
-CONFIG_PCIEASPM_DEFAULT=y
-# CONFIG_PCIEASPM_PERFORMANCE is not set
+# CONFIG_PCIEASPM_DEFAULT is not set
+CONFIG_PCIEASPM_EXT=y
+CONFIG_PCIEASPM_PERFORMANCE=y
 # CONFIG_PCIEASPM_POWERSAVE is not set
 # CONFIG_PCIEASPM_POWER_SUPERSAVE is not set
 CONFIG_PCIEPORTBUS=y
@@ -453,26 +547,31 @@ CONFIG_PCIE_ROCKCHIP_DW_HOST=y
 CONFIG_PCIE_ROCKCHIP_HOST=y
 CONFIG_PCI_DOMAINS=y
 CONFIG_PCI_DOMAINS_GENERIC=y
+CONFIG_PCI_ECAM=y
+CONFIG_PCI_HOST_COMMON=y
+CONFIG_PCI_HOST_GENERIC=y
 CONFIG_PCI_MSI=y
 CONFIG_PCI_MSI_IRQ_DOMAIN=y
 CONFIG_PCI_STUB=y
+CONFIG_PCS_MTK_LYNXI=y
 CONFIG_PCS_XPCS=y
 CONFIG_PGTABLE_LEVELS=4
 CONFIG_PHYLIB=y
 CONFIG_PHYLINK=y
 CONFIG_PHYS_ADDR_T_64BIT=y
 CONFIG_PHY_ROCKCHIP_DP=y
-# CONFIG_PHY_ROCKCHIP_DPHY_RX0 is not set
+CONFIG_PHY_ROCKCHIP_DPHY_RX0=y
 CONFIG_PHY_ROCKCHIP_EMMC=y
-# CONFIG_PHY_ROCKCHIP_INNO_CSIDPHY is not set
-# CONFIG_PHY_ROCKCHIP_INNO_DSIDPHY is not set
-# CONFIG_PHY_ROCKCHIP_INNO_HDMI is not set
+CONFIG_PHY_ROCKCHIP_INNO_CSIDPHY=y
+CONFIG_PHY_ROCKCHIP_INNO_DSIDPHY=y
+CONFIG_PHY_ROCKCHIP_INNO_HDMI=y
 CONFIG_PHY_ROCKCHIP_INNO_USB2=y
 CONFIG_PHY_ROCKCHIP_NANENG_COMBO_PHY=y
 CONFIG_PHY_ROCKCHIP_PCIE=y
 CONFIG_PHY_ROCKCHIP_SNPS_PCIE3=y
 CONFIG_PHY_ROCKCHIP_TYPEC=y
 CONFIG_PHY_ROCKCHIP_USB=y
+CONFIG_PHY_ROCKCHIP_USBDP=y
 CONFIG_PINCTRL=y
 CONFIG_PINCTRL_RK805=y
 CONFIG_PINCTRL_ROCKCHIP=y
@@ -482,12 +581,16 @@ CONFIG_PLATFORM_MHU=y
 CONFIG_PM=y
 CONFIG_PM_CLK=y
 CONFIG_PM_DEVFREQ=y
-# CONFIG_PM_DEVFREQ_EVENT is not set
+CONFIG_PM_DEVFREQ_EVENT=y
 CONFIG_PM_GENERIC_DOMAINS=y
 CONFIG_PM_GENERIC_DOMAINS_OF=y
 CONFIG_PM_OPP=y
 CONFIG_POSIX_CPU_TIMERS_TASK_WORK=y
 CONFIG_POWER_RESET=y
+CONFIG_POWER_RESET_GPIO=y
+CONFIG_POWER_RESET_GPIO_RESTART=y
+CONFIG_POWER_RESET_SYSCON=y
+CONFIG_POWER_RESET_SYSCON_POWEROFF=y
 CONFIG_POWER_SUPPLY=y
 CONFIG_POWER_SUPPLY_HWMON=y
 CONFIG_PPS=y
@@ -499,6 +602,7 @@ CONFIG_PREEMPT_COUNT=y
 CONFIG_PREEMPT_RCU=y
 CONFIG_PRINTK_TIME=y
 # CONFIG_PRINT_QUOTA_WARNING is not set
+CONFIG_PROC_EVENTS=y
 CONFIG_PROC_PAGE_MONITOR=y
 CONFIG_PROC_VMCORE=y
 CONFIG_PTP_1588_CLOCK=y
@@ -524,8 +628,9 @@ CONFIG_REGMAP=y
 CONFIG_REGMAP_I2C=y
 CONFIG_REGMAP_IRQ=y
 CONFIG_REGMAP_MMIO=y
+CONFIG_REGMAP_SPI=y
 CONFIG_REGULATOR=y
-CONFIG_REGULATOR_ARM_SCMI=y
+# CONFIG_REGULATOR_ARM_SCMI is not set
 CONFIG_REGULATOR_FAN53555=y
 CONFIG_REGULATOR_FIXED_VOLTAGE=y
 CONFIG_REGULATOR_GPIO=y
@@ -534,41 +639,61 @@ CONFIG_REGULATOR_RK808=y
 CONFIG_RELOCATABLE=y
 CONFIG_RESET_CONTROLLER=y
 CONFIG_RESET_SCMI=y
+CONFIG_RESET_SIMPLE=y
 CONFIG_RFS_ACCEL=y
+# CONFIG_ROCKCHIP_ANALOGIX_DP is not set
+# CONFIG_ROCKCHIP_CDN_DP is not set
+CONFIG_ROCKCHIP_DW_HDMI=y
+CONFIG_ROCKCHIP_DW_MIPI_DSI=y
+CONFIG_ROCKCHIP_ERRATUM_3588001=y
 CONFIG_ROCKCHIP_GRF=y
+CONFIG_ROCKCHIP_INNO_HDMI=y
 CONFIG_ROCKCHIP_IODOMAIN=y
 CONFIG_ROCKCHIP_IOMMU=y
+# CONFIG_ROCKCHIP_LVDS is not set
 CONFIG_ROCKCHIP_MBOX=y
 CONFIG_ROCKCHIP_PHY=y
 CONFIG_ROCKCHIP_PM_DOMAINS=y
-# CONFIG_ROCKCHIP_SARADC is not set
+# CONFIG_ROCKCHIP_RGB is not set
+CONFIG_ROCKCHIP_RK3066_HDMI=y
 CONFIG_ROCKCHIP_THERMAL=y
 CONFIG_ROCKCHIP_TIMER=y
+CONFIG_ROCKCHIP_VOP=y
+CONFIG_ROCKCHIP_VOP2=y
 CONFIG_RODATA_FULL_DEFAULT_ENABLED=y
 CONFIG_RPS=y
 CONFIG_RSEQ=y
 CONFIG_RTC_CLASS=y
+CONFIG_RTC_DRV_HYM8563=y
 CONFIG_RTC_DRV_RK808=y
 CONFIG_RTC_I2C_AND_SPI=y
 CONFIG_RTC_NVMEM=y
 # CONFIG_RUNTIME_TESTING_MENU is not set
 CONFIG_RWSEM_SPIN_ON_OWNER=y
+CONFIG_SATA_AHCI=y
+CONFIG_SATA_AHCI_PLATFORM=y
+CONFIG_SATA_HOST=y
+CONFIG_SATA_PMP=y
+CONFIG_SATA_SIS=y
+CONFIG_SATA_VIA=y
 CONFIG_SCHED_MC=y
 CONFIG_SCSI=y
 CONFIG_SCSI_COMMON=y
 # CONFIG_SCSI_LOWLEVEL is not set
 # CONFIG_SCSI_PROC_FS is not set
+# CONFIG_SCSI_SAS_ATA is not set
 CONFIG_SCSI_SAS_ATTRS=y
 CONFIG_SCSI_SAS_HOST_SMP=y
 CONFIG_SCSI_SAS_LIBSAS=y
+CONFIG_SDIO_UART=y
 # CONFIG_SECURITY_DMESG_RESTRICT is not set
 CONFIG_SENSORS_ARM_SCMI=y
-CONFIG_SENSORS_ARM_SCPI=y
 CONFIG_SERIAL_8250_DEPRECATED_OPTIONS=y
 CONFIG_SERIAL_8250_DW=y
 CONFIG_SERIAL_8250_DWLIB=y
 CONFIG_SERIAL_8250_EXAR=y
 CONFIG_SERIAL_8250_EXTENDED=y
+CONFIG_SERIAL_8250_FINTEK=y
 CONFIG_SERIAL_8250_FSL=y
 CONFIG_SERIAL_8250_NR_UARTS=4
 CONFIG_SERIAL_8250_PCI=y
@@ -583,9 +708,12 @@ CONFIG_SERIAL_OF_PLATFORM=y
 CONFIG_SERIO=y
 CONFIG_SERIO_AMBAKMI=y
 CONFIG_SERIO_LIBPS2=y
+CONFIG_SERIO_PCIPS2=y
+CONFIG_SERIO_RAW=y
 CONFIG_SG_POOL=y
 CONFIG_SMP=y
 CONFIG_SOCK_RX_QUEUE_MAPPING=y
+CONFIG_SOC_BUS=y
 CONFIG_SOFTIRQ_ON_OWN_STACK=y
 CONFIG_SPARSEMEM=y
 CONFIG_SPARSEMEM_EXTREME=y
@@ -598,7 +726,7 @@ CONFIG_SPI_DYNAMIC=y
 CONFIG_SPI_MASTER=y
 CONFIG_SPI_MEM=y
 CONFIG_SPI_ROCKCHIP=y
-CONFIG_SPI_ROCKCHIP_SFC=y
+# CONFIG_SPI_ROCKCHIP_SFC is not set
 CONFIG_SPI_SPIDEV=y
 # CONFIG_SQUASHFS_DECOMP_MULTI_PERCPU is not set
 CONFIG_SQUASHFS_DECOMP_SINGLE=y
@@ -607,6 +735,7 @@ CONFIG_SQUASHFS_FILE_CACHE=y
 # CONFIG_SQUASHFS_FILE_DIRECT is not set
 CONFIG_SRAM=y
 CONFIG_SRCU=y
+CONFIG_STACKDEPOT=y
 CONFIG_STACKPROTECTOR=y
 CONFIG_STACKPROTECTOR_PER_TASK=y
 CONFIG_STACKPROTECTOR_STRONG=y
@@ -621,6 +750,7 @@ CONFIG_SWPHY=y
 CONFIG_SYNC_FILE=y
 CONFIG_SYSCTL_EXCEPTION_TRACE=y
 CONFIG_SYSFS_SYSCALL=y
+CONFIG_TEE=y
 # CONFIG_TEXTSEARCH is not set
 CONFIG_THERMAL=y
 CONFIG_THERMAL_DEFAULT_GOV_STEP_WISE=y
@@ -679,6 +809,8 @@ CONFIG_USB_ULPI_BUS=y
 CONFIG_USB_ULPI_VIEWPORT=y
 CONFIG_USB_XHCI_HCD=y
 CONFIG_USB_XHCI_PLATFORM=y
+CONFIG_USERIO=y
+CONFIG_VIDEOMODE_HELPERS=y
 # CONFIG_VIRTIO_MENU is not set
 CONFIG_VMAP_STACK=y
 CONFIG_VM_EVENT_COUNTERS=y
diff --git a/target/linux/rockchip/armv8/target.mk b/target/linux/rockchip/armv8/target.mk
index 085b475c4b..536e0f1286 100644
--- a/target/linux/rockchip/armv8/target.mk
+++ b/target/linux/rockchip/armv8/target.mk
@@ -1,8 +1,8 @@
 ARCH:=aarch64
 SUBTARGET:=armv8
-BOARDNAME:=RK33xx/RK356x boards (64 bit)
+BOARDNAME:=RK33/35xx boards (64 bit)
 
 define Target/Description
-	Build firmware image for Rockchip RK33xx devices.
+	Build firmware image for Rockchip RK33/35xx devices.
 	This firmware features a 64 bit kernel.
 endef
diff --git a/target/linux/rockchip/image/Makefile b/target/linux/rockchip/image/Makefile
index d34948f6ae..e232166e51 100644
--- a/target/linux/rockchip/image/Makefile
+++ b/target/linux/rockchip/image/Makefile
@@ -48,11 +48,8 @@ endef
 define Device/Default
   PROFILES := Default
   KERNEL = kernel-bin | lzma | fit lzma $$(DTS_DIR)/$$(DEVICE_DTS).dtb
-  BOOT_SCRIPT :=
   IMAGES := sysupgrade.img.gz
-  IMAGE/sysupgrade.img.gz = boot-common | boot-script $$(BOOT_SCRIPT) | pine64-img | gzip | append-metadata
   DEVICE_DTS = rockchip/$$(SOC)-$(lastword $(subst _, ,$(1)))
-  UBOOT_DEVICE_NAME = $(lastword $(subst _, ,$(1)))-$$(SOC)
 endef
 
 include $(SUBTARGET).mk
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index 0bf91d15ca..86e7cec979 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -11,29 +11,16 @@ define Device/firefly_roc-rk3328-cc
   SOC := rk3328
   DEVICE_DTS := rockchip/rk3328-roc-cc
   UBOOT_DEVICE_NAME := roc-cc-rk3328
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r2s | pine64-img | gzip | append-metadata
 endef
 TARGET_DEVICES += firefly_roc-rk3328-cc
 
-define Device/friendlyarm_nanopc-t4
-  DEVICE_VENDOR := FriendlyARM
-  DEVICE_MODEL := NanoPC T4
-  SOC := rk3399
-  DEVICE_PACKAGES := kmod-brcmfmac brcmfmac-nvram-4356-sdio cypress-firmware-4356-sdio
-endef
-TARGET_DEVICES += friendlyarm_nanopc-t4
-
-define Device/friendlyarm_nanopi-r2c
-  DEVICE_VENDOR := FriendlyARM
-  DEVICE_MODEL := NanoPi R2C
-  SOC := rk3328
-  DEVICE_PACKAGES := kmod-usb-net-rtl8152
-endef
-TARGET_DEVICES += friendlyarm_nanopi-r2c
-
 define Device/friendlyarm_nanopi-r2s
   DEVICE_VENDOR := FriendlyARM
   DEVICE_MODEL := NanoPi R2S
   SOC := rk3328
+  UBOOT_DEVICE_NAME := nanopi-r2s-rk3328
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r2s | pine64-img | gzip | append-metadata
   DEVICE_PACKAGES := kmod-usb-net-rtl8152
 endef
 TARGET_DEVICES += friendlyarm_nanopi-r2s
@@ -43,37 +30,18 @@ define Device/friendlyarm_nanopi-r4s
   DEVICE_MODEL := NanoPi R4S
   DEVICE_VARIANT := 4GB LPDDR4
   SOC := rk3399
+  UBOOT_DEVICE_NAME := nanopi-r4s-rk3399
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r4s | pine64-img | gzip | append-metadata
   DEVICE_PACKAGES := kmod-r8169
 endef
 TARGET_DEVICES += friendlyarm_nanopi-r4s
 
-define Device/friendlyarm_nanopi-r5c
-  DEVICE_VENDOR := FriendlyARM
-  DEVICE_MODEL := NanoPi R5C
-  SOC := rk3568
-  DEVICE_PACKAGES := kmod-r8169 kmod-rtw88-8822ce rtl8822ce-firmware wpad-basic-mbedtls
-endef
-TARGET_DEVICES += friendlyarm_nanopi-r5c
-
-define Device/friendlyarm_nanopi-r5s
-  DEVICE_VENDOR := FriendlyARM
-  DEVICE_MODEL := NanoPi R5S
-  SOC := rk3568
-  DEVICE_PACKAGES := kmod-r8169
-endef
-TARGET_DEVICES += friendlyarm_nanopi-r5s
-
-define Device/pine64_rock64
-  DEVICE_VENDOR := Pine64
-  DEVICE_MODEL := Rock64
-  SOC := rk3328
-endef
-TARGET_DEVICES += pine64_rock64
-
 define Device/pine64_rockpro64
   DEVICE_VENDOR := Pine64
   DEVICE_MODEL := RockPro64
   SOC := rk3399
+  UBOOT_DEVICE_NAME := rockpro64-rk3399
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script | pine64-img | gzip | append-metadata
 endef
 TARGET_DEVICES += pine64_rockpro64
 
@@ -83,28 +51,6 @@ define Device/radxa_rock-pi-4a
   SOC := rk3399
   SUPPORTED_DEVICES := radxa,rockpi4a radxa,rockpi4
   UBOOT_DEVICE_NAME := rock-pi-4-rk3399
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script | pine64-img | gzip | append-metadata
 endef
 TARGET_DEVICES += radxa_rock-pi-4a
-
-define Device/radxa_rock-pi-e
-  DEVICE_VENDOR := Radxa
-  DEVICE_MODEL := ROCK Pi E
-  SOC := rk3328
-endef
-TARGET_DEVICES += radxa_rock-pi-e
-
-define Device/xunlong_orangepi-r1-plus
-  DEVICE_VENDOR := Xunlong
-  DEVICE_MODEL := Orange Pi R1 Plus
-  SOC := rk3328
-  DEVICE_PACKAGES := kmod-usb-net-rtl8152
-endef
-TARGET_DEVICES += xunlong_orangepi-r1-plus
-
-define Device/xunlong_orangepi-r1-plus-lts
-  DEVICE_VENDOR := Xunlong
-  DEVICE_MODEL := Orange Pi R1 Plus LTS
-  SOC := rk3328
-  DEVICE_PACKAGES := kmod-usb-net-rtl8152
-endef
-TARGET_DEVICES += xunlong_orangepi-r1-plus-lts
diff --git a/target/linux/rockchip/image/mmc.bootscript b/target/linux/rockchip/image/mmc.bootscript
index 60b59e1b6b..9269fda9cf 100644
--- a/target/linux/rockchip/image/mmc.bootscript
+++ b/target/linux/rockchip/image/mmc.bootscript
@@ -1,14 +1,6 @@
 part uuid mmc ${devnum}:2 uuid
 
-if test $stdout = 'serial@fe660000' ;
-then serial_addr=',0xfe660000';
-elif test $stdout = 'serial@ff130000' ;
-then serial_addr=',0xff130000';
-elif test $stdout = 'serial@ff1a0000' ;
-then serial_addr=',0xff1a0000';
-fi;
-
-setenv bootargs "console=ttyS2,1500000 console=tty1 earlycon=uart8250,mmio32${serial_addr} swiotlb=1 root=PARTUUID=${uuid} rw rootwait";
+setenv bootargs "console=ttyS2,1500000 console=tty1 earlycon=uart8250,mmio32,0xff1a0000 root=PARTUUID=${uuid} rw rootwait"
 
 load mmc ${devnum}:1 ${kernel_addr_r} kernel.img
 
diff --git a/target/linux/rockchip/image/nanopi-r2s.bootscript b/target/linux/rockchip/image/nanopi-r2s.bootscript
new file mode 100644
index 0000000000..8f961d3732
--- /dev/null
+++ b/target/linux/rockchip/image/nanopi-r2s.bootscript
@@ -0,0 +1,7 @@
+part uuid mmc ${devnum}:2 uuid
+
+setenv bootargs "console=ttyS2,1500000 earlycon=uart8250,mmio32,0xff130000 root=PARTUUID=${uuid} rw rootwait"
+
+load mmc ${devnum}:1 ${kernel_addr_r} kernel.img
+
+bootm ${kernel_addr_r}
diff --git a/target/linux/rockchip/image/nanopi-r4s.bootscript b/target/linux/rockchip/image/nanopi-r4s.bootscript
new file mode 100644
index 0000000000..1e53200027
--- /dev/null
+++ b/target/linux/rockchip/image/nanopi-r4s.bootscript
@@ -0,0 +1,7 @@
+part uuid mmc ${devnum}:2 uuid
+
+setenv bootargs "console=ttyS2,1500000 earlycon=uart8250,mmio32,0xff1a0000 root=PARTUUID=${uuid} rw rootwait"
+
+load mmc ${devnum}:1 ${kernel_addr_r} kernel.img
+
+bootm ${kernel_addr_r}
diff --git a/target/linux/rockchip/patches-6.1/001-dt-bindings-power-supply-define-monitored-battery-in.patch b/target/linux/rockchip/patches-6.1/001-dt-bindings-power-supply-define-monitored-battery-in.patch
new file mode 100644
index 0000000000..8b2d39f4dd
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/001-dt-bindings-power-supply-define-monitored-battery-in.patch
@@ -0,0 +1,132 @@
+From 6ebc33cf772c022b55df081fbb7b63c09861dfe9 Mon Sep 17 00:00:00 2001
+From: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Date: Wed, 2 Nov 2022 14:44:59 -0400
+Subject: [PATCH 001/383] dt-bindings: power: supply: define monitored-battery
+ in common place
+
+Define the type of monitored-battery in power-supply.yaml common schema.
+Reference the schema where applicable to enforce the above in bindings
+which have monitored-battery property.
+
+Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/mfd/ene-kb930.yaml        | 6 +++---
+ Documentation/devicetree/bindings/mfd/rockchip,rk817.yaml   | 2 ++
+ Documentation/devicetree/bindings/power/supply/bq27xxx.yaml | 2 --
+ .../devicetree/bindings/power/supply/ingenic,battery.yaml   | 4 ++--
+ .../devicetree/bindings/power/supply/power-supply.yaml      | 6 ++++++
+ .../devicetree/bindings/power/supply/rohm,bd99954.yaml      | 1 +
+ .../devicetree/bindings/power/supply/sc2731-charger.yaml    | 1 -
+ 7 files changed, 14 insertions(+), 8 deletions(-)
+
+--- a/Documentation/devicetree/bindings/mfd/ene-kb930.yaml
++++ b/Documentation/devicetree/bindings/mfd/ene-kb930.yaml
+@@ -13,6 +13,8 @@ description: |
+ maintainers:
+   - Dmitry Osipenko <digetx@gmail.com>
+ 
++$ref: /schemas/power/supply/power-supply.yaml
++
+ properties:
+   compatible:
+     items:
+@@ -22,15 +24,13 @@ properties:
+   reg:
+     maxItems: 1
+ 
+-  monitored-battery: true
+-  power-supplies: true
+   system-power-controller: true
+ 
+ required:
+   - compatible
+   - reg
+ 
+-additionalProperties: false
++unevaluatedProperties: false
+ 
+ examples:
+   - |
+--- a/Documentation/devicetree/bindings/mfd/rockchip,rk817.yaml
++++ b/Documentation/devicetree/bindings/mfd/rockchip,rk817.yaml
+@@ -124,6 +124,8 @@ properties:
+       The child node for the charger to hold additional properties. If a
+       battery is not in use, this node can be omitted.
+     type: object
++    $ref: /schemas/power/supply/power-supply.yaml
++
+     properties:
+       monitored-battery:
+         description: |
+--- a/Documentation/devicetree/bindings/power/supply/bq27xxx.yaml
++++ b/Documentation/devicetree/bindings/power/supply/bq27xxx.yaml
+@@ -60,13 +60,11 @@ properties:
+ 
+   monitored-battery:
+     description: |
+-       phandle of battery characteristics node.
+        The fuel gauge uses the following battery properties:
+        - energy-full-design-microwatt-hours
+        - charge-full-design-microamp-hours
+        - voltage-min-design-microvolt
+        Both or neither of the *-full-design-*-hours properties must be set.
+-       See Documentation/devicetree/bindings/power/supply/battery.yaml
+ 
+   power-supplies: true
+ 
+--- a/Documentation/devicetree/bindings/power/supply/ingenic,battery.yaml
++++ b/Documentation/devicetree/bindings/power/supply/ingenic,battery.yaml
+@@ -10,6 +10,8 @@ title: Ingenic JZ47xx battery bindings
+ maintainers:
+   - Artur Rojek <contact@artur-rojek.eu>
+ 
++$ref: power-supply.yaml#
++
+ properties:
+   compatible:
+     oneOf:
+@@ -28,8 +30,6 @@ properties:
+ 
+   monitored-battery:
+     description: >
+-      phandle to a "simple-battery" compatible node.
+-
+       This property must be a phandle to a node using the format described
+       in battery.yaml, with the following properties being required:
+       - voltage-min-design-microvolt: drained battery voltage,
+--- a/Documentation/devicetree/bindings/power/supply/power-supply.yaml
++++ b/Documentation/devicetree/bindings/power/supply/power-supply.yaml
+@@ -18,4 +18,10 @@ properties:
+       This property is added to a supply in order to list the devices which
+       supply it power, referenced by their phandles.
+ 
++  monitored-battery:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description:
++      The battery (with "simple-battery" compatible) being monitored by this
++      power supply.
++
+ additionalProperties: true
+--- a/Documentation/devicetree/bindings/power/supply/rohm,bd99954.yaml
++++ b/Documentation/devicetree/bindings/power/supply/rohm,bd99954.yaml
+@@ -18,6 +18,7 @@ description: |
+   provides a Dual-source Battery Charger, two port BC1.2 detection and a
+   Battery Monitor.
+ 
++$ref: power-supply.yaml#
+ 
+ properties:
+   compatible:
+--- a/Documentation/devicetree/bindings/power/supply/sc2731-charger.yaml
++++ b/Documentation/devicetree/bindings/power/supply/sc2731-charger.yaml
+@@ -28,7 +28,6 @@ properties:
+       The charger uses the following battery properties
+       - charge-term-current-microamp: current for charge termination phase.
+       - constant-charge-voltage-max-microvolt: maximum constant input voltage.
+-      See Documentation/devicetree/bindings/power/supply/battery.yaml
+ 
+ additionalProperties: false
+ 
diff --git a/target/linux/rockchip/patches-6.1/002-dt-bindings-arm-rockchip-add-Theobroma-Systems-PX30-.patch b/target/linux/rockchip/patches-6.1/002-dt-bindings-arm-rockchip-add-Theobroma-Systems-PX30-.patch
new file mode 100644
index 0000000000..48c6b58669
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/002-dt-bindings-arm-rockchip-add-Theobroma-Systems-PX30-.patch
@@ -0,0 +1,36 @@
+From e3051061683448b59745ff4e13b900df25f46b8a Mon Sep 17 00:00:00 2001
+From: Quentin Schulz <quentin.schulz@theobroma-systems.com>
+Date: Mon, 17 Oct 2022 12:25:25 +0200
+Subject: [PATCH 002/383] =?UTF-8?q?dt-bindings:=20arm:=20rockchip:=20add?=
+ =?UTF-8?q?=20Theobroma=20Systems=20PX30-=C2=B5Q7=20(Ringneck)=20with=20Ha?=
+ =?UTF-8?q?ikou?=
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+Add entry for the Theobroma Systems PX30-µQ7 (Ringneck) with Haikou
+devkit.
+
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Quentin Schulz <quentin.schulz@theobroma-systems.com>
+Link: https://lore.kernel.org/r/20220930-upstream-ringneck-v2-2-6671694b6934@theobroma-systems.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -709,6 +709,11 @@ properties:
+           - const: rockchip,rv1108-evb
+           - const: rockchip,rv1108
+ 
++      - description: Theobroma Systems PX30-uQ7 with Haikou baseboard
++        items:
++          - const: tsd,px30-ringneck-haikou
++          - const: rockchip,px30
++
+       - description: Theobroma Systems RK3368-uQ7 with Haikou baseboard
+         items:
+           - const: tsd,rk3368-lion-haikou
diff --git a/target/linux/rockchip/patches-6.1/003-dt-bindings-rockchip-Add-Hardkernel-ODROID-M1-board.patch b/target/linux/rockchip/patches-6.1/003-dt-bindings-rockchip-Add-Hardkernel-ODROID-M1-board.patch
new file mode 100644
index 0000000000..c437a93b65
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/003-dt-bindings-rockchip-Add-Hardkernel-ODROID-M1-board.patch
@@ -0,0 +1,33 @@
+From 9523e1eef4b50b1b463855c59033ba1739f19edd Mon Sep 17 00:00:00 2001
+From: Dongjin Kim <tobetter@gmail.com>
+Date: Fri, 30 Sep 2022 07:12:34 +0200
+Subject: [PATCH 003/383] dt-bindings: rockchip: Add Hardkernel ODROID-M1 board
+
+Add device tree binding for Hardkernel ODROID-M1 board based on RK3568
+SoC.
+
+Signed-off-by: Dongjin Kim <tobetter@gmail.com>
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-2-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -468,6 +468,11 @@ properties:
+           - const: hardkernel,rk3326-odroid-go2
+           - const: rockchip,rk3326
+ 
++      - description: Hardkernel Odroid M1
++        items:
++          - const: rockchip,rk3568-odroid-m1
++          - const: rockchip,rk3568
++
+       - description: Hugsun X99 TV Box
+         items:
+           - const: hugsun,x99
diff --git a/target/linux/rockchip/patches-6.1/004-dt-bindings-arm-rockchip-Add-Anbernic-RG353V-and-RG3.patch b/target/linux/rockchip/patches-6.1/004-dt-bindings-arm-rockchip-Add-Anbernic-RG353V-and-RG3.patch
new file mode 100644
index 0000000000..afa5919281
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/004-dt-bindings-arm-rockchip-Add-Anbernic-RG353V-and-RG3.patch
@@ -0,0 +1,36 @@
+From 1ccf8e2e01f9a55cbef202730e6387718cf7808d Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Fri, 28 Oct 2022 13:40:42 -0500
+Subject: [PATCH 004/383] dt-bindings: arm: rockchip: Add Anbernic RG353V and
+ RG353VS
+
+Add entry for the Anbernic RG353V and RG353VS handheld devices.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20221028184045.13113-2-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 10 ++++++++++
+ 1 file changed, 10 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -35,6 +35,16 @@ properties:
+           - const: anbernic,rg353p
+           - const: rockchip,rk3566
+ 
++      - description: Anbernic RG353V
++        items:
++          - const: anbernic,rg353v
++          - const: rockchip,rk3566
++
++      - description: Anbernic RG353VS
++        items:
++          - const: anbernic,rg353vs
++          - const: rockchip,rk3566
++
+       - description: Anbernic RG503
+         items:
+           - const: anbernic,rg503
diff --git a/target/linux/rockchip/patches-6.1/005-dt-bindings-rockchip-Add-Rockchip-rk3566-box-demo-bo.patch b/target/linux/rockchip/patches-6.1/005-dt-bindings-rockchip-Add-Rockchip-rk3566-box-demo-bo.patch
new file mode 100644
index 0000000000..f353db6260
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/005-dt-bindings-rockchip-Add-Rockchip-rk3566-box-demo-bo.patch
@@ -0,0 +1,31 @@
+From 99b81719685e53c79b7e7d9a1438478332a6f768 Mon Sep 17 00:00:00 2001
+From: Andy Yan <andyshrk@163.com>
+Date: Sat, 5 Nov 2022 17:59:35 +0800
+Subject: [PATCH 005/383] dt-bindings: rockchip: Add Rockchip rk3566 box demo
+ board
+
+Add device tree binding for Rockchip rk3566 box demo board.
+
+Signed-off-by: Andy Yan <andyshrk@163.com>
+Acked-by: Rob Herring <robh@kernel.org>
+Link: https://lore.kernel.org/r/20221105095935.958144-1-andyshrk@163.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -749,6 +749,11 @@ properties:
+           - const: zkmagic,a95x-z2
+           - const: rockchip,rk3318
+ 
++      - description: Rockchip RK3566 BOX Evaluation Demo board
++        items:
++          - const: rockchip,rk3566-box-demo
++          - const: rockchip,rk3566
++
+       - description: Rockchip RK3568 Evaluation board
+         items:
+           - const: rockchip,rk3568-evb1-v10
diff --git a/target/linux/rockchip/patches-6.1/006-dt-bindings-arm-rockchip-Add-more-RK3326-devices.patch b/target/linux/rockchip/patches-6.1/006-dt-bindings-arm-rockchip-Add-more-RK3326-devices.patch
new file mode 100644
index 0000000000..51f5645ce9
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/006-dt-bindings-arm-rockchip-Add-more-RK3326-devices.patch
@@ -0,0 +1,48 @@
+From 60d361f57be0444462ab9bb55f965672838ac92e Mon Sep 17 00:00:00 2001
+From: Maya Matuszczyk <maccraft123mc@gmail.com>
+Date: Thu, 17 Nov 2022 22:59:51 +0100
+Subject: [PATCH 006/383] dt-bindings: arm: rockchip: Add more RK3326 devices
+
+This patch adds Anbernic RG351M, Odroid Go Advance Black Edition and
+Odroid Go Super into dt bindings.
+
+Signed-off-by: Maya Matuszczyk <maccraft123mc@gmail.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20221117215954.4114202-3-maccraft123mc@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/arm/rockchip.yaml         | 15 +++++++++++++++
+ 1 file changed, 15 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -30,6 +30,11 @@ properties:
+           - const: amarula,vyasa-rk3288
+           - const: rockchip,rk3288
+ 
++      - description: Anbernic RG351M
++        items:
++          - const: anbernic,rg351m
++          - const: rockchip,rk3326
++
+       - description: Anbernic RG353P
+         items:
+           - const: anbernic,rg353p
+@@ -478,6 +483,16 @@ properties:
+           - const: hardkernel,rk3326-odroid-go2
+           - const: rockchip,rk3326
+ 
++      - description: Hardkernel Odroid Go Advance Black Edition
++        items:
++          - const: hardkernel,rk3326-odroid-go2-v11
++          - const: rockchip,rk3326
++
++      - description: Hardkernel Odroid Go Super
++        items:
++          - const: hardkernel,rk3326-odroid-go3
++          - const: rockchip,rk3326
++
+       - description: Hardkernel Odroid M1
+         items:
+           - const: rockchip,rk3568-odroid-m1
diff --git a/target/linux/rockchip/patches-6.1/007-dt-bindings-arm-rockchip-Add-SOQuartz-Blade.patch b/target/linux/rockchip/patches-6.1/007-dt-bindings-arm-rockchip-Add-SOQuartz-Blade.patch
new file mode 100644
index 0000000000..e010e48171
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/007-dt-bindings-arm-rockchip-Add-SOQuartz-Blade.patch
@@ -0,0 +1,35 @@
+From 9396658a16c03132f65e294bdb3f32a7ca65e60e Mon Sep 17 00:00:00 2001
+From: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Date: Wed, 16 Nov 2022 12:53:34 +0100
+Subject: [PATCH 007/383] dt-bindings: arm: rockchip: Add SOQuartz Blade
+
+Add a compatible for the SOQuartz Blade base board to the rockchip
+platforms binding.
+
+The SOQuartz Blade is a PoE-capable carrier board for the CM4 SoM
+form factor, designed around the SOQuartz CM4 System-on-Module.
+
+The board features the usual connectivity (GPIO, USB, HDMI,
+Ethernet) and an M.2 slot for SSDs. It may also be powered from
+a 5V barrel jack input, and has a 3.5mm jack for UART debug
+output.
+
+Signed-off-by: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20221116115337.541601-2-frattaroli.nicolas@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -593,6 +593,7 @@ properties:
+       - description: Pine64 SoQuartz SoM
+         items:
+           - enum:
++              - pine64,soquartz-blade
+               - pine64,soquartz-cm4io
+           - const: pine64,soquartz
+           - const: rockchip,rk3566
diff --git a/target/linux/rockchip/patches-6.1/008-dt-bindings-arm-rockchip-Add-SOQuartz-Model-A.patch b/target/linux/rockchip/patches-6.1/008-dt-bindings-arm-rockchip-Add-SOQuartz-Model-A.patch
new file mode 100644
index 0000000000..2a40365d12
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/008-dt-bindings-arm-rockchip-Add-SOQuartz-Model-A.patch
@@ -0,0 +1,35 @@
+From d91efae46ee404f042ecc0946028f578370a29fe Mon Sep 17 00:00:00 2001
+From: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Date: Wed, 16 Nov 2022 12:53:36 +0100
+Subject: [PATCH 008/383] dt-bindings: arm: rockchip: Add SOQuartz Model A
+
+The SOQuartz Model A base board is a carrier board for the CM4
+form factor, designed around the PINE64 SOQuartz CM4 SoM.
+
+The board sports "Model A" dimensions like the Quartz64 Model A,
+but is not to be confused with that.
+
+As for I/O, it features USB 2 ports, Gigabit Ethernet, a PCIe 2
+x1 slot, HDMI, a 40-pin GPIO header, CSI/DSI connectors, an eDP
+flat-flex cable connector, a 12V DC barrel jack for power input
+and power/reset buttons as well as a microSD card slot.
+
+Signed-off-by: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20221116115337.541601-4-frattaroli.nicolas@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -595,6 +595,7 @@ properties:
+           - enum:
+               - pine64,soquartz-blade
+               - pine64,soquartz-cm4io
++              - pine64,soquartz-model-a
+           - const: pine64,soquartz
+           - const: rockchip,rk3566
+ 
diff --git a/target/linux/rockchip/patches-6.1/009-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch b/target/linux/rockchip/patches-6.1/009-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch
new file mode 100644
index 0000000000..aa398e1c1c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/009-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch
@@ -0,0 +1,42 @@
+From fa400e7c39596815e354dcafd91ae1b39b475975 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@edgeble.ai>
+Date: Tue, 29 Nov 2022 13:24:22 +0530
+Subject: [PATCH 009/383] dt-bindings: arm: rockchip: Add Edgeble Neural
+ Compute Module 2
+
+Neural Compute Module 2(Neu2) is a 96boards SoM-CB compute module
+based on Rockchip RV1126 from Edgeble AI.
+
+Edgeble Neural Compute Module 2(Neu2) IO board is an industrial
+form factor evaluation board from Edgeble AI.
+
+Neu2 needs to mount on top of this IO board in order to create complete
+Edgeble Neural Compute Module 2(Neu2) IO platform.
+
+Add dt-bindings for it.
+
+Acked-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Jagan Teki <jagan@edgeble.ai>
+Acked-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://lore.kernel.org/r/20221129075424.189655-7-jagan@edgeble.ai
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -90,6 +90,12 @@ properties:
+           - const: chipspark,rayeager-px2
+           - const: rockchip,rk3066a
+ 
++      - description: Edgeble Neural Compute Module 2(Neu2) SoM based boards
++        items:
++          - const: edgeble,neural-compute-module-2-io   # Edgeble Neural Compute Module 2 IO Board
++          - const: edgeble,neural-compute-module-2      # Edgeble Neural Compute Module 2 SoM
++          - const: rockchip,rv1126
++
+       - description: Elgin RV1108 R1
+         items:
+           - const: elgin,rv1108-r1
diff --git a/target/linux/rockchip/patches-6.1/010-dt-bindings-arm-rockchip-Add-Rockchip-RK3128-Evaluat.patch b/target/linux/rockchip/patches-6.1/010-dt-bindings-arm-rockchip-Add-Rockchip-RK3128-Evaluat.patch
new file mode 100644
index 0000000000..17e71c5ecf
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/010-dt-bindings-arm-rockchip-Add-Rockchip-RK3128-Evaluat.patch
@@ -0,0 +1,31 @@
+From de0a4b22124220244b64ea1022f9ad618eca93b2 Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Fri, 28 Oct 2022 16:41:12 +0200
+Subject: [PATCH 010/383] dt-bindings: arm: rockchip: Add Rockchip RK3128
+ Evaluation board
+
+Add Rockchip RK3128 Evaluation board.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/dca18633-54d4-1264-725c-213d82fdf1c5@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -695,6 +695,11 @@ properties:
+           - const: rockchip,rk3036-evb
+           - const: rockchip,rk3036
+ 
++      - description: Rockchip RK3128 Evaluation board
++        items:
++          - const: rockchip,rk3128-evb
++          - const: rockchip,rk3128
++
+       - description: Rockchip RK3228 Evaluation board
+         items:
+           - const: rockchip,rk3228-evb
diff --git a/target/linux/rockchip/patches-6.1/011-dt-bindings-arm-rockchip-add-Radxa-CM3I-E25.patch b/target/linux/rockchip/patches-6.1/011-dt-bindings-arm-rockchip-add-Radxa-CM3I-E25.patch
new file mode 100644
index 0000000000..da19698ed7
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/011-dt-bindings-arm-rockchip-add-Radxa-CM3I-E25.patch
@@ -0,0 +1,34 @@
+From 7f988b71a2a982e6cd4ca79d927c9440fe4b9233 Mon Sep 17 00:00:00 2001
+From: Chukun Pan <amadeus@jmu.edu.cn>
+Date: Fri, 9 Dec 2022 18:25:23 +0800
+Subject: [PATCH 011/383] dt-bindings: arm: rockchip: add Radxa CM3I E25
+
+Radxa CM3 Industrial (CM3I) is an System on Module made by Radxa
+based on the Rockchip RK3568 SoC. The first carrier board supported
+is the Radxa E25. Add devicetree binding documentation for it.
+
+Signed-off-by: Chukun Pan <amadeus@jmu.edu.cn>
+Acked-by: Rob Herring <robh@kernel.org>
+Link: https://lore.kernel.org/r/20221209102524.129367-2-amadeus@jmu.edu.cn
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -605,6 +605,13 @@ properties:
+           - const: pine64,soquartz
+           - const: rockchip,rk3566
+ 
++      - description: Radxa CM3 Industrial
++        items:
++          - enum:
++              - radxa,e25
++          - const: radxa,cm3i
++          - const: rockchip,rk3568
++
+       - description: Radxa Rock
+         items:
+           - const: radxa,rock
diff --git a/target/linux/rockchip/patches-6.1/012-dt-bindings-arm-rockchip-Add-EmbedFire-LubanCat-1.patch b/target/linux/rockchip/patches-6.1/012-dt-bindings-arm-rockchip-Add-EmbedFire-LubanCat-1.patch
new file mode 100644
index 0000000000..be0c61ff06
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/012-dt-bindings-arm-rockchip-Add-EmbedFire-LubanCat-1.patch
@@ -0,0 +1,31 @@
+From c6404d82990ac92dfe4a2d3e458e97bdb9c910be Mon Sep 17 00:00:00 2001
+From: Wenhao Cui <lasstp5011@gmail.com>
+Date: Fri, 23 Dec 2022 11:17:18 +0800
+Subject: [PATCH 012/383] dt-bindings: arm: rockchip: Add EmbedFire LubanCat 1
+
+Add devicetree binding documentation for the EmbedFire LubanCat 1.
+
+Signed-off-by: Wenhao Cui <lasstp5011@gmail.com>
+Signed-off-by: Yuteng Zhong <zonyitoo@gmail.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/Y6UdvrhLjS0/8Oic@VM-66-53-centos
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -101,6 +101,11 @@ properties:
+           - const: elgin,rv1108-r1
+           - const: rockchip,rv1108
+ 
++      - description: EmbedFire LubanCat 1
++        items:
++          - const: embedfire,lubancat-1
++          - const: rockchip,rk3566
++
+       - description: Engicam PX30.Core C.TOUCH 2.0
+         items:
+           - const: engicam,px30-core-ctouch2
diff --git a/target/linux/rockchip/patches-6.1/013-dt-bindings-arm-rockchip-Add-EmbedFire-LubanCat-2.patch b/target/linux/rockchip/patches-6.1/013-dt-bindings-arm-rockchip-Add-EmbedFire-LubanCat-2.patch
new file mode 100644
index 0000000000..01c700840c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/013-dt-bindings-arm-rockchip-Add-EmbedFire-LubanCat-2.patch
@@ -0,0 +1,30 @@
+From 9fd72e168c45bb5b974146f75de0fcfe7cd30177 Mon Sep 17 00:00:00 2001
+From: Andy Yan <andyshrk@163.com>
+Date: Sun, 8 Jan 2023 19:07:42 +0800
+Subject: [PATCH 013/383] dt-bindings: arm: rockchip: Add EmbedFire LubanCat 2
+
+Add EmbedFire LubanCat 2
+
+Signed-off-by: Andy Yan <andyshrk@163.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230108110742.2214800-1-andyshrk@163.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -106,6 +106,11 @@ properties:
+           - const: embedfire,lubancat-1
+           - const: rockchip,rk3566
+ 
++      - description: EmbedFire LubanCat 2
++        items:
++          - const: embedfire,lubancat-2
++          - const: rockchip,rk3568
++
+       - description: Engicam PX30.Core C.TOUCH 2.0
+         items:
+           - const: engicam,px30-core-ctouch2
diff --git a/target/linux/rockchip/patches-6.1/014-dt-bindings-arm-rockchip-Add-Orange-Pi-R1-Plus.patch b/target/linux/rockchip/patches-6.1/014-dt-bindings-arm-rockchip-Add-Orange-Pi-R1-Plus.patch
new file mode 100644
index 0000000000..d27251e1b9
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/014-dt-bindings-arm-rockchip-Add-Orange-Pi-R1-Plus.patch
@@ -0,0 +1,30 @@
+From 270210c74ba803d86f4084bb3d29b56aa49dfa58 Mon Sep 17 00:00:00 2001
+From: Chukun Pan <amadeus@jmu.edu.cn>
+Date: Sat, 3 Dec 2022 15:41:48 +0800
+Subject: [PATCH 014/383] dt-bindings: arm: rockchip: Add Orange Pi R1 Plus
+
+Add devicetree binding documentation for the Orange Pi R1 Plus.
+
+Signed-off-by: Chukun Pan <amadeus@jmu.edu.cn>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20221203074149.11543-2-amadeus@jmu.edu.cn
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -789,6 +789,11 @@ properties:
+           - const: tronsmart,orion-r68-meta
+           - const: rockchip,rk3368
+ 
++      - description: Xunlong Orange Pi R1 Plus
++        items:
++          - const: xunlong,orangepi-r1-plus
++          - const: rockchip,rk3328
++
+       - description: Zkmagic A95X Z2
+         items:
+           - const: zkmagic,a95x-z2
diff --git a/target/linux/rockchip/patches-6.1/015-dt-bindings-arm-rockchip-add-initial-rk3588-boards.patch b/target/linux/rockchip/patches-6.1/015-dt-bindings-arm-rockchip-add-initial-rk3588-boards.patch
new file mode 100644
index 0000000000..acf69a29a8
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/015-dt-bindings-arm-rockchip-add-initial-rk3588-boards.patch
@@ -0,0 +1,51 @@
+From 86671c62988ab6ac169e8f2350a370a1a0fa400d Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 9 Jan 2023 16:57:58 +0100
+Subject: [PATCH 015/383] dt-bindings: arm: rockchip: add initial rk3588 boards
+
+Add DT binding documentation for the Rockchip RK3588 EVB1,
+Radxa Rock 5 Model A and B.
+
+Co-Developed-by: Christopher Obbard <chris.obbard@collabora.com>
+Signed-off-by: Christopher Obbard <chris.obbard@collabora.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Reviewed-by: Jagan Teki <jagan@edgeble.ai>
+Link: https://lore.kernel.org/r/20230109155801.51642-5-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/arm/rockchip.yaml         | 15 +++++++++++++++
+ 1 file changed, 15 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -675,6 +675,16 @@ properties:
+           - const: radxa,rock3a
+           - const: rockchip,rk3568
+ 
++      - description: Radxa ROCK 5 Model A
++        items:
++          - const: radxa,rock-5a
++          - const: rockchip,rk3588s
++
++      - description: Radxa ROCK 5 Model B
++        items:
++          - const: radxa,rock-5b
++          - const: rockchip,rk3588
++
+       - description: Rikomagic MK808 v1
+         items:
+           - const: rikomagic,mk808
+@@ -764,6 +774,11 @@ properties:
+           - const: rockchip,rk3399-sapphire-excavator
+           - const: rockchip,rk3399
+ 
++      - description: Rockchip RK3588 Evaluation board
++        items:
++          - const: rockchip,rk3588-evb1-v10
++          - const: rockchip,rk3588
++
+       - description: Rockchip RV1108 Evaluation board
+         items:
+           - const: rockchip,rv1108-evb
diff --git a/target/linux/rockchip/patches-6.1/015-v6.8-arm64-dts-rockchip-configure-eth-pad-driver-strength-for-.patch b/target/linux/rockchip/patches-6.1/015-v6.8-arm64-dts-rockchip-configure-eth-pad-driver-strength-for-.patch
deleted file mode 100644
index 01efaa3a9d..0000000000
--- a/target/linux/rockchip/patches-6.1/015-v6.8-arm64-dts-rockchip-configure-eth-pad-driver-strength-for-.patch
+++ /dev/null
@@ -1,33 +0,0 @@
-From fc5a80a432607d05e85bba37971712405f75c546 Mon Sep 17 00:00:00 2001
-From: Tianling Shen <cnsztl@gmail.com>
-Date: Sat, 16 Dec 2023 12:07:23 +0800
-Subject: [PATCH] arm64: dts: rockchip: configure eth pad driver strength
- for orangepi r1 plus lts
-
-The default strength is not enough to provide stable connection
-under 3.3v LDO voltage.
-
-Fixes: 387b3bbac5ea ("arm64: dts: rockchip: Add Xunlong OrangePi R1 Plus LTS")
-Cc: stable@vger.kernel.org # 6.6+
-Signed-off-by: Tianling Shen <cnsztl@gmail.com>
-Link: https://lore.kernel.org/r/20231216040723.17864-1-cnsztl@gmail.com
-Signed-off-by: Heiko Stuebner <heiko@sntech.de>
----
- arch/arm64/boot/dts/rockchip/rk3328-orangepi-r1-plus-lts.dts | 4 +++-
- 1 file changed, 3 insertions(+), 1 deletion(-)
-
---- a/arch/arm64/boot/dts/rockchip/rk3328-orangepi-r1-plus-lts.dts
-+++ b/arch/arm64/boot/dts/rockchip/rk3328-orangepi-r1-plus-lts.dts
-@@ -26,9 +26,11 @@
- 			compatible = "ethernet-phy-ieee802.3-c22";
- 			reg = <0>;
- 
-+			motorcomm,auto-sleep-disabled;
- 			motorcomm,clk-out-frequency-hz = <125000000>;
- 			motorcomm,keep-pll-enabled;
--			motorcomm,auto-sleep-disabled;
-+			motorcomm,rx-clk-drv-microamp = <5020>;
-+			motorcomm,rx-data-drv-microamp = <5020>;
- 
- 			pinctrl-0 = <&eth_phy_reset_pin>;
- 			pinctrl-names = "default";
diff --git a/target/linux/rockchip/patches-6.1/016-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch b/target/linux/rockchip/patches-6.1/016-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch
new file mode 100644
index 0000000000..b8e25fae7e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/016-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch
@@ -0,0 +1,41 @@
+From eda2c77e5dcd500c548f183e0c1a652d28919c64 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@edgeble.ai>
+Date: Tue, 10 Jan 2023 19:16:56 +0530
+Subject: [PATCH 016/383] dt-bindings: arm: rockchip: Add Edgeble Neural
+ Compute Module 6
+
+Neural Compute Module 6(Neu6) is a 96boards SoM-CB compute module
+based on Rockchip RK3588 from Edgeble AI.
+
+Edgeble Neural Compute Module 6(Neu6) IO board is an industrial
+form factor evaluation board from Edgeble AI.
+
+Neu6 needs to mount on top of this IO board in order to create complete
+Edgeble Neural Compute Module 6(Neu6) IO platform.
+
+This patch add dt-bindings for Edgeble Neu6 Model A SoM based IO board.
+
+Signed-off-by: Jagan Teki <jagan@edgeble.ai>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230110134658.820691-1-jagan@edgeble.ai
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -96,6 +96,12 @@ properties:
+           - const: edgeble,neural-compute-module-2      # Edgeble Neural Compute Module 2 SoM
+           - const: rockchip,rv1126
+ 
++      - description: Edgeble Neural Compute Module 6(Neu6) Model A SoM based boards
++        items:
++          - const: edgeble,neural-compute-module-6a-io  # Edgeble Neural Compute Module 6A IO Board
++          - const: edgeble,neural-compute-module-6a     # Edgeble Neural Compute Module 6A SoM
++          - const: rockchip,rk3588
++
+       - description: Elgin RV1108 R1
+         items:
+           - const: elgin,rv1108-r1
diff --git a/target/linux/rockchip/patches-6.1/017-dt-bindings-arm-rockchip-Add-Radxa-Compute-Module-3.patch b/target/linux/rockchip/patches-6.1/017-dt-bindings-arm-rockchip-Add-Radxa-Compute-Module-3.patch
new file mode 100644
index 0000000000..d198ec4cbc
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/017-dt-bindings-arm-rockchip-Add-Radxa-Compute-Module-3.patch
@@ -0,0 +1,45 @@
+From fc0d6f4066c27c889aac7817927daafe039391db Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@amarulasolutions.com>
+Date: Thu, 12 Jan 2023 16:29:00 +0530
+Subject: [PATCH 017/383] dt-bindings: arm: rockchip: Add Radxa Compute Module
+ 3
+
+Radxa Compute Module 3(CM3) is one of the modules from a series
+System On Module based on the Radxa ROCK 3 series and is compatible
+with Raspberry Pi CM4 in pinout and form factor.
+
+Specification:
+- Rockchip RK3566
+- up to 8GB LPDDR4
+- up to 128GB high performance eMMC
+- Optional wireless LAN, 2.4GHz and 5.0GHz IEEE 802.11b/g/n/ac wireless,
+  BT 5.0, BLE with onboard and external antenna.
+- Gigabit Ethernet PHY
+
+Add dt-bindings for Radxa CM3.
+
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230112105902.192852-1-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -621,6 +621,13 @@ properties:
+           - const: pine64,soquartz
+           - const: rockchip,rk3566
+ 
++      - description: Radxa Compute Module 3(CM3)
++        items:
++          - enum:
++              - radxa,radxa-cm3-io
++          - const: radxa,radxa-cm3
++          - const: rockchip,rk3566
++
+       - description: Radxa CM3 Industrial
+         items:
+           - enum:
diff --git a/target/linux/rockchip/patches-6.1/018-arm64-dts-rockchip-Fix-compatible-for-Radxa-CM3.patch b/target/linux/rockchip/patches-6.1/018-arm64-dts-rockchip-Fix-compatible-for-Radxa-CM3.patch
new file mode 100644
index 0000000000..7dc5ec32e4
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/018-arm64-dts-rockchip-Fix-compatible-for-Radxa-CM3.patch
@@ -0,0 +1,36 @@
+From 47b85bf0debfdbfaaf70e9c0d9cb7dee49324415 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@amarulasolutions.com>
+Date: Mon, 23 Jan 2023 12:46:50 +0530
+Subject: [PATCH 018/383] arm64: dts: rockchip: Fix compatible for Radxa CM3
+
+The compatible string "radxa,radxa-cm3" referring the product name
+as "Radxa Radxa CM3" but the actual product name is "Radxa CM3".
+
+Fix the compatible strings.
+
+Fixes: 24a28d3eb07d ("dt-bindings: arm: rockchip: Add Radxa Compute Module 3")
+Fixes: 7469ab529bca ("arm64: dts: rockchip: Add rk3566 based Radxa Compute Module 3")
+Fixes: 096ebfb74b19 ("arm64: dts: rockchip: Add Radxa Compute Module 3 IO board")
+Suggested-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230123071654.73139-1-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -624,8 +624,8 @@ properties:
+       - description: Radxa Compute Module 3(CM3)
+         items:
+           - enum:
+-              - radxa,radxa-cm3-io
+-          - const: radxa,radxa-cm3
++              - radxa,cm3-io
++          - const: radxa,cm3
+           - const: rockchip,rk3566
+ 
+       - description: Radxa CM3 Industrial
diff --git a/target/linux/rockchip/patches-6.1/019-dt-bindings-arm-rockchip-Add-Khadas-Edge2-board.patch b/target/linux/rockchip/patches-6.1/019-dt-bindings-arm-rockchip-Add-Khadas-Edge2-board.patch
new file mode 100644
index 0000000000..421d75540d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/019-dt-bindings-arm-rockchip-Add-Khadas-Edge2-board.patch
@@ -0,0 +1,45 @@
+From 8ef1c5a3849ff657f68053d70f51bc12062deb9a Mon Sep 17 00:00:00 2001
+From: Yixun Lan <dlan@gentoo.org>
+Date: Wed, 15 Mar 2023 11:34:40 +0800
+Subject: [PATCH 019/383] dt-bindings: arm: rockchip: Add Khadas Edge2 board
+
+Edge2 is an ultraslim, credit-card sized ARM PC designed by Khadas.
+It has quite a few rich peripherals.
+
+Specification:
+- Rockchip RK3588s
+- 8/16GB LPDDR4
+- 32/64GB eMMC 5.1
+- AP6275P WiFi6 LAN
+- HDMI2.1 Type-A
+- MIPI-CSI x3
+- MIPI-DSI x2
+- usb3.1; usb2.0
+- RTC clock
+- PWM fan
+- SPI Flash
+- Pads expansion board (UART, USB)
+
+Signed-off-by: Yixun Lan <dlan@gentoo.org>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230315033441.32719-2-dlan@gentoo.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -533,6 +533,11 @@ properties:
+               - khadas,edge-v
+           - const: rockchip,rk3399
+ 
++      - description: Khadas Edge2 series boards
++        items:
++          - const: khadas,edge2
++          - const: rockchip,rk3588s
++
+       - description: Kobol Helios64
+         items:
+           - const: kobol,helios64
diff --git a/target/linux/rockchip/patches-6.1/020-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R5S.patch b/target/linux/rockchip/patches-6.1/020-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R5S.patch
new file mode 100644
index 0000000000..26c71b82a5
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/020-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R5S.patch
@@ -0,0 +1,30 @@
+From 07eb6f2a8b4ac909c4f0c9c7fa06d5971f6eaa41 Mon Sep 17 00:00:00 2001
+From: Vasily Khoruzhick <anarsoul@gmail.com>
+Date: Tue, 7 Mar 2023 22:32:39 -0800
+Subject: [PATCH 020/383] dt-bindings: Add doc for FriendlyARM NanoPi R5S
+
+Add devicetree binding documentation for the FriendlyARM NanoPi R5S.
+
+Signed-off-by: Vasily Khoruzhick <anarsoul@gmail.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230308063240.107178-1-anarsoul@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -201,6 +201,11 @@ properties:
+               - friendlyarm,nanopi-r4s-enterprise
+           - const: rockchip,rk3399
+ 
++      - description: FriendlyElec NanoPi R5S board
++        items:
++          - const: friendlyarm,nanopi-r5s
++          - const: rockchip,rk3568
++
+       - description: GeekBuying GeekBox
+         items:
+           - const: geekbuying,geekbox
diff --git a/target/linux/rockchip/patches-6.1/021-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R5C.patch b/target/linux/rockchip/patches-6.1/021-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R5C.patch
new file mode 100644
index 0000000000..0cc79c62cc
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/021-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R5C.patch
@@ -0,0 +1,32 @@
+From 471052987584a54a8b24c3b79d0fb7d75faf225c Mon Sep 17 00:00:00 2001
+From: Tianling Shen <cnsztl@gmail.com>
+Date: Sat, 18 Mar 2023 16:37:42 +0800
+Subject: [PATCH 021/383] dt-bindings: Add doc for FriendlyARM NanoPi R5C
+
+Add devicetree binding documentation for the FriendlyARM NanoPi R5C.
+
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Tianling Shen <cnsztl@gmail.com>
+Link: https://lore.kernel.org/r/20230318083745.6181-3-cnsztl@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 6 ++++--
+ 1 file changed, 4 insertions(+), 2 deletions(-)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -201,9 +201,11 @@ properties:
+               - friendlyarm,nanopi-r4s-enterprise
+           - const: rockchip,rk3399
+ 
+-      - description: FriendlyElec NanoPi R5S board
++      - description: FriendlyElec NanoPi R5 series boards
+         items:
+-          - const: friendlyarm,nanopi-r5s
++          - enum:
++              - friendlyarm,nanopi-r5c
++              - friendlyarm,nanopi-r5s
+           - const: rockchip,rk3568
+ 
+       - description: GeekBuying GeekBox
diff --git a/target/linux/rockchip/patches-6.1/022-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R2C.patch b/target/linux/rockchip/patches-6.1/022-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R2C.patch
new file mode 100644
index 0000000000..4e0348e575
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/022-dt-bindings-Add-doc-for-FriendlyARM-NanoPi-R2C.patch
@@ -0,0 +1,33 @@
+From 5baa5279482d86b6eece6b50f2d6f153a94a26db Mon Sep 17 00:00:00 2001
+From: Tianling Shen <cnsztl@gmail.com>
+Date: Sat, 25 Mar 2023 15:40:19 +0800
+Subject: [PATCH 022/383] dt-bindings: Add doc for FriendlyARM NanoPi R2C
+
+Add devicetree binding documentation for the FriendlyARM NanoPi R2C.
+
+Signed-off-by: Tianling Shen <cnsztl@gmail.com>
+Reviewed-by: Jagan Teki <jagan@amarulasolutions.com>
+Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
+Link: https://lore.kernel.org/r/20230325074022.9818-2-cnsztl@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 6 ++++--
+ 1 file changed, 4 insertions(+), 2 deletions(-)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -185,9 +185,11 @@ properties:
+           - const: firefly,rk3566-roc-pc
+           - const: rockchip,rk3566
+ 
+-      - description: FriendlyElec NanoPi R2S
++      - description: FriendlyElec NanoPi R2 series boards
+         items:
+-          - const: friendlyarm,nanopi-r2s
++          - enum:
++              - friendlyarm,nanopi-r2c
++              - friendlyarm,nanopi-r2s
+           - const: rockchip,rk3328
+ 
+       - description: FriendlyElec NanoPi4 series boards
diff --git a/target/linux/rockchip/patches-6.1/023-dt-bindings-Add-doc-for-Xunlong-OrangePi-R1-Plus-LTS.patch b/target/linux/rockchip/patches-6.1/023-dt-bindings-Add-doc-for-Xunlong-OrangePi-R1-Plus-LTS.patch
new file mode 100644
index 0000000000..b0fad9b4ce
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/023-dt-bindings-Add-doc-for-Xunlong-OrangePi-R1-Plus-LTS.patch
@@ -0,0 +1,33 @@
+From 9eff27c2f0184b57adf29646fcbe9d963ce6acb1 Mon Sep 17 00:00:00 2001
+From: Tianling Shen <cnsztl@gmail.com>
+Date: Sat, 25 Mar 2023 15:40:21 +0800
+Subject: [PATCH 023/383] dt-bindings: Add doc for Xunlong OrangePi R1 Plus LTS
+
+Add devicetree binding documentation for the
+Xunlong OrangePi R1 Plus LTS.
+
+Signed-off-by: Tianling Shen <cnsztl@gmail.com>
+Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
+Link: https://lore.kernel.org/r/20230325074022.9818-4-cnsztl@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 6 ++++--
+ 1 file changed, 4 insertions(+), 2 deletions(-)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -831,9 +831,11 @@ properties:
+           - const: tronsmart,orion-r68-meta
+           - const: rockchip,rk3368
+ 
+-      - description: Xunlong Orange Pi R1 Plus
++      - description: Xunlong Orange Pi R1 Plus / LTS
+         items:
+-          - const: xunlong,orangepi-r1-plus
++          - enum:
++              - xunlong,orangepi-r1-plus
++              - xunlong,orangepi-r1-plus-lts
+           - const: rockchip,rk3328
+ 
+       - description: Zkmagic A95X Z2
diff --git a/target/linux/rockchip/patches-6.1/024-dt-bindings-Add-doc-for-Fastrhino-R66S-R68S.patch b/target/linux/rockchip/patches-6.1/024-dt-bindings-Add-doc-for-Fastrhino-R66S-R68S.patch
new file mode 100644
index 0000000000..c3f927ed43
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/024-dt-bindings-Add-doc-for-Fastrhino-R66S-R68S.patch
@@ -0,0 +1,33 @@
+From 2366f205784eef0093200b38f6f225681aa17bd9 Mon Sep 17 00:00:00 2001
+From: Tianling Shen <cnsztl@gmail.com>
+Date: Sat, 6 May 2023 14:11:06 +0800
+Subject: [PATCH 024/383] dt-bindings: Add doc for Fastrhino R66S / R68S
+
+Add devicetree binding documentation for the
+Lunzn Fastrhino R66S and R68S boards.
+
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Tianling Shen <cnsztl@gmail.com>
+Link: https://lore.kernel.org/r/20230506061108.17658-1-cnsztl@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -562,6 +562,13 @@ properties:
+           - const: leez,p710
+           - const: rockchip,rk3399
+ 
++      - description: Lunzn FastRhino R66S / R68S
++        items:
++          - enum:
++              - lunzn,fastrhino-r66s
++              - lunzn,fastrhino-r68s
++          - const: rockchip,rk3568
++
+       - description: mqmaker MiQi
+         items:
+           - const: mqmaker,miqi
diff --git a/target/linux/rockchip/patches-6.1/025-dt-bindings-arm-rockchip-add-Anbernic-RG353PS.patch b/target/linux/rockchip/patches-6.1/025-dt-bindings-arm-rockchip-add-Anbernic-RG353PS.patch
new file mode 100644
index 0000000000..3c01bd2b85
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/025-dt-bindings-arm-rockchip-add-Anbernic-RG353PS.patch
@@ -0,0 +1,34 @@
+From ed65d658e77c0f076699ef1dd623012f27138fc6 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Fri, 12 May 2023 11:20:38 -0500
+Subject: [PATCH 025/383] dt-bindings: arm: rockchip: add Anbernic RG353PS
+
+Add devicetree binding for Anbernic RG353PS. This device is identical
+to the RG353P, except it does not have a touchscreen, does not have
+an eMMC, only includes 1GB of RAM, and ships with only the 2nd
+revision panel based on a Sitronix ST7703 controller. Support for the
+panel has been added in a separate commit.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Acked-by: Conor Dooley <conor.dooley@microchip.com>
+Link: https://lore.kernel.org/r/20230512162039.31132-2-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -40,6 +40,11 @@ properties:
+           - const: anbernic,rg353p
+           - const: rockchip,rk3566
+ 
++      - description: Anbernic RG353PS
++        items:
++          - const: anbernic,rg353ps
++          - const: rockchip,rk3566
++
+       - description: Anbernic RG353V
+         items:
+           - const: anbernic,rg353v
diff --git a/target/linux/rockchip/patches-6.1/026-dt-bindings-arm-rockchip-add-FriendlyARM-NanoPi-R2C-.patch b/target/linux/rockchip/patches-6.1/026-dt-bindings-arm-rockchip-add-FriendlyARM-NanoPi-R2C-.patch
new file mode 100644
index 0000000000..a170404f75
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/026-dt-bindings-arm-rockchip-add-FriendlyARM-NanoPi-R2C-.patch
@@ -0,0 +1,27 @@
+From eb4c6280f091f1482bc942543e11978023ffb860 Mon Sep 17 00:00:00 2001
+From: Tianling Shen <cnsztl@gmail.com>
+Date: Sat, 13 May 2023 21:53:06 +0800
+Subject: [PATCH 026/383] dt-bindings: arm: rockchip: add FriendlyARM NanoPi
+ R2C Plus
+
+Add devicetree binding documentation for the NanoPi R2C Plus.
+
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Tianling Shen <cnsztl@gmail.com>
+Link: https://lore.kernel.org/r/20230513135307.26554-1-cnsztl@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -194,6 +194,7 @@ properties:
+         items:
+           - enum:
+               - friendlyarm,nanopi-r2c
++              - friendlyarm,nanopi-r2c-plus
+               - friendlyarm,nanopi-r2s
+           - const: rockchip,rk3328
+ 
diff --git a/target/linux/rockchip/patches-6.1/027-mailbox-rockchip-Use-device_get_match_data-to-simpli.patch b/target/linux/rockchip/patches-6.1/027-mailbox-rockchip-Use-device_get_match_data-to-simpli.patch
new file mode 100644
index 0000000000..877434acf0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/027-mailbox-rockchip-Use-device_get_match_data-to-simpli.patch
@@ -0,0 +1,35 @@
+From c462adaba3027526bac3ef4f759c6af3198e0aea Mon Sep 17 00:00:00 2001
+From: ye xingchen <ye.xingchen@zte.com.cn>
+Date: Thu, 17 Nov 2022 19:29:11 +0800
+Subject: [PATCH 027/383] mailbox: rockchip: Use device_get_match_data() to
+ simplify the code
+
+Directly get the match data with device_get_match_data().
+
+Signed-off-by: ye xingchen <ye.xingchen@zte.com.cn>
+Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mailbox/rockchip-mailbox.c | 4 +---
+ 1 file changed, 1 insertion(+), 3 deletions(-)
+
+--- a/drivers/mailbox/rockchip-mailbox.c
++++ b/drivers/mailbox/rockchip-mailbox.c
+@@ -164,7 +164,6 @@ MODULE_DEVICE_TABLE(of, rockchp_mbox_of_
+ static int rockchip_mbox_probe(struct platform_device *pdev)
+ {
+ 	struct rockchip_mbox *mb;
+-	const struct of_device_id *match;
+ 	const struct rockchip_mbox_data *drv_data;
+ 	struct resource *res;
+ 	int ret, irq, i;
+@@ -172,8 +171,7 @@ static int rockchip_mbox_probe(struct pl
+ 	if (!pdev->dev.of_node)
+ 		return -ENODEV;
+ 
+-	match = of_match_node(rockchip_mbox_of_match, pdev->dev.of_node);
+-	drv_data = (const struct rockchip_mbox_data *)match->data;
++	drv_data = (const struct rockchip_mbox_data *) device_get_match_data(&pdev->dev);
+ 
+ 	mb = devm_kzalloc(&pdev->dev, sizeof(*mb), GFP_KERNEL);
+ 	if (!mb)
diff --git a/target/linux/rockchip/patches-6.1/028-mailbox-rockchip-remove-MODULE_LICENSE-in-non-module.patch b/target/linux/rockchip/patches-6.1/028-mailbox-rockchip-remove-MODULE_LICENSE-in-non-module.patch
new file mode 100644
index 0000000000..7f3ed88185
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/028-mailbox-rockchip-remove-MODULE_LICENSE-in-non-module.patch
@@ -0,0 +1,42 @@
+From 1b4ad47fe5b9952fe49c7f3aef9cc29cac1d46d4 Mon Sep 17 00:00:00 2001
+From: Nick Alcock <nick.alcock@oracle.com>
+Date: Tue, 7 Mar 2023 18:01:40 +0000
+Subject: [PATCH 028/383] mailbox: rockchip: remove MODULE_LICENSE in
+ non-modules
+
+Since commit 8b41fc4454e ("kbuild: create modules.builtin without
+Makefile.modbuiltin or tristate.conf"), MODULE_LICENSE declarations
+are used to identify modules. As a consequence, uses of the macro
+in non-modules will cause modprobe to misidentify their containing
+object file as a module when it is not (false positives), and modprobe
+might succeed rather than failing with a suitable error message.
+
+So remove it in the files in this commit, none of which can be built as
+modules.
+
+Signed-off-by: Nick Alcock <nick.alcock@oracle.com>
+Suggested-by: Luis Chamberlain <mcgrof@kernel.org>
+Cc: Luis Chamberlain <mcgrof@kernel.org>
+Cc: linux-modules@vger.kernel.org
+Cc: linux-kernel@vger.kernel.org
+Cc: Hitomi Hasegawa <hasegawa-hitomi@fujitsu.com>
+Cc: Jassi Brar <jassisinghbrar@gmail.com>
+Cc: Heiko Stuebner <heiko@sntech.de>
+Cc: linux-arm-kernel@lists.infradead.org
+Cc: linux-rockchip@lists.infradead.org
+Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mailbox/rockchip-mailbox.c | 1 -
+ 1 file changed, 1 deletion(-)
+
+--- a/drivers/mailbox/rockchip-mailbox.c
++++ b/drivers/mailbox/rockchip-mailbox.c
+@@ -254,7 +254,6 @@ static struct platform_driver rockchip_m
+ 
+ module_platform_driver(rockchip_mbox_driver);
+ 
+-MODULE_LICENSE("GPL v2");
+ MODULE_DESCRIPTION("Rockchip mailbox: communicate between CPU cores and MCU");
+ MODULE_AUTHOR("Addy Ke <addy.ke@rock-chips.com>");
+ MODULE_AUTHOR("Caesar Wang <wxt@rock-chips.com>");
diff --git a/target/linux/rockchip/patches-6.1/029-mailbox-rockchip-drop-of_match_ptr-for-ID-table.patch b/target/linux/rockchip/patches-6.1/029-mailbox-rockchip-drop-of_match_ptr-for-ID-table.patch
new file mode 100644
index 0000000000..f85f9441f9
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/029-mailbox-rockchip-drop-of_match_ptr-for-ID-table.patch
@@ -0,0 +1,32 @@
+From 2b4ce6a535954f3020c820fdf492f007ef1db43e Mon Sep 17 00:00:00 2001
+From: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Date: Sat, 11 Mar 2023 12:17:38 +0100
+Subject: [PATCH 029/383] mailbox: rockchip: drop of_match_ptr for ID table
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+The driver can match only via the DT table so the table should be always
+used and the of_match_ptr does not have any sense (this also allows ACPI
+matching via PRP0001, even though it might not be relevant here).
+
+  drivers/mailbox/rockchip-mailbox.c:158:34: error: ‘rockchip_mbox_of_match’ defined but not used [-Werror=unused-const-variable=]
+
+Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mailbox/rockchip-mailbox.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/mailbox/rockchip-mailbox.c
++++ b/drivers/mailbox/rockchip-mailbox.c
+@@ -248,7 +248,7 @@ static struct platform_driver rockchip_m
+ 	.probe	= rockchip_mbox_probe,
+ 	.driver = {
+ 		.name = "rockchip-mailbox",
+-		.of_match_table = of_match_ptr(rockchip_mbox_of_match),
++		.of_match_table = rockchip_mbox_of_match,
+ 	},
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/030-PCI-Remove-unnecessary-linux-of_irq.h-includes.patch b/target/linux/rockchip/patches-6.1/030-PCI-Remove-unnecessary-linux-of_irq.h-includes.patch
new file mode 100644
index 0000000000..e49d44301c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/030-PCI-Remove-unnecessary-linux-of_irq.h-includes.patch
@@ -0,0 +1,147 @@
+From 7a62decb761a8a2b8bef955090e70aff5a6a9878 Mon Sep 17 00:00:00 2001
+From: Bjorn Helgaas <bhelgaas@google.com>
+Date: Mon, 31 Oct 2022 10:39:54 -0500
+Subject: [PATCH 030/383] PCI: Remove unnecessary <linux/of_irq.h> includes
+
+Many host controller drivers #include <linux/of_irq.h> even though they
+don't need it.  Remove the unnecessary #includes.
+
+Link: https://lore.kernel.org/r/20221031153954.1163623-6-helgaas@kernel.org
+Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
+Acked-by: Roy Zang <roy.zang@nxp.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/pci/controller/cadence/pci-j721e.c   | 1 -
+ drivers/pci/controller/dwc/pci-layerscape.c  | 1 -
+ drivers/pci/controller/dwc/pcie-armada8k.c   | 1 -
+ drivers/pci/controller/dwc/pcie-tegra194.c   | 1 -
+ drivers/pci/controller/pci-v3-semi.c         | 1 -
+ drivers/pci/controller/pcie-altera-msi.c     | 1 -
+ drivers/pci/controller/pcie-iproc-platform.c | 1 -
+ drivers/pci/controller/pcie-iproc.c          | 1 -
+ drivers/pci/controller/pcie-microchip-host.c | 1 -
+ drivers/pci/controller/pcie-rockchip-host.c  | 1 -
+ drivers/pci/controller/pcie-xilinx-cpm.c     | 1 -
+ drivers/pci/controller/pcie-xilinx-nwl.c     | 1 -
+ 12 files changed, 12 deletions(-)
+
+--- a/drivers/pci/controller/cadence/pci-j721e.c
++++ b/drivers/pci/controller/cadence/pci-j721e.c
+@@ -15,7 +15,6 @@
+ #include <linux/mfd/syscon.h>
+ #include <linux/of.h>
+ #include <linux/of_device.h>
+-#include <linux/of_irq.h>
+ #include <linux/pci.h>
+ #include <linux/pm_runtime.h>
+ #include <linux/regmap.h>
+--- a/drivers/pci/controller/dwc/pci-layerscape.c
++++ b/drivers/pci/controller/dwc/pci-layerscape.c
+@@ -13,7 +13,6 @@
+ #include <linux/init.h>
+ #include <linux/of_pci.h>
+ #include <linux/of_platform.h>
+-#include <linux/of_irq.h>
+ #include <linux/of_address.h>
+ #include <linux/pci.h>
+ #include <linux/platform_device.h>
+--- a/drivers/pci/controller/dwc/pcie-armada8k.c
++++ b/drivers/pci/controller/dwc/pcie-armada8k.c
+@@ -21,7 +21,6 @@
+ #include <linux/platform_device.h>
+ #include <linux/resource.h>
+ #include <linux/of_pci.h>
+-#include <linux/of_irq.h>
+ 
+ #include "pcie-designware.h"
+ 
+--- a/drivers/pci/controller/dwc/pcie-tegra194.c
++++ b/drivers/pci/controller/dwc/pcie-tegra194.c
+@@ -22,7 +22,6 @@
+ #include <linux/of.h>
+ #include <linux/of_device.h>
+ #include <linux/of_gpio.h>
+-#include <linux/of_irq.h>
+ #include <linux/of_pci.h>
+ #include <linux/pci.h>
+ #include <linux/phy/phy.h>
+--- a/drivers/pci/controller/pci-v3-semi.c
++++ b/drivers/pci/controller/pci-v3-semi.c
+@@ -22,7 +22,6 @@
+ #include <linux/kernel.h>
+ #include <linux/of_address.h>
+ #include <linux/of_device.h>
+-#include <linux/of_irq.h>
+ #include <linux/of_pci.h>
+ #include <linux/pci.h>
+ #include <linux/platform_device.h>
+--- a/drivers/pci/controller/pcie-altera-msi.c
++++ b/drivers/pci/controller/pcie-altera-msi.c
+@@ -13,7 +13,6 @@
+ #include <linux/module.h>
+ #include <linux/msi.h>
+ #include <linux/of_address.h>
+-#include <linux/of_irq.h>
+ #include <linux/of_pci.h>
+ #include <linux/pci.h>
+ #include <linux/platform_device.h>
+--- a/drivers/pci/controller/pcie-iproc-platform.c
++++ b/drivers/pci/controller/pcie-iproc-platform.c
+@@ -12,7 +12,6 @@
+ #include <linux/platform_device.h>
+ #include <linux/of_address.h>
+ #include <linux/of_pci.h>
+-#include <linux/of_irq.h>
+ #include <linux/of_platform.h>
+ #include <linux/phy/phy.h>
+ 
+--- a/drivers/pci/controller/pcie-iproc.c
++++ b/drivers/pci/controller/pcie-iproc.c
+@@ -18,7 +18,6 @@
+ #include <linux/platform_device.h>
+ #include <linux/of_address.h>
+ #include <linux/of_pci.h>
+-#include <linux/of_irq.h>
+ #include <linux/of_platform.h>
+ #include <linux/phy/phy.h>
+ 
+--- a/drivers/pci/controller/pcie-microchip-host.c
++++ b/drivers/pci/controller/pcie-microchip-host.c
+@@ -12,7 +12,6 @@
+ #include <linux/module.h>
+ #include <linux/msi.h>
+ #include <linux/of_address.h>
+-#include <linux/of_irq.h>
+ #include <linux/of_pci.h>
+ #include <linux/pci-ecam.h>
+ #include <linux/platform_device.h>
+--- a/drivers/pci/controller/pcie-rockchip-host.c
++++ b/drivers/pci/controller/pcie-rockchip-host.c
+@@ -28,7 +28,6 @@
+ #include <linux/of_device.h>
+ #include <linux/of_pci.h>
+ #include <linux/of_platform.h>
+-#include <linux/of_irq.h>
+ #include <linux/pci.h>
+ #include <linux/pci_ids.h>
+ #include <linux/phy/phy.h>
+--- a/drivers/pci/controller/pcie-xilinx-cpm.c
++++ b/drivers/pci/controller/pcie-xilinx-cpm.c
+@@ -16,7 +16,6 @@
+ #include <linux/of_address.h>
+ #include <linux/of_pci.h>
+ #include <linux/of_platform.h>
+-#include <linux/of_irq.h>
+ #include <linux/pci.h>
+ #include <linux/platform_device.h>
+ #include <linux/pci-ecam.h>
+--- a/drivers/pci/controller/pcie-xilinx-nwl.c
++++ b/drivers/pci/controller/pcie-xilinx-nwl.c
+@@ -17,7 +17,6 @@
+ #include <linux/of_address.h>
+ #include <linux/of_pci.h>
+ #include <linux/of_platform.h>
+-#include <linux/of_irq.h>
+ #include <linux/pci.h>
+ #include <linux/pci-ecam.h>
+ #include <linux/platform_device.h>
diff --git a/target/linux/rockchip/patches-6.1/035-phy-rockchip-pcie-remove-unused-phy_rd_cfg-function.patch b/target/linux/rockchip/patches-6.1/035-phy-rockchip-pcie-remove-unused-phy_rd_cfg-function.patch
new file mode 100644
index 0000000000..be9ee6c67c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/035-phy-rockchip-pcie-remove-unused-phy_rd_cfg-function.patch
@@ -0,0 +1,44 @@
+From da4893fdb2b1927b303625ddc13f630f69aa621f Mon Sep 17 00:00:00 2001
+From: Tom Rix <trix@redhat.com>
+Date: Tue, 21 Mar 2023 08:25:03 -0400
+Subject: [PATCH 035/383] phy: rockchip-pcie: remove unused phy_rd_cfg function
+
+clang with W=1 reports
+drivers/phy/rockchip/phy-rockchip-pcie.c:122:19: error:
+  unused function 'phy_rd_cfg' [-Werror,-Wunused-function]
+static inline u32 phy_rd_cfg(struct rockchip_pcie_phy *rk_phy,
+                  ^
+This function is not used, so remove it.
+
+Signed-off-by: Tom Rix <trix@redhat.com>
+Link: https://lore.kernel.org/r/20230321122503.1783311-1-trix@redhat.com
+Signed-off-by: Vinod Koul <vkoul@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/phy/rockchip/phy-rockchip-pcie.c | 15 ---------------
+ 1 file changed, 15 deletions(-)
+
+--- a/drivers/phy/rockchip/phy-rockchip-pcie.c
++++ b/drivers/phy/rockchip/phy-rockchip-pcie.c
+@@ -119,21 +119,6 @@ static inline void phy_wr_cfg(struct roc
+ 				   PHY_CFG_WR_SHIFT));
+ }
+ 
+-static inline u32 phy_rd_cfg(struct rockchip_pcie_phy *rk_phy,
+-			     u32 addr)
+-{
+-	u32 val;
+-
+-	regmap_write(rk_phy->reg_base, rk_phy->phy_data->pcie_conf,
+-		     HIWORD_UPDATE(addr,
+-				   PHY_CFG_RD_MASK,
+-				   PHY_CFG_ADDR_SHIFT));
+-	regmap_read(rk_phy->reg_base,
+-		    rk_phy->phy_data->pcie_status,
+-		    &val);
+-	return val;
+-}
+-
+ static int rockchip_pcie_phy_power_off(struct phy *phy)
+ {
+ 	struct phy_pcie_instance *inst = phy_get_drvdata(phy);
diff --git a/target/linux/rockchip/patches-6.1/036-phy-rockchip-Add-naneng-combo-phy-support-for-RK3588.patch b/target/linux/rockchip/patches-6.1/036-phy-rockchip-Add-naneng-combo-phy-support-for-RK3588.patch
new file mode 100644
index 0000000000..3706fc0f5a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/036-phy-rockchip-Add-naneng-combo-phy-support-for-RK3588.patch
@@ -0,0 +1,234 @@
+From 00429c37494fa01fef2b9ae9550d3b2da81a65f6 Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Tue, 14 Mar 2023 13:55:55 +0000
+Subject: [PATCH 036/383] phy: rockchip: Add naneng combo phy support for
+ RK3588
+
+Add support for RK3588 combo phy
+
+This is based on prior work from XiaoDong Huang and
+Peter Geis fixing this issue specifically for Rockchip 356x.
+
+Co-developed-by: Andrew Powers-Holmes <aholmes@omnom.net>
+Signed-off-by: Andrew Powers-Holmes <aholmes@omnom.net>
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Link: https://lore.kernel.org/r/20230314135555.44162-4-lucas.tanure@collabora.com
+Signed-off-by: Vinod Koul <vkoul@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../rockchip/phy-rockchip-naneng-combphy.c    | 184 ++++++++++++++++++
+ 1 file changed, 184 insertions(+)
+
+--- a/drivers/phy/rockchip/phy-rockchip-naneng-combphy.c
++++ b/drivers/phy/rockchip/phy-rockchip-naneng-combphy.c
+@@ -63,6 +63,9 @@
+ #define PHYREG18			0x44
+ #define PHYREG18_PLL_LOOP		0x32
+ 
++#define PHYREG27			0x6C
++#define PHYREG27_RX_TRIM_RK3588		0x4C
++
+ #define PHYREG32			0x7C
+ #define PHYREG32_SSC_MASK		GENMASK(7, 4)
+ #define PHYREG32_SSC_DIR_SHIFT		4
+@@ -114,7 +117,10 @@ struct rockchip_combphy_grfcfg {
+ 	struct combphy_reg con2_for_sata;
+ 	struct combphy_reg con3_for_sata;
+ 	struct combphy_reg pipe_con0_for_sata;
++	struct combphy_reg pipe_con1_for_sata;
+ 	struct combphy_reg pipe_xpcs_phy_ready;
++	struct combphy_reg pipe_pcie1l0_sel;
++	struct combphy_reg pipe_pcie1l1_sel;
+ };
+ 
+ struct rockchip_combphy_cfg {
+@@ -559,11 +565,189 @@ static const struct rockchip_combphy_cfg
+ 	.combphy_cfg	= rk3568_combphy_cfg,
+ };
+ 
++static int rk3588_combphy_cfg(struct rockchip_combphy_priv *priv)
++{
++	const struct rockchip_combphy_grfcfg *cfg = priv->cfg->grfcfg;
++	unsigned long rate;
++	u32 val;
++
++	switch (priv->type) {
++	case PHY_TYPE_PCIE:
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->con0_for_pcie, true);
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->con1_for_pcie, true);
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->con2_for_pcie, true);
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->con3_for_pcie, true);
++		rockchip_combphy_param_write(priv->pipe_grf, &cfg->pipe_pcie1l0_sel, true);
++		rockchip_combphy_param_write(priv->pipe_grf, &cfg->pipe_pcie1l1_sel, true);
++		break;
++	case PHY_TYPE_USB3:
++		/* Set SSC downward spread spectrum */
++		rockchip_combphy_updatel(priv, PHYREG32_SSC_MASK,
++					 PHYREG32_SSC_DOWNWARD << PHYREG32_SSC_DIR_SHIFT,
++					 PHYREG32);
++
++		/* Enable adaptive CTLE for USB3.0 Rx. */
++		val = readl(priv->mmio + PHYREG15);
++		val |= PHYREG15_CTLE_EN;
++		writel(val, priv->mmio + PHYREG15);
++
++		/* Set PLL KVCO fine tuning signals. */
++		rockchip_combphy_updatel(priv, PHYREG33_PLL_KVCO_MASK,
++					 PHYREG33_PLL_KVCO_VALUE << PHYREG33_PLL_KVCO_SHIFT,
++					 PHYREG33);
++
++		/* Enable controlling random jitter. */
++		writel(PHYREG12_PLL_LPF_ADJ_VALUE, priv->mmio + PHYREG12);
++
++		/* Set PLL input clock divider 1/2. */
++		rockchip_combphy_updatel(priv, PHYREG6_PLL_DIV_MASK,
++					 PHYREG6_PLL_DIV_2 << PHYREG6_PLL_DIV_SHIFT,
++					 PHYREG6);
++
++		writel(PHYREG18_PLL_LOOP, priv->mmio + PHYREG18);
++		writel(PHYREG11_SU_TRIM_0_7, priv->mmio + PHYREG11);
++
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->pipe_txcomp_sel, false);
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->pipe_txelec_sel, false);
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->usb_mode_set, true);
++		break;
++	case PHY_TYPE_SATA:
++		/* Enable adaptive CTLE for SATA Rx. */
++		val = readl(priv->mmio + PHYREG15);
++		val |= PHYREG15_CTLE_EN;
++		writel(val, priv->mmio + PHYREG15);
++		/*
++		 * Set tx_rterm=50ohm and rx_rterm=44ohm for SATA.
++		 * 0: 60ohm, 8: 50ohm 15: 44ohm (by step abort 1ohm)
++		 */
++		val = PHYREG7_TX_RTERM_50OHM << PHYREG7_TX_RTERM_SHIFT;
++		val |= PHYREG7_RX_RTERM_44OHM << PHYREG7_RX_RTERM_SHIFT;
++		writel(val, priv->mmio + PHYREG7);
++
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->con0_for_sata, true);
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->con1_for_sata, true);
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->con2_for_sata, true);
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->con3_for_sata, true);
++		rockchip_combphy_param_write(priv->pipe_grf, &cfg->pipe_con0_for_sata, true);
++		rockchip_combphy_param_write(priv->pipe_grf, &cfg->pipe_con1_for_sata, true);
++		break;
++	case PHY_TYPE_SGMII:
++	case PHY_TYPE_QSGMII:
++	default:
++		dev_err(priv->dev, "incompatible PHY type\n");
++		return -EINVAL;
++	}
++
++	rate = clk_get_rate(priv->refclk);
++
++	switch (rate) {
++	case REF_CLOCK_24MHz:
++		if (priv->type == PHY_TYPE_USB3 || priv->type == PHY_TYPE_SATA) {
++			/* Set ssc_cnt[9:0]=0101111101 & 31.5KHz. */
++			val = PHYREG15_SSC_CNT_VALUE << PHYREG15_SSC_CNT_SHIFT;
++			rockchip_combphy_updatel(priv, PHYREG15_SSC_CNT_MASK,
++						 val, PHYREG15);
++
++			writel(PHYREG16_SSC_CNT_VALUE, priv->mmio + PHYREG16);
++		}
++		break;
++
++	case REF_CLOCK_25MHz:
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->pipe_clk_25m, true);
++		break;
++	case REF_CLOCK_100MHz:
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->pipe_clk_100m, true);
++		if (priv->type == PHY_TYPE_PCIE) {
++			/* PLL KVCO fine tuning. */
++			val = 4 << PHYREG33_PLL_KVCO_SHIFT;
++			rockchip_combphy_updatel(priv, PHYREG33_PLL_KVCO_MASK,
++						 val, PHYREG33);
++
++			/* Enable controlling random jitter. */
++			writel(PHYREG12_PLL_LPF_ADJ_VALUE, priv->mmio + PHYREG12);
++
++			/* Set up rx_trim: PLL LPF C1 85pf R1 1.25kohm */
++			writel(PHYREG27_RX_TRIM_RK3588, priv->mmio + PHYREG27);
++
++			/* Set up su_trim:  */
++			writel(PHYREG11_SU_TRIM_0_7, priv->mmio + PHYREG11);
++		} else if (priv->type == PHY_TYPE_SATA) {
++			/* downward spread spectrum +500ppm */
++			val = PHYREG32_SSC_DOWNWARD << PHYREG32_SSC_DIR_SHIFT;
++			val |= PHYREG32_SSC_OFFSET_500PPM << PHYREG32_SSC_OFFSET_SHIFT;
++			rockchip_combphy_updatel(priv, PHYREG32_SSC_MASK, val, PHYREG32);
++		}
++		break;
++	default:
++		dev_err(priv->dev, "Unsupported rate: %lu\n", rate);
++		return -EINVAL;
++	}
++
++	if (priv->ext_refclk) {
++		rockchip_combphy_param_write(priv->phy_grf, &cfg->pipe_clk_ext, true);
++		if (priv->type == PHY_TYPE_PCIE && rate == REF_CLOCK_100MHz) {
++			val = PHYREG13_RESISTER_HIGH_Z << PHYREG13_RESISTER_SHIFT;
++			val |= PHYREG13_CKRCV_AMP0;
++			rockchip_combphy_updatel(priv, PHYREG13_RESISTER_MASK, val, PHYREG13);
++
++			val = readl(priv->mmio + PHYREG14);
++			val |= PHYREG14_CKRCV_AMP1;
++			writel(val, priv->mmio + PHYREG14);
++		}
++	}
++
++	if (priv->enable_ssc) {
++		val = readl(priv->mmio + PHYREG8);
++		val |= PHYREG8_SSC_EN;
++		writel(val, priv->mmio + PHYREG8);
++	}
++
++	return 0;
++}
++
++static const struct rockchip_combphy_grfcfg rk3588_combphy_grfcfgs = {
++	/* pipe-phy-grf */
++	.pcie_mode_set		= { 0x0000, 5, 0, 0x00, 0x11 },
++	.usb_mode_set		= { 0x0000, 5, 0, 0x00, 0x04 },
++	.pipe_rxterm_set	= { 0x0000, 12, 12, 0x00, 0x01 },
++	.pipe_txelec_set	= { 0x0004, 1, 1, 0x00, 0x01 },
++	.pipe_txcomp_set	= { 0x0004, 4, 4, 0x00, 0x01 },
++	.pipe_clk_25m		= { 0x0004, 14, 13, 0x00, 0x01 },
++	.pipe_clk_100m		= { 0x0004, 14, 13, 0x00, 0x02 },
++	.pipe_rxterm_sel	= { 0x0008, 8, 8, 0x00, 0x01 },
++	.pipe_txelec_sel	= { 0x0008, 12, 12, 0x00, 0x01 },
++	.pipe_txcomp_sel	= { 0x0008, 15, 15, 0x00, 0x01 },
++	.pipe_clk_ext		= { 0x000c, 9, 8, 0x02, 0x01 },
++	.pipe_phy_status	= { 0x0034, 6, 6, 0x01, 0x00 },
++	.con0_for_pcie		= { 0x0000, 15, 0, 0x00, 0x1000 },
++	.con1_for_pcie		= { 0x0004, 15, 0, 0x00, 0x0000 },
++	.con2_for_pcie		= { 0x0008, 15, 0, 0x00, 0x0101 },
++	.con3_for_pcie		= { 0x000c, 15, 0, 0x00, 0x0200 },
++	.con0_for_sata		= { 0x0000, 15, 0, 0x00, 0x0129 },
++	.con1_for_sata		= { 0x0004, 15, 0, 0x00, 0x0000 },
++	.con2_for_sata		= { 0x0008, 15, 0, 0x00, 0x80c1 },
++	.con3_for_sata		= { 0x000c, 15, 0, 0x00, 0x0407 },
++	/* pipe-grf */
++	.pipe_con0_for_sata	= { 0x0000, 11, 5, 0x00, 0x22 },
++	.pipe_con1_for_sata	= { 0x0000, 2, 0, 0x00, 0x2 },
++	.pipe_pcie1l0_sel	= { 0x0100, 0, 0, 0x01, 0x0 },
++	.pipe_pcie1l1_sel	= { 0x0100, 1, 1, 0x01, 0x0 },
++};
++
++static const struct rockchip_combphy_cfg rk3588_combphy_cfgs = {
++	.grfcfg		= &rk3588_combphy_grfcfgs,
++	.combphy_cfg	= rk3588_combphy_cfg,
++};
++
+ static const struct of_device_id rockchip_combphy_of_match[] = {
+ 	{
+ 		.compatible = "rockchip,rk3568-naneng-combphy",
+ 		.data = &rk3568_combphy_cfgs,
+ 	},
++	{
++		.compatible = "rockchip,rk3588-naneng-combphy",
++		.data = &rk3588_combphy_cfgs,
++	},
+ 	{ },
+ };
+ MODULE_DEVICE_TABLE(of, rockchip_combphy_of_match);
diff --git a/target/linux/rockchip/patches-6.1/037-phy-rockchip-remove-unused-hw_to_inno-function.patch b/target/linux/rockchip/patches-6.1/037-phy-rockchip-remove-unused-hw_to_inno-function.patch
new file mode 100644
index 0000000000..510664e8cf
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/037-phy-rockchip-remove-unused-hw_to_inno-function.patch
@@ -0,0 +1,35 @@
+From fb8017ddf6a81081e6ab28e4736c5b098612a0f7 Mon Sep 17 00:00:00 2001
+From: Tom Rix <trix@redhat.com>
+Date: Fri, 24 Mar 2023 09:26:49 -0400
+Subject: [PATCH 037/383] phy: rockchip: remove unused hw_to_inno function
+
+clang with W=1 reports
+drivers/phy/rockchip/phy-rockchip-inno-dsidphy.c:284:36: error:
+  unused function 'hw_to_inno' [-Werror,-Wunused-function]
+static inline struct inno_dsidphy *hw_to_inno(struct clk_hw *hw)
+                                   ^
+This function is not used so remove it.
+
+Signed-off-by: Tom Rix <trix@redhat.com>
+Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
+Link: https://lore.kernel.org/r/20230324132649.2649166-1-trix@redhat.com
+Signed-off-by: Vinod Koul <vkoul@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/phy/rockchip/phy-rockchip-inno-dsidphy.c | 5 -----
+ 1 file changed, 5 deletions(-)
+
+--- a/drivers/phy/rockchip/phy-rockchip-inno-dsidphy.c
++++ b/drivers/phy/rockchip/phy-rockchip-inno-dsidphy.c
+@@ -281,11 +281,6 @@ struct inno_mipi_dphy_timing inno_mipi_d
+ 	{2500000000, 0x15, 0x54, 0x7f, 0x15, 0x6a},
+ };
+ 
+-static inline struct inno_dsidphy *hw_to_inno(struct clk_hw *hw)
+-{
+-	return container_of(hw, struct inno_dsidphy, pll.hw);
+-}
+-
+ static void phy_update_bits(struct inno_dsidphy *inno,
+ 			    u8 first, u8 second, u8 mask, u8 val)
+ {
diff --git a/target/linux/rockchip/patches-6.1/038-power-supply-rk817-Drop-unneeded-debugging-code.patch b/target/linux/rockchip/patches-6.1/038-power-supply-rk817-Drop-unneeded-debugging-code.patch
new file mode 100644
index 0000000000..9d0bef83b2
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/038-power-supply-rk817-Drop-unneeded-debugging-code.patch
@@ -0,0 +1,37 @@
+From 5aac5a5d0603677437e4a3fe348d6c3c87c23dd2 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Fri, 7 Apr 2023 11:18:26 -0500
+Subject: [PATCH 038/383] power: supply: rk817: Drop unneeded debugging code
+
+Some code was left over from debugging the driver while it was in
+development. Remove this code as it's not needed.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/power/supply/rk817_charger.c | 13 -------------
+ 1 file changed, 13 deletions(-)
+
+--- a/drivers/power/supply/rk817_charger.c
++++ b/drivers/power/supply/rk817_charger.c
+@@ -835,19 +835,6 @@ rk817_read_or_set_full_charge_on_boot(st
+ 		}
+ 	}
+ 
+-	regmap_bulk_read(rk808->regmap, RK817_GAS_GAUGE_PWRON_VOL_H,
+-			 bulk_reg, 2);
+-	tmp = get_unaligned_be16(bulk_reg);
+-	boot_voltage = (charger->voltage_k * tmp) + 1000 * charger->voltage_b;
+-	regmap_bulk_read(rk808->regmap, RK817_GAS_GAUGE_Q_PRES_H3,
+-			 bulk_reg, 4);
+-	tmp = get_unaligned_be32(bulk_reg);
+-	boot_charge_mah = ADC_TO_CHARGE_UAH(tmp, charger->res_div) / 1000;
+-	regmap_bulk_read(rk808->regmap, RK817_GAS_GAUGE_OCV_VOL_H,
+-			 bulk_reg, 2);
+-	tmp = get_unaligned_be16(bulk_reg);
+-	boot_voltage = (charger->voltage_k * tmp) + 1000 * charger->voltage_b;
+-
+ 	/*
+ 	 * Now we have our full charge capacity and soc, init the columb
+ 	 * counter.
diff --git a/target/linux/rockchip/patches-6.1/039-iommu-Remove-detach_dev-callbacks.patch b/target/linux/rockchip/patches-6.1/039-iommu-Remove-detach_dev-callbacks.patch
new file mode 100644
index 0000000000..e2f510c418
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/039-iommu-Remove-detach_dev-callbacks.patch
@@ -0,0 +1,37 @@
+From f535338ded5083fb5b57921cd116222452b4c727 Mon Sep 17 00:00:00 2001
+From: Lu Baolu <baolu.lu@linux.intel.com>
+Date: Tue, 10 Jan 2023 10:54:04 +0800
+Subject: [PATCH 039/383] iommu: Remove detach_dev callbacks
+
+The iommu core calls the driver's detach_dev domain op callback only when
+a device is finished assigning to user space and
+iommu_group_release_dma_owner() is called to return the device to the
+kernel, where iommu core wants to set the default domain to the device but
+the driver didn't provide one.
+
+In other words, if any iommu driver provides default domain support, the
+.detach_dev callback will never be called. This removes the detach_dev
+callbacks in those IOMMU drivers that support default domain.
+
+Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
+Reviewed-by: Sven Peter <sven@svenpeter.dev> # apple-dart
+Acked-by: Chunyan Zhang <zhang.lyra@gmail.com> # sprd
+Reviewed-by: Vasant Hegde <vasant.hegde@amd.com> # amd
+Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
+Link: https://lore.kernel.org/r/20230110025408.667767-2-baolu.lu@linux.intel.com
+Signed-off-by: Joerg Roedel <jroedel@suse.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/iommu/rockchip-iommu.c | 1 -
+ 1 file changed, 1 deletion(-)
+
+--- a/drivers/iommu/rockchip-iommu.c
++++ b/drivers/iommu/rockchip-iommu.c
+@@ -1163,7 +1163,6 @@ static const struct iommu_ops rk_iommu_o
+ 	.of_xlate = rk_iommu_of_xlate,
+ 	.default_domain_ops = &(const struct iommu_domain_ops) {
+ 		.attach_dev	= rk_iommu_attach_device,
+-		.detach_dev	= rk_iommu_detach_device,
+ 		.map		= rk_iommu_map,
+ 		.unmap		= rk_iommu_unmap,
+ 		.iova_to_phys	= rk_iommu_iova_to_phys,
diff --git a/target/linux/rockchip/patches-6.1/040-iommu-rockchip-Add-missing-set_platform_dma_ops-call.patch b/target/linux/rockchip/patches-6.1/040-iommu-rockchip-Add-missing-set_platform_dma_ops-call.patch
new file mode 100644
index 0000000000..3f9bb86e10
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/040-iommu-rockchip-Add-missing-set_platform_dma_ops-call.patch
@@ -0,0 +1,178 @@
+From dd064d6d158c9b17a43f2ab308b8a492a5c6c03a Mon Sep 17 00:00:00 2001
+From: Steven Price <steven.price@arm.com>
+Date: Fri, 31 Mar 2023 10:51:54 +0100
+Subject: [PATCH 040/383] iommu/rockchip: Add missing set_platform_dma_ops
+ callback
+
+Similar to exynos, we need a set_platform_dma_ops() callback for proper
+operation on ARM 32 bit after recent changes in the IOMMU framework
+(detach ops removal). But also the use of a NULL domain is confusing.
+
+Rework the code to add support for IOMMU_DOMAIN_IDENTITY and a singleton
+rk_identity_domain which is assigned to domain when using an identity
+mapping rather than "detaching". This makes the code easier to reason about.
+
+Signed-off-by: Steven Price <steven.price@arm.com>
+Acked-by: Heiko Stuebner <heiko@sntech.de>
+Tested-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://lore.kernel.org/r/20230331095154.2671129-1-steven.price@arm.com
+Signed-off-by: Joerg Roedel <jroedel@suse.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/iommu/rockchip-iommu.c | 61 ++++++++++++++++++++++++++--------
+ 1 file changed, 47 insertions(+), 14 deletions(-)
+
+--- a/drivers/iommu/rockchip-iommu.c
++++ b/drivers/iommu/rockchip-iommu.c
+@@ -122,6 +122,7 @@ struct rk_iommudata {
+ 
+ static struct device *dma_dev;
+ static const struct rk_iommu_ops *rk_ops;
++static struct iommu_domain rk_identity_domain;
+ 
+ static inline void rk_table_flush(struct rk_iommu_domain *dom, dma_addr_t dma,
+ 				  unsigned int count)
+@@ -617,7 +618,7 @@ static irqreturn_t rk_iommu_irq(int irq,
+ 			 * Ignore the return code, though, since we always zap cache
+ 			 * and clear the page fault anyway.
+ 			 */
+-			if (iommu->domain)
++			if (iommu->domain != &rk_identity_domain)
+ 				report_iommu_fault(iommu->domain, iommu->dev, iova,
+ 						   flags);
+ 			else
+@@ -951,26 +952,27 @@ out_disable_clocks:
+ 	return ret;
+ }
+ 
+-static void rk_iommu_detach_device(struct iommu_domain *domain,
+-				   struct device *dev)
++static int rk_iommu_identity_attach(struct iommu_domain *identity_domain,
++				    struct device *dev)
+ {
+ 	struct rk_iommu *iommu;
+-	struct rk_iommu_domain *rk_domain = to_rk_domain(domain);
++	struct rk_iommu_domain *rk_domain;
+ 	unsigned long flags;
+ 	int ret;
+ 
+ 	/* Allow 'virtual devices' (eg drm) to detach from domain */
+ 	iommu = rk_iommu_from_dev(dev);
+ 	if (!iommu)
+-		return;
++		return -ENODEV;
++
++	rk_domain = to_rk_domain(iommu->domain);
+ 
+ 	dev_dbg(dev, "Detaching from iommu domain\n");
+ 
+-	/* iommu already detached */
+-	if (iommu->domain != domain)
+-		return;
++	if (iommu->domain == identity_domain)
++		return 0;
+ 
+-	iommu->domain = NULL;
++	iommu->domain = identity_domain;
+ 
+ 	spin_lock_irqsave(&rk_domain->iommus_lock, flags);
+ 	list_del_init(&iommu->node);
+@@ -982,8 +984,31 @@ static void rk_iommu_detach_device(struc
+ 		rk_iommu_disable(iommu);
+ 		pm_runtime_put(iommu->dev);
+ 	}
++
++	return 0;
+ }
+ 
++static void rk_iommu_identity_free(struct iommu_domain *domain)
++{
++}
++
++static struct iommu_domain_ops rk_identity_ops = {
++	.attach_dev = rk_iommu_identity_attach,
++	.free = rk_iommu_identity_free,
++};
++
++static struct iommu_domain rk_identity_domain = {
++	.type = IOMMU_DOMAIN_IDENTITY,
++	.ops = &rk_identity_ops,
++};
++
++#ifdef CONFIG_ARM
++static void rk_iommu_set_platform_dma(struct device *dev)
++{
++	WARN_ON(rk_iommu_identity_attach(&rk_identity_domain, dev));
++}
++#endif
++
+ static int rk_iommu_attach_device(struct iommu_domain *domain,
+ 		struct device *dev)
+ {
+@@ -1006,8 +1031,9 @@ static int rk_iommu_attach_device(struct
+ 	if (iommu->domain == domain)
+ 		return 0;
+ 
+-	if (iommu->domain)
+-		rk_iommu_detach_device(iommu->domain, dev);
++	ret = rk_iommu_identity_attach(&rk_identity_domain, dev);
++	if (ret)
++		return ret;
+ 
+ 	iommu->domain = domain;
+ 
+@@ -1021,7 +1047,7 @@ static int rk_iommu_attach_device(struct
+ 
+ 	ret = rk_iommu_enable(iommu);
+ 	if (ret)
+-		rk_iommu_detach_device(iommu->domain, dev);
++		WARN_ON(rk_iommu_identity_attach(&rk_identity_domain, dev));
+ 
+ 	pm_runtime_put(iommu->dev);
+ 
+@@ -1032,6 +1058,9 @@ static struct iommu_domain *rk_iommu_dom
+ {
+ 	struct rk_iommu_domain *rk_domain;
+ 
++	if (type == IOMMU_DOMAIN_IDENTITY)
++		return &rk_identity_domain;
++
+ 	if (type != IOMMU_DOMAIN_UNMANAGED && type != IOMMU_DOMAIN_DMA)
+ 		return NULL;
+ 
+@@ -1147,6 +1176,7 @@ static int rk_iommu_of_xlate(struct devi
+ 	iommu_dev = of_find_device_by_node(args->np);
+ 
+ 	data->iommu = platform_get_drvdata(iommu_dev);
++	data->iommu->domain = &rk_identity_domain;
+ 	dev_iommu_priv_set(dev, data);
+ 
+ 	platform_device_put(iommu_dev);
+@@ -1159,6 +1189,9 @@ static const struct iommu_ops rk_iommu_o
+ 	.probe_device = rk_iommu_probe_device,
+ 	.release_device = rk_iommu_release_device,
+ 	.device_group = rk_iommu_device_group,
++#ifdef CONFIG_ARM
++	.set_platform_dma_ops = rk_iommu_set_platform_dma,
++#endif
+ 	.pgsize_bitmap = RK_IOMMU_PGSIZE_BITMAP,
+ 	.of_xlate = rk_iommu_of_xlate,
+ 	.default_domain_ops = &(const struct iommu_domain_ops) {
+@@ -1316,7 +1349,7 @@ static int __maybe_unused rk_iommu_suspe
+ {
+ 	struct rk_iommu *iommu = dev_get_drvdata(dev);
+ 
+-	if (!iommu->domain)
++	if (iommu->domain == &rk_identity_domain)
+ 		return 0;
+ 
+ 	rk_iommu_disable(iommu);
+@@ -1327,7 +1360,7 @@ static int __maybe_unused rk_iommu_resum
+ {
+ 	struct rk_iommu *iommu = dev_get_drvdata(dev);
+ 
+-	if (!iommu->domain)
++	if (iommu->domain == &rk_identity_domain)
+ 		return 0;
+ 
+ 	return rk_iommu_enable(iommu);
diff --git a/target/linux/rockchip/patches-6.1/041-arm64-dts-rockchip-add-PX30-Q7-Ringneck-SoM-with-Hai.patch b/target/linux/rockchip/patches-6.1/041-arm64-dts-rockchip-add-PX30-Q7-Ringneck-SoM-with-Hai.patch
new file mode 100644
index 0000000000..2203afc524
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/041-arm64-dts-rockchip-add-PX30-Q7-Ringneck-SoM-with-Hai.patch
@@ -0,0 +1,674 @@
+From 05012b43293b66586d3fba9e4eb04992a1389dbb Mon Sep 17 00:00:00 2001
+From: Quentin Schulz <quentin.schulz@theobroma-systems.com>
+Date: Mon, 17 Oct 2022 12:25:24 +0200
+Subject: [PATCH 041/383] =?UTF-8?q?arm64:=20dts:=20rockchip:=20add=20PX30-?=
+ =?UTF-8?q?=C2=B5Q7=20(Ringneck)=20SoM=20with=20Haikou=20baseboard?=
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+The PX30-uQ7 (Ringneck) SoM is a µQseven-compatible (40mmx70mm, MXM-230
+connector) system-on-module from Theobroma Systems[1], featuring the
+Rockchip PX30.
+
+It provides the following feature set:
+ * up to 4GB DDR4
+ * up to 128GB on-module eMMC (with 8-bit 1.8V interface)
+ * SD card (on a baseboard) via edge connector
+ * Fast Ethernet with on-module TI DP83825I PHY
+ * MIPI-DSI/LVDS
+ * MIPI-CSI
+ * USB
+   - 1x USB 2.0 dual-role
+   - 3x USB 2.0 host
+ * on-module STM32 Cortex-M0 companion controller, implementing:
+   - low-power RTC functionality (ISL1208 emulation)
+   - fan controller (AMC6821 emulation)
+   - USB<->CAN bridge controller
+ * on-module Espressif ESP32 for Bluetooth + 2.4GHz WiFi
+ * on-module NXP SE05x Secure Element
+
+[1] https://www.theobroma-systems.com/som-product/px30-%C2%B5q7/
+
+Signed-off-by: Quentin Schulz <quentin.schulz@theobroma-systems.com>
+Link: https://lore.kernel.org/r/20220930-upstream-ringneck-v2-1-6671694b6934@theobroma-systems.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../dts/rockchip/px30-ringneck-haikou.dts     | 232 +++++++++++
+ .../boot/dts/rockchip/px30-ringneck.dtsi      | 382 ++++++++++++++++++
+ 3 files changed, 615 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/px30-ringneck-haikou.dts
+ create mode 100644 arch/arm64/boot/dts/rockchip/px30-ringneck.dtsi
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -3,6 +3,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += px30-evb.
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += px30-engicam-px30-core-ctouch2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += px30-engicam-px30-core-ctouch2-of10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += px30-engicam-px30-core-edimm2.2.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += px30-ringneck-haikou.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3308-evb.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3308-roc-cc.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3308-rock-pi-s.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/px30-ringneck-haikou.dts
+@@ -0,0 +1,232 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2022 Theobroma Systems Design und Consulting GmbH
++ */
++
++/dts-v1/;
++#include "px30-ringneck.dtsi"
++#include <dt-bindings/input/input.h>
++#include <dt-bindings/leds/common.h>
++
++/ {
++	model = "Theobroma Systems PX30-uQ7 SoM on Haikou devkit";
++	compatible = "tsd,px30-ringneck-haikou", "rockchip,px30";
++
++	aliases {
++		mmc2 = &sdmmc;
++	};
++
++	chosen {
++		stdout-path = "serial0:115200n8";
++	};
++
++	gpio-keys {
++		compatible = "gpio-keys";
++		pinctrl-0 = <&haikou_keys_pin>;
++		pinctrl-names = "default";
++
++		button-batlow-n {
++			label = "BATLOW#";
++			linux,code = <KEY_BATTERY>;
++			gpios = <&gpio3 RK_PA7 GPIO_ACTIVE_LOW>;
++		};
++
++		button-slp-btn-n {
++			label = "SLP_BTN#";
++			linux,code = <KEY_SLEEP>;
++			gpios = <&gpio1 RK_PB7 GPIO_ACTIVE_LOW>;
++		};
++
++		button-wake-n {
++			label = "WAKE#";
++			linux,code = <KEY_WAKEUP>;
++			gpios = <&gpio1 RK_PB6 GPIO_ACTIVE_LOW>;
++			wakeup-source;
++		};
++
++		switch-lid-btn-n {
++			label = "LID_BTN#";
++			linux,code = <SW_LID>;
++			linux,input-type = <EV_SW>;
++			gpios = <&gpio3 RK_PA6 GPIO_ACTIVE_LOW>;
++		};
++	};
++
++	leds {
++		pinctrl-0 = <&module_led_pin>, <&sd_card_led_pin>;
++
++		sd_card_led: led-1 {
++			gpios = <&gpio3 RK_PB3 GPIO_ACTIVE_HIGH>;
++			linux,default-trigger = "mmc2";
++			function = LED_FUNCTION_SD;
++			color = <LED_COLOR_ID_BLUE>;
++		};
++	};
++
++	i2s0-sound {
++		compatible = "simple-audio-card";
++		simple-audio-card,format = "i2s";
++		simple-audio-card,name = "Haikou,I2S-codec";
++		simple-audio-card,mclk-fs = <512>;
++
++		simple-audio-card,codec {
++			clocks = <&sgtl5000_clk>;
++			sound-dai = <&sgtl5000>;
++		};
++
++		simple-audio-card,cpu {
++			bitclock-master;
++			frame-master;
++			sound-dai = <&i2s0_8ch>;
++		};
++	};
++
++	sgtl5000_clk: sgtl5000-oscillator {
++		compatible = "fixed-clock";
++		#clock-cells = <0>;
++		clock-frequency  = <24576000>;
++	};
++
++	dc_12v: dc-12v-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "dc_12v";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <12000000>;
++		regulator-max-microvolt = <12000000>;
++	};
++
++	vcc3v3_baseboard: vcc3v3-baseboard-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_baseboard";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&dc_12v>;
++	};
++
++	vcc5v0_baseboard: vcc5v0-baseboard-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_baseboard";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&dc_12v>;
++	};
++
++	vdda_codec: vdda-codec-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vdda_codec";
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc5v0_baseboard>;
++	};
++
++	vddd_codec: vddd-codec-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vddd_codec";
++		regulator-boot-on;
++		regulator-min-microvolt = <1600000>;
++		regulator-max-microvolt = <1600000>;
++		vin-supply = <&vcc5v0_baseboard>;
++	};
++};
++
++&i2c2 {
++	status = "okay";
++	clock-frequency = <400000>;
++
++	sgtl5000: codec@a {
++		compatible = "fsl,sgtl5000";
++		reg = <0x0a>;
++		clocks = <&sgtl5000_clk>;
++		#sound-dai-cells = <0>;
++		VDDA-supply = <&vdda_codec>;
++		VDDIO-supply = <&vcc3v3_baseboard>;
++		VDDD-supply = <&vddd_codec>;
++	};
++};
++
++&i2c3 {
++	eeprom@50 {
++		reg = <0x50>;
++		compatible = "atmel,24c01";
++		pagesize = <8>;
++		size = <128>;
++		vcc-supply = <&vcc3v3_baseboard>;
++	};
++};
++
++&i2s0_8ch {
++	status = "okay";
++};
++
++&gmac {
++	status = "okay";
++};
++
++&pinctrl {
++	haikou {
++		haikou_keys_pin: haikou-keys-pin {
++			rockchip,pins =
++			  /* WAKE# */
++			  <1 RK_PB6 RK_FUNC_GPIO &pcfg_pull_up>,
++			  /* SLP_BTN# */
++			  <1 RK_PB7 RK_FUNC_GPIO &pcfg_pull_up>,
++			  /* LID_BTN */
++			  <3 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>,
++			  /* BATLOW# */
++			  <3 RK_PA7 RK_FUNC_GPIO &pcfg_pull_up>,
++			  /* BIOS_DISABLE# */
++			  <2 RK_PC2 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	leds {
++		sd_card_led_pin: sd-card-led-pin {
++			rockchip,pins =
++			  <3 RK_PB3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&pwm0 {
++	status = "okay";
++};
++
++&sdmmc {
++	sd-uhs-sdr12;
++	sd-uhs-sdr25;
++	sd-uhs-sdr50;
++	bus-width = <4>;
++	cap-mmc-highspeed;
++	cap-sd-highspeed;
++	cd-gpios = <&gpio0 RK_PA3 GPIO_ACTIVE_LOW>;
++	disable-wp;
++	vmmc-supply = <&vcc3v3_baseboard>;
++	status = "okay";
++};
++
++&spi1 {
++	status = "okay";
++};
++
++&u2phy_otg {
++	status = "okay";
++};
++
++&uart0 {
++	status = "okay";
++};
++
++&uart5 {
++	pinctrl-0 = <&uart5_xfer>;
++	status = "okay";
++};
++
++&usb20_otg {
++	status = "okay";
++};
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/px30-ringneck.dtsi
+@@ -0,0 +1,382 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2022 Theobroma Systems Design und Consulting GmbH
++ */
++
++/dts-v1/;
++#include "px30.dtsi"
++#include <dt-bindings/leds/common.h>
++
++/ {
++	aliases {
++		mmc0 = &emmc;
++		mmc1 = &sdio;
++		rtc0 = &rtc_twi;
++		rtc1 = &rk809;
++	};
++
++	emmc_pwrseq: emmc-pwrseq {
++		compatible = "mmc-pwrseq-emmc";
++		pinctrl-0 = <&emmc_reset>;
++		pinctrl-names = "default";
++		reset-gpios = <&gpio1 RK_PB3 GPIO_ACTIVE_HIGH>;
++	};
++
++	leds {
++		compatible = "gpio-leds";
++		pinctrl-names = "default";
++		pinctrl-0 = <&module_led_pin>;
++		status = "okay";
++
++		module_led: led-0 {
++			gpios = <&gpio1 RK_PB0 GPIO_ACTIVE_HIGH>;
++			function = LED_FUNCTION_HEARTBEAT;
++			linux,default-trigger = "heartbeat";
++			color = <LED_COLOR_ID_AMBER>;
++		};
++	};
++
++	vcc5v0_sys: vccsys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++};
++
++&cpu0 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&cpu1 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&cpu2 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&cpu3 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&emmc {
++	bus-width = <8>;
++	cap-mmc-highspeed;
++	mmc-hs200-1_8v;
++	supports-emmc;
++	mmc-pwrseq = <&emmc_pwrseq>;
++	non-removable;
++	vmmc-supply = <&vcc_3v3>;
++	vqmmc-supply = <&vcc_emmc>;
++
++	status = "okay";
++};
++
++/* On-module TI DP83825I PHY but no connector, enable in carrierboard */
++&gmac {
++	snps,reset-gpio = <&gpio3 RK_PB0 GPIO_ACTIVE_LOW>;
++	snps,reset-active-low;
++	snps,reset-delays-us = <0 50000 50000>;
++	phy-supply = <&vcc_3v3>;
++	clock_in_out = "output";
++};
++
++&gpio2 {
++	/*
++	 * The Qseven BIOS_DISABLE signal on the PX30-µQ7 keeps the on-module
++	 * eMMC powered-down initially (in fact it keeps the reset signal
++	 * asserted). BIOS_DISABLE_OVERRIDE pin allows to re-enable eMMC after
++	 * the SPL has been booted from SD Card.
++	 */
++	bios-disable-override-hog {
++		gpios = <RK_PB5 GPIO_ACTIVE_LOW>;
++		output-high;
++		line-name = "bios_disable_override";
++		gpio-hog;
++	};
++
++	/*
++	 * The BIOS_DISABLE hog is a feedback pin for the actual status of the
++	 * signal, ignoring the BIOS_DISABLE_OVERRIDE logic. This usually
++	 * represents the state of a switch on the baseboard.
++	 */
++	bios-disable-n-hog {
++		gpios = <RK_PC2 GPIO_ACTIVE_LOW>;
++		line-name = "bios_disable";
++		input;
++		gpio-hog;
++	};
++};
++
++&gpu {
++	status = "okay";
++};
++
++&i2c0 {
++	status = "okay";
++
++	rk809: pmic@20 {
++		compatible = "rockchip,rk809";
++		reg = <0x20>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <7 IRQ_TYPE_LEVEL_LOW>;
++		pinctrl-0 = <&pmic_int>;
++		pinctrl-names = "default";
++		#clock-cells = <0>;
++		clock-output-names = "xin32k";
++		rockchip,system-power-controller;
++		wakeup-source;
++
++		vcc1-supply = <&vcc5v0_sys>;
++		vcc2-supply = <&vcc5v0_sys>;
++		vcc3-supply = <&vcc5v0_sys>;
++		vcc4-supply = <&vcc5v0_sys>;
++		vcc5-supply = <&vcc_3v3>;
++		vcc6-supply = <&vcc_3v3>;
++		vcc7-supply = <&vcc_3v3>;
++		vcc9-supply = <&vcc5v0_sys>;
++
++		regulators {
++			vdd_log: DCDC_REG1 {
++				regulator-name = "vdd_log";
++				regulator-min-microvolt = <950000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <950000>;
++				};
++			};
++
++			vdd_arm: DCDC_REG2 {
++				regulator-name = "vdd_arm";
++				regulator-min-microvolt = <950000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <950000>;
++				};
++			};
++
++			vcc_ddr: DCDC_REG3 {
++				regulator-name = "vcc_ddr";
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vcc_3v0_1v8: vcc_emmc: DCDC_REG4 {
++				regulator-name = "vcc_3v0_1v8";
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3000000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3000000>;
++				};
++			};
++
++			vcc_3v3: DCDC_REG5 {
++				regulator-name = "vcc_3v3";
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcc_1v8: LDO_REG2 {
++				regulator-name = "vcc_1v8";
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vcc_1v0: LDO_REG3 {
++				regulator-name = "vcc_1v0";
++				regulator-min-microvolt = <1000000>;
++				regulator-max-microvolt = <1000000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1000000>;
++				};
++			};
++
++			vccio_sd: LDO_REG5 {
++				regulator-name = "vccio_sd";
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcc_lcd: LDO_REG7 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1000000>;
++				regulator-max-microvolt = <1000000>;
++				regulator-name = "vcc_lcd";
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <1000000>;
++				};
++			};
++
++			vcc_1v8_lcd: LDO_REG8 {
++				regulator-name = "vcc_1v8_lcd";
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vcca_1v8: LDO_REG9 {
++				regulator-name = "vcca_1v8";
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++		};
++	};
++};
++
++&i2c1 {
++	status = "okay";
++
++	/* SE05x is limited to Fast Mode */
++	clock-frequency = <400000>;
++
++	fan: fan@18 {
++		compatible = "ti,amc6821";
++		reg = <0x18>;
++		#cooling-cells = <2>;
++	};
++
++	rtc_twi: rtc@6f {
++		compatible = "isil,isl1208";
++		reg = <0x6f>;
++	};
++};
++
++&i2c3 {
++	status = "okay";
++};
++
++&i2s0_8ch {
++	rockchip,trcm-sync-tx-only;
++
++	pinctrl-0 = <&i2s0_8ch_sclktx &i2s0_8ch_lrcktx
++		     &i2s0_8ch_sdo0 &i2s0_8ch_sdi0>;
++};
++
++&io_domains {
++	vccio1-supply = <&vcc_3v3>;
++	vccio2-supply = <&vccio_sd>;
++	vccio3-supply = <&vcc_3v3>;
++	vccio4-supply = <&vcc_3v3>;
++	vccio5-supply = <&vcc_3v3>;
++	vccio6-supply = <&vcc_emmc>;
++	vccio-oscgpi-supply = <&vcc_3v3>;
++
++	status = "okay";
++};
++
++&pinctrl {
++	emmc {
++		emmc_reset: emmc-reset {
++			rockchip,pins = <1 RK_PB3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	leds {
++		module_led_pin: module-led-pin {
++			rockchip,pins = <1 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	pmic {
++		pmic_int: pmic-int {
++			rockchip,pins =
++				<0 RK_PA7 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++};
++
++&saradc {
++	vref-supply = <&vcc_1v8>;
++	status = "okay";
++};
++
++&sdmmc {
++	vqmmc-supply = <&vccio_sd>;
++};
++
++&tsadc {
++	status = "okay";
++};
++
++&u2phy {
++	status = "okay";
++};
++
++&u2phy_host {
++	status = "okay";
++};
++
++/* Mule UCAN */
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++&wdt {
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/042-arm64-dts-rockchip-Add-Hardkernel-ODROID-M1-board.patch b/target/linux/rockchip/patches-6.1/042-arm64-dts-rockchip-Add-Hardkernel-ODROID-M1-board.patch
new file mode 100644
index 0000000000..1f0095aa26
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/042-arm64-dts-rockchip-Add-Hardkernel-ODROID-M1-board.patch
@@ -0,0 +1,447 @@
+From 6880fb0f4734f7d587e01f2a3b2bc2bd44aaacd5 Mon Sep 17 00:00:00 2001
+From: Dongjin Kim <tobetter@gmail.com>
+Date: Fri, 30 Sep 2022 07:12:35 +0200
+Subject: [PATCH 042/383] arm64: dts: rockchip: Add Hardkernel ODROID-M1 board
+
+This patch is to add a device tree for new board Hardkernel ODROID-M1
+based on Rockchip RK3568, includes basic peripherals -
+uart/eMMC/uSD/i2c and on-board ethernet.
+
+Signed-off-by: Dongjin Kim <tobetter@gmail.com>
+[aurelien@aurel32.net: addressed issues from initial review]
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-3-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../boot/dts/rockchip/rk3568-odroid-m1.dts    | 414 ++++++++++++++++++
+ 2 files changed, 415 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -72,4 +72,5 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-ro
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-cm4.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-bpi-r2-pro.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-evb1-v10.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-odroid-m1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-rock-3a.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -0,0 +1,414 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2022 Hardkernel Co., Ltd.
++ *
++ */
++
++/dts-v1/;
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/leds/common.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rk3568.dtsi"
++
++/ {
++	model = "Hardkernel ODROID-M1";
++	compatible = "rockchip,rk3568-odroid-m1", "rockchip,rk3568";
++
++	aliases {
++		ethernet0 = &gmac0;
++		i2c0 = &i2c3;
++		i2c3 = &i2c0;
++		mmc0 = &sdhci;
++		mmc1 = &sdmmc0;
++		serial0 = &uart1;
++		serial1 = &uart0;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	dc_12v: dc-12v-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "dc_12v";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <12000000>;
++		regulator-max-microvolt = <12000000>;
++	};
++
++	leds {
++		compatible = "gpio-leds";
++
++		led_power: led-0 {
++			gpios = <&gpio0 RK_PC6 GPIO_ACTIVE_HIGH>;
++			function = LED_FUNCTION_POWER;
++			color = <LED_COLOR_ID_RED>;
++			default-state = "keep";
++			linux,default-trigger = "default-on";
++			pinctrl-names = "default";
++			pinctrl-0 = <&led_power_pin>;
++		};
++		led_work: led-1 {
++			gpios = <&gpio0 RK_PB7 GPIO_ACTIVE_HIGH>;
++			function = LED_FUNCTION_HEARTBEAT;
++			color = <LED_COLOR_ID_BLUE>;
++			linux,default-trigger = "heartbeat";
++			pinctrl-names = "default";
++			pinctrl-0 = <&led_work_pin>;
++		};
++	};
++
++	vcc3v3_sys: vcc3v3-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&dc_12v>;
++	};
++};
++
++&cpu0 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu1 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu2 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu3 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&gmac0 {
++	assigned-clocks = <&cru SCLK_GMAC0_RX_TX>, <&cru SCLK_GMAC0>;
++	assigned-clock-parents = <&cru SCLK_GMAC0_RGMII_SPEED>;
++	assigned-clock-rates = <0>, <125000000>;
++	clock_in_out = "output";
++	phy-handle = <&rgmii_phy0>;
++	phy-mode = "rgmii";
++	phy-supply = <&vcc3v3_sys>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&gmac0_miim
++		     &gmac0_tx_bus2
++		     &gmac0_rx_bus2
++		     &gmac0_rgmii_clk
++		     &gmac0_rgmii_bus>;
++	status = "okay";
++
++	tx_delay = <0x4f>;
++	rx_delay = <0x2d>;
++};
++
++&i2c0 {
++	status = "okay";
++
++	vdd_cpu: regulator@1c {
++		compatible = "tcs,tcs4525";
++		reg = <0x1c>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <800000>;
++		regulator-max-microvolt = <1150000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc3v3_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	rk809: pmic@20 {
++		compatible = "rockchip,rk809";
++		reg = <0x20>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PA3 IRQ_TYPE_LEVEL_LOW>;
++		#clock-cells = <1>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pmic_int_l>;
++		rockchip,system-power-controller;
++		vcc1-supply = <&vcc3v3_sys>;
++		vcc2-supply = <&vcc3v3_sys>;
++		vcc3-supply = <&vcc3v3_sys>;
++		vcc4-supply = <&vcc3v3_sys>;
++		vcc5-supply = <&vcc3v3_sys>;
++		vcc6-supply = <&vcc3v3_sys>;
++		vcc7-supply = <&vcc3v3_sys>;
++		vcc8-supply = <&vcc3v3_sys>;
++		vcc9-supply = <&vcc3v3_sys>;
++		wakeup-source;
++
++		regulators {
++			vdd_logic: DCDC_REG1 {
++				regulator-name = "vdd_logic";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-init-microvolt = <900000>;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_gpu: DCDC_REG2 {
++				regulator-name = "vdd_gpu";
++				regulator-always-on;
++				regulator-init-microvolt = <900000>;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_ddr: DCDC_REG3 {
++				regulator-name = "vcc_ddr";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-initial-mode = <0x2>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vdd_npu: DCDC_REG4 {
++				regulator-name = "vdd_npu";
++				regulator-init-microvolt = <900000>;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_1v8: DCDC_REG5 {
++				regulator-name = "vcc_1v8";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_image: LDO_REG1 {
++				regulator-name = "vdda0v9_image";
++				regulator-always-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda_0v9: LDO_REG2 {
++				regulator-name = "vdda_0v9";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_pmu: LDO_REG3 {
++				regulator-name = "vdda0v9_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <900000>;
++				};
++			};
++
++			vccio_acodec: LDO_REG4 {
++				regulator-name = "vccio_acodec";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_sd: LDO_REG5 {
++				regulator-name = "vccio_sd";
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_pmu: LDO_REG6 {
++				regulator-name = "vcc3v3_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcca_1v8: LDO_REG7 {
++				regulator-name = "vcca_1v8";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcca1v8_pmu: LDO_REG8 {
++				regulator-name = "vcca1v8_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vcca1v8_image: LDO_REG9 {
++				regulator-name = "vcca1v8_image";
++				regulator-always-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_3v3: SWITCH_REG1 {
++				regulator-name = "vcc_3v3";
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_sd: SWITCH_REG2 {
++				regulator-name = "vcc3v3_sd";
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++		};
++	};
++};
++
++&mdio0 {
++	rgmii_phy0: ethernet-phy@0 {
++		compatible = "ethernet-phy-ieee802.3-c22";
++		reg = <0x0>;
++		reset-assert-us = <20000>;
++		reset-deassert-us = <100000>;
++		reset-gpios = <&gpio3 RK_PB7 GPIO_ACTIVE_LOW>;
++	};
++};
++
++&pinctrl {
++	leds {
++		led_power_pin: led-power-pin {
++			rockchip,pins = <0 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++		led_work_pin: led-work-pin {
++			rockchip,pins = <0 RK_PB7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	pmic {
++		pmic_int_l: pmic-int-l {
++			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++};
++
++&pmu_io_domains {
++	pmuio1-supply = <&vcc3v3_pmu>;
++	pmuio2-supply = <&vcc3v3_pmu>;
++	vccio1-supply = <&vccio_acodec>;
++	vccio2-supply = <&vcc_1v8>;
++	vccio3-supply = <&vccio_sd>;
++	vccio4-supply = <&vcc_1v8>;
++	vccio5-supply = <&vcc_3v3>;
++	vccio6-supply = <&vcc_3v3>;
++	vccio7-supply = <&vcc_3v3>;
++	status = "okay";
++};
++
++&saradc {
++	vref-supply = <&vcca_1v8>;
++	status = "okay";
++};
++
++&sdhci {
++	bus-width = <8>;
++	max-frequency = <200000000>;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&emmc_bus8 &emmc_clk &emmc_cmd &emmc_datastrobe &emmc_rstnout>;
++	vmmc-supply = <&vcc_3v3>;
++	vqmmc-supply = <&vcc_1v8>;
++	status = "okay";
++};
++
++&sdmmc0 {
++	bus-width = <4>;
++	cap-sd-highspeed;
++	cd-gpios = <&gpio0 RK_PA4 GPIO_ACTIVE_LOW>;
++	disable-wp;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc0_bus4 &sdmmc0_clk &sdmmc0_cmd &sdmmc0_det>;
++	sd-uhs-sdr50;
++	vmmc-supply = <&vcc3v3_sd>;
++	vqmmc-supply = <&vccio_sd>;
++	status = "okay";
++};
++
++&uart2 {
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/043-arm64-dts-rockchip-add-thermal-support-to-ODROID-M1.patch b/target/linux/rockchip/patches-6.1/043-arm64-dts-rockchip-add-thermal-support-to-ODROID-M1.patch
new file mode 100644
index 0000000000..ce719500c1
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/043-arm64-dts-rockchip-add-thermal-support-to-ODROID-M1.patch
@@ -0,0 +1,32 @@
+From a8e414fb9982356c935799ebccac6e7ee64a5814 Mon Sep 17 00:00:00 2001
+From: Aurelien Jarno <aurelien@aurel32.net>
+Date: Fri, 30 Sep 2022 07:12:36 +0200
+Subject: [PATCH 043/383] arm64: dts: rockchip: add thermal support to
+ ODROID-M1
+
+Add the thermal nodes for the ODROID-M1.
+
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-4-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -409,6 +409,12 @@
+ 	status = "okay";
+ };
+ 
++&tsadc {
++	rockchip,hw-tshut-mode = <1>;
++	rockchip,hw-tshut-polarity = <0>;
++	status = "okay";
++};
++
+ &uart2 {
+ 	status = "okay";
+ };
diff --git a/target/linux/rockchip/patches-6.1/044-arm64-dts-rockchip-Add-NOR-flash-to-ODROID-M1.patch b/target/linux/rockchip/patches-6.1/044-arm64-dts-rockchip-Add-NOR-flash-to-ODROID-M1.patch
new file mode 100644
index 0000000000..0bb8b193f1
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/044-arm64-dts-rockchip-Add-NOR-flash-to-ODROID-M1.patch
@@ -0,0 +1,96 @@
+From 09f1ea535fa3b171df1c926211e80a17aea62265 Mon Sep 17 00:00:00 2001
+From: Aurelien Jarno <aurelien@aurel32.net>
+Date: Fri, 30 Sep 2022 07:12:37 +0200
+Subject: [PATCH 044/383] arm64: dts: rockchip: Add NOR flash to ODROID-M1
+
+Enable the Rockchip Serial Flash Controller for the ODROID-M1 and add
+the corresponding SPI NOR flash entry. The SFC is used in dual I/O mode
+and not quad I/O mode, as the FSPI_D2 pin is shared with the EMMC_RSTn
+pin.
+
+The partitions addresses and sizes are taken from the ODROID-M1
+Partition Table page on the ODROID wiki.
+
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-5-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3568-odroid-m1.dts    | 58 +++++++++++++++++++
+ 1 file changed, 58 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -351,6 +351,20 @@
+ };
+ 
+ &pinctrl {
++	fspi {
++		fspi_dual_io_pins: fspi-dual-io-pins {
++			rockchip,pins =
++				/* fspi_clk */
++				<1 RK_PD0 1 &pcfg_pull_none>,
++				/* fspi_cs0n */
++				<1 RK_PD3 1 &pcfg_pull_none>,
++				/* fspi_d0 */
++				<1 RK_PD1 1 &pcfg_pull_none>,
++				/* fspi_d1 */
++				<1 RK_PD2 1 &pcfg_pull_none>;
++		};
++	};
++
+ 	leds {
+ 		led_power_pin: led-power-pin {
+ 			rockchip,pins = <0 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>;
+@@ -409,6 +423,50 @@
+ 	status = "okay";
+ };
+ 
++&sfc {
++	/* Dual I/O mode as the D2 pin conflicts with the eMMC */
++	pinctrl-0 = <&fspi_dual_io_pins>;
++	pinctrl-names = "default";
++	#address-cells = <1>;
++	#size-cells = <0>;
++	status = "okay";
++
++	flash@0 {
++		compatible = "jedec,spi-nor";
++		reg = <0>;
++		spi-max-frequency = <100000000>;
++		spi-rx-bus-width = <2>;
++		spi-tx-bus-width = <1>;
++
++		partitions {
++			compatible = "fixed-partitions";
++			#address-cells = <1>;
++			#size-cells = <1>;
++
++			partition@0 {
++				label = "SPL";
++				reg = <0x0 0xe0000>;
++			};
++			partition@e0000 {
++				label = "U-Boot Env";
++				reg = <0xe0000 0x20000>;
++			};
++			partition@100000 {
++				label = "U-Boot";
++				reg = <0x100000 0x200000>;
++			};
++			partition@300000 {
++				label = "splash";
++				reg = <0x300000 0x100000>;
++			};
++			partition@400000 {
++				label = "Filesystem";
++				reg = <0x400000 0xc00000>;
++			};
++		};
++	};
++};
++
+ &tsadc {
+ 	rockchip,hw-tshut-mode = <1>;
+ 	rockchip,hw-tshut-polarity = <0>;
diff --git a/target/linux/rockchip/patches-6.1/045-arm64-dts-rockchip-Add-analog-audio-on-ODROID-M1.patch b/target/linux/rockchip/patches-6.1/045-arm64-dts-rockchip-Add-analog-audio-on-ODROID-M1.patch
new file mode 100644
index 0000000000..7e29e205b3
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/045-arm64-dts-rockchip-Add-analog-audio-on-ODROID-M1.patch
@@ -0,0 +1,95 @@
+From e8e7538110b62bb7970138c461d722c203cb4c4f Mon Sep 17 00:00:00 2001
+From: Aurelien Jarno <aurelien@aurel32.net>
+Date: Fri, 30 Sep 2022 07:12:38 +0200
+Subject: [PATCH 045/383] arm64: dts: rockchip: Add analog audio on ODROID-M1
+
+On the ODROID-M1, the I2S1 TDM controller is connected to the rk809
+codec in I2S mode. It is used to provide a stereo headphones output and
+a mono speaker output. A GPIO with an external pullup is used as an
+headphone detection input.
+
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-6-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3568-odroid-m1.dts    | 43 ++++++++++++++++++-
+ 1 file changed, 42 insertions(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -59,6 +59,31 @@
+ 		};
+ 	};
+ 
++	rk809-sound {
++		compatible = "simple-audio-card";
++		pinctrl-names = "default";
++		pinctrl-0 = <&hp_det_pin>;
++		simple-audio-card,name = "Analog RK817";
++		simple-audio-card,format = "i2s";
++		simple-audio-card,hp-det-gpio = <&gpio0 RK_PB0 GPIO_ACTIVE_HIGH>;
++		simple-audio-card,mclk-fs = <256>;
++		simple-audio-card,widgets =
++			"Headphone", "Headphones",
++			"Speaker", "Speaker";
++		simple-audio-card,routing =
++			"Headphones", "HPOL",
++			"Headphones", "HPOR",
++			"Speaker", "SPKO";
++
++		simple-audio-card,cpu {
++			sound-dai = <&i2s1_8ch>;
++		};
++
++		simple-audio-card,codec {
++			sound-dai = <&rk809>;
++		};
++	};
++
+ 	vcc3v3_sys: vcc3v3-sys-regulator {
+ 		compatible = "regulator-fixed";
+ 		regulator-name = "vcc3v3_sys";
+@@ -131,10 +156,15 @@
+ 		reg = <0x20>;
+ 		interrupt-parent = <&gpio0>;
+ 		interrupts = <RK_PA3 IRQ_TYPE_LEVEL_LOW>;
++		assigned-clocks = <&cru I2S1_MCLKOUT_TX>;
++		assigned-clock-parents = <&cru CLK_I2S1_8CH_TX>;
+ 		#clock-cells = <1>;
++		clock-names = "mclk";
++		clocks = <&cru I2S1_MCLKOUT_TX>;
+ 		pinctrl-names = "default";
+-		pinctrl-0 = <&pmic_int_l>;
++		pinctrl-0 = <&pmic_int_l>, <&i2s1m0_mclk>;
+ 		rockchip,system-power-controller;
++		#sound-dai-cells = <0>;
+ 		vcc1-supply = <&vcc3v3_sys>;
+ 		vcc2-supply = <&vcc3v3_sys>;
+ 		vcc3-supply = <&vcc3v3_sys>;
+@@ -340,6 +370,11 @@
+ 	};
+ };
+ 
++&i2s1_8ch {
++	rockchip,trcm-sync-tx-only;
++	status = "okay";
++};
++
+ &mdio0 {
+ 	rgmii_phy0: ethernet-phy@0 {
+ 		compatible = "ethernet-phy-ieee802.3-c22";
+@@ -379,6 +414,12 @@
+ 			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
+ 		};
+ 	};
++
++	rk809 {
++		hp_det_pin: hp-det-pin {
++			rockchip,pins = <0 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
+ };
+ 
+ &pmu_io_domains {
diff --git a/target/linux/rockchip/patches-6.1/046-arm64-dts-rockchip-Enable-vop2-and-hdmi-tx-on-ODROID.patch b/target/linux/rockchip/patches-6.1/046-arm64-dts-rockchip-Enable-vop2-and-hdmi-tx-on-ODROID.patch
new file mode 100644
index 0000000000..55ca788cc3
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/046-arm64-dts-rockchip-Enable-vop2-and-hdmi-tx-on-ODROID.patch
@@ -0,0 +1,91 @@
+From 286c987ac577c93b08ecc541f1a9ed78fe1cb7f1 Mon Sep 17 00:00:00 2001
+From: Aurelien Jarno <aurelien@aurel32.net>
+Date: Fri, 30 Sep 2022 07:12:39 +0200
+Subject: [PATCH 046/383] arm64: dts: rockchip: Enable vop2 and hdmi tx on
+ ODROID-M1
+
+Enable the RK356x Video Output Processor (VOP) 2 on ODROID M1.
+
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-7-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3568-odroid-m1.dts    | 47 +++++++++++++++++++
+ 1 file changed, 47 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -8,6 +8,7 @@
+ #include <dt-bindings/gpio/gpio.h>
+ #include <dt-bindings/leds/common.h>
+ #include <dt-bindings/pinctrl/rockchip.h>
++#include <dt-bindings/soc/rockchip,vop2.h>
+ #include "rk3568.dtsi"
+ 
+ / {
+@@ -37,6 +38,17 @@
+ 		regulator-max-microvolt = <12000000>;
+ 	};
+ 
++	hdmi-con {
++		compatible = "hdmi-connector";
++		type = "a";
++
++		port {
++			hdmi_con_in: endpoint {
++				remote-endpoint = <&hdmi_out_con>;
++			};
++		};
++	};
++
+ 	leds {
+ 		compatible = "gpio-leds";
+ 
+@@ -131,6 +143,24 @@
+ 	rx_delay = <0x2d>;
+ };
+ 
++&hdmi {
++	avdd-0v9-supply = <&vdda0v9_image>;
++	avdd-1v8-supply = <&vcca1v8_image>;
++	status = "okay";
++};
++
++&hdmi_in {
++	hdmi_in_vp0: endpoint {
++		remote-endpoint = <&vp0_out_hdmi>;
++	};
++};
++
++&hdmi_out {
++	hdmi_out_con: endpoint {
++		remote-endpoint = <&hdmi_con_in>;
++	};
++};
++
+ &i2c0 {
+ 	status = "okay";
+ 
+@@ -517,3 +547,20 @@
+ &uart2 {
+ 	status = "okay";
+ };
++
++&vop {
++	assigned-clocks = <&cru DCLK_VOP0>, <&cru DCLK_VOP1>;
++	assigned-clock-parents = <&pmucru PLL_HPLL>, <&cru PLL_VPLL>;
++	status = "okay";
++};
++
++&vop_mmu {
++	status = "okay";
++};
++
++&vp0 {
++	vp0_out_hdmi: endpoint@ROCKCHIP_VOP2_EP_HDMI0 {
++		reg = <ROCKCHIP_VOP2_EP_HDMI0>;
++		remote-endpoint = <&hdmi_in_vp0>;
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/047-arm64-dts-rockchip-Enable-HDMI-audio-on-ODROID-M1.patch b/target/linux/rockchip/patches-6.1/047-arm64-dts-rockchip-Enable-HDMI-audio-on-ODROID-M1.patch
new file mode 100644
index 0000000000..749ebbdcb0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/047-arm64-dts-rockchip-Enable-HDMI-audio-on-ODROID-M1.patch
@@ -0,0 +1,41 @@
+From 0c16d1de85af6fc1a3492043f4f753234f039222 Mon Sep 17 00:00:00 2001
+From: Aurelien Jarno <aurelien@aurel32.net>
+Date: Fri, 30 Sep 2022 07:12:40 +0200
+Subject: [PATCH 047/383] arm64: dts: rockchip: Enable HDMI audio on ODROID-M1.
+
+This enables the i2s0 controller and the hdmi-sound node on the
+ODROID-M1.
+
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-8-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts | 8 ++++++++
+ 1 file changed, 8 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -161,6 +161,10 @@
+ 	};
+ };
+ 
++&hdmi_sound {
++	status = "okay";
++};
++
+ &i2c0 {
+ 	status = "okay";
+ 
+@@ -400,6 +404,10 @@
+ 	};
+ };
+ 
++&i2s0_8ch {
++	status = "okay";
++};
++
+ &i2s1_8ch {
+ 	rockchip,trcm-sync-tx-only;
+ 	status = "okay";
diff --git a/target/linux/rockchip/patches-6.1/048-arm64-dts-rockchip-Enable-the-GPU-on-ODROID-M1.patch b/target/linux/rockchip/patches-6.1/048-arm64-dts-rockchip-Enable-the-GPU-on-ODROID-M1.patch
new file mode 100644
index 0000000000..460a5e9689
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/048-arm64-dts-rockchip-Enable-the-GPU-on-ODROID-M1.patch
@@ -0,0 +1,30 @@
+From 00b3ed9e0018aafc04508b308eb27d217f49f2fd Mon Sep 17 00:00:00 2001
+From: Aurelien Jarno <aurelien@aurel32.net>
+Date: Fri, 30 Sep 2022 07:12:41 +0200
+Subject: [PATCH 048/383] arm64: dts: rockchip: Enable the GPU on ODROID-M1
+
+Enable the GPU core on the Rockchip RK3568 ODROID-M1.
+
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-9-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -143,6 +143,11 @@
+ 	rx_delay = <0x2d>;
+ };
+ 
++&gpu {
++	mali-supply = <&vdd_gpu>;
++	status = "okay";
++};
++
+ &hdmi {
+ 	avdd-0v9-supply = <&vdda0v9_image>;
+ 	avdd-1v8-supply = <&vcca1v8_image>;
diff --git a/target/linux/rockchip/patches-6.1/049-arm64-dts-rockchip-Enable-the-USB-2.0-ports-on-ODROI.patch b/target/linux/rockchip/patches-6.1/049-arm64-dts-rockchip-Enable-the-USB-2.0-ports-on-ODROI.patch
new file mode 100644
index 0000000000..9d1f2b4341
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/049-arm64-dts-rockchip-Enable-the-USB-2.0-ports-on-ODROI.patch
@@ -0,0 +1,105 @@
+From c21340cb5528568bc46f11d7d71c8f0699bed4d7 Mon Sep 17 00:00:00 2001
+From: Aurelien Jarno <aurelien@aurel32.net>
+Date: Fri, 30 Sep 2022 07:12:42 +0200
+Subject: [PATCH 049/383] arm64: dts: rockchip: Enable the USB 2.0 ports on
+ ODROID-M1
+
+The Rockchip RK3568 has two USB OHCI/EHCI controllers connected to a PHY
+providing one host-only port and one OTG port. On the ODROID-M1, they
+are both used in host mode. The USB ports are powered by a DC/DC
+converter providing 5V and named VCC5V0_SYS on the schematics, followed
+by a power switch.
+
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-10-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3568-odroid-m1.dts    | 61 +++++++++++++++++++
+ 1 file changed, 61 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -105,6 +105,28 @@
+ 		regulator-max-microvolt = <3300000>;
+ 		vin-supply = <&dc_12v>;
+ 	};
++
++	vcc5v0_sys: vcc5v0-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&dc_12v>;
++	};
++
++	vcc5v0_usb_host: vcc5v0-usb-host-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usb_host";
++		enable-active-high;
++		gpio = <&gpio0 RK_PA6 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_usb_host_en_pin>;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
+ };
+ 
+ &cpu0 {
+@@ -463,6 +485,15 @@
+ 			rockchip,pins = <0 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+ 	};
++
++	usb {
++		vcc5v0_usb_host_en_pin: vcc5v0-usb-host-en-pin {
++			rockchip,pins = <0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++		vcc5v0_usb_otg_en_pin: vcc5v0-usb-otg-en-pin {
++			rockchip,pins = <0 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
+ };
+ 
+ &pmu_io_domains {
+@@ -561,6 +592,36 @@
+ 	status = "okay";
+ };
+ 
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++&usb_host1_ehci {
++	status = "okay";
++};
++
++&usb_host1_ohci {
++	status = "okay";
++};
++
++&usb2phy1 {
++	status = "okay";
++};
++
++&usb2phy1_host {
++	phy-supply = <&vcc5v0_usb_host>;
++	status = "okay";
++};
++
++&usb2phy1_otg {
++	phy-supply = <&vcc5v0_usb_host>;
++	status = "okay";
++};
++
+ &vop {
+ 	assigned-clocks = <&cru DCLK_VOP0>, <&cru DCLK_VOP1>;
+ 	assigned-clock-parents = <&pmucru PLL_HPLL>, <&cru PLL_VPLL>;
diff --git a/target/linux/rockchip/patches-6.1/050-arm64-dts-rockchip-Enable-the-USB-3.0-ports-on-ODROI.patch b/target/linux/rockchip/patches-6.1/050-arm64-dts-rockchip-Enable-the-USB-3.0-ports-on-ODROI.patch
new file mode 100644
index 0000000000..c8011f5d7c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/050-arm64-dts-rockchip-Enable-the-USB-3.0-ports-on-ODROI.patch
@@ -0,0 +1,108 @@
+From aa7171a8c4fde0b4c4561ee2132512c42403e720 Mon Sep 17 00:00:00 2001
+From: Aurelien Jarno <aurelien@aurel32.net>
+Date: Fri, 30 Sep 2022 07:12:43 +0200
+Subject: [PATCH 050/383] arm64: dts: rockchip: Enable the USB 3.0 ports on
+ ODROID-M1
+
+The Rockchip RK3568 has two USB XHCI controllers. The USB 2.0 signals
+are connected to a PHY providing one host-only port and one OTG port.
+The USB 3.0 signals are connected to two USB3.0/PCIE/SATA combo PHY.
+
+The ODROID M1 has 2 type A USB 3.0 connectors, with the USB 3.0 signals
+connected to the two combo PHYs. For the USB 2.0 signals, one connector
+is connected to the host-only PHY and uses the same power switch as the
+USB 2.0 ports. The other connector has its own power switch and is
+connected to the OTG PHY, which is also connected to a device only
+micro-USB connector. The purpose of this micro-USB connector is for
+firmware update using the Rockusb vendor specific USB class. Therefore
+it does not make sense to enable this port on Linux, and the PHY is
+forced to host mode.
+
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-11-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3568-odroid-m1.dts    | 49 ++++++++++++++++++-
+ 1 file changed, 48 insertions(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -127,6 +127,30 @@
+ 		regulator-max-microvolt = <5000000>;
+ 		vin-supply = <&vcc5v0_sys>;
+ 	};
++
++	vcc5v0_usb_otg: vcc5v0-usb-otg-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usb_otg";
++		enable-active-high;
++		gpio = <&gpio0 RK_PA5 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_usb_otg_en_pin>;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++};
++
++&combphy0 {
++	/* Used for USB3 */
++	phy-supply = <&vcc5v0_usb_host>;
++	status = "okay";
++};
++
++&combphy1 {
++	/* Used for USB3 */
++	phy-supply = <&vcc5v0_usb_otg>;
++	status = "okay";
+ };
+ 
+ &cpu0 {
+@@ -490,7 +514,7 @@
+ 		vcc5v0_usb_host_en_pin: vcc5v0-usb-host-en-pin {
+ 			rockchip,pins = <0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+-		vcc5v0_usb_otg_en_pin: vcc5v0-usb-otg-en-pin {
++		vcc5v0_usb_otg_en_pin: vcc5v0-usb-dr-en-pin {
+ 			rockchip,pins = <0 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+ 	};
+@@ -600,6 +624,11 @@
+ 	status = "okay";
+ };
+ 
++&usb_host0_xhci {
++	dr_mode = "host";
++	status = "okay";
++};
++
+ &usb_host1_ehci {
+ 	status = "okay";
+ };
+@@ -608,6 +637,24 @@
+ 	status = "okay";
+ };
+ 
++&usb_host1_xhci {
++	status = "okay";
++};
++
++&usb2phy0 {
++	status = "okay";
++};
++
++&usb2phy0_host {
++	phy-supply = <&vcc5v0_usb_host>;
++	status = "okay";
++};
++
++&usb2phy0_otg {
++	phy-supply = <&vcc5v0_usb_otg>;
++	status = "okay";
++};
++
+ &usb2phy1 {
+ 	status = "okay";
+ };
diff --git a/target/linux/rockchip/patches-6.1/051-arm64-dts-rockchip-Add-SATA-support-to-ODROID-M1.patch b/target/linux/rockchip/patches-6.1/051-arm64-dts-rockchip-Add-SATA-support-to-ODROID-M1.patch
new file mode 100644
index 0000000000..af86afb8f9
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/051-arm64-dts-rockchip-Add-SATA-support-to-ODROID-M1.patch
@@ -0,0 +1,41 @@
+From 3f203dc5bf6c41f7d0c7ed40417714828e1f1be3 Mon Sep 17 00:00:00 2001
+From: Aurelien Jarno <aurelien@aurel32.net>
+Date: Fri, 30 Sep 2022 07:12:44 +0200
+Subject: [PATCH 051/383] arm64: dts: rockchip: Add SATA support to ODROID-M1
+
+Enable the Combo PHY and SATA nodes in ODROID-M1.
+
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-12-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts | 9 +++++++++
+ 1 file changed, 9 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -153,6 +153,11 @@
+ 	status = "okay";
+ };
+ 
++&combphy2 {
++	/* used for SATA */
++	status = "okay";
++};
++
+ &cpu0 {
+ 	cpu-supply = <&vdd_cpu>;
+ };
+@@ -538,6 +543,10 @@
+ 	status = "okay";
+ };
+ 
++&sata2 {
++	status = "okay";
++};
++
+ &sdhci {
+ 	bus-width = <8>;
+ 	max-frequency = <200000000>;
diff --git a/target/linux/rockchip/patches-6.1/052-arm64-dts-rockchip-Add-PCIEe-v3-nodes-to-ODROID-M1.patch b/target/linux/rockchip/patches-6.1/052-arm64-dts-rockchip-Add-PCIEe-v3-nodes-to-ODROID-M1.patch
new file mode 100644
index 0000000000..4b5f96ed8d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/052-arm64-dts-rockchip-Add-PCIEe-v3-nodes-to-ODROID-M1.patch
@@ -0,0 +1,73 @@
+From e7f9dd0569304541100a44c9caa258b24a38bc98 Mon Sep 17 00:00:00 2001
+From: Aurelien Jarno <aurelien@aurel32.net>
+Date: Fri, 30 Sep 2022 07:12:45 +0200
+Subject: [PATCH 052/383] arm64: dts: rockchip: Add PCIEe v3 nodes to ODROID-M1
+
+Add nodes to ODROID-M1 to support PCIe v3 on the M2 slot.
+
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-13-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3568-odroid-m1.dts    | 34 +++++++++++++++++++
+ 1 file changed, 34 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -96,6 +96,19 @@
+ 		};
+ 	};
+ 
++	vcc3v3_pcie: vcc3v3-pcie-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_pcie";
++		enable-active-high;
++		gpio = <&gpio4 RK_PA7 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc3v3_pcie_en_pin>;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		startup-delay-us = <5000>;
++		vin-supply = <&vcc3v3_sys>;
++	};
++
+ 	vcc3v3_sys: vcc3v3-sys-regulator {
+ 		compatible = "regulator-fixed";
+ 		regulator-name = "vcc3v3_sys";
+@@ -479,6 +492,18 @@
+ 	};
+ };
+ 
++&pcie30phy {
++	status = "okay";
++};
++
++&pcie3x2 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&pcie_reset_pin>;
++	reset-gpios = <&gpio2 RK_PD6 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_pcie>;
++	status = "okay";
++};
++
+ &pinctrl {
+ 	fspi {
+ 		fspi_dual_io_pins: fspi-dual-io-pins {
+@@ -503,6 +528,15 @@
+ 		};
+ 	};
+ 
++	pcie {
++		pcie_reset_pin: pcie-reset-pin {
++			rockchip,pins = <2 RK_PD6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++		vcc3v3_pcie_en_pin: vcc3v3-pcie-en-pin {
++			rockchip,pins = <4 RK_PA7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
+ 	pmic {
+ 		pmic_int_l: pmic-int-l {
+ 			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
diff --git a/target/linux/rockchip/patches-6.1/053-arm64-dts-rockchip-Add-IR-receiver-node-to-ODROID-M1.patch b/target/linux/rockchip/patches-6.1/053-arm64-dts-rockchip-Add-IR-receiver-node-to-ODROID-M1.patch
new file mode 100644
index 0000000000..66b1395aa9
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/053-arm64-dts-rockchip-Add-IR-receiver-node-to-ODROID-M1.patch
@@ -0,0 +1,48 @@
+From 864f273ee7a4c441215ade9ac44d21ecba4501c2 Mon Sep 17 00:00:00 2001
+From: Aurelien Jarno <aurelien@aurel32.net>
+Date: Fri, 30 Sep 2022 07:12:46 +0200
+Subject: [PATCH 053/383] arm64: dts: rockchip: Add IR receiver node to
+ ODROID-M1
+
+Add the infrared receiver and its associated pinctrl entry. Note that
+there is an external pullup to VCC3V3_SYS.
+
+Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
+Tested-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20220930051246.391614-14-aurelien@aurel32.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts | 14 ++++++++++++++
+ 1 file changed, 14 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-odroid-m1.dts
+@@ -49,6 +49,13 @@
+ 		};
+ 	};
+ 
++	ir-receiver {
++		compatible = "gpio-ir-receiver";
++		gpios = <&gpio0 RK_PC2 GPIO_ACTIVE_LOW>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&ir_receiver_pin>;
++	};
++
+ 	leds {
+ 		compatible = "gpio-leds";
+ 
+@@ -519,6 +526,13 @@
+ 		};
+ 	};
+ 
++	ir-receiver {
++		ir_receiver_pin: ir-receiver-pin {
++			/* external pullup to VCC3V3_SYS */
++			rockchip,pins = <0 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
+ 	leds {
+ 		led_power_pin: led-power-pin {
+ 			rockchip,pins = <0 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>;
diff --git a/target/linux/rockchip/patches-6.1/054-arm64-dts-rockchip-Add-regulator-suffix-to-rock-3a.patch b/target/linux/rockchip/patches-6.1/054-arm64-dts-rockchip-Add-regulator-suffix-to-rock-3a.patch
new file mode 100644
index 0000000000..3790565ed4
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/054-arm64-dts-rockchip-Add-regulator-suffix-to-rock-3a.patch
@@ -0,0 +1,82 @@
+From 3de876fa1abbfd51eb1807ec80051f3b646bc6f9 Mon Sep 17 00:00:00 2001
+From: Chukun Pan <amadeus@jmu.edu.cn>
+Date: Thu, 6 Oct 2022 23:25:23 +0800
+Subject: [PATCH 054/383] arm64: dts: rockchip: Add regulator suffix to rock-3a
+
+Add -regulator suffix to regulator names on Radxa ROCK3 Model A
+board. This makes the naming more consistent.
+
+Signed-off-by: Chukun Pan <amadeus@jmu.edu.cn>
+Acked-by: Michael Riesch <michael.riesch@wolfvision.net>
+Link: https://lore.kernel.org/r/20221006152524.502445-2-amadeus@jmu.edu.cn
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts | 14 +++++++-------
+ 1 file changed, 7 insertions(+), 7 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
+@@ -60,7 +60,7 @@
+ 		};
+ 	};
+ 
+-	vcc12v_dcin: vcc12v-dcin {
++	vcc12v_dcin: vcc12v-dcin-regulator {
+ 		compatible = "regulator-fixed";
+ 		regulator-name = "vcc12v_dcin";
+ 		regulator-always-on;
+@@ -79,7 +79,7 @@
+ 		vin-supply = <&vcc5v0_sys>;
+ 	};
+ 
+-	vcc3v3_sys: vcc3v3-sys {
++	vcc3v3_sys: vcc3v3-sys-regulator {
+ 		compatible = "regulator-fixed";
+ 		regulator-name = "vcc3v3_sys";
+ 		regulator-always-on;
+@@ -89,7 +89,7 @@
+ 		vin-supply = <&vcc12v_dcin>;
+ 	};
+ 
+-	vcc5v0_sys: vcc5v0-sys {
++	vcc5v0_sys: vcc5v0-sys-regulator {
+ 		compatible = "regulator-fixed";
+ 		regulator-name = "vcc5v0_sys";
+ 		regulator-always-on;
+@@ -99,7 +99,7 @@
+ 		vin-supply = <&vcc12v_dcin>;
+ 	};
+ 
+-	vcc5v0_usb: vcc5v0-usb {
++	vcc5v0_usb: vcc5v0-usb-regulator {
+ 		compatible = "regulator-fixed";
+ 		regulator-name = "vcc5v0_usb";
+ 		regulator-always-on;
+@@ -109,7 +109,7 @@
+ 		vin-supply = <&vcc12v_dcin>;
+ 	};
+ 
+-	vcc5v0_usb_host: vcc5v0-usb-host {
++	vcc5v0_usb_host: vcc5v0-usb-host-regulator {
+ 		compatible = "regulator-fixed";
+ 		enable-active-high;
+ 		gpio = <&gpio0 RK_PA6 GPIO_ACTIVE_HIGH>;
+@@ -144,7 +144,7 @@
+ 		vin-supply = <&vcc5v0_usb>;
+ 	};
+ 
+-	vcc_cam: vcc-cam {
++	vcc_cam: vcc-cam-regulator {
+ 		compatible = "regulator-fixed";
+ 		enable-active-high;
+ 		gpio = <&gpio1 RK_PB1 GPIO_ACTIVE_HIGH>;
+@@ -160,7 +160,7 @@
+ 		};
+ 	};
+ 
+-	vcc_mipi: vcc-mipi {
++	vcc_mipi: vcc-mipi-regulator {
+ 		compatible = "regulator-fixed";
+ 		enable-active-high;
+ 		gpio = <&gpio3 RK_PC0 GPIO_ACTIVE_HIGH>;
diff --git a/target/linux/rockchip/patches-6.1/055-arm64-dts-rockchip-Add-PCIe-v3-nodes-to-rock-3a.patch b/target/linux/rockchip/patches-6.1/055-arm64-dts-rockchip-Add-PCIe-v3-nodes-to-rock-3a.patch
new file mode 100644
index 0000000000..5328622d51
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/055-arm64-dts-rockchip-Add-PCIe-v3-nodes-to-rock-3a.patch
@@ -0,0 +1,76 @@
+From c387e718b0581d7c484064e40ef88a8a97a3e444 Mon Sep 17 00:00:00 2001
+From: Chukun Pan <amadeus@jmu.edu.cn>
+Date: Thu, 6 Oct 2022 23:25:24 +0800
+Subject: [PATCH 055/383] arm64: dts: rockchip: Add PCIe v3 nodes to rock-3a
+
+Add Nodes to Radxa ROCK3 Model A board to support PCIe v3.
+
+Tested-by: Anand Moon <linux.amoon@gmail.com>
+Signed-off-by: Chukun Pan <amadeus@jmu.edu.cn>
+Link: https://lore.kernel.org/r/20221006152524.502445-3-amadeus@jmu.edu.cn
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3568-rock-3a.dts      | 44 +++++++++++++++++++
+ 1 file changed, 44 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
+@@ -67,6 +67,37 @@
+ 		regulator-boot-on;
+ 	};
+ 
++	pcie30_avdd0v9: pcie30-avdd0v9-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "pcie30_avdd0v9";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <900000>;
++		regulator-max-microvolt = <900000>;
++		vin-supply = <&vcc3v3_sys>;
++	};
++
++	pcie30_avdd1v8: pcie30-avdd1v8-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "pcie30_avdd1v8";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <1800000>;
++		regulator-max-microvolt = <1800000>;
++		vin-supply = <&vcc3v3_sys>;
++	};
++
++	/* pi6c pcie clock generator */
++	vcc3v3_pi6c_03: vcc3v3-pi6c-03-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_pi6c_03";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
+ 	vcc3v3_pcie: vcc3v3-pcie-regulator {
+ 		compatible = "regulator-fixed";
+ 		enable-active-high;
+@@ -546,6 +577,19 @@
+ 	vpcie3v3-supply = <&vcc3v3_pcie>;
+ 	status = "okay";
+ };
++
++&pcie30phy {
++	phy-supply = <&vcc3v3_pi6c_03>;
++	status = "okay";
++};
++
++&pcie3x2 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&pcie30x2m1_pins>;
++	reset-gpios = <&gpio2 RK_PD6 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_pcie>;
++	status = "okay";
++};
+ 
+ &pinctrl {
+ 	cam {
diff --git a/target/linux/rockchip/patches-6.1/056-arm64-dts-rockchip-add-BT-wifi-nodes-to-Pinephone-Pr.patch b/target/linux/rockchip/patches-6.1/056-arm64-dts-rockchip-add-BT-wifi-nodes-to-Pinephone-Pr.patch
new file mode 100644
index 0000000000..0c458df118
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/056-arm64-dts-rockchip-add-BT-wifi-nodes-to-Pinephone-Pr.patch
@@ -0,0 +1,130 @@
+From f3f4c92922cb0c8fdcf5fe31cb47babba18aab1b Mon Sep 17 00:00:00 2001
+From: Tom Fitzhenry <tom@tom-fitzhenry.me.uk>
+Date: Sun, 2 Oct 2022 20:28:09 +1100
+Subject: [PATCH 056/383] arm64: dts: rockchip: add BT/wifi nodes to Pinephone
+ Pro
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+Pinephone Pro includes a AzureWave AW-CM256SM wifi (sdio0) and
+bt (uart0) combo module, which is based on Cypress
+CYP43455 (BCM43455).
+
+The CYP43455 datasheet ("Power-Up Sequence and Timing") documents:
+* needing to wait 10ms between consecutive WL_REG_ON toggles
+* needing to wait 110ms between power-on and SDIO access.
+
+Signed-off-by: Tom Fitzhenry <tom@tom-fitzhenry.me.uk>
+Reviewed-by: Ondřej Jirman <megi@xff.cz>
+Link: https://lore.kernel.org/r/20221002092809.451501-1-tom@tom-fitzhenry.me.uk
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3399-pinephone-pro.dts     | 76 +++++++++++++++++++
+ 1 file changed, 76 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-pinephone-pro.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3399-pinephone-pro.dts
+@@ -81,6 +81,27 @@
+ 		regulator-max-microvolt = <1800000>;
+ 		vin-supply = <&vcc3v3_sys>;
+ 	};
++
++	wifi_pwrseq: sdio-wifi-pwrseq {
++		compatible = "mmc-pwrseq-simple";
++		clocks = <&rk818 1>;
++		clock-names = "ext_clock";
++		pinctrl-names = "default";
++		pinctrl-0 = <&wifi_enable_h_pin>;
++		/*
++		 * Wait between power-on and SDIO access for CYP43455
++		 * POR circuit.
++		 */
++		post-power-on-delay-ms = <110>;
++		/*
++		 * Wait between consecutive toggles for CYP43455 CBUCK
++		 * regulator discharge.
++		 */
++		power-off-delay-us = <10000>;
++
++		/* WL_REG_ON on module */
++		reset-gpios = <&gpio0 RK_PB2 GPIO_ACTIVE_LOW>;
++	};
+ };
+ 
+ &cpu_alert0 {
+@@ -367,11 +388,45 @@
+ 		};
+ 	};
+ 
++	sdio-pwrseq {
++		wifi_enable_h_pin: wifi-enable-h-pin {
++			rockchip,pins = <0 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
+ 	sound {
+ 		vcc1v8_codec_en: vcc1v8-codec-en {
+ 			rockchip,pins = <3 RK_PA4 RK_FUNC_GPIO &pcfg_pull_down>;
+ 		};
+ 	};
++
++	wireless-bluetooth {
++		bt_wake_pin: bt-wake-pin {
++			rockchip,pins = <2 RK_PD2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		bt_host_wake_pin: bt-host-wake-pin {
++			rockchip,pins = <0 RK_PA4 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		bt_reset_pin: bt-reset-pin {
++			rockchip,pins = <0 RK_PB1 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&sdio0 {
++	bus-width = <4>;
++	cap-sd-highspeed;
++	cap-sdio-irq;
++	disable-wp;
++	keep-power-in-suspend;
++	mmc-pwrseq = <&wifi_pwrseq>;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdio0_bus4 &sdio0_cmd &sdio0_clk>;
++	sd-uhs-sdr104;
++	status = "okay";
+ };
+ 
+ &sdmmc {
+@@ -400,6 +455,27 @@
+ 	status = "okay";
+ };
+ 
++&uart0 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&uart0_xfer &uart0_cts &uart0_rts>;
++	uart-has-rtscts;
++	status = "okay";
++
++	bluetooth {
++		compatible = "brcm,bcm4345c5";
++		clocks = <&rk818 1>;
++		clock-names = "lpo";
++		device-wakeup-gpios = <&gpio2 RK_PD2 GPIO_ACTIVE_HIGH>;
++		host-wakeup-gpios = <&gpio0 RK_PA4 GPIO_ACTIVE_HIGH>;
++		max-speed = <1500000>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&bt_host_wake_pin &bt_wake_pin &bt_reset_pin>;
++		shutdown-gpios = <&gpio0 RK_PB1 GPIO_ACTIVE_HIGH>;
++		vbat-supply = <&vcc3v3_sys>;
++		vddio-supply = <&vcc_1v8>;
++	};
++};
++
+ &uart2 {
+ 	status = "okay";
+ };
diff --git a/target/linux/rockchip/patches-6.1/057-arm64-dts-rockchip-enable-tsadc-for-ROCK-4C.patch b/target/linux/rockchip/patches-6.1/057-arm64-dts-rockchip-enable-tsadc-for-ROCK-4C.patch
new file mode 100644
index 0000000000..82c86cf4e6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/057-arm64-dts-rockchip-enable-tsadc-for-ROCK-4C.patch
@@ -0,0 +1,30 @@
+From cc2633c6194c9dd199e3a662c70e7ee6139d45de Mon Sep 17 00:00:00 2001
+From: FUKAUMI Naoki <naoki@radxa.com>
+Date: Tue, 18 Oct 2022 07:22:42 +0000
+Subject: [PATCH 057/383] arm64: dts: rockchip: enable tsadc for ROCK 4C+
+
+add and enable Temperature Sensor ADC for Radxa ROCK 4C+
+
+Signed-off-by: FUKAUMI Naoki <naoki@radxa.com>
+Link: https://lore.kernel.org/r/20221018072242.2348995-1-naoki@radxa.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399-rock-4c-plus.dts | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-rock-4c-plus.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3399-rock-4c-plus.dts
+@@ -600,6 +600,12 @@
+ 	status = "okay";
+ };
+ 
++&tsadc {
++	rockchip,hw-tshut-mode = <1>;
++	rockchip,hw-tshut-polarity = <1>;
++	status = "okay";
++};
++
+ &u2phy0 {
+ 	status = "okay";
+ 
diff --git a/target/linux/rockchip/patches-6.1/058-arm64-dts-rockchip-add-rk3328-crypto-node.patch b/target/linux/rockchip/patches-6.1/058-arm64-dts-rockchip-add-rk3328-crypto-node.patch
new file mode 100644
index 0000000000..39b0a2187b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/058-arm64-dts-rockchip-add-rk3328-crypto-node.patch
@@ -0,0 +1,36 @@
+From a0402c4cf070edb8c0c3187a91f3359bfbf3535d Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:05 +0000
+Subject: [PATCH 058/383] arm64: dts: rockchip: add rk3328 crypto node
+
+rk3328 has a crypto IP handled by the rk3288 crypto driver so adds a
+node for it.
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Link: https://lore.kernel.org/r/20220927075511.3147847-28-clabbe@baylibre.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3328.dtsi | 11 +++++++++++
+ 1 file changed, 11 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3328.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3328.dtsi
+@@ -1025,6 +1025,17 @@
+ 		      (GIC_CPU_MASK_SIMPLE(4) | IRQ_TYPE_LEVEL_HIGH)>;
+ 	};
+ 
++	crypto: crypto@ff060000 {
++		compatible = "rockchip,rk3328-crypto";
++		reg = <0x0 0xff060000 0x0 0x4000>;
++		interrupts = <GIC_SPI 30 IRQ_TYPE_LEVEL_HIGH>;
++		clocks = <&cru HCLK_CRYPTO_MST>, <&cru HCLK_CRYPTO_SLV>,
++			 <&cru SCLK_CRYPTO>;
++		clock-names = "hclk_master", "hclk_slave", "sclk";
++		resets = <&cru SRST_CRYPTO>;
++		reset-names = "crypto-rst";
++	};
++
+ 	pinctrl: pinctrl {
+ 		compatible = "rockchip,rk3328-pinctrl";
+ 		rockchip,grf = <&grf>;
diff --git a/target/linux/rockchip/patches-6.1/059-arm64-dts-rockchip-rk3399-add-crypto-node.patch b/target/linux/rockchip/patches-6.1/059-arm64-dts-rockchip-rk3399-add-crypto-node.patch
new file mode 100644
index 0000000000..01b72f5a1d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/059-arm64-dts-rockchip-rk3399-add-crypto-node.patch
@@ -0,0 +1,47 @@
+From d2fd927905eebc785819e714c7bee96508427de4 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:06 +0000
+Subject: [PATCH 059/383] arm64: dts: rockchip: rk3399: add crypto node
+
+The rk3399 has a crypto IP handled by the rk3288 crypto driver so adds a
+node for it.
+
+Tested-by Diederik de Haas <didi.debian@cknow.org>
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Link: https://lore.kernel.org/r/20220927075511.3147847-29-clabbe@baylibre.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399.dtsi | 20 ++++++++++++++++++++
+ 1 file changed, 20 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399.dtsi
+@@ -582,6 +582,26 @@
+ 		status = "disabled";
+ 	};
+ 
++	crypto0: crypto@ff8b0000 {
++		compatible = "rockchip,rk3399-crypto";
++		reg = <0x0 0xff8b0000 0x0 0x4000>;
++		interrupts = <GIC_SPI 0 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru HCLK_M_CRYPTO0>, <&cru HCLK_S_CRYPTO0>, <&cru SCLK_CRYPTO0>;
++		clock-names = "hclk_master", "hclk_slave", "sclk";
++		resets = <&cru SRST_CRYPTO0>, <&cru SRST_CRYPTO0_S>, <&cru SRST_CRYPTO0_M>;
++		reset-names = "master", "lave", "crypto";
++	};
++
++	crypto1: crypto@ff8b8000 {
++		compatible = "rockchip,rk3399-crypto";
++		reg = <0x0 0xff8b8000 0x0 0x4000>;
++		interrupts = <GIC_SPI 135 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru HCLK_M_CRYPTO1>, <&cru HCLK_S_CRYPTO1>, <&cru SCLK_CRYPTO1>;
++		clock-names = "hclk_master", "hclk_slave", "sclk";
++		resets = <&cru SRST_CRYPTO1>, <&cru SRST_CRYPTO1_S>, <&cru SRST_CRYPTO1_M>;
++		reset-names = "master", "slave", "crypto";
++	};
++
+ 	i2c1: i2c@ff110000 {
+ 		compatible = "rockchip,rk3399-i2c";
+ 		reg = <0x0 0xff110000 0x0 0x1000>;
diff --git a/target/linux/rockchip/patches-6.1/060-arm64-dts-rockchip-fix-spdif-fe460000-ordering-on-rk.patch b/target/linux/rockchip/patches-6.1/060-arm64-dts-rockchip-fix-spdif-fe460000-ordering-on-rk.patch
new file mode 100644
index 0000000000..a38f95e308
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/060-arm64-dts-rockchip-fix-spdif-fe460000-ordering-on-rk.patch
@@ -0,0 +1,60 @@
+From 3e81ca36ea3d245709b3c7d0b0f905f9980ae7f0 Mon Sep 17 00:00:00 2001
+From: Heiko Stuebner <heiko@sntech.de>
+Date: Sun, 30 Oct 2022 20:34:42 +0100
+Subject: [PATCH 060/383] arm64: dts: rockchip: fix spdif@fe460000 ordering on
+ rk356x
+
+Move the node to its correct position, based on its
+mmio-address.
+
+Link: https://lore.kernel.org/all/20221030193708.1671069-1-heiko@sntech.de
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk356x.dtsi | 28 ++++++++++++------------
+ 1 file changed, 14 insertions(+), 14 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk356x.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk356x.dtsi
+@@ -1051,20 +1051,6 @@
+ 		status = "disabled";
+ 	};
+ 
+-	spdif: spdif@fe460000 {
+-		compatible = "rockchip,rk3568-spdif";
+-		reg = <0x0 0xfe460000 0x0 0x1000>;
+-		interrupts = <GIC_SPI 102 IRQ_TYPE_LEVEL_HIGH>;
+-		clock-names = "mclk", "hclk";
+-		clocks = <&cru MCLK_SPDIF_8CH>, <&cru HCLK_SPDIF_8CH>;
+-		dmas = <&dmac1 1>;
+-		dma-names = "tx";
+-		pinctrl-names = "default";
+-		pinctrl-0 = <&spdifm0_tx>;
+-		#sound-dai-cells = <0>;
+-		status = "disabled";
+-	};
+-
+ 	i2s0_8ch: i2s@fe400000 {
+ 		compatible = "rockchip,rk3568-i2s-tdm";
+ 		reg = <0x0 0xfe400000 0x0 0x1000>;
+@@ -1143,6 +1129,20 @@
+ 		#sound-dai-cells = <0>;
+ 		status = "disabled";
+ 	};
++
++	spdif: spdif@fe460000 {
++		compatible = "rockchip,rk3568-spdif";
++		reg = <0x0 0xfe460000 0x0 0x1000>;
++		interrupts = <GIC_SPI 102 IRQ_TYPE_LEVEL_HIGH>;
++		clock-names = "mclk", "hclk";
++		clocks = <&cru MCLK_SPDIF_8CH>, <&cru HCLK_SPDIF_8CH>;
++		dmas = <&dmac1 1>;
++		dma-names = "tx";
++		pinctrl-names = "default";
++		pinctrl-0 = <&spdifm0_tx>;
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
+ 
+ 	dmac0: dma-controller@fe530000 {
+ 		compatible = "arm,pl330", "arm,primecell";
diff --git a/target/linux/rockchip/patches-6.1/061-arm64-dts-rockchip-RK356x-Add-I2S2-device-node.patch b/target/linux/rockchip/patches-6.1/061-arm64-dts-rockchip-RK356x-Add-I2S2-device-node.patch
new file mode 100644
index 0000000000..e36cd16bb7
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/061-arm64-dts-rockchip-RK356x-Add-I2S2-device-node.patch
@@ -0,0 +1,46 @@
+From d6fba133b7d06540f483d9add68a08d2d291ad81 Mon Sep 17 00:00:00 2001
+From: Shengyu Qu <wiagn233@outlook.com>
+Date: Sun, 30 Oct 2022 01:09:04 +0800
+Subject: [PATCH 061/383] arm64: dts: rockchip: RK356x: Add I2S2 device node
+
+This patch adds I2S2 device tree node for RK3566/RK3568.
+
+Signed-off-by: Shengyu Qu <wiagn233@outlook.com>
+Link: https://lore.kernel.org/r/OS3P286MB259771C12F2B15A4DDF435FE98359@OS3P286MB2597.JPNP286.PROD.OUTLOOK.COM
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk356x.dtsi | 22 ++++++++++++++++++++++
+ 1 file changed, 22 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk356x.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk356x.dtsi
+@@ -1093,6 +1093,28 @@
+ 		status = "disabled";
+ 	};
+ 
++	i2s2_2ch: i2s@fe420000 {
++		compatible = "rockchip,rk3568-i2s-tdm";
++		reg = <0x0 0xfe420000 0x0 0x1000>;
++		interrupts = <GIC_SPI 54 IRQ_TYPE_LEVEL_HIGH>;
++		assigned-clocks = <&cru CLK_I2S2_2CH_SRC>;
++		assigned-clock-rates = <1188000000>;
++		clocks = <&cru MCLK_I2S2_2CH>, <&cru MCLK_I2S2_2CH>, <&cru HCLK_I2S2_2CH>;
++		clock-names = "mclk_tx", "mclk_rx", "hclk";
++		dmas = <&dmac1 4>, <&dmac1 5>;
++		dma-names = "tx", "rx";
++		resets = <&cru SRST_M_I2S2_2CH>;
++		reset-names = "m";
++		rockchip,grf = <&grf>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&i2s2m0_sclktx
++				&i2s2m0_lrcktx
++				&i2s2m0_sdi
++				&i2s2m0_sdo>;
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
+ 	i2s3_2ch: i2s@fe430000 {
+ 		compatible = "rockchip,rk3568-i2s-tdm";
+ 		reg = <0x0 0xfe430000 0x0 0x1000>;
diff --git a/target/linux/rockchip/patches-6.1/062-arm64-dts-rockchip-Add-I2S2-node-for-RADXA-Rock-3A.patch b/target/linux/rockchip/patches-6.1/062-arm64-dts-rockchip-Add-I2S2-node-for-RADXA-Rock-3A.patch
new file mode 100644
index 0000000000..f05f37d4dc
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/062-arm64-dts-rockchip-Add-I2S2-node-for-RADXA-Rock-3A.patch
@@ -0,0 +1,31 @@
+From 3415222772da49df29e3f69299bc83e0bf23980c Mon Sep 17 00:00:00 2001
+From: Shengyu Qu <wiagn233@outlook.com>
+Date: Sun, 30 Oct 2022 01:09:06 +0800
+Subject: [PATCH 062/383] arm64: dts: rockchip: Add I2S2 node for RADXA Rock 3A
+
+This patch adds I2S2 node for Radxa Rock 3A's M.2 E key slot for
+Bluetooth PCM input. I2S2 is not used now, but could be configured
+for Bluetooth HFP over PCM in future patches.
+
+Signed-off-by: Shengyu Qu <wiagn233@outlook.com>
+Link: https://lore.kernel.org/r/OS3P286MB259791E603F96942F51332D098359@OS3P286MB2597.JPNP286.PROD.OUTLOOK.COM
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
+@@ -558,6 +558,11 @@
+ 	status = "okay";
+ };
+ 
++&i2s2_2ch {
++	rockchip,trcm-sync-tx-only;
++	status = "okay";
++};
++
+ &mdio1 {
+ 	rgmii_phy1: ethernet-phy@0 {
+ 		compatible = "ethernet-phy-ieee802.3-c22";
diff --git a/target/linux/rockchip/patches-6.1/063-arm64-dts-rockchip-Add-nodes-for-SDIO-UART-Wi-Fi-Blu.patch b/target/linux/rockchip/patches-6.1/063-arm64-dts-rockchip-Add-nodes-for-SDIO-UART-Wi-Fi-Blu.patch
new file mode 100644
index 0000000000..bf7a5213e3
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/063-arm64-dts-rockchip-Add-nodes-for-SDIO-UART-Wi-Fi-Blu.patch
@@ -0,0 +1,116 @@
+From ca0aad3317915a384099e27252da5a2bd56983c2 Mon Sep 17 00:00:00 2001
+From: Shengyu Qu <wiagn233@outlook.com>
+Date: Sun, 30 Oct 2022 01:09:08 +0800
+Subject: [PATCH 063/383] arm64: dts: rockchip: Add nodes for SDIO/UART
+ Wi-Fi/Bluetooth modules to Radxa Rock 3A
+
+This patch adds related bus/pinctrl/power nodes to enable support for
+Radxa's Wi-Fi Bluetooth combo module.
+Tested with RADXA A6 module, which uses AP6275S (BCM43752A2)
+
+Signed-off-by: Shengyu Qu <wiagn233@outlook.com>
+Link: https://lore.kernel.org/r/OS3P286MB25972313C916A68698B1CD8698359@OS3P286MB2597.JPNP286.PROD.OUTLOOK.COM
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3568-rock-3a.dts      | 69 +++++++++++++++++++
+ 1 file changed, 69 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
+@@ -60,6 +60,17 @@
+ 		};
+ 	};
+ 
++	sdio_pwrseq: sdio-pwrseq {
++		compatible = "mmc-pwrseq-simple";
++		clocks = <&rk809 1>;
++		clock-names = "ext_clock";
++		pinctrl-names = "default";
++		pinctrl-0 = <&wifi_enable>;
++		post-power-on-delay-ms = <100>;
++		power-off-delay-us = <5000000>;
++		reset-gpios = <&gpio3 RK_PD4 GPIO_ACTIVE_LOW>;
++	};
++
+ 	vcc12v_dcin: vcc12v-dcin-regulator {
+ 		compatible = "regulator-fixed";
+ 		regulator-name = "vcc12v_dcin";
+@@ -655,6 +666,26 @@
+ 			rockchip,pins = <0 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+ 	};
++
++	bt {
++		bt_enable: bt-enable {
++			rockchip,pins = <4 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		bt_host_wake: bt-host-wake {
++			rockchip,pins = <4 RK_PB4 RK_FUNC_GPIO &pcfg_pull_down>;
++		};
++
++		bt_wake: bt-wake {
++			rockchip,pins = <4 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	sdio-pwrseq {
++		wifi_enable: wifi-enable {
++			rockchip,pins = <3 RK_PD4 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
+ };
+ 
+ &pmu_io_domains {
+@@ -699,12 +730,50 @@
+ 	status = "okay";
+ };
+ 
++&sdmmc2 {
++	supports-sdio;
++	bus-width = <4>;
++	disable-wp;
++	cap-sd-highspeed;
++	cap-sdio-irq;
++	keep-power-in-suspend;
++	mmc-pwrseq = <&sdio_pwrseq>;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc2m0_bus4 &sdmmc2m0_cmd &sdmmc2m0_clk>;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc3v3_sys>;
++	vqmmc-supply = <&vcc_1v8>;
++	status = "okay";
++};
++
+ &tsadc {
+ 	rockchip,hw-tshut-mode = <1>;
+ 	rockchip,hw-tshut-polarity = <0>;
+ 	status = "okay";
+ };
+ 
++&uart1 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&uart1m0_xfer &uart1m0_ctsn &uart1m0_rtsn>;
++	uart-has-rtscts;
++	status = "okay";
++
++	bluetooth {
++		compatible = "brcm,bcm43438-bt";
++		clocks = <&rk809 1>;
++		clock-names = "lpo";
++		device-wakeup-gpios = <&gpio4 RK_PB5 GPIO_ACTIVE_HIGH>;
++		host-wakeup-gpios = <&gpio4 RK_PB4 GPIO_ACTIVE_HIGH>;
++		shutdown-gpios = <&gpio4 RK_PB2 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&bt_host_wake &bt_wake &bt_enable>;
++		vbat-supply = <&vcc3v3_sys>;
++		vddio-supply = <&vcc_1v8>;
++		/* vddio comes from regulator on module, use IO bank voltage instead */
++	};
++};
++
+ &uart2 {
+ 	status = "okay";
+ };
diff --git a/target/linux/rockchip/patches-6.1/064-arm64-dts-rockchip-add-Anbernic-RG353V-and-RG353VS.patch b/target/linux/rockchip/patches-6.1/064-arm64-dts-rockchip-add-Anbernic-RG353V-and-RG353VS.patch
new file mode 100644
index 0000000000..90283a86a7
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/064-arm64-dts-rockchip-add-Anbernic-RG353V-and-RG353VS.patch
@@ -0,0 +1,575 @@
+From e45318fbf5941fc16483e9da65da867643b4cf91 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Fri, 28 Oct 2022 13:40:43 -0500
+Subject: [PATCH 064/383] arm64: dts: rockchip: add Anbernic RG353V and RG353VS
+
+Anbernic RG353V and RG353VS are both RK3566 based handheld gaming devices
+from Anbernic.
+
+They are functionally very similar to the RG353P with the following
+distinct differences:
+ - The battery size of the RG353V and RG353VS is 3200mAh instead of
+   3500mAh.
+ - The audio uses the PMIC's internal amplifier for a mono speaker
+   instead of an external amplifier with stereo speakers.
+ - The GPIOs for the R1 and R2 buttons are switched.
+
+As for the differences between the RG353V and RG353VS, they are as
+follows:
+ - The RG353VS has no touchscreen on i2c2.
+ - The RG353VS has no eMMC.
+ - The RG353VS has 1GB of RAM instead of 2GB.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20221028184045.13113-3-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   2 +
+ .../dts/rockchip/rk3566-anbernic-rg353p.dts   |  83 +++++++------
+ .../dts/rockchip/rk3566-anbernic-rg353v.dts   | 114 ++++++++++++++++++
+ .../dts/rockchip/rk3566-anbernic-rg353vs.dts  |  87 +++++++++++++
+ .../dts/rockchip/rk3566-anbernic-rg353x.dtsi  |  60 +++++++++
+ .../dts/rockchip/rk3566-anbernic-rg503.dts    |  51 ++++++++
+ .../dts/rockchip/rk3566-anbernic-rgxx3.dtsi   |  46 -------
+ 7 files changed, 358 insertions(+), 85 deletions(-)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353v.dts
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353vs.dts
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353x.dtsi
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -63,6 +63,8 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-sa
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-sapphire-excavator.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399pro-rock-pi-n10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-anbernic-rg353p.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-anbernic-rg353v.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-anbernic-rg353vs.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-anbernic-rg503.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-pinenote-v1.1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-pinenote-v1.2.dtb
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353p.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353p.dts
+@@ -5,7 +5,7 @@
+ #include <dt-bindings/gpio/gpio.h>
+ #include <dt-bindings/input/linux-event-codes.h>
+ #include <dt-bindings/pinctrl/rockchip.h>
+-#include "rk3566-anbernic-rgxx3.dtsi"
++#include "rk3566-anbernic-rg353x.dtsi"
+ 
+ / {
+ 	model = "RG353P";
+@@ -18,26 +18,47 @@
+ 		mmc3 = &sdmmc2;
+ 	};
+ 
+-	backlight: backlight {
+-		compatible = "pwm-backlight";
+-		power-supply = <&vcc_sys>;
+-		pwms = <&pwm4 0 25000 0>;
++	/* Channels reversed for both headphones and speakers. */
++	sound {
++		compatible = "simple-audio-card";
++		simple-audio-card,name = "rk817_ext";
++		simple-audio-card,aux-devs = <&spk_amp>;
++		simple-audio-card,format = "i2s";
++		simple-audio-card,hp-det-gpio = <&gpio4 RK_PC6 GPIO_ACTIVE_HIGH>;
++		simple-audio-card,mclk-fs = <256>;
++		simple-audio-card,widgets =
++			"Microphone", "Mic Jack",
++			"Headphone", "Headphones",
++			"Speaker", "Internal Speakers";
++		simple-audio-card,routing =
++			"MICL", "Mic Jack",
++			"Headphones", "HPOL",
++			"Headphones", "HPOR",
++			"Internal Speakers", "Speaker Amp OUTL",
++			"Internal Speakers", "Speaker Amp OUTR",
++			"Speaker Amp INL", "HPOL",
++			"Speaker Amp INR", "HPOR";
++		simple-audio-card,pin-switches = "Internal Speakers";
++
++		simple-audio-card,codec {
++			sound-dai = <&rk817>;
++		};
++
++		simple-audio-card,cpu {
++			sound-dai = <&i2s1_8ch>;
++		};
++	};
++
++	spk_amp: audio-amplifier {
++		compatible = "simple-audio-amplifier";
++		enable-gpios = <&gpio4 RK_PC2 GPIO_ACTIVE_HIGH>;
++		pinctrl-0 = <&spk_amp_enable_h>;
++		pinctrl-names = "default";
++		sound-name-prefix = "Speaker Amp";
+ 	};
+ };
+ 
+ &gpio_keys_control {
+-	button-a {
+-		gpios = <&gpio3 RK_PC2 GPIO_ACTIVE_LOW>;
+-		label = "EAST";
+-		linux,code = <BTN_EAST>;
+-	};
+-
+-	button-left {
+-		gpios = <&gpio3 RK_PA6 GPIO_ACTIVE_LOW>;
+-		label = "DPAD-LEFT";
+-		linux,code = <BTN_DPAD_LEFT>;
+-	};
+-
+ 	button-r1 {
+ 		gpios = <&gpio3 RK_PB4 GPIO_ACTIVE_LOW>;
+ 		label = "TR";
+@@ -49,27 +70,6 @@
+ 		label = "TR2";
+ 		linux,code = <BTN_TR2>;
+ 	};
+-
+-	button-right {
+-		gpios = <&gpio3 RK_PA5 GPIO_ACTIVE_LOW>;
+-		label = "DPAD-RIGHT";
+-		linux,code = <BTN_DPAD_RIGHT>;
+-	};
+-
+-	button-y {
+-		gpios = <&gpio3 RK_PC1 GPIO_ACTIVE_LOW>;
+-		label = "WEST";
+-		linux,code = <BTN_WEST>;
+-	};
+-};
+-
+-&i2c0 {
+-	/* This hardware is physically present but unused. */
+-	power-monitor@62 {
+-		compatible = "cellwise,cw2015";
+-		reg = <0x62>;
+-		status = "disabled";
+-	};
+ };
+ 
+ &i2c2 {
+@@ -78,8 +78,13 @@
+ 	status = "okay";
+ };
+ 
+-&pwm4 {
+-	status = "okay";
++&pinctrl {
++	audio-amplifier {
++		spk_amp_enable_h: spk-amp-enable-h {
++			rockchip,pins =
++				<4 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
+ };
+ 
+ &sdhci {
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353v.dts
+@@ -0,0 +1,114 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/input/linux-event-codes.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rk3566-anbernic-rg353x.dtsi"
++
++/ {
++	model = "RG353V";
++	compatible = "anbernic,rg353v", "rockchip,rk3566";
++
++	aliases {
++		mmc0 = &sdhci;
++		mmc1 = &sdmmc0;
++		mmc2 = &sdmmc1;
++		mmc3 = &sdmmc2;
++	};
++
++	battery: battery {
++		compatible = "simple-battery";
++		charge-full-design-microamp-hours = <3151000>;
++		charge-term-current-microamp = <300000>;
++		constant-charge-current-max-microamp = <2000000>;
++		constant-charge-voltage-max-microvolt = <4200000>;
++		factory-internal-resistance-micro-ohms = <117000>;
++		voltage-max-design-microvolt = <4172000>;
++		voltage-min-design-microvolt = <3400000>;
++
++		ocv-capacity-celsius = <20>;
++		ocv-capacity-table-0 =  <4172000 100>, <4054000 95>, <3984000 90>, <3926000 85>,
++					<3874000 80>, <3826000 75>, <3783000 70>, <3746000 65>,
++					<3714000 60>, <3683000 55>, <3650000 50>, <3628000 45>,
++					<3612000 40>, <3600000 35>, <3587000 30>, <3571000 25>,
++					<3552000 20>, <3525000 15>, <3492000 10>, <3446000 5>,
++					<3400000 0>;
++	};
++
++	/* Channels reversed for headphones. */
++	sound {
++		compatible = "simple-audio-card";
++		simple-audio-card,name = "rk817_int";
++		simple-audio-card,format = "i2s";
++		simple-audio-card,hp-det-gpio = <&gpio4 RK_PC6 GPIO_ACTIVE_HIGH>;
++		simple-audio-card,mclk-fs = <256>;
++		simple-audio-card,widgets =
++			"Microphone", "Mic Jack",
++			"Headphone", "Headphones",
++			"Speaker", "Internal Speakers";
++		simple-audio-card,routing =
++			"MICL", "Mic Jack",
++			"Headphones", "HPOL",
++			"Headphones", "HPOR",
++			"Internal Speakers", "SPKO";
++
++		simple-audio-card,codec {
++			sound-dai = <&rk817>;
++		};
++
++		simple-audio-card,cpu {
++			sound-dai = <&i2s1_8ch>;
++		};
++	};
++};
++
++&gpio_keys_control {
++	button-r1 {
++		gpios = <&gpio3 RK_PB3 GPIO_ACTIVE_LOW>;
++		label = "TR";
++		linux,code = <BTN_TR>;
++	};
++
++	button-r2 {
++		gpios = <&gpio3 RK_PB4 GPIO_ACTIVE_LOW>;
++		label = "TR2";
++		linux,code = <BTN_TR2>;
++	};
++};
++
++&i2c2 {
++	pintctrl-names = "default";
++	pinctrl-0 = <&i2c2m1_xfer>;
++	status = "okay";
++};
++
++&pinctrl {
++	touch {
++		touch_rst: touch-rst {
++			rockchip,pins =
++				<4 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++};
++
++&rk817 {
++	rk817_charger: charger {
++		monitored-battery = <&battery>;
++		rockchip,resistor-sense-micro-ohms = <10000>;
++		rockchip,sleep-enter-current-microamp = <300000>;
++		rockchip,sleep-filter-current-microamp = <100000>;
++	};
++};
++
++&sdhci {
++	pinctrl-0 = <&emmc_bus8>, <&emmc_clk>, <&emmc_cmd>, <&emmc_datastrobe>, <&emmc_rstnout>;
++	pinctrl-names = "default";
++	bus-width = <8>;
++	mmc-hs200-1_8v;
++	non-removable;
++	vmmc-supply = <&vcc_3v3>;
++	vqmmc-supply = <&vcc_1v8>;
++	status = "okay";
++};
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353vs.dts
+@@ -0,0 +1,87 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/input/linux-event-codes.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rk3566-anbernic-rg353x.dtsi"
++
++/ {
++	model = "RG353VS";
++	compatible = "anbernic,rg353vs", "rockchip,rk3566";
++
++	aliases {
++		mmc0 = &sdmmc0;
++		mmc1 = &sdmmc1;
++		mmc2 = &sdmmc2;
++	};
++
++	battery: battery {
++		compatible = "simple-battery";
++		charge-full-design-microamp-hours = <3151000>;
++		charge-term-current-microamp = <300000>;
++		constant-charge-current-max-microamp = <2000000>;
++		constant-charge-voltage-max-microvolt = <4200000>;
++		factory-internal-resistance-micro-ohms = <117000>;
++		voltage-max-design-microvolt = <4172000>;
++		voltage-min-design-microvolt = <3400000>;
++
++		ocv-capacity-celsius = <20>;
++		ocv-capacity-table-0 =  <4172000 100>, <4054000 95>, <3984000 90>, <3926000 85>,
++					<3874000 80>, <3826000 75>, <3783000 70>, <3746000 65>,
++					<3714000 60>, <3683000 55>, <3650000 50>, <3628000 45>,
++					<3612000 40>, <3600000 35>, <3587000 30>, <3571000 25>,
++					<3552000 20>, <3525000 15>, <3492000 10>, <3446000 5>,
++					<3400000 0>;
++	};
++
++	/* Channels reversed for headphones. */
++	sound {
++		compatible = "simple-audio-card";
++		simple-audio-card,name = "rk817_int";
++		simple-audio-card,format = "i2s";
++		simple-audio-card,hp-det-gpio = <&gpio4 RK_PC6 GPIO_ACTIVE_HIGH>;
++		simple-audio-card,mclk-fs = <256>;
++		simple-audio-card,widgets =
++			"Microphone", "Mic Jack",
++			"Headphone", "Headphones",
++			"Speaker", "Internal Speakers";
++		simple-audio-card,routing =
++			"MICL", "Mic Jack",
++			"Headphones", "HPOL",
++			"Headphones", "HPOR",
++			"Internal Speakers", "SPKO";
++
++		simple-audio-card,codec {
++			sound-dai = <&rk817>;
++		};
++
++		simple-audio-card,cpu {
++			sound-dai = <&i2s1_8ch>;
++		};
++	};
++};
++
++&gpio_keys_control {
++	button-r1 {
++		gpios = <&gpio3 RK_PB3 GPIO_ACTIVE_LOW>;
++		label = "TR";
++		linux,code = <BTN_TR>;
++	};
++
++	button-r2 {
++		gpios = <&gpio3 RK_PB4 GPIO_ACTIVE_LOW>;
++		label = "TR2";
++		linux,code = <BTN_TR2>;
++	};
++};
++
++&rk817 {
++	rk817_charger: charger {
++		monitored-battery = <&battery>;
++		rockchip,resistor-sense-micro-ohms = <10000>;
++		rockchip,sleep-enter-current-microamp = <300000>;
++		rockchip,sleep-filter-current-microamp = <100000>;
++	};
++};
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353x.dtsi
+@@ -0,0 +1,60 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/input/linux-event-codes.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rk3566-anbernic-rgxx3.dtsi"
++
++/ {
++	backlight: backlight {
++		compatible = "pwm-backlight";
++		power-supply = <&vcc_sys>;
++		pwms = <&pwm4 0 25000 0>;
++	};
++};
++
++&cru {
++	assigned-clocks = <&cru PLL_GPLL>, <&pmucru PLL_PPLL>, <&cru PLL_VPLL>;
++	assigned-clock-rates = <1200000000>, <200000000>, <241500000>;
++};
++
++&gpio_keys_control {
++	button-a {
++		gpios = <&gpio3 RK_PC2 GPIO_ACTIVE_LOW>;
++		label = "EAST";
++		linux,code = <BTN_EAST>;
++	};
++
++	button-left {
++		gpios = <&gpio3 RK_PA6 GPIO_ACTIVE_LOW>;
++		label = "DPAD-LEFT";
++		linux,code = <BTN_DPAD_LEFT>;
++	};
++
++	button-right {
++		gpios = <&gpio3 RK_PA5 GPIO_ACTIVE_LOW>;
++		label = "DPAD-RIGHT";
++		linux,code = <BTN_DPAD_RIGHT>;
++	};
++
++	button-y {
++		gpios = <&gpio3 RK_PC1 GPIO_ACTIVE_LOW>;
++		label = "WEST";
++		linux,code = <BTN_WEST>;
++	};
++};
++
++&i2c0 {
++	/* This hardware is physically present but unused. */
++	power-monitor@62 {
++		compatible = "cellwise,cw2015";
++		reg = <0x62>;
++		status = "disabled";
++	};
++};
++
++&pwm4 {
++	status = "okay";
++};
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg503.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg503.dts
+@@ -29,6 +29,50 @@
+ 		cs-gpios = <&gpio4 RK_PA7 GPIO_ACTIVE_HIGH>;
+ 		num-chipselects = <0>;
+ 	};
++
++	/* Channels reversed for both headphones and speakers. */
++	sound {
++		compatible = "simple-audio-card";
++		simple-audio-card,name = "rk817_ext";
++		simple-audio-card,aux-devs = <&spk_amp>;
++		simple-audio-card,format = "i2s";
++		simple-audio-card,hp-det-gpio = <&gpio4 RK_PC6 GPIO_ACTIVE_HIGH>;
++		simple-audio-card,mclk-fs = <256>;
++		simple-audio-card,widgets =
++			"Microphone", "Mic Jack",
++			"Headphone", "Headphones",
++			"Speaker", "Internal Speakers";
++		simple-audio-card,routing =
++			"MICL", "Mic Jack",
++			"Headphones", "HPOL",
++			"Headphones", "HPOR",
++			"Internal Speakers", "Speaker Amp OUTL",
++			"Internal Speakers", "Speaker Amp OUTR",
++			"Speaker Amp INL", "HPOL",
++			"Speaker Amp INR", "HPOR";
++		simple-audio-card,pin-switches = "Internal Speakers";
++
++		simple-audio-card,codec {
++			sound-dai = <&rk817>;
++		};
++
++		simple-audio-card,cpu {
++			sound-dai = <&i2s1_8ch>;
++		};
++	};
++
++	spk_amp: audio-amplifier {
++		compatible = "simple-audio-amplifier";
++		enable-gpios = <&gpio4 RK_PC2 GPIO_ACTIVE_HIGH>;
++		pinctrl-0 = <&spk_amp_enable_h>;
++		pinctrl-names = "default";
++		sound-name-prefix = "Speaker Amp";
++	};
++};
++
++&cru {
++	assigned-clocks = <&cru PLL_GPLL>, <&pmucru PLL_PPLL>, <&cru PLL_VPLL>;
++	assigned-clock-rates = <1200000000>, <200000000>, <500000000>;
+ };
+ 
+ &gpio_keys_control {
+@@ -76,6 +120,13 @@
+ };
+ 
+ &pinctrl {
++	audio-amplifier {
++		spk_amp_enable_h: spk-amp-enable-h {
++			rockchip,pins =
++				<4 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
+ 	gpio-spi {
+ 		spi_pins: spi-pins {
+ 			rockchip,pins =
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rgxx3.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rgxx3.dtsi
+@@ -217,37 +217,6 @@
+ 		};
+ 	};
+ 
+-	/* Channels reversed for both headphones and speakers. */
+-	sound {
+-		compatible = "simple-audio-card";
+-		simple-audio-card,name = "anbernic_rk817";
+-		simple-audio-card,aux-devs = <&spk_amp>;
+-		simple-audio-card,format = "i2s";
+-		simple-audio-card,hp-det-gpio = <&gpio4 RK_PC6 GPIO_ACTIVE_HIGH>;
+-		simple-audio-card,mclk-fs = <256>;
+-		simple-audio-card,widgets =
+-			"Microphone", "Mic Jack",
+-			"Headphone", "Headphones",
+-			"Speaker", "Internal Speakers";
+-		simple-audio-card,routing =
+-			"MICL", "Mic Jack",
+-			"Headphones", "HPOL",
+-			"Headphones", "HPOR",
+-			"Internal Speakers", "Speaker Amp OUTL",
+-			"Internal Speakers", "Speaker Amp OUTR",
+-			"Speaker Amp INL", "HPOL",
+-			"Speaker Amp INR", "HPOR";
+-		simple-audio-card,pin-switches = "Internal Speakers";
+-
+-		simple-audio-card,codec {
+-			sound-dai = <&rk817>;
+-		};
+-
+-		simple-audio-card,cpu {
+-			sound-dai = <&i2s1_8ch>;
+-		};
+-	};
+-
+ 	sdio_pwrseq: sdio-pwrseq {
+ 		compatible = "mmc-pwrseq-simple";
+ 		clocks = <&rk817 1>;
+@@ -258,14 +227,6 @@
+ 		reset-gpios = <&gpio4 RK_PA2 GPIO_ACTIVE_LOW>;
+ 	};
+ 
+-	spk_amp: audio-amplifier {
+-		compatible = "simple-audio-amplifier";
+-		enable-gpios = <&gpio4 RK_PC2 GPIO_ACTIVE_HIGH>;
+-		pinctrl-0 = <&spk_amp_enable_h>;
+-		pinctrl-names = "default";
+-		sound-name-prefix = "Speaker Amp";
+-	};
+-
+ 	vcc3v3_lcd0_n: regulator-vcc3v3-lcd0 {
+ 		compatible = "regulator-fixed";
+ 		gpio = <&gpio0 RK_PC2 GPIO_ACTIVE_HIGH>;
+@@ -607,13 +568,6 @@
+ };
+ 
+ &pinctrl {
+-	audio-amplifier {
+-		spk_amp_enable_h: spk-amp-enable-h {
+-			rockchip,pins =
+-				<4 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
+-		};
+-	};
+-
+ 	gpio-btns {
+ 		btn_pins_ctrl: btn-pins-ctrl {
+ 			rockchip,pins =
diff --git a/target/linux/rockchip/patches-6.1/065-arm64-dts-rockchip-add-rk817-chg-to-RG353P-and-RG503.patch b/target/linux/rockchip/patches-6.1/065-arm64-dts-rockchip-add-rk817-chg-to-RG353P-and-RG503.patch
new file mode 100644
index 0000000000..52aff0935a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/065-arm64-dts-rockchip-add-rk817-chg-to-RG353P-and-RG503.patch
@@ -0,0 +1,104 @@
+From 10f47903476d674e950e6996b5ae02698f4bfbfb Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Fri, 28 Oct 2022 13:40:44 -0500
+Subject: [PATCH 065/383] arm64: dts: rockchip: add rk817 chg to RG353P and
+ RG503
+
+Add support for the internal battery and charger for the Anbernic
+RG353P and RG503. Battery values are taken from the BSP Kernel
+device tree.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20221028184045.13113-4-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3566-anbernic-rg353p.dts   | 28 +++++++++++++++++++
+ .../dts/rockchip/rk3566-anbernic-rg503.dts    | 28 +++++++++++++++++++
+ 2 files changed, 56 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353p.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353p.dts
+@@ -18,6 +18,25 @@
+ 		mmc3 = &sdmmc2;
+ 	};
+ 
++	battery: battery {
++		compatible = "simple-battery";
++		charge-full-design-microamp-hours = <3472000>;
++		charge-term-current-microamp = <300000>;
++		constant-charge-current-max-microamp = <2000000>;
++		constant-charge-voltage-max-microvolt = <4200000>;
++		factory-internal-resistance-micro-ohms = <117000>;
++		voltage-max-design-microvolt = <4172000>;
++		voltage-min-design-microvolt = <3400000>;
++
++		ocv-capacity-celsius = <20>;
++		ocv-capacity-table-0 =  <4172000 100>, <4054000 95>, <3984000 90>, <3926000 85>,
++					<3874000 80>, <3826000 75>, <3783000 70>, <3746000 65>,
++					<3714000 60>, <3683000 55>, <3650000 50>, <3628000 45>,
++					<3612000 40>, <3600000 35>, <3587000 30>, <3571000 25>,
++					<3552000 20>, <3525000 15>, <3492000 10>, <3446000 5>,
++					<3400000 0>;
++	};
++
+ 	/* Channels reversed for both headphones and speakers. */
+ 	sound {
+ 		compatible = "simple-audio-card";
+@@ -87,6 +106,15 @@
+ 	};
+ };
+ 
++&rk817 {
++	rk817_charger: charger {
++		monitored-battery = <&battery>;
++		rockchip,resistor-sense-micro-ohms = <10000>;
++		rockchip,sleep-enter-current-microamp = <300000>;
++		rockchip,sleep-filter-current-microamp = <100000>;
++	};
++};
++
+ &sdhci {
+ 	pinctrl-0 = <&emmc_bus8>, <&emmc_clk>, <&emmc_cmd>, <&emmc_datastrobe>, <&emmc_rstnout>;
+ 	pinctrl-names = "default";
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg503.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg503.dts
+@@ -17,6 +17,25 @@
+ 		mmc2 = &sdmmc2;
+ 	};
+ 
++	battery: battery {
++		compatible = "simple-battery";
++		charge-full-design-microamp-hours = <3472000>;
++		charge-term-current-microamp = <300000>;
++		constant-charge-current-max-microamp = <2000000>;
++		constant-charge-voltage-max-microvolt = <4200000>;
++		factory-internal-resistance-micro-ohms = <117000>;
++		voltage-max-design-microvolt = <4172000>;
++		voltage-min-design-microvolt = <3400000>;
++
++		ocv-capacity-celsius = <20>;
++		ocv-capacity-table-0 =	<4172000 100>, <4054000 95>, <3984000 90>, <3926000 85>,
++					<3874000 80>, <3826000 75>, <3783000 70>, <3746000 65>,
++					<3714000 60>, <3683000 55>, <3650000 50>, <3628000 45>,
++					<3612000 40>, <3600000 35>, <3587000 30>, <3571000 25>,
++					<3552000 20>, <3525000 15>, <3492000 10>, <3446000 5>,
++					<3400000 0>;
++	};
++
+ 	gpio_spi: spi {
+ 		compatible = "spi-gpio";
+ 		pinctrl-names = "default";
+@@ -136,3 +155,12 @@
+ 		};
+ 	};
+ };
++
++&rk817 {
++	rk817_charger: charger {
++		monitored-battery = <&battery>;
++		rockchip,resistor-sense-micro-ohms = <10000>;
++		rockchip,sleep-enter-current-microamp = <300000>;
++		rockchip,sleep-filter-current-microamp = <100000>;
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/066-arm64-dts-rockchip-add-poll-interval-to-RGxx3-device.patch b/target/linux/rockchip/patches-6.1/066-arm64-dts-rockchip-add-poll-interval-to-RGxx3-device.patch
new file mode 100644
index 0000000000..665b526fe2
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/066-arm64-dts-rockchip-add-poll-interval-to-RGxx3-device.patch
@@ -0,0 +1,27 @@
+From 3bde999f5ffca07dee0c9fe900ccb9b29d41c464 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Fri, 28 Oct 2022 13:40:45 -0500
+Subject: [PATCH 066/383] arm64: dts: rockchip: add poll-interval to RGxx3
+ devices
+
+Add adc-joystick polling for all Anbernic RGxx3 based devices.
+They are all functionally identical in how they work.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20221028184045.13113-5-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3566-anbernic-rgxx3.dtsi | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rgxx3.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rgxx3.dtsi
+@@ -22,6 +22,7 @@
+ 			      <&adc_mux 3>;
+ 		pinctrl-0 = <&joy_mux_en>;
+ 		pinctrl-names = "default";
++		poll-interval = <60>;
+ 		#address-cells = <1>;
+ 		#size-cells = <0>;
+ 
diff --git a/target/linux/rockchip/patches-6.1/067-arm64-dts-rockchip-Update-joystick-to-polled-for-OG2.patch b/target/linux/rockchip/patches-6.1/067-arm64-dts-rockchip-Update-joystick-to-polled-for-OG2.patch
new file mode 100644
index 0000000000..9b1abcbacf
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/067-arm64-dts-rockchip-Update-joystick-to-polled-for-OG2.patch
@@ -0,0 +1,28 @@
+From cfd8ccee761664838849b4ebb647555b55c2b702 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Tue, 16 Aug 2022 16:04:40 -0500
+Subject: [PATCH 067/383] arm64: dts: rockchip: Update joystick to polled for
+ OG2
+
+Update the Odroid Go Advance to use "poll-interval" from the
+adc-joystick driver.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Signed-off-by: Maya Matuszczyk <maccraft123mc@gmail.com>
+Link: https://lore.kernel.org/r/20220816210440.14260-4-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3326-odroid-go2.dts | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3326-odroid-go2.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go2.dts
+@@ -26,6 +26,7 @@
+ 		compatible = "adc-joystick";
+ 		io-channels = <&saradc 1>,
+ 			      <&saradc 2>;
++		poll-interval = <60>;
+ 		#address-cells = <1>;
+ 		#size-cells = <0>;
+ 
diff --git a/target/linux/rockchip/patches-6.1/068-arm64-dts-rockchip-enable-pcie2-on-rk3566-roc-pc.patch b/target/linux/rockchip/patches-6.1/068-arm64-dts-rockchip-enable-pcie2-on-rk3566-roc-pc.patch
new file mode 100644
index 0000000000..5ff7d308ab
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/068-arm64-dts-rockchip-enable-pcie2-on-rk3566-roc-pc.patch
@@ -0,0 +1,80 @@
+From c0602fc3d12777ac879ed9d121c46a7bc1e76fce Mon Sep 17 00:00:00 2001
+From: Furkan Kardame <f.kardame@manjaro.org>
+Date: Wed, 26 Oct 2022 20:21:53 +0300
+Subject: [PATCH 068/383] arm64: dts: rockchip: enable pcie2 on rk3566-roc-pc
+
+This patch adds nodes needed for pcie2
+to work on rk3566-roc-pc
+
+Signed-off-by: Furkan Kardame <f.kardame@manjaro.org>
+Link: https://lore.kernel.org/r/20221026172152.64513-1-f.kardame@manjaro.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../arm64/boot/dts/rockchip/rk3566-roc-pc.dts | 34 +++++++++++++++++++
+ 1 file changed, 34 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-roc-pc.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-roc-pc.dts
+@@ -82,6 +82,18 @@
+ 		vin-supply = <&usb_5v>;
+ 	};
+ 
++	vcc3v3_pcie: vcc3v3-pcie-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio0 RK_PC4 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pcie_enable_h>;
++		regulator-name = "vcc3v3_pcie";
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
+ 	vcc3v3_sys: vcc3v3-sys-regulator {
+ 		compatible = "regulator-fixed";
+ 		regulator-name = "vcc3v3_sys";
+@@ -122,6 +134,10 @@
+ 	status = "okay";
+ };
+ 
++&combphy2 {
++	status = "okay";
++};
++
+ &cpu0 {
+ 	cpu-supply = <&vdd_cpu>;
+ };
+@@ -443,6 +459,14 @@
+ 	};
+ };
+ 
++&pcie2x1 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&pcie_reset_h>;
++	reset-gpios = <&gpio1 RK_PB2 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_pcie>;
++	status = "okay";
++};
++
+ &pinctrl {
+ 	bt {
+ 		bt_enable_h: bt-enable-h {
+@@ -464,6 +488,16 @@
+ 		};
+ 	};
+ 
++	pcie {
++		pcie_enable_h: pcie-enable-h {
++			rockchip,pins = <0 RK_PC4 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		pcie_reset_h: pcie-reset-h {
++			rockchip,pins = <1 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
+ 	pmic {
+ 		pmic_int: pmic_int {
+ 			rockchip,pins =
diff --git a/target/linux/rockchip/patches-6.1/070-arm64-dts-rockchip-Enable-video-output-and-HDMI-on-S.patch b/target/linux/rockchip/patches-6.1/070-arm64-dts-rockchip-Enable-video-output-and-HDMI-on-S.patch
new file mode 100644
index 0000000000..d3e510d2b0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/070-arm64-dts-rockchip-Enable-video-output-and-HDMI-on-S.patch
@@ -0,0 +1,91 @@
+From a98d2da380eb8fea26997e7fc0a52a3fb60cc3e2 Mon Sep 17 00:00:00 2001
+From: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Date: Sat, 12 Nov 2022 17:03:59 +0100
+Subject: [PATCH 070/383] arm64: dts: rockchip: Enable video output and HDMI on
+ SOQuartz
+
+This patch adds and enables the necessary device tree nodes to
+enable video output and HDMI functionality on the SOQuartz module.
+
+Signed-off-by: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Link: https://lore.kernel.org/r/20221112160404.70868-3-frattaroli.nicolas@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3566-soquartz.dtsi    | 47 +++++++++++++++++++
+ 1 file changed, 47 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-soquartz.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-soquartz.dtsi
+@@ -4,6 +4,7 @@
+ 
+ #include <dt-bindings/gpio/gpio.h>
+ #include <dt-bindings/pinctrl/rockchip.h>
++#include <dt-bindings/soc/rockchip,vop2.h>
+ #include "rk3566.dtsi"
+ 
+ / {
+@@ -28,6 +29,17 @@
+ 		#clock-cells = <0>;
+ 	};
+ 
++	hdmi-con {
++		compatible = "hdmi-connector";
++		type = "a";
++
++		port {
++			hdmi_con_in: endpoint {
++				remote-endpoint = <&hdmi_out_con>;
++			};
++		};
++	};
++
+ 	leds {
+ 		compatible = "gpio-leds";
+ 
+@@ -151,6 +163,24 @@
+ 	status = "okay";
+ };
+ 
++&hdmi {
++	avdd-0v9-supply = <&vdda0v9_image>;
++	avdd-1v8-supply = <&vcca1v8_image>;
++	status = "okay";
++};
++
++&hdmi_in {
++	hdmi_in_vp0: endpoint {
++		remote-endpoint = <&vp0_out_hdmi>;
++	};
++};
++
++&hdmi_out {
++	hdmi_out_con: endpoint {
++		remote-endpoint = <&hdmi_con_in>;
++	};
++};
++
+ &i2c0 {
+ 	status = "okay";
+ 
+@@ -616,3 +646,20 @@
+ &usb_host0_xhci {
+ 	status = "disabled";
+ };
++
++&vop {
++	assigned-clocks = <&cru DCLK_VOP0>, <&cru DCLK_VOP1>;
++	assigned-clock-parents = <&pmucru PLL_HPLL>, <&cru PLL_VPLL>;
++	status = "okay";
++};
++
++&vop_mmu {
++	status = "okay";
++};
++
++&vp0 {
++	vp0_out_hdmi: endpoint@ROCKCHIP_VOP2_EP_HDMI0 {
++		reg = <ROCKCHIP_VOP2_EP_HDMI0>;
++		remote-endpoint = <&hdmi_in_vp0>;
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/071-arm64-dts-rockchip-Enable-HDMI-sound-on-SOQuartz.patch b/target/linux/rockchip/patches-6.1/071-arm64-dts-rockchip-Enable-HDMI-sound-on-SOQuartz.patch
new file mode 100644
index 0000000000..315f1a8198
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/071-arm64-dts-rockchip-Enable-HDMI-sound-on-SOQuartz.patch
@@ -0,0 +1,40 @@
+From 75454028df75b71285e477ac422ef2fba6b83bf0 Mon Sep 17 00:00:00 2001
+From: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Date: Sat, 12 Nov 2022 17:04:00 +0100
+Subject: [PATCH 071/383] arm64: dts: rockchip: Enable HDMI sound on SOQuartz
+
+This patch enables the i2s0 node on SOQuartz, which is responsible
+for hdmi audio, and adds an hdmi-sound node to enable said audio.
+
+Signed-off-by: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Link: https://lore.kernel.org/r/20221112160404.70868-4-frattaroli.nicolas@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3566-soquartz.dtsi | 8 ++++++++
+ 1 file changed, 8 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-soquartz.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-soquartz.dtsi
+@@ -181,6 +181,10 @@
+ 	};
+ };
+ 
++&hdmi_sound {
++	status = "okay";
++};
++
+ &i2c0 {
+ 	status = "okay";
+ 
+@@ -449,6 +453,10 @@
+ 	status = "disabled";
+ };
+ 
++&i2s0_8ch {
++	status = "okay";
++};
++
+ /*
+  * i2s1_8ch is exposed on CM1 / Module1A
+  * pin 24 - i2s1_sdi1_m1
diff --git a/target/linux/rockchip/patches-6.1/072-arm64-dts-rockchip-Enable-PCIe-2-on-SOQuartz-CM4IO.patch b/target/linux/rockchip/patches-6.1/072-arm64-dts-rockchip-Enable-PCIe-2-on-SOQuartz-CM4IO.patch
new file mode 100644
index 0000000000..5e90a0900d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/072-arm64-dts-rockchip-Enable-PCIe-2-on-SOQuartz-CM4IO.patch
@@ -0,0 +1,76 @@
+From e038bf77c459d37d636f990b1ed3e213422c2b44 Mon Sep 17 00:00:00 2001
+From: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Date: Sat, 12 Nov 2022 17:04:01 +0100
+Subject: [PATCH 072/383] arm64: dts: rockchip: Enable PCIe 2 on SOQuartz CM4IO
+
+This patch enables the PCIe2 on the CM4IO board when paired with
+a SOQuartz CM4 System-on-Module board. combphy2 also needs to be
+enabled in this case to make the PHY work for this.
+
+Signed-off-by: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Link: https://lore.kernel.org/r/20221112160404.70868-5-frattaroli.nicolas@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3566-soquartz-cm4.dts     | 11 +++++++++++
+ arch/arm64/boot/dts/rockchip/rk3566-soquartz.dtsi | 15 +++++++++++++++
+ 2 files changed, 26 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-soquartz-cm4.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-soquartz-cm4.dts
+@@ -40,6 +40,12 @@
+ 	};
+ };
+ 
++/* phy for pcie */
++&combphy2 {
++	phy-supply = <&vcc3v3_sys>;
++	status = "okay";
++};
++
+ &gmac1 {
+ 	status = "okay";
+ };
+@@ -115,6 +121,11 @@
+ 	status = "okay";
+ };
+ 
++&pcie2x1 {
++	vpcie3v3-supply = <&vcc_3v3>;
++	status = "okay";
++};
++
+ &rgmii_phy1 {
+ 	status = "okay";
+ };
+--- a/arch/arm64/boot/dts/rockchip/rk3566-soquartz.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-soquartz.dtsi
+@@ -490,6 +490,12 @@
+ 	};
+ };
+ 
++&pcie2x1 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&pcie_reset_h>;
++	reset-gpios = <&gpio1 RK_PB2 GPIO_ACTIVE_HIGH>;
++};
++
+ &pinctrl {
+ 	bt {
+ 		bt_enable_h: bt-enable-h {
+@@ -515,6 +521,15 @@
+ 		};
+ 	};
+ 
++	pcie {
++		pcie_clkreq_h: pcie-clkreq-h {
++			rockchip,pins = <1 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++		pcie_reset_h: pcie-reset-h {
++			rockchip,pins = <1 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
+ 	pmic {
+ 		pmic_int_l: pmic-int-l {
+ 			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
diff --git a/target/linux/rockchip/patches-6.1/073-arm64-dts-rockchip-Add-dts-for-rockchip-rk3566-box-d.patch b/target/linux/rockchip/patches-6.1/073-arm64-dts-rockchip-Add-dts-for-rockchip-rk3566-box-d.patch
new file mode 100644
index 0000000000..92eacddabe
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/073-arm64-dts-rockchip-Add-dts-for-rockchip-rk3566-box-d.patch
@@ -0,0 +1,548 @@
+From 4425c566dc70b1dcf7ebba9ea2bee1386a29843d Mon Sep 17 00:00:00 2001
+From: Andy Yan <andyshrk@163.com>
+Date: Sat, 5 Nov 2022 18:00:12 +0800
+Subject: [PATCH 073/383] arm64: dts: rockchip: Add dts for rockchip rk3566 box
+ demo board
+
+This is a rk3566 tv box  evaluation demo board.
+
+Specification:
+- Rockchip RK3566
+- DDR4 4GB
+- TF sd scard slot
+- eMMC
+- AP6398S for WiFi + BT
+- Gigabit ethernet
+- HDMI out
+- USB HOST 2.0 x 2
+- USB 3.0 x 1
+- USB OTG 2.0  x 1
+- 12V DC Power supply
+
+Signed-off-by: Piotr Oniszczuk <piotr.oniszczuk@gmail.com>
+Signed-off-by: Andy Yan <andyshrk@163.com>
+Link: https://lore.kernel.org/r/20221105100012.958252-1-andyshrk@163.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../boot/dts/rockchip/rk3566-box-demo.dts     | 503 ++++++++++++++++++
+ 2 files changed, 504 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-box-demo.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -72,6 +72,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-qu
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-quartz64-b.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-roc-pc.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-cm4.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-box-demo.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-bpi-r2-pro.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-evb1-v10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-odroid-m1.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-box-demo.dts
+@@ -0,0 +1,503 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/*
++ * Author: Piotr Oniszczuk piotr.oniszczuk@gmail.com
++ * Based on Quartz64 DT by: Peter Geis pgwipeout@gmail.com
++ */
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/leds/common.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include <dt-bindings/soc/rockchip,vop2.h>
++#include "rk3566.dtsi"
++
++/ {
++	model = "Rockchip RK3566 BOX DEMO Board";
++	compatible = "rockchip,rk3566-box-demo", "rockchip,rk3566";
++
++	aliases {
++		ethernet0 = &gmac1;
++		mmc0 = &sdmmc0;
++		mmc1 = &sdmmc1;
++		mmc2 = &sdhci;
++	};
++
++	chosen: chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	gmac1_clkin: external-gmac1-clock {
++		compatible = "fixed-clock";
++		clock-frequency = <125000000>;
++		clock-output-names = "gmac1_clkin";
++		#clock-cells = <0>;
++	};
++
++	hdmi-con {
++		compatible = "hdmi-connector";
++		type = "a";
++
++		port {
++			hdmi_con_in: endpoint {
++				remote-endpoint = <&hdmi_out_con>;
++			};
++		};
++	};
++
++	ir-receiver {
++		compatible = "gpio-ir-receiver";
++		gpios = <&gpio4 RK_PC3 GPIO_ACTIVE_LOW>;
++		pinctrl-0 = <&ir_int>;
++		linux,rc-map-name = "rc-beelink-gs1";
++		status = "okay";
++	};
++
++	leds {
++		compatible = "gpio-leds";
++
++		led_work: led-0 {
++			gpios = <&gpio0 RK_PC3 GPIO_ACTIVE_HIGH>;
++			function = LED_FUNCTION_HEARTBEAT;
++			color = <LED_COLOR_ID_BLUE>;
++			linux,default-trigger = "heartbeat";
++			pinctrl-names = "default";
++			pinctrl-0 = <&led_work_en>;
++		};
++	};
++
++	sdio_pwrseq: sdio-pwrseq {
++		status = "okay";
++		compatible = "mmc-pwrseq-simple";
++		clocks = <&pmucru CLK_RTC_32K>;
++		clock-names = "ext_clock";
++		pinctrl-names = "default";
++		pinctrl-0 = <&wifi_enable_h &wifi_32k>;
++		reset-gpios = <&gpio2 RK_PB1 GPIO_ACTIVE_LOW>;
++	};
++
++	spdif_dit: spdif-dit {
++		compatible = "linux,spdif-dit";
++		#sound-dai-cells = <0>;
++	};
++
++	spdif_sound: spdif-sound {
++		compatible = "simple-audio-card";
++		simple-audio-card,name = "SPDIF";
++
++		simple-audio-card,cpu {
++			sound-dai = <&spdif>;
++		};
++
++		simple-audio-card,codec {
++			sound-dai = <&spdif_dit>;
++		};
++	};
++
++	vcc12v0_dcin: regulator-vcc12v0-dcin {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc12v0_dcin";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <12000000>;
++		regulator-max-microvolt = <12000000>;
++	};
++
++	vcc5v0_sys: regulator-vcc5v0-sys {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc12v0_dcin>;
++	};
++
++	vcc3v3_sys: regulator-vcc3v3-sys {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc12v0_dcin>;
++	};
++
++	vcc_3v3: regulator-vcc-3v3 {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_3v3";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc3v3_sys>;
++	};
++
++	vcc5v0_usb_host: regulator-vcc5v0-usb-host {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio0 RK_PA6 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_usb_host_en>;
++		regulator-name = "vcc5v0_usb_host";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc5v0_usb2_otg: regulator-vcc5v0-usb2-otg {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio0 RK_PC6 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_usb2_otg_en>;
++		regulator-name = "vcc5v0_usb_otg";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcca_1v8: regulator-vcca-1v8 {
++		compatible = "regulator-fixed";
++		regulator-name = "vcca_1v8";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <1800000>;
++		regulator-max-microvolt = <1800000>;
++		vin-supply = <&vcc3v3_sys>;
++	};
++
++	vdda_0v9: regulator-vdda-0v9 {
++		compatible = "regulator-fixed";
++		regulator-name = "vdda_0v9";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <900000>;
++		regulator-max-microvolt = <900000>;
++		vin-supply = <&vcc3v3_sys>;
++	};
++
++	vdd_fixed: regulator-vdd-fixed {
++		compatible = "regulator-fixed";
++		regulator-name = "vdd_fixed";
++		regulator-min-microvolt = <950000>;
++		regulator-max-microvolt = <950000>;
++		regulator-always-on;
++		regulator-boot-on;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vdd_cpu: regulator-vdd-cpu {
++		compatible = "pwm-regulator";
++		pwms = <&pwm0 0 5000 1>;
++		regulator-name = "vdd_cpu";
++		regulator-min-microvolt = <800000>;
++		regulator-max-microvolt = <1200000>;
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-settling-time-up-us = <250>;
++		pwm-supply = <&vcc5v0_sys>;
++	};
++
++	vdd_logic: regulator-vdd-logic {
++		compatible = "pwm-regulator";
++		pwms = <&pwm1 0 5000 1>;
++		regulator-name = "vdd_logic";
++		regulator-min-microvolt = <800000>;
++		regulator-max-microvolt = <1100000>;
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-settling-time-up-us = <250>;
++		pwm-supply = <&vcc5v0_sys>;
++	};
++};
++
++&combphy1 {
++	status = "okay";
++};
++
++&combphy2 {
++	status = "okay";
++};
++
++&cpu0 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu1 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu2 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu3 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&gmac1 {
++	assigned-clocks = <&cru SCLK_GMAC1_RX_TX>, <&cru SCLK_GMAC1>;
++	assigned-clock-parents =  <&cru SCLK_GMAC1_RGMII_SPEED>, <&gmac1_clkin>;
++	phy-mode = "rgmii";
++	clock_in_out = "input";
++	pinctrl-names = "default";
++	pinctrl-0 = <&gmac1m1_miim
++		    &gmac1m1_tx_bus2
++		    &gmac1m1_rx_bus2
++		    &gmac1m1_rgmii_clk
++		    &gmac1m1_rgmii_bus
++		    &gmac1m1_clkinout>;
++	snps,reset-gpio = <&gpio4 RK_PC2 GPIO_ACTIVE_LOW>;
++	snps,reset-active-low;
++	/* Reset time is 20ms, 100ms for rtl8211f */
++	snps,reset-delays-us = <0 20000 100000>;
++
++	tx_delay = <0x4f>;
++	rx_delay = <0x2d>;
++	phy-handle = <&rgmii_phy1>;
++	status = "okay";
++};
++
++&mdio1 {
++	rgmii_phy1: ethernet-phy@1 {
++		compatible = "ethernet-phy-ieee802.3-c22";
++		reg = <0x1>;
++	};
++};
++
++&hdmi {
++	assigned-clocks = <&cru CLK_HDMI_CEC>;
++	assigned-clock-rates = <32768>;
++	avdd-0v9-supply = <&vdda_0v9>;
++	avdd-1v8-supply = <&vcca_1v8>;
++	status = "okay";
++};
++
++&hdmi_in {
++	hdmi_in_vp0: endpoint {
++		remote-endpoint = <&vp0_out_hdmi>;
++	};
++};
++
++&hdmi_out {
++	hdmi_out_con: endpoint {
++		remote-endpoint = <&hdmi_con_in>;
++	};
++};
++
++&hdmi_sound {
++	status = "okay";
++};
++
++&gpu {
++	status = "okay";
++};
++
++&i2s0_8ch {
++	status = "okay";
++};
++
++&i2s1_8ch {
++	rockchip,trcm-sync-tx-only;
++	status = "okay";
++};
++
++&pinctrl {
++	bt {
++		bt_enable_h: bt-enable-h {
++			rockchip,pins = <2 RK_PB7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		bt_host_wake_l: bt-host-wake-l {
++			rockchip,pins = <2 RK_PC0 RK_FUNC_GPIO &pcfg_pull_down>;
++		};
++
++		bt_wake_l: bt-wake-l {
++			rockchip,pins = <2 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	sdio-pwrseq {
++		wifi_enable_h: wifi-enable-h {
++			rockchip,pins = <2 RK_PB1 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		wifi_32k: wifi-32k {
++			rockchip,pins = <0 RK_PB0 2 &pcfg_pull_none>;
++		};
++	};
++
++	usb {
++		vcc5v0_usb_host_en: vcc5v0_usb_host_en {
++			rockchip,pins = <0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		vcc5v0_usb2_otg_en: vcc5v0_usb2_otg_en {
++			rockchip,pins = <0 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++	};
++
++	ir {
++		ir_int: ir-int {
++			rockchip,pins = <4 RK_PC3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	led {
++		led_work_en: led_work_en {
++			rockchip,pins = <0 RK_PC3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&pwm0 {
++	status = "okay";
++};
++
++&pwm1 {
++	status = "okay";
++};
++
++&sdhci {
++	bus-width = <8>;
++	mmc-hs200-1_8v;
++	non-removable;
++	status = "okay";
++};
++
++&sdmmc0 {
++	bus-width = <4>;
++	cap-sd-highspeed;
++	cd-gpios = <&gpio0 RK_PA4 GPIO_ACTIVE_LOW>;
++	disable-wp;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc0_bus4 &sdmmc0_clk &sdmmc0_cmd &sdmmc0_det>;
++	vmmc-supply = <&vcc_3v3>;
++	status = "okay";
++};
++
++&sdmmc1 {
++	bus-width = <4>;
++	cap-sd-highspeed;
++	disable-wp;
++	mmc-pwrseq = <&sdio_pwrseq>;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc1_bus4 &sdmmc1_cmd &sdmmc1_clk>;
++	vmmc-supply = <&vcc_3v3>;
++	vqmmc-supply = <&vcca_1v8>;
++	status = "okay";
++};
++
++&spdif {
++	status = "okay";
++};
++
++&spi1 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&spi1m1_cs0 &spi1m1_pins>;
++};
++
++&tsadc {
++	/* tshut mode 0:CRU 1:GPIO */
++	rockchip,hw-tshut-mode = <1>;
++	/* tshut polarity 0:LOW 1:HIGH */
++	rockchip,hw-tshut-polarity = <0>;
++	status = "okay";
++};
++
++&uart1 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&uart1m0_xfer &uart1m0_ctsn>;
++	status = "okay";
++	uart-has-rtscts;
++
++	bluetooth {
++		compatible = "brcm,bcm43438-bt";
++		clocks = <&pmucru CLK_RTC_32K>;
++		clock-names = "ext_clock";
++		device-wake-gpios = <&gpio2 RK_PC1 GPIO_ACTIVE_HIGH>;
++		host-wake-gpios = <&gpio2 RK_PC0 GPIO_ACTIVE_HIGH>;
++		shutdown-gpios = <&gpio2 RK_PB7 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&bt_host_wake_l &bt_wake_l &bt_enable_h>;
++		vbat-supply = <&vcc3v3_sys>;
++		vddio-supply = <&vcca_1v8>;
++	};
++};
++
++&uart2 {
++	status = "okay";
++};
++
++&vop {
++	assigned-clocks = <&cru DCLK_VOP0>, <&cru DCLK_VOP1>;
++	assigned-clock-parents = <&pmucru PLL_HPLL>, <&cru PLL_VPLL>;
++	status = "okay";
++};
++
++&vop_mmu {
++	status = "okay";
++};
++
++&vp0 {
++	vp0_out_hdmi: endpoint@ROCKCHIP_VOP2_EP_HDMI0 {
++		reg = <ROCKCHIP_VOP2_EP_HDMI0>;
++		remote-endpoint = <&hdmi_in_vp0>;
++	};
++};
++
++&vpu {
++	status = "okay";
++};
++
++&vdpu_mmu {
++	status = "okay";
++};
++
++&usb2phy0_host {
++	phy-supply = <&vcc5v0_usb_host>;
++	status = "okay";
++};
++
++&usb2phy0_otg {
++	vbus-supply = <&vcc5v0_usb2_otg>;
++	status = "okay";
++};
++
++&usb2phy1_host {
++	phy-supply = <&vcc5v0_usb_host>;
++	status = "okay";
++};
++
++&usb2phy1_otg {
++	phy-supply = <&vcc5v0_usb_host>;
++	status = "okay";
++};
++
++&usb2phy1 {
++	status = "okay";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++&usb_host1_ehci {
++	status = "okay";
++};
++
++&usb_host1_ohci {
++	status = "okay";
++};
++
++&usb_host1_xhci {
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/074-arm64-dts-rockchip-Add-HDMI-supplies-on-Rock960.patch b/target/linux/rockchip/patches-6.1/074-arm64-dts-rockchip-Add-HDMI-supplies-on-Rock960.patch
new file mode 100644
index 0000000000..e436c0dd44
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/074-arm64-dts-rockchip-Add-HDMI-supplies-on-Rock960.patch
@@ -0,0 +1,30 @@
+From 78d6459cdd2cd5b9b110fa21bb3818164005d27e Mon Sep 17 00:00:00 2001
+From: Peter Robinson <pbrobinson@gmail.com>
+Date: Wed, 2 Nov 2022 14:32:42 +0000
+Subject: [PATCH 074/383] arm64: dts: rockchip: Add HDMI supplies on Rock960
+
+Add the avdd-0v9-supply and avdd-1v8-supply regulators to
+hdmi node for Rock960 to silence the following dmesg warning.
+
+[    6.582782] dwhdmi-rockchip ff940000.hdmi: supply avdd-0v9 not found, using dummy regulator
+[    6.583094] dwhdmi-rockchip ff940000.hdmi: supply avdd-1v8 not found, using dummy regulator
+
+Signed-off-by: Peter Robinson <pbrobinson@gmail.com>
+Link: https://lore.kernel.org/r/20221102143242.1126229-1-pbrobinson@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399-rock960.dtsi | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-rock960.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399-rock960.dtsi
+@@ -128,6 +128,8 @@
+ };
+ 
+ &hdmi {
++	avdd-0v9-supply = <&vcca0v9_hdmi>;
++	avdd-1v8-supply = <&vcca1v8_hdmi>;
+ 	ddc-i2c-bus = <&i2c3>;
+ 	pinctrl-names = "default";
+ 	pinctrl-0 = <&hdmi_cec>;
diff --git a/target/linux/rockchip/patches-6.1/075-arm64-dts-rockchip-Add-support-of-external-clock-to-.patch b/target/linux/rockchip/patches-6.1/075-arm64-dts-rockchip-Add-support-of-external-clock-to-.patch
new file mode 100644
index 0000000000..035c44dcf1
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/075-arm64-dts-rockchip-Add-support-of-external-clock-to-.patch
@@ -0,0 +1,55 @@
+From ada7ae999bade4b7525e41404b8af9f49c0476ba Mon Sep 17 00:00:00 2001
+From: Anand Moon <linux.amoon@gmail.com>
+Date: Wed, 16 Nov 2022 20:01:44 +0000
+Subject: [PATCH 075/383] arm64: dts: rockchip: Add support of external clock
+ to ethernet node on Rock 3A SBC
+
+Add support of external clock gmac1_clkin which is used as input clock
+to ethernet node.
+
+Signed-off-by: Anand Moon <linux.amoon@gmail.com>
+Reviewed-by: Michael Riesch <michael.riesch@wolfvision.net>
+Tested-by: Michael Riesch <michael.riesch@wolfvision.net>
+Link: https://lore.kernel.org/r/20221116200150.4657-3-linux.amoon@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts | 13 ++++++++++---
+ 1 file changed, 10 insertions(+), 3 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
+@@ -32,6 +32,13 @@
+ 		};
+ 	};
+ 
++	gmac1_clkin: external-gmac1-clock {
++		compatible = "fixed-clock";
++		clock-frequency = <125000000>;
++		clock-output-names = "gmac1_clkin";
++		#clock-cells = <0>;
++	};
++
+ 	leds {
+ 		compatible = "gpio-leds";
+ 
+@@ -249,9 +256,8 @@
+ 
+ &gmac1 {
+ 	assigned-clocks = <&cru SCLK_GMAC1_RX_TX>, <&cru SCLK_GMAC1>;
+-	assigned-clock-parents = <&cru SCLK_GMAC1_RGMII_SPEED>;
+-	assigned-clock-rates = <0>, <125000000>;
+-	clock_in_out = "output";
++	assigned-clock-parents = <&cru SCLK_GMAC1_RGMII_SPEED>, <&gmac1_clkin>;
++	clock_in_out = "input";
+ 	phy-handle = <&rgmii_phy1>;
+ 	phy-mode = "rgmii-id";
+ 	pinctrl-names = "default";
+@@ -259,6 +265,7 @@
+ 		     &gmac1m1_tx_bus2
+ 		     &gmac1m1_rx_bus2
+ 		     &gmac1m1_rgmii_clk
++		     &gmac1m1_clkinout
+ 		     &gmac1m1_rgmii_bus>;
+ 	status = "okay";
+ };
diff --git a/target/linux/rockchip/patches-6.1/076-arm64-dts-rockchip-Add-support-of-regulator-for-ethe.patch b/target/linux/rockchip/patches-6.1/076-arm64-dts-rockchip-Add-support-of-regulator-for-ethe.patch
new file mode 100644
index 0000000000..81498ddad3
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/076-arm64-dts-rockchip-Add-support-of-regulator-for-ethe.patch
@@ -0,0 +1,31 @@
+From 63923db994aabd2f2124fc78b2fd001c4f4aaf82 Mon Sep 17 00:00:00 2001
+From: Anand Moon <linux.amoon@gmail.com>
+Date: Wed, 16 Nov 2022 20:01:45 +0000
+Subject: [PATCH 076/383] arm64: dts: rockchip: Add support of regulator for
+ ethernet node on Rock 3A SBC
+
+Add regulator support for ethernet node
+
+Fix following warning.
+[    7.365199] rk_gmac-dwmac fe010000.ethernet: no regulator found
+
+Signed-off-by: Anand Moon <linux.amoon@gmail.com>
+Acked-by: Michael Riesch <michael.riesch@wolfvision.net>
+Tested-by: Michael Riesch <michael.riesch@wolfvision.net>
+Link: https://lore.kernel.org/r/20221116200150.4657-4-linux.amoon@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
+@@ -260,6 +260,7 @@
+ 	clock_in_out = "input";
+ 	phy-handle = <&rgmii_phy1>;
+ 	phy-mode = "rgmii-id";
++	phy-supply = <&vcc_3v3>;
+ 	pinctrl-names = "default";
+ 	pinctrl-0 = <&gmac1m1_miim
+ 		     &gmac1m1_tx_bus2
diff --git a/target/linux/rockchip/patches-6.1/077-arm64-dts-rockchip-Move-most-of-Odroid-Go-Advance-DT.patch b/target/linux/rockchip/patches-6.1/077-arm64-dts-rockchip-Move-most-of-Odroid-Go-Advance-DT.patch
new file mode 100644
index 0000000000..437b862955
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/077-arm64-dts-rockchip-Move-most-of-Odroid-Go-Advance-DT.patch
@@ -0,0 +1,1280 @@
+From ee0ca0f4f7d59c10264b2fe88f463199550e5438 Mon Sep 17 00:00:00 2001
+From: Maya Matuszczyk <maccraft123mc@gmail.com>
+Date: Thu, 17 Nov 2022 22:59:50 +0100
+Subject: [PATCH 077/383] arm64: dts: rockchip: Move most of Odroid Go Advance
+ DTS into a DTSI
+
+To support more devices that are clones of this device or minor
+revisions without duplication move most of go2's dts into a dtsi file.
+
+Signed-off-by: Maya Matuszczyk <maccraft123mc@gmail.com>
+Link: https://lore.kernel.org/r/20221117215954.4114202-2-maccraft123mc@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3326-odroid-go.dtsi   | 600 +++++++++++++++++
+ .../boot/dts/rockchip/rk3326-odroid-go2.dts   | 619 +-----------------
+ 2 files changed, 608 insertions(+), 611 deletions(-)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi
+
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi
+@@ -0,0 +1,600 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2019 Hardkernel Co., Ltd
++ * Copyright (c) 2020 Theobroma Systems Design und Consulting GmbH
++ * Copyright (c) 2022 Maya Matuszczyk <maccraft123mc@gmail.com>
++ */
++
++/dts-v1/;
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/input/input.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rk3326.dtsi"
++
++/ {
++	aliases {
++		mmc0 = &sdmmc;
++	};
++
++	chosen {
++		stdout-path = "serial2:115200n8";
++	};
++
++	backlight: backlight {
++		compatible = "pwm-backlight";
++		power-supply = <&vcc_bl>;
++		pwms = <&pwm1 0 25000 0>;
++	};
++
++	builtin_gamepad: gpio-keys {
++		compatible = "gpio-keys";
++		pinctrl-names = "default";
++		pinctrl-0 = <&btn_pins>;
++
++		button-sw1 {
++			gpios = <&gpio1 RK_PB4 GPIO_ACTIVE_LOW>;
++			label = "DPAD-UP";
++			linux,code = <BTN_DPAD_UP>;
++		};
++		button-sw2 {
++			gpios = <&gpio1 RK_PB5 GPIO_ACTIVE_LOW>;
++			label = "DPAD-DOWN";
++			linux,code = <BTN_DPAD_DOWN>;
++		};
++		button-sw3 {
++			gpios = <&gpio1 RK_PB6 GPIO_ACTIVE_LOW>;
++			label = "DPAD-LEFT";
++			linux,code = <BTN_DPAD_LEFT>;
++		};
++		button-sw4 {
++			gpios = <&gpio1 RK_PB7 GPIO_ACTIVE_LOW>;
++			label = "DPAD-RIGHT";
++			linux,code = <BTN_DPAD_RIGHT>;
++		};
++		button-sw5 {
++			gpios = <&gpio1 RK_PA2 GPIO_ACTIVE_LOW>;
++			label = "BTN-A";
++			linux,code = <BTN_EAST>;
++		};
++		button-sw6 {
++			gpios = <&gpio1 RK_PA5 GPIO_ACTIVE_LOW>;
++			label = "BTN-B";
++			linux,code = <BTN_SOUTH>;
++		};
++		button-sw7 {
++			gpios = <&gpio1 RK_PA6 GPIO_ACTIVE_LOW>;
++			label = "BTN-Y";
++			linux,code = <BTN_WEST>;
++		};
++		button-sw8 {
++			gpios = <&gpio1 RK_PA7 GPIO_ACTIVE_LOW>;
++			label = "BTN-X";
++			linux,code = <BTN_NORTH>;
++		};
++		btn_f1: button-sw9 {
++			gpios = <&gpio2 RK_PA0 GPIO_ACTIVE_LOW>;
++			label = "F1";
++			linux,code = <BTN_TRIGGER_HAPPY1>;
++		};
++		btn_f2: button-sw10 {
++			gpios = <&gpio2 RK_PA1 GPIO_ACTIVE_LOW>;
++			label = "F2";
++			linux,code = <BTN_TRIGGER_HAPPY2>;
++		};
++		btn_f3: button-sw11 {
++			gpios = <&gpio2 RK_PA2 GPIO_ACTIVE_LOW>;
++			label = "F3";
++			linux,code = <BTN_TRIGGER_HAPPY3>;
++		};
++		btn_f4: button-sw12 {
++			gpios = <&gpio2 RK_PA3 GPIO_ACTIVE_LOW>;
++			label = "F4";
++			linux,code = <BTN_TRIGGER_HAPPY4>;
++		};
++		btn_f5: button-sw13 {
++			gpios = <&gpio2 RK_PA4 GPIO_ACTIVE_LOW>;
++			label = "F5";
++			linux,code = <BTN_TRIGGER_HAPPY5>;
++		};
++		btn_f6: button-sw14 {
++			gpios = <&gpio2 RK_PA5 GPIO_ACTIVE_LOW>;
++			label = "F6";
++			linux,code = <BTN_TRIGGER_HAPPY6>;
++		};
++		button-sw15 {
++			gpios = <&gpio2 RK_PA6 GPIO_ACTIVE_LOW>;
++			label = "TOP-LEFT";
++			linux,code = <BTN_TL>;
++		};
++		button-sw16 {
++			gpios = <&gpio2 RK_PA7 GPIO_ACTIVE_LOW>;
++			label = "TOP-RIGHT";
++			linux,code = <BTN_TR>;
++		};
++	};
++
++	leds: gpio-leds {
++		compatible = "gpio-leds";
++		pinctrl-names = "default";
++		pinctrl-0 = <&blue_led_pin>;
++
++		blue_led: led-0 {
++			label = "blue:heartbeat";
++			gpios = <&gpio0 RK_PC1 GPIO_ACTIVE_HIGH>;
++			linux,default-trigger = "heartbeat";
++		};
++	};
++
++	rk817-sound {
++		compatible = "simple-audio-card";
++		simple-audio-card,name = "Analog";
++		simple-audio-card,format = "i2s";
++		simple-audio-card,hp-det-gpio = <&gpio2 RK_PC6 GPIO_ACTIVE_HIGH>;
++		simple-audio-card,mclk-fs = <256>;
++		simple-audio-card,widgets =
++			"Microphone", "Mic Jack",
++			"Headphone", "Headphones",
++			"Speaker", "Speaker";
++		simple-audio-card,routing =
++			"MICL", "Mic Jack",
++			"Headphones", "HPOL",
++			"Headphones", "HPOR",
++			"Speaker", "SPKO";
++
++		simple-audio-card,codec {
++			sound-dai = <&rk817>;
++		};
++
++		simple-audio-card,cpu {
++			sound-dai = <&i2s1_2ch>;
++		};
++	};
++
++	vccsys: vccsys {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v8_sys";
++		regulator-always-on;
++		regulator-min-microvolt = <3800000>;
++		regulator-max-microvolt = <3800000>;
++	};
++
++	vcc_host: vcc_host {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_host";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++
++		gpio = <&gpio0 RK_PB7 GPIO_ACTIVE_HIGH>;
++		enable-active-high;
++		regulator-always-on;
++		regulator-boot-on;
++		vin-supply = <&usb_midu>;
++	};
++};
++
++&cpu0 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&cpu1 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&cpu2 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&cpu3 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&cru {
++	assigned-clocks = <&cru PLL_NPLL>,
++		<&cru ACLK_BUS_PRE>, <&cru ACLK_PERI_PRE>,
++		<&cru HCLK_BUS_PRE>, <&cru HCLK_PERI_PRE>,
++		<&cru PCLK_BUS_PRE>, <&cru SCLK_GPU>,
++		<&cru PLL_CPLL>;
++
++	assigned-clock-rates = <1188000000>,
++		<200000000>, <200000000>,
++		<150000000>, <150000000>,
++		<100000000>, <200000000>,
++		<17000000>;
++};
++
++&display_subsystem {
++	status = "okay";
++};
++
++&dsi {
++	status = "okay";
++
++	ports {
++		mipi_out: port@1 {
++			reg = <1>;
++
++			mipi_out_panel: endpoint {
++				remote-endpoint = <&mipi_in_panel>;
++			};
++		};
++	};
++
++	internal_display: panel@0 {
++		reg = <0>;
++		backlight = <&backlight>;
++		iovcc-supply = <&vcc_lcd>;
++		reset-gpios = <&gpio3 RK_PC0 GPIO_ACTIVE_LOW>;
++		rotation = <270>;
++		vdd-supply = <&vcc_lcd>;
++
++		port {
++			mipi_in_panel: endpoint {
++				remote-endpoint = <&mipi_out_panel>;
++			};
++		};
++	};
++};
++
++&dsi_dphy {
++	status = "okay";
++};
++
++&gpu {
++	mali-supply = <&vdd_logic>;
++	status = "okay";
++};
++
++&i2c0 {
++	clock-frequency = <400000>;
++	i2c-scl-falling-time-ns = <16>;
++	i2c-scl-rising-time-ns = <280>;
++	status = "okay";
++
++	rk817: pmic@20 {
++		compatible = "rockchip,rk817";
++		reg = <0x20>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PB2 IRQ_TYPE_LEVEL_LOW>;
++		clock-output-names = "rk808-clkout1", "xin32k";
++		clock-names = "mclk";
++		clocks = <&cru SCLK_I2S1_OUT>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pmic_int>, <&i2s1_2ch_mclk>;
++		wakeup-source;
++		#clock-cells = <1>;
++		#sound-dai-cells = <0>;
++
++		vcc1-supply = <&vccsys>;
++		vcc2-supply = <&vccsys>;
++		vcc3-supply = <&vccsys>;
++		vcc4-supply = <&vccsys>;
++		vcc5-supply = <&vccsys>;
++		vcc6-supply = <&vccsys>;
++		vcc7-supply = <&vccsys>;
++		vcc8-supply = <&vccsys>;
++
++		regulators {
++			vdd_logic: DCDC_REG1 {
++				regulator-name = "vdd_logic";
++				regulator-min-microvolt = <950000>;
++				regulator-max-microvolt = <1150000>;
++				regulator-ramp-delay = <6001>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <950000>;
++				};
++			};
++
++			vdd_arm: DCDC_REG2 {
++				regulator-name = "vdd_arm";
++				regulator-min-microvolt = <950000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <950000>;
++				};
++			};
++
++			vcc_ddr: DCDC_REG3 {
++				regulator-name = "vcc_ddr";
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vcc_3v3: DCDC_REG4 {
++				regulator-name = "vcc_3v3";
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcc_1v8: LDO_REG2 {
++				regulator-name = "vcc_1v8";
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vdd_1v0: LDO_REG3 {
++				regulator-name = "vdd_1v0";
++				regulator-min-microvolt = <1000000>;
++				regulator-max-microvolt = <1000000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1000000>;
++				};
++			};
++
++			vcc3v3_pmu: LDO_REG4 {
++				regulator-name = "vcc3v3_pmu";
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vccio_sd: LDO_REG5 {
++				regulator-name = "vccio_sd";
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcc_sd: LDO_REG6 {
++				regulator-name = "vcc_sd";
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcc_bl: LDO_REG7 {
++				regulator-name = "vcc_bl";
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcc_lcd: LDO_REG8 {
++				regulator-name = "vcc_lcd";
++				regulator-min-microvolt = <2800000>;
++				regulator-max-microvolt = <2800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <2800000>;
++				};
++			};
++
++			LDO_REG9 {
++				/* unused */
++			};
++
++			usb_midu: BOOST {
++				regulator-name = "usb_midu";
++				regulator-min-microvolt = <5000000>;
++				regulator-max-microvolt = <5400000>;
++				regulator-always-on;
++				regulator-boot-on;
++			};
++		};
++
++		rk817_charger: charger {
++			rockchip,resistor-sense-micro-ohms = <10000>;
++			rockchip,sleep-enter-current-microamp = <300000>;
++			rockchip,sleep-filter-current-microamp = <100000>;
++		};
++
++		rk817_codec: codec {
++			rockchip,mic-in-differential;
++		};
++	};
++};
++
++/* EXT Header(P2): 7(SCL:GPIO0.C2), 8(SDA:GPIO0.C3) */
++&i2c1 {
++	clock-frequency = <400000>;
++	status = "okay";
++};
++
++/* I2S 1 Channel Used */
++&i2s1_2ch {
++	status = "okay";
++};
++
++&io_domains {
++	vccio1-supply = <&vcc_3v3>;
++	vccio2-supply = <&vccio_sd>;
++	vccio3-supply = <&vcc_3v3>;
++	vccio4-supply = <&vcc_3v3>;
++	vccio5-supply = <&vcc_3v3>;
++	vccio6-supply = <&vcc_3v3>;
++	status = "okay";
++};
++
++&pmu_io_domains {
++	pmuio1-supply = <&vcc3v3_pmu>;
++	pmuio2-supply = <&vcc3v3_pmu>;
++	status = "okay";
++};
++
++&pwm1 {
++	status = "okay";
++};
++
++&saradc {
++	vref-supply = <&vcc_1v8>;
++	status = "okay";
++};
++
++&sdmmc {
++	cap-sd-highspeed;
++	card-detect-delay = <200>;
++	cd-gpios = <&gpio0 RK_PA3 GPIO_ACTIVE_LOW>; /*[> CD GPIO <]*/
++	sd-uhs-sdr12;
++	sd-uhs-sdr25;
++	sd-uhs-sdr50;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc_sd>;
++	vqmmc-supply = <&vccio_sd>;
++	status = "okay";
++};
++
++&sfc {
++	pinctrl-0 = <&sfc_clk &sfc_cs0 &sfc_bus2>;
++	pinctrl-names = "default";
++	#address-cells = <1>;
++	#size-cells = <0>;
++	status = "okay";
++
++	flash@0 {
++		compatible = "jedec,spi-nor";
++		reg = <0>;
++		spi-max-frequency = <108000000>;
++		spi-rx-bus-width = <2>;
++		spi-tx-bus-width = <1>;
++	};
++};
++
++&tsadc {
++	status = "okay";
++};
++
++&u2phy {
++	status = "okay";
++
++	u2phy_host: host-port {
++		status = "okay";
++	};
++
++	u2phy_otg: otg-port {
++		status = "disabled";
++	};
++};
++
++&usb20_otg {
++	status = "okay";
++};
++
++/* EXT Header(P2): 2(RXD:GPIO1.C0),3(TXD:.C1),4(CTS:.C2),5(RTS:.C3) */
++&uart1 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&uart1_xfer &uart1_cts>;
++	status = "okay";
++};
++
++&uart2 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&uart2m1_xfer>;
++	status = "okay";
++};
++
++&vopb {
++	status = "okay";
++};
++
++&vopb_mmu {
++	status = "okay";
++};
++
++&pinctrl {
++	btns {
++		btn_pins: btn-pins {
++			rockchip,pins = <1 RK_PA2 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PA5 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PA7 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB4 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB5 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB6 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB7 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA0 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA1 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA2 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA4 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA5 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA7 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	headphone {
++		hp_det: hp-det {
++			rockchip,pins = <2 RK_PC6 RK_FUNC_GPIO &pcfg_pull_down>;
++		};
++	};
++
++	leds {
++		blue_led_pin: blue-led-pin {
++			rockchip,pins = <0 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	pmic {
++		dc_det: dc-det {
++			rockchip,pins = <0 RK_PB3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		pmic_int: pmic-int {
++			rockchip,pins = <0 RK_PB2 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++
++		soc_slppin_gpio: soc_slppin_gpio {
++			rockchip,pins = <0 RK_PA4 RK_FUNC_GPIO &pcfg_output_low>;
++		};
++
++		soc_slppin_rst: soc_slppin_rst {
++			rockchip,pins = <0 RK_PA4 2 &pcfg_pull_none>;
++		};
++
++		soc_slppin_slp: soc_slppin_slp {
++			rockchip,pins = <0 RK_PA4 1 &pcfg_pull_none>;
++		};
++	};
++};
+--- a/arch/arm64/boot/dts/rockchip/rk3326-odroid-go2.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go2.dts
+@@ -2,27 +2,17 @@
+ /*
+  * Copyright (c) 2019 Hardkernel Co., Ltd
+  * Copyright (c) 2020 Theobroma Systems Design und Consulting GmbH
++ * Copyright (c) 2022 Maya Matuszczyk <maccraft123mc@gmail.com>
+  */
+ 
+ /dts-v1/;
+-#include <dt-bindings/gpio/gpio.h>
+-#include <dt-bindings/input/input.h>
+-#include <dt-bindings/pinctrl/rockchip.h>
+-#include "rk3326.dtsi"
++#include "rk3326-odroid-go.dtsi"
+ 
+ / {
+ 	model = "ODROID-GO Advance";
+ 	compatible = "hardkernel,rk3326-odroid-go2", "rockchip,rk3326";
+ 
+-	aliases {
+-		mmc0 = &sdmmc;
+-	};
+-
+-	chosen {
+-		stdout-path = "serial2:115200n8";
+-	};
+-
+-	adc-joystick {
++	analog_sticks: adc-joystick {
+ 		compatible = "adc-joystick";
+ 		io-channels = <&saradc 1>,
+ 			      <&saradc 2>;
+@@ -47,12 +37,6 @@
+ 		};
+ 	};
+ 
+-	backlight: backlight {
+-		compatible = "pwm-backlight";
+-		power-supply = <&vcc_bl>;
+-		pwms = <&pwm1 0 25000 0>;
+-	};
+-
+ 	battery: battery {
+ 		compatible = "simple-battery";
+ 		charge-full-design-microamp-hours = <3000000>;
+@@ -64,606 +48,19 @@
+ 		voltage-min-design-microvolt = <3500000>;
+ 
+ 		ocv-capacity-celsius = <20>;
+-		ocv-capacity-table-0 =	<4046950 100>, <4001920 95>, <3967900 90>, <3919950 85>,
++		ocv-capacity-table-0 =  <4046950 100>, <4001920 95>, <3967900 90>, <3919950 85>,
+ 					<3888450 80>, <3861850 75>, <3831540 70>, <3799130 65>,
+ 					<3768190 60>, <3745650 55>, <3726610 50>, <3711630 45>,
+ 					<3696720 40>, <3685660 35>, <3674950 30>, <3663050 25>,
+ 					<3649470 20>, <3635260 15>, <3616920 10>, <3592440 5>,
+ 					<3574170 0>;
+ 	};
+-
+-	gpio-keys {
+-		compatible = "gpio-keys";
+-		pinctrl-names = "default";
+-		pinctrl-0 = <&btn_pins>;
+-
+-		/*
+-		 *      *** ODROIDGO2-Advance Switch layout ***
+-		 * |------------------------------------------------|
+-		 * | sw15                                      sw16 |
+-		 * |------------------------------------------------|
+-		 * |     sw1      |-------------------|      sw8    |
+-		 * |  sw3   sw4   |                   |   sw7   sw5 |
+-		 * |     sw2      |    LCD Display    |      sw6    |
+-		 * |              |                   |             |
+-		 * |              |-------------------|             |
+-		 * |         sw9 sw10   sw11 sw12   sw13 sw14       |
+-		 * |------------------------------------------------|
+-		 */
+-
+-		button-sw1 {
+-			gpios = <&gpio1 RK_PB4 GPIO_ACTIVE_LOW>;
+-			label = "DPAD-UP";
+-			linux,code = <BTN_DPAD_UP>;
+-		};
+-		button-sw2 {
+-			gpios = <&gpio1 RK_PB5 GPIO_ACTIVE_LOW>;
+-			label = "DPAD-DOWN";
+-			linux,code = <BTN_DPAD_DOWN>;
+-		};
+-		button-sw3 {
+-			gpios = <&gpio1 RK_PB6 GPIO_ACTIVE_LOW>;
+-			label = "DPAD-LEFT";
+-			linux,code = <BTN_DPAD_LEFT>;
+-		};
+-		button-sw4 {
+-			gpios = <&gpio1 RK_PB7 GPIO_ACTIVE_LOW>;
+-			label = "DPAD-RIGHT";
+-			linux,code = <BTN_DPAD_RIGHT>;
+-		};
+-		button-sw5 {
+-			gpios = <&gpio1 RK_PA2 GPIO_ACTIVE_LOW>;
+-			label = "BTN-A";
+-			linux,code = <BTN_EAST>;
+-		};
+-		button-sw6 {
+-			gpios = <&gpio1 RK_PA5 GPIO_ACTIVE_LOW>;
+-			label = "BTN-B";
+-			linux,code = <BTN_SOUTH>;
+-		};
+-		button-sw7 {
+-			gpios = <&gpio1 RK_PA6 GPIO_ACTIVE_LOW>;
+-			label = "BTN-Y";
+-			linux,code = <BTN_WEST>;
+-		};
+-		button-sw8 {
+-			gpios = <&gpio1 RK_PA7 GPIO_ACTIVE_LOW>;
+-			label = "BTN-X";
+-			linux,code = <BTN_NORTH>;
+-		};
+-		button-sw9 {
+-			gpios = <&gpio2 RK_PA0 GPIO_ACTIVE_LOW>;
+-			label = "F1";
+-			linux,code = <BTN_TRIGGER_HAPPY1>;
+-		};
+-		button-sw10 {
+-			gpios = <&gpio2 RK_PA1 GPIO_ACTIVE_LOW>;
+-			label = "F2";
+-			linux,code = <BTN_TRIGGER_HAPPY2>;
+-		};
+-		button-sw11 {
+-			gpios = <&gpio2 RK_PA2 GPIO_ACTIVE_LOW>;
+-			label = "F3";
+-			linux,code = <BTN_TRIGGER_HAPPY3>;
+-		};
+-		button-sw12 {
+-			gpios = <&gpio2 RK_PA3 GPIO_ACTIVE_LOW>;
+-			label = "F4";
+-			linux,code = <BTN_TRIGGER_HAPPY4>;
+-		};
+-		button-sw13 {
+-			gpios = <&gpio2 RK_PA4 GPIO_ACTIVE_LOW>;
+-			label = "F5";
+-			linux,code = <BTN_TRIGGER_HAPPY5>;
+-		};
+-		button-sw14 {
+-			gpios = <&gpio2 RK_PA5 GPIO_ACTIVE_LOW>;
+-			label = "F6";
+-			linux,code = <BTN_TRIGGER_HAPPY6>;
+-		};
+-		button-sw15 {
+-			gpios = <&gpio2 RK_PA6 GPIO_ACTIVE_LOW>;
+-			label = "TOP-LEFT";
+-			linux,code = <BTN_TL>;
+-		};
+-		button-sw16 {
+-			gpios = <&gpio2 RK_PA7 GPIO_ACTIVE_LOW>;
+-			label = "TOP-RIGHT";
+-			linux,code = <BTN_TR>;
+-		};
+-	};
+-
+-	leds: gpio-leds {
+-		compatible = "gpio-leds";
+-		pinctrl-names = "default";
+-		pinctrl-0 = <&blue_led_pin>;
+-
+-		blue_led: led-0 {
+-			label = "blue:heartbeat";
+-			gpios = <&gpio0 RK_PC1 GPIO_ACTIVE_HIGH>;
+-			linux,default-trigger = "heartbeat";
+-		};
+-	};
+-
+-	rk817-sound {
+-		compatible = "simple-audio-card";
+-		simple-audio-card,name = "Analog";
+-		simple-audio-card,format = "i2s";
+-		simple-audio-card,hp-det-gpio = <&gpio2 RK_PC6 GPIO_ACTIVE_HIGH>;
+-		simple-audio-card,mclk-fs = <256>;
+-		simple-audio-card,widgets =
+-			"Microphone", "Mic Jack",
+-			"Headphone", "Headphones",
+-			"Speaker", "Speaker";
+-		simple-audio-card,routing =
+-			"MICL", "Mic Jack",
+-			"Headphones", "HPOL",
+-			"Headphones", "HPOR",
+-			"Speaker", "SPKO";
+-
+-		simple-audio-card,codec {
+-			sound-dai = <&rk817>;
+-		};
+-
+-		simple-audio-card,cpu {
+-			sound-dai = <&i2s1_2ch>;
+-		};
+-	};
+-
+-	vccsys: vccsys {
+-		compatible = "regulator-fixed";
+-		regulator-name = "vcc3v8_sys";
+-		regulator-always-on;
+-		regulator-min-microvolt = <3800000>;
+-		regulator-max-microvolt = <3800000>;
+-	};
+-
+-	vcc_host: vcc_host {
+-		compatible = "regulator-fixed";
+-		regulator-name = "vcc_host";
+-		regulator-min-microvolt = <5000000>;
+-		regulator-max-microvolt = <5000000>;
+-
+-		gpio = <&gpio0 RK_PB7 GPIO_ACTIVE_HIGH>;
+-		enable-active-high;
+-		regulator-always-on;
+-		regulator-boot-on;
+-		vin-supply = <&usb_midu>;
+-	};
+-};
+-
+-&cpu0 {
+-	cpu-supply = <&vdd_arm>;
+-};
+-
+-&cpu1 {
+-	cpu-supply = <&vdd_arm>;
+-};
+-
+-&cpu2 {
+-	cpu-supply = <&vdd_arm>;
+-};
+-
+-&cpu3 {
+-	cpu-supply = <&vdd_arm>;
+-};
+-
+-&cru {
+-	assigned-clocks = <&cru PLL_NPLL>,
+-		<&cru ACLK_BUS_PRE>, <&cru ACLK_PERI_PRE>,
+-		<&cru HCLK_BUS_PRE>, <&cru HCLK_PERI_PRE>,
+-		<&cru PCLK_BUS_PRE>, <&cru SCLK_GPU>,
+-		<&cru PLL_CPLL>;
+-
+-	assigned-clock-rates = <1188000000>,
+-		<200000000>, <200000000>,
+-		<150000000>, <150000000>,
+-		<100000000>, <200000000>,
+-		<17000000>;
+ };
+ 
+-&display_subsystem {
+-	status = "okay";
++&internal_display {
++	compatible = "elida,kd35t133";
+ };
+ 
+-&dsi {
+-	status = "okay";
+-
+-	ports {
+-		mipi_out: port@1 {
+-			reg = <1>;
+-
+-			mipi_out_panel: endpoint {
+-				remote-endpoint = <&mipi_in_panel>;
+-			};
+-		};
+-	};
+-
+-	panel@0 {
+-		compatible = "elida,kd35t133";
+-		reg = <0>;
+-		backlight = <&backlight>;
+-		iovcc-supply = <&vcc_lcd>;
+-		reset-gpios = <&gpio3 RK_PC0 GPIO_ACTIVE_LOW>;
+-		rotation = <270>;
+-		vdd-supply = <&vcc_lcd>;
+-
+-		port {
+-			mipi_in_panel: endpoint {
+-				remote-endpoint = <&mipi_out_panel>;
+-			};
+-		};
+-	};
+-};
+-
+-&dsi_dphy {
+-	status = "okay";
+-};
+-
+-&gpu {
+-	mali-supply = <&vdd_logic>;
+-	status = "okay";
+-};
+-
+-&i2c0 {
+-	clock-frequency = <400000>;
+-	i2c-scl-falling-time-ns = <16>;
+-	i2c-scl-rising-time-ns = <280>;
+-	status = "okay";
+-
+-	rk817: pmic@20 {
+-		compatible = "rockchip,rk817";
+-		reg = <0x20>;
+-		interrupt-parent = <&gpio0>;
+-		interrupts = <RK_PB2 IRQ_TYPE_LEVEL_LOW>;
+-		clock-output-names = "rk808-clkout1", "xin32k";
+-		clock-names = "mclk";
+-		clocks = <&cru SCLK_I2S1_OUT>;
+-		pinctrl-names = "default";
+-		pinctrl-0 = <&pmic_int>, <&i2s1_2ch_mclk>;
+-		wakeup-source;
+-		#clock-cells = <1>;
+-		#sound-dai-cells = <0>;
+-
+-		vcc1-supply = <&vccsys>;
+-		vcc2-supply = <&vccsys>;
+-		vcc3-supply = <&vccsys>;
+-		vcc4-supply = <&vccsys>;
+-		vcc5-supply = <&vccsys>;
+-		vcc6-supply = <&vccsys>;
+-		vcc7-supply = <&vccsys>;
+-		vcc8-supply = <&vccsys>;
+-
+-		regulators {
+-			vdd_logic: DCDC_REG1 {
+-				regulator-name = "vdd_logic";
+-				regulator-min-microvolt = <950000>;
+-				regulator-max-microvolt = <1150000>;
+-				regulator-ramp-delay = <6001>;
+-				regulator-always-on;
+-				regulator-boot-on;
+-
+-				regulator-state-mem {
+-					regulator-on-in-suspend;
+-					regulator-suspend-microvolt = <950000>;
+-				};
+-			};
+-
+-			vdd_arm: DCDC_REG2 {
+-				regulator-name = "vdd_arm";
+-				regulator-min-microvolt = <950000>;
+-				regulator-max-microvolt = <1350000>;
+-				regulator-ramp-delay = <6001>;
+-				regulator-always-on;
+-				regulator-boot-on;
+-
+-				regulator-state-mem {
+-					regulator-off-in-suspend;
+-					regulator-suspend-microvolt = <950000>;
+-				};
+-			};
+-
+-			vcc_ddr: DCDC_REG3 {
+-				regulator-name = "vcc_ddr";
+-				regulator-always-on;
+-				regulator-boot-on;
+-
+-				regulator-state-mem {
+-					regulator-on-in-suspend;
+-				};
+-			};
+-
+-			vcc_3v3: DCDC_REG4 {
+-				regulator-name = "vcc_3v3";
+-				regulator-min-microvolt = <3300000>;
+-				regulator-max-microvolt = <3300000>;
+-				regulator-always-on;
+-				regulator-boot-on;
+-
+-				regulator-state-mem {
+-					regulator-off-in-suspend;
+-					regulator-suspend-microvolt = <3300000>;
+-				};
+-			};
+-
+-			vcc_1v8: LDO_REG2 {
+-				regulator-name = "vcc_1v8";
+-				regulator-min-microvolt = <1800000>;
+-				regulator-max-microvolt = <1800000>;
+-				regulator-always-on;
+-				regulator-boot-on;
+-
+-				regulator-state-mem {
+-					regulator-on-in-suspend;
+-					regulator-suspend-microvolt = <1800000>;
+-				};
+-			};
+-
+-			vdd_1v0: LDO_REG3 {
+-				regulator-name = "vdd_1v0";
+-				regulator-min-microvolt = <1000000>;
+-				regulator-max-microvolt = <1000000>;
+-				regulator-always-on;
+-				regulator-boot-on;
+-
+-				regulator-state-mem {
+-					regulator-on-in-suspend;
+-					regulator-suspend-microvolt = <1000000>;
+-				};
+-			};
+-
+-			vcc3v3_pmu: LDO_REG4 {
+-				regulator-name = "vcc3v3_pmu";
+-				regulator-min-microvolt = <3300000>;
+-				regulator-max-microvolt = <3300000>;
+-				regulator-always-on;
+-				regulator-boot-on;
+-
+-				regulator-state-mem {
+-					regulator-on-in-suspend;
+-					regulator-suspend-microvolt = <3300000>;
+-				};
+-			};
+-
+-			vccio_sd: LDO_REG5 {
+-				regulator-name = "vccio_sd";
+-				regulator-min-microvolt = <1800000>;
+-				regulator-max-microvolt = <3300000>;
+-				regulator-always-on;
+-				regulator-boot-on;
+-
+-				regulator-state-mem {
+-					regulator-on-in-suspend;
+-					regulator-suspend-microvolt = <3300000>;
+-				};
+-			};
+-
+-			vcc_sd: LDO_REG6 {
+-				regulator-name = "vcc_sd";
+-				regulator-min-microvolt = <3300000>;
+-				regulator-max-microvolt = <3300000>;
+-				regulator-boot-on;
+-
+-				regulator-state-mem {
+-					regulator-on-in-suspend;
+-					regulator-suspend-microvolt = <3300000>;
+-				};
+-			};
+-
+-			vcc_bl: LDO_REG7 {
+-				regulator-name = "vcc_bl";
+-				regulator-min-microvolt = <3300000>;
+-				regulator-max-microvolt = <3300000>;
+-
+-				regulator-state-mem {
+-					regulator-off-in-suspend;
+-					regulator-suspend-microvolt = <3300000>;
+-				};
+-			};
+-
+-			vcc_lcd: LDO_REG8 {
+-				regulator-name = "vcc_lcd";
+-				regulator-min-microvolt = <2800000>;
+-				regulator-max-microvolt = <2800000>;
+-
+-				regulator-state-mem {
+-					regulator-off-in-suspend;
+-					regulator-suspend-microvolt = <2800000>;
+-				};
+-			};
+-
+-			vcc_cam: LDO_REG9 {
+-				regulator-name = "vcc_cam";
+-				regulator-min-microvolt = <3000000>;
+-				regulator-max-microvolt = <3000000>;
+-
+-				regulator-state-mem {
+-					regulator-off-in-suspend;
+-					regulator-suspend-microvolt = <3000000>;
+-				};
+-			};
+-
+-			usb_midu: BOOST {
+-				regulator-name = "usb_midu";
+-				regulator-min-microvolt = <5000000>;
+-				regulator-max-microvolt = <5400000>;
+-				regulator-always-on;
+-				regulator-boot-on;
+-			};
+-		};
+-
+-		rk817_charger: charger {
+-			monitored-battery = <&battery>;
+-			rockchip,resistor-sense-micro-ohms = <10000>;
+-			rockchip,sleep-enter-current-microamp = <300000>;
+-			rockchip,sleep-filter-current-microamp = <100000>;
+-		};
+-
+-		rk817_codec: codec {
+-			rockchip,mic-in-differential;
+-		};
+-	};
+-};
+-
+-/* EXT Header(P2): 7(SCL:GPIO0.C2), 8(SDA:GPIO0.C3) */
+-&i2c1 {
+-	clock-frequency = <400000>;
+-	status = "okay";
+-};
+-
+-/* I2S 1 Channel Used */
+-&i2s1_2ch {
+-	status = "okay";
+-};
+-
+-&io_domains {
+-	vccio1-supply = <&vcc_3v3>;
+-	vccio2-supply = <&vccio_sd>;
+-	vccio3-supply = <&vcc_3v3>;
+-	vccio4-supply = <&vcc_3v3>;
+-	vccio5-supply = <&vcc_3v3>;
+-	vccio6-supply = <&vcc_3v3>;
+-	status = "okay";
+-};
+-
+-&pmu_io_domains {
+-	pmuio1-supply = <&vcc3v3_pmu>;
+-	pmuio2-supply = <&vcc3v3_pmu>;
+-	status = "okay";
+-};
+-
+-&pwm1 {
+-	status = "okay";
+-};
+-
+-&saradc {
+-	vref-supply = <&vcc_1v8>;
+-	status = "okay";
+-};
+-
+-&sdmmc {
+-	cap-sd-highspeed;
+-	card-detect-delay = <200>;
+-	cd-gpios = <&gpio0 RK_PA3 GPIO_ACTIVE_LOW>; /*[> CD GPIO <]*/
+-	sd-uhs-sdr12;
+-	sd-uhs-sdr25;
+-	sd-uhs-sdr50;
+-	sd-uhs-sdr104;
+-	vmmc-supply = <&vcc_sd>;
+-	vqmmc-supply = <&vccio_sd>;
+-	status = "okay";
+-};
+-
+-&sfc {
+-	pinctrl-0 = <&sfc_clk &sfc_cs0 &sfc_bus2>;
+-	pinctrl-names = "default";
+-	#address-cells = <1>;
+-	#size-cells = <0>;
+-	status = "okay";
+-
+-	flash@0 {
+-		compatible = "jedec,spi-nor";
+-		reg = <0>;
+-		spi-max-frequency = <108000000>;
+-		spi-rx-bus-width = <2>;
+-		spi-tx-bus-width = <1>;
+-	};
+-};
+-
+-&tsadc {
+-	status = "okay";
+-};
+-
+-&u2phy {
+-	status = "okay";
+-
+-	u2phy_host: host-port {
+-		status = "okay";
+-	};
+-
+-	u2phy_otg: otg-port {
+-		status = "disabled";
+-	};
+-};
+-
+-&usb20_otg {
+-	status = "okay";
+-};
+-
+-/* EXT Header(P2): 2(RXD:GPIO1.C0),3(TXD:.C1),4(CTS:.C2),5(RTS:.C3) */
+-&uart1 {
+-	pinctrl-names = "default";
+-	pinctrl-0 = <&uart1_xfer &uart1_cts>;
+-	status = "okay";
+-};
+-
+-&uart2 {
+-	pinctrl-names = "default";
+-	pinctrl-0 = <&uart2m1_xfer>;
+-	status = "okay";
+-};
+-
+-&vopb {
+-	status = "okay";
+-};
+-
+-&vopb_mmu {
+-	status = "okay";
+-};
+-
+-&pinctrl {
+-	btns {
+-		btn_pins: btn-pins {
+-			rockchip,pins = <1 RK_PA2 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<1 RK_PA5 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<1 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<1 RK_PA7 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<1 RK_PB4 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<1 RK_PB5 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<1 RK_PB6 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<1 RK_PB7 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<2 RK_PA0 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<2 RK_PA1 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<2 RK_PA2 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<2 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<2 RK_PA4 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<2 RK_PA5 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<2 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>,
+-					<2 RK_PA7 RK_FUNC_GPIO &pcfg_pull_up>;
+-		};
+-	};
+-
+-	headphone {
+-		hp_det: hp-det {
+-			rockchip,pins = <2 RK_PC6 RK_FUNC_GPIO &pcfg_pull_down>;
+-		};
+-	};
+-
+-	leds {
+-		blue_led_pin: blue-led-pin {
+-			rockchip,pins = <0 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
+-		};
+-	};
+-
+-	pmic {
+-		dc_det: dc-det {
+-			rockchip,pins = <0 RK_PB3 RK_FUNC_GPIO &pcfg_pull_none>;
+-		};
+-
+-		pmic_int: pmic-int {
+-			rockchip,pins = <0 RK_PB2 RK_FUNC_GPIO &pcfg_pull_up>;
+-		};
+-
+-		soc_slppin_gpio: soc_slppin_gpio {
+-			rockchip,pins = <0 RK_PA4 RK_FUNC_GPIO &pcfg_output_low>;
+-		};
+-
+-		soc_slppin_rst: soc_slppin_rst {
+-			rockchip,pins = <0 RK_PA4 2 &pcfg_pull_none>;
+-		};
+-
+-		soc_slppin_slp: soc_slppin_slp {
+-			rockchip,pins = <0 RK_PA4 1 &pcfg_pull_none>;
+-		};
+-	};
++&rk817_charger {
++	monitored-battery = <&battery>;
+ };
diff --git a/target/linux/rockchip/patches-6.1/078-arm64-dts-rockchip-Add-Odroid-Go-Advance-Black-Editi.patch b/target/linux/rockchip/patches-6.1/078-arm64-dts-rockchip-Add-Odroid-Go-Advance-Black-Editi.patch
new file mode 100644
index 0000000000..da75568beb
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/078-arm64-dts-rockchip-Add-Odroid-Go-Advance-Black-Editi.patch
@@ -0,0 +1,188 @@
+From b2fb15ee053aa3d9d0918b246e70603b1560de98 Mon Sep 17 00:00:00 2001
+From: Maya Matuszczyk <maccraft123mc@gmail.com>
+Date: Thu, 17 Nov 2022 22:59:52 +0100
+Subject: [PATCH 078/383] arm64: dts: rockchip: Add Odroid Go Advance Black
+ Edition
+
+This device is a minor revision of the origin Odroid Go Advance, with
+added two more buttons and a WiFi card
+
+Signed-off-by: Maya Matuszczyk <maccraft123mc@gmail.com>
+Link: https://lore.kernel.org/r/20221117215954.4114202-4-maccraft123mc@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../dts/rockchip/rk3326-odroid-go2-v11.dts    | 156 ++++++++++++++++++
+ 2 files changed, 157 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3326-odroid-go2-v11.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -9,6 +9,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3308-ro
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3308-rock-pi-s.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3318-a95x-z2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-odroid-go2.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-odroid-go2-v11.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-a1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-evb.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2s.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go2-v11.dts
+@@ -0,0 +1,156 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2019 Hardkernel Co., Ltd
++ * Copyright (c) 2020 Theobroma Systems Design und Consulting GmbH
++ * Copyright (c) 2022 Maya Matuszczyk <maccraft123mc@gmail.com>
++ */
++
++/dts-v1/;
++#include "rk3326-odroid-go.dtsi"
++
++/ {
++	model = "ODROID-GO Advance Black Edition";
++	compatible = "hardkernel,rk3326-odroid-go2-v11", "rockchip,rk3326";
++
++	aliases {
++		mmc1 = &sdio;
++	};
++
++	analog_sticks: adc-joystick {
++		compatible = "adc-joystick";
++		io-channels = <&saradc 1>,
++			      <&saradc 2>;
++		poll-interval = <60>;
++		#address-cells = <1>;
++		#size-cells = <0>;
++
++		axis@0 {
++			reg = <0>;
++			abs-flat = <10>;
++			abs-fuzz = <10>;
++			abs-range = <172 772>;
++			linux,code = <ABS_X>;
++			};
++
++		axis@1 {
++			reg = <1>;
++			abs-flat = <10>;
++			abs-fuzz = <10>;
++			abs-range = <278 815>;
++			linux,code = <ABS_Y>;
++		};
++	};
++
++	battery: battery {
++		compatible = "simple-battery";
++		charge-full-design-microamp-hours = <3000000>;
++		charge-term-current-microamp = <300000>;
++		constant-charge-current-max-microamp = <2000000>;
++		constant-charge-voltage-max-microvolt = <4200000>;
++		factory-internal-resistance-micro-ohms = <180000>;
++		voltage-max-design-microvolt = <4100000>;
++		voltage-min-design-microvolt = <3500000>;
++
++		ocv-capacity-celsius = <20>;
++		ocv-capacity-table-0 =  <4046950 100>, <4001920 95>, <3967900 90>, <3919950 85>,
++					<3888450 80>, <3861850 75>, <3831540 70>, <3799130 65>,
++					<3768190 60>, <3745650 55>, <3726610 50>, <3711630 45>,
++					<3696720 40>, <3685660 35>, <3674950 30>, <3663050 25>,
++					<3649470 20>, <3635260 15>, <3616920 10>, <3592440 5>,
++					<3574170 0>;
++	};
++
++	wifi_pwrseq: wifi-pwrseq {
++		compatible = "mmc-pwrseq-simple";
++		pinctrl-names = "default";
++		pinctrl-0 = <&wifi_pwrseq_pins>;
++		reset-gpios = <&gpio3 RK_PB1 GPIO_ACTIVE_LOW>;
++	};
++};
++
++&builtin_gamepad {
++	button-sw20 {
++		gpios = <&gpio3 RK_PB7 GPIO_ACTIVE_LOW>;
++		label = "TOP-LEFT 2";
++		linux,code = <BTN_TL2>;
++	};
++	button-sw21 {
++		gpios = <&gpio3 RK_PB2 GPIO_ACTIVE_LOW>;
++		label = "TOP-RIGHT 2";
++		linux,code = <BTN_TR2>;
++	};
++};
++
++&internal_display {
++	compatible = "elida,kd35t133";
++};
++
++&rk817 {
++	regulators {
++		vcc_wifi: LDO_REG9 {
++			regulator-name = "vcc_wifi";
++			regulator-min-microvolt = <3300000>;
++			regulator-max-microvolt = <3300000>;
++
++			regulator-state-mem {
++				regulator-on-in-suspend;
++				regulator-suspend-microvolt = <3300000>;
++			};
++		};
++	};
++};
++
++&rk817_charger {
++	monitored-battery = <&battery>;
++};
++
++&sdio {
++	bus-width = <4>;
++	cap-sd-highspeed;
++	cap-sdio-irq;
++	disable-wp;
++	keep-power-in-suspend;
++	mmc-pwrseq = <&wifi_pwrseq>;
++	non-removable;
++	vmmc-supply = <&vcc_wifi>;
++	#address-cells = <1>;
++	#size-cells = <0>;
++	status = "okay";
++
++	esp8089: wifi@1 {
++		compatible = "esp,esp8089";
++		reg = <1>;
++	};
++};
++
++&pinctrl {
++	btns {
++		btn_pins: btn-pins {
++			rockchip,pins = <1 RK_PA2 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PA5 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PA7 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB4 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB5 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB6 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB7 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA0 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA1 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA2 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA4 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA5 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA7 RK_FUNC_GPIO &pcfg_pull_up>,
++					<3 RK_PB2 RK_FUNC_GPIO &pcfg_pull_up>,
++					<3 RK_PB7 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	wifi {
++		wifi_pwrseq_pins: wifi-pwrseq-pins {
++			rockchip,pins = <3 RK_PB1 RK_FUNC_GPIO &pcfg_pull_up>,
++					<3 RK_PB6 RK_FUNC_GPIO &pcfg_output_high>;
++		};
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/079-arm64-dts-rockchip-Add-Odroid-Go-Super.patch b/target/linux/rockchip/patches-6.1/079-arm64-dts-rockchip-Add-Odroid-Go-Super.patch
new file mode 100644
index 0000000000..5014c9ca6b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/079-arm64-dts-rockchip-Add-Odroid-Go-Super.patch
@@ -0,0 +1,217 @@
+From 19f84e5fa3eecbbb5f470f387fb49268c4978c29 Mon Sep 17 00:00:00 2001
+From: Maya Matuszczyk <maccraft123mc@gmail.com>
+Date: Thu, 17 Nov 2022 22:59:53 +0100
+Subject: [PATCH 079/383] arm64: dts: rockchip: Add Odroid Go Super
+
+This device is another revision of Odroid Go Advance, with added two
+volume buttons, a second analog stick and a bigger screen that isn't yet
+supported in the mainline kernel.
+
+Signed-off-by: Maya Matuszczyk <maccraft123mc@gmail.com>
+Link: https://lore.kernel.org/r/20221117215954.4114202-5-maccraft123mc@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../boot/dts/rockchip/rk3326-odroid-go3.dts   | 185 ++++++++++++++++++
+ 2 files changed, 186 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3326-odroid-go3.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -10,6 +10,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3308-ro
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3318-a95x-z2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-odroid-go2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-odroid-go2-v11.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-odroid-go3.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-a1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-evb.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2s.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go3.dts
+@@ -0,0 +1,185 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2019 Hardkernel Co., Ltd
++ * Copyright (c) 2020 Theobroma Systems Design und Consulting GmbH
++ * Copyright (c) 2022 Maya Matuszczyk <maccraft123mc@gmail.com>
++ */
++
++/dts-v1/;
++#include "rk3326-odroid-go.dtsi"
++
++/ {
++	model = "ODROID-GO Super";
++	compatible = "hardkernel,rk3326-odroid-go3", "rockchip,rk3326";
++
++	joystick_mux_controller: mux-controller {
++		compatible = "gpio-mux";
++		pinctrl = <&mux_en_pins>;
++		#mux-control-cells = <0>;
++
++		mux-gpios = <&gpio3 RK_PB3 GPIO_ACTIVE_LOW>,
++			    <&gpio3 RK_PB0 GPIO_ACTIVE_LOW>;
++	};
++
++	joystick_mux: adc-mux {
++		compatible = "io-channel-mux";
++		io-channels = <&saradc 1>;
++		io-channel-names = "parent";
++		#io-channel-cells = <1>;
++
++		mux-controls = <&joystick_mux_controller>;
++		channels = "0", "1", "2", "3";
++	};
++
++	analog_sticks: adc-joystick {
++		compatible = "adc-joystick";
++		io-channels = <&joystick_mux 0>,
++			      <&joystick_mux 1>,
++			      <&joystick_mux 2>,
++			      <&joystick_mux 3>;
++		poll-interval = <60>;
++		#address-cells = <1>;
++		#size-cells = <0>;
++
++		axis@0 {
++			reg = <0>;
++			abs-flat = <10>;
++			abs-fuzz = <10>;
++			abs-range = <180 800>;
++			linux,code = <ABS_X>;
++		};
++
++		axis@1 {
++			reg = <1>;
++			abs-flat = <10>;
++			abs-fuzz = <10>;
++			abs-range = <180 800>;
++			linux,code = <ABS_RX>;
++		};
++
++		axis@2 {
++			reg = <2>;
++			abs-flat = <10>;
++			abs-fuzz = <10>;
++			abs-range = <180 800>;
++			linux,code = <ABS_Y>;
++		};
++
++		axis@3 {
++			reg = <3>;
++			abs-flat = <10>;
++			abs-fuzz = <10>;
++			abs-range = <180 800>;
++			linux,code = <ABS_RY>;
++		};
++	};
++
++	battery: battery {
++		compatible = "simple-battery";
++		charge-full-design-microamp-hours = <4000000>;
++		charge-term-current-microamp = <300000>;
++		constant-charge-current-max-microamp = <2000000>;
++		constant-charge-voltage-max-microvolt = <4200000>;
++		factory-internal-resistance-micro-ohms = <180000>;
++		voltage-max-design-microvolt = <4100000>;
++		voltage-min-design-microvolt = <3500000>;
++
++		ocv-capacity-celsius = <20>;
++		ocv-capacity-table-0 =  <4046950 100>, <4001920 95>, <3967900 90>, <3919950 85>,
++					<3888450 80>, <3861850 75>, <3831540 70>, <3799130 65>,
++					<3768190 60>, <3745650 55>, <3726610 50>, <3711630 45>,
++					<3696720 40>, <3685660 35>, <3674950 30>, <3663050 25>,
++					<3649470 20>, <3635260 15>, <3616920 10>, <3592440 5>,
++					<3574170 0>;
++	};
++
++	gpio-keys-vol {
++		compatible = "gpio-keys";
++		autorepeat;
++		pinctrl-0 = <&btn_pins_vol>;
++		pinctrl-names = "default";
++
++		button-vol-down {
++			gpios = <&gpio2 RK_PA1 GPIO_ACTIVE_LOW>;
++			label = "VOLUMEDOWN";
++			linux,code = <KEY_VOLUMEDOWN>;
++		};
++
++		button-volume-up {
++			gpios = <&gpio2 RK_PA0 GPIO_ACTIVE_LOW>;
++			label = "VOLUMEUP";
++			linux,code = <KEY_VOLUMEUP>;
++		};
++	};
++};
++
++/* f1 and f2 conflict with volume buttons */
++/delete-node/ &btn_f1;
++/delete-node/ &btn_f2;
++
++&builtin_gamepad {
++	button-sw19 {
++		gpios = <&gpio3 RK_PB1 GPIO_ACTIVE_LOW>;
++		label = "SELECT";
++		linux,code = <BTN_SELECT>;
++	};
++	/* note that TR2 and TL2 are swapped */
++	button-sw20 {
++		gpios = <&gpio3 RK_PB7 GPIO_ACTIVE_LOW>;
++		label = "TOP-RIGHT 2";
++		linux,code = <BTN_TR2>;
++	};
++	button-sw21 {
++		gpios = <&gpio3 RK_PB2 GPIO_ACTIVE_LOW>;
++		label = "TOP-LEFT 2";
++		linux,code = <BTN_TL2>;
++	};
++	button-sw22 {
++		gpios = <&gpio3 RK_PB4 GPIO_ACTIVE_LOW>;
++		label = "START";
++		linux,code = <BTN_START>;
++	};
++};
++
++&internal_display {
++	status = "disabled";
++};
++
++&rk817_charger {
++	monitored-battery = <&battery>;
++};
++
++&pinctrl {
++	btns {
++		btn_pins: btn-pins {
++			rockchip,pins = <1 RK_PA2 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PA5 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PA7 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB4 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB5 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB6 RK_FUNC_GPIO &pcfg_pull_up>,
++					<1 RK_PB7 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA2 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA4 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA5 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA7 RK_FUNC_GPIO &pcfg_pull_up>,
++					<3 RK_PB1 RK_FUNC_GPIO &pcfg_pull_up>,
++					<3 RK_PB2 RK_FUNC_GPIO &pcfg_pull_up>,
++					<3 RK_PB4 RK_FUNC_GPIO &pcfg_pull_up>,
++					<3 RK_PB7 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++		btn_pins_vol: btn-pins-vol {
++			rockchip,pins = <2 RK_PA0 RK_FUNC_GPIO &pcfg_pull_up>,
++					<2 RK_PA1 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	joystick {
++		mux_en_pins: mux-pins {
++			rockchip,pins = <3 RK_PB5 RK_FUNC_GPIO &pcfg_output_low>;
++		};
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/080-arm64-dts-rockchip-Add-Anbernic-RG351M.patch b/target/linux/rockchip/patches-6.1/080-arm64-dts-rockchip-Add-Anbernic-RG351M.patch
new file mode 100644
index 0000000000..d433c57d41
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/080-arm64-dts-rockchip-Add-Anbernic-RG351M.patch
@@ -0,0 +1,77 @@
+From 67455ae79b7a778bb7be113e20f885690239aece Mon Sep 17 00:00:00 2001
+From: Maya Matuszczyk <maccraft123mc@gmail.com>
+Date: Thu, 17 Nov 2022 22:59:54 +0100
+Subject: [PATCH 080/383] arm64: dts: rockchip: Add Anbernic RG351M
+
+This device is a clone of Odroid Go Advance, with added PWM motor, internal
+gamepad connected on USB instead of just having it be on GPIO + ADC, and
+missing battery shunt resistor.
+Due to missing shunt resistor and lack of a workaround in rk817_charger
+driver rk817_charger is not enabled in dts.
+
+There's also an LED on GPIO 77(I *guess* PB5 on &gpio2),
+that is controlled in a weird way:
+
+- It is set to red by setting output value to 1
+- Set to green by setting output value to 0
+- Set to yellow by setting gpio direction to input
+
+I have no idea how to describe that in DTS, without adding a custom
+driver, for now it's just left out.
+
+Signed-off-by: Maya Matuszczyk <maccraft123mc@gmail.com>
+Link: https://lore.kernel.org/r/20221117215954.4114202-6-maccraft123mc@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |  1 +
+ .../dts/rockchip/rk3326-anbernic-rg351m.dts   | 33 +++++++++++++++++++
+ 2 files changed, 34 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3326-anbernic-rg351m.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -8,6 +8,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3308-ev
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3308-roc-cc.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3308-rock-pi-s.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3318-a95x-z2.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-anbernic-rg351m.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-odroid-go2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-odroid-go2-v11.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-odroid-go3.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3326-anbernic-rg351m.dts
+@@ -0,0 +1,33 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2019 Hardkernel Co., Ltd
++ * Copyright (c) 2020 Theobroma Systems Design und Consulting GmbH
++ * Copyright (c) 2022 Maya Matuszczyk <maccraft123mc@gmail.com>
++ */
++
++/dts-v1/;
++#include "rk3326-odroid-go.dtsi"
++
++/ {
++	model = "Anbernic RG351M";
++	compatible = "anbernic,rg351m", "rockchip,rk3326";
++
++	vibrator {
++		compatible = "pwm-vibrator";
++		pwms = <&pwm0 0 1000000 0>;
++		pwm-names = "enable";
++	};
++};
++
++/delete-node/ &builtin_gamepad;
++/delete-node/ &vcc_host; /* conflicts with pwm vibration motor */
++
++&internal_display {
++	compatible = "elida,kd35t133";
++};
++
++&pwm0 {
++	status = "okay";
++};
++
++/delete-node/ &rk817_charger;
diff --git a/target/linux/rockchip/patches-6.1/081-arm64-dts-rockchip-Add-SOQuartz-blade-board.patch b/target/linux/rockchip/patches-6.1/081-arm64-dts-rockchip-Add-SOQuartz-blade-board.patch
new file mode 100644
index 0000000000..656589411f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/081-arm64-dts-rockchip-Add-SOQuartz-blade-board.patch
@@ -0,0 +1,235 @@
+From c914739c593e8e2378c14ad89b0c514fbfaaa9cc Mon Sep 17 00:00:00 2001
+From: Andrew Powers-Holmes <aholmes@omnom.net>
+Date: Wed, 16 Nov 2022 12:53:35 +0100
+Subject: [PATCH 081/383] arm64: dts: rockchip: Add SOQuartz blade board
+
+This adds a device tree for the PINE64 SOQuartz blade baseboard,
+a 1U rack mountable baseboard for the CM4 form factor with PoE
+support designed for the SOQuartz CM4 System-on-Module.
+
+The board takes power from either PoE or a 5V DC input, and allows
+for mounting an M.2 SSD.
+
+The board also features one USB 2.0 host port, one HDMI output,
+a 3.5mm jack for UART, and the aforementioned gigabit networking
+port.
+
+Signed-off-by: Andrew Powers-Holmes <aholmes@omnom.net>
+[rebase, squash, reword, misc fixes]
+Signed-off-by: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Link: https://lore.kernel.org/r/20221116115337.541601-3-frattaroli.nicolas@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../dts/rockchip/rk3566-soquartz-blade.dts    | 194 ++++++++++++++++++
+ 2 files changed, 195 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-soquartz-blade.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -74,6 +74,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-pi
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-quartz64-a.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-quartz64-b.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-roc-pc.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-blade.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-cm4.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-box-demo.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-bpi-r2-pro.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-soquartz-blade.dts
+@@ -0,0 +1,194 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/input/input.h>
++#include <dt-bindings/leds/common.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++
++#include "rk3566-soquartz.dtsi"
++
++/ {
++	model = "PINE64 RK3566 SOQuartz on Blade carrier board";
++	compatible = "pine64,soquartz-blade", "pine64,soquartz", "rockchip,rk3566";
++
++	/* labeled VCC3V0_SD in schematic to not conflict with PMIC regulator */
++	vcc3v0_sd: vcc3v0-sd-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v0_sd";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc3v3_sys>;
++	};
++
++	/* labeled VCC_SSD in schematic */
++	vcc3v3_pcie_p: vcc3v3-pcie-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_pcie_p";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vbus>;
++	};
++
++	vcc5v_dcin: vcc5v-dcin-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v_dcin";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++};
++
++&combphy2 {
++	phy-supply = <&vcc3v3_sys>;
++	status = "okay";
++};
++
++&gmac1 {
++	status = "okay";
++};
++
++/*
++ * i2c1 is exposed on CM1 / Module1A
++ * pin 80 - SCL0 - i2c1_scl_m0, pullup to vcc3v3_pmu
++ * pin 82 - SDA0 - i2c1_sda_m0, pullup to vcc3v3_pmu
++ */
++&i2c1 {
++	status = "okay";
++
++};
++
++/*
++ * i2c2 is exposed on CM1 / Module1A - to PI40
++ * pin 56 - GPIO3 - i2c2_scl_m1, pullup to vcc_3v3, shared with i2s1_8ch
++ * pin 58 - GPIO2 - i2c2_sda_m1, pullup to vcc_3v3
++ */
++&i2c2 {
++	status = "disabled";
++};
++
++/*
++ * i2c3 is exposed on CM1 / Module1A - to PI40
++ * pin 35 - ID_SC(GPIO28) - i2c3_scl_m0, pullup to vcc_3v3
++ * pin 36 - ID_SD(GPIO27) - i2c3_sda_m0, pullup to vcc_3v3
++ */
++&i2c3 {
++	status = "disabled";
++};
++
++/*
++ * i2c4 is exposed on CM2 / Module1B - to PI40
++ * pin 45 - GPIO24 - i2c4_scl_m1
++ * pin 47 - GPIO23 - i2c4_sda_m1
++ */
++&i2c4 {
++	status = "disabled";
++};
++
++/*
++ * i2s1_8ch is exposed on CM1 / Module1A - to PI40
++ * pin 24 - GPIO26 - i2s1_sdi1_m1
++ * pin 25 - GPIO21 - i2s1_sdo0_m1
++ * pin 26 - GPIO19 - i2s1_lrck_tx_m1
++ * pin 27 - GPIO20 - i2s1_sdi0_m1
++ * pin 29 - GPIO16 - i2s1_sdi3_m1
++ * pin 30 - GPIO6  - i2s1_sdi2_m1
++ * pin 40 - GPIO9  - i2s1_sdo1_m1, shared with spi3
++ * pin 41 - GPIO25 - i2s1_sdo2_m1
++ * pin 49 - GPIO18 - i2s1_sclk_tx_m1
++ * pin 50 - GPIO17 - i2s1_mclk_m1
++ * pin 56 - GPIO3  - i2s1_sdo3_m1, shared with i2c2
++ */
++&i2s1_8ch {
++	status = "disabled";
++};
++
++&led_diy {
++	color = <LED_COLOR_ID_RED>;
++	function = LED_FUNCTION_DISK_ACTIVITY;
++	linux,default-trigger = "disk-activity";
++	status = "okay";
++};
++
++&led_work {
++	color = <LED_COLOR_ID_GREEN>;
++	function = LED_FUNCTION_STATUS;
++	linux,default-trigger = "heartbeat";
++	status = "okay";
++};
++
++&pcie2x1 {
++	vpcie3v3-supply = <&vcc3v3_pcie_p>;
++	status = "okay";
++};
++
++&rgmii_phy1 {
++	status = "okay";
++};
++
++/*
++ * saradc is exposed on CM1 / Module1A - to J2
++ * pin 94 - AIN1 - saradc_vin3
++ * pin 96 - AIN0 - saradc_vin2
++ */
++&saradc {
++	status = "disabled";
++};
++
++&sdmmc0 {
++	vmmc-supply = <&vcc3v0_sd>;
++	status = "okay";
++};
++
++/*
++ * spi3 is exposed on CM1 / Module1A - to PI40
++ * pin 37 - GPIO7  - spi3_cs1_m0
++ * pin 38 - GPIO11 - spi3_clk_m0
++ * pin 39 - GPIO8  - spi3_cs0_m0
++ * pin 40 - GPIO9  - spi3_miso_m0, shared with i2s1_8ch
++ * pin 44 - GPIO10 - spi3_mosi_m0
++ */
++&spi3 {
++	status = "disabled";
++};
++
++/*
++ * uart2 is exposed on CM1 / Module1A - to PI40
++ * pin 51 - GPIO15 - uart2_rx_m0
++ * pin 55 - GPIO14 - uart2_tx_m0
++ */
++&uart2 {
++	status = "okay";
++};
++
++/*
++ * uart7 is exposed on CM1 / Module1A - to PI40
++ * pin 46 - GPIO22 - uart7_tx_m2
++ * pin 47 - GPIO23 - uart7_rx_m2
++ */
++&uart7 {
++	status = "okay";
++};
++
++&usb2phy0 {
++	status = "okay";
++};
++
++&usb2phy0_otg {
++	phy-supply = <&vbus>;
++	status = "okay";
++};
++
++&usb_host0_xhci {
++	status = "okay";
++};
++
++&vbus {
++	vin-supply = <&vcc5v_dcin>;
++};
diff --git a/target/linux/rockchip/patches-6.1/082-arm64-dts-rockchip-Add-SOQuartz-Model-A-baseboard.patch b/target/linux/rockchip/patches-6.1/082-arm64-dts-rockchip-Add-SOQuartz-Model-A-baseboard.patch
new file mode 100644
index 0000000000..58b79794fa
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/082-arm64-dts-rockchip-Add-SOQuartz-Model-A-baseboard.patch
@@ -0,0 +1,272 @@
+From 25aa99f248d8fd05855803a818dabc5580018a51 Mon Sep 17 00:00:00 2001
+From: Andrew Powers-Holmes <aholmes@omnom.net>
+Date: Wed, 16 Nov 2022 12:53:37 +0100
+Subject: [PATCH 082/383] arm64: dts: rockchip: Add SOQuartz Model A baseboard
+
+This patch adds the device tree for the "Model A" baseboard for
+the SOQuartz CM4 SoM, which is not to be confused with the
+Quartz64 Model A, which is the same form factor and SoC, but is
+not a CM4 carrier board.
+
+The board features a PCIe 2 x1 slot, USB 2 host ports, CSI/DSI
+connectors, an eDP FFC connector, gigabit ethernet, HDMI, and a
+12V DC barrel jack. Also present is a microSD card slot, 40-pin
+GPIO, and a power and reset button.
+
+Signed-off-by: Andrew Powers-Holmes <aholmes@omnom.net>
+[rebase, misc fixes, reword]
+Signed-off-by: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Link: https://lore.kernel.org/r/20221116115337.541601-5-frattaroli.nicolas@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../dts/rockchip/rk3566-soquartz-model-a.dts  | 232 ++++++++++++++++++
+ 2 files changed, 233 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-soquartz-model-a.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -76,6 +76,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-qu
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-roc-pc.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-blade.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-cm4.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-model-a.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-box-demo.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-bpi-r2-pro.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-evb1-v10.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-soquartz-model-a.dts
+@@ -0,0 +1,232 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include "rk3566-soquartz.dtsi"
++
++/ {
++	model = "PINE64 RK3566 SOQuartz on Model A carrier board";
++	compatible = "pine64,soquartz-model-a", "pine64,soquartz", "rockchip,rk3566";
++
++	/* labeled DCIN_12V in schematic */
++	vcc12v_dcin: vcc12v-dcin-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc12v_dcin";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <12000000>;
++		regulator-max-microvolt = <12000000>;
++	};
++
++	vcc5v0_usb: vcc5v0-usb-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usb";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc12v_dcin>;
++	};
++
++	/*
++	 * Labelled VCC3V0_SD in schematic to not conflict with PMIC
++	 * regulator, it's 3.3v in actuality
++	 */
++	vcc3v0_sd: vcc3v0-sd-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v0_sd";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc3v3_sys>;
++	};
++
++	vcc3v3_pcie: vcc3v3-pcie-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_pcie";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc12v_dcin>;
++	};
++
++	vcc12v_pcie: vcc12v-pcie-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc12v_pcie";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <12000000>;
++		regulator-max-microvolt = <12000000>;
++		vin-supply = <&vcc12v_dcin>;
++	};
++};
++
++/* phy for pcie */
++&combphy2 {
++	phy-supply = <&vcc3v3_sys>;
++	status = "okay";
++};
++
++&gmac1 {
++	status = "okay";
++};
++
++/*
++ * i2c1 is exposed on CM1 / Module1A
++ * pin 80 - SCL0 - i2c1_scl_m0, pullup to vcc3v3_pmu
++ * pin 82 - SDA0 - i2c1_sda_m0, pullup to vcc3v3_pmu
++ */
++&i2c1 {
++	status = "okay";
++
++	/*
++	 * the rtc interrupt is tied to PMIC_PWRON,
++	 * it will force reset the board if triggered.
++	 */
++	pcf85063: rtc@51 {
++		compatible = "nxp,pcf85063";
++		reg = <0x51>;
++	};
++};
++
++/*
++ * i2c2 is exposed on CM1 / Module1A - to PI40
++ * pin 56 - GPIO3 - i2c2_scl_m1, pullup to vcc_3v3, shared with i2s1_8ch
++ * pin 58 - GPIO2 - i2c2_sda_m1, pullup to vcc_3v3
++ */
++&i2c2 {
++	status = "disabled";
++};
++
++/*
++ * i2c3 is exposed on CM1 / Module1A - to PI40
++ * pin 35 - ID_SC(GPIO28) - i2c3_scl_m0, pullup to vcc_3v3
++ * pin 36 - ID_SD(GPIO27) - i2c3_sda_m0, pullup to vcc_3v3
++ */
++&i2c3 {
++	status = "disabled";
++};
++
++/*
++ * i2c4 is exposed on CM2 / Module1B - to PI40
++ * pin 45 - GPIO24 - i2c4_scl_m1
++ * pin 47 - GPIO23 - i2c4_sda_m1
++ */
++&i2c4 {
++	status = "disabled";
++};
++
++/*
++ * i2s1_8ch is exposed on CM1 / Module1A - to PI40
++ * pin 24 - GPIO26 - i2s1_sdi1_m1
++ * pin 25 - GPIO21 - i2s1_sdo0_m1
++ * pin 26 - GPIO19 - i2s1_lrck_tx_m1
++ * pin 27 - GPIO20 - i2s1_sdi0_m1
++ * pin 29 - GPIO16 - i2s1_sdi3_m1
++ * pin 30 - GPIO6  - i2s1_sdi2_m1
++ * pin 40 - GPIO9  - i2s1_sdo1_m1, shared with spi3
++ * pin 41 - GPIO25 - i2s1_sdo2_m1
++ * pin 49 - GPIO18 - i2s1_sclk_tx_m1
++ * pin 50 - GPIO17 - i2s1_mclk_m1
++ * pin 56 - GPIO3  - i2s1_sdo3_m1, shared with i2c2
++ */
++&i2s1_8ch {
++	status = "disabled";
++};
++
++&led_diy {
++	status = "okay";
++};
++
++&led_work {
++	status = "okay";
++};
++
++&pcie2x1 {
++	vpcie3v3-supply = <&vcc3v3_pcie>;
++	status = "okay";
++};
++
++&rgmii_phy1 {
++	status = "okay";
++};
++
++&rgmii_phy1 {
++	status = "okay";
++};
++
++/*
++ * saradc is exposed on CM1 / Module1A - to J2
++ * pin 94 - AIN1 - saradc_vin3
++ * pin 96 - AIN0 - saradc_vin2
++ */
++&saradc {
++	status = "disabled";
++};
++
++/*
++ * vmmc-supply is vcc3v3_sd on v1.0 and vcc3v0_sd on v1.1+
++ * the soquartz SoM has SDMMC_PWR (CM1 pin 75) hardwired to vcc3v3_sys,
++ * so we use vcc3v3_sd here to ensure the regulator is enabled on older boards.
++ */
++&sdmmc0 {
++	vmmc-supply = <&vcc3v3_sd>;
++	status = "okay";
++};
++
++/*
++ * spi3 is exposed on CM1 / Module1A - to PI40
++ * pin 37 - GPIO7  - spi3_cs1_m0
++ * pin 38 - GPIO11 - spi3_clk_m0
++ * pin 39 - GPIO8  - spi3_cs0_m0
++ * pin 40 - GPIO9  - spi3_miso_m0, shared with i2s1_8ch
++ * pin 44 - GPIO10 - spi3_mosi_m0
++ */
++&spi3 {
++	status = "disabled";
++};
++
++/*
++ * uart2 is exposed on CM1 / Module1A - to PI40
++ * pin 51 - GPIO15 - uart2_rx_m0
++ * pin 55 - GPIO14 - uart2_tx_m0
++ */
++&uart2 {
++	status = "okay";
++};
++
++/*
++ * uart7 is exposed on CM1 / Module1A - to PI40
++ * pin 46 - GPIO22 - uart7_tx_m2
++ * pin 47 - GPIO23 - uart7_rx_m2
++ */
++&uart7 {
++	status = "okay";
++};
++
++&usb2phy0 {
++	status = "okay";
++};
++
++&usb2phy0_otg {
++	phy-supply = <&vcc5v0_usb>;
++	status = "okay";
++};
++
++&usb_host0_xhci {
++	status = "okay";
++};
++
++&vbus {
++	vin-supply = <&vcc5v0_usb>;
++};
++
++&vcc3v3_sd {
++	regulator-always-on;
++	regulator-boot-on;
++	regulator-min-microvolt = <3300000>;
++	regulator-max-microvolt = <3300000>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/083-arm64-dts-rockchip-update-cache-properties-for-rk330.patch b/target/linux/rockchip/patches-6.1/083-arm64-dts-rockchip-update-cache-properties-for-rk330.patch
new file mode 100644
index 0000000000..b08e6b1ed4
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/083-arm64-dts-rockchip-update-cache-properties-for-rk330.patch
@@ -0,0 +1,43 @@
+From 75e4c9ed412120130fb89f2d9ab94a2b1862adae Mon Sep 17 00:00:00 2001
+From: Pierre Gondois <pierre.gondois@arm.com>
+Date: Mon, 7 Nov 2022 16:57:12 +0100
+Subject: [PATCH 083/383] arm64: dts: rockchip: update cache properties for
+ rk3308 and rk3328
+
+The DeviceTree Specification v0.3 specifies that the cache node
+'compatible' and 'cache-level' properties are 'required'. Cf.
+s3.8 Multi-level and Shared Cache Nodes
+The 'cache-unified' property should be present if one of the
+properties for unified cache is present ('cache-size', ...).
+
+Update the Device Trees accordingly.
+
+Signed-off-by: Pierre Gondois <pierre.gondois@arm.com>
+Link: https://lore.kernel.org/r/20221107155825.1644604-20-pierre.gondois@arm.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3308.dtsi | 1 +
+ arch/arm64/boot/dts/rockchip/rk3328.dtsi | 1 +
+ 2 files changed, 2 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3308.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3308.dtsi
+@@ -96,6 +96,7 @@
+ 
+ 		l2: l2-cache {
+ 			compatible = "cache";
++			cache-level = <2>;
+ 		};
+ 	};
+ 
+--- a/arch/arm64/boot/dts/rockchip/rk3328.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3328.dtsi
+@@ -102,6 +102,7 @@
+ 
+ 		l2: l2-cache0 {
+ 			compatible = "cache";
++			cache-level = <2>;
+ 		};
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/084-arm64-dts-rockchip-use-correct-reset-names-for-rk339.patch b/target/linux/rockchip/patches-6.1/084-arm64-dts-rockchip-use-correct-reset-names-for-rk339.patch
new file mode 100644
index 0000000000..e5a2da051f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/084-arm64-dts-rockchip-use-correct-reset-names-for-rk339.patch
@@ -0,0 +1,37 @@
+From 07ff3d2c95230e4b64120c66faff85c35be4bac9 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Mon, 12 Dec 2022 12:44:23 +0000
+Subject: [PATCH 084/383] arm64: dts: rockchip: use correct reset names for
+ rk3399 crypto nodes
+
+The reset names does not follow the binding, use the correct ones.
+
+Fixes: 8c701fa6e38c ("arm64: dts: rockchip: rk3399: add crypto node")
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Link: https://lore.kernel.org/r/20221212124423.1239748-1-clabbe@baylibre.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399.dtsi | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399.dtsi
+@@ -589,7 +589,7 @@
+ 		clocks = <&cru HCLK_M_CRYPTO0>, <&cru HCLK_S_CRYPTO0>, <&cru SCLK_CRYPTO0>;
+ 		clock-names = "hclk_master", "hclk_slave", "sclk";
+ 		resets = <&cru SRST_CRYPTO0>, <&cru SRST_CRYPTO0_S>, <&cru SRST_CRYPTO0_M>;
+-		reset-names = "master", "lave", "crypto";
++		reset-names = "master", "slave", "crypto-rst";
+ 	};
+ 
+ 	crypto1: crypto@ff8b8000 {
+@@ -599,7 +599,7 @@
+ 		clocks = <&cru HCLK_M_CRYPTO1>, <&cru HCLK_S_CRYPTO1>, <&cru SCLK_CRYPTO1>;
+ 		clock-names = "hclk_master", "hclk_slave", "sclk";
+ 		resets = <&cru SRST_CRYPTO1>, <&cru SRST_CRYPTO1_S>, <&cru SRST_CRYPTO1_M>;
+-		reset-names = "master", "slave", "crypto";
++		reset-names = "master", "slave", "crypto-rst";
+ 	};
+ 
+ 	i2c1: i2c@ff110000 {
diff --git a/target/linux/rockchip/patches-6.1/085-arm64-dts-rockchip-Add-Radxa-CM3I-E25.patch b/target/linux/rockchip/patches-6.1/085-arm64-dts-rockchip-Add-Radxa-CM3I-E25.patch
new file mode 100644
index 0000000000..33f3a1856b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/085-arm64-dts-rockchip-Add-Radxa-CM3I-E25.patch
@@ -0,0 +1,690 @@
+From c70ee1dae63aaeaaced4e2689711f3f584a70bfd Mon Sep 17 00:00:00 2001
+From: Chukun Pan <amadeus@jmu.edu.cn>
+Date: Fri, 9 Dec 2022 18:25:24 +0800
+Subject: [PATCH 085/383] arm64: dts: rockchip: Add Radxa CM3I E25
+
+Radxa E25 is a network application carrier board for the Radxa CM3
+Industrial (CM3I) SoM, which is based on the Rockchip RK3568 SoC.
+
+It has the following features:
+
+- MicroSD card socket, on board eMMC flash
+- 2x 2.5GbE Realtek RTL8125B Ethernet transceiver
+- 1x USB Type-C port (Power and Serial console)
+- 1x USB 3.0 OTG port
+- mini PCIe socket (USB or PCIe)
+- ngff PCIe socket (USB or SATA)
+- 1x User LED and 16x RGB LEDs
+- 26-pin expansion header
+
+Signed-off-by: Chukun Pan <amadeus@jmu.edu.cn>
+Link: https://lore.kernel.org/r/20221209102524.129367-3-amadeus@jmu.edu.cn
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../boot/dts/rockchip/rk3568-radxa-cm3i.dtsi  | 416 ++++++++++++++++++
+ .../boot/dts/rockchip/rk3568-radxa-e25.dts    | 229 ++++++++++
+ 3 files changed, 646 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3568-radxa-cm3i.dtsi
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3568-radxa-e25.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -81,4 +81,5 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-bo
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-bpi-r2-pro.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-evb1-v10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-odroid-m1.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-radxa-e25.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-rock-3a.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3568-radxa-cm3i.dtsi
+@@ -0,0 +1,416 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/leds/common.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rk3568.dtsi"
++
++/ {
++	model = "Radxa CM3 Industrial Board";
++	compatible = "radxa,cm3i", "rockchip,rk3568";
++
++	aliases {
++		mmc0 = &sdhci;
++	};
++
++	chosen {
++		stdout-path = "serial2:115200n8";
++	};
++
++	gpio-leds {
++		compatible = "gpio-leds";
++
++		led_user: led-0 {
++			gpios = <&gpio0 RK_PA6 GPIO_ACTIVE_HIGH>;
++			function = LED_FUNCTION_HEARTBEAT;
++			color = <LED_COLOR_ID_GREEN>;
++			linux,default-trigger = "heartbeat";
++			pinctrl-names = "default";
++			pinctrl-0 = <&led_user_en>;
++		};
++	};
++
++	pcie30_avdd0v9: pcie30-avdd0v9-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "pcie30_avdd0v9";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <900000>;
++		regulator-max-microvolt = <900000>;
++		vin-supply = <&vcc3v3_sys>;
++	};
++
++	pcie30_avdd1v8: pcie30-avdd1v8-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "pcie30_avdd1v8";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <1800000>;
++		regulator-max-microvolt = <1800000>;
++		vin-supply = <&vcc3v3_sys>;
++	};
++
++	vcc3v3_sys: vcc3v3-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc5v_input>;
++	};
++
++	vcc5v0_sys: vcc5v0-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v_input>;
++	};
++
++	/* labeled +5v_input in schematic */
++	vcc5v_input: vcc5v-input-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v_input";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++};
++
++&combphy0 {
++	status = "okay";
++};
++
++&combphy1 {
++	status = "okay";
++};
++
++&combphy2 {
++	status = "okay";
++};
++
++&cpu0 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu1 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu2 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu3 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&display_subsystem {
++	status = "disabled";
++};
++
++&gpu {
++	mali-supply = <&vdd_gpu>;
++	status = "okay";
++};
++
++&i2c0 {
++	status = "okay";
++
++	vdd_cpu: regulator@1c {
++		compatible = "tcs,tcs4525";
++		reg = <0x1c>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <800000>;
++		regulator-max-microvolt = <1150000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc5v_input>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	rk809: pmic@20 {
++		compatible = "rockchip,rk809";
++		reg = <0x20>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PA3 IRQ_TYPE_LEVEL_LOW>;
++		#clock-cells = <1>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pmic_int>;
++		rockchip,system-power-controller;
++		wakeup-source;
++
++		vcc1-supply = <&vcc3v3_sys>;
++		vcc2-supply = <&vcc3v3_sys>;
++		vcc3-supply = <&vcc3v3_sys>;
++		vcc4-supply = <&vcc3v3_sys>;
++		vcc5-supply = <&vcc3v3_sys>;
++		vcc6-supply = <&vcc3v3_sys>;
++		vcc7-supply = <&vcc3v3_sys>;
++		vcc8-supply = <&vcc3v3_sys>;
++		vcc9-supply = <&vcc3v3_sys>;
++
++		regulators {
++			vdd_logic: DCDC_REG1 {
++				regulator-name = "vdd_logic";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-init-microvolt = <900000>;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_gpu: DCDC_REG2 {
++				regulator-name = "vdd_gpu";
++				regulator-always-on;
++				regulator-init-microvolt = <900000>;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_ddr: DCDC_REG3 {
++				regulator-name = "vcc_ddr";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-initial-mode = <0x2>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vdd_npu: DCDC_REG4 {
++				regulator-name = "vdd_npu";
++				regulator-init-microvolt = <900000>;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_1v8: DCDC_REG5 {
++				regulator-name = "vcc_1v8";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_image: LDO_REG1 {
++				regulator-name = "vdda0v9_image";
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda_0v9: LDO_REG2 {
++				regulator-name = "vdda_0v9";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_pmu: LDO_REG3 {
++				regulator-name = "vdda0v9_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <900000>;
++				};
++			};
++
++			vccio_acodec: LDO_REG4 {
++				regulator-name = "vccio_acodec";
++				regulator-always-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_sd: LDO_REG5 {
++				regulator-name = "vccio_sd";
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_pmu: LDO_REG6 {
++				regulator-name = "vcc3v3_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcca_1v8: LDO_REG7 {
++				regulator-name = "vcca_1v8";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcca1v8_pmu: LDO_REG8 {
++				regulator-name = "vcca1v8_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vcca1v8_image: LDO_REG9 {
++				regulator-name = "vcca1v8_image";
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_3v3: SWITCH_REG1 {
++				regulator-name = "vcc_3v3";
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_sd: SWITCH_REG2 {
++				regulator-name = "vcc3v3_sd";
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++		};
++	};
++};
++
++&pinctrl {
++	leds {
++		led_user_en: led_user_en {
++			rockchip,pins = <0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	pmic {
++		pmic_int: pmic_int {
++			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++};
++
++&pmu_io_domains {
++	pmuio1-supply = <&vcc3v3_pmu>;
++	pmuio2-supply = <&vcc3v3_pmu>;
++	vccio1-supply = <&vccio_acodec>;
++	vccio2-supply = <&vcc_1v8>;
++	vccio3-supply = <&vccio_sd>;
++	vccio4-supply = <&vcc_1v8>;
++	vccio5-supply = <&vcc_3v3>;
++	vccio6-supply = <&vcc_1v8>;
++	vccio7-supply = <&vcc_3v3>;
++	status = "okay";
++};
++
++&saradc {
++	vref-supply = <&vcca_1v8>;
++	status = "okay";
++};
++
++&sdhci {
++	bus-width = <8>;
++	max-frequency = <200000000>;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&emmc_bus8 &emmc_clk &emmc_cmd &emmc_datastrobe>;
++	vmmc-supply = <&vcc_3v3>;
++	vqmmc-supply = <&vcc_1v8>;
++	status = "okay";
++};
++
++&tsadc {
++	rockchip,hw-tshut-mode = <1>;
++	rockchip,hw-tshut-polarity = <0>;
++	status = "okay";
++};
++
++&uart2 {
++	status = "okay";
++};
++
++&usb2phy0 {
++	status = "okay";
++};
++
++&usb2phy1 {
++	status = "okay";
++};
++
++&usb_host0_xhci {
++	extcon = <&usb2phy0>;
++};
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3568-radxa-e25.dts
+@@ -0,0 +1,229 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++#include "rk3568-radxa-cm3i.dtsi"
++
++/ {
++	model = "Radxa E25";
++	compatible = "radxa,e25", "rockchip,rk3568";
++
++	aliases {
++		mmc0 = &sdmmc0;
++		mmc1 = &sdhci;
++	};
++
++	pwm-leds {
++		compatible = "pwm-leds-multicolor";
++
++		multi-led {
++			color = <LED_COLOR_ID_RGB>;
++			max-brightness = <255>;
++
++			led-red {
++				color = <LED_COLOR_ID_RED>;
++				pwms = <&pwm1 0 1000000 0>;
++			};
++
++			led-green {
++				color = <LED_COLOR_ID_GREEN>;
++				pwms = <&pwm2 0 1000000 0>;
++			};
++
++			led-blue {
++				color = <LED_COLOR_ID_BLUE>;
++				pwms = <&pwm12 0 1000000 0>;
++			};
++		};
++	};
++
++	vbus_typec: vbus-typec-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio0 RK_PB7 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vbus_typec_en>;
++		regulator-name = "vbus_typec";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc3v3_minipcie: vcc3v3-minipcie-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio3 RK_PA7 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&minipcie_enable_h>;
++		regulator-name = "vcc3v3_minipcie";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc3v3_ngff: vcc3v3-ngff-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio0 RK_PD6 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&ngffpcie_enable_h>;
++		regulator-name = "vcc3v3_ngff";
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	/* actually fed by vcc5v0_sys, dependent
++	 * on pi6c clock generator
++	 */
++	vcc3v3_pcie30x1: vcc3v3-pcie30x1-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio0 RK_PC5 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pcie30x1_enable_h>;
++		regulator-name = "vcc3v3_pcie30x1";
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc3v3_pi6c_05>;
++	};
++
++	vcc3v3_pi6c_05: vcc3v3-pi6c-05-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpios = <&gpio0 RK_PC7 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pcie_enable_h>;
++		regulator-name = "vcc3v3_pcie";
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++};
++
++&pcie2x1 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&pcie20_reset_h>;
++	reset-gpios = <&gpio1 RK_PB2 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_pi6c_05>;
++	status = "okay";
++};
++
++&pcie30phy {
++	data-lanes = <1 2>;
++	status = "okay";
++};
++
++&pcie3x1 {
++	num-lanes = <1>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&pcie30x1m0_pins>;
++	reset-gpios = <&gpio0 RK_PC3 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_pcie30x1>;
++	status = "okay";
++};
++
++&pcie3x2 {
++	num-lanes = <1>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&pcie30x2_reset_h>;
++	reset-gpios = <&gpio2 RK_PD6 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_pi6c_05>;
++	status = "okay";
++};
++
++&pinctrl {
++	pcie {
++		pcie20_reset_h: pcie20-reset-h {
++			rockchip,pins = <1 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		pcie30x1_enable_h: pcie30x1-enable-h {
++			rockchip,pins = <0 RK_PC5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		pcie30x2_reset_h: pcie30x2-reset-h {
++			rockchip,pins = <2 RK_PD6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		pcie_enable_h: pcie-enable-h {
++			rockchip,pins = <0 RK_PC7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	usb {
++		minipcie_enable_h: minipcie-enable-h {
++			rockchip,pins = <3 RK_PA7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		ngffpcie_enable_h: ngffpcie-enable-h {
++			rockchip,pins = <0 RK_PD6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		vbus_typec_en: vbus_typec_en {
++			rockchip,pins = <0 RK_PB7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&pwm1 {
++	status = "okay";
++};
++
++&pwm2 {
++	status = "okay";
++};
++
++&pwm12 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&pwm12m1_pins>;
++	status = "okay";
++};
++
++&sdmmc0 {
++	bus-width = <4>;
++	cap-sd-highspeed;
++	cd-gpios = <&gpio0 RK_PA4 GPIO_ACTIVE_LOW>;
++	/* Also used in pcie30x1_clkreqnm0 */
++	disable-wp;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc0_bus4 &sdmmc0_clk &sdmmc0_cmd>;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc3v3_sd>;
++	vqmmc-supply = <&vccio_sd>;
++	status = "okay";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++&usb_host0_xhci {
++	status = "okay";
++};
++
++&usb_host1_ehci {
++	status = "okay";
++};
++
++&usb_host1_ohci {
++	status = "okay";
++};
++
++&usb2phy0_otg {
++	phy-supply = <&vbus_typec>;
++	status = "okay";
++};
++
++&usb2phy1_host {
++	phy-supply = <&vcc3v3_minipcie>;
++	status = "okay";
++};
++
++&usb2phy1_otg {
++	phy-supply = <&vcc3v3_ngff>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/086-arm64-dts-rockchip-Add-EmbedFire-LubanCat-1.patch b/target/linux/rockchip/patches-6.1/086-arm64-dts-rockchip-Add-EmbedFire-LubanCat-1.patch
new file mode 100644
index 0000000000..8c0130cd19
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/086-arm64-dts-rockchip-Add-EmbedFire-LubanCat-1.patch
@@ -0,0 +1,643 @@
+From 9bec1f11987b47c0eb4fbc45fd30267afc6fa030 Mon Sep 17 00:00:00 2001
+From: Wenhao Cui <lasstp5011@gmail.com>
+Date: Fri, 23 Dec 2022 11:16:30 +0800
+Subject: [PATCH 086/383] arm64: dts: rockchip: Add EmbedFire LubanCat 1
+
+The LubanCat 1 is a RK3566 based SBC, developed by Dongguan EmbedFire
+Electronic Technology Co., Ltd.
+
+It has the following characteristics:
+- MicroSD card slot, onboard eMMC flash memory
+- 1GbE Realtek RTL8211F Ethernet Transceiver
+- 1 USB Type-C port (power and USB2.0 OTG)
+- 1 USB 3.0 Host port
+- 3 USB 2.0 Host ports
+- 1 HDMI
+- 1 infrared receiver
+- 1 MIPI DSI
+- 1 MIPI CSI
+- 1 x 4-section headphone jack
+- Mini PCIe socket (USB or PCIe)
+- 1 SIM Card slot
+- 1 SYS LED and 1 PWR LED
+- 40-pin GPIO expansion header
+
+Signed-off-by: Wenhao Cui <lasstp5011@gmail.com>
+Signed-off-by: Yuteng Zhong <zonyitoo@gmail.com>
+Link: https://lore.kernel.org/r/Y6UdjhBD/Xa7ALya@VM-66-53-centos
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../boot/dts/rockchip/rk3566-lubancat-1.dts   | 595 ++++++++++++++++++
+ 2 files changed, 596 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-lubancat-1.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -78,6 +78,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-so
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-cm4.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-model-a.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-box-demo.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-lubancat-1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-bpi-r2-pro.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-evb1-v10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-odroid-m1.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-lubancat-1.dts
+@@ -0,0 +1,595 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/leds/common.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include <dt-bindings/soc/rockchip,vop2.h>
++#include "rk3566.dtsi"
++
++/ {
++	model = "EmbedFire LubanCat 1";
++	compatible = "embedfire,lubancat-1", "rockchip,rk3566";
++
++	aliases {
++		ethernet0 = &gmac1;
++		mmc0 = &sdmmc0;
++		mmc1 = &sdhci;
++	};
++
++	chosen: chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	gmac1_clkin: external-gmac1-clock {
++		compatible = "fixed-clock";
++		clock-frequency = <125000000>;
++		clock-output-names = "gmac1_clkin";
++		#clock-cells = <0>;
++	};
++
++	hdmi-con {
++		compatible = "hdmi-connector";
++		type = "a";
++
++		port {
++			hdmi_con_in: endpoint {
++				remote-endpoint = <&hdmi_out_con>;
++			};
++		};
++	};
++
++	gpio-leds {
++		compatible = "gpio-leds";
++
++		sys_led: sys-led {
++			label = "sys_led";
++			linux,default-trigger = "heartbeat";
++			default-state = "on";
++			gpios = <&gpio0 RK_PC5 GPIO_ACTIVE_LOW>;
++			pinctrl-names = "default";
++			pinctrl-0 = <&sys_led_pin>;
++		};
++	};
++
++	usb_5v: usb-5v-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "usb_5v";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++
++	vcc5v0_sys: vcc5v0-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&usb_5v>;
++	};
++
++	vcc3v3_sys: vcc3v3-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc3v3_pcie: vcc3v3-pcie-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_pcie";
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		enable-active-high;
++		gpio = <&gpio0 RK_PD3 GPIO_ACTIVE_HIGH>;
++		startup-delay-us = <5000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc5v0_usb20_host: vcc5v0-usb20-host-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio2 RK_PB6 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_usb20_host_en>;
++		regulator-name = "vcc5v0_usb20_host";
++		regulator-always-on;
++	};
++
++	vcc5v0_usb30_host: vcc5v0-usb30-host-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio2 RK_PB5 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_usb30_host_en>;
++		regulator-name = "vcc5v0_usb30_host";
++		regulator-always-on;
++	};
++};
++
++&uart2 {
++	status = "okay";
++};
++
++&combphy1 {
++	status = "okay";
++};
++
++&combphy2 {
++	status = "okay";
++};
++
++&cpu0 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu1 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu2 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu3 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&gpu {
++	mali-supply = <&vdd_gpu>;
++	status = "okay";
++};
++
++&hdmi {
++	avdd-0v9-supply = <&vdda0v9_image>;
++	avdd-1v8-supply = <&vcca1v8_image>;
++	status = "okay";
++};
++
++&hdmi_in {
++	hdmi_in_vp0: endpoint {
++		remote-endpoint = <&vp0_out_hdmi>;
++	};
++};
++
++&hdmi_out {
++	hdmi_out_con: endpoint {
++		remote-endpoint = <&hdmi_con_in>;
++	};
++};
++
++&hdmi_sound {
++	status = "okay";
++};
++
++&i2c0 {
++	status = "okay";
++
++	vdd_cpu: regulator@1c {
++		compatible = "tcs,tcs4525";
++		reg = <0x1c>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <800000>;
++		regulator-max-microvolt = <1150000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	rk809: pmic@20 {
++		compatible = "rockchip,rk809";
++		reg = <0x20>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PA3 IRQ_TYPE_LEVEL_LOW>;
++		clock-output-names = "rk808-clkout1", "rk808-clkout2";
++
++		pinctrl-names = "default";
++		pinctrl-0 = <&pmic_int>;
++		rockchip,system-power-controller;
++		wakeup-source;
++		#clock-cells = <1>;
++
++		vcc1-supply = <&vcc3v3_sys>;
++		vcc2-supply = <&vcc3v3_sys>;
++		vcc3-supply = <&vcc3v3_sys>;
++		vcc4-supply = <&vcc3v3_sys>;
++		vcc5-supply = <&vcc3v3_sys>;
++		vcc6-supply = <&vcc3v3_sys>;
++		vcc7-supply = <&vcc3v3_sys>;
++		vcc8-supply = <&vcc3v3_sys>;
++		vcc9-supply = <&vcc3v3_sys>;
++
++		regulators {
++			vdd_logic: DCDC_REG1 {
++				regulator-name = "vdd_logic";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-init-microvolt = <900000>;
++				regulator-ramp-delay = <6001>;
++				regulator-initial-mode = <0x2>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_gpu: DCDC_REG2 {
++				regulator-name = "vdd_gpu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-init-microvolt = <900000>;
++				regulator-ramp-delay = <6001>;
++				regulator-initial-mode = <0x2>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_ddr: DCDC_REG3 {
++				regulator-name = "vcc_ddr";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-initial-mode = <0x2>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vdd_npu: DCDC_REG4 {
++				regulator-name = "vdd_npu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-init-microvolt = <900000>;
++				regulator-ramp-delay = <6001>;
++				regulator-initial-mode = <0x2>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_1v8: DCDC_REG5 {
++				regulator-name = "vcc_1v8";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_image: LDO_REG1 {
++				regulator-name = "vdda0v9_image";
++				regulator-boot-on;
++				regulator-always-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda_0v9: LDO_REG2 {
++				regulator-name = "vdda_0v9";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_pmu: LDO_REG3 {
++				regulator-name = "vdda0v9_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <900000>;
++				};
++			};
++
++			vccio_acodec: LDO_REG4 {
++				regulator-name = "vccio_acodec";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_sd: LDO_REG5 {
++				regulator-name = "vccio_sd";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_pmu: LDO_REG6 {
++				regulator-name = "vcc3v3_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcca_1v8: LDO_REG7 {
++				regulator-name = "vcca_1v8";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcca1v8_pmu: LDO_REG8 {
++				regulator-name = "vcca1v8_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vcca1v8_image: LDO_REG9 {
++				regulator-name = "vcca1v8_image";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_3v3: SWITCH_REG1 {
++				regulator-name = "vcc_3v3";
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_sd: SWITCH_REG2 {
++				regulator-name = "vcc3v3_sd";
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++		};
++	};
++};
++
++&i2s1_8ch {
++	rockchip,trcm-sync-tx-only;
++	status = "okay";
++};
++
++&gmac1 {
++	phy-mode = "rgmii";
++	clock_in_out = "output";
++	snps,reset-gpio = <&gpio2 RK_PB0 GPIO_ACTIVE_LOW>;
++	snps,reset-active-low;
++	/* Reset time is 75ms, 100ms */
++	snps,reset-delays-us = <0 75000 100000>;
++	assigned-clocks = <&cru SCLK_GMAC1_RX_TX>, <&cru SCLK_GMAC1>;
++	assigned-clock-parents = <&cru SCLK_GMAC1_RGMII_SPEED>, <&cru CLK_MAC1_2TOP>;
++	assigned-clock-rates = <0>, <125000000>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&gmac1m1_miim
++			&gmac1m1_tx_bus2_level3
++			&gmac1m1_rx_bus2
++			&gmac1m1_rgmii_clk_level2
++			&gmac1m1_rgmii_bus_level3>;
++	tx_delay = <0x1a>;
++	rx_delay = <0x0c>;
++	phy-handle = <&rgmii_phy1>;
++	status = "okay";
++};
++
++&mdio1 {
++	rgmii_phy1: phy@0 {
++		compatible = "ethernet-phy-ieee802.3-c22";
++		reg = <0x0>;
++	};
++};
++
++&pcie2x1 {
++	reset-gpios = <&gpio0 RK_PB6 GPIO_ACTIVE_HIGH>;
++	disable-gpios = <&gpio0 RK_PA6 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_pcie>;
++	status = "okay";
++};
++
++&pinctrl {
++	leds {
++		sys_led_pin: sys-status-led-pin {
++			rockchip,pins = <0 RK_PC7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	usb {
++		vcc5v0_usb20_host_en: vcc5v0-usb20-host-en {
++			rockchip,pins = <2 RK_PB6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		vcc5v0_usb30_host_en: vcc5v0-usb30-host-en {
++			rockchip,pins = <2 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	pmic {
++		pmic_int: pmic_int {
++			rockchip,pins =
++				<0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++};
++
++&pmu_io_domains {
++	pmuio2-supply = <&vcc3v3_pmu>;
++	vccio1-supply = <&vccio_acodec>;
++	vccio3-supply = <&vccio_sd>;
++	vccio4-supply = <&vcc_3v3>;
++	vccio5-supply = <&vcc_3v3>;
++	vccio6-supply = <&vcc_1v8>;
++	vccio7-supply = <&vcc_3v3>;
++	status = "okay";
++};
++
++&saradc {
++	vref-supply = <&vcca_1v8>;
++	status = "okay";
++};
++
++&tsadc {
++	rockchip,hw-tshut-mode = <1>;
++	rockchip,hw-tshut-polarity = <0>;
++	status = "okay";
++};
++
++&sdhci {
++	assigned-clocks = <&cru BCLK_EMMC>, <&cru TCLK_EMMC>, <&cru CCLK_EMMC>;
++	assigned-clock-rates = <200000000>, <24000000>, <200000000>;
++	bus-width = <8>;
++	max-frequency = <200000000>;
++	mmc-hs200-1_8v;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&emmc_bus8 &emmc_clk &emmc_cmd>;
++	supports-emmc;
++	status = "okay";
++};
++
++&sdmmc0 {
++	max-frequency = <150000000>;
++	supports-sd;
++	bus-width = <4>;
++	cap-mmc-highspeed;
++	cap-sd-highspeed;
++	disable-wp;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc3v3_sd>;
++	vqmmc-supply = <&vccio_sd>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc0_bus4 &sdmmc0_clk &sdmmc0_cmd &sdmmc0_det>;
++	status = "okay";
++};
++
++/* USB OTG/USB Host_1 USB 2.0 Comb */
++&usb2phy0 {
++	status = "okay";
++};
++
++&usb2phy0_host {
++	status = "okay";
++};
++
++&usb2phy0_otg {
++	status = "okay";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++/* USB Host_2/USB Host_3 USB 2.0 Comb */
++&usb2phy1 {
++	status = "okay";
++};
++
++&usb2phy1_host {
++	status = "okay";
++};
++
++&usb2phy1_otg {
++	status = "okay";
++};
++
++&usb_host1_ehci {
++	status = "okay";
++};
++
++&usb_host1_ohci {
++	status = "okay";
++};
++
++/* USB3.0 Host */
++&usb_host1_xhci {
++	status = "okay";
++};
++
++&vop {
++	assigned-clocks = <&cru DCLK_VOP0>, <&cru DCLK_VOP1>;
++	assigned-clock-parents = <&pmucru PLL_HPLL>, <&cru PLL_VPLL>;
++	status = "okay";
++};
++
++&vop_mmu {
++	status = "okay";
++};
++
++&vp0 {
++	vp0_out_hdmi: endpoint@ROCKCHIP_VOP2_EP_HDMI0 {
++		reg = <ROCKCHIP_VOP2_EP_HDMI0>;
++		remote-endpoint = <&hdmi_in_vp0>;
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/087-arm64-dts-rockchip-remove-unsupported-property-from-.patch b/target/linux/rockchip/patches-6.1/087-arm64-dts-rockchip-remove-unsupported-property-from-.patch
new file mode 100644
index 0000000000..3ea76f09cc
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/087-arm64-dts-rockchip-remove-unsupported-property-from-.patch
@@ -0,0 +1,27 @@
+From a21d56b1a3051c07ccaebafe1c9964f38f91277b Mon Sep 17 00:00:00 2001
+From: Chukun Pan <amadeus@jmu.edu.cn>
+Date: Mon, 19 Dec 2022 18:10:52 +0800
+Subject: [PATCH 087/383] arm64: dts: rockchip: remove unsupported property
+ from sdmmc2 for rock-3a
+
+'supports-sdio' is not part of the DT binding
+and not supported by the Linux driver.
+
+Signed-off-by: Chukun Pan <amadeus@jmu.edu.cn>
+Link: https://lore.kernel.org/r/20221219101052.7899-1-amadeus@jmu.edu.cn
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts | 1 -
+ 1 file changed, 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
+@@ -739,7 +739,6 @@
+ };
+ 
+ &sdmmc2 {
+-	supports-sdio;
+ 	bus-width = <4>;
+ 	disable-wp;
+ 	cap-sd-highspeed;
diff --git a/target/linux/rockchip/patches-6.1/088-arm64-dts-rockchip-add-audio-nodes-to-rk3566-roc-pc.patch b/target/linux/rockchip/patches-6.1/088-arm64-dts-rockchip-add-audio-nodes-to-rk3566-roc-pc.patch
new file mode 100644
index 0000000000..6387694d02
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/088-arm64-dts-rockchip-add-audio-nodes-to-rk3566-roc-pc.patch
@@ -0,0 +1,107 @@
+From bc6cef04f7c3883dbef48280f36f9e378abf55a7 Mon Sep 17 00:00:00 2001
+From: Furkan Kardame <f.kardame@manjaro.org>
+Date: Mon, 9 Jan 2023 23:32:33 +0300
+Subject: [PATCH 088/383] arm64: dts: rockchip: add audio nodes to
+ rk3566-roc-pc
+
+This patch adds simple audio card nodes
+Enabled i2s0_8ch as it is needed for hdmi audio
+
+Added i2s1_8ch as it is needed for 3.5mm audio jack and limit it to a
+single-channel, as i2s1m0_sdo{1,2,3} and i2s1m0_sdi{1,2,3} are used
+by pcie.
+
+Signed-off-by: Furkan Kardame <f.kardame@manjaro.org>
+Link: https://lore.kernel.org/r/20230109203232.45192-1-f.kardame@manjaro.org
+[dropped the duplicate i2s@fe410000 node]
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../arm64/boot/dts/rockchip/rk3566-roc-pc.dts | 44 ++++++++++++++++++-
+ 1 file changed, 42 insertions(+), 2 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-roc-pc.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-roc-pc.dts
+@@ -53,6 +53,22 @@
+ 		};
+ 	};
+ 
++	rk809-sound {
++		compatible = "simple-audio-card";
++		simple-audio-card,format = "i2s";
++		simple-audio-card,name = "STATION-M2-FRONT";
++		simple-audio-card,mclk-fs = <256>;
++		status = "okay";
++
++		simple-audio-card,cpu {
++			sound-dai = <&i2s1_8ch>;
++		};
++
++		simple-audio-card,codec {
++			sound-dai = <&rk809>;
++		};
++	};
++
+ 	sdio_pwrseq: sdio-pwrseq {
+ 		status = "okay";
+ 		compatible = "mmc-pwrseq-simple";
+@@ -200,6 +216,10 @@
+ 	};
+ };
+ 
++&hdmi_sound {
++	status = "okay";
++};
++
+ &i2c0 {
+ 	status = "okay";
+ 
+@@ -226,12 +246,16 @@
+ 		interrupt-parent = <&gpio0>;
+ 		interrupts = <RK_PA7 IRQ_TYPE_LEVEL_LOW>;
+ 		clock-output-names = "rk808-clkout1", "rk808-clkout2";
+-
++		assigned-clocks = <&cru I2S1_MCLKOUT_TX>;
++		assigned-clock-parents = <&cru CLK_I2S1_8CH_TX>;
++		clock-names = "mclk";
++		clocks = <&cru I2S1_MCLKOUT_TX>;
+ 		pinctrl-names = "default";
+-		pinctrl-0 = <&pmic_int>;
++		pinctrl-0 = <&pmic_int>, <&i2s1m0_mclk>;
+ 		rockchip,system-power-controller;
+ 		wakeup-source;
+ 		#clock-cells = <1>;
++		#sound-dai-cells = <0>;
+ 
+ 		vcc1-supply = <&vcc3v3_sys>;
+ 		vcc2-supply = <&vcc3v3_sys>;
+@@ -243,6 +267,10 @@
+ 		vcc8-supply = <&vcc3v3_sys>;
+ 		vcc9-supply = <&vcc3v3_sys>;
+ 
++		codec {
++			mic-in-differential;
++		};
++
+ 		regulators {
+ 			vdd_log: DCDC_REG1 {
+ 				regulator-name = "vdd_log";
+@@ -452,6 +480,18 @@
+ 	status = "okay";
+ };
+ 
++&i2s0_8ch {
++	status = "okay";
++};
++
++&i2s1_8ch {
++	pinctrl-0 = <&i2s1m0_sclktx &i2s1m0_sclkrx
++			&i2s1m0_lrcktx &i2s1m0_lrckrx
++			&i2s1m0_sdi0   &i2s1m0_sdo0>;
++	rockchip,trcm-sync-tx-only;
++	status = "okay";
++};
++
+ &mdio1 {
+ 	rgmii_phy1: ethernet-phy@0 {
+ 		compatible = "ethernet-phy-ieee802.3-c22";
diff --git a/target/linux/rockchip/patches-6.1/089-arm64-dts-rockchip-Add-dts-for-EmbedFire-rk3568-Luba.patch b/target/linux/rockchip/patches-6.1/089-arm64-dts-rockchip-Add-dts-for-EmbedFire-rk3568-Luba.patch
new file mode 100644
index 0000000000..9fbc5d519b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/089-arm64-dts-rockchip-Add-dts-for-EmbedFire-rk3568-Luba.patch
@@ -0,0 +1,778 @@
+From 3c681873c055b2a61e8124cd5501ff3fd4dda349 Mon Sep 17 00:00:00 2001
+From: Andy Yan <andyshrk@163.com>
+Date: Sun, 8 Jan 2023 19:08:17 +0800
+Subject: [PATCH 089/383] arm64: dts: rockchip: Add dts for EmbedFire rk3568
+ LubanCat 2
+
+LubanCat 2 is a rk3568 based SBC from EmbedFire.
+
+Specification:
+- Rockchip rk3568
+- LPDDR4/4X 1/2/4/8 GB
+- TF scard slot
+- eMMC 8/32/64/128 GB
+- Gigabit ethernet x 2
+- HDMI out
+- USB 2.0 Host x 1
+- USB 2.0 Type-C OTG x 1
+- USB 3.0 Host x 1
+- Mini PCIE interface for WIFI/BT module
+- M.2 key for 2280 NVME
+- 40 pin header
+
+Signed-off-by: Andy Yan <andyshrk@163.com>
+Link: https://lore.kernel.org/r/20230108110817.2214859-1-andyshrk@163.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../boot/dts/rockchip/rk3568-lubancat-2.dts   | 733 ++++++++++++++++++
+ 2 files changed, 734 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3568-lubancat-2.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -81,6 +81,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-bo
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-lubancat-1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-bpi-r2-pro.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-evb1-v10.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-lubancat-2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-odroid-m1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-radxa-e25.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-rock-3a.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3568-lubancat-2.dts
+@@ -0,0 +1,733 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ * Copyright (c) 2022 EmbedFire <embedfire@embedfire.com>
++ */
++
++/dts-v1/;
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/leds/common.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include <dt-bindings/soc/rockchip,vop2.h>
++#include "rk3568.dtsi"
++
++/ {
++	model = "EmbedFire LubanCat 2";
++	compatible = "embedfire,lubancat-2", "rockchip,rk3568";
++
++	aliases {
++		ethernet0 = &gmac0;
++		ethernet1 = &gmac1;
++		mmc0 = &sdmmc0;
++		mmc1 = &sdhci;
++	};
++
++	chosen: chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	leds {
++		compatible = "gpio-leds";
++
++		user_led: user-led {
++			label = "user_led";
++			linux,default-trigger = "heartbeat";
++			default-state = "on";
++			gpios = <&gpio0 RK_PC7 GPIO_ACTIVE_LOW>;
++			pinctrl-names = "default";
++			pinctrl-0 = <&user_led_pin>;
++		};
++	};
++
++	hdmi-con {
++		compatible = "hdmi-connector";
++		type = "a";
++
++		port {
++			hdmi_con_in: endpoint {
++				remote-endpoint = <&hdmi_out_con>;
++			};
++		};
++	};
++
++	dc_5v: dc-5v-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "dc_5v";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++
++	vcc3v3_sys: vcc3v3-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc5v0_sys: vcc5v0-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&dc_5v>;
++	};
++
++	vcc3v3_m2_pcie: vcc3v3-m2-pcie-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "m2_pcie_3v3";
++		enable-active-high;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		gpios = <&gpio0 RK_PD4 GPIO_ACTIVE_HIGH>;
++		pinctrl-0 = <&vcc3v3_m2_pcie_en>;
++		pinctrl-names = "default";
++		startup-delay-us = <200000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc3v3_mini_pcie: vcc3v3-mini-pcie-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "minipcie_3v3";
++		enable-active-high;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		gpio = <&gpio3 RK_PC3 GPIO_ACTIVE_HIGH>;
++		pinctrl-0 = <&vcc3v3_mini_pcie_en>;
++		pinctrl-names = "default";
++		startup-delay-us = <5000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc5v0_usb20_host: vcc5v0-usb20-host-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usb20_host";
++		enable-active-high;
++		gpio = <&gpio0 RK_PD5 GPIO_ACTIVE_HIGH>;
++		pinctrl-0 = <&vcc5v0_usb20_host_en>;
++		pinctrl-names = "default";
++	};
++
++	vcc5v0_usb30_host: vcc5v0-usb30-host-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usb30_host";
++		enable-active-high;
++		gpio = <&gpio0 RK_PD6 GPIO_ACTIVE_HIGH>;
++		pinctrl-0 = <&vcc5v0_usb30_host_en>;
++		pinctrl-names = "default";
++	};
++
++	vcc5v0_otg_vbus: vcc5v0-otg-vbus-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_otg_vbus";
++		enable-active-high;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		gpio = <&gpio0 RK_PD3 GPIO_ACTIVE_HIGH>;
++		pinctrl-0 = <&vcc5v0_otg_vbus_en>;
++		pinctrl-names = "default";
++	};
++};
++
++&combphy0 {
++	status = "okay";
++};
++
++&combphy1 {
++	status = "okay";
++};
++
++&combphy2 {
++	status = "okay";
++};
++
++&cpu0 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu1 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu2 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu3 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&gpu {
++	mali-supply = <&vdd_gpu>;
++	status = "okay";
++};
++
++&hdmi {
++	avdd-0v9-supply = <&vdda0v9_image>;
++	avdd-1v8-supply = <&vcca1v8_image>;
++	status = "okay";
++};
++
++&hdmi_in {
++	hdmi_in_vp0: endpoint {
++		remote-endpoint = <&vp0_out_hdmi>;
++	};
++};
++
++&hdmi_out {
++	hdmi_out_con: endpoint {
++		remote-endpoint = <&hdmi_con_in>;
++	};
++};
++
++&hdmi_sound {
++	status = "okay";
++};
++
++&i2c0 {
++	status = "okay";
++
++	vdd_cpu: regulator@1c {
++		compatible = "tcs,tcs4525";
++		reg = <0x1c>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <800000>;
++		regulator-max-microvolt = <1150000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	rk809: pmic@20 {
++		compatible = "rockchip,rk809";
++		reg = <0x20>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PA3 IRQ_TYPE_LEVEL_LOW>;
++		assigned-clocks = <&cru I2S1_MCLKOUT_TX>;
++		assigned-clock-parents = <&cru CLK_I2S1_8CH_TX>;
++		#clock-cells = <1>;
++		clock-names = "mclk";
++		clocks = <&cru I2S1_MCLKOUT_TX>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pmic_int>;
++		rockchip,system-power-controller;
++		#sound-dai-cells = <0>;
++		vcc1-supply = <&vcc3v3_sys>;
++		vcc2-supply = <&vcc3v3_sys>;
++		vcc3-supply = <&vcc3v3_sys>;
++		vcc4-supply = <&vcc3v3_sys>;
++		vcc5-supply = <&vcc3v3_sys>;
++		vcc6-supply = <&vcc3v3_sys>;
++		vcc7-supply = <&vcc3v3_sys>;
++		vcc8-supply = <&vcc3v3_sys>;
++		vcc9-supply = <&vcc3v3_sys>;
++		wakeup-source;
++
++		regulators {
++			vdd_logic: DCDC_REG1 {
++				regulator-name = "vdd_logic";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-init-microvolt = <900000>;
++				regulator-ramp-delay = <6001>;
++				regulator-initial-mode = <0x2>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_gpu: DCDC_REG2 {
++				regulator-name = "vdd_gpu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-init-microvolt = <900000>;
++				regulator-ramp-delay = <6001>;
++				regulator-initial-mode = <0x2>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_ddr: DCDC_REG3 {
++				regulator-name = "vcc_ddr";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-initial-mode = <0x2>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vdd_npu: DCDC_REG4 {
++				regulator-name = "vdd_npu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-init-microvolt = <900000>;
++				regulator-ramp-delay = <6001>;
++				regulator-initial-mode = <0x2>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_1v8: DCDC_REG5 {
++				regulator-name = "vcc_1v8";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_image: LDO_REG1 {
++				regulator-name = "vdda0v9_image";
++				regulator-boot-on;
++				regulator-always-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda_0v9: LDO_REG2 {
++				regulator-name = "vdda_0v9";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_pmu: LDO_REG3 {
++				regulator-name = "vdda0v9_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <900000>;
++				};
++			};
++
++			vccio_acodec: LDO_REG4 {
++				regulator-name = "vccio_acodec";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_sd: LDO_REG5 {
++				regulator-name = "vccio_sd";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_pmu: LDO_REG6 {
++				regulator-name = "vcc3v3_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcca_1v8: LDO_REG7 {
++				regulator-name = "vcca_1v8";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcca1v8_pmu: LDO_REG8 {
++				regulator-name = "vcca1v8_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vcca1v8_image: LDO_REG9 {
++				regulator-name = "vcca1v8_image";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_3v3: SWITCH_REG1 {
++				regulator-name = "vcc_3v3";
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_sd: SWITCH_REG2 {
++				regulator-name = "vcc3v3_sd";
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++		};
++	};
++};
++
++&i2s1_8ch {
++	rockchip,trcm-sync-tx-only;
++	status = "okay";
++};
++
++&gmac0 {
++	phy-mode = "rgmii";
++	clock_in_out = "output";
++
++	snps,reset-gpio = <&gpio2 RK_PD3 GPIO_ACTIVE_LOW>;
++	snps,reset-active-low;
++	/* Reset time is 20ms, 100ms for rtl8211f */
++	snps,reset-delays-us = <0 20000 100000>;
++
++	assigned-clocks = <&cru SCLK_GMAC0_RX_TX>, <&cru SCLK_GMAC0>;
++	assigned-clock-parents = <&cru SCLK_GMAC0_RGMII_SPEED>, <&cru CLK_MAC0_2TOP>;
++
++	pinctrl-names = "default";
++	pinctrl-0 = <&gmac0_miim
++		     &gmac0_tx_bus2
++		     &gmac0_rx_bus2
++		     &gmac0_rgmii_clk
++		     &gmac0_rgmii_bus>;
++
++	tx_delay = <0x22>;
++	rx_delay = <0x0e>;
++
++	phy-handle = <&rgmii_phy0>;
++	status = "okay";
++};
++
++&mdio0 {
++	rgmii_phy0: phy@0 {
++		compatible = "ethernet-phy-ieee802.3-c22";
++		reg = <0x0>;
++	};
++};
++
++&gmac1 {
++	phy-mode = "rgmii";
++	clock_in_out = "output";
++
++	snps,reset-gpio = <&gpio3 RK_PA2 GPIO_ACTIVE_LOW>;
++	snps,reset-active-low;
++	/* Reset time is 20ms, 100ms for rtl8211f */
++	snps,reset-delays-us = <0 20000 100000>;
++
++	assigned-clocks = <&cru SCLK_GMAC1_RX_TX>, <&cru SCLK_GMAC1>;
++	assigned-clock-parents = <&cru SCLK_GMAC1_RGMII_SPEED>, <&cru CLK_MAC1_2TOP>;
++
++	pinctrl-names = "default";
++	pinctrl-0 = <&gmac1m1_miim
++		     &gmac1m1_tx_bus2
++		     &gmac1m1_rx_bus2
++		     &gmac1m1_rgmii_clk
++		     &gmac1m1_rgmii_bus>;
++
++	tx_delay = <0x21>;
++	rx_delay = <0x0e>;
++
++	phy-handle = <&rgmii_phy1>;
++	status = "okay";
++};
++
++&mdio1 {
++	rgmii_phy1: phy@0 {
++		compatible = "ethernet-phy-ieee802.3-c22";
++		reg = <0x0>;
++	};
++};
++
++&gic {
++	mbi-ranges = <94 31>, <229 31>, <289 31>;
++};
++
++&pcie30phy {
++	status = "okay";
++};
++
++&pcie3x2 {
++	reset-gpios = <&gpio2 RK_PD6 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_m2_pcie>;
++	status = "okay";
++};
++
++&pcie2x1 {
++	reset-gpios = <&gpio3 RK_PC1 GPIO_ACTIVE_HIGH>;
++	disable-gpios = <&gpio3 RK_PC2 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_mini_pcie>;
++	status = "okay";
++};
++
++&pmu_io_domains {
++	pmuio2-supply = <&vcc3v3_pmu>;
++	vccio1-supply = <&vccio_acodec>;
++	vccio3-supply = <&vccio_sd>;
++	vccio4-supply = <&vcc_1v8>;
++	vccio5-supply = <&vcc_3v3>;
++	vccio6-supply = <&vcc_1v8>;
++	vccio7-supply = <&vcc_3v3>;
++	status = "okay";
++};
++
++&pwm8 {
++	status = "okay";
++};
++
++&pwm9 {
++	status = "disabled";
++};
++
++&pwm10 {
++	status = "disabled";
++};
++
++&pwm14 {
++	status = "disabled";
++};
++
++&spi3 {
++	pinctrl-0 = <&spi3m1_pins>;
++	status = "disabled";
++};
++
++&uart2 {
++	status = "okay";
++};
++
++&uart3 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&uart3m1_xfer>;
++	status = "disabled";
++};
++
++&saradc {
++	vref-supply = <&vcca_1v8>;
++	status = "okay";
++};
++
++&tsadc {
++	rockchip,hw-tshut-mode = <1>;
++	rockchip,hw-tshut-polarity = <0>;
++	status = "okay";
++};
++
++&sdhci {
++	assigned-clocks = <&cru BCLK_EMMC>, <&cru TCLK_EMMC>, <&cru CCLK_EMMC>;
++	assigned-clock-rates = <200000000>, <24000000>, <200000000>;
++	bus-width = <8>;
++	max-frequency = <200000000>;
++	mmc-hs200-1_8v;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&emmc_bus8 &emmc_clk &emmc_cmd>;
++	supports-emmc;
++	status = "okay";
++};
++
++&sdmmc0 {
++	max-frequency = <150000000>;
++	no-sdio;
++	no-mmc;
++	bus-width = <4>;
++	cap-mmc-highspeed;
++	cap-sd-highspeed;
++	disable-wp;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc3v3_sd>;
++	vqmmc-supply = <&vccio_sd>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc0_bus4 &sdmmc0_clk &sdmmc0_cmd &sdmmc0_det>;
++	status = "okay";
++};
++
++/* USB OTG/USB Host_1 USB 2.0 Comb */
++&usb2phy0 {
++	status = "okay";
++};
++
++&usb2phy0_host {
++	phy-supply = <&vcc5v0_usb30_host>;
++	status = "okay";
++};
++
++&usb2phy0_otg {
++	phy-supply = <&vcc5v0_otg_vbus>;
++	status = "okay";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++/* USB Host_2/USB Host_3 USB 2.0 Comb */
++&usb2phy1 {
++	status = "okay";
++};
++
++&usb2phy1_host {
++	status = "okay";
++};
++
++&usb2phy1_otg {
++	phy-supply = <&vcc5v0_usb20_host>;
++	status = "okay";
++};
++
++&usb_host1_ehci {
++	status = "okay";
++};
++
++&usb_host1_ohci {
++	status = "okay";
++};
++
++/* MULTI_PHY0 For SATA0, USB3.0 OTG Only USB2.0 */
++&usb_host0_xhci {
++	phys = <&usb2phy0_otg>;
++	phy-names = "usb2-phy";
++	extcon = <&usb2phy0>;
++	maximum-speed = "high-speed";
++	dr_mode = "host";
++	status = "okay";
++};
++
++&sata0 {
++	status = "okay";
++};
++
++/* USB3.0 Host */
++&usb_host1_xhci {
++	status = "okay";
++};
++
++&vop {
++	assigned-clocks = <&cru DCLK_VOP0>, <&cru DCLK_VOP1>;
++	assigned-clock-parents = <&pmucru PLL_HPLL>, <&cru PLL_VPLL>;
++	status = "okay";
++};
++
++&vop_mmu {
++	status = "okay";
++};
++
++&vp0 {
++	vp0_out_hdmi: endpoint@ROCKCHIP_VOP2_EP_HDMI0 {
++		reg = <ROCKCHIP_VOP2_EP_HDMI0>;
++		remote-endpoint = <&hdmi_in_vp0>;
++	};
++};
++
++&pinctrl {
++	leds {
++		user_led_pin: user-status-led-pin {
++			rockchip,pins = <0 RK_PC7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	usb {
++		vcc5v0_usb20_host_en: vcc5v0-usb20-host-en {
++			rockchip,pins = <0 RK_PD5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		vcc5v0_usb30_host_en: vcc5v0-usb30-host-en {
++			rockchip,pins = <0 RK_PD6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		vcc5v0_otg_vbus_en: vcc5v0-otg-vbus-en {
++			rockchip,pins = <0 RK_PD3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	pcie {
++		vcc3v3_m2_pcie_en: vcc3v3-m2-pcie-en {
++			rockchip,pins = <0 RK_PD4 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		vcc3v3_mini_pcie_en: vcc3v3-mini-pcie-en {
++			rockchip,pins = <3 RK_PC3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	pmic {
++		pmic_int: pmic-int {
++			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/090-arm64-dts-rockchip-Add-IR-receiver-to-BPI-R2Pro.patch b/target/linux/rockchip/patches-6.1/090-arm64-dts-rockchip-Add-IR-receiver-to-BPI-R2Pro.patch
new file mode 100644
index 0000000000..59dbc97f9b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/090-arm64-dts-rockchip-Add-IR-receiver-to-BPI-R2Pro.patch
@@ -0,0 +1,48 @@
+From d3df837379b772e85ea00071a01c8eb97593ed32 Mon Sep 17 00:00:00 2001
+From: Alex Riabchenko <d3adme4t@gmail.com>
+Date: Wed, 14 Dec 2022 16:54:33 +0100
+Subject: [PATCH 090/383] arm64: dts: rockchip: Add IR receiver to BPI-R2Pro
+
+Add the infrared receiver and its associated pinctrl entry.
+
+Based on Aurelien Jarno's patchset:
+https://lore.kernel.org/lkml/20220930051246.391614-14-aurelien@aurel32.net/
+
+Signed-off-by: Alex Riabchenko <d3adme4t@gmail.com>
+Signed-off-by: Frank Wunderlich <frank-w@public-files.de>
+Link: https://lore.kernel.org/r/20221214155433.112257-1-linux@fw-web.de
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-bpi-r2-pro.dts | 13 +++++++++++++
+ 1 file changed, 13 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-bpi-r2-pro.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-bpi-r2-pro.dts
+@@ -66,6 +66,13 @@
+ 		};
+ 	};
+ 
++	ir-receiver {
++		compatible = "gpio-ir-receiver";
++		gpios = <&gpio0 RK_PC2 GPIO_ACTIVE_LOW>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&ir_receiver_pin>;
++	};
++
+ 	vcc3v3_sys: vcc3v3-sys-regulator {
+ 		compatible = "regulator-fixed";
+ 		regulator-name = "vcc3v3_sys";
+@@ -614,6 +621,12 @@
+ 		};
+ 	};
+ 
++	ir-receiver {
++		ir_receiver_pin: ir-receiver-pin {
++			rockchip,pins = <0 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
+ 	pcie {
+ 		minipcie_enable_h: minipcie-enable-h {
+ 			rockchip,pins = <0 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none_drv_level_5>;
diff --git a/target/linux/rockchip/patches-6.1/007-v6.3-arm64-dts-rockchip-rk3328-Add-Orange-Pi-R1-Plus.patch b/target/linux/rockchip/patches-6.1/091-arm64-dts-rockchip-rk3328-Add-Orange-Pi-R1-Plus.patch
similarity index 96%
rename from target/linux/rockchip/patches-6.1/007-v6.3-arm64-dts-rockchip-rk3328-Add-Orange-Pi-R1-Plus.patch
rename to target/linux/rockchip/patches-6.1/091-arm64-dts-rockchip-rk3328-Add-Orange-Pi-R1-Plus.patch
index 4e48218b89..8c90c07a43 100644
--- a/target/linux/rockchip/patches-6.1/007-v6.3-arm64-dts-rockchip-rk3328-Add-Orange-Pi-R1-Plus.patch
+++ b/target/linux/rockchip/patches-6.1/091-arm64-dts-rockchip-rk3328-Add-Orange-Pi-R1-Plus.patch
@@ -1,7 +1,7 @@
-From 51712e1d014aaaa4c6e1e7e84932d58b5c0f59ed Mon Sep 17 00:00:00 2001
+From 80a48862e4e7f33159efc514d1cb0d081a3f7440 Mon Sep 17 00:00:00 2001
 From: Chukun Pan <amadeus@jmu.edu.cn>
 Date: Sat, 3 Dec 2022 15:41:49 +0800
-Subject: [PATCH] arm64: dts: rockchip: rk3328: Add Orange Pi R1 Plus
+Subject: [PATCH 091/383] arm64: dts: rockchip: rk3328: Add Orange Pi R1 Plus
 
 Orange Pi R1 Plus is a Rockchip RK3328 based SBC by Xunlong.
 
@@ -13,6 +13,7 @@ both network ports have independent MAC addresses.
 Signed-off-by: Chukun Pan <amadeus@jmu.edu.cn>
 Link: https://lore.kernel.org/r/20221203074149.11543-3-amadeus@jmu.edu.cn
 Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  arch/arm64/boot/dts/rockchip/Makefile         |   1 +
  .../dts/rockchip/rk3328-orangepi-r1-plus.dts  | 373 ++++++++++++++++++
@@ -21,9 +22,9 @@ Signed-off-by: Heiko Stuebner <heiko@sntech.de>
 
 --- a/arch/arm64/boot/dts/rockchip/Makefile
 +++ b/arch/arm64/boot/dts/rockchip/Makefile
-@@ -12,6 +12,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-a1
+@@ -15,6 +15,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-od
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-a1.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-evb.dtb
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2c.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2s.dtb
 +dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-orangepi-r1-plus.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-rock64.dtb
diff --git a/target/linux/rockchip/patches-6.1/092-arm64-dts-rockchip-Change-audio-card-name-for-Odroid.patch b/target/linux/rockchip/patches-6.1/092-arm64-dts-rockchip-Change-audio-card-name-for-Odroid.patch
new file mode 100644
index 0000000000..e81d5b93a6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/092-arm64-dts-rockchip-Change-audio-card-name-for-Odroid.patch
@@ -0,0 +1,34 @@
+From 38e13dd40b3c7821da8a11b5c3905268a0def893 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Thu, 1 Dec 2022 14:36:52 -0600
+Subject: [PATCH 092/383] arm64: dts: rockchip: Change audio card name for
+ Odroid Go
+
+Change the audio card name for the Odroid Go Advance series to
+rk817_int. This matches the audio card name of the Anbernic RG353V.
+This is done to provide a consistent card name so that a single ALSA
+UCM file can be used for all (identical) implementations of this codec
+and configuration combo. The rk817_int configuration is for when the
+internal speaker amplifier of the rk817 is used. The other Anbernic
+devices have the name as rk817_ext for when an external speaker
+amplifier is used.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20221201203655.1245-2-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi
+@@ -127,7 +127,7 @@
+ 
+ 	rk817-sound {
+ 		compatible = "simple-audio-card";
+-		simple-audio-card,name = "Analog";
++		simple-audio-card,name = "rk817_int";
+ 		simple-audio-card,format = "i2s";
+ 		simple-audio-card,hp-det-gpio = <&gpio2 RK_PC6 GPIO_ACTIVE_HIGH>;
+ 		simple-audio-card,mclk-fs = <256>;
diff --git a/target/linux/rockchip/patches-6.1/093-arm64-dts-rockchip-don-t-set-cpll-rate-for-Odroid-Go.patch b/target/linux/rockchip/patches-6.1/093-arm64-dts-rockchip-don-t-set-cpll-rate-for-Odroid-Go.patch
new file mode 100644
index 0000000000..86245c0e95
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/093-arm64-dts-rockchip-don-t-set-cpll-rate-for-Odroid-Go.patch
@@ -0,0 +1,38 @@
+From 29d572b918fc509a518b8464f4c768ddac70cc5a Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Thu, 1 Dec 2022 14:36:53 -0600
+Subject: [PATCH 093/383] arm64: dts: rockchip: don't set cpll rate for Odroid
+ Go
+
+The Odroid Go Advance devicetree tries to set the rate for the cpll
+clock to 17MHz, which is not a supported rate. This fails, and triggers
+the error of "clk: couldn't set cpll clk rate to 17000000 (-22),
+current rate: 17000000" in the dmesg log. Remove the incorrect rate.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20221201203655.1245-3-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi | 6 ++----
+ 1 file changed, 2 insertions(+), 4 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi
+@@ -192,14 +192,12 @@
+ 	assigned-clocks = <&cru PLL_NPLL>,
+ 		<&cru ACLK_BUS_PRE>, <&cru ACLK_PERI_PRE>,
+ 		<&cru HCLK_BUS_PRE>, <&cru HCLK_PERI_PRE>,
+-		<&cru PCLK_BUS_PRE>, <&cru SCLK_GPU>,
+-		<&cru PLL_CPLL>;
++		<&cru PCLK_BUS_PRE>, <&cru SCLK_GPU>;
+ 
+ 	assigned-clock-rates = <1188000000>,
+ 		<200000000>, <200000000>,
+ 		<150000000>, <150000000>,
+-		<100000000>, <200000000>,
+-		<17000000>;
++		<100000000>, <200000000>;
+ };
+ 
+ &display_subsystem {
diff --git a/target/linux/rockchip/patches-6.1/094-arm64-dts-rockchip-update-px30-thermal-zones-for-GPU.patch b/target/linux/rockchip/patches-6.1/094-arm64-dts-rockchip-update-px30-thermal-zones-for-GPU.patch
new file mode 100644
index 0000000000..5949f684b1
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/094-arm64-dts-rockchip-update-px30-thermal-zones-for-GPU.patch
@@ -0,0 +1,75 @@
+From 13ef5bfa596a6afed92018ee8c42de17ea856dfd Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Thu, 1 Dec 2022 14:36:54 -0600
+Subject: [PATCH 094/383] arm64: dts: rockchip: update px30 thermal zones for
+ GPU
+
+Without the trips, the following errors are received in the dmesg
+log and the rockchip-thermal driver fails to load the gpu sensor:
+
+"thermal_sys: Failed to find 'trips' node"
+"rockchip-thermal ff280000.tsadc: failed to register sensor 1: -22"
+
+Trip values are assumed, unfortunately, as the same values as the
+CPU. The datasheet and TRM didn't appear to have any information
+regarding thermals for the GPU.
+
+Stress tested successfully on my Odroid Go Advance.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20221201203655.1245-4-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/px30.dtsi | 33 +++++++++++++++++++++-----
+ 1 file changed, 27 insertions(+), 6 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/px30.dtsi
++++ b/arch/arm64/boot/dts/rockchip/px30.dtsi
+@@ -210,12 +210,6 @@
+ 					cooling-device = <&cpu0 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>;
+ 					contribution = <4096>;
+ 				};
+-
+-				map1 {
+-					trip = <&target>;
+-					cooling-device = <&gpu THERMAL_NO_LIMIT THERMAL_NO_LIMIT>;
+-					contribution = <4096>;
+-				};
+ 			};
+ 		};
+ 
+@@ -223,6 +217,33 @@
+ 			polling-delay-passive = <100>; /* milliseconds */
+ 			polling-delay = <1000>; /* milliseconds */
+ 			thermal-sensors = <&tsadc 1>;
++
++			trips {
++				gpu_threshold: gpu-threshold {
++					temperature = <70000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++
++				gpu_target: gpu-target {
++					temperature = <85000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++
++				gpu_crit: gpu-crit {
++					temperature = <115000>;
++					hysteresis = <2000>;
++					type = "critical";
++				};
++			};
++
++			cooling-maps {
++				map0 {
++					trip = <&gpu_target>;
++					cooling-device = <&gpu THERMAL_NO_LIMIT THERMAL_NO_LIMIT>;
++				};
++			};
+ 		};
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/095-arm64-dts-rockchip-Update-leds-for-Odroid-Go-Advance.patch b/target/linux/rockchip/patches-6.1/095-arm64-dts-rockchip-Update-leds-for-Odroid-Go-Advance.patch
new file mode 100644
index 0000000000..4e0497a086
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/095-arm64-dts-rockchip-Update-leds-for-Odroid-Go-Advance.patch
@@ -0,0 +1,91 @@
+From 762b0235a905118ec7f1fe316334dcfa833b371f Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Thu, 1 Dec 2022 14:36:55 -0600
+Subject: [PATCH 095/383] arm64: dts: rockchip: Update leds for Odroid Go
+ Advance
+
+Update the blue LED to be controlled via pwm to enable control of LED
+brightness. Add red LED as a GPIO controlled LED. The documentation
+stated "label" was depreciated so function and color was used instead.
+The LED names (led-2 and led-3) are given because that is what they
+are numbered on the board itself; LED 1 is wired directly into an
+always on regulator and is not controllable. LED 2 is labelled "alive"
+on the board and documentation recommends we set the function as
+status over other miscellaneous functions. LED 3 is labelled "chg" on
+the board.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20221201203655.1245-5-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3326-odroid-go.dtsi   | 33 +++++++++++++++----
+ 1 file changed, 26 insertions(+), 7 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi
+@@ -8,6 +8,7 @@
+ /dts-v1/;
+ #include <dt-bindings/gpio/gpio.h>
+ #include <dt-bindings/input/input.h>
++#include <dt-bindings/leds/common.h>
+ #include <dt-bindings/pinctrl/rockchip.h>
+ #include "rk3326.dtsi"
+ 
+@@ -113,15 +114,29 @@
+ 		};
+ 	};
+ 
+-	leds: gpio-leds {
++	/* led-1 is wired directly to output of always-on regulator */
++
++	gpio_led: gpio-leds {
+ 		compatible = "gpio-leds";
+ 		pinctrl-names = "default";
+-		pinctrl-0 = <&blue_led_pin>;
++		pinctrl-0 = <&red_led_pin>;
++
++		red_led: led-3 {
++			color = <LED_COLOR_ID_RED>;
++			gpios = <&gpio0 RK_PB5 GPIO_ACTIVE_HIGH>;
++			function = LED_FUNCTION_CHARGING;
++		};
++	};
+ 
+-		blue_led: led-0 {
+-			label = "blue:heartbeat";
+-			gpios = <&gpio0 RK_PC1 GPIO_ACTIVE_HIGH>;
++	pwm_led: led-controller {
++		compatible = "pwm-leds";
++
++		blue_led: led-2 {
++			color = <LED_COLOR_ID_BLUE>;
++			function = LED_FUNCTION_STATUS;
+ 			linux,default-trigger = "heartbeat";
++			max-brightness = <255>;
++			pwms = <&pwm3 0 25000 0>;
+ 		};
+ 	};
+ 
+@@ -465,6 +480,10 @@
+ 	status = "okay";
+ };
+ 
++&pwm3 {
++	status = "okay";
++};
++
+ &saradc {
+ 	vref-supply = <&vcc_1v8>;
+ 	status = "okay";
+@@ -569,8 +588,8 @@
+ 	};
+ 
+ 	leds {
+-		blue_led_pin: blue-led-pin {
+-			rockchip,pins = <0 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
++		red_led_pin: red-led-pin {
++			rockchip,pins = <0 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/096-arm64-dts-rockchip-increase-spi-max-frequency-of-nor.patch b/target/linux/rockchip/patches-6.1/096-arm64-dts-rockchip-increase-spi-max-frequency-of-nor.patch
new file mode 100644
index 0000000000..590de2d50a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/096-arm64-dts-rockchip-increase-spi-max-frequency-of-nor.patch
@@ -0,0 +1,29 @@
+From 7ac9682ef12c0e09fdc2b3ec96263714d727996e Mon Sep 17 00:00:00 2001
+From: Manoj Sai <abbaraju.manojsai@amarulasolutions.com>
+Date: Thu, 24 Nov 2022 12:57:14 +0530
+Subject: [PATCH 096/383] arm64: dts: rockchip: increase spi-max-frequency of
+ nor flash for roc-rk3399-pc
+
+Increase the spi-max-frequency of nor flash from 10Mhz to 30Mhz,this improves the
+flash raw write speed by 0.9 MB/s to 1.6MB/s and the time taken to write is
+get reduced from 36 seconds to 20 seconds.
+
+Signed-off-by: Manoj Sai <abbaraju.manojsai@amarulasolutions.com>
+Link: https://lore.kernel.org/r/20221124072714.450223-1-abbaraju.manojsai@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399-roc-pc.dtsi | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-roc-pc.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399-roc-pc.dtsi
+@@ -735,7 +735,7 @@
+ 	flash@0 {
+ 		compatible = "jedec,spi-nor";
+ 		reg = <0>;
+-		spi-max-frequency = <10000000>;
++		spi-max-frequency = <30000000>;
+ 	};
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/097-arm64-dts-rockchip-Add-rk3588-pinctrl-data.patch b/target/linux/rockchip/patches-6.1/097-arm64-dts-rockchip-Add-rk3588-pinctrl-data.patch
new file mode 100644
index 0000000000..38e4b7646b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/097-arm64-dts-rockchip-Add-rk3588-pinctrl-data.patch
@@ -0,0 +1,3958 @@
+From fda50f49149e179885f0bfe32357c8b6d1558415 Mon Sep 17 00:00:00 2001
+From: Jianqun Xu <jay.xu@rock-chips.com>
+Date: Mon, 9 Jan 2023 16:57:56 +0100
+Subject: [PATCH 097/383] arm64: dts: rockchip: Add rk3588 pinctrl data
+
+This adds the pin controller data for rk3588 and rk3588s.
+
+Co-Developed-by: Shengfei Xu <xsf@rock-chips.com>
+Signed-off-by: Shengfei Xu <xsf@rock-chips.com>
+Co-Developed-by: Damon Ding <damon.ding@rock-chips.com>
+Signed-off-by: Damon Ding <damon.ding@rock-chips.com>
+Co-Developed-by: Steven Liu <steven.liu@rock-chips.com>
+Signed-off-by: Steven Liu <steven.liu@rock-chips.com>
+Co-Developed-by: Jon Lin <jon.lin@rock-chips.com>
+Signed-off-by: Jon Lin <jon.lin@rock-chips.com>
+Co-Developed-by: Finley Xiao <finley.xiao@rock-chips.com>
+Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
+Signed-off-by: Jianqun Xu <jay.xu@rock-chips.com>
+[port from vendor tree merging all fixes]
+Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Acked-by: Jagan Teki <jagan@edgeble.ai>
+Tested-by: Jagan Teki <jagan@edgeble.ai> # edgeble-neu6a
+Link: https://lore.kernel.org/r/20230109155801.51642-3-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588-pinctrl.dtsi     |  516 +++
+ .../boot/dts/rockchip/rk3588s-pinctrl.dtsi    | 3403 +++++++++++++++++
+ 2 files changed, 3919 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588-pinctrl.dtsi
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588s-pinctrl.dtsi
+
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588-pinctrl.dtsi
+@@ -0,0 +1,516 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ */
++
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rockchip-pinconf.dtsi"
++
++/*
++ * This file is auto generated by pin2dts tool, please keep these code
++ * by adding changes at end of this file.
++ */
++&pinctrl {
++	clk32k {
++		/omit-if-no-ref/
++		clk32k_out1: clk32k-out1 {
++			rockchip,pins =
++				/* clk32k_out1 */
++				<2 RK_PC5 1 &pcfg_pull_none>;
++		};
++
++	};
++
++	eth0 {
++		/omit-if-no-ref/
++		eth0_pins: eth0-pins {
++			rockchip,pins =
++				/* eth0_refclko_25m */
++				<2 RK_PC3 1 &pcfg_pull_none>;
++		};
++
++	};
++
++	fspi {
++		/omit-if-no-ref/
++		fspim1_pins: fspim1-pins {
++			rockchip,pins =
++				/* fspi_clk_m1 */
++				<2 RK_PB3 3 &pcfg_pull_up_drv_level_2>,
++				/* fspi_cs0n_m1 */
++				<2 RK_PB4 3 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d0_m1 */
++				<2 RK_PA6 3 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d1_m1 */
++				<2 RK_PA7 3 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d2_m1 */
++				<2 RK_PB0 3 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d3_m1 */
++				<2 RK_PB1 3 &pcfg_pull_up_drv_level_2>;
++		};
++
++		/omit-if-no-ref/
++		fspim1_cs1: fspim1-cs1 {
++			rockchip,pins =
++				/* fspi_cs1n_m1 */
++				<2 RK_PB5 3 &pcfg_pull_up_drv_level_2>;
++		};
++	};
++
++	gmac0 {
++		/omit-if-no-ref/
++		gmac0_miim: gmac0-miim {
++			rockchip,pins =
++				/* gmac0_mdc */
++				<4 RK_PC4 1 &pcfg_pull_none>,
++				/* gmac0_mdio */
++				<4 RK_PC5 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac0_clkinout: gmac0-clkinout {
++			rockchip,pins =
++				/* gmac0_mclkinout */
++				<4 RK_PC3 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac0_rx_bus2: gmac0-rx-bus2 {
++			rockchip,pins =
++				/* gmac0_rxd0 */
++				<2 RK_PC1 1 &pcfg_pull_none>,
++				/* gmac0_rxd1 */
++				<2 RK_PC2 1 &pcfg_pull_none>,
++				/* gmac0_rxdv_crs */
++				<4 RK_PC2 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac0_tx_bus2: gmac0-tx-bus2 {
++			rockchip,pins =
++				/* gmac0_txd0 */
++				<2 RK_PB6 1 &pcfg_pull_none>,
++				/* gmac0_txd1 */
++				<2 RK_PB7 1 &pcfg_pull_none>,
++				/* gmac0_txen */
++				<2 RK_PC0 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac0_rgmii_clk: gmac0-rgmii-clk {
++			rockchip,pins =
++				/* gmac0_rxclk */
++				<2 RK_PB0 1 &pcfg_pull_none>,
++				/* gmac0_txclk */
++				<2 RK_PB3 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac0_rgmii_bus: gmac0-rgmii-bus {
++			rockchip,pins =
++				/* gmac0_rxd2 */
++				<2 RK_PA6 1 &pcfg_pull_none>,
++				/* gmac0_rxd3 */
++				<2 RK_PA7 1 &pcfg_pull_none>,
++				/* gmac0_txd2 */
++				<2 RK_PB1 1 &pcfg_pull_none>,
++				/* gmac0_txd3 */
++				<2 RK_PB2 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac0_ppsclk: gmac0-ppsclk {
++			rockchip,pins =
++				/* gmac0_ppsclk */
++				<2 RK_PC4 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac0_ppstring: gmac0-ppstring {
++			rockchip,pins =
++				/* gmac0_ppstring */
++				<2 RK_PB5 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac0_ptp_refclk: gmac0-ptp-refclk {
++			rockchip,pins =
++				/* gmac0_ptp_refclk */
++				<2 RK_PB4 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac0_txer: gmac0-txer {
++			rockchip,pins =
++				/* gmac0_txer */
++				<4 RK_PC6 1 &pcfg_pull_none>;
++		};
++
++	};
++
++	hdmi {
++		/omit-if-no-ref/
++		hdmim0_tx1_cec: hdmim0-tx1-cec {
++			rockchip,pins =
++				/* hdmim0_tx1_cec */
++				<2 RK_PC4 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim0_tx1_scl: hdmim0-tx1-scl {
++			rockchip,pins =
++				/* hdmim0_tx1_scl */
++				<2 RK_PB5 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim0_tx1_sda: hdmim0-tx1-sda {
++			rockchip,pins =
++				/* hdmim0_tx1_sda */
++				<2 RK_PB4 4 &pcfg_pull_none>;
++		};
++	};
++
++	i2c0 {
++		/omit-if-no-ref/
++		i2c0m1_xfer: i2c0m1-xfer {
++			rockchip,pins =
++				/* i2c0_scl_m1 */
++				<4 RK_PC5 9 &pcfg_pull_none_smt>,
++				/* i2c0_sda_m1 */
++				<4 RK_PC6 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c2 {
++		/omit-if-no-ref/
++		i2c2m1_xfer: i2c2m1-xfer {
++			rockchip,pins =
++				/* i2c2_scl_m1 */
++				<2 RK_PC1 9 &pcfg_pull_none_smt>,
++				/* i2c2_sda_m1 */
++				<2 RK_PC0 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c3 {
++		/omit-if-no-ref/
++		i2c3m3_xfer: i2c3m3-xfer {
++			rockchip,pins =
++				/* i2c3_scl_m3 */
++				<2 RK_PB2 9 &pcfg_pull_none_smt>,
++				/* i2c3_sda_m3 */
++				<2 RK_PB3 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c4 {
++		/omit-if-no-ref/
++		i2c4m1_xfer: i2c4m1-xfer {
++			rockchip,pins =
++				/* i2c4_scl_m1 */
++				<2 RK_PB5 9 &pcfg_pull_none_smt>,
++				/* i2c4_sda_m1 */
++				<2 RK_PB4 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c5 {
++		/omit-if-no-ref/
++		i2c5m4_xfer: i2c5m4-xfer {
++			rockchip,pins =
++				/* i2c5_scl_m4 */
++				<2 RK_PB6 9 &pcfg_pull_none_smt>,
++				/* i2c5_sda_m4 */
++				<2 RK_PB7 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c6 {
++		/omit-if-no-ref/
++		i2c6m2_xfer: i2c6m2-xfer {
++			rockchip,pins =
++				/* i2c6_scl_m2 */
++				<2 RK_PC3 9 &pcfg_pull_none_smt>,
++				/* i2c6_sda_m2 */
++				<2 RK_PC2 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c7 {
++		/omit-if-no-ref/
++		i2c7m1_xfer: i2c7m1-xfer {
++			rockchip,pins =
++				/* i2c7_scl_m1 */
++				<4 RK_PC3 9 &pcfg_pull_none_smt>,
++				/* i2c7_sda_m1 */
++				<4 RK_PC4 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c8 {
++		/omit-if-no-ref/
++		i2c8m1_xfer: i2c8m1-xfer {
++			rockchip,pins =
++				/* i2c8_scl_m1 */
++				<2 RK_PB0 9 &pcfg_pull_none_smt>,
++				/* i2c8_sda_m1 */
++				<2 RK_PB1 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2s2 {
++		/omit-if-no-ref/
++		i2s2m0_lrck: i2s2m0-lrck {
++			rockchip,pins =
++				/* i2s2m0_lrck */
++				<2 RK_PC0 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m0_mclk: i2s2m0-mclk {
++			rockchip,pins =
++				/* i2s2m0_mclk */
++				<2 RK_PB6 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m0_sclk: i2s2m0-sclk {
++			rockchip,pins =
++				/* i2s2m0_sclk */
++				<2 RK_PB7 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m0_sdi: i2s2m0-sdi {
++			rockchip,pins =
++				/* i2s2m0_sdi */
++				<2 RK_PC3 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m0_sdo: i2s2m0-sdo {
++			rockchip,pins =
++				/* i2s2m0_sdo */
++				<4 RK_PC3 2 &pcfg_pull_none>;
++		};
++	};
++
++	pwm2 {
++		/omit-if-no-ref/
++		pwm2m2_pins: pwm2m2-pins {
++			rockchip,pins =
++				/* pwm2_m2 */
++				<4 RK_PC2 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm4 {
++		/omit-if-no-ref/
++		pwm4m1_pins: pwm4m1-pins {
++			rockchip,pins =
++				/* pwm4_m1 */
++				<4 RK_PC3 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm5 {
++		/omit-if-no-ref/
++		pwm5m2_pins: pwm5m2-pins {
++			rockchip,pins =
++				/* pwm5_m2 */
++				<4 RK_PC4 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm6 {
++		/omit-if-no-ref/
++		pwm6m2_pins: pwm6m2-pins {
++			rockchip,pins =
++				/* pwm6_m2 */
++				<4 RK_PC5 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm7 {
++		/omit-if-no-ref/
++		pwm7m3_pins: pwm7m3-pins {
++			rockchip,pins =
++				/* pwm7_ir_m3 */
++				<4 RK_PC6 11 &pcfg_pull_none>;
++		};
++	};
++
++	sdio {
++		/omit-if-no-ref/
++		sdiom0_pins: sdiom0-pins {
++			rockchip,pins =
++				/* sdio_clk_m0 */
++				<2 RK_PB3 2 &pcfg_pull_none>,
++				/* sdio_cmd_m0 */
++				<2 RK_PB2 2 &pcfg_pull_none>,
++				/* sdio_d0_m0 */
++				<2 RK_PA6 2 &pcfg_pull_none>,
++				/* sdio_d1_m0 */
++				<2 RK_PA7 2 &pcfg_pull_none>,
++				/* sdio_d2_m0 */
++				<2 RK_PB0 2 &pcfg_pull_none>,
++				/* sdio_d3_m0 */
++				<2 RK_PB1 2 &pcfg_pull_none>;
++		};
++	};
++
++	spi1 {
++		/omit-if-no-ref/
++		spi1m0_pins: spi1m0-pins {
++			rockchip,pins =
++				/* spi1_clk_m0 */
++				<2 RK_PC0 8 &pcfg_pull_up_drv_level_1>,
++				/* spi1_miso_m0 */
++				<2 RK_PC1 8 &pcfg_pull_up_drv_level_1>,
++				/* spi1_mosi_m0 */
++				<2 RK_PC2 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi1m0_cs0: spi1m0-cs0 {
++			rockchip,pins =
++				/* spi1_cs0_m0 */
++				<2 RK_PC3 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi1m0_cs1: spi1m0-cs1 {
++			rockchip,pins =
++				/* spi1_cs1_m0 */
++				<2 RK_PC4 8 &pcfg_pull_up_drv_level_1>;
++		};
++	};
++
++	spi3 {
++		/omit-if-no-ref/
++		spi3m0_pins: spi3m0-pins {
++			rockchip,pins =
++				/* spi3_clk_m0 */
++				<4 RK_PC6 8 &pcfg_pull_up_drv_level_1>,
++				/* spi3_miso_m0 */
++				<4 RK_PC4 8 &pcfg_pull_up_drv_level_1>,
++				/* spi3_mosi_m0 */
++				<4 RK_PC5 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi3m0_cs0: spi3m0-cs0 {
++			rockchip,pins =
++				/* spi3_cs0_m0 */
++				<4 RK_PC2 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi3m0_cs1: spi3m0-cs1 {
++			rockchip,pins =
++				/* spi3_cs1_m0 */
++				<4 RK_PC3 8 &pcfg_pull_up_drv_level_1>;
++		};
++	};
++
++	uart1 {
++		/omit-if-no-ref/
++		uart1m0_xfer: uart1m0-xfer {
++			rockchip,pins =
++				/* uart1_rx_m0 */
++				<2 RK_PB6 10 &pcfg_pull_up>,
++				/* uart1_tx_m0 */
++				<2 RK_PB7 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart1m0_ctsn: uart1m0-ctsn {
++			rockchip,pins =
++				/* uart1m0_ctsn */
++				<2 RK_PC1 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart1m0_rtsn: uart1m0-rtsn {
++			rockchip,pins =
++				/* uart1m0_rtsn */
++				<2 RK_PC0 10 &pcfg_pull_none>;
++		};
++	};
++
++	uart6 {
++		/omit-if-no-ref/
++		uart6m0_xfer: uart6m0-xfer {
++			rockchip,pins =
++				/* uart6_rx_m0 */
++				<2 RK_PA6 10 &pcfg_pull_up>,
++				/* uart6_tx_m0 */
++				<2 RK_PA7 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart6m0_ctsn: uart6m0-ctsn {
++			rockchip,pins =
++				/* uart6m0_ctsn */
++				<2 RK_PB1 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart6m0_rtsn: uart6m0-rtsn {
++			rockchip,pins =
++				/* uart6m0_rtsn */
++				<2 RK_PB0 10 &pcfg_pull_none>;
++		};
++	};
++
++	uart7 {
++		/omit-if-no-ref/
++		uart7m0_xfer: uart7m0-xfer {
++			rockchip,pins =
++				/* uart7_rx_m0 */
++				<2 RK_PB4 10 &pcfg_pull_up>,
++				/* uart7_tx_m0 */
++				<2 RK_PB5 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart7m0_ctsn: uart7m0-ctsn {
++			rockchip,pins =
++				/* uart7m0_ctsn */
++				<4 RK_PC6 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart7m0_rtsn: uart7m0-rtsn {
++			rockchip,pins =
++				/* uart7m0_rtsn */
++				<4 RK_PC2 10 &pcfg_pull_none>;
++		};
++	};
++
++	uart9 {
++		/omit-if-no-ref/
++		uart9m0_xfer: uart9m0-xfer {
++			rockchip,pins =
++				/* uart9_rx_m0 */
++				<2 RK_PC4 10 &pcfg_pull_up>,
++				/* uart9_tx_m0 */
++				<2 RK_PC2 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart9m0_ctsn: uart9m0-ctsn {
++			rockchip,pins =
++				/* uart9m0_ctsn */
++				<4 RK_PC5 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart9m0_rtsn: uart9m0-rtsn {
++			rockchip,pins =
++				/* uart9m0_rtsn */
++				<4 RK_PC4 10 &pcfg_pull_none>;
++		};
++	};
++};
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-pinctrl.dtsi
+@@ -0,0 +1,3403 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ */
++
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rockchip-pinconf.dtsi"
++
++/*
++ * This file is auto generated by pin2dts tool, please keep these code
++ * by adding changes at end of this file.
++ */
++&pinctrl {
++	auddsm {
++		/omit-if-no-ref/
++		auddsm_pins: auddsm-pins {
++			rockchip,pins =
++				/* auddsm_ln */
++				<3 RK_PA1 4 &pcfg_pull_none>,
++				/* auddsm_lp */
++				<3 RK_PA2 4 &pcfg_pull_none>,
++				/* auddsm_rn */
++				<3 RK_PA3 4 &pcfg_pull_none>,
++				/* auddsm_rp */
++				<3 RK_PA4 4 &pcfg_pull_none>;
++		};
++	};
++
++	bt1120 {
++		/omit-if-no-ref/
++		bt1120_pins: bt1120-pins {
++			rockchip,pins =
++				/* bt1120_clkout */
++				<4 RK_PB0 2 &pcfg_pull_none>,
++				/* bt1120_d0 */
++				<4 RK_PA0 2 &pcfg_pull_none>,
++				/* bt1120_d1 */
++				<4 RK_PA1 2 &pcfg_pull_none>,
++				/* bt1120_d2 */
++				<4 RK_PA2 2 &pcfg_pull_none>,
++				/* bt1120_d3 */
++				<4 RK_PA3 2 &pcfg_pull_none>,
++				/* bt1120_d4 */
++				<4 RK_PA4 2 &pcfg_pull_none>,
++				/* bt1120_d5 */
++				<4 RK_PA5 2 &pcfg_pull_none>,
++				/* bt1120_d6 */
++				<4 RK_PA6 2 &pcfg_pull_none>,
++				/* bt1120_d7 */
++				<4 RK_PA7 2 &pcfg_pull_none>,
++				/* bt1120_d8 */
++				<4 RK_PB2 2 &pcfg_pull_none>,
++				/* bt1120_d9 */
++				<4 RK_PB3 2 &pcfg_pull_none>,
++				/* bt1120_d10 */
++				<4 RK_PB4 2 &pcfg_pull_none>,
++				/* bt1120_d11 */
++				<4 RK_PB5 2 &pcfg_pull_none>,
++				/* bt1120_d12 */
++				<4 RK_PB6 2 &pcfg_pull_none>,
++				/* bt1120_d13 */
++				<4 RK_PB7 2 &pcfg_pull_none>,
++				/* bt1120_d14 */
++				<4 RK_PC0 2 &pcfg_pull_none>,
++				/* bt1120_d15 */
++				<4 RK_PC1 2 &pcfg_pull_none>;
++		};
++	};
++
++	can0 {
++		/omit-if-no-ref/
++		can0m0_pins: can0m0-pins {
++			rockchip,pins =
++				/* can0_rx_m0 */
++				<0 RK_PC0 11 &pcfg_pull_none>,
++				/* can0_tx_m0 */
++				<0 RK_PB7 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		can0m1_pins: can0m1-pins {
++			rockchip,pins =
++				/* can0_rx_m1 */
++				<4 RK_PD5 9 &pcfg_pull_none>,
++				/* can0_tx_m1 */
++				<4 RK_PD4 9 &pcfg_pull_none>;
++		};
++	};
++
++	can1 {
++		/omit-if-no-ref/
++		can1m0_pins: can1m0-pins {
++			rockchip,pins =
++				/* can1_rx_m0 */
++				<3 RK_PB5 9 &pcfg_pull_none>,
++				/* can1_tx_m0 */
++				<3 RK_PB6 9 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		can1m1_pins: can1m1-pins {
++			rockchip,pins =
++				/* can1_rx_m1 */
++				<4 RK_PB2 12 &pcfg_pull_none>,
++				/* can1_tx_m1 */
++				<4 RK_PB3 12 &pcfg_pull_none>;
++		};
++	};
++
++	can2 {
++		/omit-if-no-ref/
++		can2m0_pins: can2m0-pins {
++			rockchip,pins =
++				/* can2_rx_m0 */
++				<3 RK_PC4 9 &pcfg_pull_none>,
++				/* can2_tx_m0 */
++				<3 RK_PC5 9 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		can2m1_pins: can2m1-pins {
++			rockchip,pins =
++				/* can2_rx_m1 */
++				<0 RK_PD4 10 &pcfg_pull_none>,
++				/* can2_tx_m1 */
++				<0 RK_PD5 10 &pcfg_pull_none>;
++		};
++	};
++
++	cif {
++		/omit-if-no-ref/
++		cif_clk: cif-clk {
++			rockchip,pins =
++				/* cif_clkout */
++				<4 RK_PB4 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		cif_dvp_clk: cif-dvp-clk {
++			rockchip,pins =
++				/* cif_clkin */
++				<4 RK_PB0 1 &pcfg_pull_none>,
++				/* cif_href */
++				<4 RK_PB2 1 &pcfg_pull_none>,
++				/* cif_vsync */
++				<4 RK_PB3 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		cif_dvp_bus16: cif-dvp-bus16 {
++			rockchip,pins =
++				/* cif_d8 */
++				<3 RK_PC4 1 &pcfg_pull_none>,
++				/* cif_d9 */
++				<3 RK_PC5 1 &pcfg_pull_none>,
++				/* cif_d10 */
++				<3 RK_PC6 1 &pcfg_pull_none>,
++				/* cif_d11 */
++				<3 RK_PC7 1 &pcfg_pull_none>,
++				/* cif_d12 */
++				<3 RK_PD0 1 &pcfg_pull_none>,
++				/* cif_d13 */
++				<3 RK_PD1 1 &pcfg_pull_none>,
++				/* cif_d14 */
++				<3 RK_PD2 1 &pcfg_pull_none>,
++				/* cif_d15 */
++				<3 RK_PD3 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		cif_dvp_bus8: cif-dvp-bus8 {
++			rockchip,pins =
++				/* cif_d0 */
++				<4 RK_PA0 1 &pcfg_pull_none>,
++				/* cif_d1 */
++				<4 RK_PA1 1 &pcfg_pull_none>,
++				/* cif_d2 */
++				<4 RK_PA2 1 &pcfg_pull_none>,
++				/* cif_d3 */
++				<4 RK_PA3 1 &pcfg_pull_none>,
++				/* cif_d4 */
++				<4 RK_PA4 1 &pcfg_pull_none>,
++				/* cif_d5 */
++				<4 RK_PA5 1 &pcfg_pull_none>,
++				/* cif_d6 */
++				<4 RK_PA6 1 &pcfg_pull_none>,
++				/* cif_d7 */
++				<4 RK_PA7 1 &pcfg_pull_none>;
++		};
++	};
++
++	clk32k {
++		/omit-if-no-ref/
++		clk32k_in: clk32k-in {
++			rockchip,pins =
++				/* clk32k_in */
++				<0 RK_PB2 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		clk32k_out0: clk32k-out0 {
++			rockchip,pins =
++				/* clk32k_out0 */
++				<0 RK_PB2 2 &pcfg_pull_none>;
++		};
++	};
++
++	cpu {
++		/omit-if-no-ref/
++		cpu_pins: cpu-pins {
++			rockchip,pins =
++				/* cpu_big0_avs */
++				<0 RK_PD1 2 &pcfg_pull_none>,
++				/* cpu_big1_avs */
++				<0 RK_PD5 2 &pcfg_pull_none>;
++		};
++	};
++
++	ddrphych0 {
++		/omit-if-no-ref/
++		ddrphych0_pins: ddrphych0-pins {
++			rockchip,pins =
++				/* ddrphych0_dtb0 */
++				<4 RK_PA0 7 &pcfg_pull_none>,
++				/* ddrphych0_dtb1 */
++				<4 RK_PA1 7 &pcfg_pull_none>,
++				/* ddrphych0_dtb2 */
++				<4 RK_PA2 7 &pcfg_pull_none>,
++				/* ddrphych0_dtb3 */
++				<4 RK_PA3 7 &pcfg_pull_none>;
++		};
++	};
++
++	ddrphych1 {
++		/omit-if-no-ref/
++		ddrphych1_pins: ddrphych1-pins {
++			rockchip,pins =
++				/* ddrphych1_dtb0 */
++				<4 RK_PA4 7 &pcfg_pull_none>,
++				/* ddrphych1_dtb1 */
++				<4 RK_PA5 7 &pcfg_pull_none>,
++				/* ddrphych1_dtb2 */
++				<4 RK_PA6 7 &pcfg_pull_none>,
++				/* ddrphych1_dtb3 */
++				<4 RK_PA7 7 &pcfg_pull_none>;
++		};
++	};
++
++	ddrphych2 {
++		/omit-if-no-ref/
++		ddrphych2_pins: ddrphych2-pins {
++			rockchip,pins =
++				/* ddrphych2_dtb0 */
++				<4 RK_PB0 7 &pcfg_pull_none>,
++				/* ddrphych2_dtb1 */
++				<4 RK_PB1 7 &pcfg_pull_none>,
++				/* ddrphych2_dtb2 */
++				<4 RK_PB2 7 &pcfg_pull_none>,
++				/* ddrphych2_dtb3 */
++				<4 RK_PB3 7 &pcfg_pull_none>;
++		};
++	};
++
++	ddrphych3 {
++		/omit-if-no-ref/
++		ddrphych3_pins: ddrphych3-pins {
++			rockchip,pins =
++				/* ddrphych3_dtb0 */
++				<4 RK_PB4 7 &pcfg_pull_none>,
++				/* ddrphych3_dtb1 */
++				<4 RK_PB5 7 &pcfg_pull_none>,
++				/* ddrphych3_dtb2 */
++				<4 RK_PB6 7 &pcfg_pull_none>,
++				/* ddrphych3_dtb3 */
++				<4 RK_PB7 7 &pcfg_pull_none>;
++		};
++	};
++
++	dp0 {
++		/omit-if-no-ref/
++		dp0m0_pins: dp0m0-pins {
++			rockchip,pins =
++				/* dp0_hpdin_m0 */
++				<4 RK_PB4 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		dp0m1_pins: dp0m1-pins {
++			rockchip,pins =
++				/* dp0_hpdin_m1 */
++				<0 RK_PC4 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		dp0m2_pins: dp0m2-pins {
++			rockchip,pins =
++				/* dp0_hpdin_m2 */
++				<1 RK_PA0 5 &pcfg_pull_none>;
++		};
++	};
++
++	dp1 {
++		/omit-if-no-ref/
++		dp1m0_pins: dp1m0-pins {
++			rockchip,pins =
++				/* dp1_hpdin_m0 */
++				<3 RK_PD5 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		dp1m1_pins: dp1m1-pins {
++			rockchip,pins =
++				/* dp1_hpdin_m1 */
++				<0 RK_PC5 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		dp1m2_pins: dp1m2-pins {
++			rockchip,pins =
++				/* dp1_hpdin_m2 */
++				<1 RK_PA1 5 &pcfg_pull_none>;
++		};
++	};
++
++	emmc {
++		/omit-if-no-ref/
++		emmc_rstnout: emmc-rstnout {
++			rockchip,pins =
++				/* emmc_rstn */
++				<2 RK_PA3 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		emmc_bus8: emmc-bus8 {
++			rockchip,pins =
++				/* emmc_d0 */
++				<2 RK_PD0 1 &pcfg_pull_up_drv_level_2>,
++				/* emmc_d1 */
++				<2 RK_PD1 1 &pcfg_pull_up_drv_level_2>,
++				/* emmc_d2 */
++				<2 RK_PD2 1 &pcfg_pull_up_drv_level_2>,
++				/* emmc_d3 */
++				<2 RK_PD3 1 &pcfg_pull_up_drv_level_2>,
++				/* emmc_d4 */
++				<2 RK_PD4 1 &pcfg_pull_up_drv_level_2>,
++				/* emmc_d5 */
++				<2 RK_PD5 1 &pcfg_pull_up_drv_level_2>,
++				/* emmc_d6 */
++				<2 RK_PD6 1 &pcfg_pull_up_drv_level_2>,
++				/* emmc_d7 */
++				<2 RK_PD7 1 &pcfg_pull_up_drv_level_2>;
++		};
++
++		/omit-if-no-ref/
++		emmc_clk: emmc-clk {
++			rockchip,pins =
++				/* emmc_clkout */
++				<2 RK_PA1 1 &pcfg_pull_up_drv_level_2>;
++		};
++
++		/omit-if-no-ref/
++		emmc_cmd: emmc-cmd {
++			rockchip,pins =
++				/* emmc_cmd */
++				<2 RK_PA0 1 &pcfg_pull_up_drv_level_2>;
++		};
++
++		/omit-if-no-ref/
++		emmc_data_strobe: emmc-data-strobe {
++			rockchip,pins =
++				/* emmc_data_strobe */
++				<2 RK_PA2 1 &pcfg_pull_none>;
++		};
++	};
++
++	eth1 {
++		/omit-if-no-ref/
++		eth1_pins: eth1-pins {
++			rockchip,pins =
++				/* eth1_refclko_25m */
++				<3 RK_PA6 1 &pcfg_pull_none>;
++		};
++	};
++
++	fspi {
++		/omit-if-no-ref/
++		fspim0_pins: fspim0-pins {
++			rockchip,pins =
++				/* fspi_clk_m0 */
++				<2 RK_PA0 2 &pcfg_pull_up_drv_level_2>,
++				/* fspi_cs0n_m0 */
++				<2 RK_PD6 2 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d0_m0 */
++				<2 RK_PD0 2 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d1_m0 */
++				<2 RK_PD1 2 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d2_m0 */
++				<2 RK_PD2 2 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d3_m0 */
++				<2 RK_PD3 2 &pcfg_pull_up_drv_level_2>;
++		};
++
++		/omit-if-no-ref/
++		fspim0_cs1: fspim0-cs1 {
++			rockchip,pins =
++				/* fspi_cs1n_m0 */
++				<2 RK_PD7 2 &pcfg_pull_up_drv_level_2>;
++		};
++
++		/omit-if-no-ref/
++		fspim2_pins: fspim2-pins {
++			rockchip,pins =
++				/* fspi_clk_m2 */
++				<3 RK_PA5 5 &pcfg_pull_up_drv_level_2>,
++				/* fspi_cs0n_m2 */
++				<3 RK_PC4 2 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d0_m2 */
++				<3 RK_PA0 5 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d1_m2 */
++				<3 RK_PA1 5 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d2_m2 */
++				<3 RK_PA2 5 &pcfg_pull_up_drv_level_2>,
++				/* fspi_d3_m2 */
++				<3 RK_PA3 5 &pcfg_pull_up_drv_level_2>;
++		};
++
++		/omit-if-no-ref/
++		fspim2_cs1: fspim2-cs1 {
++			rockchip,pins =
++				/* fspi_cs1n_m2 */
++				<3 RK_PC5 2 &pcfg_pull_up_drv_level_2>;
++		};
++	};
++
++	gmac1 {
++		/omit-if-no-ref/
++		gmac1_miim: gmac1-miim {
++			rockchip,pins =
++				/* gmac1_mdc */
++				<3 RK_PC2 1 &pcfg_pull_none>,
++				/* gmac1_mdio */
++				<3 RK_PC3 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac1_clkinout: gmac1-clkinout {
++			rockchip,pins =
++				/* gmac1_mclkinout */
++				<3 RK_PB6 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac1_rx_bus2: gmac1-rx-bus2 {
++			rockchip,pins =
++				/* gmac1_rxd0 */
++				<3 RK_PA7 1 &pcfg_pull_none>,
++				/* gmac1_rxd1 */
++				<3 RK_PB0 1 &pcfg_pull_none>,
++				/* gmac1_rxdv_crs */
++				<3 RK_PB1 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac1_tx_bus2: gmac1-tx-bus2 {
++			rockchip,pins =
++				/* gmac1_txd0 */
++				<3 RK_PB3 1 &pcfg_pull_none>,
++				/* gmac1_txd1 */
++				<3 RK_PB4 1 &pcfg_pull_none>,
++				/* gmac1_txen */
++				<3 RK_PB5 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac1_rgmii_clk: gmac1-rgmii-clk {
++			rockchip,pins =
++				/* gmac1_rxclk */
++				<3 RK_PA5 1 &pcfg_pull_none>,
++				/* gmac1_txclk */
++				<3 RK_PA4 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac1_rgmii_bus: gmac1-rgmii-bus {
++			rockchip,pins =
++				/* gmac1_rxd2 */
++				<3 RK_PA2 1 &pcfg_pull_none>,
++				/* gmac1_rxd3 */
++				<3 RK_PA3 1 &pcfg_pull_none>,
++				/* gmac1_txd2 */
++				<3 RK_PA0 1 &pcfg_pull_none>,
++				/* gmac1_txd3 */
++				<3 RK_PA1 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac1_ppsclk: gmac1-ppsclk {
++			rockchip,pins =
++				/* gmac1_ppsclk */
++				<3 RK_PC1 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac1_ppstrig: gmac1-ppstrig {
++			rockchip,pins =
++				/* gmac1_ppstrig */
++				<3 RK_PC0 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac1_ptp_ref_clk: gmac1-ptp-ref-clk {
++			rockchip,pins =
++				/* gmac1_ptp_ref_clk */
++				<3 RK_PB7 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		gmac1_txer: gmac1-txer {
++			rockchip,pins =
++				/* gmac1_txer */
++				<3 RK_PB2 1 &pcfg_pull_none>;
++		};
++	};
++
++	gpu {
++		/omit-if-no-ref/
++		gpu_pins: gpu-pins {
++			rockchip,pins =
++				/* gpu_avs */
++				<0 RK_PC5 2 &pcfg_pull_none>;
++		};
++	};
++
++	hdmi {
++		/omit-if-no-ref/
++		hdmim0_rx_cec: hdmim0-rx-cec {
++			rockchip,pins =
++				/* hdmim0_rx_cec */
++				<4 RK_PB5 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim0_rx_hpdin: hdmim0-rx-hpdin {
++			rockchip,pins =
++				/* hdmim0_rx_hpdin */
++				<4 RK_PB6 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim0_rx_scl: hdmim0-rx-scl {
++			rockchip,pins =
++				/* hdmim0_rx_scl */
++				<0 RK_PD2 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim0_rx_sda: hdmim0-rx-sda {
++			rockchip,pins =
++				/* hdmim0_rx_sda */
++				<0 RK_PD1 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim0_tx0_cec: hdmim0-tx0-cec {
++			rockchip,pins =
++				/* hdmim0_tx0_cec */
++				<4 RK_PC1 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim0_tx0_hpd: hdmim0-tx0-hpd {
++			rockchip,pins =
++				/* hdmim0_tx0_hpd */
++				<1 RK_PA5 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim0_tx0_scl: hdmim0-tx0-scl {
++			rockchip,pins =
++				/* hdmim0_tx0_scl */
++				<4 RK_PB7 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim0_tx0_sda: hdmim0-tx0-sda {
++			rockchip,pins =
++				/* hdmim0_tx0_sda */
++				<4 RK_PC0 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim0_tx1_hpd: hdmim0-tx1-hpd {
++			rockchip,pins =
++				/* hdmim0_tx1_hpd */
++				<1 RK_PA6 5 &pcfg_pull_none>;
++		};
++		/omit-if-no-ref/
++		hdmim1_rx_cec: hdmim1-rx-cec {
++			rockchip,pins =
++				/* hdmim1_rx_cec */
++				<3 RK_PD1 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim1_rx_hpdin: hdmim1-rx-hpdin {
++			rockchip,pins =
++				/* hdmim1_rx_hpdin */
++				<3 RK_PD4 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim1_rx_scl: hdmim1-rx-scl {
++			rockchip,pins =
++				/* hdmim1_rx_scl */
++				<3 RK_PD2 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim1_rx_sda: hdmim1-rx-sda {
++			rockchip,pins =
++				/* hdmim1_rx_sda */
++				<3 RK_PD3 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim1_tx0_cec: hdmim1-tx0-cec {
++			rockchip,pins =
++				/* hdmim1_tx0_cec */
++				<0 RK_PD1 13 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim1_tx0_hpd: hdmim1-tx0-hpd {
++			rockchip,pins =
++				/* hdmim1_tx0_hpd */
++				<3 RK_PD4 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim1_tx0_scl: hdmim1-tx0-scl {
++			rockchip,pins =
++				/* hdmim1_tx0_scl */
++				<0 RK_PD5 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim1_tx0_sda: hdmim1-tx0-sda {
++			rockchip,pins =
++				/* hdmim1_tx0_sda */
++				<0 RK_PD4 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim1_tx1_cec: hdmim1-tx1-cec {
++			rockchip,pins =
++				/* hdmim1_tx1_cec */
++				<0 RK_PD2 13 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim1_tx1_hpd: hdmim1-tx1-hpd {
++			rockchip,pins =
++				/* hdmim1_tx1_hpd */
++				<3 RK_PB7 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim1_tx1_scl: hdmim1-tx1-scl {
++			rockchip,pins =
++				/* hdmim1_tx1_scl */
++				<3 RK_PC6 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim1_tx1_sda: hdmim1-tx1-sda {
++			rockchip,pins =
++				/* hdmim1_tx1_sda */
++				<3 RK_PC5 5 &pcfg_pull_none>;
++		};
++		/omit-if-no-ref/
++		hdmim2_rx_cec: hdmim2-rx-cec {
++			rockchip,pins =
++				/* hdmim2_rx_cec */
++				<1 RK_PB7 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim2_rx_hpdin: hdmim2-rx-hpdin {
++			rockchip,pins =
++				/* hdmim2_rx_hpdin */
++				<1 RK_PB6 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim2_rx_scl: hdmim2-rx-scl {
++			rockchip,pins =
++				/* hdmim2_rx_scl */
++				<1 RK_PD6 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim2_rx_sda: hdmim2-rx-sda {
++			rockchip,pins =
++				/* hdmim2_rx_sda */
++				<1 RK_PD7 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim2_tx0_scl: hdmim2-tx0-scl {
++			rockchip,pins =
++				/* hdmim2_tx0_scl */
++				<3 RK_PC7 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim2_tx0_sda: hdmim2-tx0-sda {
++			rockchip,pins =
++				/* hdmim2_tx0_sda */
++				<3 RK_PD0 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim2_tx1_cec: hdmim2-tx1-cec {
++			rockchip,pins =
++				/* hdmim2_tx1_cec */
++				<3 RK_PC4 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim2_tx1_scl: hdmim2-tx1-scl {
++			rockchip,pins =
++				/* hdmim2_tx1_scl */
++				<1 RK_PA4 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmim2_tx1_sda: hdmim2-tx1-sda {
++			rockchip,pins =
++				/* hdmim2_tx1_sda */
++				<1 RK_PA3 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmi_debug0: hdmi-debug0 {
++			rockchip,pins =
++				/* hdmi_debug0 */
++				<1 RK_PA7 7 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmi_debug1: hdmi-debug1 {
++			rockchip,pins =
++				/* hdmi_debug1 */
++				<1 RK_PB0 7 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmi_debug2: hdmi-debug2 {
++			rockchip,pins =
++				/* hdmi_debug2 */
++				<1 RK_PB1 7 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmi_debug3: hdmi-debug3 {
++			rockchip,pins =
++				/* hdmi_debug3 */
++				<1 RK_PB2 7 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmi_debug4: hdmi-debug4 {
++			rockchip,pins =
++				/* hdmi_debug4 */
++				<1 RK_PB3 7 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmi_debug5: hdmi-debug5 {
++			rockchip,pins =
++				/* hdmi_debug5 */
++				<1 RK_PB4 7 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		hdmi_debug6: hdmi-debug6 {
++			rockchip,pins =
++				/* hdmi_debug6 */
++				<1 RK_PA0 7 &pcfg_pull_none>;
++		};
++	};
++
++	i2c0 {
++		/omit-if-no-ref/
++		i2c0m0_xfer: i2c0m0-xfer {
++			rockchip,pins =
++				/* i2c0_scl_m0 */
++				<0 RK_PB3 2 &pcfg_pull_none_smt>,
++				/* i2c0_sda_m0 */
++				<0 RK_PA6 2 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c0m2_xfer: i2c0m2-xfer {
++			rockchip,pins =
++				/* i2c0_scl_m2 */
++				<0 RK_PD1 3 &pcfg_pull_none_smt>,
++				/* i2c0_sda_m2 */
++				<0 RK_PD2 3 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c1 {
++		/omit-if-no-ref/
++		i2c1m0_xfer: i2c1m0-xfer {
++			rockchip,pins =
++				/* i2c1_scl_m0 */
++				<0 RK_PB5 9 &pcfg_pull_none_smt>,
++				/* i2c1_sda_m0 */
++				<0 RK_PB6 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c1m1_xfer: i2c1m1-xfer {
++			rockchip,pins =
++				/* i2c1_scl_m1 */
++				<0 RK_PB0 2 &pcfg_pull_none_smt>,
++				/* i2c1_sda_m1 */
++				<0 RK_PB1 2 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c1m2_xfer: i2c1m2-xfer {
++			rockchip,pins =
++				/* i2c1_scl_m2 */
++				<0 RK_PD4 9 &pcfg_pull_none_smt>,
++				/* i2c1_sda_m2 */
++				<0 RK_PD5 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c1m3_xfer: i2c1m3-xfer {
++			rockchip,pins =
++				/* i2c1_scl_m3 */
++				<2 RK_PD4 9 &pcfg_pull_none_smt>,
++				/* i2c1_sda_m3 */
++				<2 RK_PD5 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c1m4_xfer: i2c1m4-xfer {
++			rockchip,pins =
++				/* i2c1_scl_m4 */
++				<1 RK_PD2 9 &pcfg_pull_none_smt>,
++				/* i2c1_sda_m4 */
++				<1 RK_PD3 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c2 {
++		/omit-if-no-ref/
++		i2c2m0_xfer: i2c2m0-xfer {
++			rockchip,pins =
++				/* i2c2_scl_m0 */
++				<0 RK_PB7 9 &pcfg_pull_none_smt>,
++				/* i2c2_sda_m0 */
++				<0 RK_PC0 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c2m2_xfer: i2c2m2-xfer {
++			rockchip,pins =
++				/* i2c2_scl_m2 */
++				<2 RK_PA3 9 &pcfg_pull_none_smt>,
++				/* i2c2_sda_m2 */
++				<2 RK_PA2 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c2m3_xfer: i2c2m3-xfer {
++			rockchip,pins =
++				/* i2c2_scl_m3 */
++				<1 RK_PC5 9 &pcfg_pull_none_smt>,
++				/* i2c2_sda_m3 */
++				<1 RK_PC4 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c2m4_xfer: i2c2m4-xfer {
++			rockchip,pins =
++				/* i2c2_scl_m4 */
++				<1 RK_PA1 9 &pcfg_pull_none_smt>,
++				/* i2c2_sda_m4 */
++				<1 RK_PA0 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c3 {
++		/omit-if-no-ref/
++		i2c3m0_xfer: i2c3m0-xfer {
++			rockchip,pins =
++				/* i2c3_scl_m0 */
++				<1 RK_PC1 9 &pcfg_pull_none_smt>,
++				/* i2c3_sda_m0 */
++				<1 RK_PC0 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c3m1_xfer: i2c3m1-xfer {
++			rockchip,pins =
++				/* i2c3_scl_m1 */
++				<3 RK_PB7 9 &pcfg_pull_none_smt>,
++				/* i2c3_sda_m1 */
++				<3 RK_PC0 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c3m2_xfer: i2c3m2-xfer {
++			rockchip,pins =
++				/* i2c3_scl_m2 */
++				<4 RK_PA4 9 &pcfg_pull_none_smt>,
++				/* i2c3_sda_m2 */
++				<4 RK_PA5 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c3m4_xfer: i2c3m4-xfer {
++			rockchip,pins =
++				/* i2c3_scl_m4 */
++				<4 RK_PD0 9 &pcfg_pull_none_smt>,
++				/* i2c3_sda_m4 */
++				<4 RK_PD1 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c4 {
++		/omit-if-no-ref/
++		i2c4m0_xfer: i2c4m0-xfer {
++			rockchip,pins =
++				/* i2c4_scl_m0 */
++				<3 RK_PA6 9 &pcfg_pull_none_smt>,
++				/* i2c4_sda_m0 */
++				<3 RK_PA5 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c4m2_xfer: i2c4m2-xfer {
++			rockchip,pins =
++				/* i2c4_scl_m2 */
++				<0 RK_PC5 9 &pcfg_pull_none_smt>,
++				/* i2c4_sda_m2 */
++				<0 RK_PC4 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c4m3_xfer: i2c4m3-xfer {
++			rockchip,pins =
++				/* i2c4_scl_m3 */
++				<1 RK_PA3 9 &pcfg_pull_none_smt>,
++				/* i2c4_sda_m3 */
++				<1 RK_PA2 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c4m4_xfer: i2c4m4-xfer {
++			rockchip,pins =
++				/* i2c4_scl_m4 */
++				<1 RK_PC7 9 &pcfg_pull_none_smt>,
++				/* i2c4_sda_m4 */
++				<1 RK_PC6 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c5 {
++		/omit-if-no-ref/
++		i2c5m0_xfer: i2c5m0-xfer {
++			rockchip,pins =
++				/* i2c5_scl_m0 */
++				<3 RK_PC7 9 &pcfg_pull_none_smt>,
++				/* i2c5_sda_m0 */
++				<3 RK_PD0 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c5m1_xfer: i2c5m1-xfer {
++			rockchip,pins =
++				/* i2c5_scl_m1 */
++				<4 RK_PB6 9 &pcfg_pull_none_smt>,
++				/* i2c5_sda_m1 */
++				<4 RK_PB7 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c5m2_xfer: i2c5m2-xfer {
++			rockchip,pins =
++				/* i2c5_scl_m2 */
++				<4 RK_PA6 9 &pcfg_pull_none_smt>,
++				/* i2c5_sda_m2 */
++				<4 RK_PA7 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c5m3_xfer: i2c5m3-xfer {
++			rockchip,pins =
++				/* i2c5_scl_m3 */
++				<1 RK_PB6 9 &pcfg_pull_none_smt>,
++				/* i2c5_sda_m3 */
++				<1 RK_PB7 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c6 {
++		/omit-if-no-ref/
++		i2c6m0_xfer: i2c6m0-xfer {
++			rockchip,pins =
++				/* i2c6_scl_m0 */
++				<0 RK_PD0 9 &pcfg_pull_none_smt>,
++				/* i2c6_sda_m0 */
++				<0 RK_PC7 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c6m1_xfer: i2c6m1-xfer {
++			rockchip,pins =
++				/* i2c6_scl_m1 */
++				<1 RK_PC3 9 &pcfg_pull_none_smt>,
++				/* i2c6_sda_m1 */
++				<1 RK_PC2 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c6m3_xfer: i2c6m3-xfer {
++			rockchip,pins =
++				/* i2c6_scl_m3 */
++				<4 RK_PB1 9 &pcfg_pull_none_smt>,
++				/* i2c6_sda_m3 */
++				<4 RK_PB0 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c6m4_xfer: i2c6m4-xfer {
++			rockchip,pins =
++				/* i2c6_scl_m4 */
++				<3 RK_PA1 9 &pcfg_pull_none_smt>,
++				/* i2c6_sda_m4 */
++				<3 RK_PA0 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c7 {
++		/omit-if-no-ref/
++		i2c7m0_xfer: i2c7m0-xfer {
++			rockchip,pins =
++				/* i2c7_scl_m0 */
++				<1 RK_PD0 9 &pcfg_pull_none_smt>,
++				/* i2c7_sda_m0 */
++				<1 RK_PD1 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c7m2_xfer: i2c7m2-xfer {
++			rockchip,pins =
++				/* i2c7_scl_m2 */
++				<3 RK_PD2 9 &pcfg_pull_none_smt>,
++				/* i2c7_sda_m2 */
++				<3 RK_PD3 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c7m3_xfer: i2c7m3-xfer {
++			rockchip,pins =
++				/* i2c7_scl_m3 */
++				<4 RK_PB2 9 &pcfg_pull_none_smt>,
++				/* i2c7_sda_m3 */
++				<4 RK_PB3 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2c8 {
++		/omit-if-no-ref/
++		i2c8m0_xfer: i2c8m0-xfer {
++			rockchip,pins =
++				/* i2c8_scl_m0 */
++				<4 RK_PD2 9 &pcfg_pull_none_smt>,
++				/* i2c8_sda_m0 */
++				<4 RK_PD3 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c8m2_xfer: i2c8m2-xfer {
++			rockchip,pins =
++				/* i2c8_scl_m2 */
++				<1 RK_PD6 9 &pcfg_pull_none_smt>,
++				/* i2c8_sda_m2 */
++				<1 RK_PD7 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c8m3_xfer: i2c8m3-xfer {
++			rockchip,pins =
++				/* i2c8_scl_m3 */
++				<4 RK_PC0 9 &pcfg_pull_none_smt>,
++				/* i2c8_sda_m3 */
++				<4 RK_PC1 9 &pcfg_pull_none_smt>;
++		};
++
++		/omit-if-no-ref/
++		i2c8m4_xfer: i2c8m4-xfer {
++			rockchip,pins =
++				/* i2c8_scl_m4 */
++				<3 RK_PC2 9 &pcfg_pull_none_smt>,
++				/* i2c8_sda_m4 */
++				<3 RK_PC3 9 &pcfg_pull_none_smt>;
++		};
++	};
++
++	i2s0 {
++		/omit-if-no-ref/
++		i2s0_lrck: i2s0-lrck {
++			rockchip,pins =
++				/* i2s0_lrck */
++				<1 RK_PC5 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s0_mclk: i2s0-mclk {
++			rockchip,pins =
++				/* i2s0_mclk */
++				<1 RK_PC2 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s0_sclk: i2s0-sclk {
++			rockchip,pins =
++				/* i2s0_sclk */
++				<1 RK_PC3 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s0_sdi0: i2s0-sdi0 {
++			rockchip,pins =
++				/* i2s0_sdi0 */
++				<1 RK_PD4 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s0_sdi1: i2s0-sdi1 {
++			rockchip,pins =
++				/* i2s0_sdi1 */
++				<1 RK_PD3 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s0_sdi2: i2s0-sdi2 {
++			rockchip,pins =
++				/* i2s0_sdi2 */
++				<1 RK_PD2 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s0_sdi3: i2s0-sdi3 {
++			rockchip,pins =
++				/* i2s0_sdi3 */
++				<1 RK_PD1 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s0_sdo0: i2s0-sdo0 {
++			rockchip,pins =
++				/* i2s0_sdo0 */
++				<1 RK_PC7 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s0_sdo1: i2s0-sdo1 {
++			rockchip,pins =
++				/* i2s0_sdo1 */
++				<1 RK_PD0 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s0_sdo2: i2s0-sdo2 {
++			rockchip,pins =
++				/* i2s0_sdo2 */
++				<1 RK_PD1 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s0_sdo3: i2s0-sdo3 {
++			rockchip,pins =
++				/* i2s0_sdo3 */
++				<1 RK_PD2 1 &pcfg_pull_none>;
++		};
++	};
++
++	i2s1 {
++		/omit-if-no-ref/
++		i2s1m0_lrck: i2s1m0-lrck {
++			rockchip,pins =
++				/* i2s1m0_lrck */
++				<4 RK_PA2 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m0_mclk: i2s1m0-mclk {
++			rockchip,pins =
++				/* i2s1m0_mclk */
++				<4 RK_PA0 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m0_sclk: i2s1m0-sclk {
++			rockchip,pins =
++				/* i2s1m0_sclk */
++				<4 RK_PA1 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m0_sdi0: i2s1m0-sdi0 {
++			rockchip,pins =
++				/* i2s1m0_sdi0 */
++				<4 RK_PA5 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m0_sdi1: i2s1m0-sdi1 {
++			rockchip,pins =
++				/* i2s1m0_sdi1 */
++				<4 RK_PA6 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m0_sdi2: i2s1m0-sdi2 {
++			rockchip,pins =
++				/* i2s1m0_sdi2 */
++				<4 RK_PA7 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m0_sdi3: i2s1m0-sdi3 {
++			rockchip,pins =
++				/* i2s1m0_sdi3 */
++				<4 RK_PB0 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m0_sdo0: i2s1m0-sdo0 {
++			rockchip,pins =
++				/* i2s1m0_sdo0 */
++				<4 RK_PB1 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m0_sdo1: i2s1m0-sdo1 {
++			rockchip,pins =
++				/* i2s1m0_sdo1 */
++				<4 RK_PB2 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m0_sdo2: i2s1m0-sdo2 {
++			rockchip,pins =
++				/* i2s1m0_sdo2 */
++				<4 RK_PB3 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m0_sdo3: i2s1m0-sdo3 {
++			rockchip,pins =
++				/* i2s1m0_sdo3 */
++				<4 RK_PB4 3 &pcfg_pull_none>;
++		};
++		/omit-if-no-ref/
++		i2s1m1_lrck: i2s1m1-lrck {
++			rockchip,pins =
++				/* i2s1m1_lrck */
++				<0 RK_PB7 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m1_mclk: i2s1m1-mclk {
++			rockchip,pins =
++				/* i2s1m1_mclk */
++				<0 RK_PB5 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m1_sclk: i2s1m1-sclk {
++			rockchip,pins =
++				/* i2s1m1_sclk */
++				<0 RK_PB6 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m1_sdi0: i2s1m1-sdi0 {
++			rockchip,pins =
++				/* i2s1m1_sdi0 */
++				<0 RK_PC5 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m1_sdi1: i2s1m1-sdi1 {
++			rockchip,pins =
++				/* i2s1m1_sdi1 */
++				<0 RK_PC6 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m1_sdi2: i2s1m1-sdi2 {
++			rockchip,pins =
++				/* i2s1m1_sdi2 */
++				<0 RK_PC7 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m1_sdi3: i2s1m1-sdi3 {
++			rockchip,pins =
++				/* i2s1m1_sdi3 */
++				<0 RK_PD0 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m1_sdo0: i2s1m1-sdo0 {
++			rockchip,pins =
++				/* i2s1m1_sdo0 */
++				<0 RK_PD1 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m1_sdo1: i2s1m1-sdo1 {
++			rockchip,pins =
++				/* i2s1m1_sdo1 */
++				<0 RK_PD2 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m1_sdo2: i2s1m1-sdo2 {
++			rockchip,pins =
++				/* i2s1m1_sdo2 */
++				<0 RK_PD4 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s1m1_sdo3: i2s1m1-sdo3 {
++			rockchip,pins =
++				/* i2s1m1_sdo3 */
++				<0 RK_PD5 1 &pcfg_pull_none>;
++		};
++	};
++
++	i2s2 {
++		/omit-if-no-ref/
++		i2s2m1_lrck: i2s2m1-lrck {
++			rockchip,pins =
++				/* i2s2m1_lrck */
++				<3 RK_PB6 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m1_mclk: i2s2m1-mclk {
++			rockchip,pins =
++				/* i2s2m1_mclk */
++				<3 RK_PB4 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m1_sclk: i2s2m1-sclk {
++			rockchip,pins =
++				/* i2s2m1_sclk */
++				<3 RK_PB5 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m1_sdi: i2s2m1-sdi {
++			rockchip,pins =
++				/* i2s2m1_sdi */
++				<3 RK_PB2 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m1_sdo: i2s2m1-sdo {
++			rockchip,pins =
++				/* i2s2m1_sdo */
++				<3 RK_PB3 3 &pcfg_pull_none>;
++		};
++	};
++
++	i2s3 {
++		/omit-if-no-ref/
++		i2s3_lrck: i2s3-lrck {
++			rockchip,pins =
++				/* i2s3_lrck */
++				<3 RK_PA2 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s3_mclk: i2s3-mclk {
++			rockchip,pins =
++				/* i2s3_mclk */
++				<3 RK_PA0 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s3_sclk: i2s3-sclk {
++			rockchip,pins =
++				/* i2s3_sclk */
++				<3 RK_PA1 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s3_sdi: i2s3-sdi {
++			rockchip,pins =
++				/* i2s3_sdi */
++				<3 RK_PA4 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s3_sdo: i2s3-sdo {
++			rockchip,pins =
++				/* i2s3_sdo */
++				<3 RK_PA3 3 &pcfg_pull_none>;
++		};
++	};
++
++	jtag {
++		/omit-if-no-ref/
++		jtagm0_pins: jtagm0-pins {
++			rockchip,pins =
++				/* jtag_tck_m0 */
++				<4 RK_PD2 5 &pcfg_pull_none>,
++				/* jtag_tms_m0 */
++				<4 RK_PD3 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		jtagm1_pins: jtagm1-pins {
++			rockchip,pins =
++				/* jtag_tck_m1 */
++				<4 RK_PD0 5 &pcfg_pull_none>,
++				/* jtag_tms_m1 */
++				<4 RK_PD1 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		jtagm2_pins: jtagm2-pins {
++			rockchip,pins =
++				/* jtag_tck_m2 */
++				<0 RK_PB5 2 &pcfg_pull_none>,
++				/* jtag_tms_m2 */
++				<0 RK_PB6 2 &pcfg_pull_none>;
++		};
++	};
++
++	litcpu {
++		/omit-if-no-ref/
++		litcpu_pins: litcpu-pins {
++			rockchip,pins =
++				/* litcpu_avs */
++				<0 RK_PD3 1 &pcfg_pull_none>;
++		};
++	};
++
++	mcu {
++		/omit-if-no-ref/
++		mcum0_pins: mcum0-pins {
++			rockchip,pins =
++				/* mcu_jtag_tck_m0 */
++				<4 RK_PD4 5 &pcfg_pull_none>,
++				/* mcu_jtag_tms_m0 */
++				<4 RK_PD5 5 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mcum1_pins: mcum1-pins {
++			rockchip,pins =
++				/* mcu_jtag_tck_m1 */
++				<3 RK_PD4 6 &pcfg_pull_none>,
++				/* mcu_jtag_tms_m1 */
++				<3 RK_PD5 6 &pcfg_pull_none>;
++		};
++	};
++
++	mipi {
++		/omit-if-no-ref/
++		mipim0_camera0_clk: mipim0-camera0-clk {
++			rockchip,pins =
++				/* mipim0_camera0_clk */
++				<4 RK_PB1 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mipim0_camera1_clk: mipim0-camera1-clk {
++			rockchip,pins =
++				/* mipim0_camera1_clk */
++				<1 RK_PB6 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mipim0_camera2_clk: mipim0-camera2-clk {
++			rockchip,pins =
++				/* mipim0_camera2_clk */
++				<1 RK_PB7 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mipim0_camera3_clk: mipim0-camera3-clk {
++			rockchip,pins =
++				/* mipim0_camera3_clk */
++				<1 RK_PD6 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mipim0_camera4_clk: mipim0-camera4-clk {
++			rockchip,pins =
++				/* mipim0_camera4_clk */
++				<1 RK_PD7 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mipim1_camera0_clk: mipim1-camera0-clk {
++			rockchip,pins =
++				/* mipim1_camera0_clk */
++				<3 RK_PA5 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mipim1_camera1_clk: mipim1-camera1-clk {
++			rockchip,pins =
++				/* mipim1_camera1_clk */
++				<3 RK_PA6 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mipim1_camera2_clk: mipim1-camera2-clk {
++			rockchip,pins =
++				/* mipim1_camera2_clk */
++				<3 RK_PA7 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mipim1_camera3_clk: mipim1-camera3-clk {
++			rockchip,pins =
++				/* mipim1_camera3_clk */
++				<3 RK_PB0 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mipim1_camera4_clk: mipim1-camera4-clk {
++			rockchip,pins =
++				/* mipim1_camera4_clk */
++				<3 RK_PB1 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mipi_te0: mipi-te0 {
++			rockchip,pins =
++				/* mipi_te0 */
++				<3 RK_PC2 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		mipi_te1: mipi-te1 {
++			rockchip,pins =
++				/* mipi_te1 */
++				<3 RK_PC3 2 &pcfg_pull_none>;
++		};
++	};
++
++	npu {
++		/omit-if-no-ref/
++		npu_pins: npu-pins {
++			rockchip,pins =
++				/* npu_avs */
++				<0 RK_PC6 2 &pcfg_pull_none>;
++		};
++	};
++
++	pcie20x1 {
++		/omit-if-no-ref/
++		pcie20x1m0_pins: pcie20x1m0-pins {
++			rockchip,pins =
++				/* pcie20x1_2_clkreqn_m0 */
++				<3 RK_PC7 4 &pcfg_pull_none>,
++				/* pcie20x1_2_perstn_m0 */
++				<3 RK_PD1 4 &pcfg_pull_none>,
++				/* pcie20x1_2_waken_m0 */
++				<3 RK_PD0 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie20x1m1_pins: pcie20x1m1-pins {
++			rockchip,pins =
++				/* pcie20x1_2_clkreqn_m1 */
++				<4 RK_PB7 4 &pcfg_pull_none>,
++				/* pcie20x1_2_perstn_m1 */
++				<4 RK_PC1 4 &pcfg_pull_none>,
++				/* pcie20x1_2_waken_m1 */
++				<4 RK_PC0 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie20x1_2_button_rstn: pcie20x1-2-button-rstn {
++			rockchip,pins =
++				/* pcie20x1_2_button_rstn */
++				<4 RK_PB3 4 &pcfg_pull_none>;
++		};
++	};
++
++	pcie30phy {
++		/omit-if-no-ref/
++		pcie30phy_pins: pcie30phy-pins {
++			rockchip,pins =
++				/* pcie30phy_dtb0 */
++				<1 RK_PC4 4 &pcfg_pull_none>,
++				/* pcie30phy_dtb1 */
++				<1 RK_PD1 4 &pcfg_pull_none>;
++		};
++	};
++
++	pcie30x1 {
++		/omit-if-no-ref/
++		pcie30x1m0_pins: pcie30x1m0-pins {
++			rockchip,pins =
++				/* pcie30x1_0_clkreqn_m0 */
++				<0 RK_PC0 12 &pcfg_pull_none>,
++				/* pcie30x1_0_perstn_m0 */
++				<0 RK_PC5 12 &pcfg_pull_none>,
++				/* pcie30x1_0_waken_m0 */
++				<0 RK_PC4 12 &pcfg_pull_none>,
++				/* pcie30x1_1_clkreqn_m0 */
++				<0 RK_PB5 12 &pcfg_pull_none>,
++				/* pcie30x1_1_perstn_m0 */
++				<0 RK_PB7 12 &pcfg_pull_none>,
++				/* pcie30x1_1_waken_m0 */
++				<0 RK_PB6 12 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x1m1_pins: pcie30x1m1-pins {
++			rockchip,pins =
++				/* pcie30x1_0_clkreqn_m1 */
++				<4 RK_PA3 4 &pcfg_pull_none>,
++				/* pcie30x1_0_perstn_m1 */
++				<4 RK_PA5 4 &pcfg_pull_none>,
++				/* pcie30x1_0_waken_m1 */
++				<4 RK_PA4 4 &pcfg_pull_none>,
++				/* pcie30x1_1_clkreqn_m1 */
++				<4 RK_PA0 4 &pcfg_pull_none>,
++				/* pcie30x1_1_perstn_m1 */
++				<4 RK_PA2 4 &pcfg_pull_none>,
++				/* pcie30x1_1_waken_m1 */
++				<4 RK_PA1 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x1m2_pins: pcie30x1m2-pins {
++			rockchip,pins =
++				/* pcie30x1_0_clkreqn_m2 */
++				<1 RK_PB5 4 &pcfg_pull_none>,
++				/* pcie30x1_0_perstn_m2 */
++				<1 RK_PB4 4 &pcfg_pull_none>,
++				/* pcie30x1_0_waken_m2 */
++				<1 RK_PB3 4 &pcfg_pull_none>,
++				/* pcie30x1_1_clkreqn_m2 */
++				<1 RK_PA0 4 &pcfg_pull_none>,
++				/* pcie30x1_1_perstn_m2 */
++				<1 RK_PA7 4 &pcfg_pull_none>,
++				/* pcie30x1_1_waken_m2 */
++				<1 RK_PA1 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x1_0_button_rstn: pcie30x1-0-button-rstn {
++			rockchip,pins =
++				/* pcie30x1_0_button_rstn */
++				<4 RK_PB1 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x1_1_button_rstn: pcie30x1-1-button-rstn {
++			rockchip,pins =
++				/* pcie30x1_1_button_rstn */
++				<4 RK_PB2 4 &pcfg_pull_none>;
++		};
++	};
++
++	pcie30x2 {
++		/omit-if-no-ref/
++		pcie30x2m0_pins: pcie30x2m0-pins {
++			rockchip,pins =
++				/* pcie30x2_clkreqn_m0 */
++				<0 RK_PD1 12 &pcfg_pull_none>,
++				/* pcie30x2_perstn_m0 */
++				<0 RK_PD4 12 &pcfg_pull_none>,
++				/* pcie30x2_waken_m0 */
++				<0 RK_PD2 12 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x2m1_pins: pcie30x2m1-pins {
++			rockchip,pins =
++				/* pcie30x2_clkreqn_m1 */
++				<4 RK_PA6 4 &pcfg_pull_none>,
++				/* pcie30x2_perstn_m1 */
++				<4 RK_PB0 4 &pcfg_pull_none>,
++				/* pcie30x2_waken_m1 */
++				<4 RK_PA7 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x2m2_pins: pcie30x2m2-pins {
++			rockchip,pins =
++				/* pcie30x2_clkreqn_m2 */
++				<3 RK_PD2 4 &pcfg_pull_none>,
++				/* pcie30x2_perstn_m2 */
++				<3 RK_PD4 4 &pcfg_pull_none>,
++				/* pcie30x2_waken_m2 */
++				<3 RK_PD3 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x2m3_pins: pcie30x2m3-pins {
++			rockchip,pins =
++				/* pcie30x2_clkreqn_m3 */
++				<1 RK_PD7 4 &pcfg_pull_none>,
++				/* pcie30x2_perstn_m3 */
++				<1 RK_PB7 4 &pcfg_pull_none>,
++				/* pcie30x2_waken_m3 */
++				<1 RK_PB6 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x2_button_rstn: pcie30x2-button-rstn {
++			rockchip,pins =
++				/* pcie30x2_button_rstn */
++				<3 RK_PC1 4 &pcfg_pull_none>;
++		};
++	};
++
++	pcie30x4 {
++		/omit-if-no-ref/
++		pcie30x4m0_pins: pcie30x4m0-pins {
++			rockchip,pins =
++				/* pcie30x4_clkreqn_m0 */
++				<0 RK_PC6 12 &pcfg_pull_none>,
++				/* pcie30x4_perstn_m0 */
++				<0 RK_PD0 12 &pcfg_pull_none>,
++				/* pcie30x4_waken_m0 */
++				<0 RK_PC7 12 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x4m1_pins: pcie30x4m1-pins {
++			rockchip,pins =
++				/* pcie30x4_clkreqn_m1 */
++				<4 RK_PB4 4 &pcfg_pull_none>,
++				/* pcie30x4_perstn_m1 */
++				<4 RK_PB6 4 &pcfg_pull_none>,
++				/* pcie30x4_waken_m1 */
++				<4 RK_PB5 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x4m2_pins: pcie30x4m2-pins {
++			rockchip,pins =
++				/* pcie30x4_clkreqn_m2 */
++				<3 RK_PC4 4 &pcfg_pull_none>,
++				/* pcie30x4_perstn_m2 */
++				<3 RK_PC6 4 &pcfg_pull_none>,
++				/* pcie30x4_waken_m2 */
++				<3 RK_PC5 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x4m3_pins: pcie30x4m3-pins {
++			rockchip,pins =
++				/* pcie30x4_clkreqn_m3 */
++				<1 RK_PB0 4 &pcfg_pull_none>,
++				/* pcie30x4_perstn_m3 */
++				<1 RK_PB2 4 &pcfg_pull_none>,
++				/* pcie30x4_waken_m3 */
++				<1 RK_PB1 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pcie30x4_button_rstn: pcie30x4-button-rstn {
++			rockchip,pins =
++				/* pcie30x4_button_rstn */
++				<3 RK_PD5 4 &pcfg_pull_none>;
++		};
++	};
++
++	pdm0 {
++		/omit-if-no-ref/
++		pdm0m0_clk: pdm0m0-clk {
++			rockchip,pins =
++				/* pdm0_clk0_m0 */
++				<1 RK_PC6 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm0m0_clk1: pdm0m0-clk1 {
++			rockchip,pins =
++				/* pdm0m0_clk1 */
++				<1 RK_PC4 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm0m0_sdi0: pdm0m0-sdi0 {
++			rockchip,pins =
++				/* pdm0m0_sdi0 */
++				<1 RK_PD5 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm0m0_sdi1: pdm0m0-sdi1 {
++			rockchip,pins =
++				/* pdm0m0_sdi1 */
++				<1 RK_PD1 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm0m0_sdi2: pdm0m0-sdi2 {
++			rockchip,pins =
++				/* pdm0m0_sdi2 */
++				<1 RK_PD2 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm0m0_sdi3: pdm0m0-sdi3 {
++			rockchip,pins =
++				/* pdm0m0_sdi3 */
++				<1 RK_PD3 3 &pcfg_pull_none>;
++		};
++		/omit-if-no-ref/
++		pdm0m1_clk: pdm0m1-clk {
++			rockchip,pins =
++				/* pdm0_clk0_m1 */
++				<0 RK_PC0 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm0m1_clk1: pdm0m1-clk1 {
++			rockchip,pins =
++				/* pdm0m1_clk1 */
++				<0 RK_PC4 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm0m1_sdi0: pdm0m1-sdi0 {
++			rockchip,pins =
++				/* pdm0m1_sdi0 */
++				<0 RK_PC7 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm0m1_sdi1: pdm0m1-sdi1 {
++			rockchip,pins =
++				/* pdm0m1_sdi1 */
++				<0 RK_PD0 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm0m1_sdi2: pdm0m1-sdi2 {
++			rockchip,pins =
++				/* pdm0m1_sdi2 */
++				<0 RK_PD4 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm0m1_sdi3: pdm0m1-sdi3 {
++			rockchip,pins =
++				/* pdm0m1_sdi3 */
++				<0 RK_PD6 2 &pcfg_pull_none>;
++		};
++	};
++
++	pdm1 {
++		/omit-if-no-ref/
++		pdm1m0_clk: pdm1m0-clk {
++			rockchip,pins =
++				/* pdm1_clk0_m0 */
++				<4 RK_PD5 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm1m0_clk1: pdm1m0-clk1 {
++			rockchip,pins =
++				/* pdm1m0_clk1 */
++				<4 RK_PD4 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm1m0_sdi0: pdm1m0-sdi0 {
++			rockchip,pins =
++				/* pdm1m0_sdi0 */
++				<4 RK_PD3 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm1m0_sdi1: pdm1m0-sdi1 {
++			rockchip,pins =
++				/* pdm1m0_sdi1 */
++				<4 RK_PD2 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm1m0_sdi2: pdm1m0-sdi2 {
++			rockchip,pins =
++				/* pdm1m0_sdi2 */
++				<4 RK_PD1 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm1m0_sdi3: pdm1m0-sdi3 {
++			rockchip,pins =
++				/* pdm1m0_sdi3 */
++				<4 RK_PD0 2 &pcfg_pull_none>;
++		};
++		/omit-if-no-ref/
++		pdm1m1_clk: pdm1m1-clk {
++			rockchip,pins =
++				/* pdm1_clk0_m1 */
++				<1 RK_PB4 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm1m1_clk1: pdm1m1-clk1 {
++			rockchip,pins =
++				/* pdm1m1_clk1 */
++				<1 RK_PB3 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm1m1_sdi0: pdm1m1-sdi0 {
++			rockchip,pins =
++				/* pdm1m1_sdi0 */
++				<1 RK_PA7 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm1m1_sdi1: pdm1m1-sdi1 {
++			rockchip,pins =
++				/* pdm1m1_sdi1 */
++				<1 RK_PB0 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm1m1_sdi2: pdm1m1-sdi2 {
++			rockchip,pins =
++				/* pdm1m1_sdi2 */
++				<1 RK_PB1 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pdm1m1_sdi3: pdm1m1-sdi3 {
++			rockchip,pins =
++				/* pdm1m1_sdi3 */
++				<1 RK_PB2 2 &pcfg_pull_none>;
++		};
++	};
++
++	pmic {
++		/omit-if-no-ref/
++		pmic_pins: pmic-pins {
++			rockchip,pins =
++				/* pmic_int_l */
++				<0 RK_PA7 0 &pcfg_pull_up>,
++				/* pmic_sleep1 */
++				<0 RK_PA2 1 &pcfg_pull_none>,
++				/* pmic_sleep2 */
++				<0 RK_PA3 1 &pcfg_pull_none>,
++				/* pmic_sleep3 */
++				<0 RK_PC1 1 &pcfg_pull_none>,
++				/* pmic_sleep4 */
++				<0 RK_PC2 1 &pcfg_pull_none>,
++				/* pmic_sleep5 */
++				<0 RK_PC3 1 &pcfg_pull_none>,
++				/* pmic_sleep6 */
++				<0 RK_PD6 1 &pcfg_pull_none>;
++		};
++	};
++
++	pmu {
++		/omit-if-no-ref/
++		pmu_pins: pmu-pins {
++			rockchip,pins =
++				/* pmu_debug */
++				<0 RK_PA5 3 &pcfg_pull_none>;
++		};
++	};
++
++	pwm0 {
++		/omit-if-no-ref/
++		pwm0m0_pins: pwm0m0-pins {
++			rockchip,pins =
++				/* pwm0_m0 */
++				<0 RK_PB7 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm0m1_pins: pwm0m1-pins {
++			rockchip,pins =
++				/* pwm0_m1 */
++				<1 RK_PD2 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm0m2_pins: pwm0m2-pins {
++			rockchip,pins =
++				/* pwm0_m2 */
++				<1 RK_PA2 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm1 {
++		/omit-if-no-ref/
++		pwm1m0_pins: pwm1m0-pins {
++			rockchip,pins =
++				/* pwm1_m0 */
++				<0 RK_PC0 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm1m1_pins: pwm1m1-pins {
++			rockchip,pins =
++				/* pwm1_m1 */
++				<1 RK_PD3 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm1m2_pins: pwm1m2-pins {
++			rockchip,pins =
++				/* pwm1_m2 */
++				<1 RK_PA3 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm2 {
++		/omit-if-no-ref/
++		pwm2m0_pins: pwm2m0-pins {
++			rockchip,pins =
++				/* pwm2_m0 */
++				<0 RK_PC4 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm2m1_pins: pwm2m1-pins {
++			rockchip,pins =
++				/* pwm2_m1 */
++				<3 RK_PB1 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm3 {
++		/omit-if-no-ref/
++		pwm3m0_pins: pwm3m0-pins {
++			rockchip,pins =
++				/* pwm3_ir_m0 */
++				<0 RK_PD4 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm3m1_pins: pwm3m1-pins {
++			rockchip,pins =
++				/* pwm3_ir_m1 */
++				<3 RK_PB2 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm3m2_pins: pwm3m2-pins {
++			rockchip,pins =
++				/* pwm3_ir_m2 */
++				<1 RK_PC2 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm3m3_pins: pwm3m3-pins {
++			rockchip,pins =
++				/* pwm3_ir_m3 */
++				<1 RK_PA7 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm4 {
++		/omit-if-no-ref/
++		pwm4m0_pins: pwm4m0-pins {
++			rockchip,pins =
++				/* pwm4_m0 */
++				<0 RK_PC5 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm5 {
++		/omit-if-no-ref/
++		pwm5m0_pins: pwm5m0-pins {
++			rockchip,pins =
++				/* pwm5_m0 */
++				<0 RK_PB1 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm5m1_pins: pwm5m1-pins {
++			rockchip,pins =
++				/* pwm5_m1 */
++				<0 RK_PC6 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm6 {
++		/omit-if-no-ref/
++		pwm6m0_pins: pwm6m0-pins {
++			rockchip,pins =
++				/* pwm6_m0 */
++				<0 RK_PC7 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm6m1_pins: pwm6m1-pins {
++			rockchip,pins =
++				/* pwm6_m1 */
++				<4 RK_PC1 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm7 {
++		/omit-if-no-ref/
++		pwm7m0_pins: pwm7m0-pins {
++			rockchip,pins =
++				/* pwm7_ir_m0 */
++				<0 RK_PD0 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm7m1_pins: pwm7m1-pins {
++			rockchip,pins =
++				/* pwm7_ir_m1 */
++				<4 RK_PD4 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm7m2_pins: pwm7m2-pins {
++			rockchip,pins =
++				/* pwm7_ir_m2 */
++				<1 RK_PC3 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm8 {
++		/omit-if-no-ref/
++		pwm8m0_pins: pwm8m0-pins {
++			rockchip,pins =
++				/* pwm8_m0 */
++				<3 RK_PA7 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm8m1_pins: pwm8m1-pins {
++			rockchip,pins =
++				/* pwm8_m1 */
++				<4 RK_PD0 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm8m2_pins: pwm8m2-pins {
++			rockchip,pins =
++				/* pwm8_m2 */
++				<3 RK_PD0 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm9 {
++		/omit-if-no-ref/
++		pwm9m0_pins: pwm9m0-pins {
++			rockchip,pins =
++				/* pwm9_m0 */
++				<3 RK_PB0 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm9m1_pins: pwm9m1-pins {
++			rockchip,pins =
++				/* pwm9_m1 */
++				<4 RK_PD1 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm9m2_pins: pwm9m2-pins {
++			rockchip,pins =
++				/* pwm9_m2 */
++				<3 RK_PD1 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm10 {
++		/omit-if-no-ref/
++		pwm10m0_pins: pwm10m0-pins {
++			rockchip,pins =
++				/* pwm10_m0 */
++				<3 RK_PA0 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm10m1_pins: pwm10m1-pins {
++			rockchip,pins =
++				/* pwm10_m1 */
++				<4 RK_PD3 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm10m2_pins: pwm10m2-pins {
++			rockchip,pins =
++				/* pwm10_m2 */
++				<3 RK_PD3 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm11 {
++		/omit-if-no-ref/
++		pwm11m0_pins: pwm11m0-pins {
++			rockchip,pins =
++				/* pwm11_ir_m0 */
++				<3 RK_PA1 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm11m1_pins: pwm11m1-pins {
++			rockchip,pins =
++				/* pwm11_ir_m1 */
++				<4 RK_PB4 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm11m2_pins: pwm11m2-pins {
++			rockchip,pins =
++				/* pwm11_ir_m2 */
++				<1 RK_PC4 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm11m3_pins: pwm11m3-pins {
++			rockchip,pins =
++				/* pwm11_ir_m3 */
++				<3 RK_PD5 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm12 {
++		/omit-if-no-ref/
++		pwm12m0_pins: pwm12m0-pins {
++			rockchip,pins =
++				/* pwm12_m0 */
++				<3 RK_PB5 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm12m1_pins: pwm12m1-pins {
++			rockchip,pins =
++				/* pwm12_m1 */
++				<4 RK_PB5 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm13 {
++		/omit-if-no-ref/
++		pwm13m0_pins: pwm13m0-pins {
++			rockchip,pins =
++				/* pwm13_m0 */
++				<3 RK_PB6 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm13m1_pins: pwm13m1-pins {
++			rockchip,pins =
++				/* pwm13_m1 */
++				<4 RK_PB6 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm13m2_pins: pwm13m2-pins {
++			rockchip,pins =
++				/* pwm13_m2 */
++				<1 RK_PB7 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm14 {
++		/omit-if-no-ref/
++		pwm14m0_pins: pwm14m0-pins {
++			rockchip,pins =
++				/* pwm14_m0 */
++				<3 RK_PC2 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm14m1_pins: pwm14m1-pins {
++			rockchip,pins =
++				/* pwm14_m1 */
++				<4 RK_PB2 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm14m2_pins: pwm14m2-pins {
++			rockchip,pins =
++				/* pwm14_m2 */
++				<1 RK_PD6 11 &pcfg_pull_none>;
++		};
++	};
++
++	pwm15 {
++		/omit-if-no-ref/
++		pwm15m0_pins: pwm15m0-pins {
++			rockchip,pins =
++				/* pwm15_ir_m0 */
++				<3 RK_PC3 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm15m1_pins: pwm15m1-pins {
++			rockchip,pins =
++				/* pwm15_ir_m1 */
++				<4 RK_PB3 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm15m2_pins: pwm15m2-pins {
++			rockchip,pins =
++				/* pwm15_ir_m2 */
++				<1 RK_PC6 11 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		pwm15m3_pins: pwm15m3-pins {
++			rockchip,pins =
++				/* pwm15_ir_m3 */
++				<1 RK_PD7 11 &pcfg_pull_none>;
++		};
++	};
++
++	refclk {
++		/omit-if-no-ref/
++		refclk_pins: refclk-pins {
++			rockchip,pins =
++				/* refclk_out */
++				<0 RK_PA0 1 &pcfg_pull_none>;
++		};
++	};
++
++	sata {
++		/omit-if-no-ref/
++		sata_pins: sata-pins {
++			rockchip,pins =
++				/* sata_cp_pod */
++				<0 RK_PC6 13 &pcfg_pull_none>,
++				/* sata_cpdet */
++				<0 RK_PD4 13 &pcfg_pull_none>,
++				/* sata_mp_switch */
++				<0 RK_PD5 13 &pcfg_pull_none>;
++		};
++	};
++
++	sata0 {
++		/omit-if-no-ref/
++		sata0m0_pins: sata0m0-pins {
++			rockchip,pins =
++				/* sata0_act_led_m0 */
++				<4 RK_PB6 6 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		sata0m1_pins: sata0m1-pins {
++			rockchip,pins =
++				/* sata0_act_led_m1 */
++				<1 RK_PB3 6 &pcfg_pull_none>;
++		};
++	};
++
++	sata1 {
++		/omit-if-no-ref/
++		sata1m0_pins: sata1m0-pins {
++			rockchip,pins =
++				/* sata1_act_led_m0 */
++				<4 RK_PB5 6 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		sata1m1_pins: sata1m1-pins {
++			rockchip,pins =
++				/* sata1_act_led_m1 */
++				<1 RK_PA1 6 &pcfg_pull_none>;
++		};
++	};
++
++	sata2 {
++		/omit-if-no-ref/
++		sata2m0_pins: sata2m0-pins {
++			rockchip,pins =
++				/* sata2_act_led_m0 */
++				<4 RK_PB1 6 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		sata2m1_pins: sata2m1-pins {
++			rockchip,pins =
++				/* sata2_act_led_m1 */
++				<1 RK_PB7 6 &pcfg_pull_none>;
++		};
++	};
++
++	sdio {
++		/omit-if-no-ref/
++		sdiom1_pins: sdiom1-pins {
++			rockchip,pins =
++				/* sdio_clk_m1 */
++				<3 RK_PA5 2 &pcfg_pull_none>,
++				/* sdio_cmd_m1 */
++				<3 RK_PA4 2 &pcfg_pull_none>,
++				/* sdio_d0_m1 */
++				<3 RK_PA0 2 &pcfg_pull_none>,
++				/* sdio_d1_m1 */
++				<3 RK_PA1 2 &pcfg_pull_none>,
++				/* sdio_d2_m1 */
++				<3 RK_PA2 2 &pcfg_pull_none>,
++				/* sdio_d3_m1 */
++				<3 RK_PA3 2 &pcfg_pull_none>;
++		};
++	};
++
++	sdmmc {
++		/omit-if-no-ref/
++		sdmmc_bus4: sdmmc-bus4 {
++			rockchip,pins =
++				/* sdmmc_d0 */
++				<4 RK_PD0 1 &pcfg_pull_up_drv_level_2>,
++				/* sdmmc_d1 */
++				<4 RK_PD1 1 &pcfg_pull_up_drv_level_2>,
++				/* sdmmc_d2 */
++				<4 RK_PD2 1 &pcfg_pull_up_drv_level_2>,
++				/* sdmmc_d3 */
++				<4 RK_PD3 1 &pcfg_pull_up_drv_level_2>;
++		};
++
++		/omit-if-no-ref/
++		sdmmc_clk: sdmmc-clk {
++			rockchip,pins =
++				/* sdmmc_clk */
++				<4 RK_PD5 1 &pcfg_pull_up_drv_level_2>;
++		};
++
++		/omit-if-no-ref/
++		sdmmc_cmd: sdmmc-cmd {
++			rockchip,pins =
++				/* sdmmc_cmd */
++				<4 RK_PD4 1 &pcfg_pull_up_drv_level_2>;
++		};
++
++		/omit-if-no-ref/
++		sdmmc_det: sdmmc-det {
++			rockchip,pins =
++				/* sdmmc_det */
++				<0 RK_PA4 1 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		sdmmc_pwren: sdmmc-pwren {
++			rockchip,pins =
++				/* sdmmc_pwren */
++				<0 RK_PA5 2 &pcfg_pull_none>;
++		};
++	};
++
++	spdif0 {
++		/omit-if-no-ref/
++		spdif0m0_tx: spdif0m0-tx {
++			rockchip,pins =
++				/* spdif0m0_tx */
++				<1 RK_PB6 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		spdif0m1_tx: spdif0m1-tx {
++			rockchip,pins =
++				/* spdif0m1_tx */
++				<4 RK_PB4 6 &pcfg_pull_none>;
++		};
++	};
++
++	spdif1 {
++		/omit-if-no-ref/
++		spdif1m0_tx: spdif1m0-tx {
++			rockchip,pins =
++				/* spdif1m0_tx */
++				<1 RK_PB7 3 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		spdif1m1_tx: spdif1m1-tx {
++			rockchip,pins =
++				/* spdif1m1_tx */
++				<4 RK_PB1 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		spdif1m2_tx: spdif1m2-tx {
++			rockchip,pins =
++				/* spdif1m2_tx */
++				<4 RK_PC1 3 &pcfg_pull_none>;
++		};
++	};
++
++	spi0 {
++		/omit-if-no-ref/
++		spi0m0_pins: spi0m0-pins {
++			rockchip,pins =
++				/* spi0_clk_m0 */
++				<0 RK_PC6 8 &pcfg_pull_up_drv_level_1>,
++				/* spi0_miso_m0 */
++				<0 RK_PC7 8 &pcfg_pull_up_drv_level_1>,
++				/* spi0_mosi_m0 */
++				<0 RK_PC0 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi0m0_cs0: spi0m0-cs0 {
++			rockchip,pins =
++				/* spi0_cs0_m0 */
++				<0 RK_PD1 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi0m0_cs1: spi0m0-cs1 {
++			rockchip,pins =
++				/* spi0_cs1_m0 */
++				<0 RK_PB7 8 &pcfg_pull_up_drv_level_1>;
++		};
++		/omit-if-no-ref/
++		spi0m1_pins: spi0m1-pins {
++			rockchip,pins =
++				/* spi0_clk_m1 */
++				<4 RK_PA2 8 &pcfg_pull_up_drv_level_1>,
++				/* spi0_miso_m1 */
++				<4 RK_PA0 8 &pcfg_pull_up_drv_level_1>,
++				/* spi0_mosi_m1 */
++				<4 RK_PA1 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi0m1_cs0: spi0m1-cs0 {
++			rockchip,pins =
++				/* spi0_cs0_m1 */
++				<4 RK_PB2 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi0m1_cs1: spi0m1-cs1 {
++			rockchip,pins =
++				/* spi0_cs1_m1 */
++				<4 RK_PB1 8 &pcfg_pull_up_drv_level_1>;
++		};
++		/omit-if-no-ref/
++		spi0m2_pins: spi0m2-pins {
++			rockchip,pins =
++				/* spi0_clk_m2 */
++				<1 RK_PB3 8 &pcfg_pull_up_drv_level_1>,
++				/* spi0_miso_m2 */
++				<1 RK_PB1 8 &pcfg_pull_up_drv_level_1>,
++				/* spi0_mosi_m2 */
++				<1 RK_PB2 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi0m2_cs0: spi0m2-cs0 {
++			rockchip,pins =
++				/* spi0_cs0_m2 */
++				<1 RK_PB4 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi0m2_cs1: spi0m2-cs1 {
++			rockchip,pins =
++				/* spi0_cs1_m2 */
++				<1 RK_PB5 8 &pcfg_pull_up_drv_level_1>;
++		};
++		/omit-if-no-ref/
++		spi0m3_pins: spi0m3-pins {
++			rockchip,pins =
++				/* spi0_clk_m3 */
++				<3 RK_PD3 8 &pcfg_pull_up_drv_level_1>,
++				/* spi0_miso_m3 */
++				<3 RK_PD1 8 &pcfg_pull_up_drv_level_1>,
++				/* spi0_mosi_m3 */
++				<3 RK_PD2 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi0m3_cs0: spi0m3-cs0 {
++			rockchip,pins =
++				/* spi0_cs0_m3 */
++				<3 RK_PD4 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi0m3_cs1: spi0m3-cs1 {
++			rockchip,pins =
++				/* spi0_cs1_m3 */
++				<3 RK_PD5 8 &pcfg_pull_up_drv_level_1>;
++		};
++	};
++
++	spi1 {
++		/omit-if-no-ref/
++		spi1m1_pins: spi1m1-pins {
++			rockchip,pins =
++				/* spi1_clk_m1 */
++				<3 RK_PC1 8 &pcfg_pull_up_drv_level_1>,
++				/* spi1_miso_m1 */
++				<3 RK_PC0 8 &pcfg_pull_up_drv_level_1>,
++				/* spi1_mosi_m1 */
++				<3 RK_PB7 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi1m1_cs0: spi1m1-cs0 {
++			rockchip,pins =
++				/* spi1_cs0_m1 */
++				<3 RK_PC2 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi1m1_cs1: spi1m1-cs1 {
++			rockchip,pins =
++				/* spi1_cs1_m1 */
++				<3 RK_PC3 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi1m2_pins: spi1m2-pins {
++			rockchip,pins =
++				/* spi1_clk_m2 */
++				<1 RK_PD2 8 &pcfg_pull_up_drv_level_1>,
++				/* spi1_miso_m2 */
++				<1 RK_PD0 8 &pcfg_pull_up_drv_level_1>,
++				/* spi1_mosi_m2 */
++				<1 RK_PD1 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi1m2_cs0: spi1m2-cs0 {
++			rockchip,pins =
++				/* spi1_cs0_m2 */
++				<1 RK_PD3 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi1m2_cs1: spi1m2-cs1 {
++			rockchip,pins =
++				/* spi1_cs1_m2 */
++				<1 RK_PD5 8 &pcfg_pull_up_drv_level_1>;
++		};
++	};
++
++	spi2 {
++		/omit-if-no-ref/
++		spi2m0_pins: spi2m0-pins {
++			rockchip,pins =
++				/* spi2_clk_m0 */
++				<1 RK_PA6 8 &pcfg_pull_up_drv_level_1>,
++				/* spi2_miso_m0 */
++				<1 RK_PA4 8 &pcfg_pull_up_drv_level_1>,
++				/* spi2_mosi_m0 */
++				<1 RK_PA5 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi2m0_cs0: spi2m0-cs0 {
++			rockchip,pins =
++				/* spi2_cs0_m0 */
++				<1 RK_PA7 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi2m0_cs1: spi2m0-cs1 {
++			rockchip,pins =
++				/* spi2_cs1_m0 */
++				<1 RK_PB0 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi2m1_pins: spi2m1-pins {
++			rockchip,pins =
++				/* spi2_clk_m1 */
++				<4 RK_PA6 8 &pcfg_pull_up_drv_level_1>,
++				/* spi2_miso_m1 */
++				<4 RK_PA4 8 &pcfg_pull_up_drv_level_1>,
++				/* spi2_mosi_m1 */
++				<4 RK_PA5 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi2m1_cs0: spi2m1-cs0 {
++			rockchip,pins =
++				/* spi2_cs0_m1 */
++				<4 RK_PA7 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi2m1_cs1: spi2m1-cs1 {
++			rockchip,pins =
++				/* spi2_cs1_m1 */
++				<4 RK_PB0 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi2m2_pins: spi2m2-pins {
++			rockchip,pins =
++				/* spi2_clk_m2 */
++				<0 RK_PA5 1 &pcfg_pull_up_drv_level_1>,
++				/* spi2_miso_m2 */
++				<0 RK_PB3 1 &pcfg_pull_up_drv_level_1>,
++				/* spi2_mosi_m2 */
++				<0 RK_PA6 1 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi2m2_cs0: spi2m2-cs0 {
++			rockchip,pins =
++				/* spi2_cs0_m2 */
++				<0 RK_PB1 1 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi2m2_cs1: spi2m2-cs1 {
++			rockchip,pins =
++				/* spi2_cs1_m2 */
++				<0 RK_PB0 1 &pcfg_pull_up_drv_level_1>;
++		};
++	};
++
++	spi3 {
++		/omit-if-no-ref/
++		spi3m1_pins: spi3m1-pins {
++			rockchip,pins =
++				/* spi3_clk_m1 */
++				<4 RK_PB7 8 &pcfg_pull_up_drv_level_1>,
++				/* spi3_miso_m1 */
++				<4 RK_PB5 8 &pcfg_pull_up_drv_level_1>,
++				/* spi3_mosi_m1 */
++				<4 RK_PB6 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi3m1_cs0: spi3m1-cs0 {
++			rockchip,pins =
++				/* spi3_cs0_m1 */
++				<4 RK_PC0 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi3m1_cs1: spi3m1-cs1 {
++			rockchip,pins =
++				/* spi3_cs1_m1 */
++				<4 RK_PC1 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi3m2_pins: spi3m2-pins {
++			rockchip,pins =
++				/* spi3_clk_m2 */
++				<0 RK_PD3 8 &pcfg_pull_up_drv_level_1>,
++				/* spi3_miso_m2 */
++				<0 RK_PD0 8 &pcfg_pull_up_drv_level_1>,
++				/* spi3_mosi_m2 */
++				<0 RK_PD2 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi3m2_cs0: spi3m2-cs0 {
++			rockchip,pins =
++				/* spi3_cs0_m2 */
++				<0 RK_PD4 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi3m2_cs1: spi3m2-cs1 {
++			rockchip,pins =
++				/* spi3_cs1_m2 */
++				<0 RK_PD5 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi3m3_pins: spi3m3-pins {
++			rockchip,pins =
++				/* spi3_clk_m3 */
++				<3 RK_PD0 8 &pcfg_pull_up_drv_level_1>,
++				/* spi3_miso_m3 */
++				<3 RK_PC6 8 &pcfg_pull_up_drv_level_1>,
++				/* spi3_mosi_m3 */
++				<3 RK_PC7 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi3m3_cs0: spi3m3-cs0 {
++			rockchip,pins =
++				/* spi3_cs0_m3 */
++				<3 RK_PC4 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi3m3_cs1: spi3m3-cs1 {
++			rockchip,pins =
++				/* spi3_cs1_m3 */
++				<3 RK_PC5 8 &pcfg_pull_up_drv_level_1>;
++		};
++	};
++
++	spi4 {
++		/omit-if-no-ref/
++		spi4m0_pins: spi4m0-pins {
++			rockchip,pins =
++				/* spi4_clk_m0 */
++				<1 RK_PC2 8 &pcfg_pull_up_drv_level_1>,
++				/* spi4_miso_m0 */
++				<1 RK_PC0 8 &pcfg_pull_up_drv_level_1>,
++				/* spi4_mosi_m0 */
++				<1 RK_PC1 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi4m0_cs0: spi4m0-cs0 {
++			rockchip,pins =
++				/* spi4_cs0_m0 */
++				<1 RK_PC3 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi4m0_cs1: spi4m0-cs1 {
++			rockchip,pins =
++				/* spi4_cs1_m0 */
++				<1 RK_PC4 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi4m1_pins: spi4m1-pins {
++			rockchip,pins =
++				/* spi4_clk_m1 */
++				<3 RK_PA2 8 &pcfg_pull_up_drv_level_1>,
++				/* spi4_miso_m1 */
++				<3 RK_PA0 8 &pcfg_pull_up_drv_level_1>,
++				/* spi4_mosi_m1 */
++				<3 RK_PA1 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi4m1_cs0: spi4m1-cs0 {
++			rockchip,pins =
++				/* spi4_cs0_m1 */
++				<3 RK_PA3 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi4m1_cs1: spi4m1-cs1 {
++			rockchip,pins =
++				/* spi4_cs1_m1 */
++				<3 RK_PA4 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi4m2_pins: spi4m2-pins {
++			rockchip,pins =
++				/* spi4_clk_m2 */
++				<1 RK_PA2 8 &pcfg_pull_up_drv_level_1>,
++				/* spi4_miso_m2 */
++				<1 RK_PA0 8 &pcfg_pull_up_drv_level_1>,
++				/* spi4_mosi_m2 */
++				<1 RK_PA1 8 &pcfg_pull_up_drv_level_1>;
++		};
++
++		/omit-if-no-ref/
++		spi4m2_cs0: spi4m2-cs0 {
++			rockchip,pins =
++				/* spi4_cs0_m2 */
++				<1 RK_PA3 8 &pcfg_pull_up_drv_level_1>;
++		};
++	};
++
++	tsadc {
++		/omit-if-no-ref/
++		tsadcm1_shut: tsadcm1-shut {
++			rockchip,pins =
++				/* tsadcm1_shut */
++				<0 RK_PA2 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		tsadc_shut: tsadc-shut {
++			rockchip,pins =
++				/* tsadc_shut */
++				<0 RK_PA1 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		tsadc_shut_org: tsadc-shut-org {
++			rockchip,pins =
++				/* tsadc_shut_org */
++				<0 RK_PA1 1 &pcfg_pull_none>;
++		};
++	};
++
++	uart0 {
++		/omit-if-no-ref/
++		uart0m0_xfer: uart0m0-xfer {
++			rockchip,pins =
++				/* uart0_rx_m0 */
++				<0 RK_PC4 4 &pcfg_pull_up>,
++				/* uart0_tx_m0 */
++				<0 RK_PC5 4 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart0m1_xfer: uart0m1-xfer {
++			rockchip,pins =
++				/* uart0_rx_m1 */
++				<0 RK_PB0 4 &pcfg_pull_up>,
++				/* uart0_tx_m1 */
++				<0 RK_PB1 4 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart0m2_xfer: uart0m2-xfer {
++			rockchip,pins =
++				/* uart0_rx_m2 */
++				<4 RK_PA4 10 &pcfg_pull_up>,
++				/* uart0_tx_m2 */
++				<4 RK_PA3 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart0_ctsn: uart0-ctsn {
++			rockchip,pins =
++				/* uart0_ctsn */
++				<0 RK_PD1 4 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart0_rtsn: uart0-rtsn {
++			rockchip,pins =
++				/* uart0_rtsn */
++				<0 RK_PC6 4 &pcfg_pull_none>;
++		};
++	};
++
++	uart1 {
++		/omit-if-no-ref/
++		uart1m1_xfer: uart1m1-xfer {
++			rockchip,pins =
++				/* uart1_rx_m1 */
++				<1 RK_PB7 10 &pcfg_pull_up>,
++				/* uart1_tx_m1 */
++				<1 RK_PB6 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart1m1_ctsn: uart1m1-ctsn {
++			rockchip,pins =
++				/* uart1m1_ctsn */
++				<1 RK_PD7 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart1m1_rtsn: uart1m1-rtsn {
++			rockchip,pins =
++				/* uart1m1_rtsn */
++				<1 RK_PD6 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart1m2_xfer: uart1m2-xfer {
++			rockchip,pins =
++				/* uart1_rx_m2 */
++				<0 RK_PD2 10 &pcfg_pull_up>,
++				/* uart1_tx_m2 */
++				<0 RK_PD1 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart1m2_ctsn: uart1m2-ctsn {
++			rockchip,pins =
++				/* uart1m2_ctsn */
++				<0 RK_PD0 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart1m2_rtsn: uart1m2-rtsn {
++			rockchip,pins =
++				/* uart1m2_rtsn */
++				<0 RK_PC7 10 &pcfg_pull_none>;
++		};
++	};
++
++	uart2 {
++		/omit-if-no-ref/
++		uart2m0_xfer: uart2m0-xfer {
++			rockchip,pins =
++				/* uart2_rx_m0 */
++				<0 RK_PB6 10 &pcfg_pull_up>,
++				/* uart2_tx_m0 */
++				<0 RK_PB5 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart2m1_xfer: uart2m1-xfer {
++			rockchip,pins =
++				/* uart2_rx_m1 */
++				<4 RK_PD1 10 &pcfg_pull_up>,
++				/* uart2_tx_m1 */
++				<4 RK_PD0 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart2m2_xfer: uart2m2-xfer {
++			rockchip,pins =
++				/* uart2_rx_m2 */
++				<3 RK_PB2 10 &pcfg_pull_up>,
++				/* uart2_tx_m2 */
++				<3 RK_PB1 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart2_ctsn: uart2-ctsn {
++			rockchip,pins =
++				/* uart2_ctsn */
++				<3 RK_PB4 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart2_rtsn: uart2-rtsn {
++			rockchip,pins =
++				/* uart2_rtsn */
++				<3 RK_PB3 10 &pcfg_pull_none>;
++		};
++	};
++
++	uart3 {
++		/omit-if-no-ref/
++		uart3m0_xfer: uart3m0-xfer {
++			rockchip,pins =
++				/* uart3_rx_m0 */
++				<1 RK_PC0 10 &pcfg_pull_up>,
++				/* uart3_tx_m0 */
++				<1 RK_PC1 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart3m1_xfer: uart3m1-xfer {
++			rockchip,pins =
++				/* uart3_rx_m1 */
++				<3 RK_PB6 10 &pcfg_pull_up>,
++				/* uart3_tx_m1 */
++				<3 RK_PB5 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart3m2_xfer: uart3m2-xfer {
++			rockchip,pins =
++				/* uart3_rx_m2 */
++				<4 RK_PA6 10 &pcfg_pull_up>,
++				/* uart3_tx_m2 */
++				<4 RK_PA5 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart3_ctsn: uart3-ctsn {
++			rockchip,pins =
++				/* uart3_ctsn */
++				<1 RK_PC3 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart3_rtsn: uart3-rtsn {
++			rockchip,pins =
++				/* uart3_rtsn */
++				<1 RK_PC2 10 &pcfg_pull_none>;
++		};
++	};
++
++	uart4 {
++		/omit-if-no-ref/
++		uart4m0_xfer: uart4m0-xfer {
++			rockchip,pins =
++				/* uart4_rx_m0 */
++				<1 RK_PD3 10 &pcfg_pull_up>,
++				/* uart4_tx_m0 */
++				<1 RK_PD2 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart4m1_xfer: uart4m1-xfer {
++			rockchip,pins =
++				/* uart4_rx_m1 */
++				<3 RK_PD0 10 &pcfg_pull_up>,
++				/* uart4_tx_m1 */
++				<3 RK_PD1 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart4m2_xfer: uart4m2-xfer {
++			rockchip,pins =
++				/* uart4_rx_m2 */
++				<1 RK_PB2 10 &pcfg_pull_up>,
++				/* uart4_tx_m2 */
++				<1 RK_PB3 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart4_ctsn: uart4-ctsn {
++			rockchip,pins =
++				/* uart4_ctsn */
++				<1 RK_PC7 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart4_rtsn: uart4-rtsn {
++			rockchip,pins =
++				/* uart4_rtsn */
++				<1 RK_PC5 10 &pcfg_pull_none>;
++		};
++	};
++
++	uart5 {
++		/omit-if-no-ref/
++		uart5m0_xfer: uart5m0-xfer {
++			rockchip,pins =
++				/* uart5_rx_m0 */
++				<4 RK_PD4 10 &pcfg_pull_up>,
++				/* uart5_tx_m0 */
++				<4 RK_PD5 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart5m0_ctsn: uart5m0-ctsn {
++			rockchip,pins =
++				/* uart5m0_ctsn */
++				<4 RK_PD2 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart5m0_rtsn: uart5m0-rtsn {
++			rockchip,pins =
++				/* uart5m0_rtsn */
++				<4 RK_PD3 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart5m1_xfer: uart5m1-xfer {
++			rockchip,pins =
++				/* uart5_rx_m1 */
++				<3 RK_PC5 10 &pcfg_pull_up>,
++				/* uart5_tx_m1 */
++				<3 RK_PC4 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart5m1_ctsn: uart5m1-ctsn {
++			rockchip,pins =
++				/* uart5m1_ctsn */
++				<2 RK_PA2 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart5m1_rtsn: uart5m1-rtsn {
++			rockchip,pins =
++				/* uart5m1_rtsn */
++				<2 RK_PA3 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart5m2_xfer: uart5m2-xfer {
++			rockchip,pins =
++				/* uart5_rx_m2 */
++				<2 RK_PD4 10 &pcfg_pull_up>,
++				/* uart5_tx_m2 */
++				<2 RK_PD5 10 &pcfg_pull_up>;
++		};
++	};
++
++	uart6 {
++		/omit-if-no-ref/
++		uart6m1_xfer: uart6m1-xfer {
++			rockchip,pins =
++				/* uart6_rx_m1 */
++				<1 RK_PA0 10 &pcfg_pull_up>,
++				/* uart6_tx_m1 */
++				<1 RK_PA1 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart6m1_ctsn: uart6m1-ctsn {
++			rockchip,pins =
++				/* uart6m1_ctsn */
++				<1 RK_PA3 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart6m1_rtsn: uart6m1-rtsn {
++			rockchip,pins =
++				/* uart6m1_rtsn */
++				<1 RK_PA2 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart6m2_xfer: uart6m2-xfer {
++			rockchip,pins =
++				/* uart6_rx_m2 */
++				<1 RK_PD1 10 &pcfg_pull_up>,
++				/* uart6_tx_m2 */
++				<1 RK_PD0 10 &pcfg_pull_up>;
++		};
++	};
++
++	uart7 {
++		/omit-if-no-ref/
++		uart7m1_xfer: uart7m1-xfer {
++			rockchip,pins =
++				/* uart7_rx_m1 */
++				<3 RK_PC1 10 &pcfg_pull_up>,
++				/* uart7_tx_m1 */
++				<3 RK_PC0 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart7m1_ctsn: uart7m1-ctsn {
++			rockchip,pins =
++				/* uart7m1_ctsn */
++				<3 RK_PC3 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart7m1_rtsn: uart7m1-rtsn {
++			rockchip,pins =
++				/* uart7m1_rtsn */
++				<3 RK_PC2 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart7m2_xfer: uart7m2-xfer {
++			rockchip,pins =
++				/* uart7_rx_m2 */
++				<1 RK_PB4 10 &pcfg_pull_up>,
++				/* uart7_tx_m2 */
++				<1 RK_PB5 10 &pcfg_pull_up>;
++		};
++	};
++
++	uart8 {
++		/omit-if-no-ref/
++		uart8m0_xfer: uart8m0-xfer {
++			rockchip,pins =
++				/* uart8_rx_m0 */
++				<4 RK_PB1 10 &pcfg_pull_up>,
++				/* uart8_tx_m0 */
++				<4 RK_PB0 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart8m0_ctsn: uart8m0-ctsn {
++			rockchip,pins =
++				/* uart8m0_ctsn */
++				<4 RK_PB3 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart8m0_rtsn: uart8m0-rtsn {
++			rockchip,pins =
++				/* uart8m0_rtsn */
++				<4 RK_PB2 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart8m1_xfer: uart8m1-xfer {
++			rockchip,pins =
++				/* uart8_rx_m1 */
++				<3 RK_PA3 10 &pcfg_pull_up>,
++				/* uart8_tx_m1 */
++				<3 RK_PA2 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart8m1_ctsn: uart8m1-ctsn {
++			rockchip,pins =
++				/* uart8m1_ctsn */
++				<3 RK_PA5 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart8m1_rtsn: uart8m1-rtsn {
++			rockchip,pins =
++				/* uart8m1_rtsn */
++				<3 RK_PA4 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart8_xfer: uart8-xfer {
++			rockchip,pins =
++				/* uart8_rx_ */
++				<4 RK_PB1 10 &pcfg_pull_up>;
++		};
++	};
++
++	uart9 {
++		/omit-if-no-ref/
++		uart9m1_xfer: uart9m1-xfer {
++			rockchip,pins =
++				/* uart9_rx_m1 */
++				<4 RK_PB5 10 &pcfg_pull_up>,
++				/* uart9_tx_m1 */
++				<4 RK_PB4 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart9m1_ctsn: uart9m1-ctsn {
++			rockchip,pins =
++				/* uart9m1_ctsn */
++				<4 RK_PA1 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart9m1_rtsn: uart9m1-rtsn {
++			rockchip,pins =
++				/* uart9m1_rtsn */
++				<4 RK_PA0 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart9m2_xfer: uart9m2-xfer {
++			rockchip,pins =
++				/* uart9_rx_m2 */
++				<3 RK_PD4 10 &pcfg_pull_up>,
++				/* uart9_tx_m2 */
++				<3 RK_PD5 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
++		uart9m2_ctsn: uart9m2-ctsn {
++			rockchip,pins =
++				/* uart9m2_ctsn */
++				<3 RK_PD3 10 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		uart9m2_rtsn: uart9m2-rtsn {
++			rockchip,pins =
++				/* uart9m2_rtsn */
++				<3 RK_PD2 10 &pcfg_pull_none>;
++		};
++	};
++
++	vop {
++		/omit-if-no-ref/
++		vop_pins: vop-pins {
++			rockchip,pins =
++				/* vop_post_empty */
++				<1 RK_PA2 1 &pcfg_pull_none>;
++		};
++	};
++};
++
++/*
++ * This part is edited handly.
++ */
++&pinctrl {
++	bt656 {
++		/omit-if-no-ref/
++		bt656_pins: bt656-pins {
++			rockchip,pins =
++				/* bt1120_clkout */
++				<4 RK_PB0 2 &pcfg_pull_none_drv_level_2>,
++				/* bt1120_d0 */
++				<4 RK_PA0 2 &pcfg_pull_none_drv_level_2>,
++				/* bt1120_d1 */
++				<4 RK_PA1 2 &pcfg_pull_none_drv_level_2>,
++				/* bt1120_d2 */
++				<4 RK_PA2 2 &pcfg_pull_none_drv_level_2>,
++				/* bt1120_d3 */
++				<4 RK_PA3 2 &pcfg_pull_none_drv_level_2>,
++				/* bt1120_d4 */
++				<4 RK_PA4 2 &pcfg_pull_none_drv_level_2>,
++				/* bt1120_d5 */
++				<4 RK_PA5 2 &pcfg_pull_none_drv_level_2>,
++				/* bt1120_d6 */
++				<4 RK_PA6 2 &pcfg_pull_none_drv_level_2>,
++				/* bt1120_d7 */
++				<4 RK_PA7 2 &pcfg_pull_none_drv_level_2>;
++		};
++	};
++
++	gpio-func {
++		/omit-if-no-ref/
++		tsadc_gpio_func: tsadc-gpio-func {
++			rockchip,pins =
++				<0 RK_PA1 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/098-arm64-dts-rockchip-Add-base-DT-for-rk3588-SoC.patch b/target/linux/rockchip/patches-6.1/098-arm64-dts-rockchip-Add-base-DT-for-rk3588-SoC.patch
new file mode 100644
index 0000000000..37556d862c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/098-arm64-dts-rockchip-Add-base-DT-for-rk3588-SoC.patch
@@ -0,0 +1,1800 @@
+From c056fa6c2f8bc96b1e5b410f363b458315857a10 Mon Sep 17 00:00:00 2001
+From: Kever Yang <kever.yang@rock-chips.com>
+Date: Mon, 9 Jan 2023 16:57:57 +0100
+Subject: [PATCH 098/383] arm64: dts: rockchip: Add base DT for rk3588 SoC
+
+This initial version supports CPU, dma, interrupts, timers, UART and
+SDHCI (everything necessary to boot Linux on this system on chip) as
+well as Ethernet, I2C, PWM and SPI.
+
+The DT is split into rk3588 and rk3588s, which is a reduced version
+(i.e. with less peripherals) of the former.
+
+Co-Developed-by: Yifeng Zhao <yifeng.zhao@rock-chips.com>
+Signed-off-by: Yifeng Zhao <yifeng.zhao@rock-chips.com>
+Co-Developed-by: Elaine Zhang <zhangqing@rock-chips.com>
+Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>
+Co-Developed-by: Sugar Zhang <sugar.zhang@rock-chips.com>
+Signed-off-by: Sugar Zhang <sugar.zhang@rock-chips.com>
+Signed-off-by: Kever Yang <kever.yang@rock-chips.com>
+[rebase, squash and reword commit message]
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Acked-by: Jagan Teki <jagan@edgeble.ai>
+Tested-by: Jagan Teki <jagan@edgeble.ai> # edgeble-neu6a
+Link: https://lore.kernel.org/r/20230109155801.51642-4-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi  |   58 +
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 1703 +++++++++++++++++++++
+ 2 files changed, 1761 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588.dtsi
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -0,0 +1,58 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ */
++
++#include "rk3588s.dtsi"
++#include "rk3588-pinctrl.dtsi"
++
++/ {
++	gmac0: ethernet@fe1b0000 {
++		compatible = "rockchip,rk3588-gmac", "snps,dwmac-4.20a";
++		reg = <0x0 0xfe1b0000 0x0 0x10000>;
++		interrupts = <GIC_SPI 227 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 226 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-names = "macirq", "eth_wake_irq";
++		clocks = <&cru CLK_GMAC_125M>, <&cru CLK_GMAC_50M>,
++			 <&cru PCLK_GMAC0>, <&cru ACLK_GMAC0>,
++			 <&cru CLK_GMAC0_PTP_REF>;
++		clock-names = "stmmaceth", "clk_mac_ref",
++			      "pclk_mac", "aclk_mac",
++			      "ptp_ref";
++		power-domains = <&power RK3588_PD_GMAC>;
++		resets = <&cru SRST_A_GMAC0>;
++		reset-names = "stmmaceth";
++		rockchip,grf = <&sys_grf>;
++		rockchip,php-grf = <&php_grf>;
++		snps,axi-config = <&gmac0_stmmac_axi_setup>;
++		snps,mixed-burst;
++		snps,mtl-rx-config = <&gmac0_mtl_rx_setup>;
++		snps,mtl-tx-config = <&gmac0_mtl_tx_setup>;
++		snps,tso;
++		status = "disabled";
++
++		mdio0: mdio {
++			compatible = "snps,dwmac-mdio";
++			#address-cells = <0x1>;
++			#size-cells = <0x0>;
++		};
++
++		gmac0_stmmac_axi_setup: stmmac-axi-config {
++			snps,blen = <0 0 0 0 16 8 4>;
++			snps,wr_osr_lmt = <4>;
++			snps,rd_osr_lmt = <8>;
++		};
++
++		gmac0_mtl_rx_setup: rx-queues-config {
++			snps,rx-queues-to-use = <2>;
++			queue0 {};
++			queue1 {};
++		};
++
++		gmac0_mtl_tx_setup: tx-queues-config {
++			snps,tx-queues-to-use = <2>;
++			queue0 {};
++			queue1 {};
++		};
++	};
++};
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -0,0 +1,1703 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ */
++
++#include <dt-bindings/clock/rockchip,rk3588-cru.h>
++#include <dt-bindings/interrupt-controller/arm-gic.h>
++#include <dt-bindings/interrupt-controller/irq.h>
++#include <dt-bindings/power/rk3588-power.h>
++#include <dt-bindings/reset/rockchip,rk3588-cru.h>
++
++/ {
++	compatible = "rockchip,rk3588";
++
++	interrupt-parent = <&gic>;
++	#address-cells = <2>;
++	#size-cells = <2>;
++
++	cpus {
++		#address-cells = <1>;
++		#size-cells = <0>;
++
++		cpu-map {
++			cluster0 {
++				core0 {
++					cpu = <&cpu_l0>;
++				};
++				core1 {
++					cpu = <&cpu_l1>;
++				};
++				core2 {
++					cpu = <&cpu_l2>;
++				};
++				core3 {
++					cpu = <&cpu_l3>;
++				};
++			};
++			cluster1 {
++				core0 {
++					cpu = <&cpu_b0>;
++				};
++				core1 {
++					cpu = <&cpu_b1>;
++				};
++			};
++			cluster2 {
++				core0 {
++					cpu = <&cpu_b2>;
++				};
++				core1 {
++					cpu = <&cpu_b3>;
++				};
++			};
++		};
++
++		cpu_l0: cpu@0 {
++			device_type = "cpu";
++			compatible = "arm,cortex-a55";
++			reg = <0x0>;
++			enable-method = "psci";
++			capacity-dmips-mhz = <530>;
++			clocks = <&scmi_clk SCMI_CLK_CPUL>;
++			cpu-idle-states = <&CPU_SLEEP>;
++			i-cache-size = <32768>;
++			i-cache-line-size = <64>;
++			i-cache-sets = <128>;
++			d-cache-size = <32768>;
++			d-cache-line-size = <64>;
++			d-cache-sets = <128>;
++			next-level-cache = <&l2_cache_l0>;
++			dynamic-power-coefficient = <228>;
++			#cooling-cells = <2>;
++		};
++
++		cpu_l1: cpu@100 {
++			device_type = "cpu";
++			compatible = "arm,cortex-a55";
++			reg = <0x100>;
++			enable-method = "psci";
++			capacity-dmips-mhz = <530>;
++			clocks = <&scmi_clk SCMI_CLK_CPUL>;
++			cpu-idle-states = <&CPU_SLEEP>;
++			i-cache-size = <32768>;
++			i-cache-line-size = <64>;
++			i-cache-sets = <128>;
++			d-cache-size = <32768>;
++			d-cache-line-size = <64>;
++			d-cache-sets = <128>;
++			next-level-cache = <&l2_cache_l1>;
++			dynamic-power-coefficient = <228>;
++			#cooling-cells = <2>;
++		};
++
++		cpu_l2: cpu@200 {
++			device_type = "cpu";
++			compatible = "arm,cortex-a55";
++			reg = <0x200>;
++			enable-method = "psci";
++			capacity-dmips-mhz = <530>;
++			clocks = <&scmi_clk SCMI_CLK_CPUL>;
++			cpu-idle-states = <&CPU_SLEEP>;
++			i-cache-size = <32768>;
++			i-cache-line-size = <64>;
++			i-cache-sets = <128>;
++			d-cache-size = <32768>;
++			d-cache-line-size = <64>;
++			d-cache-sets = <128>;
++			next-level-cache = <&l2_cache_l2>;
++			dynamic-power-coefficient = <228>;
++			#cooling-cells = <2>;
++		};
++
++		cpu_l3: cpu@300 {
++			device_type = "cpu";
++			compatible = "arm,cortex-a55";
++			reg = <0x300>;
++			enable-method = "psci";
++			capacity-dmips-mhz = <530>;
++			clocks = <&scmi_clk SCMI_CLK_CPUL>;
++			cpu-idle-states = <&CPU_SLEEP>;
++			i-cache-size = <32768>;
++			i-cache-line-size = <64>;
++			i-cache-sets = <128>;
++			d-cache-size = <32768>;
++			d-cache-line-size = <64>;
++			d-cache-sets = <128>;
++			next-level-cache = <&l2_cache_l3>;
++			dynamic-power-coefficient = <228>;
++			#cooling-cells = <2>;
++		};
++
++		cpu_b0: cpu@400 {
++			device_type = "cpu";
++			compatible = "arm,cortex-a76";
++			reg = <0x400>;
++			enable-method = "psci";
++			capacity-dmips-mhz = <1024>;
++			clocks = <&scmi_clk SCMI_CLK_CPUB01>;
++			cpu-idle-states = <&CPU_SLEEP>;
++			i-cache-size = <65536>;
++			i-cache-line-size = <64>;
++			i-cache-sets = <256>;
++			d-cache-size = <65536>;
++			d-cache-line-size = <64>;
++			d-cache-sets = <256>;
++			next-level-cache = <&l2_cache_b0>;
++			dynamic-power-coefficient = <416>;
++			#cooling-cells = <2>;
++		};
++
++		cpu_b1: cpu@500 {
++			device_type = "cpu";
++			compatible = "arm,cortex-a76";
++			reg = <0x500>;
++			enable-method = "psci";
++			capacity-dmips-mhz = <1024>;
++			clocks = <&scmi_clk SCMI_CLK_CPUB01>;
++			cpu-idle-states = <&CPU_SLEEP>;
++			i-cache-size = <65536>;
++			i-cache-line-size = <64>;
++			i-cache-sets = <256>;
++			d-cache-size = <65536>;
++			d-cache-line-size = <64>;
++			d-cache-sets = <256>;
++			next-level-cache = <&l2_cache_b1>;
++			dynamic-power-coefficient = <416>;
++			#cooling-cells = <2>;
++		};
++
++		cpu_b2: cpu@600 {
++			device_type = "cpu";
++			compatible = "arm,cortex-a76";
++			reg = <0x600>;
++			enable-method = "psci";
++			capacity-dmips-mhz = <1024>;
++			clocks = <&scmi_clk SCMI_CLK_CPUB23>;
++			cpu-idle-states = <&CPU_SLEEP>;
++			i-cache-size = <65536>;
++			i-cache-line-size = <64>;
++			i-cache-sets = <256>;
++			d-cache-size = <65536>;
++			d-cache-line-size = <64>;
++			d-cache-sets = <256>;
++			next-level-cache = <&l2_cache_b2>;
++			dynamic-power-coefficient = <416>;
++			#cooling-cells = <2>;
++		};
++
++		cpu_b3: cpu@700 {
++			device_type = "cpu";
++			compatible = "arm,cortex-a76";
++			reg = <0x700>;
++			enable-method = "psci";
++			capacity-dmips-mhz = <1024>;
++			clocks = <&scmi_clk SCMI_CLK_CPUB23>;
++			cpu-idle-states = <&CPU_SLEEP>;
++			i-cache-size = <65536>;
++			i-cache-line-size = <64>;
++			i-cache-sets = <256>;
++			d-cache-size = <65536>;
++			d-cache-line-size = <64>;
++			d-cache-sets = <256>;
++			next-level-cache = <&l2_cache_b3>;
++			dynamic-power-coefficient = <416>;
++			#cooling-cells = <2>;
++		};
++
++		idle-states {
++			entry-method = "psci";
++			CPU_SLEEP: cpu-sleep {
++				compatible = "arm,idle-state";
++				local-timer-stop;
++				arm,psci-suspend-param = <0x0010000>;
++				entry-latency-us = <100>;
++				exit-latency-us = <120>;
++				min-residency-us = <1000>;
++			};
++		};
++
++		l2_cache_l0: l2-cache-l0 {
++			compatible = "cache";
++			cache-size = <131072>;
++			cache-line-size = <64>;
++			cache-sets = <512>;
++			next-level-cache = <&l3_cache>;
++		};
++
++		l2_cache_l1: l2-cache-l1 {
++			compatible = "cache";
++			cache-size = <131072>;
++			cache-line-size = <64>;
++			cache-sets = <512>;
++			next-level-cache = <&l3_cache>;
++		};
++
++		l2_cache_l2: l2-cache-l2 {
++			compatible = "cache";
++			cache-size = <131072>;
++			cache-line-size = <64>;
++			cache-sets = <512>;
++			next-level-cache = <&l3_cache>;
++		};
++
++		l2_cache_l3: l2-cache-l3 {
++			compatible = "cache";
++			cache-size = <131072>;
++			cache-line-size = <64>;
++			cache-sets = <512>;
++			next-level-cache = <&l3_cache>;
++		};
++
++		l2_cache_b0: l2-cache-b0 {
++			compatible = "cache";
++			cache-size = <524288>;
++			cache-line-size = <64>;
++			cache-sets = <1024>;
++			next-level-cache = <&l3_cache>;
++		};
++
++		l2_cache_b1: l2-cache-b1 {
++			compatible = "cache";
++			cache-size = <524288>;
++			cache-line-size = <64>;
++			cache-sets = <1024>;
++			next-level-cache = <&l3_cache>;
++		};
++
++		l2_cache_b2: l2-cache-b2 {
++			compatible = "cache";
++			cache-size = <524288>;
++			cache-line-size = <64>;
++			cache-sets = <1024>;
++			next-level-cache = <&l3_cache>;
++		};
++
++		l2_cache_b3: l2-cache-b3 {
++			compatible = "cache";
++			cache-size = <524288>;
++			cache-line-size = <64>;
++			cache-sets = <1024>;
++			next-level-cache = <&l3_cache>;
++		};
++
++		l3_cache: l3-cache {
++			compatible = "cache";
++			cache-size = <3145728>;
++			cache-line-size = <64>;
++			cache-sets = <4096>;
++		};
++	};
++
++	firmware {
++		optee: optee {
++			compatible = "linaro,optee-tz";
++			method = "smc";
++		};
++
++		scmi: scmi {
++			compatible = "arm,scmi-smc";
++			arm,smc-id = <0x82000010>;
++			shmem = <&scmi_shmem>;
++			#address-cells = <1>;
++			#size-cells = <0>;
++
++			scmi_clk: protocol@14 {
++				reg = <0x14>;
++				assigned-clocks = <&scmi_clk SCMI_CLK_CPUB01>,
++						  <&scmi_clk SCMI_CLK_CPUB23>;
++				assigned-clock-rates = <1200000000>,
++						       <1200000000>;
++				#clock-cells = <1>;
++			};
++
++			scmi_reset: protocol@16 {
++				reg = <0x16>;
++				#reset-cells = <1>;
++			};
++		};
++	};
++
++	pmu-a55 {
++		compatible = "arm,cortex-a55-pmu";
++		interrupts = <GIC_PPI 7 IRQ_TYPE_LEVEL_HIGH &ppi_partition0>;
++	};
++
++	pmu-a76 {
++		compatible = "arm,cortex-a76-pmu";
++		interrupts = <GIC_PPI 7 IRQ_TYPE_LEVEL_HIGH &ppi_partition1>;
++	};
++
++	psci {
++		compatible = "arm,psci-1.0";
++		method = "smc";
++	};
++
++	spll: clock-0 {
++		compatible = "fixed-clock";
++		clock-frequency = <702000000>;
++		clock-output-names = "spll";
++		#clock-cells = <0>;
++	};
++
++	timer {
++		compatible = "arm,armv8-timer";
++		interrupts = <GIC_PPI 13 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_PPI 14 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_PPI 11 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_PPI 10 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_PPI 12 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-names = "sec-phys", "phys", "virt", "hyp-phys", "hyp-virt";
++	};
++
++	xin24m: clock-1 {
++		compatible = "fixed-clock";
++		clock-frequency = <24000000>;
++		clock-output-names = "xin24m";
++		#clock-cells = <0>;
++	};
++
++	xin32k: clock-2 {
++		compatible = "fixed-clock";
++		clock-frequency = <32768>;
++		clock-output-names = "xin32k";
++		#clock-cells = <0>;
++	};
++
++	pmu_sram: sram@10f000 {
++		compatible = "mmio-sram";
++		reg = <0x0 0x0010f000 0x0 0x100>;
++		ranges = <0 0x0 0x0010f000 0x100>;
++		#address-cells = <1>;
++		#size-cells = <1>;
++
++		scmi_shmem: sram@0 {
++			compatible = "arm,scmi-shmem";
++			reg = <0x0 0x100>;
++		};
++	};
++
++	sys_grf: syscon@fd58c000 {
++		compatible = "rockchip,rk3588-sys-grf", "syscon";
++		reg = <0x0 0xfd58c000 0x0 0x1000>;
++	};
++
++	php_grf: syscon@fd5b0000 {
++		compatible = "rockchip,rk3588-php-grf", "syscon";
++		reg = <0x0 0xfd5b0000 0x0 0x1000>;
++	};
++
++	ioc: syscon@fd5f0000 {
++		compatible = "rockchip,rk3588-ioc", "syscon";
++		reg = <0x0 0xfd5f0000 0x0 0x10000>;
++	};
++
++	system_sram1: sram@fd600000 {
++		compatible = "mmio-sram";
++		reg = <0x0 0xfd600000 0x0 0x100000>;
++		ranges = <0x0 0x0 0xfd600000 0x100000>;
++		#address-cells = <1>;
++		#size-cells = <1>;
++	};
++
++	cru: clock-controller@fd7c0000 {
++		compatible = "rockchip,rk3588-cru";
++		reg = <0x0 0xfd7c0000 0x0 0x5c000>;
++		assigned-clocks =
++			<&cru PLL_PPLL>, <&cru PLL_AUPLL>,
++			<&cru PLL_NPLL>, <&cru PLL_GPLL>,
++			<&cru ACLK_CENTER_ROOT>,
++			<&cru HCLK_CENTER_ROOT>, <&cru ACLK_CENTER_LOW_ROOT>,
++			<&cru ACLK_TOP_ROOT>, <&cru PCLK_TOP_ROOT>,
++			<&cru ACLK_LOW_TOP_ROOT>, <&cru PCLK_PMU0_ROOT>,
++			<&cru HCLK_PMU_CM0_ROOT>, <&cru ACLK_VOP>,
++			<&cru ACLK_BUS_ROOT>, <&cru CLK_150M_SRC>,
++			<&cru CLK_GPU>;
++		assigned-clock-rates =
++			<100000000>, <786432000>,
++			<850000000>, <1188000000>,
++			<702000000>,
++			<400000000>, <500000000>,
++			<800000000>, <100000000>,
++			<400000000>, <100000000>,
++			<200000000>, <500000000>,
++			<375000000>, <150000000>,
++			<200000000>;
++		rockchip,grf = <&php_grf>;
++		#clock-cells = <1>;
++		#reset-cells = <1>;
++	};
++
++	i2c0: i2c@fd880000 {
++		compatible = "rockchip,rk3588-i2c", "rockchip,rk3399-i2c";
++		reg = <0x0 0xfd880000 0x0 0x1000>;
++		interrupts = <GIC_SPI 317 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru CLK_I2C0>, <&cru PCLK_I2C0>;
++		clock-names = "i2c", "pclk";
++		pinctrl-0 = <&i2c0m0_xfer>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	uart0: serial@fd890000 {
++		compatible = "rockchip,rk3588-uart", "snps,dw-apb-uart";
++		reg = <0x0 0xfd890000 0x0 0x100>;
++		interrupts = <GIC_SPI 331 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru SCLK_UART0>, <&cru PCLK_UART0>;
++		clock-names = "baudclk", "apb_pclk";
++		dmas = <&dmac0 6>, <&dmac0 7>;
++		dma-names = "tx", "rx";
++		pinctrl-0 = <&uart0m1_xfer>;
++		pinctrl-names = "default";
++		reg-shift = <2>;
++		reg-io-width = <4>;
++		status = "disabled";
++	};
++
++	pwm0: pwm@fd8b0000 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfd8b0000 0x0 0x10>;
++		clocks = <&cru CLK_PMU1PWM>, <&cru PCLK_PMU1PWM>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm0m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm1: pwm@fd8b0010 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfd8b0010 0x0 0x10>;
++		clocks = <&cru CLK_PMU1PWM>, <&cru PCLK_PMU1PWM>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm1m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm2: pwm@fd8b0020 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfd8b0020 0x0 0x10>;
++		clocks = <&cru CLK_PMU1PWM>, <&cru PCLK_PMU1PWM>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm2m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm3: pwm@fd8b0030 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfd8b0030 0x0 0x10>;
++		clocks = <&cru CLK_PMU1PWM>, <&cru PCLK_PMU1PWM>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm3m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pmu: power-management@fd8d8000 {
++		compatible = "rockchip,rk3588-pmu", "syscon", "simple-mfd";
++		reg = <0x0 0xfd8d8000 0x0 0x400>;
++
++		power: power-controller {
++			compatible = "rockchip,rk3588-power-controller";
++			#address-cells = <1>;
++			#power-domain-cells = <1>;
++			#size-cells = <0>;
++			status = "okay";
++
++			/* These power domains are grouped by VD_NPU */
++			power-domain@RK3588_PD_NPU {
++				reg = <RK3588_PD_NPU>;
++				#power-domain-cells = <0>;
++				#address-cells = <1>;
++				#size-cells = <0>;
++
++				power-domain@RK3588_PD_NPUTOP {
++					reg = <RK3588_PD_NPUTOP>;
++					clocks = <&cru HCLK_NPU_ROOT>,
++						 <&cru PCLK_NPU_ROOT>,
++						 <&cru CLK_NPU_DSU0>,
++						 <&cru HCLK_NPU_CM0_ROOT>;
++					pm_qos = <&qos_npu0_mwr>,
++						 <&qos_npu0_mro>,
++						 <&qos_mcu_npu>;
++					#power-domain-cells = <0>;
++					#address-cells = <1>;
++					#size-cells = <0>;
++
++					power-domain@RK3588_PD_NPU1 {
++						reg = <RK3588_PD_NPU1>;
++						clocks = <&cru HCLK_NPU_ROOT>,
++							 <&cru PCLK_NPU_ROOT>,
++							 <&cru CLK_NPU_DSU0>;
++						pm_qos = <&qos_npu1>;
++						#power-domain-cells = <0>;
++					};
++					power-domain@RK3588_PD_NPU2 {
++						reg = <RK3588_PD_NPU2>;
++						clocks = <&cru HCLK_NPU_ROOT>,
++							 <&cru PCLK_NPU_ROOT>,
++							 <&cru CLK_NPU_DSU0>;
++						pm_qos = <&qos_npu2>;
++						#power-domain-cells = <0>;
++					};
++				};
++			};
++			/* These power domains are grouped by VD_GPU */
++			power-domain@RK3588_PD_GPU {
++				reg = <RK3588_PD_GPU>;
++				clocks = <&cru CLK_GPU>,
++					 <&cru CLK_GPU_COREGROUP>,
++					 <&cru CLK_GPU_STACKS>;
++				pm_qos = <&qos_gpu_m0>,
++					 <&qos_gpu_m1>,
++					 <&qos_gpu_m2>,
++					 <&qos_gpu_m3>;
++				#power-domain-cells = <0>;
++			};
++			/* These power domains are grouped by VD_VCODEC */
++			power-domain@RK3588_PD_VCODEC {
++				reg = <RK3588_PD_VCODEC>;
++				#address-cells = <1>;
++				#size-cells = <0>;
++				#power-domain-cells = <0>;
++
++				power-domain@RK3588_PD_RKVDEC0 {
++					reg = <RK3588_PD_RKVDEC0>;
++					clocks = <&cru HCLK_RKVDEC0>,
++						 <&cru HCLK_VDPU_ROOT>,
++						 <&cru ACLK_VDPU_ROOT>,
++						 <&cru ACLK_RKVDEC0>,
++						 <&cru ACLK_RKVDEC_CCU>;
++					pm_qos = <&qos_rkvdec0>;
++					#power-domain-cells = <0>;
++				};
++				power-domain@RK3588_PD_RKVDEC1 {
++					reg = <RK3588_PD_RKVDEC1>;
++					clocks = <&cru HCLK_RKVDEC1>,
++						 <&cru HCLK_VDPU_ROOT>,
++						 <&cru ACLK_VDPU_ROOT>,
++						 <&cru ACLK_RKVDEC1>;
++					pm_qos = <&qos_rkvdec1>;
++					#power-domain-cells = <0>;
++				};
++				power-domain@RK3588_PD_VENC0 {
++					reg = <RK3588_PD_VENC0>;
++					clocks = <&cru HCLK_RKVENC0>,
++						 <&cru ACLK_RKVENC0>;
++					pm_qos = <&qos_rkvenc0_m0ro>,
++						 <&qos_rkvenc0_m1ro>,
++						 <&qos_rkvenc0_m2wo>;
++					#address-cells = <1>;
++					#size-cells = <0>;
++					#power-domain-cells = <0>;
++
++					power-domain@RK3588_PD_VENC1 {
++						reg = <RK3588_PD_VENC1>;
++						clocks = <&cru HCLK_RKVENC1>,
++							 <&cru HCLK_RKVENC0>,
++							 <&cru ACLK_RKVENC0>,
++							 <&cru ACLK_RKVENC1>;
++						pm_qos = <&qos_rkvenc1_m0ro>,
++							 <&qos_rkvenc1_m1ro>,
++							 <&qos_rkvenc1_m2wo>;
++						#power-domain-cells = <0>;
++					};
++				};
++			};
++			/* These power domains are grouped by VD_LOGIC */
++			power-domain@RK3588_PD_VDPU {
++				reg = <RK3588_PD_VDPU>;
++				clocks = <&cru HCLK_VDPU_ROOT>,
++					 <&cru ACLK_VDPU_LOW_ROOT>,
++					 <&cru ACLK_VDPU_ROOT>,
++					 <&cru ACLK_JPEG_DECODER_ROOT>,
++					 <&cru ACLK_IEP2P0>,
++					 <&cru HCLK_IEP2P0>,
++					 <&cru ACLK_JPEG_ENCODER0>,
++					 <&cru HCLK_JPEG_ENCODER0>,
++					 <&cru ACLK_JPEG_ENCODER1>,
++					 <&cru HCLK_JPEG_ENCODER1>,
++					 <&cru ACLK_JPEG_ENCODER2>,
++					 <&cru HCLK_JPEG_ENCODER2>,
++					 <&cru ACLK_JPEG_ENCODER3>,
++					 <&cru HCLK_JPEG_ENCODER3>,
++					 <&cru ACLK_JPEG_DECODER>,
++					 <&cru HCLK_JPEG_DECODER>,
++					 <&cru ACLK_RGA2>,
++					 <&cru HCLK_RGA2>;
++				pm_qos = <&qos_iep>,
++					 <&qos_jpeg_dec>,
++					 <&qos_jpeg_enc0>,
++					 <&qos_jpeg_enc1>,
++					 <&qos_jpeg_enc2>,
++					 <&qos_jpeg_enc3>,
++					 <&qos_rga2_mro>,
++					 <&qos_rga2_mwo>;
++				#address-cells = <1>;
++				#size-cells = <0>;
++				#power-domain-cells = <0>;
++
++
++				power-domain@RK3588_PD_AV1 {
++					reg = <RK3588_PD_AV1>;
++					clocks = <&cru PCLK_AV1>,
++						 <&cru ACLK_AV1>,
++						 <&cru HCLK_VDPU_ROOT>;
++					pm_qos = <&qos_av1>;
++					#power-domain-cells = <0>;
++				};
++				power-domain@RK3588_PD_RKVDEC0 {
++					reg = <RK3588_PD_RKVDEC0>;
++					clocks = <&cru HCLK_RKVDEC0>,
++						 <&cru HCLK_VDPU_ROOT>,
++						 <&cru ACLK_VDPU_ROOT>,
++						 <&cru ACLK_RKVDEC0>;
++					pm_qos = <&qos_rkvdec0>;
++					#power-domain-cells = <0>;
++				};
++				power-domain@RK3588_PD_RKVDEC1 {
++					reg = <RK3588_PD_RKVDEC1>;
++					clocks = <&cru HCLK_RKVDEC1>,
++						 <&cru HCLK_VDPU_ROOT>,
++						 <&cru ACLK_VDPU_ROOT>;
++					pm_qos = <&qos_rkvdec1>;
++					#power-domain-cells = <0>;
++				};
++				power-domain@RK3588_PD_RGA30 {
++					reg = <RK3588_PD_RGA30>;
++					clocks = <&cru ACLK_RGA3_0>,
++						 <&cru HCLK_RGA3_0>;
++					pm_qos = <&qos_rga3_0>;
++					#power-domain-cells = <0>;
++				};
++			};
++			power-domain@RK3588_PD_VOP {
++				reg = <RK3588_PD_VOP>;
++				clocks = <&cru PCLK_VOP_ROOT>,
++					 <&cru HCLK_VOP_ROOT>,
++					 <&cru ACLK_VOP>;
++				pm_qos = <&qos_vop_m0>,
++					 <&qos_vop_m1>;
++				#address-cells = <1>;
++				#size-cells = <0>;
++				#power-domain-cells = <0>;
++
++				power-domain@RK3588_PD_VO0 {
++					reg = <RK3588_PD_VO0>;
++					clocks = <&cru PCLK_VO0_ROOT>,
++						 <&cru PCLK_VO0_S_ROOT>,
++						 <&cru HCLK_VO0_S_ROOT>,
++						 <&cru ACLK_VO0_ROOT>,
++						 <&cru HCLK_HDCP0>,
++						 <&cru ACLK_HDCP0>,
++						 <&cru HCLK_VOP_ROOT>;
++					pm_qos = <&qos_hdcp0>;
++					#power-domain-cells = <0>;
++				};
++			};
++			power-domain@RK3588_PD_VO1 {
++				reg = <RK3588_PD_VO1>;
++				clocks = <&cru PCLK_VO1_ROOT>,
++					 <&cru PCLK_VO1_S_ROOT>,
++					 <&cru HCLK_VO1_S_ROOT>,
++					 <&cru HCLK_HDCP1>,
++					 <&cru ACLK_HDCP1>,
++					 <&cru ACLK_HDMIRX_ROOT>,
++					 <&cru HCLK_VO1USB_TOP_ROOT>;
++				pm_qos = <&qos_hdcp1>,
++					 <&qos_hdmirx>;
++				#power-domain-cells = <0>;
++			};
++			power-domain@RK3588_PD_VI {
++				reg = <RK3588_PD_VI>;
++				clocks = <&cru HCLK_VI_ROOT>,
++					 <&cru PCLK_VI_ROOT>,
++					 <&cru HCLK_ISP0>,
++					 <&cru ACLK_ISP0>,
++					 <&cru HCLK_VICAP>,
++					 <&cru ACLK_VICAP>;
++				pm_qos = <&qos_isp0_mro>,
++					 <&qos_isp0_mwo>,
++					 <&qos_vicap_m0>,
++					 <&qos_vicap_m1>;
++				#address-cells = <1>;
++				#size-cells = <0>;
++				#power-domain-cells = <0>;
++
++				power-domain@RK3588_PD_ISP1 {
++					reg = <RK3588_PD_ISP1>;
++					clocks = <&cru HCLK_ISP1>,
++						 <&cru ACLK_ISP1>,
++						 <&cru HCLK_VI_ROOT>,
++						 <&cru PCLK_VI_ROOT>;
++					pm_qos = <&qos_isp1_mwo>,
++						 <&qos_isp1_mro>;
++					#power-domain-cells = <0>;
++				};
++				power-domain@RK3588_PD_FEC {
++					reg = <RK3588_PD_FEC>;
++					clocks = <&cru HCLK_FISHEYE0>,
++						 <&cru ACLK_FISHEYE0>,
++						 <&cru HCLK_FISHEYE1>,
++						 <&cru ACLK_FISHEYE1>,
++						 <&cru PCLK_VI_ROOT>;
++					pm_qos = <&qos_fisheye0>,
++						 <&qos_fisheye1>;
++					#power-domain-cells = <0>;
++				};
++			};
++			power-domain@RK3588_PD_RGA31 {
++				reg = <RK3588_PD_RGA31>;
++				clocks = <&cru HCLK_RGA3_1>,
++					 <&cru ACLK_RGA3_1>;
++				pm_qos = <&qos_rga3_1>;
++				#power-domain-cells = <0>;
++			};
++			power-domain@RK3588_PD_USB {
++				reg = <RK3588_PD_USB>;
++				clocks = <&cru PCLK_PHP_ROOT>,
++					 <&cru ACLK_USB_ROOT>,
++					 <&cru HCLK_USB_ROOT>,
++					 <&cru HCLK_HOST0>,
++					 <&cru HCLK_HOST_ARB0>,
++					 <&cru HCLK_HOST1>,
++					 <&cru HCLK_HOST_ARB1>;
++				pm_qos = <&qos_usb3_0>,
++					 <&qos_usb3_1>,
++					 <&qos_usb2host_0>,
++					 <&qos_usb2host_1>;
++				#power-domain-cells = <0>;
++			};
++			power-domain@RK3588_PD_GMAC {
++				reg = <RK3588_PD_GMAC>;
++				clocks = <&cru PCLK_PHP_ROOT>,
++					 <&cru ACLK_PCIE_ROOT>,
++					 <&cru ACLK_PHP_ROOT>;
++				#power-domain-cells = <0>;
++			};
++			power-domain@RK3588_PD_PCIE {
++				reg = <RK3588_PD_PCIE>;
++				clocks = <&cru PCLK_PHP_ROOT>,
++					 <&cru ACLK_PCIE_ROOT>,
++					 <&cru ACLK_PHP_ROOT>;
++				#power-domain-cells = <0>;
++			};
++			power-domain@RK3588_PD_SDIO {
++				reg = <RK3588_PD_SDIO>;
++				clocks = <&cru HCLK_SDIO>,
++					 <&cru HCLK_NVM_ROOT>;
++				pm_qos = <&qos_sdio>;
++				#power-domain-cells = <0>;
++			};
++			power-domain@RK3588_PD_AUDIO {
++				reg = <RK3588_PD_AUDIO>;
++				clocks = <&cru HCLK_AUDIO_ROOT>,
++					 <&cru PCLK_AUDIO_ROOT>;
++				#power-domain-cells = <0>;
++			};
++			power-domain@RK3588_PD_SDMMC {
++				reg = <RK3588_PD_SDMMC>;
++				pm_qos = <&qos_sdmmc>;
++				#power-domain-cells = <0>;
++			};
++		};
++	};
++
++	qos_gpu_m0: qos@fdf35000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf35000 0x0 0x20>;
++	};
++
++	qos_gpu_m1: qos@fdf35200 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf35200 0x0 0x20>;
++	};
++
++	qos_gpu_m2: qos@fdf35400 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf35400 0x0 0x20>;
++	};
++
++	qos_gpu_m3: qos@fdf35600 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf35600 0x0 0x20>;
++	};
++
++	qos_rga3_1: qos@fdf36000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf36000 0x0 0x20>;
++	};
++
++	qos_sdio: qos@fdf39000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf39000 0x0 0x20>;
++	};
++
++	qos_sdmmc: qos@fdf3d800 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf3d800 0x0 0x20>;
++	};
++
++	qos_usb3_1: qos@fdf3e000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf3e000 0x0 0x20>;
++	};
++
++	qos_usb3_0: qos@fdf3e200 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf3e200 0x0 0x20>;
++	};
++
++	qos_usb2host_0: qos@fdf3e400 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf3e400 0x0 0x20>;
++	};
++
++	qos_usb2host_1: qos@fdf3e600 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf3e600 0x0 0x20>;
++	};
++
++	qos_fisheye0: qos@fdf40000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf40000 0x0 0x20>;
++	};
++
++	qos_fisheye1: qos@fdf40200 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf40200 0x0 0x20>;
++	};
++
++	qos_isp0_mro: qos@fdf40400 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf40400 0x0 0x20>;
++	};
++
++	qos_isp0_mwo: qos@fdf40500 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf40500 0x0 0x20>;
++	};
++
++	qos_vicap_m0: qos@fdf40600 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf40600 0x0 0x20>;
++	};
++
++	qos_vicap_m1: qos@fdf40800 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf40800 0x0 0x20>;
++	};
++
++	qos_isp1_mwo: qos@fdf41000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf41000 0x0 0x20>;
++	};
++
++	qos_isp1_mro: qos@fdf41100 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf41100 0x0 0x20>;
++	};
++
++	qos_rkvenc0_m0ro: qos@fdf60000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf60000 0x0 0x20>;
++	};
++
++	qos_rkvenc0_m1ro: qos@fdf60200 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf60200 0x0 0x20>;
++	};
++
++	qos_rkvenc0_m2wo: qos@fdf60400 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf60400 0x0 0x20>;
++	};
++
++	qos_rkvenc1_m0ro: qos@fdf61000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf61000 0x0 0x20>;
++	};
++
++	qos_rkvenc1_m1ro: qos@fdf61200 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf61200 0x0 0x20>;
++	};
++
++	qos_rkvenc1_m2wo: qos@fdf61400 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf61400 0x0 0x20>;
++	};
++
++	qos_rkvdec0: qos@fdf62000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf62000 0x0 0x20>;
++	};
++
++	qos_rkvdec1: qos@fdf63000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf63000 0x0 0x20>;
++	};
++
++	qos_av1: qos@fdf64000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf64000 0x0 0x20>;
++	};
++
++	qos_iep: qos@fdf66000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf66000 0x0 0x20>;
++	};
++
++	qos_jpeg_dec: qos@fdf66200 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf66200 0x0 0x20>;
++	};
++
++	qos_jpeg_enc0: qos@fdf66400 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf66400 0x0 0x20>;
++	};
++
++	qos_jpeg_enc1: qos@fdf66600 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf66600 0x0 0x20>;
++	};
++
++	qos_jpeg_enc2: qos@fdf66800 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf66800 0x0 0x20>;
++	};
++
++	qos_jpeg_enc3: qos@fdf66a00 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf66a00 0x0 0x20>;
++	};
++
++	qos_rga2_mro: qos@fdf66c00 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf66c00 0x0 0x20>;
++	};
++
++	qos_rga2_mwo: qos@fdf66e00 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf66e00 0x0 0x20>;
++	};
++
++	qos_rga3_0: qos@fdf67000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf67000 0x0 0x20>;
++	};
++
++	qos_vdpu: qos@fdf67200 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf67200 0x0 0x20>;
++	};
++
++	qos_npu1: qos@fdf70000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf70000 0x0 0x20>;
++	};
++
++	qos_npu2: qos@fdf71000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf71000 0x0 0x20>;
++	};
++
++	qos_npu0_mwr: qos@fdf72000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf72000 0x0 0x20>;
++	};
++
++	qos_npu0_mro: qos@fdf72200 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf72200 0x0 0x20>;
++	};
++
++	qos_mcu_npu: qos@fdf72400 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf72400 0x0 0x20>;
++	};
++
++	qos_hdcp0: qos@fdf80000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf80000 0x0 0x20>;
++	};
++
++	qos_hdcp1: qos@fdf81000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf81000 0x0 0x20>;
++	};
++
++	qos_hdmirx: qos@fdf81200 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf81200 0x0 0x20>;
++	};
++
++	qos_vop_m0: qos@fdf82000 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf82000 0x0 0x20>;
++	};
++
++	qos_vop_m1: qos@fdf82200 {
++		compatible = "rockchip,rk3588-qos", "syscon";
++		reg = <0x0 0xfdf82200 0x0 0x20>;
++	};
++
++	gmac1: ethernet@fe1c0000 {
++		compatible = "rockchip,rk3588-gmac", "snps,dwmac-4.20a";
++		reg = <0x0 0xfe1c0000 0x0 0x10000>;
++		interrupts = <GIC_SPI 234 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 233 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-names = "macirq", "eth_wake_irq";
++		clocks = <&cru CLK_GMAC_125M>, <&cru CLK_GMAC_50M>,
++			 <&cru PCLK_GMAC1>, <&cru ACLK_GMAC1>,
++			 <&cru CLK_GMAC1_PTP_REF>;
++		clock-names = "stmmaceth", "clk_mac_ref",
++			      "pclk_mac", "aclk_mac",
++			      "ptp_ref";
++		power-domains = <&power RK3588_PD_GMAC>;
++		resets = <&cru SRST_A_GMAC1>;
++		reset-names = "stmmaceth";
++		rockchip,grf = <&sys_grf>;
++		rockchip,php-grf = <&php_grf>;
++		snps,axi-config = <&gmac1_stmmac_axi_setup>;
++		snps,mixed-burst;
++		snps,mtl-rx-config = <&gmac1_mtl_rx_setup>;
++		snps,mtl-tx-config = <&gmac1_mtl_tx_setup>;
++		snps,tso;
++		status = "disabled";
++
++		mdio1: mdio {
++			compatible = "snps,dwmac-mdio";
++			#address-cells = <0x1>;
++			#size-cells = <0x0>;
++		};
++
++		gmac1_stmmac_axi_setup: stmmac-axi-config {
++			snps,blen = <0 0 0 0 16 8 4>;
++			snps,wr_osr_lmt = <4>;
++			snps,rd_osr_lmt = <8>;
++		};
++
++		gmac1_mtl_rx_setup: rx-queues-config {
++			snps,rx-queues-to-use = <2>;
++			queue0 {};
++			queue1 {};
++		};
++
++		gmac1_mtl_tx_setup: tx-queues-config {
++			snps,tx-queues-to-use = <2>;
++			queue0 {};
++			queue1 {};
++		};
++	};
++
++	sdhci: mmc@fe2e0000 {
++		compatible = "rockchip,rk3588-dwcmshc";
++		reg = <0x0 0xfe2e0000 0x0 0x10000>;
++		interrupts = <GIC_SPI 205 IRQ_TYPE_LEVEL_HIGH 0>;
++		assigned-clocks = <&cru BCLK_EMMC>, <&cru TMCLK_EMMC>, <&cru CCLK_EMMC>;
++		assigned-clock-rates = <200000000>, <24000000>, <200000000>;
++		clocks = <&cru CCLK_EMMC>, <&cru HCLK_EMMC>,
++			 <&cru ACLK_EMMC>, <&cru BCLK_EMMC>,
++			 <&cru TMCLK_EMMC>;
++		clock-names = "core", "bus", "axi", "block", "timer";
++		max-frequency = <200000000>;
++		resets = <&cru SRST_C_EMMC>, <&cru SRST_H_EMMC>,
++			 <&cru SRST_A_EMMC>, <&cru SRST_B_EMMC>,
++			 <&cru SRST_T_EMMC>;
++		reset-names = "core", "bus", "axi", "block", "timer";
++		status = "disabled";
++	};
++
++	gic: interrupt-controller@fe600000 {
++		compatible = "arm,gic-v3";
++		reg = <0x0 0xfe600000 0 0x10000>, /* GICD */
++		      <0x0 0xfe680000 0 0x100000>; /* GICR */
++		interrupts = <GIC_PPI 9 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-controller;
++		mbi-alias = <0x0 0xfe610000>;
++		mbi-ranges = <424 56>;
++		msi-controller;
++		#interrupt-cells = <4>;
++
++		ppi-partitions {
++			ppi_partition0: interrupt-partition-0 {
++				affinity = <&cpu_l0 &cpu_l1 &cpu_l2 &cpu_l3>;
++			};
++
++			ppi_partition1: interrupt-partition-1 {
++				affinity = <&cpu_b0 &cpu_b1 &cpu_b2 &cpu_b3>;
++			};
++		};
++	};
++
++	dmac0: dma-controller@fea10000 {
++		compatible = "arm,pl330", "arm,primecell";
++		reg = <0x0 0xfea10000 0x0 0x4000>;
++		interrupts = <GIC_SPI 86 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 87 IRQ_TYPE_LEVEL_HIGH 0>;
++		arm,pl330-periph-burst;
++		clocks = <&cru ACLK_DMAC0>;
++		clock-names = "apb_pclk";
++		#dma-cells = <1>;
++	};
++
++	dmac1: dma-controller@fea30000 {
++		compatible = "arm,pl330", "arm,primecell";
++		reg = <0x0 0xfea30000 0x0 0x4000>;
++		interrupts = <GIC_SPI 88 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 89 IRQ_TYPE_LEVEL_HIGH 0>;
++		arm,pl330-periph-burst;
++		clocks = <&cru ACLK_DMAC1>;
++		clock-names = "apb_pclk";
++		#dma-cells = <1>;
++	};
++
++	i2c1: i2c@fea90000 {
++		compatible = "rockchip,rk3588-i2c", "rockchip,rk3399-i2c";
++		reg = <0x0 0xfea90000 0x0 0x1000>;
++		clocks = <&cru CLK_I2C1>, <&cru PCLK_I2C1>;
++		clock-names = "i2c", "pclk";
++		interrupts = <GIC_SPI 318 IRQ_TYPE_LEVEL_HIGH 0>;
++		pinctrl-0 = <&i2c1m0_xfer>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	i2c2: i2c@feaa0000 {
++		compatible = "rockchip,rk3588-i2c", "rockchip,rk3399-i2c";
++		reg = <0x0 0xfeaa0000 0x0 0x1000>;
++		clocks = <&cru CLK_I2C2>, <&cru PCLK_I2C2>;
++		clock-names = "i2c", "pclk";
++		interrupts = <GIC_SPI 319 IRQ_TYPE_LEVEL_HIGH 0>;
++		pinctrl-0 = <&i2c2m0_xfer>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	i2c3: i2c@feab0000 {
++		compatible = "rockchip,rk3588-i2c", "rockchip,rk3399-i2c";
++		reg = <0x0 0xfeab0000 0x0 0x1000>;
++		clocks = <&cru CLK_I2C3>, <&cru PCLK_I2C3>;
++		clock-names = "i2c", "pclk";
++		interrupts = <GIC_SPI 320 IRQ_TYPE_LEVEL_HIGH 0>;
++		pinctrl-0 = <&i2c3m0_xfer>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	i2c4: i2c@feac0000 {
++		compatible = "rockchip,rk3588-i2c", "rockchip,rk3399-i2c";
++		reg = <0x0 0xfeac0000 0x0 0x1000>;
++		clocks = <&cru CLK_I2C4>, <&cru PCLK_I2C4>;
++		clock-names = "i2c", "pclk";
++		interrupts = <GIC_SPI 321 IRQ_TYPE_LEVEL_HIGH 0>;
++		pinctrl-0 = <&i2c4m0_xfer>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	i2c5: i2c@fead0000 {
++		compatible = "rockchip,rk3588-i2c", "rockchip,rk3399-i2c";
++		reg = <0x0 0xfead0000 0x0 0x1000>;
++		clocks = <&cru CLK_I2C5>, <&cru PCLK_I2C5>;
++		clock-names = "i2c", "pclk";
++		interrupts = <GIC_SPI 322 IRQ_TYPE_LEVEL_HIGH 0>;
++		pinctrl-0 = <&i2c5m0_xfer>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	spi0: spi@feb00000 {
++		compatible = "rockchip,rk3588-spi", "rockchip,rk3066-spi";
++		reg = <0x0 0xfeb00000 0x0 0x1000>;
++		interrupts = <GIC_SPI 326 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru CLK_SPI0>, <&cru PCLK_SPI0>;
++		clock-names = "spiclk", "apb_pclk";
++		dmas = <&dmac0 14>, <&dmac0 15>;
++		dma-names = "tx", "rx";
++		num-cs = <2>;
++		pinctrl-0 = <&spi0m0_cs0 &spi0m0_cs1 &spi0m0_pins>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	spi1: spi@feb10000 {
++		compatible = "rockchip,rk3588-spi", "rockchip,rk3066-spi";
++		reg = <0x0 0xfeb10000 0x0 0x1000>;
++		interrupts = <GIC_SPI 327 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru CLK_SPI1>, <&cru PCLK_SPI1>;
++		clock-names = "spiclk", "apb_pclk";
++		dmas = <&dmac0 16>, <&dmac0 17>;
++		dma-names = "tx", "rx";
++		num-cs = <2>;
++		pinctrl-0 = <&spi1m1_cs0 &spi1m1_cs1 &spi1m1_pins>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	spi2: spi@feb20000 {
++		compatible = "rockchip,rk3588-spi", "rockchip,rk3066-spi";
++		reg = <0x0 0xfeb20000 0x0 0x1000>;
++		interrupts = <GIC_SPI 328 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru CLK_SPI2>, <&cru PCLK_SPI2>;
++		clock-names = "spiclk", "apb_pclk";
++		dmas = <&dmac1 15>, <&dmac1 16>;
++		dma-names = "tx", "rx";
++		num-cs = <2>;
++		pinctrl-0 = <&spi2m2_cs0 &spi2m2_cs1 &spi2m2_pins>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	spi3: spi@feb30000 {
++		compatible = "rockchip,rk3588-spi", "rockchip,rk3066-spi";
++		reg = <0x0 0xfeb30000 0x0 0x1000>;
++		interrupts = <GIC_SPI 329 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru CLK_SPI3>, <&cru PCLK_SPI3>;
++		clock-names = "spiclk", "apb_pclk";
++		dmas = <&dmac1 17>, <&dmac1 18>;
++		dma-names = "tx", "rx";
++		num-cs = <2>;
++		pinctrl-0 = <&spi3m1_cs0 &spi3m1_cs1 &spi3m1_pins>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	uart1: serial@feb40000 {
++		compatible = "rockchip,rk3588-uart", "snps,dw-apb-uart";
++		reg = <0x0 0xfeb40000 0x0 0x100>;
++		interrupts = <GIC_SPI 332 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru SCLK_UART1>, <&cru PCLK_UART1>;
++		clock-names = "baudclk", "apb_pclk";
++		dmas = <&dmac0 8>, <&dmac0 9>;
++		dma-names = "tx", "rx";
++		pinctrl-0 = <&uart1m1_xfer>;
++		pinctrl-names = "default";
++		reg-io-width = <4>;
++		reg-shift = <2>;
++		status = "disabled";
++	};
++
++	uart2: serial@feb50000 {
++		compatible = "rockchip,rk3588-uart", "snps,dw-apb-uart";
++		reg = <0x0 0xfeb50000 0x0 0x100>;
++		interrupts = <GIC_SPI 333 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru SCLK_UART2>, <&cru PCLK_UART2>;
++		clock-names = "baudclk", "apb_pclk";
++		dmas = <&dmac0 10>, <&dmac0 11>;
++		dma-names = "tx", "rx";
++		pinctrl-0 = <&uart2m1_xfer>;
++		pinctrl-names = "default";
++		reg-io-width = <4>;
++		reg-shift = <2>;
++		status = "disabled";
++	};
++
++	uart3: serial@feb60000 {
++		compatible = "rockchip,rk3588-uart", "snps,dw-apb-uart";
++		reg = <0x0 0xfeb60000 0x0 0x100>;
++		interrupts = <GIC_SPI 334 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru SCLK_UART3>, <&cru PCLK_UART3>;
++		clock-names = "baudclk", "apb_pclk";
++		dmas = <&dmac0 12>, <&dmac0 13>;
++		dma-names = "tx", "rx";
++		pinctrl-0 = <&uart3m1_xfer>;
++		pinctrl-names = "default";
++		reg-io-width = <4>;
++		reg-shift = <2>;
++		status = "disabled";
++	};
++
++	uart4: serial@feb70000 {
++		compatible = "rockchip,rk3588-uart", "snps,dw-apb-uart";
++		reg = <0x0 0xfeb70000 0x0 0x100>;
++		interrupts = <GIC_SPI 335 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru SCLK_UART4>, <&cru PCLK_UART4>;
++		clock-names = "baudclk", "apb_pclk";
++		dmas = <&dmac1 9>, <&dmac1 10>;
++		dma-names = "tx", "rx";
++		pinctrl-0 = <&uart4m1_xfer>;
++		pinctrl-names = "default";
++		reg-io-width = <4>;
++		reg-shift = <2>;
++		status = "disabled";
++	};
++
++	uart5: serial@feb80000 {
++		compatible = "rockchip,rk3588-uart", "snps,dw-apb-uart";
++		reg = <0x0 0xfeb80000 0x0 0x100>;
++		interrupts = <GIC_SPI 336 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru SCLK_UART5>, <&cru PCLK_UART5>;
++		clock-names = "baudclk", "apb_pclk";
++		dmas = <&dmac1 11>, <&dmac1 12>;
++		dma-names = "tx", "rx";
++		pinctrl-0 = <&uart5m1_xfer>;
++		pinctrl-names = "default";
++		reg-io-width = <4>;
++		reg-shift = <2>;
++		status = "disabled";
++	};
++
++	uart6: serial@feb90000 {
++		compatible = "rockchip,rk3588-uart", "snps,dw-apb-uart";
++		reg = <0x0 0xfeb90000 0x0 0x100>;
++		interrupts = <GIC_SPI 337 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru SCLK_UART6>, <&cru PCLK_UART6>;
++		clock-names = "baudclk", "apb_pclk";
++		dmas = <&dmac1 13>, <&dmac1 14>;
++		dma-names = "tx", "rx";
++		pinctrl-0 = <&uart6m1_xfer>;
++		pinctrl-names = "default";
++		reg-io-width = <4>;
++		reg-shift = <2>;
++		status = "disabled";
++	};
++
++	uart7: serial@feba0000 {
++		compatible = "rockchip,rk3588-uart", "snps,dw-apb-uart";
++		reg = <0x0 0xfeba0000 0x0 0x100>;
++		interrupts = <GIC_SPI 338 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru SCLK_UART7>, <&cru PCLK_UART7>;
++		clock-names = "baudclk", "apb_pclk";
++		dmas = <&dmac2 7>, <&dmac2 8>;
++		dma-names = "tx", "rx";
++		pinctrl-0 = <&uart7m1_xfer>;
++		pinctrl-names = "default";
++		reg-io-width = <4>;
++		reg-shift = <2>;
++		status = "disabled";
++	};
++
++	uart8: serial@febb0000 {
++		compatible = "rockchip,rk3588-uart", "snps,dw-apb-uart";
++		reg = <0x0 0xfebb0000 0x0 0x100>;
++		interrupts = <GIC_SPI 339 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru SCLK_UART8>, <&cru PCLK_UART8>;
++		clock-names = "baudclk", "apb_pclk";
++		dmas = <&dmac2 9>, <&dmac2 10>;
++		dma-names = "tx", "rx";
++		pinctrl-0 = <&uart8m1_xfer>;
++		pinctrl-names = "default";
++		reg-io-width = <4>;
++		reg-shift = <2>;
++		status = "disabled";
++	};
++
++	uart9: serial@febc0000 {
++		compatible = "rockchip,rk3588-uart", "snps,dw-apb-uart";
++		reg = <0x0 0xfebc0000 0x0 0x100>;
++		interrupts = <GIC_SPI 340 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru SCLK_UART9>, <&cru PCLK_UART9>;
++		clock-names = "baudclk", "apb_pclk";
++		dmas = <&dmac2 11>, <&dmac2 12>;
++		dma-names = "tx", "rx";
++		pinctrl-0 = <&uart9m1_xfer>;
++		pinctrl-names = "default";
++		reg-io-width = <4>;
++		reg-shift = <2>;
++		status = "disabled";
++	};
++
++	pwm4: pwm@febd0000 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebd0000 0x0 0x10>;
++		clocks = <&cru CLK_PWM1>, <&cru PCLK_PWM1>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm4m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm5: pwm@febd0010 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebd0010 0x0 0x10>;
++		clocks = <&cru CLK_PWM1>, <&cru PCLK_PWM1>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm5m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm6: pwm@febd0020 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebd0020 0x0 0x10>;
++		clocks = <&cru CLK_PWM1>, <&cru PCLK_PWM1>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm6m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm7: pwm@febd0030 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebd0030 0x0 0x10>;
++		clocks = <&cru CLK_PWM1>, <&cru PCLK_PWM1>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm7m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm8: pwm@febe0000 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebe0000 0x0 0x10>;
++		clocks = <&cru CLK_PWM2>, <&cru PCLK_PWM2>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm8m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm9: pwm@febe0010 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebe0010 0x0 0x10>;
++		clocks = <&cru CLK_PWM2>, <&cru PCLK_PWM2>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm9m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm10: pwm@febe0020 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebe0020 0x0 0x10>;
++		clocks = <&cru CLK_PWM2>, <&cru PCLK_PWM2>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm10m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm11: pwm@febe0030 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebe0030 0x0 0x10>;
++		clocks = <&cru CLK_PWM2>, <&cru PCLK_PWM2>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm11m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm12: pwm@febf0000 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebf0000 0x0 0x10>;
++		clocks = <&cru CLK_PWM3>, <&cru PCLK_PWM3>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm12m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm13: pwm@febf0010 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebf0010 0x0 0x10>;
++		clocks = <&cru CLK_PWM3>, <&cru PCLK_PWM3>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm13m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm14: pwm@febf0020 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebf0020 0x0 0x10>;
++		clocks = <&cru CLK_PWM3>, <&cru PCLK_PWM3>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm14m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	pwm15: pwm@febf0030 {
++		compatible = "rockchip,rk3588-pwm", "rockchip,rk3328-pwm";
++		reg = <0x0 0xfebf0030 0x0 0x10>;
++		clocks = <&cru CLK_PWM3>, <&cru PCLK_PWM3>;
++		clock-names = "pwm", "pclk";
++		pinctrl-0 = <&pwm15m0_pins>;
++		pinctrl-names = "default";
++		#pwm-cells = <3>;
++		status = "disabled";
++	};
++
++	i2c6: i2c@fec80000 {
++		compatible = "rockchip,rk3588-i2c", "rockchip,rk3399-i2c";
++		reg = <0x0 0xfec80000 0x0 0x1000>;
++		clocks = <&cru CLK_I2C6>, <&cru PCLK_I2C6>;
++		clock-names = "i2c", "pclk";
++		interrupts = <GIC_SPI 323 IRQ_TYPE_LEVEL_HIGH 0>;
++		pinctrl-0 = <&i2c6m0_xfer>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	i2c7: i2c@fec90000 {
++		compatible = "rockchip,rk3588-i2c", "rockchip,rk3399-i2c";
++		reg = <0x0 0xfec90000 0x0 0x1000>;
++		clocks = <&cru CLK_I2C7>, <&cru PCLK_I2C7>;
++		clock-names = "i2c", "pclk";
++		interrupts = <GIC_SPI 324 IRQ_TYPE_LEVEL_HIGH 0>;
++		pinctrl-0 = <&i2c7m0_xfer>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	i2c8: i2c@feca0000 {
++		compatible = "rockchip,rk3588-i2c", "rockchip,rk3399-i2c";
++		reg = <0x0 0xfeca0000 0x0 0x1000>;
++		clocks = <&cru CLK_I2C8>, <&cru PCLK_I2C8>;
++		clock-names = "i2c", "pclk";
++		interrupts = <GIC_SPI 325 IRQ_TYPE_LEVEL_HIGH 0>;
++		pinctrl-0 = <&i2c8m0_xfer>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	spi4: spi@fecb0000 {
++		compatible = "rockchip,rk3588-spi", "rockchip,rk3066-spi";
++		reg = <0x0 0xfecb0000 0x0 0x1000>;
++		interrupts = <GIC_SPI 330 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru CLK_SPI4>, <&cru PCLK_SPI4>;
++		clock-names = "spiclk", "apb_pclk";
++		dmas = <&dmac2 13>, <&dmac2 14>;
++		dma-names = "tx", "rx";
++		num-cs = <2>;
++		pinctrl-0 = <&spi4m0_cs0 &spi4m0_cs1 &spi4m0_pins>;
++		pinctrl-names = "default";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
++	dmac2: dma-controller@fed10000 {
++		compatible = "arm,pl330", "arm,primecell";
++		reg = <0x0 0xfed10000 0x0 0x4000>;
++		interrupts = <GIC_SPI 90 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 91 IRQ_TYPE_LEVEL_HIGH 0>;
++		arm,pl330-periph-burst;
++		clocks = <&cru ACLK_DMAC2>;
++		clock-names = "apb_pclk";
++		#dma-cells = <1>;
++	};
++
++	system_sram2: sram@ff001000 {
++		compatible = "mmio-sram";
++		reg = <0x0 0xff001000 0x0 0xef000>;
++		ranges = <0x0 0x0 0xff001000 0xef000>;
++		#address-cells = <1>;
++		#size-cells = <1>;
++	};
++
++	pinctrl: pinctrl {
++		compatible = "rockchip,rk3588-pinctrl";
++		ranges;
++		rockchip,grf = <&ioc>;
++		#address-cells = <2>;
++		#size-cells = <2>;
++
++		gpio0: gpio@fd8a0000 {
++			compatible = "rockchip,gpio-bank";
++			reg = <0x0 0xfd8a0000 0x0 0x100>;
++			interrupts = <GIC_SPI 277 IRQ_TYPE_LEVEL_HIGH 0>;
++			clocks = <&cru PCLK_GPIO0>, <&cru DBCLK_GPIO0>;
++			gpio-controller;
++			gpio-ranges = <&pinctrl 0 0 32>;
++			interrupt-controller;
++			#gpio-cells = <2>;
++			#interrupt-cells = <2>;
++		};
++
++		gpio1: gpio@fec20000 {
++			compatible = "rockchip,gpio-bank";
++			reg = <0x0 0xfec20000 0x0 0x100>;
++			interrupts = <GIC_SPI 278 IRQ_TYPE_LEVEL_HIGH 0>;
++			clocks = <&cru PCLK_GPIO1>, <&cru DBCLK_GPIO1>;
++			gpio-controller;
++			gpio-ranges = <&pinctrl 0 32 32>;
++			interrupt-controller;
++			#gpio-cells = <2>;
++			#interrupt-cells = <2>;
++		};
++
++		gpio2: gpio@fec30000 {
++			compatible = "rockchip,gpio-bank";
++			reg = <0x0 0xfec30000 0x0 0x100>;
++			interrupts = <GIC_SPI 279 IRQ_TYPE_LEVEL_HIGH 0>;
++			clocks = <&cru PCLK_GPIO2>, <&cru DBCLK_GPIO2>;
++			gpio-controller;
++			gpio-ranges = <&pinctrl 0 64 32>;
++			interrupt-controller;
++			#gpio-cells = <2>;
++			#interrupt-cells = <2>;
++		};
++
++		gpio3: gpio@fec40000 {
++			compatible = "rockchip,gpio-bank";
++			reg = <0x0 0xfec40000 0x0 0x100>;
++			interrupts = <GIC_SPI 280 IRQ_TYPE_LEVEL_HIGH 0>;
++			clocks = <&cru PCLK_GPIO3>, <&cru DBCLK_GPIO3>;
++			gpio-controller;
++			gpio-ranges = <&pinctrl 0 96 32>;
++			interrupt-controller;
++			#gpio-cells = <2>;
++			#interrupt-cells = <2>;
++		};
++
++		gpio4: gpio@fec50000 {
++			compatible = "rockchip,gpio-bank";
++			reg = <0x0 0xfec50000 0x0 0x100>;
++			interrupts = <GIC_SPI 281 IRQ_TYPE_LEVEL_HIGH 0>;
++			clocks = <&cru PCLK_GPIO4>, <&cru DBCLK_GPIO4>;
++			gpio-controller;
++			gpio-ranges = <&pinctrl 0 128 32>;
++			interrupt-controller;
++			#gpio-cells = <2>;
++			#interrupt-cells = <2>;
++		};
++	};
++};
++
++#include "rk3588s-pinctrl.dtsi"
diff --git a/target/linux/rockchip/patches-6.1/099-arm64-dts-rockchip-Add-rk3588-evb1-board.patch b/target/linux/rockchip/patches-6.1/099-arm64-dts-rockchip-Add-rk3588-evb1-board.patch
new file mode 100644
index 0000000000..abcba2a282
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/099-arm64-dts-rockchip-Add-rk3588-evb1-board.patch
@@ -0,0 +1,163 @@
+From be1bd63277dcc65665eed8599d58099e1dc541f1 Mon Sep 17 00:00:00 2001
+From: Kever Yang <kever.yang@rock-chips.com>
+Date: Mon, 9 Jan 2023 16:57:59 +0100
+Subject: [PATCH 099/383] arm64: dts: rockchip: Add rk3588-evb1 board
+
+Add board file for the RK3588 evaluation board. While the hardware
+offers plenty of peripherals and connectivity this basic implementation
+just handles things required to successfully boot Linux from eMMC,
+connect via UART or Ethernet.
+
+Signed-off-by: Kever Yang <kever.yang@rock-chips.com>
+[rebase, update commit message, use EVB1 for SoC bringup]
+Reviewed-by: Michael Riesch <michael.riesch@wolfvision.net>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Reviewed-by: Jagan Teki <jagan@edgeble.ai>
+Link: https://lore.kernel.org/r/20230109155801.51642-6-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../boot/dts/rockchip/rk3588-evb1-v10.dts     | 129 ++++++++++++++++++
+ 2 files changed, 130 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -86,3 +86,4 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-lu
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-odroid-m1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-radxa-e25.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-rock-3a.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-v10.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
+@@ -0,0 +1,129 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ *
++ */
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rk3588.dtsi"
++
++/ {
++	model = "Rockchip RK3588 EVB1 V10 Board";
++	compatible = "rockchip,rk3588-evb1-v10", "rockchip,rk3588";
++
++	aliases {
++		mmc0 = &sdhci;
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	backlight: backlight {
++		compatible = "pwm-backlight";
++		power-supply = <&vcc12v_dcin>;
++		pwms = <&pwm2 0 25000 0>;
++	};
++
++	vcc12v_dcin: vcc12v-dcin-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc12v_dcin";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <12000000>;
++		regulator-max-microvolt = <12000000>;
++	};
++
++	vcc5v0_sys: vcc5v0-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc12v_dcin>;
++	};
++};
++
++&gmac0 {
++	clock_in_out = "output";
++	phy-handle = <&rgmii_phy>;
++	phy-mode = "rgmii-rxid";
++	pinctrl-0 = <&gmac0_miim
++		     &gmac0_tx_bus2
++		     &gmac0_rx_bus2
++		     &gmac0_rgmii_clk
++		     &gmac0_rgmii_bus>;
++	pinctrl-names = "default";
++	rx_delay = <0x00>;
++	tx_delay = <0x43>;
++	status = "okay";
++};
++
++&i2c2 {
++	status = "okay";
++
++	hym8563: rtc@51 {
++		compatible = "haoyu,hym8563";
++		reg = <0x51>;
++		#clock-cells = <0>;
++		clock-output-names = "hym8563";
++		pinctrl-names = "default";
++		pinctrl-0 = <&hym8563_int>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PD4 IRQ_TYPE_LEVEL_LOW>;
++		wakeup-source;
++	};
++};
++
++&mdio0 {
++	rgmii_phy: ethernet-phy@1 {
++		/* RTL8211F */
++		compatible = "ethernet-phy-id001c.c916";
++		reg = <0x1>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&rtl8211f_rst>;
++		reset-assert-us = <20000>;
++		reset-deassert-us = <100000>;
++		reset-gpios = <&gpio4 RK_PB3 GPIO_ACTIVE_LOW>;
++	};
++};
++
++&pinctrl {
++	rtl8211f {
++		rtl8211f_rst: rtl8211f-rst {
++			rockchip,pins = <4 RK_PB3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++	};
++
++	hym8563 {
++		hym8563_int: hym8563-int {
++			rockchip,pins = <0 RK_PD4 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++};
++
++&pwm2 {
++	status = "okay";
++};
++
++&sdhci {
++	bus-width = <8>;
++	no-sdio;
++	no-sd;
++	non-removable;
++	max-frequency = <200000000>;
++	mmc-hs400-1_8v;
++	mmc-hs400-enhanced-strobe;
++	status = "okay";
++};
++
++&uart2 {
++	pinctrl-0 = <&uart2m0_xfer>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/100-arm64-dts-rockchip-Add-rock-5a-board.patch b/target/linux/rockchip/patches-6.1/100-arm64-dts-rockchip-Add-rock-5a-board.patch
new file mode 100644
index 0000000000..73f697548b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/100-arm64-dts-rockchip-Add-rock-5a-board.patch
@@ -0,0 +1,105 @@
+From 70746bf047e0ece5084d1227d6b2db64764d5ea1 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 9 Jan 2023 16:58:00 +0100
+Subject: [PATCH 100/383] arm64: dts: rockchip: Add rock-5a board
+
+Add board file for the RK3588s Rock 5A board. While the hardware
+offers plenty of peripherals and connectivity this basic implementation
+just handles things required to access eMMC, UART and Ethernet (i.e.
+enough to successfully boot Linux).
+
+Reviewed-by: Michael Riesch <michael.riesch@wolfvision.net>
+Tested-by: Benjamin Gaignard <benjamin.gaignard@collabora.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230109155801.51642-7-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |  1 +
+ .../boot/dts/rockchip/rk3588s-rock-5a.dts     | 73 +++++++++++++++++++
+ 2 files changed, 74 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -87,3 +87,4 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-od
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-radxa-e25.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-rock-3a.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-v10.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-rock-5a.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts
+@@ -0,0 +1,73 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rk3588s.dtsi"
++
++/ {
++	model = "Radxa ROCK 5 Model A";
++	compatible = "radxa,rock-5a", "rockchip,rk3588s";
++
++	aliases {
++		mmc1 = &sdhci;
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++};
++
++&gmac1 {
++	clock_in_out = "output";
++	phy-handle = <&rgmii_phy1>;
++	phy-mode = "rgmii-rxid";
++	pinctrl-0 = <&gmac1_miim
++		     &gmac1_tx_bus2
++		     &gmac1_rx_bus2
++		     &gmac1_rgmii_clk
++		     &gmac1_rgmii_bus>;
++	pinctrl-names = "default";
++	tx_delay = <0x3a>;
++	status = "okay";
++};
++
++&mdio1 {
++	rgmii_phy1: ethernet-phy@1 {
++		/* RTL8211F */
++		compatible = "ethernet-phy-id001c.c916";
++		reg = <0x1>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&rtl8211f_rst>;
++		reset-assert-us = <20000>;
++		reset-deassert-us = <100000>;
++		reset-gpios = <&gpio3 RK_PB7 GPIO_ACTIVE_LOW>;
++	};
++};
++
++&pinctrl {
++	rtl8211f {
++		rtl8211f_rst: rtl8211f-rst {
++			rockchip,pins = <3 RK_PB7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++	};
++};
++
++&sdhci {
++	bus-width = <8>;
++	no-sdio;
++	no-sd;
++	non-removable;
++	max-frequency = <200000000>;
++	mmc-hs400-1_8v;
++	mmc-hs400-enhanced-strobe;
++	status = "okay";
++};
++
++&uart2 {
++	pinctrl-0 = <&uart2m0_xfer>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/101-arm64-dts-rockchip-Add-rock-5b-board.patch b/target/linux/rockchip/patches-6.1/101-arm64-dts-rockchip-Add-rock-5b-board.patch
new file mode 100644
index 0000000000..021e72d16d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/101-arm64-dts-rockchip-Add-rock-5b-board.patch
@@ -0,0 +1,79 @@
+From 17668bfb96ee2d1cb98c9e30d051cd7f55659d7e Mon Sep 17 00:00:00 2001
+From: Christopher Obbard <chris.obbard@collabora.com>
+Date: Mon, 9 Jan 2023 16:58:01 +0100
+Subject: [PATCH 101/383] arm64: dts: rockchip: Add rock-5b board
+
+Add board file for the RK3588 Rock 5B board. This is a basic
+implementation which just brings up the eMMC and UART which is
+enough to successfully boot Linux.
+
+The ethernet controller is connected via PCIe so support will
+come in a follow-up patch.
+
+Signed-off-by: Christopher Obbard <chris.obbard@collabora.com>
+Reviewed-by: Michael Riesch <michael.riesch@wolfvision.net>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230109155801.51642-8-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |  1 +
+ .../boot/dts/rockchip/rk3588-rock-5b.dts      | 44 +++++++++++++++++++
+ 2 files changed, 45 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -87,4 +87,5 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-od
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-radxa-e25.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-rock-3a.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-v10.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-rock-5b.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-rock-5a.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+@@ -0,0 +1,44 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include "rk3588.dtsi"
++
++/ {
++	model = "Radxa ROCK 5 Model B";
++	compatible = "radxa,rock-5b", "rockchip,rk3588";
++
++	aliases {
++		mmc1 = &sdhci;
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	vcc5v0_sys: vcc5v0-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++};
++
++&sdhci {
++	bus-width = <8>;
++	no-sdio;
++	no-sd;
++	non-removable;
++	max-frequency = <200000000>;
++	mmc-hs400-1_8v;
++	mmc-hs400-enhanced-strobe;
++	status = "okay";
++};
++
++&uart2 {
++	pinctrl-0 = <&uart2m0_xfer>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/102-arm64-dts-rockchip-Update-sdhci-alias-for-rock-5a.patch b/target/linux/rockchip/patches-6.1/102-arm64-dts-rockchip-Update-sdhci-alias-for-rock-5a.patch
new file mode 100644
index 0000000000..44c80215af
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/102-arm64-dts-rockchip-Update-sdhci-alias-for-rock-5a.patch
@@ -0,0 +1,29 @@
+From 4d7fef3e2b8cc2be36e61b2cf8628e7cb39b0331 Mon Sep 17 00:00:00 2001
+From: Christopher Obbard <chris.obbard@collabora.com>
+Date: Tue, 10 Jan 2023 19:53:50 +0000
+Subject: [PATCH 102/383] arm64: dts: rockchip: Update sdhci alias for rock-5a
+
+In the previous version, the sdhci alias was set to mmc1: an artifact
+leftover from the port from vendor kernel. Update the alias to mmc0 to
+match the device's boot order.
+
+Fixes: a4a8f1afb360 ("arm64: dts: rockchip: Add rock-5a board")
+Signed-off-by: Christopher Obbard <chris.obbard@collabora.com>
+Link: https://lore.kernel.org/r/20230110195352.272360-2-chris.obbard@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts
+@@ -11,7 +11,7 @@
+ 	compatible = "radxa,rock-5a", "rockchip,rk3588s";
+ 
+ 	aliases {
+-		mmc1 = &sdhci;
++		mmc0 = &sdhci;
+ 		serial2 = &uart2;
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/103-arm64-dts-rockchip-Remove-empty-line-from-rock-5a.patch b/target/linux/rockchip/patches-6.1/103-arm64-dts-rockchip-Remove-empty-line-from-rock-5a.patch
new file mode 100644
index 0000000000..6fb94a3b43
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/103-arm64-dts-rockchip-Remove-empty-line-from-rock-5a.patch
@@ -0,0 +1,26 @@
+From 67dd5f396038773b9034ce374ce3a60562069fd1 Mon Sep 17 00:00:00 2001
+From: Christopher Obbard <chris.obbard@collabora.com>
+Date: Tue, 10 Jan 2023 19:53:51 +0000
+Subject: [PATCH 103/383] arm64: dts: rockchip: Remove empty line from rock-5a
+
+There is a line which is empty. Remove it.
+
+Fixes: a4a8f1afb360 ("arm64: dts: rockchip: Add rock-5a board")
+Signed-off-by: Christopher Obbard <chris.obbard@collabora.com>
+Link: https://lore.kernel.org/r/20230110195352.272360-3-chris.obbard@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts | 1 -
+ 1 file changed, 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts
+@@ -52,7 +52,6 @@
+ 		rtl8211f_rst: rtl8211f-rst {
+ 			rockchip,pins = <3 RK_PB7 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+-
+ 	};
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/104-arm64-dts-rockchip-Update-sdhci-alias-for-rock-5b.patch b/target/linux/rockchip/patches-6.1/104-arm64-dts-rockchip-Update-sdhci-alias-for-rock-5b.patch
new file mode 100644
index 0000000000..43a76bf762
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/104-arm64-dts-rockchip-Update-sdhci-alias-for-rock-5b.patch
@@ -0,0 +1,29 @@
+From e30c39a20633f13637c088a8767e3dd008ff6ff0 Mon Sep 17 00:00:00 2001
+From: Christopher Obbard <chris.obbard@collabora.com>
+Date: Tue, 10 Jan 2023 19:53:52 +0000
+Subject: [PATCH 104/383] arm64: dts: rockchip: Update sdhci alias for rock-5b
+
+In the previous version, the sdhci alias was set to mmc1: an artifact
+leftover from the port from vendor kernel. Update the alias to mmc0 to
+match the device's boot order.
+
+Fixes: 6fb2d1549786 ("arm64: dts: rockchip: Add rock-5b board")
+Signed-off-by: Christopher Obbard <chris.obbard@collabora.com>
+Link: https://lore.kernel.org/r/20230110195352.272360-4-chris.obbard@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+@@ -9,7 +9,7 @@
+ 	compatible = "radxa,rock-5b", "rockchip,rk3588";
+ 
+ 	aliases {
+-		mmc1 = &sdhci;
++		mmc0 = &sdhci;
+ 		serial2 = &uart2;
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/105-arm64-dts-rockchip-assign-rate-to-clk_rtc_32k-on-rk3.patch b/target/linux/rockchip/patches-6.1/105-arm64-dts-rockchip-assign-rate-to-clk_rtc_32k-on-rk3.patch
new file mode 100644
index 0000000000..69a7b3bf96
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/105-arm64-dts-rockchip-assign-rate-to-clk_rtc_32k-on-rk3.patch
@@ -0,0 +1,34 @@
+From 8b5c6876e115144379c646c3c4d4beb86d86adba Mon Sep 17 00:00:00 2001
+From: Jonas Karlman <jonas@kwiboo.se>
+Date: Tue, 10 Jan 2023 22:55:50 +0000
+Subject: [PATCH 105/383] arm64: dts: rockchip: assign rate to clk_rtc_32k on
+ rk356x
+
+clk_rtc_32k and its child clock clk_hdmi_cec detauls to a rate of 24 MHz
+and not to 32 kHz on RK356x.
+
+Fix this by assigning clk_rtc_32k a rate of 32768, also assign the parent
+to clk_rtc32k_frac.
+
+Signed-off-by: Jonas Karlman <jonas@kwiboo.se>
+Link: https://lore.kernel.org/r/20230110225547.1563119-2-jonas@kwiboo.se
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk356x.dtsi | 5 +++--
+ 1 file changed, 3 insertions(+), 2 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk356x.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk356x.dtsi
+@@ -422,8 +422,9 @@
+ 		clock-names = "xin24m";
+ 		#clock-cells = <1>;
+ 		#reset-cells = <1>;
+-		assigned-clocks = <&cru PLL_GPLL>, <&pmucru PLL_PPLL>;
+-		assigned-clock-rates = <1200000000>, <200000000>;
++		assigned-clocks = <&pmucru CLK_RTC_32K>, <&cru PLL_GPLL>, <&pmucru PLL_PPLL>;
++		assigned-clock-rates = <32768>, <1200000000>, <200000000>;
++		assigned-clock-parents = <&pmucru CLK_RTC32K_FRAC>;
+ 		rockchip,grf = <&grf>;
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/106-arm64-dts-rockchip-fix-hdmi-cec-on-rock-3a.patch b/target/linux/rockchip/patches-6.1/106-arm64-dts-rockchip-fix-hdmi-cec-on-rock-3a.patch
new file mode 100644
index 0000000000..20b4e30738
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/106-arm64-dts-rockchip-fix-hdmi-cec-on-rock-3a.patch
@@ -0,0 +1,33 @@
+From 6b7d515e904851a2c7939bd08740eb0359bc89d0 Mon Sep 17 00:00:00 2001
+From: Jonas Karlman <jonas@kwiboo.se>
+Date: Tue, 10 Jan 2023 22:55:59 +0000
+Subject: [PATCH 106/383] arm64: dts: rockchip: fix hdmi cec on rock-3a
+
+HDMI CEC is configured to select HDMITX_CEC_M0 function of GPIO0_C7 by
+default in rk356x.dtsi. On Radxa ROCK 3 Model A it is routed to
+HDMITX_CEC_M1 according to board schematic [1].
+
+Fix HDMI CEC by overriding pinctrl in hdmi node to select HDMITX_CEC_M1.
+
+[1] https://dl.radxa.com/rock3/docs/hw/3a/ROCK-3A-V1.3-SCH.pdf
+
+Signed-off-by: Jonas Karlman <jonas@kwiboo.se>
+Link: https://lore.kernel.org/r/20230110225547.1563119-3-jonas@kwiboo.se
+[added pinctrl-names duplicate]
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
+@@ -279,6 +279,8 @@
+ &hdmi {
+ 	avdd-0v9-supply = <&vdda0v9_image>;
+ 	avdd-1v8-supply = <&vcca1v8_image>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&hdmitx_scl &hdmitx_sda &hdmitxm1_cec>;
+ 	status = "okay";
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/106-r4s-openwrt-leds.patch b/target/linux/rockchip/patches-6.1/106-r4s-openwrt-leds.patch
deleted file mode 100644
index d7579d61e9..0000000000
--- a/target/linux/rockchip/patches-6.1/106-r4s-openwrt-leds.patch
+++ /dev/null
@@ -1,16 +0,0 @@
---- a/arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dts
-+++ b/arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dts
-@@ -19,6 +19,13 @@
- 	model = "FriendlyElec NanoPi R4S";
- 	compatible = "friendlyarm,nanopi-r4s", "rockchip,rk3399";
- 
-+	aliases {
-+		led-boot = &sys_led;
-+		led-failsafe = &sys_led;
-+		led-running = &sys_led;
-+		led-upgrade = &sys_led;
-+	};
-+
- 	/delete-node/ display-subsystem;
- 
- 	gpio-leds {
diff --git a/target/linux/rockchip/patches-6.1/107-arm64-dts-rockchip-Update-LED-properties-for-Orange-.patch b/target/linux/rockchip/patches-6.1/107-arm64-dts-rockchip-Update-LED-properties-for-Orange-.patch
deleted file mode 100644
index b1e26d4e3e..0000000000
--- a/target/linux/rockchip/patches-6.1/107-arm64-dts-rockchip-Update-LED-properties-for-Orange-.patch
+++ /dev/null
@@ -1,56 +0,0 @@
-From d2166e3b3680bd2b206aebf1e1ce4c0d346f3c50 Mon Sep 17 00:00:00 2001
-From: Tianling Shen <cnsztl@gmail.com>
-Date: Fri, 19 May 2023 12:10:52 +0800
-Subject: [PATCH] arm64: dts: rockchip: Update LED properties for Orange Pi R1
- Plus
-
-Add OpenWrt's LED aliases for showing system status.
-Also replace function/color with legacy label as OpenWrt relys on it
-to update LED settings.
-
-Signed-off-by: Tianling Shen <cnsztl@gmail.com>
----
- .../dts/rockchip/rk3328-orangepi-r1-plus.dts    | 17 +++++++++--------
- 1 file changed, 9 insertions(+), 8 deletions(-)
-
---- a/arch/arm64/boot/dts/rockchip/rk3328-orangepi-r1-plus.dts
-+++ b/arch/arm64/boot/dts/rockchip/rk3328-orangepi-r1-plus.dts
-@@ -17,6 +17,11 @@
- 	aliases {
- 		ethernet1 = &rtl8153;
- 		mmc0 = &sdmmc;
-+
-+		led-boot = &status_led;
-+		led-failsafe = &status_led;
-+		led-running = &status_led;
-+		led-upgrade = &status_led;
- 	};
- 
- 	chosen {
-@@ -36,22 +41,18 @@
- 		pinctrl-names = "default";
- 
- 		led-0 {
--			function = LED_FUNCTION_LAN;
--			color = <LED_COLOR_ID_GREEN>;
- 			gpios = <&gpio2 RK_PB7 GPIO_ACTIVE_HIGH>;
-+			label = "green:lan";
- 		};
- 
--		led-1 {
--			function = LED_FUNCTION_STATUS;
--			color = <LED_COLOR_ID_RED>;
-+		status_led: led-1 {
- 			gpios = <&gpio3 RK_PC5 GPIO_ACTIVE_HIGH>;
--			linux,default-trigger = "heartbeat";
-+			label = "red:status";
- 		};
- 
- 		led-2 {
--			function = LED_FUNCTION_WAN;
--			color = <LED_COLOR_ID_GREEN>;
- 			gpios = <&gpio2 RK_PC2 GPIO_ACTIVE_HIGH>;
-+			label = "green:wan";
- 		};
- 	};
- 
diff --git a/target/linux/rockchip/patches-6.1/107-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-A-S.patch b/target/linux/rockchip/patches-6.1/107-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-A-S.patch
new file mode 100644
index 0000000000..89a6f5c01a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/107-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-A-S.patch
@@ -0,0 +1,68 @@
+From 83352781760580b7e638e7a4556a27f56a37832f Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@edgeble.ai>
+Date: Tue, 10 Jan 2023 19:16:57 +0530
+Subject: [PATCH 107/383] arm64: dts: rockchip: rk3588: Add Edgeble Neu6 Model
+ A SoM
+
+Neural Compute Module 6(Neu2) is a 96boards SoM-CB compute module
+based on Rockchip RK3588 from Edgeble AI.
+
+General features:
+- Rockchip RK3588
+- up to 32GB LPDDR4x
+- up to 128GB eMMC
+- 2x MIPI CSI2 FPC
+
+On module WiFi6/BT5 is available in the following Neu6 variants.
+
+Neu6 needs to mount on top of associated Edgeble IO boards for
+creating complete platform solutions.
+
+Enable eMMC for now to boot Linux successfully.
+
+Add support for Edgeble Neu6 Model A SoM.
+
+Signed-off-by: Jagan Teki <jagan@edgeble.ai>
+Link: https://lore.kernel.org/r/20230110134658.820691-2-jagan@edgeble.ai
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3588-edgeble-neu6a.dtsi    | 32 +++++++++++++++++++
+ 1 file changed, 32 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588-edgeble-neu6a.dtsi
+
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588-edgeble-neu6a.dtsi
+@@ -0,0 +1,32 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2022 Edgeble AI Technologies Pvt. Ltd.
++ */
++
++/ {
++	compatible = "edgeble,neural-compute-module-6a", "rockchip,rk3588";
++
++	aliases {
++		mmc0 = &sdhci;
++	};
++
++	vcc12v_dcin: vcc12v-dcin-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc12v_dcin";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <12000000>;
++		regulator-max-microvolt = <12000000>;
++	};
++};
++
++&sdhci {
++	bus-width = <8>;
++	no-sdio;
++	no-sd;
++	non-removable;
++	max-frequency = <200000000>;
++	mmc-hs400-1_8v;
++	mmc-hs400-enhanced-strobe;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/108-arm64-dts-rockchip-add-LED-configuration-to-Orange-P.patch b/target/linux/rockchip/patches-6.1/108-arm64-dts-rockchip-add-LED-configuration-to-Orange-P.patch
deleted file mode 100644
index 37b59925fc..0000000000
--- a/target/linux/rockchip/patches-6.1/108-arm64-dts-rockchip-add-LED-configuration-to-Orange-P.patch
+++ /dev/null
@@ -1,24 +0,0 @@
-From b46a530d12ada422b9d5b2b97059e0d3ed950b40 Mon Sep 17 00:00:00 2001
-From: Tianling Shen <cnsztl@gmail.com>
-Date: Fri, 19 May 2023 12:38:04 +0800
-Subject: [PATCH] arm64: dts: rockchip: add LED configuration to Orange Pi R1
- Plus
-
-Add the correct value for the RTL8153 LED configuration register to
-match the blink behavior of the other port on the device.
-
-Signed-off-by: Tianling Shen <cnsztl@gmail.com>
----
- arch/arm64/boot/dts/rockchip/rk3328-orangepi-r1-plus.dts | 1 +
- 1 file changed, 1 insertion(+)
-
---- a/arch/arm64/boot/dts/rockchip/rk3328-orangepi-r1-plus.dts
-+++ b/arch/arm64/boot/dts/rockchip/rk3328-orangepi-r1-plus.dts
-@@ -362,6 +362,7 @@
- 	rtl8153: device@2 {
- 		compatible = "usbbda,8153";
- 		reg = <2>;
-+		realtek,led-data = <0x87>;
- 	};
- };
- 
diff --git a/target/linux/rockchip/patches-6.1/108-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-A-I.patch b/target/linux/rockchip/patches-6.1/108-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-A-I.patch
new file mode 100644
index 0000000000..6898877cbe
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/108-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-A-I.patch
@@ -0,0 +1,68 @@
+From 597824e3fa45fc2ed527667c07d01c3dc1863f02 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@edgeble.ai>
+Date: Tue, 10 Jan 2023 19:16:58 +0530
+Subject: [PATCH 108/383] arm64: dts: rockchip: rk3588: Add Edgeble Neu6 Model
+ A IO
+
+Neural Compute Module 6(Neu6) IO board is an industrial form factor
+ready-to-use IO board from Edgeble AI.
+
+IO board offers plenty of peripherals and connectivity options and
+this patch enables basic eMMC and UART which is enough to successfully
+boot Linux.
+
+Neu6 needs to mount on top of this IO board in order to create a
+complete Edgeble Neural Compute Module 6(Neu6) IO platform.
+
+Add support for Edgeble Neu6 Model A IO Board.
+
+Signed-off-by: Jagan Teki <jagan@edgeble.ai>
+Link: https://lore.kernel.org/r/20230110134658.820691-3-jagan@edgeble.ai
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |  1 +
+ .../dts/rockchip/rk3588-edgeble-neu6a-io.dts  | 27 +++++++++++++++++++
+ 2 files changed, 28 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588-edgeble-neu6a-io.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -86,6 +86,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-lu
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-odroid-m1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-radxa-e25.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-rock-3a.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-edgeble-neu6a-io.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-v10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-rock-5b.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-rock-5a.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588-edgeble-neu6a-io.dts
+@@ -0,0 +1,27 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2022 Edgeble AI Technologies Pvt. Ltd.
++ */
++
++/dts-v1/;
++#include "rk3588.dtsi"
++#include "rk3588-edgeble-neu6a.dtsi"
++
++/ {
++	model = "Edgeble Neu6A IO Board";
++	compatible = "edgeble,neural-compute-module-6a-io",
++		     "edgeble,neural-compute-module-6a", "rockchip,rk3588";
++
++	aliases {
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++};
++
++&uart2 {
++	pinctrl-0 = <&uart2m0_xfer>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/109-arm64-dts-rockchip-add-io-domain-setting-to-rk3566-b.patch b/target/linux/rockchip/patches-6.1/109-arm64-dts-rockchip-add-io-domain-setting-to-rk3566-b.patch
new file mode 100644
index 0000000000..a0cd404ef5
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/109-arm64-dts-rockchip-add-io-domain-setting-to-rk3566-b.patch
@@ -0,0 +1,38 @@
+From c25657a6a9546070671f9f7b8ed7ceb353e3a35c Mon Sep 17 00:00:00 2001
+From: Andy Yan <andyshrk@163.com>
+Date: Thu, 29 Dec 2022 19:50:43 +0800
+Subject: [PATCH 109/383] arm64: dts: rockchip: add io domain setting to
+ rk3566-box-demo
+
+Add the missing pmu_io_domains setting, the gmac can't work well
+without this.
+
+Fixes: 2e0537b16b25 ("arm64: dts: rockchip: Add dts for rockchip rk3566 box demo board")
+Signed-off-by: Andy Yan <andyshrk@163.com>
+Link: https://lore.kernel.org/r/20221229115043.3899733-1-andyshrk@163.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3566-box-demo.dts | 11 +++++++++++
+ 1 file changed, 11 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-box-demo.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-box-demo.dts
+@@ -353,6 +353,17 @@
+ 	};
+ };
+ 
++&pmu_io_domains {
++	pmuio2-supply = <&vcc_3v3>;
++	vccio1-supply = <&vcc_3v3>;
++	vccio3-supply = <&vcc_3v3>;
++	vccio4-supply = <&vcca_1v8>;
++	vccio5-supply = <&vcc_3v3>;
++	vccio6-supply = <&vcca_1v8>;
++	vccio7-supply = <&vcc_3v3>;
++	status = "okay";
++};
++
+ &pwm0 {
+ 	status = "okay";
+ };
diff --git a/target/linux/rockchip/patches-6.1/109-nanopc-t4-add-led-aliases.patch b/target/linux/rockchip/patches-6.1/109-nanopc-t4-add-led-aliases.patch
deleted file mode 100644
index 1a80dadd48..0000000000
--- a/target/linux/rockchip/patches-6.1/109-nanopc-t4-add-led-aliases.patch
+++ /dev/null
@@ -1,16 +0,0 @@
---- a/arch/arm64/boot/dts/rockchip/rk3399-nanopc-t4.dts
-+++ b/arch/arm64/boot/dts/rockchip/rk3399-nanopc-t4.dts
-@@ -15,6 +15,13 @@
- 	model = "FriendlyElec NanoPC-T4";
- 	compatible = "friendlyarm,nanopc-t4", "rockchip,rk3399";
- 
-+	aliases {
-+		led-boot = &status_led;
-+		led-failsafe = &status_led;
-+		led-running = &status_led;
-+		led-upgrade = &status_led;
-+	};
-+
- 	vcc12v0_sys: vcc12v0-sys {
- 		compatible = "regulator-fixed";
- 		regulator-always-on;
diff --git a/target/linux/rockchip/patches-6.1/110-arm64-dts-rockchip-Enable-wifi-module-AP6398s-for-rk.patch b/target/linux/rockchip/patches-6.1/110-arm64-dts-rockchip-Enable-wifi-module-AP6398s-for-rk.patch
new file mode 100644
index 0000000000..1dccb7cdb8
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/110-arm64-dts-rockchip-Enable-wifi-module-AP6398s-for-rk.patch
@@ -0,0 +1,67 @@
+From 487d614d0cd7cc61f7ad28f2527c5dc88539f792 Mon Sep 17 00:00:00 2001
+From: Andy Yan <andyshrk@163.com>
+Date: Thu, 29 Dec 2022 19:51:11 +0800
+Subject: [PATCH 110/383] arm64: dts: rockchip: Enable wifi module AP6398s for
+ rk3566 box demo
+
+There is a AP6398s wifi/bt module on this board.
+Fix the sdmmc1 dt node to make wifi work.
+
+Signed-off-by: Andy Yan <andyshrk@163.com>
+Link: https://lore.kernel.org/r/20221229115111.3899793-1-andyshrk@163.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3566-box-demo.dts     | 24 +++++++++++++++++--
+ 1 file changed, 22 insertions(+), 2 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-box-demo.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-box-demo.dts
+@@ -324,8 +324,12 @@
+ 			rockchip,pins = <2 RK_PB1 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+ 
++		wifi_host_wake_h: wifi-host-wake-l {
++			rockchip,pins = <2 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
+ 		wifi_32k: wifi-32k {
+-			rockchip,pins = <0 RK_PB0 2 &pcfg_pull_none>;
++			rockchip,pins = <2 RK_PC6 1 &pcfg_pull_none>;
+ 		};
+ 	};
+ 
+@@ -391,9 +395,15 @@
+ };
+ 
+ &sdmmc1 {
++	/* WiFi & BT combo module AMPAK AP6398S */
++	#address-cells = <1>;
++	#size-cells = <0>;
+ 	bus-width = <4>;
++	clock-frequency = <150000000>;
++	cap-sdio-irq;
+ 	cap-sd-highspeed;
+-	disable-wp;
++	sd-uhs-sdr104;
++	keep-power-in-suspend;
+ 	mmc-pwrseq = <&sdio_pwrseq>;
+ 	non-removable;
+ 	pinctrl-names = "default";
+@@ -401,6 +411,16 @@
+ 	vmmc-supply = <&vcc_3v3>;
+ 	vqmmc-supply = <&vcca_1v8>;
+ 	status = "okay";
++
++	brcmf: wifi@1 {
++		compatible = "brcm,bcm4329-fmac";
++		reg = <1>;
++		interrupt-parent = <&gpio2>;
++		interrupts = <RK_PB2 GPIO_ACTIVE_HIGH>;
++		interrupt-names = "host-wake";
++		pinctrl-names = "default";
++		pinctrl-0 = <&wifi_host_wake_h>;
++	};
+ };
+ 
+ &spdif {
diff --git a/target/linux/rockchip/patches-6.1/110-arm64-dts-rockchip-Update-LED-properties-for-NanoPi-.patch b/target/linux/rockchip/patches-6.1/110-arm64-dts-rockchip-Update-LED-properties-for-NanoPi-.patch
deleted file mode 100644
index 64dc433a30..0000000000
--- a/target/linux/rockchip/patches-6.1/110-arm64-dts-rockchip-Update-LED-properties-for-NanoPi-.patch
+++ /dev/null
@@ -1,97 +0,0 @@
-From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
-From: Tianling Shen <cnsztl@gmail.com>
-Date: Tue Jun 20 16:45:27 2023 +0800
-Subject: [PATCH] arm64: dts: rockchip: Update LED properties for NanoPi R5
- series
-
-Add OpenWrt's LED aliases for showing system status.
-Also replace function/color with legacy label as OpenWrt relys on it
-to update LED settings.
-
-Signed-off-by: Tianling Shen <cnsztl@gmail.com>
----
-
---- a/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5c.dts
-+++ b/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5c.dts
-@@ -32,27 +32,22 @@
- 		pinctrl-0 = <&lan_led_pin>, <&power_led_pin>, <&wan_led_pin>, <&wlan_led_pin>;
- 
- 		led-lan {
--			color = <LED_COLOR_ID_GREEN>;
--			function = LED_FUNCTION_LAN;
-+			label = "green:lan";
- 			gpios = <&gpio3 RK_PA3 GPIO_ACTIVE_HIGH>;
- 		};
- 
- 		power_led: led-power {
--			color = <LED_COLOR_ID_RED>;
--			function = LED_FUNCTION_POWER;
--			linux,default-trigger = "heartbeat";
-+			label = "red:power";
- 			gpios = <&gpio3 RK_PA2 GPIO_ACTIVE_HIGH>;
- 		};
- 
- 		led-wan {
--			color = <LED_COLOR_ID_GREEN>;
--			function = LED_FUNCTION_WAN;
-+			label = "green:wan";
- 			gpios = <&gpio3 RK_PA4 GPIO_ACTIVE_HIGH>;
- 		};
- 
- 		led-wlan {
--			color = <LED_COLOR_ID_GREEN>;
--			function = LED_FUNCTION_WLAN;
-+			label = "green:wlan";
- 			gpios = <&gpio3 RK_PA5 GPIO_ACTIVE_HIGH>;
- 		};
- 	};
---- a/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5s.dts
-+++ b/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5s.dts
-@@ -23,29 +23,22 @@
- 		pinctrl-0 = <&lan1_led_pin>, <&lan2_led_pin>, <&power_led_pin>, <&wan_led_pin>;
- 
- 		led-lan1 {
--			color = <LED_COLOR_ID_GREEN>;
--			function = LED_FUNCTION_LAN;
--			function-enumerator = <1>;
-+			label = "green:lan1";
- 			gpios = <&gpio3 RK_PD6 GPIO_ACTIVE_HIGH>;
- 		};
- 
- 		led-lan2 {
--			color = <LED_COLOR_ID_GREEN>;
--			function = LED_FUNCTION_LAN;
--			function-enumerator = <2>;
-+			label = "green:lan2";
- 			gpios = <&gpio3 RK_PD7 GPIO_ACTIVE_HIGH>;
- 		};
- 
- 		power_led: led-power {
--			color = <LED_COLOR_ID_RED>;
--			function = LED_FUNCTION_POWER;
--			linux,default-trigger = "heartbeat";
-+			label = "red:power";
- 			gpios = <&gpio4 RK_PD2 GPIO_ACTIVE_HIGH>;
- 		};
- 
- 		led-wan {
--			color = <LED_COLOR_ID_GREEN>;
--			function = LED_FUNCTION_WAN;
-+			label = "green:wan";
- 			gpios = <&gpio2 RK_PC1 GPIO_ACTIVE_HIGH>;
- 		};
- 	};
---- a/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5s.dtsi
-+++ b/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5s.dtsi
-@@ -18,6 +18,11 @@
- 	aliases {
- 		mmc0 = &sdmmc0;
- 		mmc1 = &sdhci;
-+
-+		led-boot = &power_led;
-+		led-failsafe = &power_led;
-+		led-running = &power_led;
-+		led-upgrade = &power_led;
- 	};
- 
- 	chosen: chosen {
diff --git a/target/linux/rockchip/patches-6.1/111-arm64-dts-rockchip-add-Hynitron-cst340-for-Anbernic-.patch b/target/linux/rockchip/patches-6.1/111-arm64-dts-rockchip-add-Hynitron-cst340-for-Anbernic-.patch
new file mode 100644
index 0000000000..1cc81165d8
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/111-arm64-dts-rockchip-add-Hynitron-cst340-for-Anbernic-.patch
@@ -0,0 +1,80 @@
+From 8150eba8fbed88b7484ca5579db8d8e73d473107 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Mon, 28 Nov 2022 17:15:28 -0600
+Subject: [PATCH 111/383] arm64: dts: rockchip: add Hynitron cst340 for
+ Anbernic 353 series
+
+Add support for the Hynitron cst340 touchscreen driver to the Anbernic
+RG353P and RG353V devices. Note the RG353VS device does not have a
+touchscreen.
+
+https://lore.kernel.org/linux-input/Y1y9e9sgE%2FDck9fB@google.com/
+
+Changes since V1:
+ - Removed 'status = "okay";', as it was never disabled.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20221128231528.23360-1-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3566-anbernic-rg353p.dts   | 19 +++++++++++++++++++
+ .../dts/rockchip/rk3566-anbernic-rg353v.dts   | 12 ++++++++++++
+ 2 files changed, 31 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353p.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353p.dts
+@@ -95,6 +95,18 @@
+ 	pintctrl-names = "default";
+ 	pinctrl-0 = <&i2c2m1_xfer>;
+ 	status = "okay";
++
++	touch@1a {
++		compatible = "hynitron,cst340";
++		reg = <0x1a>;
++		interrupt-parent = <&gpio4>;
++		interrupts = <RK_PB1 IRQ_TYPE_EDGE_FALLING>;
++		pinctrl-0 = <&touch_rst>;
++		pinctrl-names = "default";
++		reset-gpios = <&gpio4 RK_PA6 GPIO_ACTIVE_LOW>;
++		touchscreen-size-x = <640>;
++		touchscreen-size-y = <480>;
++	};
+ };
+ 
+ &pinctrl {
+@@ -104,6 +116,13 @@
+ 				<4 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+ 	};
++
++	touch {
++		touch_rst: touch-rst {
++			rockchip,pins =
++				<4 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
+ };
+ 
+ &rk817 {
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353v.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353v.dts
+@@ -82,6 +82,18 @@
+ 	pintctrl-names = "default";
+ 	pinctrl-0 = <&i2c2m1_xfer>;
+ 	status = "okay";
++
++	touch@1a {
++		compatible = "hynitron,cst340";
++		reg = <0x1a>;
++		interrupt-parent = <&gpio4>;
++		interrupts = <RK_PB1 IRQ_TYPE_EDGE_FALLING>;
++		pinctrl-0 = <&touch_rst>;
++		pinctrl-names = "default";
++		reset-gpios = <&gpio4 RK_PA6 GPIO_ACTIVE_LOW>;
++		touchscreen-size-x = <640>;
++		touchscreen-size-y = <480>;
++	};
+ };
+ 
+ &pinctrl {
diff --git a/target/linux/rockchip/patches-6.1/112-arm64-dts-rockchip-Fix-RX-delay-for-ethernet-phy-on-.patch b/target/linux/rockchip/patches-6.1/112-arm64-dts-rockchip-Fix-RX-delay-for-ethernet-phy-on-.patch
new file mode 100644
index 0000000000..d0006cd7e1
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/112-arm64-dts-rockchip-Fix-RX-delay-for-ethernet-phy-on-.patch
@@ -0,0 +1,38 @@
+From 1b6f611c644c6c2aa673294937d205f801afa62a Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Fri, 13 Jan 2023 13:02:20 +0000
+Subject: [PATCH 112/383] arm64: dts: rockchip: Fix RX delay for ethernet phy
+ on rk3588s-rock5a
+
+Add network PHY rx delay and change type to rgmii, so
+that it is applied. This fixes packet loss when more
+than a few packets are exchanged.
+
+Fixes: d1824cf95799 ("arm64: dts: rockchip: Add rock-5a board")
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Link: https://lore.kernel.org/r/20230113130220.662194-1-lucas.tanure@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts
+@@ -23,7 +23,7 @@
+ &gmac1 {
+ 	clock_in_out = "output";
+ 	phy-handle = <&rgmii_phy1>;
+-	phy-mode = "rgmii-rxid";
++	phy-mode = "rgmii";
+ 	pinctrl-0 = <&gmac1_miim
+ 		     &gmac1_tx_bus2
+ 		     &gmac1_rx_bus2
+@@ -31,6 +31,7 @@
+ 		     &gmac1_rgmii_bus>;
+ 	pinctrl-names = "default";
+ 	tx_delay = <0x3a>;
++	rx_delay = <0x3e>;
+ 	status = "okay";
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/113-arm64-dts-rockchip-Add-rk3566-based-Radxa-Compute-Mo.patch b/target/linux/rockchip/patches-6.1/113-arm64-dts-rockchip-Add-rk3566-based-Radxa-Compute-Mo.patch
new file mode 100644
index 0000000000..485b3744a0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/113-arm64-dts-rockchip-Add-rk3566-based-Radxa-Compute-Mo.patch
@@ -0,0 +1,388 @@
+From 0777633d71b4fa8003d6eeda21633915a49d5b19 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@amarulasolutions.com>
+Date: Thu, 12 Jan 2023 16:29:01 +0530
+Subject: [PATCH 113/383] arm64: dts: rockchip: Add rk3566 based Radxa Compute
+ Module 3
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+Radxa Compute Module 3(CM3) is one of the modules from a series
+System On Module based on the Radxa ROCK 3 series and is compatible
+with Raspberry Pi CM4 pinout and form factor.
+
+Specification:
+- Rockchip RK3566
+- up to 8GB LPDDR4
+- up to 128GB high performance eMMC
+- Optional wireless LAN, 2.4GHz and 5.0GHz IEEE 802.11b/g/n/ac wireless,
+  BT 5.0, BLE with onboard and external antenna.
+- Gigabit Ethernet PHY
+
+Radxa CM3 needs to mount on top of this IO board in order to create
+complete Radxa CM3 IO board platform.
+
+Since Radxa CM3 is compatible with Raspberry Pi CM4 pinout so it is
+possible to mount Radxa CM3 on top of the Rasberry Pi CM4 IO board.
+
+Add support for Radxa CM3.
+
+Co-developed-by: FUKAUMI Naoki <naoki@radxa.com>
+Signed-off-by: FUKAUMI Naoki <naoki@radxa.com>
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Link: https://lore.kernel.org/r/20230112105902.192852-2-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3566-radxa-cm3.dtsi   | 345 ++++++++++++++++++
+ 1 file changed, 345 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3.dtsi
+
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3.dtsi
+@@ -0,0 +1,345 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2022 Radxa Limited
++ * Copyright (c) 2022 Amarula Solutions(India)
++ */
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/leds/common.h>
++
++/ {
++	compatible = "radxa,radxa-cm3", "rockchip,rk3566";
++
++	aliases {
++		mmc0 = &sdhci;
++	};
++
++	leds {
++		compatible = "gpio-leds";
++
++		led-0 {
++			gpios = <&gpio0 RK_PA6 GPIO_ACTIVE_HIGH>;
++			color = <LED_COLOR_ID_GREEN>;
++			function = LED_FUNCTION_STATUS;
++			linux,default-trigger = "timer";
++			default-state = "on";
++			pinctrl-names = "default";
++			pinctrl-0 = <&user_led2>;
++		};
++	};
++
++	vcc_sys: vcc-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++
++	vcc_1v8: vcc-1v8-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_1v8";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <1800000>;
++		regulator-max-microvolt = <1800000>;
++		vin-supply = <&vcc_1v8_p>;
++	};
++
++	vcc_3v3: vcc-3v3-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_3v3";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc3v3_sys>;
++	};
++
++	vcca_1v8: vcca-1v8-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcca_1v8";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <1800000>;
++		regulator-max-microvolt = <1800000>;
++		vin-supply = <&vcc_1v8_p>;
++	};
++};
++
++&cpu0 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu1 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu2 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu3 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&gpu {
++	mali-supply = <&vdd_gpu_npu>;
++	status = "okay";
++};
++
++&i2c0 {
++	status = "okay";
++
++	vdd_cpu: regulator@1c {
++		compatible = "tcs,tcs4525";
++		reg = <0x1c>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <712500>;
++		regulator-max-microvolt = <1390000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	rk817: pmic@20 {
++		compatible = "rockchip,rk817";
++		reg = <0x20>;
++		#clock-cells = <1>;
++		clock-output-names = "rk817-clkout1", "rk817-clkout2";
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PA3 IRQ_TYPE_LEVEL_LOW>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pmic_int_l>;
++		rockchip,system-power-controller;
++		wakeup-source;
++
++		vcc1-supply = <&vcc_sys>;
++		vcc2-supply = <&vcc_sys>;
++		vcc3-supply = <&vcc_sys>;
++		vcc4-supply = <&vcc_sys>;
++		vcc5-supply = <&vcc_sys>;
++		vcc6-supply = <&vcc_sys>;
++		vcc7-supply = <&vcc_sys>;
++
++		regulators {
++			vdd_logic: DCDC_REG1 {
++				regulator-name = "vdd_logic";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <900000>;
++				};
++			};
++
++			vdd_gpu_npu: DCDC_REG2 {
++				regulator-name = "vdd_gpu_npu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_ddr: DCDC_REG3 {
++				regulator-name = "vcc_ddr";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-initial-mode = <0x2>;
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vcc3v3_sys: DCDC_REG4 {
++				regulator-name = "vcc3v3_sys";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcca1v8_pmu: LDO_REG1 {
++				regulator-name = "vcca1v8_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vdda_0v9: LDO_REG2 {
++				regulator-name = "vdda_0v9";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_pmu: LDO_REG3 {
++				regulator-name = "vdda0v9_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <900000>;
++				};
++			};
++
++			vccio_acodec: LDO_REG4 {
++				regulator-name = "vccio_acodec";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_sd: LDO_REG5 {
++				regulator-name = "vccio_sd";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_pmu: LDO_REG6 {
++				regulator-name = "vcc3v3_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcc_1v8_p: LDO_REG7 {
++				regulator-name = "vcc_1v8_p";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc1v8_dvp: LDO_REG8 {
++				regulator-name = "vcc1v8_dvp";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc2v8_dvp: LDO_REG9 {
++				regulator-name = "vcc2v8_dvp";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <2800000>;
++				regulator-max-microvolt = <2800000>;
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++		};
++	};
++};
++
++&pinctrl {
++	pmic {
++		pmic_int_l: pmic-int-l {
++			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	leds {
++		user_led2: user-led2 {
++			rockchip,pins = <0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&pmu_io_domains {
++	pmuio1-supply = <&vcc3v3_pmu>;
++	pmuio2-supply = <&vcc_3v3>;
++	vccio1-supply = <&vccio_acodec>;
++	vccio2-supply = <&vcc_1v8>;
++	vccio3-supply = <&vccio_sd>;
++	vccio4-supply = <&vcc_1v8>;
++	vccio5-supply = <&vcc_3v3>;
++	vccio6-supply = <&vcc_3v3>;
++	vccio7-supply = <&vcc_3v3>;
++	status = "okay";
++};
++
++&saradc {
++	vref-supply = <&vcca_1v8>;
++	status = "okay";
++};
++
++&sdhci {
++	bus-width = <8>;
++	max-frequency = <200000000>;
++	mmc-hs200-1_8v;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&emmc_bus8 &emmc_clk &emmc_cmd &emmc_datastrobe>;
++	vmmc-supply = <&vcc_3v3>;
++	vqmmc-supply = <&vcc_1v8>;
++	status = "okay";
++};
++
++&usb2phy0 {
++	status = "okay";
++};
++
++&usb2phy1 {
++	status = "okay";
++};
++
++&tsadc {
++	rockchip,hw-tshut-mode = <1>;
++	rockchip,hw-tshut-polarity = <0>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/114-arm64-dts-rockchip-Add-Radxa-Compute-Module-3-IO-boa.patch b/target/linux/rockchip/patches-6.1/114-arm64-dts-rockchip-Add-Radxa-Compute-Module-3-IO-boa.patch
new file mode 100644
index 0000000000..49b926dea3
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/114-arm64-dts-rockchip-Add-Radxa-Compute-Module-3-IO-boa.patch
@@ -0,0 +1,235 @@
+From efde50f3a700466ec0721ab69f6aea84075ac5c7 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@amarulasolutions.com>
+Date: Thu, 12 Jan 2023 16:29:02 +0530
+Subject: [PATCH 114/383] arm64: dts: rockchip: Add Radxa Compute Module 3 IO
+ board
+
+Radxa Compute Module 3(CM3) IO board is an application board from Radxa
+and is compatible with Raspberry Pi CM4 IO form factor.
+
+Specification:
+- 1x HDMI,
+- 2x MIPI DSI
+- 2x MIPI CSI2
+- 1x eDP
+- 1x PCIe card
+- 2x SATA
+- 2x USB 2.0 Host
+- 1x USB 3.0
+- 1x USB 2.0 OTG
+- Phone jack
+- microSD slot
+- 40-pin GPIO expansion header
+- 12V DC
+
+Radxa CM3 needs to mount on top of this IO board in order to create
+complete Radxa CM3 IO board platform.
+
+Add support for Radxa CM3 IO Board.
+
+Co-developed-by: FUKAUMI Naoki <naoki@radxa.com>
+Signed-off-by: FUKAUMI Naoki <naoki@radxa.com>
+Co-developed-by: Manoj Sai <abbaraju.manojsai@amarulasolutions.com>
+Signed-off-by: Manoj Sai <abbaraju.manojsai@amarulasolutions.com>
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Link: https://lore.kernel.org/r/20230112105902.192852-3-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../boot/dts/rockchip/rk3566-radxa-cm3-io.dts | 179 ++++++++++++++++++
+ 2 files changed, 180 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3-io.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -74,6 +74,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-pi
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-pinenote-v1.2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-quartz64-a.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-quartz64-b.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-radxa-cm3-io.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-roc-pc.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-blade.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-cm4.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3-io.dts
+@@ -0,0 +1,179 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2022 Radxa Limited
++ * Copyright (c) 2022 Amarula Solutions(India)
++ */
++
++/dts-v1/;
++#include <dt-bindings/soc/rockchip,vop2.h>
++#include "rk3566.dtsi"
++#include "rk3566-radxa-cm3.dtsi"
++
++/ {
++	model = "Radxa Compute Module 3(CM3) IO Board";
++	compatible = "radxa,radxa-cm3-io", "radxa,radxa-cm3", "rockchip,rk3566";
++
++	aliases {
++		mmc1 = &sdmmc0;
++	};
++
++	chosen: chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	hdmi-con {
++		compatible = "hdmi-connector";
++		type = "a";
++
++		port {
++			hdmi_con_in: endpoint {
++				remote-endpoint = <&hdmi_out_con>;
++			};
++		};
++	};
++
++	leds {
++		compatible = "gpio-leds";
++
++		led-1 {
++			gpios = <&gpio4 RK_PA4 GPIO_ACTIVE_LOW>;
++			color = <LED_COLOR_ID_GREEN>;
++			function = LED_FUNCTION_ACTIVITY;
++			linux,default-trigger = "heartbeat";
++			pinctrl-names = "default";
++			pinctrl-0 = <&pi_nled_activity>;
++		};
++	};
++
++	vcc5v0_usb30: vcc5v0-usb30-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usb30";
++		enable-active-high;
++		gpio = <&gpio3 RK_PC2 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_usb30_en_h>;
++		regulator-always-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc_sys>;
++	};
++
++	vcca1v8_image: vcca1v8-image-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcca1v8_image";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <1800000>;
++		regulator-max-microvolt = <1800000>;
++		vin-supply = <&vcc_1v8_p>;
++	};
++
++	vdda0v9_image: vdda0v9-image-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcca0v9_image";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <900000>;
++		regulator-max-microvolt = <900000>;
++		vin-supply = <&vdda_0v9>;
++	};
++};
++
++&combphy1 {
++	status = "okay";
++};
++
++&hdmi {
++	avdd-0v9-supply = <&vdda0v9_image>;
++	avdd-1v8-supply = <&vcca1v8_image>;
++	status = "okay";
++};
++
++&hdmi_in {
++	hdmi_in_vp0: endpoint {
++		remote-endpoint = <&vp0_out_hdmi>;
++	};
++};
++
++&hdmi_out {
++	hdmi_out_con: endpoint {
++		remote-endpoint = <&hdmi_con_in>;
++	};
++};
++
++&hdmi_sound {
++	status = "okay";
++};
++
++&pinctrl {
++	leds {
++		pi_nled_activity: pi-nled-activity {
++			rockchip,pins = <4 RK_PA4 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	sdcard {
++		sdmmc_pwren: sdmmc-pwren {
++			rockchip,pins = <0 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	usb {
++		vcc5v0_usb30_en_h: vcc5v0-host-en-h {
++			rockchip,pins = <3 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&sdmmc0 {
++	bus-width = <4>;
++	cap-mmc-highspeed;
++	cap-sd-highspeed;
++	disable-wp;
++	vqmmc-supply = <&vccio_sd>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc0_bus4 &sdmmc0_clk &sdmmc0_cmd &sdmmc0_det &sdmmc0_pwren>;
++	status = "okay";
++};
++
++&uart2 {
++	status = "okay";
++};
++
++&usb2phy0_host {
++	phy-supply = <&vcc5v0_usb30>;
++	status = "okay";
++};
++
++&usb2phy1_host {
++	status = "okay";
++};
++
++&usb2phy1_otg {
++	status = "okay";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host1_xhci {
++	status = "okay";
++};
++
++&vop {
++	assigned-clocks = <&cru DCLK_VOP0>, <&cru DCLK_VOP1>;
++	assigned-clock-parents = <&pmucru PLL_HPLL>, <&cru PLL_VPLL>;
++	status = "okay";
++};
++
++&vop_mmu {
++	status = "okay";
++};
++
++&vp0 {
++	vp0_out_hdmi: endpoint@ROCKCHIP_VOP2_EP_HDMI0 {
++		reg = <ROCKCHIP_VOP2_EP_HDMI0>;
++		remote-endpoint = <&hdmi_in_vp0>;
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/115-arm64-dts-rockchip-Update-eMMC-SD-aliases-for-Radxa-.patch b/target/linux/rockchip/patches-6.1/115-arm64-dts-rockchip-Update-eMMC-SD-aliases-for-Radxa-.patch
new file mode 100644
index 0000000000..524524d7f5
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/115-arm64-dts-rockchip-Update-eMMC-SD-aliases-for-Radxa-.patch
@@ -0,0 +1,49 @@
+From b5b96b10b8989841b83884b7a20a6082a79dfaca Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@amarulasolutions.com>
+Date: Wed, 18 Jan 2023 13:34:53 +0530
+Subject: [PATCH 115/383] arm64: dts: rockchip: Update eMMC, SD aliases for
+ Radxa SoM boards
+
+Radxa has produced Compute Modules like RK3399pro VMARC and CM3i with
+onboarding eMMC flash, so the eMMC is the primary MMC device.
+
+On the other hand, Rockchip boot orders start from eMMC from an MMC
+device perspective.
+
+Mark, the eMMC has mmc0 to satisfy the above two conditions.
+
+Reported-by: FUKAUMI Naoki <naoki@radxa.com>
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Link: https://lore.kernel.org/r/20230118080454.11643-1-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399pro-vmarc-som.dtsi | 4 ++--
+ arch/arm64/boot/dts/rockchip/rk3568-radxa-e25.dts     | 3 +--
+ 2 files changed, 3 insertions(+), 4 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399pro-vmarc-som.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399pro-vmarc-som.dtsi
+@@ -13,8 +13,8 @@
+ 	compatible = "vamrs,rk3399pro-vmarc-som", "rockchip,rk3399pro";
+ 
+ 	aliases {
+-		mmc0 = &sdmmc;
+-		mmc1 = &sdhci;
++		mmc0 = &sdhci;
++		mmc1 = &sdmmc;
+ 	};
+ 
+ 	vcc3v3_pcie: vcc-pcie-regulator {
+--- a/arch/arm64/boot/dts/rockchip/rk3568-radxa-e25.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-radxa-e25.dts
+@@ -8,8 +8,7 @@
+ 	compatible = "radxa,e25", "rockchip,rk3568";
+ 
+ 	aliases {
+-		mmc0 = &sdmmc0;
+-		mmc1 = &sdhci;
++		mmc1 = &sdmmc0;
+ 	};
+ 
+ 	pwm-leds {
diff --git a/target/linux/rockchip/patches-6.1/116-arm64-dts-rockchip-Update-eMMC-SD-aliases-for-Radxa-.patch b/target/linux/rockchip/patches-6.1/116-arm64-dts-rockchip-Update-eMMC-SD-aliases-for-Radxa-.patch
new file mode 100644
index 0000000000..75db99df3e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/116-arm64-dts-rockchip-Update-eMMC-SD-aliases-for-Radxa-.patch
@@ -0,0 +1,62 @@
+From 79856afa43cdcf166a806021792aed3b2fb6297d Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@amarulasolutions.com>
+Date: Wed, 18 Jan 2023 13:34:54 +0530
+Subject: [PATCH 116/383] arm64: dts: rockchip: Update eMMC, SD aliases for
+ Radxa SBC boards
+
+Radxa SBC boards like ROCK 3A/4 models do support eMMC and SDcard
+via external connector slots.
+
+Mark, the eMMC has mmc0 by considering the Rockchip boot order priority
+as both MMC devices are connected externally.
+
+Reported-by: FUKAUMI Naoki <naoki@radxa.com>
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Link: https://lore.kernel.org/r/20230118080454.11643-2-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399-rock-4c-plus.dts | 4 ++--
+ arch/arm64/boot/dts/rockchip/rk3399-rock-pi-4.dtsi   | 4 ++--
+ arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts      | 4 ++--
+ 3 files changed, 6 insertions(+), 6 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-rock-4c-plus.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3399-rock-4c-plus.dts
+@@ -15,8 +15,8 @@
+ 	compatible = "radxa,rock-4c-plus", "rockchip,rk3399";
+ 
+ 	aliases {
+-		mmc0 = &sdmmc;
+-		mmc1 = &sdhci;
++		mmc0 = &sdhci;
++		mmc1 = &sdmmc;
+ 	};
+ 
+ 	chosen {
+--- a/arch/arm64/boot/dts/rockchip/rk3399-rock-pi-4.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399-rock-pi-4.dtsi
+@@ -13,8 +13,8 @@
+ 
+ / {
+ 	aliases {
+-		mmc0 = &sdmmc;
+-		mmc1 = &sdhci;
++		mmc0 = &sdhci;
++		mmc1 = &sdmmc;
+ 	};
+ 
+ 	chosen {
+--- a/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
+@@ -13,8 +13,8 @@
+ 
+ 	aliases {
+ 		ethernet0 = &gmac1;
+-		mmc0 = &sdmmc0;
+-		mmc1 = &sdhci;
++		mmc0 = &sdhci;
++		mmc1 = &sdmmc0;
+ 	};
+ 
+ 	chosen: chosen {
diff --git a/target/linux/rockchip/patches-6.1/117-arm64-dts-rockchip-add-pinctrls-for-16-bit-18-bit-rg.patch b/target/linux/rockchip/patches-6.1/117-arm64-dts-rockchip-add-pinctrls-for-16-bit-18-bit-rg.patch
new file mode 100644
index 0000000000..2a28d18c13
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/117-arm64-dts-rockchip-add-pinctrls-for-16-bit-18-bit-rg.patch
@@ -0,0 +1,122 @@
+From c593b2f170bbfb2dae049c83fab6a37d1ffd00d9 Mon Sep 17 00:00:00 2001
+From: Michael Riesch <michael.riesch@wolfvision.net>
+Date: Tue, 24 Jan 2023 06:47:06 +0100
+Subject: [PATCH 117/383] arm64: dts: rockchip: add pinctrls for 16-bit/18-bit
+ rgb interface to rk356x
+
+The rk3568-pinctrl.dtsi only defines the 24-bit RGB interface. Add separate
+nodes for the 16-bit and 18-bit version, respectively. While at it, split
+off the clock/sync signals from the data signals.
+
+The exact mapping of the data pins was discussed here:
+https://lore.kernel.org/linux-rockchip/f33a0488-528c-99de-3279-3c0346a03fd6@wolfvision.net/T/
+
+Signed-off-by: Michael Riesch <michael.riesch@wolfvision.net>
+Link: https://lore.kernel.org/r/20230124054706.3921383-7-michael.riesch@wolfvision.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3568-pinctrl.dtsi     | 94 +++++++++++++++++++
+ 1 file changed, 94 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-pinctrl.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3568-pinctrl.dtsi
+@@ -3117,4 +3117,98 @@
+ 				<0 RK_PA1 0 &pcfg_pull_none>;
+ 		};
+ 	};
++
++	lcdc {
++		/omit-if-no-ref/
++		lcdc_clock: lcdc-clock {
++			rockchip,pins =
++				/* lcdc_clk */
++				<3 RK_PA0 1 &pcfg_pull_none>,
++				/* lcdc_den */
++				<3 RK_PC3 1 &pcfg_pull_none>,
++				/* lcdc_hsync */
++				<3 RK_PC1 1 &pcfg_pull_none>,
++				/* lcdc_vsync */
++				<3 RK_PC2 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		lcdc_data16: lcdc-data16 {
++			rockchip,pins =
++				/* lcdc_d3 */
++				<2 RK_PD3 1 &pcfg_pull_none>,
++				/* lcdc_d4 */
++				<2 RK_PD4 1 &pcfg_pull_none>,
++				/* lcdc_d5 */
++				<2 RK_PD5 1 &pcfg_pull_none>,
++				/* lcdc_d6 */
++				<2 RK_PD6 1 &pcfg_pull_none>,
++				/* lcdc_d7 */
++				<2 RK_PD7 1 &pcfg_pull_none>,
++				/* lcdc_d10 */
++				<3 RK_PA3 1 &pcfg_pull_none>,
++				/* lcdc_d11 */
++				<3 RK_PA4 1 &pcfg_pull_none>,
++				/* lcdc_d12 */
++				<3 RK_PA5 1 &pcfg_pull_none>,
++				/* lcdc_d13 */
++				<3 RK_PA6 1 &pcfg_pull_none>,
++				/* lcdc_d14 */
++				<3 RK_PA7 1 &pcfg_pull_none>,
++				/* lcdc_d15 */
++				<3 RK_PB0 1 &pcfg_pull_none>,
++				/* lcdc_d19 */
++				<3 RK_PB4 1 &pcfg_pull_none>,
++				/* lcdc_d20 */
++				<3 RK_PB5 1 &pcfg_pull_none>,
++				/* lcdc_d21 */
++				<3 RK_PB6 1 &pcfg_pull_none>,
++				/* lcdc_d22 */
++				<3 RK_PB7 1 &pcfg_pull_none>,
++				/* lcdc_d23 */
++				<3 RK_PC0 1 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		lcdc_data18: lcdc-data18 {
++			rockchip,pins =
++				/* lcdc_d2 */
++				<2 RK_PD2 1 &pcfg_pull_none>,
++				/* lcdc_d3 */
++				<2 RK_PD3 1 &pcfg_pull_none>,
++				/* lcdc_d4 */
++				<2 RK_PD4 1 &pcfg_pull_none>,
++				/* lcdc_d5 */
++				<2 RK_PD5 1 &pcfg_pull_none>,
++				/* lcdc_d6 */
++				<2 RK_PD6 1 &pcfg_pull_none>,
++				/* lcdc_d7 */
++				<2 RK_PD7 1 &pcfg_pull_none>,
++				/* lcdc_d10 */
++				<3 RK_PA3 1 &pcfg_pull_none>,
++				/* lcdc_d11 */
++				<3 RK_PA4 1 &pcfg_pull_none>,
++				/* lcdc_d12 */
++				<3 RK_PA5 1 &pcfg_pull_none>,
++				/* lcdc_d13 */
++				<3 RK_PA6 1 &pcfg_pull_none>,
++				/* lcdc_d14 */
++				<3 RK_PA7 1 &pcfg_pull_none>,
++				/* lcdc_d15 */
++				<3 RK_PB0 1 &pcfg_pull_none>,
++				/* lcdc_d18 */
++				<3 RK_PB3 1 &pcfg_pull_none>,
++				/* lcdc_d19 */
++				<3 RK_PB4 1 &pcfg_pull_none>,
++				/* lcdc_d20 */
++				<3 RK_PB5 1 &pcfg_pull_none>,
++				/* lcdc_d21 */
++				<3 RK_PB6 1 &pcfg_pull_none>,
++				/* lcdc_d22 */
++				<3 RK_PB7 1 &pcfg_pull_none>,
++				/* lcdc_d23 */
++				<3 RK_PC0 1 &pcfg_pull_none>;
++		};
++	};
++
+ };
diff --git a/target/linux/rockchip/patches-6.1/118-arm64-dts-rockchip-add-display-to-RG503.patch b/target/linux/rockchip/patches-6.1/118-arm64-dts-rockchip-add-display-to-RG503.patch
new file mode 100644
index 0000000000..62babcc5b4
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/118-arm64-dts-rockchip-add-display-to-RG503.patch
@@ -0,0 +1,99 @@
+From af433f48b5c43dda7886aca794eaae4c712da0d3 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Mon, 23 Jan 2023 09:46:03 -0600
+Subject: [PATCH 118/383] arm64: dts: rockchip: add display to RG503
+
+Add Samsung AMS495QA01 panel to RG503.
+
+Co-developed-by: Maya Matuszczyk <maccraft123mc@gmail.com>
+Signed-off-by: Maya Matuszczyk <maccraft123mc@gmail.com>
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20230123154603.1315112-5-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3566-anbernic-rg503.dts    | 55 +++++++++++++++++++
+ 1 file changed, 55 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg503.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg503.dts
+@@ -47,6 +47,21 @@
+ 		mosi-gpios = <&gpio4 RK_PB0 GPIO_ACTIVE_HIGH>;
+ 		cs-gpios = <&gpio4 RK_PA7 GPIO_ACTIVE_HIGH>;
+ 		num-chipselects = <0>;
++
++		panel@0 {
++			compatible = "samsung,ams495qa01";
++			reg = <0>;
++			pinctrl-names = "default";
++			pinctrl-0 = <&lcd_reset>;
++			reset-gpios = <&gpio4 RK_PA0 GPIO_ACTIVE_LOW>;
++			vdd-supply = <&vcc_3v3>;
++
++			port {
++				mipi_in_panel: endpoint {
++					remote-endpoint = <&mipi_out_panel>;
++				};
++			};
++		};
+ 	};
+ 
+ 	/* Channels reversed for both headphones and speakers. */
+@@ -94,6 +109,32 @@
+ 	assigned-clock-rates = <1200000000>, <200000000>, <500000000>;
+ };
+ 
++&dsi_dphy0 {
++	status = "okay";
++};
++
++&dsi0 {
++	status = "okay";
++
++	ports {
++		dsi0_in: port@0 {
++			reg = <0>;
++
++			dsi0_in_vp1: endpoint {
++				remote-endpoint = <&vp1_out_dsi0>;
++			};
++		};
++
++		dsi0_out: port@1 {
++			reg = <1>;
++
++			mipi_out_panel: endpoint {
++				remote-endpoint = <&mipi_in_panel>;
++			};
++		};
++	};
++};
++
+ &gpio_keys_control {
+ 	button-a {
+ 		gpios = <&gpio3 RK_PC1 GPIO_ACTIVE_LOW>;
+@@ -146,6 +187,13 @@
+ 		};
+ 	};
+ 
++	gpio-lcd {
++		lcd_reset: lcd-reset {
++			rockchip,pins =
++				<4 RK_PA0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
+ 	gpio-spi {
+ 		spi_pins: spi-pins {
+ 			rockchip,pins =
+@@ -164,3 +212,10 @@
+ 		rockchip,sleep-filter-current-microamp = <100000>;
+ 	};
+ };
++
++&vp1 {
++	vp1_out_dsi0: endpoint@ROCKCHIP_VOP2_EP_MIPI0 {
++		reg = <ROCKCHIP_VOP2_EP_MIPI0>;
++		remote-endpoint = <&dsi0_in_vp1>;
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/119-arm64-dts-rockchip-Enable-Ethernet-for-Radxa-CM3-IO.patch b/target/linux/rockchip/patches-6.1/119-arm64-dts-rockchip-Enable-Ethernet-for-Radxa-CM3-IO.patch
new file mode 100644
index 0000000000..a4c1170a79
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/119-arm64-dts-rockchip-Enable-Ethernet-for-Radxa-CM3-IO.patch
@@ -0,0 +1,133 @@
+From 15b062e1b66d6976b1bd0a8db7455510dd9874e4 Mon Sep 17 00:00:00 2001
+From: Manoj Sai <abbaraju.manojsai@amarulasolutions.com>
+Date: Wed, 25 Jan 2023 21:40:22 +0530
+Subject: [PATCH 119/383] arm64: dts: rockchip: Enable Ethernet for Radxa CM3
+ IO
+
+Add ethernet nodes for enabling gmac1 on the Radxa CM3 IO board.
+
+Signed-off-by: Manoj Sai <abbaraju.manojsai@amarulasolutions.com>
+Link: https://lore.kernel.org/r/20230125161023.12115-1-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3566-radxa-cm3-io.dts | 93 +++++++++++++++++++
+ 1 file changed, 93 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3-io.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3-io.dts
+@@ -21,6 +21,13 @@
+ 		stdout-path = "serial2:1500000n8";
+ 	};
+ 
++	gmac1_clkin: external-gmac1-clock {
++		compatible = "fixed-clock";
++		clock-frequency = <125000000>;
++		clock-output-names = "gmac1_clkin";
++		#clock-cells = <0>;
++	};
++
+ 	hdmi-con {
+ 		compatible = "hdmi-connector";
+ 		type = "a";
+@@ -83,6 +90,29 @@
+ 	status = "okay";
+ };
+ 
++&gmac1 {
++	assigned-clocks = <&cru SCLK_GMAC1_RX_TX>, <&cru SCLK_GMAC1>;
++	assigned-clock-parents = <&cru SCLK_GMAC1_RGMII_SPEED>, <&gmac1_clkin>;
++	assigned-clock-rates = <0>, <125000000>;
++	clock_in_out = "input";
++	phy-handle = <&rgmii_phy1>;
++	phy-mode = "rgmii";
++	pinctrl-names = "default";
++	pinctrl-0 = <&gmac1m0_miim
++		     &gmac1m0_tx_bus2
++		     &gmac1m0_rx_bus2
++		     &gmac1m0_rgmii_clk
++		     &gmac1m0_rgmii_bus
++		     &gmac1m0_clkinout>;
++	snps,reset-gpio = <&gpio4 RK_PC2 GPIO_ACTIVE_LOW>;
++	snps,reset-active-low;
++	/* Reset time is 20ms, 100ms for rtl8211f */
++	snps,reset-delays-us = <0 20000 100000>;
++	tx_delay = <0x46>;
++	rx_delay = <0x2e>;
++	status = "okay";
++};
++
+ &hdmi {
+ 	avdd-0v9-supply = <&vdda0v9_image>;
+ 	avdd-1v8-supply = <&vcca1v8_image>;
+@@ -105,7 +135,70 @@
+ 	status = "okay";
+ };
+ 
++&mdio1 {
++	rgmii_phy1: ethernet-phy@0 {
++		compatible="ethernet-phy-ieee802.3-c22";
++		reg= <0x0>;
++	};
++};
++
+ &pinctrl {
++	gmac1 {
++		gmac1m0_miim: gmac1m0-miim {
++			rockchip,pins =
++				/* gmac1_mdcm0 */
++				<3 RK_PC4 3 &pcfg_pull_none_drv_level_15>,
++				/* gmac1_mdiom0 */
++				<3 RK_PC5 3 &pcfg_pull_none_drv_level_15>;
++		};
++
++		gmac1m0_rx_bus2: gmac1m0-rx-bus2 {
++			rockchip,pins =
++				/* gmac1_rxd0m0 */
++				<3 RK_PB1 3 &pcfg_pull_none_drv_level_15>,
++				/* gmac1_rxd1m0 */
++				<3 RK_PB2 3 &pcfg_pull_none_drv_level_15>,
++				/* gmac1_rxdvcrsm0 */
++				<3 RK_PB3 3 &pcfg_pull_none_drv_level_15>;
++		};
++
++		gmac1m0_tx_bus2: gmac1m0-tx-bus2 {
++			rockchip,pins =
++				/* gmac1_txd0m0 */
++				<3 RK_PB5 3 &pcfg_pull_none_drv_level_15>,
++				/* gmac1_txd1m0 */
++				<3 RK_PB6 3 &pcfg_pull_none_drv_level_15>,
++				/* gmac1_txenm0 */
++				<3 RK_PB7 3 &pcfg_pull_none_drv_level_15>;
++		};
++
++		gmac1m0_rgmii_clk: gmac1m0-rgmii-clk {
++			rockchip,pins =
++				/* gmac1_rxclkm0 */
++				<3 RK_PA7 3 &pcfg_pull_none_drv_level_15>,
++				/* gmac1_txclkm0 */
++				<3 RK_PA6 3 &pcfg_pull_none_drv_level_15>;
++		};
++
++		gmac1m0_rgmii_bus: gmac1m0-rgmii-bus {
++			rockchip,pins =
++				/* gmac1_rxd2m0 */
++				<3 RK_PA4 3 &pcfg_pull_none_drv_level_15>,
++				/* gmac1_rxd3m0 */
++				<3 RK_PA5 3 &pcfg_pull_none_drv_level_15>,
++				/* gmac1_txd2m0 */
++				<3 RK_PA2 3 &pcfg_pull_none_drv_level_15>,
++				/* gmac1_txd3m0 */
++				<3 RK_PA3 3 &pcfg_pull_none_drv_level_15>;
++		};
++
++		gmac1m0_clkinout: gmac1m0-clkinout {
++			rockchip,pins =
++				/* gmac1_mclkinoutm0 */
++				<3 RK_PC0 3 &pcfg_pull_none_drv_level_15>;
++		};
++	};
++
+ 	leds {
+ 		pi_nled_activity: pi-nled-activity {
+ 			rockchip,pins = <4 RK_PA4 RK_FUNC_GPIO &pcfg_pull_none>;
diff --git a/target/linux/rockchip/patches-6.1/120-arm64-dts-rockchip-rk3566-Enable-WiFi-BT-support-for.patch b/target/linux/rockchip/patches-6.1/120-arm64-dts-rockchip-rk3566-Enable-WiFi-BT-support-for.patch
new file mode 100644
index 0000000000..fbe6534111
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/120-arm64-dts-rockchip-rk3566-Enable-WiFi-BT-support-for.patch
@@ -0,0 +1,135 @@
+From cbcada7c703e87c990bc18eb25da7eebcd38cc40 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@amarulasolutions.com>
+Date: Wed, 25 Jan 2023 21:40:23 +0530
+Subject: [PATCH 120/383] arm64: dts: rockchip: rk3566: Enable WiFi, BT support
+ for Radxa CM3
+
+Radxa Compute Module 3 has an onboard AW_CM256SM WiFi/BT module.
+
+Add nodes for enabling it.
+
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Link: https://lore.kernel.org/r/20230125161023.12115-2-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3566-radxa-cm3.dtsi   | 80 +++++++++++++++++++
+ 1 file changed, 80 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3.dtsi
+@@ -66,6 +66,15 @@
+ 		regulator-max-microvolt = <1800000>;
+ 		vin-supply = <&vcc_1v8_p>;
+ 	};
++
++	sdio_pwrseq: pwrseq-sdio {
++		compatible = "mmc-pwrseq-simple";
++		clocks = <&rk817 1>;
++		clock-names = "ext_clock";
++		pinctrl-names = "default";
++		pinctrl-0 = <&wifi_reg_on_h>;
++		reset-gpios = <&gpio2 RK_PB7 GPIO_ACTIVE_LOW>;
++	};
+ };
+ 
+ &cpu0 {
+@@ -287,6 +296,20 @@
+ };
+ 
+ &pinctrl {
++	bluetooth {
++		bt_host_wake_h: bt-host-wake-h {
++			rockchip,pins = <2 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		bt_reg_on_h: bt-reg-on-h {
++			rockchip,pins = <2 RK_PC0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		bt_wake_host_h: bt-wake-host-h {
++			rockchip,pins = <2 RK_PB1 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
+ 	pmic {
+ 		pmic_int_l: pmic-int-l {
+ 			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
+@@ -298,6 +321,16 @@
+ 			rockchip,pins = <0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+ 	};
++
++	wifi {
++		wifi_reg_on_h: wifi-reg-on-h {
++			rockchip,pins = <2 RK_PB7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		wifi_host_wake_h: wifi-host-wake-h {
++			rockchip,pins = <2 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
+ };
+ 
+ &pmu_io_domains {
+@@ -318,6 +351,34 @@
+ 	status = "okay";
+ };
+ 
++&sdmmc1 {
++	#address-cells = <1>;
++	#size-cells = <0>;
++	bus-width = <4>;
++	disable-wp;
++	cap-sd-highspeed;
++	cap-sdio-irq;
++	keep-power-in-suspend;
++	mmc-pwrseq = <&sdio_pwrseq>;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc1_bus4 &sdmmc1_clk &sdmmc1_cmd>;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc_3v3>;
++	vqmmc-supply = <&vcc_1v8>;
++	status = "okay";
++
++	wifi@1 {
++		compatible = "brcm,bcm43455-fmac";
++		reg = <1>;
++		interrupt-parent = <&gpio2>;
++		interrupts = <RK_PC1 IRQ_TYPE_LEVEL_HIGH>;
++		interrupt-names = "host-wake";
++		pinctrl-names = "default";
++		pinctrl-0 = <&wifi_host_wake_h>;
++	};
++};
++
+ &sdhci {
+ 	bus-width = <8>;
+ 	max-frequency = <200000000>;
+@@ -330,6 +391,25 @@
+ 	status = "okay";
+ };
+ 
++&uart1 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&uart1m0_ctsn &uart1m0_rtsn &uart1m0_xfer>;
++	status = "okay";
++
++	bluetooth {
++		compatible = "brcm,bcm4345c5";
++		clocks = <&rk817 1>;
++		clock-names = "lpo";
++		device-wakeup-gpios = <&gpio2 RK_PB2 GPIO_ACTIVE_HIGH>;
++		host-wakeup-gpios = <&gpio2 RK_PB1 GPIO_ACTIVE_HIGH>;
++		reset-gpios = <&gpio2 RK_PC0 GPIO_ACTIVE_LOW>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&bt_host_wake_h &bt_reg_on_h &bt_wake_host_h>;
++		vbat-supply = <&vcc_3v3>;
++		vddio-supply = <&vcc_1v8>;
++	};
++};
++
+ &usb2phy0 {
+ 	status = "okay";
+ };
diff --git a/target/linux/rockchip/patches-6.1/121-arm64-dts-rockchip-Fix-compatible-for-Radxa-CM3.patch b/target/linux/rockchip/patches-6.1/121-arm64-dts-rockchip-Fix-compatible-for-Radxa-CM3.patch
new file mode 100644
index 0000000000..e871b2f818
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/121-arm64-dts-rockchip-Fix-compatible-for-Radxa-CM3.patch
@@ -0,0 +1,46 @@
+From 2ea55b76fffaffc4476b29ee9a41c4e37abade53 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@amarulasolutions.com>
+Date: Mon, 23 Jan 2023 12:46:50 +0530
+Subject: [PATCH 121/383] arm64: dts: rockchip: Fix compatible for Radxa CM3
+
+The compatible string "radxa,radxa-cm3" referring the product name
+as "Radxa Radxa CM3" but the actual product name is "Radxa CM3".
+
+Fix the compatible strings.
+
+Fixes: 24a28d3eb07d ("dt-bindings: arm: rockchip: Add Radxa Compute Module 3")
+Fixes: 7469ab529bca ("arm64: dts: rockchip: Add rk3566 based Radxa Compute Module 3")
+Fixes: 096ebfb74b19 ("arm64: dts: rockchip: Add Radxa Compute Module 3 IO board")
+Suggested-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230123071654.73139-1-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3-io.dts | 2 +-
+ arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3.dtsi   | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3-io.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3-io.dts
+@@ -11,7 +11,7 @@
+ 
+ / {
+ 	model = "Radxa Compute Module 3(CM3) IO Board";
+-	compatible = "radxa,radxa-cm3-io", "radxa,radxa-cm3", "rockchip,rk3566";
++	compatible = "radxa,cm3-io", "radxa,cm3", "rockchip,rk3566";
+ 
+ 	aliases {
+ 		mmc1 = &sdmmc0;
+--- a/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3.dtsi
+@@ -8,7 +8,7 @@
+ #include <dt-bindings/leds/common.h>
+ 
+ / {
+-	compatible = "radxa,radxa-cm3", "rockchip,rk3566";
++	compatible = "radxa,cm3", "rockchip,rk3566";
+ 
+ 	aliases {
+ 		mmc0 = &sdhci;
diff --git a/target/linux/rockchip/patches-6.1/122-arm64-dts-rockchip-Add-missing-CM3i-fallback-compati.patch b/target/linux/rockchip/patches-6.1/122-arm64-dts-rockchip-Add-missing-CM3i-fallback-compati.patch
new file mode 100644
index 0000000000..7fd7ecbd1d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/122-arm64-dts-rockchip-Add-missing-CM3i-fallback-compati.patch
@@ -0,0 +1,36 @@
+From 3841198dce5a655ba87d2d97c913a57bd227f520 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@amarulasolutions.com>
+Date: Mon, 23 Jan 2023 12:46:51 +0530
+Subject: [PATCH 122/383] arm64: dts: rockchip: Add missing CM3i fallback
+ compatible for Radxa E25
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+In order to function the Radxa E25 Carrier board, it is mandatory to
+mount the Radxa CM3i module. 
+
+Add Radxa CM3i compatible as fallback compatible to string to satisfy
+the Module and Carrier board topology.
+
+Fixes: 2bf2f4d9f673 ("arm64: dts: rockchip: Add Radxa CM3I E25")
+Cc: Chukun Pan <amadeus@jmu.edu.cn>
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Link: https://lore.kernel.org/r/20230123071654.73139-2-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-radxa-e25.dts | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-radxa-e25.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-radxa-e25.dts
+@@ -5,7 +5,7 @@
+ 
+ / {
+ 	model = "Radxa E25";
+-	compatible = "radxa,e25", "rockchip,rk3568";
++	compatible = "radxa,e25", "radxa,cm3i", "rockchip,rk3568";
+ 
+ 	aliases {
+ 		mmc1 = &sdmmc0;
diff --git a/target/linux/rockchip/patches-6.1/123-arm64-dts-rockchip-Drop-unneeded-model-for-Radxa-CM3.patch b/target/linux/rockchip/patches-6.1/123-arm64-dts-rockchip-Drop-unneeded-model-for-Radxa-CM3.patch
new file mode 100644
index 0000000000..95fb44dd30
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/123-arm64-dts-rockchip-Drop-unneeded-model-for-Radxa-CM3.patch
@@ -0,0 +1,39 @@
+From 884bdd194a5d198d8c228f59637c9e270a9e1623 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@amarulasolutions.com>
+Date: Mon, 23 Jan 2023 12:46:52 +0530
+Subject: [PATCH 123/383] arm64: dts: rockchip: Drop unneeded model for Radxa
+ CM3i
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+With module and carrier board topology, carrier board dts will include
+module dtsi files for creating complete platform.
+
+The carrier board dts will have final model name and compatible string
+so any model name added in module dtsi will eventually replaced.
+
+This happened for any devicetree property if the same property is updated
+or added twice.
+
+So, drop this unneeded model name from module dtsi.
+
+Cc: Chukun Pan <amadeus@jmu.edu.cn>
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Link: https://lore.kernel.org/r/20230123071654.73139-3-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-radxa-cm3i.dtsi | 1 -
+ 1 file changed, 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-radxa-cm3i.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3568-radxa-cm3i.dtsi
+@@ -6,7 +6,6 @@
+ #include "rk3568.dtsi"
+ 
+ / {
+-	model = "Radxa CM3 Industrial Board";
+ 	compatible = "radxa,cm3i", "rockchip,rk3568";
+ 
+ 	aliases {
diff --git a/target/linux/rockchip/patches-6.1/124-arm64-dts-rockchip-Correct-the-model-name-for-Radxa-.patch b/target/linux/rockchip/patches-6.1/124-arm64-dts-rockchip-Correct-the-model-name-for-Radxa-.patch
new file mode 100644
index 0000000000..a91a560a4d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/124-arm64-dts-rockchip-Correct-the-model-name-for-Radxa-.patch
@@ -0,0 +1,30 @@
+From 30fe85597fa7932fabca07e4b82a7f51de1b93c3 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@amarulasolutions.com>
+Date: Mon, 23 Jan 2023 12:46:53 +0530
+Subject: [PATCH 124/383] arm64: dts: rockchip: Correct the model name for
+ Radxa E25
+
+Radxa E25 is a Carrier board, so update the model name for Radxa E25
+as suggested by the Radxa website.
+
+Fixes: 2bf2f4d9f673 ("arm64: dts: rockchip: Add Radxa CM3I E25")
+Cc: Chukun Pan <amadeus@jmu.edu.cn>
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Link: https://lore.kernel.org/r/20230123071654.73139-4-jagan@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568-radxa-e25.dts | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-radxa-e25.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-radxa-e25.dts
+@@ -4,7 +4,7 @@
+ #include "rk3568-radxa-cm3i.dtsi"
+ 
+ / {
+-	model = "Radxa E25";
++	model = "Radxa E25 Carrier Board";
+ 	compatible = "radxa,e25", "radxa,cm3i", "rockchip,rk3568";
+ 
+ 	aliases {
diff --git a/target/linux/rockchip/patches-6.1/125-arm64-dts-rockchip-Fix-rk3399-GICv3-ITS-node-name.patch b/target/linux/rockchip/patches-6.1/125-arm64-dts-rockchip-Fix-rk3399-GICv3-ITS-node-name.patch
new file mode 100644
index 0000000000..f7fa347096
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/125-arm64-dts-rockchip-Fix-rk3399-GICv3-ITS-node-name.patch
@@ -0,0 +1,27 @@
+From 1534825aab467b500751db6f32c73c9209c92064 Mon Sep 17 00:00:00 2001
+From: Rob Herring <robh@kernel.org>
+Date: Tue, 7 Feb 2023 17:47:49 -0600
+Subject: [PATCH 125/383] arm64: dts: rockchip: Fix rk3399 GICv3 ITS node name
+
+The GICv3 ITS is an MSI controller, therefore its node name should be
+'msi-controller'.
+
+Signed-off-by: Rob Herring <robh@kernel.org>
+Link: https://lore.kernel.org/r/20230207234750.202154-1-robh@kernel.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399.dtsi | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399.dtsi
+@@ -552,7 +552,7 @@
+ 		      <0x0 0xfff10000 0 0x10000>, /* GICH */
+ 		      <0x0 0xfff20000 0 0x10000>; /* GICV */
+ 		interrupts = <GIC_PPI 9 IRQ_TYPE_LEVEL_HIGH 0>;
+-		its: interrupt-controller@fee20000 {
++		its: msi-controller@fee20000 {
+ 			compatible = "arm,gic-v3-its";
+ 			msi-controller;
+ 			#msi-cells = <1>;
diff --git a/target/linux/rockchip/patches-6.1/126-arm64-dts-rockchip-Lower-SD-card-speed-on-rk3399-Pin.patch b/target/linux/rockchip/patches-6.1/126-arm64-dts-rockchip-Lower-SD-card-speed-on-rk3399-Pin.patch
new file mode 100644
index 0000000000..cd06e69b00
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/126-arm64-dts-rockchip-Lower-SD-card-speed-on-rk3399-Pin.patch
@@ -0,0 +1,37 @@
+From e439396603ba9f13adbf453a0d3cc9e2f48d2389 Mon Sep 17 00:00:00 2001
+From: Dan Johansen <strit@manjaro.org>
+Date: Sun, 5 Mar 2023 11:47:31 +0100
+Subject: [PATCH 126/383] arm64: dts: rockchip: Lower SD card speed on rk3399
+ Pinebook Pro
+
+MicroSD card slot in the Pinebook Pro is located on a separate
+daughterboard that's connected to the mainboard using a rather
+long flat cable.  The resulting signal degradation causes many
+perfectly fine microSD cards not to work in the Pinebook Pro,
+which is a common source of frustration among the owners.
+
+Changing the mode and lowering the speed reportedly fixes this
+issue and makes many microSD cards work as expected.
+
+Co-developed-by: Dragan Simic <dragan.simic@gmail.com>
+Signed-off-by: Dragan Simic <dragan.simic@gmail.com>
+Tested-by: JR Gonzalez <jrg@scientiam.org>
+Signed-off-by: Dan Johansen <strit@manjaro.org>
+Link: https://lore.kernel.org/r/20230305104730.15849-1-strit@manjaro.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399-pinebook-pro.dts | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-pinebook-pro.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3399-pinebook-pro.dts
+@@ -943,7 +943,7 @@
+ 	disable-wp;
+ 	pinctrl-names = "default";
+ 	pinctrl-0 = <&sdmmc_clk &sdmmc_cmd &sdmmc_bus4>;
+-	sd-uhs-sdr104;
++	sd-uhs-sdr50;
+ 	vmmc-supply = <&vcc3v0_sd>;
+ 	vqmmc-supply = <&vcc_sdio>;
+ 	status = "okay";
diff --git a/target/linux/rockchip/patches-6.1/127-arm64-dts-rockchip-Add-sdmmc-node-to-rk3588.patch b/target/linux/rockchip/patches-6.1/127-arm64-dts-rockchip-Add-sdmmc-node-to-rk3588.patch
new file mode 100644
index 0000000000..74358bd103
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/127-arm64-dts-rockchip-Add-sdmmc-node-to-rk3588.patch
@@ -0,0 +1,41 @@
+From 09f20610b2f3fd00408004c92494c6e56f60a015 Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Tue, 28 Feb 2023 10:36:10 +0000
+Subject: [PATCH 127/383] arm64: dts: rockchip: Add sdmmc node to rk3588
+
+Add SD Card node for RK3588s and RK3588.
+
+Co-developed-by: Shawn Lin <shawn.lin@rock-chips.com>
+Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Link: https://lore.kernel.org/r/20230228103610.25108-1-lucas.tanure@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 15 +++++++++++++++
+ 1 file changed, 15 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -1099,6 +1099,21 @@
+ 		};
+ 	};
+ 
++	sdmmc: mmc@fe2c0000 {
++		compatible = "rockchip,rk3588-dw-mshc", "rockchip,rk3288-dw-mshc";
++		reg = <0x0 0xfe2c0000 0x0 0x4000>;
++		interrupts = <GIC_SPI 203 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&scmi_clk SCMI_HCLK_SD>, <&scmi_clk SCMI_CCLK_SD>,
++			 <&cru SCLK_SDMMC_DRV>, <&cru SCLK_SDMMC_SAMPLE>;
++		clock-names = "biu", "ciu", "ciu-drive", "ciu-sample";
++		fifo-depth = <0x100>;
++		max-frequency = <200000000>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&sdmmc_clk &sdmmc_cmd &sdmmc_det &sdmmc_bus4>;
++		power-domains = <&power RK3588_PD_SDMMC>;
++		status = "disabled";
++	};
++
+ 	sdhci: mmc@fe2e0000 {
+ 		compatible = "rockchip,rk3588-dwcmshc";
+ 		reg = <0x0 0xfe2e0000 0x0 0x10000>;
diff --git a/target/linux/rockchip/patches-6.1/128-arm64-dts-rockchip-Enable-USB-OTG-for-rk3566-Radxa-C.patch b/target/linux/rockchip/patches-6.1/128-arm64-dts-rockchip-Enable-USB-OTG-for-rk3566-Radxa-C.patch
new file mode 100644
index 0000000000..ee121b7afe
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/128-arm64-dts-rockchip-Enable-USB-OTG-for-rk3566-Radxa-C.patch
@@ -0,0 +1,34 @@
+From ddbf1a97819e2baa63d833d2a606bbb267d87f1b Mon Sep 17 00:00:00 2001
+From: Manoj Sai <abbaraju.manojsai@amarulasolutions.com>
+Date: Thu, 23 Feb 2023 19:29:29 +0530
+Subject: [PATCH 128/383] arm64: dts: rockchip: Enable USB OTG for rk3566 Radxa
+ CM3
+
+Enable USB OTG support for Radxa Compute Module 3 IO Board
+
+Signed-off-by: Manoj Sai <abbaraju.manojsai@amarulasolutions.com>
+Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
+Link: https://lore.kernel.org/r/20230223135929.630787-1-abbaraju.manojsai@amarulasolutions.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3-io.dts | 8 ++++++++
+ 1 file changed, 8 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3-io.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-radxa-cm3-io.dts
+@@ -254,6 +254,14 @@
+ 	status = "okay";
+ };
+ 
++&usb2phy0_otg {
++	status = "okay";
++};
++
++&usb_host0_xhci {
++	status = "okay";
++};
++
+ &vop {
+ 	assigned-clocks = <&cru DCLK_VOP0>, <&cru DCLK_VOP1>;
+ 	assigned-clock-parents = <&pmucru PLL_HPLL>, <&cru PLL_VPLL>;
diff --git a/target/linux/rockchip/patches-6.1/129-arm64-dts-rockchip-Add-display-support-to-Odroid-Go-.patch b/target/linux/rockchip/patches-6.1/129-arm64-dts-rockchip-Add-display-support-to-Odroid-Go-.patch
new file mode 100644
index 0000000000..51069f9f22
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/129-arm64-dts-rockchip-Add-display-support-to-Odroid-Go-.patch
@@ -0,0 +1,31 @@
+From 88f7d5f4fe56051fd293370ccec2a474d1e51a0b Mon Sep 17 00:00:00 2001
+From: Maya Matuszczyk <maccraft123mc@gmail.com>
+Date: Mon, 13 Feb 2023 16:38:16 +0100
+Subject: [PATCH 129/383] arm64: dts: rockchip: Add display support to Odroid
+ Go Super
+
+Note that orientation property in ST7701 driver is currently missing,
+And that ST7701 panel driver uses different regulator names compared to
+driver for Elida KD35T133 driver.
+
+Signed-off-by: Maya Matuszczyk <maccraft123mc@gmail.com>
+Link: https://lore.kernel.org/r/20230213153816.213526-5-maccraft123mc@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3326-odroid-go3.dts | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3326-odroid-go3.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go3.dts
+@@ -142,7 +142,9 @@
+ };
+ 
+ &internal_display {
+-	status = "disabled";
++	compatible = "elida,kd50t048a", "sitronix,st7701";
++	reset-gpios = <&gpio3 RK_PC0 GPIO_ACTIVE_HIGH>;
++	VCC-supply = <&vcc_lcd>;
+ };
+ 
+ &rk817_charger {
diff --git a/target/linux/rockchip/patches-6.1/130-arm64-dts-rockchip-Add-Khadas-edge2-board.patch b/target/linux/rockchip/patches-6.1/130-arm64-dts-rockchip-Add-Khadas-edge2-board.patch
new file mode 100644
index 0000000000..d2ca2db0af
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/130-arm64-dts-rockchip-Add-Khadas-edge2-board.patch
@@ -0,0 +1,69 @@
+From df3613e14a0670b41a682232f17640b5d93c93a4 Mon Sep 17 00:00:00 2001
+From: Yixun Lan <dlan@gentoo.org>
+Date: Wed, 15 Mar 2023 11:34:41 +0800
+Subject: [PATCH 130/383] arm64: dts: rockchip: Add Khadas edge2 board
+
+Edge2 is an ultraslim, credit-card sized ARM PC designed by Khadas.
+
+In this patch, we will add basic device tree support for this board,
+Only eMMC, UART are enabled, so it's capable of booting into
+a basic linux system from eMMC via serial console.
+
+Signed-off-by: Yixun Lan <dlan@gentoo.org>
+Link: https://lore.kernel.org/r/20230315033441.32719-3-dlan@gentoo.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |  1 +
+ .../dts/rockchip/rk3588s-khadas-edge2.dts     | 37 +++++++++++++++++++
+ 2 files changed, 38 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588s-khadas-edge2.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -90,4 +90,5 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-ro
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-edgeble-neu6a-io.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-v10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-rock-5b.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-khadas-edge2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-rock-5a.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-khadas-edge2.dts
+@@ -0,0 +1,37 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rk3588s.dtsi"
++
++/ {
++	model = "Khadas Edge2";
++	compatible = "khadas,edge2", "rockchip,rk3588s";
++
++	aliases {
++		mmc0 = &sdhci;
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++};
++
++&sdhci {
++	bus-width = <8>;
++	no-sdio;
++	no-sd;
++	non-removable;
++	max-frequency = <200000000>;
++	mmc-hs400-1_8v;
++	mmc-hs400-enhanced-strobe;
++	status = "okay";
++};
++
++&uart2 {
++	pinctrl-0 = <&uart2m0_xfer>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/009-v6.4-arm64-dts-rockchip-Add-FriendlyElec-Nanopi-R5S.patch b/target/linux/rockchip/patches-6.1/131-arm64-dts-rockchip-Add-FriendlyElec-Nanopi-R5S.patch
similarity index 97%
rename from target/linux/rockchip/patches-6.1/009-v6.4-arm64-dts-rockchip-Add-FriendlyElec-Nanopi-R5S.patch
rename to target/linux/rockchip/patches-6.1/131-arm64-dts-rockchip-Add-FriendlyElec-Nanopi-R5S.patch
index 3d502a65b6..83bac3bba0 100644
--- a/target/linux/rockchip/patches-6.1/009-v6.4-arm64-dts-rockchip-Add-FriendlyElec-Nanopi-R5S.patch
+++ b/target/linux/rockchip/patches-6.1/131-arm64-dts-rockchip-Add-FriendlyElec-Nanopi-R5S.patch
@@ -1,7 +1,7 @@
-From c6629b9a6738a64507478527da6c7b83c10a6d2c Mon Sep 17 00:00:00 2001
+From 0f79c66cb5322cabc70b528beba81e81e8d52ca0 Mon Sep 17 00:00:00 2001
 From: Vasily Khoruzhick <anarsoul@gmail.com>
 Date: Tue, 7 Mar 2023 22:32:40 -0800
-Subject: [PATCH] arm64: dts: rockchip: Add FriendlyElec Nanopi R5S
+Subject: [PATCH 131/383] arm64: dts: rockchip: Add FriendlyElec Nanopi R5S
 
 FriendlyElec Nanopi R5S is an open-sourced mini IoT gateway device.
 
@@ -22,6 +22,7 @@ Based on Tianling Shen's <cnsztl@gmail.com> work.
 Signed-off-by: Vasily Khoruzhick <anarsoul@gmail.com>
 Link: https://lore.kernel.org/r/20230308063240.107178-2-anarsoul@gmail.com
 Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  arch/arm64/boot/dts/rockchip/Makefile         |   1 +
  .../boot/dts/rockchip/rk3568-nanopi-r5s.dts   | 713 ++++++++++++++++++
@@ -30,11 +31,13 @@ Signed-off-by: Heiko Stuebner <heiko@sntech.de>
 
 --- a/arch/arm64/boot/dts/rockchip/Makefile
 +++ b/arch/arm64/boot/dts/rockchip/Makefile
-@@ -74,4 +74,5 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-ro
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-cm4.dtb
+@@ -84,6 +84,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-lu
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-bpi-r2-pro.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-evb1-v10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-lubancat-2.dtb
 +dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-nanopi-r5s.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-odroid-m1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-radxa-e25.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-rock-3a.dtb
 --- /dev/null
 +++ b/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5s.dts
diff --git a/target/linux/rockchip/patches-6.1/132-arm64-dts-rockchip-add-rk3588-cache-level-informatio.patch b/target/linux/rockchip/patches-6.1/132-arm64-dts-rockchip-add-rk3588-cache-level-informatio.patch
new file mode 100644
index 0000000000..19be66ae3b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/132-arm64-dts-rockchip-add-rk3588-cache-level-informatio.patch
@@ -0,0 +1,90 @@
+From 2a90aa575ceb94acb70407a08d058af02419e034 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Fri, 17 Mar 2023 18:41:02 +0100
+Subject: [PATCH 132/383] arm64: dts: rockchip: add rk3588 cache level
+ information
+
+Add missing, mandatory cache-level information for RK3588.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230317174102.61209-1-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 9 +++++++++
+ 1 file changed, 9 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -222,6 +222,7 @@
+ 			cache-size = <131072>;
+ 			cache-line-size = <64>;
+ 			cache-sets = <512>;
++			cache-level = <2>;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -230,6 +231,7 @@
+ 			cache-size = <131072>;
+ 			cache-line-size = <64>;
+ 			cache-sets = <512>;
++			cache-level = <2>;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -238,6 +240,7 @@
+ 			cache-size = <131072>;
+ 			cache-line-size = <64>;
+ 			cache-sets = <512>;
++			cache-level = <2>;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -246,6 +249,7 @@
+ 			cache-size = <131072>;
+ 			cache-line-size = <64>;
+ 			cache-sets = <512>;
++			cache-level = <2>;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -254,6 +258,7 @@
+ 			cache-size = <524288>;
+ 			cache-line-size = <64>;
+ 			cache-sets = <1024>;
++			cache-level = <2>;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -262,6 +267,7 @@
+ 			cache-size = <524288>;
+ 			cache-line-size = <64>;
+ 			cache-sets = <1024>;
++			cache-level = <2>;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -270,6 +276,7 @@
+ 			cache-size = <524288>;
+ 			cache-line-size = <64>;
+ 			cache-sets = <1024>;
++			cache-level = <2>;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -278,6 +285,7 @@
+ 			cache-size = <524288>;
+ 			cache-line-size = <64>;
+ 			cache-sets = <1024>;
++			cache-level = <2>;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -286,6 +294,7 @@
+ 			cache-size = <3145728>;
+ 			cache-line-size = <64>;
+ 			cache-sets = <4096>;
++			cache-level = <3>;
+ 		};
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/010-v6.4-arm64-dts-rockchip-create-common-dtsi-for-NanoPi-R5-serie.patch b/target/linux/rockchip/patches-6.1/133-arm64-dts-rockchip-create-common-dtsi-for-NanoPi-R5-.patch
similarity index 99%
rename from target/linux/rockchip/patches-6.1/010-v6.4-arm64-dts-rockchip-create-common-dtsi-for-NanoPi-R5-serie.patch
rename to target/linux/rockchip/patches-6.1/133-arm64-dts-rockchip-create-common-dtsi-for-NanoPi-R5-.patch
index cf9fe06ad0..ec4c42f6db 100644
--- a/target/linux/rockchip/patches-6.1/010-v6.4-arm64-dts-rockchip-create-common-dtsi-for-NanoPi-R5-serie.patch
+++ b/target/linux/rockchip/patches-6.1/133-arm64-dts-rockchip-create-common-dtsi-for-NanoPi-R5-.patch
@@ -1,13 +1,15 @@
-From c8ec73b05a95d9f0969ae0f28dd8799a54fcdfc7 Mon Sep 17 00:00:00 2001
+From d4c4f4d2f6ab28eb99fe790dda61b5b24fb3da7a Mon Sep 17 00:00:00 2001
 From: Tianling Shen <cnsztl@gmail.com>
 Date: Sat, 18 Mar 2023 16:37:41 +0800
-Subject: [PATCH] arm64: dts: rockchip: create common dtsi for NanoPi R5 series
+Subject: [PATCH 133/383] arm64: dts: rockchip: create common dtsi for NanoPi
+ R5 series
 
 Create common dtsi for the FriendlyElec NanoPi R5 series.
 
 Signed-off-by: Tianling Shen <cnsztl@gmail.com>
 Link: https://lore.kernel.org/r/20230318083745.6181-2-cnsztl@gmail.com
 Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  .../boot/dts/rockchip/rk3568-nanopi-r5s.dts   | 575 +----------------
  .../boot/dts/rockchip/rk3568-nanopi-r5s.dtsi  | 596 ++++++++++++++++++
diff --git a/target/linux/rockchip/patches-6.1/013-v6.4-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R5C.patch b/target/linux/rockchip/patches-6.1/134-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R5C.patch
similarity index 90%
rename from target/linux/rockchip/patches-6.1/013-v6.4-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R5C.patch
rename to target/linux/rockchip/patches-6.1/134-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R5C.patch
index 0465d80cba..e474edf2a6 100644
--- a/target/linux/rockchip/patches-6.1/013-v6.4-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R5C.patch
+++ b/target/linux/rockchip/patches-6.1/134-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R5C.patch
@@ -1,7 +1,7 @@
-From 05620031408ac6cfc6d5c048431827e49aa0ade1 Mon Sep 17 00:00:00 2001
+From 89148f6f48c81638e0cc875eb233ac25ce4bb218 Mon Sep 17 00:00:00 2001
 From: Tianling Shen <cnsztl@gmail.com>
 Date: Sat, 18 Mar 2023 16:37:43 +0800
-Subject: [PATCH] arm64: dts: rockchip: Add FriendlyARM NanoPi R5C
+Subject: [PATCH 134/383] arm64: dts: rockchip: Add FriendlyARM NanoPi R5C
 
 FriendlyARM NanoPi R5C is an open-sourced mini IoT gateway device.
 
@@ -20,6 +20,7 @@ Specification:
 Signed-off-by: Tianling Shen <cnsztl@gmail.com>
 Link: https://lore.kernel.org/r/20230318083745.6181-4-cnsztl@gmail.com
 Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  arch/arm64/boot/dts/rockchip/Makefile         |   1 +
  .../boot/dts/rockchip/rk3568-nanopi-r5c.dts   | 112 ++++++++++++++++++
@@ -28,13 +29,14 @@ Signed-off-by: Heiko Stuebner <heiko@sntech.de>
 
 --- a/arch/arm64/boot/dts/rockchip/Makefile
 +++ b/arch/arm64/boot/dts/rockchip/Makefile
-@@ -74,5 +74,6 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-ro
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-soquartz-cm4.dtb
+@@ -84,6 +84,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-lu
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-bpi-r2-pro.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-evb1-v10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-lubancat-2.dtb
 +dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-nanopi-r5c.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-nanopi-r5s.dtb
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-rock-3a.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-odroid-m1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-radxa-e25.dtb
 --- /dev/null
 +++ b/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5c.dts
 @@ -0,0 +1,112 @@
diff --git a/target/linux/rockchip/patches-6.1/011-v6.4-arm64-dts-rockchip-fix-gmac-support-for-NanoPi-R5S.patch b/target/linux/rockchip/patches-6.1/135-arm64-dts-rockchip-fix-gmac-support-for-NanoPi-R5S.patch
similarity index 87%
rename from target/linux/rockchip/patches-6.1/011-v6.4-arm64-dts-rockchip-fix-gmac-support-for-NanoPi-R5S.patch
rename to target/linux/rockchip/patches-6.1/135-arm64-dts-rockchip-fix-gmac-support-for-NanoPi-R5S.patch
index 47f76d54e7..6ebc7e3e5b 100644
--- a/target/linux/rockchip/patches-6.1/011-v6.4-arm64-dts-rockchip-fix-gmac-support-for-NanoPi-R5S.patch
+++ b/target/linux/rockchip/patches-6.1/135-arm64-dts-rockchip-fix-gmac-support-for-NanoPi-R5S.patch
@@ -1,7 +1,7 @@
-From 31425b1fadb2040b359e52ffc24c049a78d56c96 Mon Sep 17 00:00:00 2001
+From 3c1ea479e5e18645315760fb75ddd81ab16ccfb5 Mon Sep 17 00:00:00 2001
 From: Tianling Shen <cnsztl@gmail.com>
 Date: Sat, 18 Mar 2023 16:37:44 +0800
-Subject: [PATCH] arm64: dts: rockchip: fix gmac support for NanoPi R5S
+Subject: [PATCH 135/383] arm64: dts: rockchip: fix gmac support for NanoPi R5S
 
 - Changed phy-mode to rgmii.
 
@@ -13,6 +13,7 @@ Subject: [PATCH] arm64: dts: rockchip: fix gmac support for NanoPi R5S
 Signed-off-by: Tianling Shen <cnsztl@gmail.com>
 Link: https://lore.kernel.org/r/20230318083745.6181-5-cnsztl@gmail.com
 Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5s.dts | 7 ++-----
  1 file changed, 2 insertions(+), 5 deletions(-)
diff --git a/target/linux/rockchip/patches-6.1/012-v6.4-arm64-dts-rockchip-remove-I2S1-TDM-node-for-the-NanoPi-R5.patch b/target/linux/rockchip/patches-6.1/136-arm64-dts-rockchip-remove-I2S1-TDM-node-for-the-Nano.patch
similarity index 82%
rename from target/linux/rockchip/patches-6.1/012-v6.4-arm64-dts-rockchip-remove-I2S1-TDM-node-for-the-NanoPi-R5.patch
rename to target/linux/rockchip/patches-6.1/136-arm64-dts-rockchip-remove-I2S1-TDM-node-for-the-Nano.patch
index 48021b226a..a4e4e9e098 100644
--- a/target/linux/rockchip/patches-6.1/012-v6.4-arm64-dts-rockchip-remove-I2S1-TDM-node-for-the-NanoPi-R5.patch
+++ b/target/linux/rockchip/patches-6.1/136-arm64-dts-rockchip-remove-I2S1-TDM-node-for-the-Nano.patch
@@ -1,8 +1,8 @@
-From 975e9bbad11950fc8276f1fa260d8bf2c341aa41 Mon Sep 17 00:00:00 2001
+From dbef06e05d620ef35c670f9b1433f4bb05185499 Mon Sep 17 00:00:00 2001
 From: Tianling Shen <cnsztl@gmail.com>
 Date: Sat, 18 Mar 2023 16:37:45 +0800
-Subject: [PATCH] arm64: dts: rockchip: remove I2S1 TDM node for the NanoPi R5
- series
+Subject: [PATCH 136/383] arm64: dts: rockchip: remove I2S1 TDM node for the
+ NanoPi R5 series
 
 This is for the audio output which does not exist on the boards.
 Also disable regulator-always-on for vccio_acodec since it's only
@@ -11,6 +11,7 @@ used by the audio output.
 Signed-off-by: Tianling Shen <cnsztl@gmail.com>
 Link: https://lore.kernel.org/r/20230318083745.6181-6-cnsztl@gmail.com
 Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5s.dtsi | 6 ------
  1 file changed, 6 deletions(-)
diff --git a/target/linux/rockchip/patches-6.1/137-arm64-dts-rockchip-fix-px30-lvds-node.patch b/target/linux/rockchip/patches-6.1/137-arm64-dts-rockchip-fix-px30-lvds-node.patch
new file mode 100644
index 0000000000..1b7e0de6a2
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/137-arm64-dts-rockchip-fix-px30-lvds-node.patch
@@ -0,0 +1,39 @@
+From c25db3e701a6675f9210979adcb8eefff62ed61a Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:31:22 +0100
+Subject: [PATCH 137/383] arm64: dts: rockchip: fix px30 lvds node
+
+With the conversion of rockchip,lvds.yaml a port@1 node
+is required, so add a node with label lvds_out.
+Also add label lvds_in to port@0.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Link: https://lore.kernel.org/r/99895a4b-25c4-4b64-42ac-6f70940ab56e@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/px30.dtsi | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/px30.dtsi
++++ b/arch/arm64/boot/dts/rockchip/px30.dtsi
+@@ -474,7 +474,7 @@
+ 				#address-cells = <1>;
+ 				#size-cells = <0>;
+ 
+-				port@0 {
++				lvds_in: port@0 {
+ 					reg = <0>;
+ 					#address-cells = <1>;
+ 					#size-cells = <0>;
+@@ -489,6 +489,10 @@
+ 						remote-endpoint = <&vopl_out_lvds>;
+ 					};
+ 				};
++
++				lvds_out: port@1 {
++					reg = <1>;
++				};
+ 			};
+ 		};
+ 	};
diff --git a/target/linux/rockchip/patches-6.1/138-arm64-dts-rockchip-fix-px30-dsi-node.patch b/target/linux/rockchip/patches-6.1/138-arm64-dts-rockchip-fix-px30-dsi-node.patch
new file mode 100644
index 0000000000..b4a1e85889
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/138-arm64-dts-rockchip-fix-px30-dsi-node.patch
@@ -0,0 +1,39 @@
+From c12b0800b6142ca203bba89fba0ce7bcf63dc2cb Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:31:52 +0100
+Subject: [PATCH 138/383] arm64: dts: rockchip: fix px30 dsi node
+
+With the conversion of rockchip,dw-mipi-dsi.yaml a port@1 node
+is required, so add a node with label dsi_out.
+Also add label dsi_in to port@0.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Link: https://lore.kernel.org/r/1ee3e676-aef4-f464-82b0-8fb39ba5c60d@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/px30.dtsi | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/px30.dtsi
++++ b/arch/arm64/boot/dts/rockchip/px30.dtsi
+@@ -1138,7 +1138,7 @@
+ 			#address-cells = <1>;
+ 			#size-cells = <0>;
+ 
+-			port@0 {
++			dsi_in: port@0 {
+ 				reg = <0>;
+ 				#address-cells = <1>;
+ 				#size-cells = <0>;
+@@ -1153,6 +1153,10 @@
+ 					remote-endpoint = <&vopl_out_dsi>;
+ 				};
+ 			};
++
++			dsi_out: port@1 {
++				reg = <1>;
++			};
+ 		};
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/139-arm64-dts-rockchip-fix-rk3399-dsi-node.patch b/target/linux/rockchip/patches-6.1/139-arm64-dts-rockchip-fix-rk3399-dsi-node.patch
new file mode 100644
index 0000000000..d0e3edc994
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/139-arm64-dts-rockchip-fix-rk3399-dsi-node.patch
@@ -0,0 +1,62 @@
+From d31d4d1aa41eadca15589d78168c41abce5a2413 Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:32:22 +0100
+Subject: [PATCH 139/383] arm64: dts: rockchip: fix rk3399 dsi node
+
+Use generic node name for rk3399.dtsi dsi node.
+With the conversion of rockchip,dw-mipi-dsi.yaml a port@1 node
+is required, so add a node with label mipi_out.
+Also restyle.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Link: https://lore.kernel.org/r/1e019e9e-a8da-3d57-2770-f6b81bbbf591@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399.dtsi | 13 +++++++++++--
+ 1 file changed, 11 insertions(+), 2 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399.dtsi
+@@ -1956,7 +1956,7 @@
+ 		};
+ 	};
+ 
+-	mipi_dsi: mipi@ff960000 {
++	mipi_dsi: dsi@ff960000 {
+ 		compatible = "rockchip,rk3399-mipi-dsi", "snps,dw-mipi-dsi";
+ 		reg = <0x0 0xff960000 0x0 0x8000>;
+ 		interrupts = <GIC_SPI 45 IRQ_TYPE_LEVEL_HIGH 0>;
+@@ -1984,15 +1984,20 @@
+ 					reg = <0>;
+ 					remote-endpoint = <&vopb_out_mipi>;
+ 				};
++
+ 				mipi_in_vopl: endpoint@1 {
+ 					reg = <1>;
+ 					remote-endpoint = <&vopl_out_mipi>;
+ 				};
+ 			};
++
++			mipi_out: port@1 {
++				reg = <1>;
++			};
+ 		};
+ 	};
+ 
+-	mipi_dsi1: mipi@ff968000 {
++	mipi_dsi1: dsi@ff968000 {
+ 		compatible = "rockchip,rk3399-mipi-dsi", "snps,dw-mipi-dsi";
+ 		reg = <0x0 0xff968000 0x0 0x8000>;
+ 		interrupts = <GIC_SPI 46 IRQ_TYPE_LEVEL_HIGH 0>;
+@@ -2027,6 +2032,10 @@
+ 					remote-endpoint = <&vopl_out_mipi1>;
+ 				};
+ 			};
++
++			mipi1_out: port@1 {
++				reg = <1>;
++			};
+ 		};
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/140-arm64-dts-rockchip-fix-rk3399-dp-node.patch b/target/linux/rockchip/patches-6.1/140-arm64-dts-rockchip-fix-rk3399-dp-node.patch
new file mode 100644
index 0000000000..8f01bc32be
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/140-arm64-dts-rockchip-fix-rk3399-dp-node.patch
@@ -0,0 +1,48 @@
+From d46c8d56170e8ac81e41ffbe4614793070d7c24f Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:32:52 +0100
+Subject: [PATCH 140/383] arm64: dts: rockchip: fix rk3399 dp node
+
+Use generic node name for rk3399.dtsi dp node.
+With the conversion of rockchip,analogix-dp.yaml a port@1 node
+is required, so add a node with label edp_out.
+Also restyle.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Link: https://lore.kernel.org/r/f6008819-db9b-0944-3f5b-5522b7cd8a8d@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399.dtsi | 7 ++++++-
+ 1 file changed, 6 insertions(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399.dtsi
+@@ -2039,7 +2039,7 @@
+ 		};
+ 	};
+ 
+-	edp: edp@ff970000 {
++	edp: dp@ff970000 {
+ 		compatible = "rockchip,rk3399-edp";
+ 		reg = <0x0 0xff970000 0x0 0x8000>;
+ 		interrupts = <GIC_SPI 10 IRQ_TYPE_LEVEL_HIGH 0>;
+@@ -2056,6 +2056,7 @@
+ 		ports {
+ 			#address-cells = <1>;
+ 			#size-cells = <0>;
++
+ 			edp_in: port@0 {
+ 				reg = <0>;
+ 				#address-cells = <1>;
+@@ -2071,6 +2072,10 @@
+ 					remote-endpoint = <&vopl_out_edp>;
+ 				};
+ 			};
++
++			edp_out: port@1 {
++				reg = <1>;
++			};
+ 		};
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/141-arm64-dts-rockchip-rename-vbus-supply-to-phy-supply-.patch b/target/linux/rockchip/patches-6.1/141-arm64-dts-rockchip-rename-vbus-supply-to-phy-supply-.patch
new file mode 100644
index 0000000000..ba6e6c5545
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/141-arm64-dts-rockchip-rename-vbus-supply-to-phy-supply-.patch
@@ -0,0 +1,28 @@
+From 686856ab04d1115c5eac7cb82db933fbfd00e375 Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:33:22 +0100
+Subject: [PATCH 141/383] arm64: dts: rockchip: rename vbus-supply to
+ phy-supply in rk3566-box-demo.dts
+
+'vbus-supply' does not match any of the regexes in rk3566-box-demo.dts
+in the usb2phy0_otg node, so rename vbus-supply to phy-supply.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Link: https://lore.kernel.org/r/1889d8ee-e119-4a52-33a1-b990a41a137c@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3566-box-demo.dts | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-box-demo.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-box-demo.dts
+@@ -495,7 +495,7 @@
+ };
+ 
+ &usb2phy0_otg {
+-	vbus-supply = <&vcc5v0_usb2_otg>;
++	phy-supply = <&vcc5v0_usb2_otg>;
+ 	status = "okay";
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/142-arm64-dts-rockchip-remove-hclk-from-dsi-node-on-rk35.patch b/target/linux/rockchip/patches-6.1/142-arm64-dts-rockchip-remove-hclk-from-dsi-node-on-rk35.patch
new file mode 100644
index 0000000000..49dd116833
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/142-arm64-dts-rockchip-remove-hclk-from-dsi-node-on-rk35.patch
@@ -0,0 +1,41 @@
+From 4679a2891b7e97702281e7e2c65346750aa13bf6 Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:33:49 +0100
+Subject: [PATCH 142/383] arm64: dts: rockchip: remove hclk from dsi node on
+ rk356x
+
+The hclk is not used in the dw-mipi-dsi binding,
+so remove hclk from the rk356x.dtsi dsi node.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Link: https://lore.kernel.org/r/4df211eb-4fcd-ee20-48a1-ce7712de552c@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk356x.dtsi | 8 ++++----
+ 1 file changed, 4 insertions(+), 4 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk356x.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk356x.dtsi
+@@ -744,8 +744,8 @@
+ 		compatible = "rockchip,rk3568-mipi-dsi", "snps,dw-mipi-dsi";
+ 		reg = <0x00 0xfe060000 0x00 0x10000>;
+ 		interrupts = <GIC_SPI 68 IRQ_TYPE_LEVEL_HIGH>;
+-		clock-names = "pclk", "hclk";
+-		clocks = <&cru PCLK_DSITX_0>, <&cru HCLK_VO>;
++		clock-names = "pclk";
++		clocks = <&cru PCLK_DSITX_0>;
+ 		phy-names = "dphy";
+ 		phys = <&dsi_dphy0>;
+ 		power-domains = <&power RK3568_PD_VO>;
+@@ -772,8 +772,8 @@
+ 		compatible = "rockchip,rk3568-mipi-dsi", "snps,dw-mipi-dsi";
+ 		reg = <0x0 0xfe070000 0x0 0x10000>;
+ 		interrupts = <GIC_SPI 69 IRQ_TYPE_LEVEL_HIGH>;
+-		clock-names = "pclk", "hclk";
+-		clocks = <&cru PCLK_DSITX_1>, <&cru HCLK_VO>;
++		clock-names = "pclk";
++		clocks = <&cru PCLK_DSITX_1>;
+ 		phy-names = "dphy";
+ 		phys = <&dsi_dphy1>;
+ 		power-domains = <&power RK3568_PD_VO>;
diff --git a/target/linux/rockchip/patches-6.1/143-arm64-dts-rockchip-Enable-watchdog-support-for-RK358.patch b/target/linux/rockchip/patches-6.1/143-arm64-dts-rockchip-Enable-watchdog-support-for-RK358.patch
new file mode 100644
index 0000000000..15b888658f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/143-arm64-dts-rockchip-Enable-watchdog-support-for-RK358.patch
@@ -0,0 +1,33 @@
+From 14552b6a5f3c13ef73ed6bb9d6c8b56a38548596 Mon Sep 17 00:00:00 2001
+From: Shreeya Patel <shreeya.patel@collabora.com>
+Date: Wed, 29 Mar 2023 02:30:47 +0530
+Subject: [PATCH 143/383] arm64: dts: rockchip: Enable watchdog support for
+ RK3588
+
+Add DT node for watchdog support in RK3588.
+
+Signed-off-by: Shreeya Patel <shreeya.patel@collabora.com>
+Link: https://lore.kernel.org/r/20230328210048.195124-2-shreeya.patel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 8 ++++++++
+ 1 file changed, 8 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -1250,6 +1250,14 @@
+ 		status = "disabled";
+ 	};
+ 
++	wdt: watchdog@feaf0000 {
++		compatible = "rockchip,rk3588-wdt", "snps,dw-wdt";
++		reg = <0x0 0xfeaf0000 0x0 0x100>;
++		clocks = <&cru TCLK_WDT0>, <&cru PCLK_WDT0>;
++		clock-names = "tclk", "pclk";
++		interrupts = <GIC_SPI 315 IRQ_TYPE_LEVEL_HIGH 0>;
++	};
++
+ 	spi0: spi@feb00000 {
+ 		compatible = "rockchip,rk3588-spi", "rockchip,rk3066-spi";
+ 		reg = <0x0 0xfeb00000 0x0 0x1000>;
diff --git a/target/linux/rockchip/patches-6.1/144-arm64-dts-rockchip-Add-internal-display-support-to-r.patch b/target/linux/rockchip/patches-6.1/144-arm64-dts-rockchip-Add-internal-display-support-to-r.patch
new file mode 100644
index 0000000000..9faab1dd00
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/144-arm64-dts-rockchip-Add-internal-display-support-to-r.patch
@@ -0,0 +1,162 @@
+From fa5877341e5a4716b550ea13d79792b152cbae69 Mon Sep 17 00:00:00 2001
+From: Martijn Braam <martijn@brixit.nl>
+Date: Tue, 28 Mar 2023 09:33:08 +0200
+Subject: [PATCH 144/383] arm64: dts: rockchip: Add internal display support to
+ rk3399-pinephone-pro
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+The phone's display is using a Hannstar LCD panel. Support it by adding a
+panel DT node and all needed nodes (backlight, MIPI DSI, regulators, etc).
+
+Signed-off-by: Martijn Braam <martijn@brixit.nl>
+Co-developed-by: Kamil Trzciński <ayufan@ayufan.eu>
+Signed-off-by: Kamil Trzciński <ayufan@ayufan.eu>
+Co-developed-by: Ondrej Jirman <megi@xff.cz>
+Signed-off-by: Ondrej Jirman <megi@xff.cz>
+Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
+Tested-by: Ondrej Jirman <megi@xff.cz>
+Link: https://lore.kernel.org/r/20230328073309.1743112-2-javierm@redhat.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3399-pinephone-pro.dts     | 95 +++++++++++++++++++
+ 1 file changed, 95 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-pinephone-pro.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3399-pinephone-pro.dts
+@@ -29,6 +29,11 @@
+ 		stdout-path = "serial2:115200n8";
+ 	};
+ 
++	backlight: backlight {
++		compatible = "pwm-backlight";
++		pwms = <&pwm0 0 50000 0>;
++	};
++
+ 	gpio-keys {
+ 		compatible = "gpio-keys";
+ 		pinctrl-names = "default";
+@@ -102,6 +107,30 @@
+ 		/* WL_REG_ON on module */
+ 		reset-gpios = <&gpio0 RK_PB2 GPIO_ACTIVE_LOW>;
+ 	};
++
++	/* MIPI DSI panel 1.8v supply */
++	vcc1v8_lcd: vcc1v8-lcd {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		regulator-name = "vcc1v8_lcd";
++		regulator-min-microvolt = <1800000>;
++		regulator-max-microvolt = <1800000>;
++		vin-supply = <&vcc3v3_sys>;
++		gpio = <&gpio3 RK_PA5 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++	};
++
++	/* MIPI DSI panel 2.8v supply */
++	vcc2v8_lcd: vcc2v8-lcd {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		regulator-name = "vcc2v8_lcd";
++		regulator-min-microvolt = <2800000>;
++		regulator-max-microvolt = <2800000>;
++		vin-supply = <&vcc3v3_sys>;
++		gpio = <&gpio3 RK_PA1 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++	};
+ };
+ 
+ &cpu_alert0 {
+@@ -139,6 +168,11 @@
+ 	status = "okay";
+ };
+ 
++&gpu {
++	mali-supply = <&vdd_gpu>;
++	status = "okay";
++};
++
+ &i2c0 {
+ 	clock-frequency = <400000>;
+ 	i2c-scl-rising-time-ns = <168>;
+@@ -362,6 +396,39 @@
+ 	status = "okay";
+ };
+ 
++&mipi_dsi {
++	status = "okay";
++	clock-master;
++
++	ports {
++		mipi_out: port@1 {
++			#address-cells = <0>;
++			#size-cells = <0>;
++			reg = <1>;
++
++			mipi_out_panel: endpoint {
++				remote-endpoint = <&mipi_in_panel>;
++			};
++		};
++	};
++
++	panel@0 {
++		compatible = "hannstar,hsd060bhw4";
++		reg = <0>;
++		backlight = <&backlight>;
++		reset-gpios = <&gpio4 RK_PD1 GPIO_ACTIVE_LOW>;
++		vcc-supply = <&vcc2v8_lcd>;
++		iovcc-supply = <&vcc1v8_lcd>;
++		pinctrl-names = "default";
++
++		port {
++			mipi_in_panel: endpoint {
++				remote-endpoint = <&mipi_out_panel>;
++			};
++		};
++	};
++};
++
+ &pmu_io_domains {
+ 	pmu1830-supply = <&vcc_1v8>;
+ 	status = "okay";
+@@ -429,6 +496,10 @@
+ 	status = "okay";
+ };
+ 
++&pwm0 {
++	status = "okay";
++};
++
+ &sdmmc {
+ 	bus-width = <4>;
+ 	cap-sd-highspeed;
+@@ -479,3 +550,27 @@
+ &uart2 {
+ 	status = "okay";
+ };
++
++&vopb {
++	status = "okay";
++	assigned-clocks = <&cru DCLK_VOP0_DIV>, <&cru DCLK_VOP0>,
++			  <&cru ACLK_VOP0>, <&cru HCLK_VOP0>;
++	assigned-clock-rates = <0>, <0>, <400000000>, <100000000>;
++	assigned-clock-parents = <&cru PLL_GPLL>, <&cru DCLK_VOP0_DIV>;
++};
++
++&vopb_mmu {
++	status = "okay";
++};
++
++&vopl {
++	status = "okay";
++	assigned-clocks = <&cru DCLK_VOP1_DIV>, <&cru DCLK_VOP1>,
++			  <&cru ACLK_VOP1>, <&cru HCLK_VOP1>;
++	assigned-clock-rates = <0>, <0>, <400000000>, <100000000>;
++	assigned-clock-parents = <&cru PLL_GPLL>, <&cru DCLK_VOP1_DIV>;
++};
++
++&vopl_mmu {
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/145-arm64-dts-rockchip-Add-touchscreen-support-to-rk3399.patch b/target/linux/rockchip/patches-6.1/145-arm64-dts-rockchip-Add-touchscreen-support-to-rk3399.patch
new file mode 100644
index 0000000000..4282168c86
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/145-arm64-dts-rockchip-Add-touchscreen-support-to-rk3399.patch
@@ -0,0 +1,52 @@
+From caba6877299a8c0cc9a6e4b4f25c97389e054b19 Mon Sep 17 00:00:00 2001
+From: Martijn Braam <martijn@brixit.nl>
+Date: Tue, 28 Mar 2023 09:33:09 +0200
+Subject: [PATCH 145/383] arm64: dts: rockchip: Add touchscreen support to
+ rk3399-pinephone-pro
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+The phone has a Goodix GT1158 touchscreen, add a DT node for it.
+
+Signed-off-by: Martijn Braam <martijn@brixit.nl>
+Co-developed-by: Kamil Trzciński <ayufan@ayufan.eu>
+Signed-off-by: Kamil Trzciński <ayufan@ayufan.eu>
+Co-developed-by: Ondrej Jirman <megi@xff.cz>
+Signed-off-by: Ondrej Jirman <megi@xff.cz>
+Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
+Link: https://lore.kernel.org/r/20230328073309.1743112-3-javierm@redhat.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3399-pinephone-pro.dts     | 19 +++++++++++++++++++
+ 1 file changed, 19 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-pinephone-pro.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3399-pinephone-pro.dts
+@@ -367,6 +367,25 @@
+ 	};
+ };
+ 
++&i2c3 {
++	i2c-scl-rising-time-ns = <450>;
++	i2c-scl-falling-time-ns = <15>;
++	status = "okay";
++
++	touchscreen@14 {
++		compatible = "goodix,gt1158";
++		reg = <0x14>;
++		interrupt-parent = <&gpio3>;
++		interrupts = <RK_PB5 IRQ_TYPE_EDGE_RISING>;
++		irq-gpios = <&gpio3 RK_PB5 GPIO_ACTIVE_HIGH>;
++		reset-gpios = <&gpio3 RK_PB4 GPIO_ACTIVE_HIGH>;
++		AVDD28-supply = <&vcc3v0_touch>;
++		VDDIO-supply = <&vcc3v0_touch>;
++		touchscreen-size-x = <720>;
++		touchscreen-size-y = <1440>;
++	};
++};
++
+ &cluster0_opp {
+ 	opp04 {
+ 		status = "disabled";
diff --git a/target/linux/rockchip/patches-6.1/006-v6.4-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C.patch b/target/linux/rockchip/patches-6.1/146-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C.patch
similarity index 84%
rename from target/linux/rockchip/patches-6.1/006-v6.4-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C.patch
rename to target/linux/rockchip/patches-6.1/146-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C.patch
index 049c8ad1af..669d6c2f18 100644
--- a/target/linux/rockchip/patches-6.1/006-v6.4-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C.patch
+++ b/target/linux/rockchip/patches-6.1/146-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C.patch
@@ -1,7 +1,7 @@
-From 004589ff9df5b75672a78b6c3c4cba93202b14c9 Mon Sep 17 00:00:00 2001
+From fb1a87598595d73d2bfab098476f587b29362fda Mon Sep 17 00:00:00 2001
 From: Tianling Shen <cnsztl@gmail.com>
 Date: Sat, 25 Mar 2023 15:40:20 +0800
-Subject: [PATCH] arm64: dts: rockchip: Add FriendlyARM NanoPi R2C
+Subject: [PATCH 146/383] arm64: dts: rockchip: Add FriendlyARM NanoPi R2C
 
 The NanoPi R2C is a minor variant of NanoPi R2S with the on-board NIC
 chip changed from rtl8211e to yt8521s, and otherwise identical to R2S.
@@ -9,6 +9,7 @@ chip changed from rtl8211e to yt8521s, and otherwise identical to R2S.
 Signed-off-by: Tianling Shen <cnsztl@gmail.com>
 Link: https://lore.kernel.org/r/20230325074022.9818-3-cnsztl@gmail.com
 Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  arch/arm64/boot/dts/rockchip/Makefile         |  1 +
  .../boot/dts/rockchip/rk3328-nanopi-r2c.dts   | 40 +++++++++++++++++++
@@ -17,14 +18,14 @@ Signed-off-by: Heiko Stuebner <heiko@sntech.de>
 
 --- a/arch/arm64/boot/dts/rockchip/Makefile
 +++ b/arch/arm64/boot/dts/rockchip/Makefile
-@@ -10,6 +10,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3318-a9
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-odroid-go2.dtb
+@@ -14,6 +14,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-od
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-odroid-go3.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-a1.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-evb.dtb
 +dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2c.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2s.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-orangepi-r1-plus.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-rock64.dtb
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-rock-pi-e.dtb
 --- /dev/null
 +++ b/arch/arm64/boot/dts/rockchip/rk3328-nanopi-r2c.dts
 @@ -0,0 +1,40 @@
diff --git a/target/linux/rockchip/patches-6.1/008-v6.4-arm64-dts-rockchip-Add-Xunlong-OrangePi-R1-Plus-LTS.patch b/target/linux/rockchip/patches-6.1/147-arm64-dts-rockchip-Add-Xunlong-OrangePi-R1-Plus-LTS.patch
similarity index 89%
rename from target/linux/rockchip/patches-6.1/008-v6.4-arm64-dts-rockchip-Add-Xunlong-OrangePi-R1-Plus-LTS.patch
rename to target/linux/rockchip/patches-6.1/147-arm64-dts-rockchip-Add-Xunlong-OrangePi-R1-Plus-LTS.patch
index 78d3d51a17..9f948727fa 100644
--- a/target/linux/rockchip/patches-6.1/008-v6.4-arm64-dts-rockchip-Add-Xunlong-OrangePi-R1-Plus-LTS.patch
+++ b/target/linux/rockchip/patches-6.1/147-arm64-dts-rockchip-Add-Xunlong-OrangePi-R1-Plus-LTS.patch
@@ -1,7 +1,8 @@
-From 387b3bbac5ea6a0a105d685237f033ffe0f184f1 Mon Sep 17 00:00:00 2001
+From 15c6c09f40537d14737612ba8fd9b8de3e6850fa Mon Sep 17 00:00:00 2001
 From: Tianling Shen <cnsztl@gmail.com>
 Date: Sat, 25 Mar 2023 15:40:22 +0800
-Subject: [PATCH] arm64: dts: rockchip: Add Xunlong OrangePi R1 Plus LTS
+Subject: [PATCH 147/383] arm64: dts: rockchip: Add Xunlong OrangePi R1 Plus
+ LTS
 
 The OrangePi R1 Plus LTS is a minor variant of OrangePi R1 Plus with
 the on-board NIC chip changed from rtl8211e to yt8531c, and otherwise
@@ -10,6 +11,7 @@ identical to OrangePi R1 Plus.
 Signed-off-by: Tianling Shen <cnsztl@gmail.com>
 Link: https://lore.kernel.org/r/20230325074022.9818-5-cnsztl@gmail.com
 Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  arch/arm64/boot/dts/rockchip/Makefile         |  1 +
  .../rockchip/rk3328-orangepi-r1-plus-lts.dts  | 40 +++++++++++++++++++
@@ -18,7 +20,7 @@ Signed-off-by: Heiko Stuebner <heiko@sntech.de>
 
 --- a/arch/arm64/boot/dts/rockchip/Makefile
 +++ b/arch/arm64/boot/dts/rockchip/Makefile
-@@ -13,6 +13,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-ev
+@@ -17,6 +17,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-ev
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2c.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2s.dtb
  dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-orangepi-r1-plus.dtb
diff --git a/target/linux/rockchip/patches-6.1/148-arm64-dts-rockchip-Add-clk_rtc_32k-to-Anbernic-xx3-D.patch b/target/linux/rockchip/patches-6.1/148-arm64-dts-rockchip-Add-clk_rtc_32k-to-Anbernic-xx3-D.patch
new file mode 100644
index 0000000000..5fb3d2a111
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/148-arm64-dts-rockchip-Add-clk_rtc_32k-to-Anbernic-xx3-D.patch
@@ -0,0 +1,51 @@
+From 7b268a51ebd90f68bb40844f89ae432bec92cdc1 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Mon, 27 Mar 2023 10:35:47 -0500
+Subject: [PATCH 148/383] arm64: dts: rockchip: Add clk_rtc_32k to Anbernic xx3
+ Devices
+
+For the Anbernic devices to display properly, we need to specify the
+clock frequency of the PLL_VPLL. Adding the parent clock in the
+rk356x.dtsi requires us to update our clock definitions to accomplish
+this.
+
+Fixes: 64b69474edf3 ("arm64: dts: rockchip: assign rate to clk_rtc_32k on rk356x")
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20230327153547.821822-1-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353x.dtsi | 6 ++++--
+ arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg503.dts   | 6 ++++--
+ 2 files changed, 8 insertions(+), 4 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353x.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353x.dtsi
+@@ -16,8 +16,10 @@
+ };
+ 
+ &cru {
+-	assigned-clocks = <&cru PLL_GPLL>, <&pmucru PLL_PPLL>, <&cru PLL_VPLL>;
+-	assigned-clock-rates = <1200000000>, <200000000>, <241500000>;
++	assigned-clocks = <&pmucru CLK_RTC_32K>, <&cru PLL_GPLL>,
++			  <&pmucru PLL_PPLL>, <&cru PLL_VPLL>;
++	assigned-clock-rates = <32768>, <1200000000>,
++			       <200000000>, <241500000>;
+ };
+ 
+ &gpio_keys_control {
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg503.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg503.dts
+@@ -105,8 +105,10 @@
+ };
+ 
+ &cru {
+-	assigned-clocks = <&cru PLL_GPLL>, <&pmucru PLL_PPLL>, <&cru PLL_VPLL>;
+-	assigned-clock-rates = <1200000000>, <200000000>, <500000000>;
++	assigned-clocks = <&pmucru CLK_RTC_32K>, <&cru PLL_GPLL>,
++			  <&pmucru PLL_PPLL>, <&cru PLL_VPLL>;
++	assigned-clock-rates = <32768>, <1200000000>,
++			       <200000000>, <500000000>;
+ };
+ 
+ &dsi_dphy0 {
diff --git a/target/linux/rockchip/patches-6.1/149-arm64-dts-rockchip-Remove-non-existing-pwm-delay-us-.patch b/target/linux/rockchip/patches-6.1/149-arm64-dts-rockchip-Remove-non-existing-pwm-delay-us-.patch
new file mode 100644
index 0000000000..86f8848fe6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/149-arm64-dts-rockchip-Remove-non-existing-pwm-delay-us-.patch
@@ -0,0 +1,60 @@
+From c11e35a6da6663398bccac7dcd9e4eebfdce73bf Mon Sep 17 00:00:00 2001
+From: Javier Martinez Canillas <javierm@redhat.com>
+Date: Fri, 31 Mar 2023 01:19:23 +0200
+Subject: [PATCH 149/383] arm64: dts: rockchip: Remove non-existing
+ pwm-delay-us property
+
+There is neither a driver that parses this nor a DT binding schema that
+documents it, so let's remove from the DTS files that make use of this.
+
+The properties that exist are post-pwm-on-delay-ms and pwm-off-delay-ms,
+defined in the pwm-backlight DT binding. If the delays are really needed
+then those properties should be used instead.
+
+Brian Norris mentioned though that looking at the first downstream usage
+of the pwm-delay-us property for RK3399 Gru systems in ChromiumOS tree,
+he couldn't find a spec reference that said that this was really needed.
+
+So perhaps it was unnecessary added and a simple removal would be enough.
+
+Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
+Reviewed-by: Brian Norris <briannorris@chromium.org>
+Link: https://lore.kernel.org/r/20230330231924.2404747-1-javierm@redhat.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3368-evb.dtsi            | 1 -
+ arch/arm64/boot/dts/rockchip/rk3399-gru-chromebook.dtsi | 1 -
+ arch/arm64/boot/dts/rockchip/rk3399-gru-scarlet.dtsi    | 1 -
+ 3 files changed, 3 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3368-evb.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3368-evb.dtsi
+@@ -61,7 +61,6 @@
+ 		pinctrl-names = "default";
+ 		pinctrl-0 = <&bl_en>;
+ 		pwms = <&pwm0 0 1000000 PWM_POLARITY_INVERTED>;
+-		pwm-delay-us = <10000>;
+ 	};
+ 
+ 	emmc_pwrseq: emmc-pwrseq {
+--- a/arch/arm64/boot/dts/rockchip/rk3399-gru-chromebook.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399-gru-chromebook.dtsi
+@@ -198,7 +198,6 @@
+ 		power-supply = <&pp3300_disp>;
+ 		pinctrl-names = "default";
+ 		pinctrl-0 = <&bl_en>;
+-		pwm-delay-us = <10000>;
+ 	};
+ 
+ 	gpio_keys: gpio-keys {
+--- a/arch/arm64/boot/dts/rockchip/rk3399-gru-scarlet.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399-gru-scarlet.dtsi
+@@ -167,7 +167,6 @@
+ 		pinctrl-names = "default";
+ 		pinctrl-0 = <&bl_en>;
+ 		pwms = <&pwm1 0 1000000 0>;
+-		pwm-delay-us = <10000>;
+ 	};
+ 
+ 	dmic: dmic {
diff --git a/target/linux/rockchip/patches-6.1/150-arm64-dts-rockchip-Enable-RTC-support-for-Rock-5B.patch b/target/linux/rockchip/patches-6.1/150-arm64-dts-rockchip-Enable-RTC-support-for-Rock-5B.patch
new file mode 100644
index 0000000000..3257cc99cc
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/150-arm64-dts-rockchip-Enable-RTC-support-for-Rock-5B.patch
@@ -0,0 +1,50 @@
+From 2ab1aada5a2d3a51cd7bfe18ecb1359dc3353db9 Mon Sep 17 00:00:00 2001
+From: Shreeya Patel <shreeya.patel@collabora.com>
+Date: Wed, 5 Apr 2023 13:57:11 +0530
+Subject: [PATCH 150/383] arm64: dts: rockchip: Enable RTC support for Rock 5B
+
+Add DT node to enable RTC support for Rock 5B board.
+
+Signed-off-by: Shreeya Patel <shreeya.patel@collabora.com>
+Reviewed-by: Christopher Obbard <chris.obbard@collabora.com>
+Link: https://lore.kernel.org/r/20230405082711.46303-1-shreeya.patel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588-rock-5b.dts      | 25 +++++++++++++++++++
+ 1 file changed, 25 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+@@ -27,6 +27,31 @@
+ 	};
+ };
+ 
++&i2c6 {
++	status = "okay";
++
++	hym8563: rtc@51 {
++		compatible = "haoyu,hym8563";
++		reg = <0x51>;
++		#clock-cells = <0>;
++		clock-frequency = <32768>;
++		clock-output-names = "hym8563";
++		pinctrl-names = "default";
++		pinctrl-0 = <&hym8563_int>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PB0 IRQ_TYPE_LEVEL_LOW>;
++		wakeup-source;
++	};
++};
++
++&pinctrl {
++	hym8563 {
++		hym8563_int: hym8563-int {
++			rockchip,pins = <0 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
+ &sdhci {
+ 	bus-width = <8>;
+ 	no-sdio;
diff --git a/target/linux/rockchip/patches-6.1/151-arm64-dts-rockchip-Add-pwm-fan-to-rk3588-rock-5b.patch b/target/linux/rockchip/patches-6.1/151-arm64-dts-rockchip-Add-pwm-fan-to-rk3588-rock-5b.patch
new file mode 100644
index 0000000000..7d8ac5e36a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/151-arm64-dts-rockchip-Add-pwm-fan-to-rk3588-rock-5b.patch
@@ -0,0 +1,45 @@
+From cd0096a45cf33db5b4bc903871ec754660b5dab5 Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Tue, 4 Apr 2023 20:38:07 +0300
+Subject: [PATCH 151/383] arm64: dts: rockchip: Add pwm-fan to rk3588-rock-5b
+
+Add the necessary DT changes for the Rock 5B board to enable support for
+the PWM controlled heat sink fan.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Reviewed-by: Christopher Obbard <chris.obbard@collabora.com>
+Link: https://lore.kernel.org/r/20230404173807.490520-3-cristian.ciocaltea@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+@@ -17,6 +17,14 @@
+ 		stdout-path = "serial2:1500000n8";
+ 	};
+ 
++	fan: pwm-fan {
++		compatible = "pwm-fan";
++		cooling-levels = <0 95 145 195 255>;
++		fan-supply = <&vcc5v0_sys>;
++		pwms = <&pwm1 0 50000 0>;
++		#cooling-cells = <2>;
++	};
++
+ 	vcc5v0_sys: vcc5v0-sys-regulator {
+ 		compatible = "regulator-fixed";
+ 		regulator-name = "vcc5v0_sys";
+@@ -52,6 +60,10 @@
+ 	};
+ };
+ 
++&pwm1 {
++	status = "okay";
++};
++
+ &sdhci {
+ 	bus-width = <8>;
+ 	no-sdio;
diff --git a/target/linux/rockchip/patches-6.1/152-arm64-dts-rockchip-add-rk3588-thermal-sensor.patch b/target/linux/rockchip/patches-6.1/152-arm64-dts-rockchip-add-rk3588-thermal-sensor.patch
new file mode 100644
index 0000000000..3dd7ad49b3
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/152-arm64-dts-rockchip-add-rk3588-thermal-sensor.patch
@@ -0,0 +1,53 @@
+From 3629ee581f873ab6ed9cf0f47038ba55293d0da7 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 4 Apr 2023 17:44:29 +0200
+Subject: [PATCH 152/383] arm64: dts: rockchip: add rk3588 thermal sensor
+
+Add thermal sensor IP, which allows monitoring temperatures at
+seven different places in the SoC:
+
+* Chip Center
+* CPU Cluster 1 (Dual A76 "Big" Cores)
+* CPU Cluster 2 (Dual A76 "Big" Cores)
+* CPU Cluster 0 (Quad A55 "Little" Cores)
+* Power Domain Center
+* Graphics Processing Unit
+* Neural Processing Unit
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230404154429.51601-1-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 20 ++++++++++++++++++++
+ 1 file changed, 20 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -1589,6 +1589,26 @@
+ 		status = "disabled";
+ 	};
+ 
++	tsadc: tsadc@fec00000 {
++		compatible = "rockchip,rk3588-tsadc";
++		reg = <0x0 0xfec00000 0x0 0x400>;
++		interrupts = <GIC_SPI 397 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru CLK_TSADC>, <&cru PCLK_TSADC>;
++		clock-names = "tsadc", "apb_pclk";
++		assigned-clocks = <&cru CLK_TSADC>;
++		assigned-clock-rates = <2000000>;
++		resets = <&cru SRST_P_TSADC>, <&cru SRST_TSADC>;
++		reset-names = "tsadc-apb", "tsadc";
++		rockchip,hw-tshut-temp = <120000>;
++		rockchip,hw-tshut-mode = <0>; /* tshut mode 0:CRU 1:GPIO */
++		rockchip,hw-tshut-polarity = <0>; /* tshut polarity 0:LOW 1:HIGH */
++		pinctrl-0 = <&tsadc_gpio_func>;
++		pinctrl-1 = <&tsadc_shut>;
++		pinctrl-names = "gpio", "otpout";
++		#thermal-sensor-cells = <1>;
++		status = "disabled";
++	};
++
+ 	i2c6: i2c@fec80000 {
+ 		compatible = "rockchip,rk3588-i2c", "rockchip,rk3399-i2c";
+ 		reg = <0x0 0xfec80000 0x0 0x1000>;
diff --git a/target/linux/rockchip/patches-6.1/153-arm64-dts-rockchip-Fix-SCMI-assigned-clocks-on-rk358.patch b/target/linux/rockchip/patches-6.1/153-arm64-dts-rockchip-Fix-SCMI-assigned-clocks-on-rk358.patch
new file mode 100644
index 0000000000..c299a37262
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/153-arm64-dts-rockchip-Fix-SCMI-assigned-clocks-on-rk358.patch
@@ -0,0 +1,70 @@
+From 2462789ac5edbc4900abd610a8b0d0bd12467e81 Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Sun, 2 Apr 2023 12:50:50 +0300
+Subject: [PATCH 153/383] arm64: dts: rockchip: Fix SCMI assigned clocks on
+ rk3588s
+
+Since commit df4fdd0db475 ("dt-bindings: firmware: arm,scmi: Restrict
+protocol child node properties") the following dtbs_check warning is
+shown:
+
+  rk3588-rock-5b.dtb: scmi: protocol@14: Unevaluated properties are not
+  allowed ('assigned-clock-rates', 'assigned-clocks' were unexpected)
+
+Because adding the missing properties to firmware/arm,scmi.yaml binding
+document was not an acceptable solution, move SCMI_CLK_CPUB01 and
+SCMI_CLK_CPUB23 assigned clocks to the related CPU nodes and also add
+the missing SCMI_CLK_CPUL.
+
+Additionally, adjust frequency to 816 MHz for all the above mentioned
+assigned clocks, in order to match the firmware defaults.
+
+Suggested-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230402095054.384739-2-cristian.ciocaltea@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 10 ++++++----
+ 1 file changed, 6 insertions(+), 4 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -60,6 +60,8 @@
+ 			enable-method = "psci";
+ 			capacity-dmips-mhz = <530>;
+ 			clocks = <&scmi_clk SCMI_CLK_CPUL>;
++			assigned-clocks = <&scmi_clk SCMI_CLK_CPUL>;
++			assigned-clock-rates = <816000000>;
+ 			cpu-idle-states = <&CPU_SLEEP>;
+ 			i-cache-size = <32768>;
+ 			i-cache-line-size = <64>;
+@@ -136,6 +138,8 @@
+ 			enable-method = "psci";
+ 			capacity-dmips-mhz = <1024>;
+ 			clocks = <&scmi_clk SCMI_CLK_CPUB01>;
++			assigned-clocks = <&scmi_clk SCMI_CLK_CPUB01>;
++			assigned-clock-rates = <816000000>;
+ 			cpu-idle-states = <&CPU_SLEEP>;
+ 			i-cache-size = <65536>;
+ 			i-cache-line-size = <64>;
+@@ -174,6 +178,8 @@
+ 			enable-method = "psci";
+ 			capacity-dmips-mhz = <1024>;
+ 			clocks = <&scmi_clk SCMI_CLK_CPUB23>;
++			assigned-clocks = <&scmi_clk SCMI_CLK_CPUB23>;
++			assigned-clock-rates = <816000000>;
+ 			cpu-idle-states = <&CPU_SLEEP>;
+ 			i-cache-size = <65536>;
+ 			i-cache-line-size = <64>;
+@@ -313,10 +319,6 @@
+ 
+ 			scmi_clk: protocol@14 {
+ 				reg = <0x14>;
+-				assigned-clocks = <&scmi_clk SCMI_CLK_CPUB01>,
+-						  <&scmi_clk SCMI_CLK_CPUB23>;
+-				assigned-clock-rates = <1200000000>,
+-						       <1200000000>;
+ 				#clock-cells = <1>;
+ 			};
+ 
diff --git a/target/linux/rockchip/patches-6.1/154-arm64-dts-rockchip-Assign-PLL_PPLL-clock-rate-to-1.1.patch b/target/linux/rockchip/patches-6.1/154-arm64-dts-rockchip-Assign-PLL_PPLL-clock-rate-to-1.1.patch
new file mode 100644
index 0000000000..29bd6124e9
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/154-arm64-dts-rockchip-Assign-PLL_PPLL-clock-rate-to-1.1.patch
@@ -0,0 +1,30 @@
+From 8a4582d1cf7c9713af3994d20770a483223213f8 Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Sun, 2 Apr 2023 12:50:51 +0300
+Subject: [PATCH 154/383] arm64: dts: rockchip: Assign PLL_PPLL clock rate to
+ 1.1 GHz on rk3588s
+
+The clock rate for PLL_PPLL has been wrongly initialized to 100 MHz
+instead of 1.1 GHz. Fix it.
+
+Fixes: c9211fa2602b ("arm64: dts: rockchip: Add base DT for rk3588 SoC")
+Reported-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230402095054.384739-3-cristian.ciocaltea@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -425,7 +425,7 @@
+ 			<&cru ACLK_BUS_ROOT>, <&cru CLK_150M_SRC>,
+ 			<&cru CLK_GPU>;
+ 		assigned-clock-rates =
+-			<100000000>, <786432000>,
++			<1100000000>, <786432000>,
+ 			<850000000>, <1188000000>,
+ 			<702000000>,
+ 			<400000000>, <500000000>,
diff --git a/target/linux/rockchip/patches-6.1/155-arm64-dts-rockchip-Add-rk3588s-I2S-nodes.patch b/target/linux/rockchip/patches-6.1/155-arm64-dts-rockchip-Add-rk3588s-I2S-nodes.patch
new file mode 100644
index 0000000000..9b04ab5fa8
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/155-arm64-dts-rockchip-Add-rk3588s-I2S-nodes.patch
@@ -0,0 +1,186 @@
+From 55cd36ea5741f8a9a5112fc9af8a6f5ea85ecb06 Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Sun, 2 Apr 2023 12:50:52 +0300
+Subject: [PATCH 155/383] arm64: dts: rockchip: Add rk3588s I2S nodes
+
+There are five I2S/PCM/TDM controllers and two I2S/PCM controllers
+embedded in the RK3588 and RK3588S SoCs.
+
+Add the DT nodes corresponding to the above mentioned Rockchip
+controllers.
+
+Also note RK3588 SoC contains four additional I2S/PCM/TDM controllers,
+which are handled via a separate patch.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230402095054.384739-4-cristian.ciocaltea@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 148 ++++++++++++++++++++++
+ 1 file changed, 148 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -821,6 +821,57 @@
+ 		};
+ 	};
+ 
++	i2s4_8ch: i2s@fddc0000 {
++		compatible = "rockchip,rk3588-i2s-tdm";
++		reg = <0x0 0xfddc0000 0x0 0x1000>;
++		interrupts = <GIC_SPI 184 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru MCLK_I2S4_8CH_TX>, <&cru MCLK_I2S4_8CH_TX>, <&cru HCLK_I2S4_8CH>;
++		clock-names = "mclk_tx", "mclk_rx", "hclk";
++		assigned-clocks = <&cru CLK_I2S4_8CH_TX_SRC>;
++		assigned-clock-parents = <&cru PLL_AUPLL>;
++		dmas = <&dmac2 0>;
++		dma-names = "tx";
++		power-domains = <&power RK3588_PD_VO0>;
++		resets = <&cru SRST_M_I2S4_8CH_TX>;
++		reset-names = "tx-m";
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
++	i2s5_8ch: i2s@fddf0000 {
++		compatible = "rockchip,rk3588-i2s-tdm";
++		reg = <0x0 0xfddf0000 0x0 0x1000>;
++		interrupts = <GIC_SPI 185 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru MCLK_I2S5_8CH_TX>, <&cru MCLK_I2S5_8CH_TX>, <&cru HCLK_I2S5_8CH>;
++		clock-names = "mclk_tx", "mclk_rx", "hclk";
++		assigned-clocks = <&cru CLK_I2S5_8CH_TX_SRC>;
++		assigned-clock-parents = <&cru PLL_AUPLL>;
++		dmas = <&dmac2 2>;
++		dma-names = "tx";
++		power-domains = <&power RK3588_PD_VO1>;
++		resets = <&cru SRST_M_I2S5_8CH_TX>;
++		reset-names = "tx-m";
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
++	i2s9_8ch: i2s@fddfc000 {
++		compatible = "rockchip,rk3588-i2s-tdm";
++		reg = <0x0 0xfddfc000 0x0 0x1000>;
++		interrupts = <GIC_SPI 189 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru MCLK_I2S9_8CH_RX>, <&cru MCLK_I2S9_8CH_RX>, <&cru HCLK_I2S9_8CH>;
++		clock-names = "mclk_tx", "mclk_rx", "hclk";
++		assigned-clocks = <&cru CLK_I2S9_8CH_RX_SRC>;
++		assigned-clock-parents = <&cru PLL_AUPLL>;
++		dmas = <&dmac2 23>;
++		dma-names = "rx";
++		power-domains = <&power RK3588_PD_VO1>;
++		resets = <&cru SRST_M_I2S9_8CH_RX>;
++		reset-names = "rx-m";
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
+ 	qos_gpu_m0: qos@fdf35000 {
+ 		compatible = "rockchip,rk3588-qos", "syscon";
+ 		reg = <0x0 0xfdf35000 0x0 0x20>;
+@@ -1143,6 +1194,103 @@
+ 		status = "disabled";
+ 	};
+ 
++	i2s0_8ch: i2s@fe470000 {
++		compatible = "rockchip,rk3588-i2s-tdm";
++		reg = <0x0 0xfe470000 0x0 0x1000>;
++		interrupts = <GIC_SPI 180 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru MCLK_I2S0_8CH_TX>, <&cru MCLK_I2S0_8CH_RX>, <&cru HCLK_I2S0_8CH>;
++		clock-names = "mclk_tx", "mclk_rx", "hclk";
++		assigned-clocks = <&cru CLK_I2S0_8CH_TX_SRC>, <&cru CLK_I2S0_8CH_RX_SRC>;
++		assigned-clock-parents = <&cru PLL_AUPLL>, <&cru PLL_AUPLL>;
++		dmas = <&dmac0 0>, <&dmac0 1>;
++		dma-names = "tx", "rx";
++		power-domains = <&power RK3588_PD_AUDIO>;
++		resets = <&cru SRST_M_I2S0_8CH_TX>, <&cru SRST_M_I2S0_8CH_RX>;
++		reset-names = "tx-m", "rx-m";
++		rockchip,trcm-sync-tx-only;
++		pinctrl-names = "default";
++		pinctrl-0 = <&i2s0_lrck
++			     &i2s0_sclk
++			     &i2s0_sdi0
++			     &i2s0_sdi1
++			     &i2s0_sdi2
++			     &i2s0_sdi3
++			     &i2s0_sdo0
++			     &i2s0_sdo1
++			     &i2s0_sdo2
++			     &i2s0_sdo3>;
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
++	i2s1_8ch: i2s@fe480000 {
++		compatible = "rockchip,rk3588-i2s-tdm";
++		reg = <0x0 0xfe480000 0x0 0x1000>;
++		interrupts = <GIC_SPI 181 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru MCLK_I2S1_8CH_TX>, <&cru MCLK_I2S1_8CH_RX>, <&cru HCLK_I2S1_8CH>;
++		clock-names = "mclk_tx", "mclk_rx", "hclk";
++		dmas = <&dmac0 2>, <&dmac0 3>;
++		dma-names = "tx", "rx";
++		resets = <&cru SRST_M_I2S1_8CH_TX>, <&cru SRST_M_I2S1_8CH_RX>;
++		reset-names = "tx-m", "rx-m";
++		rockchip,trcm-sync-tx-only;
++		pinctrl-names = "default";
++		pinctrl-0 = <&i2s1m0_lrck
++			     &i2s1m0_sclk
++			     &i2s1m0_sdi0
++			     &i2s1m0_sdi1
++			     &i2s1m0_sdi2
++			     &i2s1m0_sdi3
++			     &i2s1m0_sdo0
++			     &i2s1m0_sdo1
++			     &i2s1m0_sdo2
++			     &i2s1m0_sdo3>;
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
++	i2s2_2ch: i2s@fe490000 {
++		compatible = "rockchip,rk3588-i2s", "rockchip,rk3066-i2s";
++		reg = <0x0 0xfe490000 0x0 0x1000>;
++		interrupts = <GIC_SPI 182 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru MCLK_I2S2_2CH>, <&cru HCLK_I2S2_2CH>;
++		clock-names = "i2s_clk", "i2s_hclk";
++		assigned-clocks = <&cru CLK_I2S2_2CH_SRC>;
++		assigned-clock-parents = <&cru PLL_AUPLL>;
++		dmas = <&dmac1 0>, <&dmac1 1>;
++		dma-names = "tx", "rx";
++		power-domains = <&power RK3588_PD_AUDIO>;
++		rockchip,trcm-sync-tx-only;
++		pinctrl-names = "default";
++		pinctrl-0 = <&i2s2m1_lrck
++			     &i2s2m1_sclk
++			     &i2s2m1_sdi
++			     &i2s2m1_sdo>;
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
++	i2s3_2ch: i2s@fe4a0000 {
++		compatible = "rockchip,rk3588-i2s", "rockchip,rk3066-i2s";
++		reg = <0x0 0xfe4a0000 0x0 0x1000>;
++		interrupts = <GIC_SPI 183 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru MCLK_I2S3_2CH>, <&cru HCLK_I2S3_2CH>;
++		clock-names = "i2s_clk", "i2s_hclk";
++		assigned-clocks = <&cru CLK_I2S3_2CH_SRC>;
++		assigned-clock-parents = <&cru PLL_AUPLL>;
++		dmas = <&dmac1 2>, <&dmac1 3>;
++		dma-names = "tx", "rx";
++		power-domains = <&power RK3588_PD_AUDIO>;
++		rockchip,trcm-sync-tx-only;
++		pinctrl-names = "default";
++		pinctrl-0 = <&i2s3_lrck
++			     &i2s3_sclk
++			     &i2s3_sdi
++			     &i2s3_sdo>;
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
+ 	gic: interrupt-controller@fe600000 {
+ 		compatible = "arm,gic-v3";
+ 		reg = <0x0 0xfe600000 0 0x10000>, /* GICD */
diff --git a/target/linux/rockchip/patches-6.1/156-arm64-dts-rockchip-Add-I2S-rk3588-nodes.patch b/target/linux/rockchip/patches-6.1/156-arm64-dts-rockchip-Add-I2S-rk3588-nodes.patch
new file mode 100644
index 0000000000..6d2dbd906b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/156-arm64-dts-rockchip-Add-I2S-rk3588-nodes.patch
@@ -0,0 +1,96 @@
+From 45e4f004fba8e9989ca760a14c47fd37799bb53b Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Sun, 2 Apr 2023 12:50:53 +0300
+Subject: [PATCH 156/383] arm64: dts: rockchip: Add I2S rk3588 nodes
+
+In addition to the five I2S/PCM/TDM controllers and the two I2S/PCM
+controllers shared between the RK3588 and RK3588S SoCs, RK3588 provides
+another group of four I2S/PCM/TDM controllers.
+
+Add the DT nodes corresponding to the additional controllers.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230402095054.384739-5-cristian.ciocaltea@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi | 68 ++++++++++++++++++++++++
+ 1 file changed, 68 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -7,6 +7,74 @@
+ #include "rk3588-pinctrl.dtsi"
+ 
+ / {
++	i2s8_8ch: i2s@fddc8000 {
++		compatible = "rockchip,rk3588-i2s-tdm";
++		reg = <0x0 0xfddc8000 0x0 0x1000>;
++		interrupts = <GIC_SPI 188 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru MCLK_I2S8_8CH_TX>, <&cru MCLK_I2S8_8CH_TX>, <&cru HCLK_I2S8_8CH>;
++		clock-names = "mclk_tx", "mclk_rx", "hclk";
++		assigned-clocks = <&cru CLK_I2S8_8CH_TX_SRC>;
++		assigned-clock-parents = <&cru PLL_AUPLL>;
++		dmas = <&dmac2 22>;
++		dma-names = "tx";
++		power-domains = <&power RK3588_PD_VO0>;
++		resets = <&cru SRST_M_I2S8_8CH_TX>;
++		reset-names = "tx-m";
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
++	i2s6_8ch: i2s@fddf4000 {
++		compatible = "rockchip,rk3588-i2s-tdm";
++		reg = <0x0 0xfddf4000 0x0 0x1000>;
++		interrupts = <GIC_SPI 186 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru MCLK_I2S6_8CH_TX>, <&cru MCLK_I2S6_8CH_TX>, <&cru HCLK_I2S6_8CH>;
++		clock-names = "mclk_tx", "mclk_rx", "hclk";
++		assigned-clocks = <&cru CLK_I2S6_8CH_TX_SRC>;
++		assigned-clock-parents = <&cru PLL_AUPLL>;
++		dmas = <&dmac2 4>;
++		dma-names = "tx";
++		power-domains = <&power RK3588_PD_VO1>;
++		resets = <&cru SRST_M_I2S6_8CH_TX>;
++		reset-names = "tx-m";
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
++	i2s7_8ch: i2s@fddf8000 {
++		compatible = "rockchip,rk3588-i2s-tdm";
++		reg = <0x0 0xfddf8000 0x0 0x1000>;
++		interrupts = <GIC_SPI 187 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru MCLK_I2S7_8CH_RX>, <&cru MCLK_I2S7_8CH_RX>, <&cru HCLK_I2S7_8CH>;
++		clock-names = "mclk_tx", "mclk_rx", "hclk";
++		assigned-clocks = <&cru CLK_I2S7_8CH_RX_SRC>;
++		assigned-clock-parents = <&cru PLL_AUPLL>;
++		dmas = <&dmac2 21>;
++		dma-names = "rx";
++		power-domains = <&power RK3588_PD_VO1>;
++		resets = <&cru SRST_M_I2S7_8CH_RX>;
++		reset-names = "rx-m";
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
++	i2s10_8ch: i2s@fde00000 {
++		compatible = "rockchip,rk3588-i2s-tdm";
++		reg = <0x0 0xfde00000 0x0 0x1000>;
++		interrupts = <GIC_SPI 190 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru MCLK_I2S10_8CH_RX>, <&cru MCLK_I2S10_8CH_RX>, <&cru HCLK_I2S10_8CH>;
++		clock-names = "mclk_tx", "mclk_rx", "hclk";
++		assigned-clocks = <&cru CLK_I2S10_8CH_RX_SRC>;
++		assigned-clock-parents = <&cru PLL_AUPLL>;
++		dmas = <&dmac2 24>;
++		dma-names = "rx";
++		power-domains = <&power RK3588_PD_VO1>;
++		resets = <&cru SRST_M_I2S10_8CH_RX>;
++		reset-names = "rx-m";
++		#sound-dai-cells = <0>;
++		status = "disabled";
++	};
++
+ 	gmac0: ethernet@fe1b0000 {
+ 		compatible = "rockchip,rk3588-gmac", "snps,dwmac-4.20a";
+ 		reg = <0x0 0xfe1b0000 0x0 0x10000>;
diff --git a/target/linux/rockchip/patches-6.1/157-arm64-dts-rockchip-Add-rk3588-rock-5b-analog-audio.patch b/target/linux/rockchip/patches-6.1/157-arm64-dts-rockchip-Add-rk3588-rock-5b-analog-audio.patch
new file mode 100644
index 0000000000..4683737be8
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/157-arm64-dts-rockchip-Add-rk3588-rock-5b-analog-audio.patch
@@ -0,0 +1,107 @@
+From 358d23d0a3b127816ba84a788b242d7a28b1443f Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Sun, 2 Apr 2023 12:50:54 +0300
+Subject: [PATCH 157/383] arm64: dts: rockchip: Add rk3588-rock-5b analog audio
+
+Add the necessary DT nodes for the Rock 5B board to enable the analog
+audio support provided by the Everest Semi ES8316 codec.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Reviewed-by: Christopher Obbard <chris.obbard@collabora.com>
+Link: https://lore.kernel.org/r/20230402095054.384739-6-cristian.ciocaltea@collabora.com
+[adapted to the fan addition I applied slightly earlier]
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588-rock-5b.dts      | 60 +++++++++++++++++++
+ 1 file changed, 60 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+@@ -2,6 +2,7 @@
+ 
+ /dts-v1/;
+ 
++#include <dt-bindings/gpio/gpio.h>
+ #include "rk3588.dtsi"
+ 
+ / {
+@@ -25,6 +26,23 @@
+ 		#cooling-cells = <2>;
+ 	};
+ 
++	sound {
++		compatible = "audio-graph-card";
++		label = "Analog";
++
++		widgets = "Microphone", "Mic Jack",
++			  "Headphone", "Headphones";
++
++		routing = "MIC2", "Mic Jack",
++			  "Headphones", "HPOL",
++			  "Headphones", "HPOR";
++
++		dais = <&i2s0_8ch_p0>;
++		hp-det-gpio = <&gpio1 RK_PD5 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&hp_detect>;
++	};
++
+ 	vcc5v0_sys: vcc5v0-sys-regulator {
+ 		compatible = "regulator-fixed";
+ 		regulator-name = "vcc5v0_sys";
+@@ -52,12 +70,54 @@
+ 	};
+ };
+ 
++&i2c7 {
++	status = "okay";
++
++	es8316: es8316@11 {
++		compatible = "everest,es8316";
++		reg = <0x11>;
++		clocks = <&cru I2S0_8CH_MCLKOUT>;
++		clock-names = "mclk";
++		#sound-dai-cells = <0>;
++
++		port {
++			es8316_p0_0: endpoint {
++				remote-endpoint = <&i2s0_8ch_p0_0>;
++			};
++		};
++	};
++};
++
++&i2s0_8ch {
++	pinctrl-names = "default";
++	pinctrl-0 = <&i2s0_lrck
++		     &i2s0_mclk
++		     &i2s0_sclk
++		     &i2s0_sdi0
++		     &i2s0_sdo0>;
++	status = "okay";
++
++	i2s0_8ch_p0: port {
++		i2s0_8ch_p0_0: endpoint {
++			dai-format = "i2s";
++			mclk-fs = <256>;
++			remote-endpoint = <&es8316_p0_0>;
++		};
++	};
++};
++
+ &pinctrl {
+ 	hym8563 {
+ 		hym8563_int: hym8563-int {
+ 			rockchip,pins = <0 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+ 	};
++
++	sound {
++		hp_detect: hp-detect {
++			rockchip,pins = <1 RK_PD5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
+ };
+ 
+ &pwm1 {
diff --git a/target/linux/rockchip/patches-6.1/158-arm64-dts-rockchip-use-just-port-in-panel-on-Pineboo.patch b/target/linux/rockchip/patches-6.1/158-arm64-dts-rockchip-use-just-port-in-panel-on-Pineboo.patch
new file mode 100644
index 0000000000..1ef416231d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/158-arm64-dts-rockchip-use-just-port-in-panel-on-Pineboo.patch
@@ -0,0 +1,44 @@
+From 6c28de010652ee73b2480688d79e004127ec132b Mon Sep 17 00:00:00 2001
+From: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Date: Sun, 26 Mar 2023 22:45:19 +0200
+Subject: [PATCH 158/383] arm64: dts: rockchip: use just "port" in panel on
+ Pinebook Pro
+
+The panel bindings expect to have only one port, thus they do not allow
+to use "ports" node:
+
+  rk3399-pinebook-pro.dtb: edp-panel: 'ports' does not match any of the regexes: 'pinctrl-[0-9]+'
+
+Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230326204520.80859-2-krzysztof.kozlowski@linaro.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3399-pinebook-pro.dts    | 16 +++-------------
+ 1 file changed, 3 insertions(+), 13 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-pinebook-pro.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3399-pinebook-pro.dts
+@@ -50,19 +50,9 @@
+ 		pinctrl-0 = <&panel_en_pin>;
+ 		power-supply = <&vcc3v3_panel>;
+ 
+-		ports {
+-			#address-cells = <1>;
+-			#size-cells = <0>;
+-
+-			port@0 {
+-				reg = <0>;
+-				#address-cells = <1>;
+-				#size-cells = <0>;
+-
+-				panel_in_edp: endpoint@0 {
+-					reg = <0>;
+-					remote-endpoint = <&edp_out_panel>;
+-				};
++		port {
++			panel_in_edp: endpoint {
++				remote-endpoint = <&edp_out_panel>;
+ 			};
+ 		};
+ 	};
diff --git a/target/linux/rockchip/patches-6.1/159-arm64-dts-rockchip-use-just-port-in-panel-on-RockPro.patch b/target/linux/rockchip/patches-6.1/159-arm64-dts-rockchip-use-just-port-in-panel-on-RockPro.patch
new file mode 100644
index 0000000000..184d72531a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/159-arm64-dts-rockchip-use-just-port-in-panel-on-RockPro.patch
@@ -0,0 +1,43 @@
+From a1e2c3f0aa7a71028de4f8ddd858ee728b6f43c5 Mon Sep 17 00:00:00 2001
+From: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Date: Sun, 26 Mar 2023 22:45:20 +0200
+Subject: [PATCH 159/383] arm64: dts: rockchip: use just "port" in panel on
+ RockPro64
+
+The panel bindings expect to have only one port, thus they do not allow
+to use "ports" node:
+
+  rk3399-rockpro64.dtb: panel@0: 'ports' does not match any of the regexes: 'pinctrl-[0-9]+'
+
+There is only one endpoint, so use simpler form without "reg".
+
+Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230326204520.80859-3-krzysztof.kozlowski@linaro.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399-rockpro64.dtsi | 12 +++---------
+ 1 file changed, 3 insertions(+), 9 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-rockpro64.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399-rockpro64.dtsi
+@@ -647,16 +647,10 @@
+ 		avdd-supply = <&avdd>;
+ 		backlight = <&backlight>;
+ 		dvdd-supply = <&vcc3v3_s0>;
+-		ports {
+-			#address-cells = <1>;
+-			#size-cells = <0>;
+ 
+-			port@0 {
+-				reg = <0>;
+-
+-				mipi_in_panel: endpoint {
+-					remote-endpoint = <&mipi_out_panel>;
+-				};
++		port {
++			mipi_in_panel: endpoint {
++				remote-endpoint = <&mipi_out_panel>;
+ 			};
+ 		};
+ 	};
diff --git a/target/linux/rockchip/patches-6.1/160-arm64-dts-rockchip-correct-panel-supplies-on-some-rk.patch b/target/linux/rockchip/patches-6.1/160-arm64-dts-rockchip-correct-panel-supplies-on-some-rk.patch
new file mode 100644
index 0000000000..5db24cc5d8
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/160-arm64-dts-rockchip-correct-panel-supplies-on-some-rk.patch
@@ -0,0 +1,70 @@
+From 8f658ba59ceb18deb3b544d3251fac6f3d7abb5b Mon Sep 17 00:00:00 2001
+From: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Date: Sun, 26 Mar 2023 22:45:18 +0200
+Subject: [PATCH 160/383] arm64: dts: rockchip: correct panel supplies on some
+ rk3326 boards
+
+The Anbernic and Odroid Go have different panels and take differently
+named supplies, so move all the supplies to DTS defining actual panel to
+fix warnings like:
+
+  rk3326-odroid-go3.dtb: panel@0: 'IOVCC-supply' is a required property
+  rk3326-odroid-go3.dtb: panel@0: 'iovcc-supply', 'vdd-supply' do not match any of the regexes: 'pinctrl-[0-9]+'
+
+Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230326204520.80859-1-krzysztof.kozlowski@linaro.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3326-anbernic-rg351m.dts | 2 ++
+ arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi      | 2 --
+ arch/arm64/boot/dts/rockchip/rk3326-odroid-go2-v11.dts  | 2 ++
+ arch/arm64/boot/dts/rockchip/rk3326-odroid-go2.dts      | 2 ++
+ 4 files changed, 6 insertions(+), 2 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3326-anbernic-rg351m.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3326-anbernic-rg351m.dts
+@@ -24,6 +24,8 @@
+ 
+ &internal_display {
+ 	compatible = "elida,kd35t133";
++	iovcc-supply = <&vcc_lcd>;
++	vdd-supply = <&vcc_lcd>;
+ };
+ 
+ &pwm0 {
+--- a/arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go.dtsi
+@@ -235,10 +235,8 @@
+ 	internal_display: panel@0 {
+ 		reg = <0>;
+ 		backlight = <&backlight>;
+-		iovcc-supply = <&vcc_lcd>;
+ 		reset-gpios = <&gpio3 RK_PC0 GPIO_ACTIVE_LOW>;
+ 		rotation = <270>;
+-		vdd-supply = <&vcc_lcd>;
+ 
+ 		port {
+ 			mipi_in_panel: endpoint {
+--- a/arch/arm64/boot/dts/rockchip/rk3326-odroid-go2-v11.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go2-v11.dts
+@@ -83,6 +83,8 @@
+ 
+ &internal_display {
+ 	compatible = "elida,kd35t133";
++	iovcc-supply = <&vcc_lcd>;
++	vdd-supply = <&vcc_lcd>;
+ };
+ 
+ &rk817 {
+--- a/arch/arm64/boot/dts/rockchip/rk3326-odroid-go2.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go2.dts
+@@ -59,6 +59,8 @@
+ 
+ &internal_display {
+ 	compatible = "elida,kd35t133";
++	iovcc-supply = <&vcc_lcd>;
++	vdd-supply = <&vcc_lcd>;
+ };
+ 
+ &rk817_charger {
diff --git a/target/linux/rockchip/patches-6.1/161-arm64-dts-rockchip-correct-panel-supplies-on-Odroid-.patch b/target/linux/rockchip/patches-6.1/161-arm64-dts-rockchip-correct-panel-supplies-on-Odroid-.patch
new file mode 100644
index 0000000000..4cfb8447dd
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/161-arm64-dts-rockchip-correct-panel-supplies-on-Odroid-.patch
@@ -0,0 +1,31 @@
+From 102925b3c60b45c0f32a6ebcde1b1d5d6ea4e19a Mon Sep 17 00:00:00 2001
+From: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Date: Sun, 26 Mar 2023 22:45:18 +0200
+Subject: [PATCH 161/383] arm64: dts: rockchip: correct panel supplies on
+ Odroid Go Super
+
+The Anbernic and Odroid Go have different panels and take differently
+named supplies, so move all the supplies to DTS defining actual panel to
+fix warnings like:
+
+  rk3326-odroid-go3.dtb: panel@0: 'IOVCC-supply' is a required property
+  rk3326-odroid-go3.dtb: panel@0: 'iovcc-supply', 'vdd-supply' do not match any of the regexes: 'pinctrl-[0-9]+'
+
+Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230326204520.80859-1-krzysztof.kozlowski@linaro.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3326-odroid-go3.dts | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3326-odroid-go3.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3326-odroid-go3.dts
+@@ -144,6 +144,7 @@
+ &internal_display {
+ 	compatible = "elida,kd50t048a", "sitronix,st7701";
+ 	reset-gpios = <&gpio3 RK_PC0 GPIO_ACTIVE_HIGH>;
++	IOVCC-supply = <&vcc_lcd>;
+ 	VCC-supply = <&vcc_lcd>;
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/162-arm64-dts-rockchip-Add-pinctrl-gpio-ranges-for-rk356.patch b/target/linux/rockchip/patches-6.1/162-arm64-dts-rockchip-Add-pinctrl-gpio-ranges-for-rk356.patch
new file mode 100644
index 0000000000..ea2f644c7f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/162-arm64-dts-rockchip-Add-pinctrl-gpio-ranges-for-rk356.patch
@@ -0,0 +1,58 @@
+From d4a587e6ecc35c1d9786c2435d5378b3f43d9cf7 Mon Sep 17 00:00:00 2001
+From: John Clark <inindev@gmail.com>
+Date: Thu, 13 Apr 2023 13:03:37 -0400
+Subject: [PATCH 162/383] arm64: dts: rockchip: Add pinctrl gpio-ranges for
+ rk356x
+
+Add gpio-range properties to the pinctrl gpio nodes in rk356x.dtsi
+
+Signed-off-by: John Clark <inindev@gmail.com>
+Link: https://lore.kernel.org/r/20230413170337.6815-1-inindev@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk356x.dtsi | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk356x.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk356x.dtsi
+@@ -1809,6 +1809,7 @@
+ 			interrupts = <GIC_SPI 33 IRQ_TYPE_LEVEL_HIGH>;
+ 			clocks = <&pmucru PCLK_GPIO0>, <&pmucru DBCLK_GPIO0>;
+ 			gpio-controller;
++			gpio-ranges = <&pinctrl 0 0 32>;
+ 			#gpio-cells = <2>;
+ 			interrupt-controller;
+ 			#interrupt-cells = <2>;
+@@ -1820,6 +1821,7 @@
+ 			interrupts = <GIC_SPI 34 IRQ_TYPE_LEVEL_HIGH>;
+ 			clocks = <&cru PCLK_GPIO1>, <&cru DBCLK_GPIO1>;
+ 			gpio-controller;
++			gpio-ranges = <&pinctrl 0 32 32>;
+ 			#gpio-cells = <2>;
+ 			interrupt-controller;
+ 			#interrupt-cells = <2>;
+@@ -1831,6 +1833,7 @@
+ 			interrupts = <GIC_SPI 35 IRQ_TYPE_LEVEL_HIGH>;
+ 			clocks = <&cru PCLK_GPIO2>, <&cru DBCLK_GPIO2>;
+ 			gpio-controller;
++			gpio-ranges = <&pinctrl 0 64 32>;
+ 			#gpio-cells = <2>;
+ 			interrupt-controller;
+ 			#interrupt-cells = <2>;
+@@ -1842,6 +1845,7 @@
+ 			interrupts = <GIC_SPI 36 IRQ_TYPE_LEVEL_HIGH>;
+ 			clocks = <&cru PCLK_GPIO3>, <&cru DBCLK_GPIO3>;
+ 			gpio-controller;
++			gpio-ranges = <&pinctrl 0 96 32>;
+ 			#gpio-cells = <2>;
+ 			interrupt-controller;
+ 			#interrupt-cells = <2>;
+@@ -1853,6 +1857,7 @@
+ 			interrupts = <GIC_SPI 37 IRQ_TYPE_LEVEL_HIGH>;
+ 			clocks = <&cru PCLK_GPIO4>, <&cru DBCLK_GPIO4>;
+ 			gpio-controller;
++			gpio-ranges = <&pinctrl 0 128 32>;
+ 			#gpio-cells = <2>;
+ 			interrupt-controller;
+ 			#interrupt-cells = <2>;
diff --git a/target/linux/rockchip/patches-6.1/163-arm64-dts-rockchip-Drop-RTC-clock-frequency-on-rk358.patch b/target/linux/rockchip/patches-6.1/163-arm64-dts-rockchip-Drop-RTC-clock-frequency-on-rk358.patch
new file mode 100644
index 0000000000..97bfadda63
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/163-arm64-dts-rockchip-Drop-RTC-clock-frequency-on-rk358.patch
@@ -0,0 +1,33 @@
+From c329fa6c1f185b79d732ebe3c0b74b7fa6654caf Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Fri, 14 Apr 2023 15:54:23 +0300
+Subject: [PATCH 163/383] arm64: dts: rockchip: Drop RTC clock-frequency on
+ rk3588-rock-5b
+
+The hym8563 RTC driver doesn't handle the 'clock-frequency' property,
+which is also indicated by the following dtbs_check warning:
+
+  rk3588-rock-5b.dtb: rtc@51: Unevaluated properties are not allowed ('clock-frequency' was unexpected)
+  From schema: Documentation/devicetree/bindings/rtc/haoyu,hym8563.yaml
+
+Drop the unsupported property.
+
+Fixes: 1e9c2404d887 ("arm64: dts: rockchip: Enable RTC support for Rock 5B")
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230414125425.124994-2-cristian.ciocaltea@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts | 1 -
+ 1 file changed, 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+@@ -60,7 +60,6 @@
+ 		compatible = "haoyu,hym8563";
+ 		reg = <0x51>;
+ 		#clock-cells = <0>;
+-		clock-frequency = <32768>;
+ 		clock-output-names = "hym8563";
+ 		pinctrl-names = "default";
+ 		pinctrl-0 = <&hym8563_int>;
diff --git a/target/linux/rockchip/patches-6.1/164-arm64-dts-rockchip-Use-generic-name-for-es8316-on-Pi.patch b/target/linux/rockchip/patches-6.1/164-arm64-dts-rockchip-Use-generic-name-for-es8316-on-Pi.patch
new file mode 100644
index 0000000000..2bce66c533
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/164-arm64-dts-rockchip-Use-generic-name-for-es8316-on-Pi.patch
@@ -0,0 +1,40 @@
+From b6ac28925881e504ef86de592b8895123cd40884 Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Fri, 14 Apr 2023 15:54:24 +0300
+Subject: [PATCH 164/383] arm64: dts: rockchip: Use generic name for es8316 on
+ Pinebook Pro and Rock 5B
+
+Use generic 'audio-codec' name for es8316 node on Pinebook Pro and Rock
+5B boards.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230414125425.124994-3-cristian.ciocaltea@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399-pinebook-pro.dts | 2 +-
+ arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts      | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-pinebook-pro.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3399-pinebook-pro.dts
+@@ -665,7 +665,7 @@
+ 	i2c-scl-rising-time-ns = <168>;
+ 	status = "okay";
+ 
+-	es8316: es8316@11 {
++	es8316: audio-codec@11 {
+ 		compatible = "everest,es8316";
+ 		reg = <0x11>;
+ 		clocks = <&cru SCLK_I2S_8CH_OUT>;
+--- a/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+@@ -72,7 +72,7 @@
+ &i2c7 {
+ 	status = "okay";
+ 
+-	es8316: es8316@11 {
++	es8316: audio-codec@11 {
+ 		compatible = "everest,es8316";
+ 		reg = <0x11>;
+ 		clocks = <&cru I2S0_8CH_MCLKOUT>;
diff --git a/target/linux/rockchip/patches-6.1/165-arm64-dts-rockchip-Add-vdd_cpu_big-regulators-to-rk3.patch b/target/linux/rockchip/patches-6.1/165-arm64-dts-rockchip-Add-vdd_cpu_big-regulators-to-rk3.patch
new file mode 100644
index 0000000000..b98bbe647a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/165-arm64-dts-rockchip-Add-vdd_cpu_big-regulators-to-rk3.patch
@@ -0,0 +1,85 @@
+From 1208018acd7fe0bdfec13c3f1608d87aa3ab2fc3 Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Fri, 14 Apr 2023 15:54:25 +0300
+Subject: [PATCH 165/383] arm64: dts: rockchip: Add vdd_cpu_big regulators to
+ rk3588-rock-5b
+
+The RK8602 and RK8603 voltage regulators on the Rock 5B board provide
+the power lines vdd_cpu_big0 and vdd_cpu_big1, respectively.
+
+Add the necessary device tree nodes and bind them to the corresponding
+CPU big core nodes.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230414125425.124994-4-cristian.ciocaltea@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588-rock-5b.dts      | 56 +++++++++++++++++++
+ 1 file changed, 56 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+@@ -53,6 +53,62 @@
+ 	};
+ };
+ 
++&cpu_b0 {
++	cpu-supply = <&vdd_cpu_big0_s0>;
++};
++
++&cpu_b1 {
++	cpu-supply = <&vdd_cpu_big0_s0>;
++};
++
++&cpu_b2 {
++	cpu-supply = <&vdd_cpu_big1_s0>;
++};
++
++&cpu_b3 {
++	cpu-supply = <&vdd_cpu_big1_s0>;
++};
++
++&i2c0 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&i2c0m2_xfer>;
++	status = "okay";
++
++	vdd_cpu_big0_s0: regulator@42 {
++		compatible = "rockchip,rk8602";
++		reg = <0x42>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu_big0_s0";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <550000>;
++		regulator-max-microvolt = <1050000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	vdd_cpu_big1_s0: regulator@43 {
++		compatible = "rockchip,rk8603", "rockchip,rk8602";
++		reg = <0x43>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu_big1_s0";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <550000>;
++		regulator-max-microvolt = <1050000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++};
++
+ &i2c6 {
+ 	status = "okay";
+ 
diff --git a/target/linux/rockchip/patches-6.1/166-arm64-dts-rockchip-Add-support-for-volume-keys-to-rk.patch b/target/linux/rockchip/patches-6.1/166-arm64-dts-rockchip-Add-support-for-volume-keys-to-rk.patch
new file mode 100644
index 0000000000..26af75a0d6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/166-arm64-dts-rockchip-Add-support-for-volume-keys-to-rk.patch
@@ -0,0 +1,76 @@
+From adad13f8ccd4ab71e027a0ebcea88ecaa003df9b Mon Sep 17 00:00:00 2001
+From: Ondrej Jirman <megi@xff.cz>
+Date: Wed, 5 Apr 2023 13:38:13 +0100
+Subject: [PATCH 166/383] arm64: dts: rockchip: Add support for volume keys to
+ rk3399-pinephone-pro
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+These are implemented via regular ADC, so regular polling is needed,
+for these keys to work.
+
+Co-developed-by: Martijn Braam <martijn@brixit.nl>
+Signed-off-by: Martijn Braam <martijn@brixit.nl>
+Co-developed-by: Kamil Trzciński <ayufan@ayufan.eu>
+Signed-off-by: Kamil Trzciński <ayufan@ayufan.eu>
+Signed-off-by: Ondrej Jirman <megi@xff.cz>
+Signed-off-by: Peter Robinson <pbrobinson@gmail.com>
+Tested-by: Ondrej Jirman <megi@xff.cz>
+Link: https://lore.kernel.org/r/20230405123813.2272919-1-pbrobinson@gmail.com
+[increased Volume-Down voltage to 600mV as suggested by Ondrej]
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3399-pinephone-pro.dts     | 26 +++++++++++++++++++
+ 1 file changed, 26 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-pinephone-pro.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3399-pinephone-pro.dts
+@@ -10,6 +10,7 @@
+  */
+ 
+ /dts-v1/;
++#include <dt-bindings/input/gpio-keys.h>
+ #include <dt-bindings/input/linux-event-codes.h>
+ #include "rk3399.dtsi"
+ #include "rk3399-opp.dtsi"
+@@ -29,6 +30,26 @@
+ 		stdout-path = "serial2:115200n8";
+ 	};
+ 
++	adc-keys {
++		compatible = "adc-keys";
++		io-channels = <&saradc 1>;
++		io-channel-names = "buttons";
++		keyup-threshold-microvolt = <1600000>;
++		poll-interval = <100>;
++
++		button-up {
++			label = "Volume Up";
++			linux,code = <KEY_VOLUMEUP>;
++			press-threshold-microvolt = <100000>;
++		};
++
++		button-down {
++			label = "Volume Down";
++			linux,code = <KEY_VOLUMEDOWN>;
++			press-threshold-microvolt = <600000>;
++		};
++	};
++
+ 	backlight: backlight {
+ 		compatible = "pwm-backlight";
+ 		pwms = <&pwm0 0 50000 0>;
+@@ -519,6 +540,11 @@
+ 	status = "okay";
+ };
+ 
++&saradc {
++	vref-supply = <&vcca1v8_s3>;
++	status = "okay";
++};
++
+ &sdmmc {
+ 	bus-width = <4>;
+ 	cap-sd-highspeed;
diff --git a/target/linux/rockchip/patches-6.1/167-arm64-dts-rockchip-Update-compatible-for-bluetooth.patch b/target/linux/rockchip/patches-6.1/167-arm64-dts-rockchip-Update-compatible-for-bluetooth.patch
new file mode 100644
index 0000000000..17d61168f9
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/167-arm64-dts-rockchip-Update-compatible-for-bluetooth.patch
@@ -0,0 +1,25 @@
+From be401be5ce967e8530ba3b78aa5383497389cacd Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Tue, 28 Feb 2023 09:22:05 -0600
+Subject: [PATCH 167/383] arm64: dts: rockchip: Update compatible for bluetooth
+
+Update the compatible for the Realtek RTL8821CS bluetooth node.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3566-anbernic-rgxx3.dtsi | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rgxx3.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rgxx3.dtsi
+@@ -716,7 +716,7 @@
+ 	status = "okay";
+ 
+ 	bluetooth {
+-		compatible = "realtek,rtl8821cs-bt";
++		compatible = "realtek,rtl8821cs-bt", "realtek,rtl8822cs-bt";
+ 		device-wake-gpios = <&gpio4 4 GPIO_ACTIVE_HIGH>;
+ 		enable-gpios = <&gpio4 3 GPIO_ACTIVE_HIGH>;
+ 		host-wake-gpios = <&gpio4 5 GPIO_ACTIVE_HIGH>;
diff --git a/target/linux/rockchip/patches-6.1/168-arm64-dts-rockchip-add-panel-to-Anbernic-RG353-serie.patch b/target/linux/rockchip/patches-6.1/168-arm64-dts-rockchip-add-panel-to-Anbernic-RG353-serie.patch
new file mode 100644
index 0000000000..74f292de29
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/168-arm64-dts-rockchip-add-panel-to-Anbernic-RG353-serie.patch
@@ -0,0 +1,91 @@
+From 50974c17b775bec188ac036c4dc9adb7e99f8fe4 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Fri, 25 Nov 2022 19:14:32 -0600
+Subject: [PATCH 168/383] arm64: dts: rockchip: add panel to Anbernic RG353
+ series
+
+Add support for the newly mainlined panel to the RG353 series of
+devices.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20221126011432.22891-2-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3566-anbernic-rg353x.dtsi  | 58 +++++++++++++++++++
+ 1 file changed, 58 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353x.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353x.dtsi
+@@ -22,6 +22,48 @@
+ 			       <200000000>, <241500000>;
+ };
+ 
++&dsi_dphy0 {
++	status = "okay";
++};
++
++&dsi0 {
++	status = "okay";
++	#address-cells = <1>;
++	#size-cells = <0>;
++
++	ports {
++		dsi0_in: port@0 {
++			reg = <0>;
++			dsi0_in_vp1: endpoint {
++				remote-endpoint = <&vp1_out_dsi0>;
++			};
++		};
++
++		dsi0_out: port@1 {
++			reg = <1>;
++			mipi_out_panel: endpoint {
++				remote-endpoint = <&mipi_in_panel>;
++			};
++		};
++	};
++
++	panel: panel@0 {
++		compatible = "anbernic,rg353p-panel", "newvision,nv3051d";
++		reg = <0>;
++		backlight = <&backlight>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&lcd_rst>;
++		reset-gpios = <&gpio4 RK_PA0 GPIO_ACTIVE_LOW>;
++		vdd-supply = <&vcc3v3_lcd0_n>;
++
++		port {
++			mipi_in_panel: endpoint {
++				remote-endpoint = <&mipi_out_panel>;
++			};
++		};
++	};
++};
++
+ &gpio_keys_control {
+ 	button-a {
+ 		gpios = <&gpio3 RK_PC2 GPIO_ACTIVE_LOW>;
+@@ -57,6 +99,22 @@
+ 	};
+ };
+ 
++&pinctrl {
++	gpio-lcd {
++		lcd_rst: lcd-rst {
++			rockchip,pins =
++				<4 RK_PA0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
+ &pwm4 {
+ 	status = "okay";
+ };
++
++&vp1 {
++	vp1_out_dsi0: endpoint@ROCKCHIP_VOP2_EP_MIPI0 {
++		reg = <ROCKCHIP_VOP2_EP_MIPI0>;
++		remote-endpoint = <&dsi0_in_vp1>;
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/169-arm64-dts-rockchip-fix-USB-regulator-on-ROCK64.patch b/target/linux/rockchip/patches-6.1/169-arm64-dts-rockchip-fix-USB-regulator-on-ROCK64.patch
new file mode 100644
index 0000000000..b0851a0d1d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/169-arm64-dts-rockchip-fix-USB-regulator-on-ROCK64.patch
@@ -0,0 +1,62 @@
+From 5658597f406cb3075561b187bc413a9547b1fe4b Mon Sep 17 00:00:00 2001
+From: Lorenz Brun <lorenz@brun.one>
+Date: Fri, 21 Apr 2023 23:38:41 +0200
+Subject: [PATCH 169/383] arm64: dts: rockchip: fix USB regulator on ROCK64
+
+Currently the ROCK64 device tree specifies two regulators, vcc_host_5v
+and vcc_host1_5v for USB VBUS on the device. Both of those are however
+specified with RK_PA2 as the GPIO enabling them, causing the following
+error when booting:
+
+  rockchip-pinctrl pinctrl: pin gpio0-2 already requested by vcc-host-5v-regulator; cannot claim for vcc-host1-5v-regulator
+  rockchip-pinctrl pinctrl: pin-2 (vcc-host1-5v-regulator) status -22
+  rockchip-pinctrl pinctrl: could not request pin 2 (gpio0-2) from group usb20-host-drv  on device rockchip-pinctrl
+  reg-fixed-voltage vcc-host1-5v-regulator: Error applying setting, reverse things back
+
+Looking at the schematic, there are in fact three USB regulators,
+vcc_host_5v, vcc_host1_5v and vcc_otg_v5. But the enable signal for all
+three is driven by Q2604 which is in turn driven by GPIO_A2/PA2.
+
+Since these three regulators are not controllable separately, I removed
+the second one which was causing the error and added labels for all
+rails to the single regulator.
+
+Signed-off-by: Lorenz Brun <lorenz@brun.one>
+Tested-by: Diederik de Haas <didi.debian@cknow.org>
+Link: https://lore.kernel.org/r/20230421213841.3079632-1-lorenz@brun.one
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3328-rock64.dts | 14 ++------------
+ 1 file changed, 2 insertions(+), 12 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3328-rock64.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3328-rock64.dts
+@@ -37,7 +37,8 @@
+ 		vin-supply = <&vcc_io>;
+ 	};
+ 
+-	vcc_host_5v: vcc-host-5v-regulator {
++	/* Common enable line for all of the rails mentioned in the labels */
++	vcc_host_5v: vcc_host1_5v: vcc_otg_5v: vcc-host-5v-regulator {
+ 		compatible = "regulator-fixed";
+ 		gpio = <&gpio0 RK_PA2 GPIO_ACTIVE_LOW>;
+ 		pinctrl-names = "default";
+@@ -46,17 +47,6 @@
+ 		regulator-always-on;
+ 		regulator-boot-on;
+ 		vin-supply = <&vcc_sys>;
+-	};
+-
+-	vcc_host1_5v: vcc_otg_5v: vcc-host1-5v-regulator {
+-		compatible = "regulator-fixed";
+-		gpio = <&gpio0 RK_PA2 GPIO_ACTIVE_LOW>;
+-		pinctrl-names = "default";
+-		pinctrl-0 = <&usb20_host_drv>;
+-		regulator-name = "vcc_host1_5v";
+-		regulator-always-on;
+-		regulator-boot-on;
+-		vin-supply = <&vcc_sys>;
+ 	};
+ 
+ 	vcc_sys: vcc-sys {
diff --git a/target/linux/rockchip/patches-6.1/170-arm64-dts-rockchip-add-missing-cache-properties.patch b/target/linux/rockchip/patches-6.1/170-arm64-dts-rockchip-add-missing-cache-properties.patch
new file mode 100644
index 0000000000..7d65c2c5f9
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/170-arm64-dts-rockchip-add-missing-cache-properties.patch
@@ -0,0 +1,114 @@
+From 16037c793235f5043c1b04076a057cc7729080d8 Mon Sep 17 00:00:00 2001
+From: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Date: Sat, 22 Apr 2023 00:31:48 +0200
+Subject: [PATCH 170/383] arm64: dts: rockchip: add missing cache properties
+
+As all level 2 and level 3 caches are unified, add required
+cache-unified properties to fix warnings like:
+
+  rk3588s-khadas-edge2.dtb: l3-cache: 'cache-unified' is a dependency of 'cache-size'
+
+Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230421223149.115185-1-krzysztof.kozlowski@linaro.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3308.dtsi  | 1 +
+ arch/arm64/boot/dts/rockchip/rk3328.dtsi  | 1 +
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 9 +++++++++
+ 3 files changed, 11 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3308.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3308.dtsi
+@@ -97,6 +97,7 @@
+ 		l2: l2-cache {
+ 			compatible = "cache";
+ 			cache-level = <2>;
++			cache-unified;
+ 		};
+ 	};
+ 
+--- a/arch/arm64/boot/dts/rockchip/rk3328.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3328.dtsi
+@@ -103,6 +103,7 @@
+ 		l2: l2-cache0 {
+ 			compatible = "cache";
+ 			cache-level = <2>;
++			cache-unified;
+ 		};
+ 	};
+ 
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -229,6 +229,7 @@
+ 			cache-line-size = <64>;
+ 			cache-sets = <512>;
+ 			cache-level = <2>;
++			cache-unified;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -238,6 +239,7 @@
+ 			cache-line-size = <64>;
+ 			cache-sets = <512>;
+ 			cache-level = <2>;
++			cache-unified;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -247,6 +249,7 @@
+ 			cache-line-size = <64>;
+ 			cache-sets = <512>;
+ 			cache-level = <2>;
++			cache-unified;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -256,6 +259,7 @@
+ 			cache-line-size = <64>;
+ 			cache-sets = <512>;
+ 			cache-level = <2>;
++			cache-unified;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -265,6 +269,7 @@
+ 			cache-line-size = <64>;
+ 			cache-sets = <1024>;
+ 			cache-level = <2>;
++			cache-unified;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -274,6 +279,7 @@
+ 			cache-line-size = <64>;
+ 			cache-sets = <1024>;
+ 			cache-level = <2>;
++			cache-unified;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -283,6 +289,7 @@
+ 			cache-line-size = <64>;
+ 			cache-sets = <1024>;
+ 			cache-level = <2>;
++			cache-unified;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -292,6 +299,7 @@
+ 			cache-line-size = <64>;
+ 			cache-sets = <1024>;
+ 			cache-level = <2>;
++			cache-unified;
+ 			next-level-cache = <&l3_cache>;
+ 		};
+ 
+@@ -301,6 +309,7 @@
+ 			cache-line-size = <64>;
+ 			cache-sets = <4096>;
+ 			cache-level = <3>;
++			cache-unified;
+ 		};
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/172-arm64-dts-rockchip-add-GIC-ITS-support-to-rk3588.patch b/target/linux/rockchip/patches-6.1/172-arm64-dts-rockchip-add-GIC-ITS-support-to-rk3588.patch
new file mode 100644
index 0000000000..6f166bb286
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/172-arm64-dts-rockchip-add-GIC-ITS-support-to-rk3588.patch
@@ -0,0 +1,46 @@
+From 90d5c1eb04ccff2a14be69d8ff30737b5aafebab Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 18 Apr 2023 16:21:09 +0200
+Subject: [PATCH 172/383] arm64: dts: rockchip: add GIC ITS support to rk3588
+
+Add the two Interrupt Translation Service (ITS) IPs that are part of the
+GIC-600. They are mainly required for PCIe Message Signalled Interrupts
+(MSI).
+
+Co-developed-by: Kever Yang <kever.yang@rock-chips.com>
+Signed-off-by: Kever Yang <kever.yang@rock-chips.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230418142109.49762-3-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 17 +++++++++++++++++
+ 1 file changed, 17 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -1309,7 +1309,24 @@
+ 		mbi-alias = <0x0 0xfe610000>;
+ 		mbi-ranges = <424 56>;
+ 		msi-controller;
++		ranges;
++		#address-cells = <2>;
+ 		#interrupt-cells = <4>;
++		#size-cells = <2>;
++
++		its0: msi-controller@fe640000 {
++			compatible = "arm,gic-v3-its";
++			reg = <0x0 0xfe640000 0x0 0x20000>;
++			msi-controller;
++			#msi-cells = <1>;
++		};
++
++		its1: msi-controller@fe660000 {
++			compatible = "arm,gic-v3-its";
++			reg = <0x0 0xfe660000 0x0 0x20000>;
++			msi-controller;
++			#msi-cells = <1>;
++		};
+ 
+ 		ppi-partitions {
+ 			ppi_partition0: interrupt-partition-0 {
diff --git a/target/linux/rockchip/patches-6.1/173-arm64-dts-rockchip-Add-rk3588-timer.patch b/target/linux/rockchip/patches-6.1/173-arm64-dts-rockchip-Add-rk3588-timer.patch
new file mode 100644
index 0000000000..e6a1fd2365
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/173-arm64-dts-rockchip-Add-rk3588-timer.patch
@@ -0,0 +1,32 @@
+From d6b9406805470684aab0b7ce852d3403193c2ef0 Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Wed, 19 Apr 2023 21:13:09 +0300
+Subject: [PATCH 173/383] arm64: dts: rockchip: Add rk3588 timer
+
+Add DT node for Rockchip RK3588/RK3588S SoC timer.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230419181309.338354-4-cristian.ciocaltea@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 8 ++++++++
+ 1 file changed, 8 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -1426,6 +1426,14 @@
+ 		status = "disabled";
+ 	};
+ 
++	timer0: timer@feae0000 {
++		compatible = "rockchip,rk3588-timer", "rockchip,rk3288-timer";
++		reg = <0x0 0xfeae0000 0x0 0x20>;
++		interrupts = <GIC_SPI 289 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru PCLK_BUSTIMER0>, <&cru CLK_BUSTIMER0>;
++		clock-names = "pclk", "timer";
++	};
++
+ 	wdt: watchdog@feaf0000 {
+ 		compatible = "rockchip,rk3588-wdt", "snps,dw-wdt";
+ 		reg = <0x0 0xfeaf0000 0x0 0x100>;
diff --git a/target/linux/rockchip/patches-6.1/174-arm64-dts-rockchip-Add-Lunzn-Fastrhino-R66S.patch b/target/linux/rockchip/patches-6.1/174-arm64-dts-rockchip-Add-Lunzn-Fastrhino-R66S.patch
new file mode 100644
index 0000000000..582d3f621d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/174-arm64-dts-rockchip-Add-Lunzn-Fastrhino-R66S.patch
@@ -0,0 +1,554 @@
+From a4be8686beaa7102a97574e215d63c7ea7d2c5ec Mon Sep 17 00:00:00 2001
+From: Tianling Shen <cnsztl@gmail.com>
+Date: Sat, 6 May 2023 14:11:07 +0800
+Subject: [PATCH 174/383] arm64: dts: rockchip: Add Lunzn Fastrhino R66S
+
+Lunzn Fastrhino R66S is a high-performance mini router.
+
+Specification:
+- Rockchip RK3568
+- 1/2GB LPDDR4 RAM
+- SD card slot
+- 2x USB 3.0 Port
+- 2x 2500 Base-T (PCIe, r8125b)
+- 12v DC Jack
+
+Signed-off-by: Tianling Shen <cnsztl@gmail.com>
+Link: https://lore.kernel.org/r/20230506061108.17658-2-cnsztl@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../dts/rockchip/rk3568-fastrhino-r66s.dts    |  27 +
+ .../dts/rockchip/rk3568-fastrhino-r66s.dtsi   | 484 ++++++++++++++++++
+ 3 files changed, 512 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3568-fastrhino-r66s.dts
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3568-fastrhino-r66s.dtsi
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -85,6 +85,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-bo
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-lubancat-1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-bpi-r2-pro.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-evb1-v10.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-fastrhino-r66s.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-lubancat-2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-nanopi-r5c.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-nanopi-r5s.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3568-fastrhino-r66s.dts
+@@ -0,0 +1,27 @@
++// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
++
++#include "rk3568-fastrhino-r66s.dtsi"
++
++/ {
++	model = "Lunzn FastRhino R66S";
++	compatible = "lunzn,fastrhino-r66s", "rockchip,rk3568";
++
++	aliases {
++		mmc0 = &sdmmc0;
++	};
++};
++
++&sdmmc0 {
++	bus-width = <4>;
++	cap-mmc-highspeed;
++	cap-sd-highspeed;
++	disable-wp;
++	max-frequency = <150000000>;
++	no-sdio;
++	no-mmc;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc0_bus4 &sdmmc0_clk &sdmmc0_cmd &sdmmc0_det>;
++	vmmc-supply = <&vcc3v3_sd>;
++	vqmmc-supply = <&vccio_sd>;
++	status = "okay";
++};
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3568-fastrhino-r66s.dtsi
+@@ -0,0 +1,484 @@
++// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
++
++/dts-v1/;
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/input/input.h>
++#include <dt-bindings/leds/common.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include <dt-bindings/soc/rockchip,vop2.h>
++#include "rk3568.dtsi"
++
++/ {
++	chosen: chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	gpio-keys {
++		compatible = "gpio-keys";
++		pinctrl-names = "default";
++		pinctrl-0 = <&reset_button_pin>;
++
++		button-reset {
++			debounce-interval = <50>;
++			gpios = <&gpio0 RK_PB6 GPIO_ACTIVE_LOW>;
++			label = "reset";
++			linux,code = <KEY_RESTART>;
++		};
++	};
++
++	gpio-leds {
++		compatible = "gpio-leds";
++		pinctrl-names = "default";
++		pinctrl-0 = <&status_led_pin>;
++
++		status_led: led-status {
++			color = <LED_COLOR_ID_BLUE>;
++			function = LED_FUNCTION_STATUS;
++			gpios = <&gpio0 RK_PC0 GPIO_ACTIVE_HIGH>;
++			linux,default-trigger = "heartbeat";
++		};
++	};
++
++	dc_12v: dc-12v-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "dc_12v";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <12000000>;
++		regulator-max-microvolt = <12000000>;
++	};
++
++	vcc3v3_pcie: vcc3v3-pcie-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_pcie";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc3v3_sys: vcc3v3-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&dc_12v>;
++	};
++
++	vcc5v0_sys: vcc5v0-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&dc_12v>;
++	};
++
++	vcc5v0_usb_host: vcc5v0-usb-host-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usb_host";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++
++	vcc5v0_usb_otg: vcc5v0-usb-otg-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio0 RK_PA5 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_usb_otg_en>;
++		regulator-name = "vcc5v0_usb_otg";
++		regulator-always-on;
++		regulator-boot-on;
++	};
++};
++
++&combphy0 {
++	status = "okay";
++};
++
++&combphy1 {
++	status = "okay";
++};
++
++&cpu0 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu1 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu2 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&cpu3 {
++	cpu-supply = <&vdd_cpu>;
++};
++
++&gpu {
++	mali-supply = <&vdd_gpu>;
++	status = "okay";
++};
++
++&i2c0 {
++	status = "okay";
++
++	vdd_cpu: regulator@1c {
++		compatible = "tcs,tcs4525";
++		reg = <0x1c>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <800000>;
++		regulator-max-microvolt = <1150000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	rk809: pmic@20 {
++		compatible = "rockchip,rk809";
++		reg = <0x20>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PA3 IRQ_TYPE_LEVEL_LOW>;
++		#clock-cells = <1>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pmic_int>;
++		rockchip,system-power-controller;
++		vcc1-supply = <&vcc3v3_sys>;
++		vcc2-supply = <&vcc3v3_sys>;
++		vcc3-supply = <&vcc3v3_sys>;
++		vcc4-supply = <&vcc3v3_sys>;
++		vcc5-supply = <&vcc3v3_sys>;
++		vcc6-supply = <&vcc3v3_sys>;
++		vcc7-supply = <&vcc3v3_sys>;
++		vcc8-supply = <&vcc3v3_sys>;
++		vcc9-supply = <&vcc3v3_sys>;
++		wakeup-source;
++
++		regulators {
++			vdd_logic: DCDC_REG1 {
++				regulator-name = "vdd_logic";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-init-microvolt = <900000>;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_gpu: DCDC_REG2 {
++				regulator-name = "vdd_gpu";
++				regulator-always-on;
++				regulator-init-microvolt = <900000>;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_ddr: DCDC_REG3 {
++				regulator-name = "vcc_ddr";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-initial-mode = <0x2>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vdd_npu: DCDC_REG4 {
++				regulator-name = "vdd_npu";
++				regulator-init-microvolt = <900000>;
++				regulator-initial-mode = <0x2>;
++				regulator-min-microvolt = <500000>;
++				regulator-max-microvolt = <1350000>;
++				regulator-ramp-delay = <6001>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_1v8: DCDC_REG5 {
++				regulator-name = "vcc_1v8";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_image: LDO_REG1 {
++				regulator-name = "vdda0v9_image";
++				regulator-min-microvolt = <950000>;
++				regulator-max-microvolt = <950000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda_0v9: LDO_REG2 {
++				regulator-name = "vdda_0v9";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda0v9_pmu: LDO_REG3 {
++				regulator-name = "vdda0v9_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <900000>;
++				};
++			};
++
++			vccio_acodec: LDO_REG4 {
++				regulator-name = "vccio_acodec";
++				regulator-always-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_sd: LDO_REG5 {
++				regulator-name = "vccio_sd";
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_pmu: LDO_REG6 {
++				regulator-name = "vcc3v3_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcca_1v8: LDO_REG7 {
++				regulator-name = "vcca_1v8";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcca1v8_pmu: LDO_REG8 {
++				regulator-name = "vcca1v8_pmu";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vcca1v8_image: LDO_REG9 {
++				regulator-name = "vcca1v8_image";
++				regulator-init-microvolt = <950000>;
++				regulator-min-microvolt = <950000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <950000>;
++				};
++			};
++
++			vcc_3v3: SWITCH_REG1 {
++				regulator-name = "vcc_3v3";
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc3v3_sd: SWITCH_REG2 {
++				regulator-name = "vcc3v3_sd";
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++		};
++	};
++};
++
++&pcie30phy {
++	data-lanes = <1 2>;
++	status = "okay";
++};
++
++&pcie3x1 {
++	num-lanes = <1>;
++	reset-gpios = <&gpio0 RK_PC3 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_pcie>;
++	status = "okay";
++};
++
++&pcie3x2 {
++	num-lanes = <1>;
++	reset-gpios = <&gpio0 RK_PC6 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_pcie>;
++	status = "okay";
++};
++
++&pinctrl {
++	gpio-leds {
++		status_led_pin: status-led-pin {
++			rockchip,pins = <0 RK_PC0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	pmic {
++		pmic_int: pmic-int {
++			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	rockchip-key {
++		reset_button_pin: reset-button-pin {
++			rockchip,pins = <0 RK_PB6 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	usb {
++		vcc5v0_usb_otg_en: vcc5v0-usb-otg-en {
++			rockchip,pins = <0 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&pmu_io_domains {
++	pmuio1-supply = <&vcc3v3_pmu>;
++	pmuio2-supply = <&vcc3v3_pmu>;
++	vccio1-supply = <&vccio_acodec>;
++	vccio3-supply = <&vccio_sd>;
++	vccio4-supply = <&vcc_1v8>;
++	vccio5-supply = <&vcc_3v3>;
++	vccio6-supply = <&vcc_1v8>;
++	vccio7-supply = <&vcc_3v3>;
++	status = "okay";
++};
++
++&saradc {
++	vref-supply = <&vcca_1v8>;
++	status = "okay";
++};
++
++&tsadc {
++	rockchip,hw-tshut-mode = <1>;
++	rockchip,hw-tshut-polarity = <0>;
++	status = "okay";
++};
++
++&uart2 {
++	status = "okay";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++&usb_host0_xhci {
++	dr_mode = "host";
++	extcon = <&usb2phy0>;
++	status = "okay";
++};
++
++&usb_host1_ehci {
++	status = "okay";
++};
++
++&usb_host1_ohci {
++	status = "okay";
++};
++
++&usb_host1_xhci {
++	status = "okay";
++};
++
++&usb2phy0 {
++	status = "okay";
++};
++
++&usb2phy0_host {
++	phy-supply = <&vcc5v0_usb_host>;
++	status = "okay";
++};
++
++&usb2phy0_otg {
++	phy-supply = <&vcc5v0_usb_otg>;
++	status = "okay";
++};
++
++&vop {
++	assigned-clocks = <&cru DCLK_VOP0>, <&cru DCLK_VOP1>;
++	assigned-clock-parents = <&pmucru PLL_HPLL>, <&cru PLL_VPLL>;
++	status = "okay";
++};
++
++&vop_mmu {
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/175-arm64-dts-rockchip-Add-Lunzn-Fastrhino-R68S.patch b/target/linux/rockchip/patches-6.1/175-arm64-dts-rockchip-Add-Lunzn-Fastrhino-R68S.patch
new file mode 100644
index 0000000000..eb73eb8ac7
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/175-arm64-dts-rockchip-Add-Lunzn-Fastrhino-R68S.patch
@@ -0,0 +1,147 @@
+From 950da0bca31a30ea6a772c55ae3a063796861442 Mon Sep 17 00:00:00 2001
+From: Tianling Shen <cnsztl@gmail.com>
+Date: Sat, 6 May 2023 14:11:08 +0800
+Subject: [PATCH 175/383] arm64: dts: rockchip: Add Lunzn Fastrhino R68S
+
+It's similar to Fastrhino R66S with the following changes:
++ 2/4GB LPDDR4 RAM
++ 2x 1000 Base-T (native, RTL8211f)
++ ADC button
++ 16GB eMMC on-board
+- No SD card slot
+
+Signed-off-by: Tianling Shen <cnsztl@gmail.com>
+Link: https://lore.kernel.org/r/20230506061108.17658-3-cnsztl@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../dts/rockchip/rk3568-fastrhino-r68s.dts    | 112 ++++++++++++++++++
+ 2 files changed, 113 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3568-fastrhino-r68s.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -86,6 +86,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-lu
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-bpi-r2-pro.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-evb1-v10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-fastrhino-r66s.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-fastrhino-r68s.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-lubancat-2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-nanopi-r5c.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-nanopi-r5s.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3568-fastrhino-r68s.dts
+@@ -0,0 +1,112 @@
++// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
++
++#include "rk3568-fastrhino-r66s.dtsi"
++
++/ {
++	model = "Lunzn FastRhino R68S";
++	compatible = "lunzn,fastrhino-r68s", "rockchip,rk3568";
++
++	aliases {
++		ethernet0 = &gmac0;
++		ethernet1 = &gmac1;
++		mmc0 = &sdhci;
++	};
++
++	adc-keys {
++		compatible = "adc-keys";
++		io-channels = <&saradc 0>;
++		io-channel-names = "buttons";
++		keyup-threshold-microvolt = <1800000>;
++
++		button-recovery {
++			label = "Recovery";
++			linux,code = <KEY_VENDOR>;
++			press-threshold-microvolt = <1750>;
++		};
++	};
++};
++
++&gmac0 {
++	assigned-clocks = <&cru SCLK_GMAC0_RX_TX>, <&cru SCLK_GMAC0>;
++	assigned-clock-parents = <&cru SCLK_GMAC0_RGMII_SPEED>;
++	assigned-clock-rates = <0>, <125000000>;
++	clock_in_out = "output";
++	phy-handle = <&rgmii_phy0>;
++	phy-mode = "rgmii-id";
++	pinctrl-names = "default";
++	pinctrl-0 = <&gmac0_miim
++		     &gmac0_tx_bus2
++		     &gmac0_rx_bus2
++		     &gmac0_rgmii_clk
++		     &gmac0_rgmii_bus>;
++	snps,reset-gpio = <&gpio0 RK_PB0 GPIO_ACTIVE_LOW>;
++	snps,reset-active-low;
++	/* Reset time is 15ms, 50ms for rtl8211f */
++	snps,reset-delays-us = <0 15000 50000>;
++	tx_delay = <0x3c>;
++	rx_delay = <0x2f>;
++	status = "okay";
++};
++
++&gmac1 {
++	assigned-clocks = <&cru SCLK_GMAC1_RX_TX>, <&cru SCLK_GMAC1>;
++	assigned-clock-parents = <&cru SCLK_GMAC1_RGMII_SPEED>;
++	assigned-clock-rates = <0>, <125000000>;
++	clock_in_out = "output";
++	phy-handle = <&rgmii_phy1>;
++	phy-mode = "rgmii-id";
++	pinctrl-names = "default";
++	pinctrl-0 = <&gmac1m1_miim
++		     &gmac1m1_tx_bus2
++		     &gmac1m1_rx_bus2
++		     &gmac1m1_rgmii_clk
++		     &gmac1m1_rgmii_bus>;
++	snps,reset-gpio = <&gpio0 RK_PB1 GPIO_ACTIVE_LOW>;
++	snps,reset-active-low;
++	/* Reset time is 15ms, 50ms for rtl8211f */
++	snps,reset-delays-us = <0 15000 50000>;
++	tx_delay = <0x4f>;
++	rx_delay = <0x26>;
++	status = "okay";
++};
++
++&mdio0 {
++	rgmii_phy0: ethernet-phy@0 {
++		compatible = "ethernet-phy-ieee802.3-c22";
++		reg = <0>;
++		pinctrl-0 = <&eth_phy0_reset_pin>;
++		pinctrl-names = "default";
++	};
++};
++
++&mdio1 {
++	rgmii_phy1: ethernet-phy@0 {
++		compatible = "ethernet-phy-ieee802.3-c22";
++		reg = <0>;
++		pinctrl-0 = <&eth_phy1_reset_pin>;
++		pinctrl-names = "default";
++	};
++};
++
++&pinctrl {
++	gmac0 {
++		eth_phy0_reset_pin: eth-phy0-reset-pin {
++			rockchip,pins = <1 RK_PB0 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	gmac1 {
++		eth_phy1_reset_pin: eth-phy1-reset-pin {
++			rockchip,pins = <1 RK_PB1 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++};
++
++&sdhci {
++	bus-width = <8>;
++	max-frequency = <200000000>;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&emmc_bus8 &emmc_clk &emmc_cmd &emmc_datastrobe>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/176-arm64-dts-rockchip-add-Anbernic-RG353PS.patch b/target/linux/rockchip/patches-6.1/176-arm64-dts-rockchip-add-Anbernic-RG353PS.patch
new file mode 100644
index 0000000000..1435b9e9d5
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/176-arm64-dts-rockchip-add-Anbernic-RG353PS.patch
@@ -0,0 +1,154 @@
+From c16b4db57554778ae3e8283b5720864a325921f7 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Fri, 12 May 2023 11:20:39 -0500
+Subject: [PATCH 176/383] arm64: dts: rockchip: add Anbernic RG353PS
+
+Add support for the Anbernic RG353PS. This device is identical in form
+factor to the RG353P and has the following hardware differences:
+ - No touchscreen is present on i2c2 (or at all).
+ - Only contains 1GB of RAM.
+ - Has no eMMC.
+ - Only appears to ship with the 2nd revision of the display panel.
+
+Note that the display panel has been added to the st7703 panel driver
+in a separate commit series.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20230512162039.31132-3-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../dts/rockchip/rk3566-anbernic-rg353ps.dts  | 116 ++++++++++++++++++
+ 2 files changed, 117 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353ps.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -69,6 +69,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-sa
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-sapphire-excavator.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399pro-rock-pi-n10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-anbernic-rg353p.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-anbernic-rg353ps.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-anbernic-rg353v.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-anbernic-rg353vs.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3566-anbernic-rg503.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rg353ps.dts
+@@ -0,0 +1,116 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/input/linux-event-codes.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rk3566-anbernic-rg353x.dtsi"
++
++/ {
++	model = "RG353PS";
++	compatible = "anbernic,rg353ps", "rockchip,rk3566";
++
++	aliases {
++		mmc0 = &sdmmc0;
++		mmc1 = &sdmmc1;
++		mmc2 = &sdmmc2;
++	};
++
++	battery: battery {
++		compatible = "simple-battery";
++		charge-full-design-microamp-hours = <3472000>;
++		charge-term-current-microamp = <300000>;
++		constant-charge-current-max-microamp = <2000000>;
++		constant-charge-voltage-max-microvolt = <4200000>;
++		factory-internal-resistance-micro-ohms = <117000>;
++		voltage-max-design-microvolt = <4172000>;
++		voltage-min-design-microvolt = <3400000>;
++
++		ocv-capacity-celsius = <20>;
++		ocv-capacity-table-0 =  <4172000 100>, <4054000 95>, <3984000 90>, <3926000 85>,
++					<3874000 80>, <3826000 75>, <3783000 70>, <3746000 65>,
++					<3714000 60>, <3683000 55>, <3650000 50>, <3628000 45>,
++					<3612000 40>, <3600000 35>, <3587000 30>, <3571000 25>,
++					<3552000 20>, <3525000 15>, <3492000 10>, <3446000 5>,
++					<3400000 0>;
++	};
++
++	/* Channels reversed for both headphones and speakers. */
++	sound {
++		compatible = "simple-audio-card";
++		simple-audio-card,name = "rk817_ext";
++		simple-audio-card,aux-devs = <&spk_amp>;
++		simple-audio-card,format = "i2s";
++		simple-audio-card,hp-det-gpio = <&gpio4 RK_PC6 GPIO_ACTIVE_HIGH>;
++		simple-audio-card,mclk-fs = <256>;
++		simple-audio-card,widgets =
++			"Microphone", "Mic Jack",
++			"Headphone", "Headphones",
++			"Speaker", "Internal Speakers";
++		simple-audio-card,routing =
++			"MICL", "Mic Jack",
++			"Headphones", "HPOL",
++			"Headphones", "HPOR",
++			"Internal Speakers", "Speaker Amp OUTL",
++			"Internal Speakers", "Speaker Amp OUTR",
++			"Speaker Amp INL", "HPOL",
++			"Speaker Amp INR", "HPOR";
++		simple-audio-card,pin-switches = "Internal Speakers";
++
++		simple-audio-card,codec {
++			sound-dai = <&rk817>;
++		};
++
++		simple-audio-card,cpu {
++			sound-dai = <&i2s1_8ch>;
++		};
++	};
++
++	spk_amp: audio-amplifier {
++		compatible = "simple-audio-amplifier";
++		enable-gpios = <&gpio4 RK_PC2 GPIO_ACTIVE_HIGH>;
++		pinctrl-0 = <&spk_amp_enable_h>;
++		pinctrl-names = "default";
++		sound-name-prefix = "Speaker Amp";
++	};
++};
++
++&gpio_keys_control {
++	button-r1 {
++		gpios = <&gpio3 RK_PB4 GPIO_ACTIVE_LOW>;
++		label = "TR";
++		linux,code = <BTN_TR>;
++	};
++
++	button-r2 {
++		gpios = <&gpio3 RK_PB3 GPIO_ACTIVE_LOW>;
++		label = "TR2";
++		linux,code = <BTN_TR2>;
++	};
++};
++
++&panel {
++	compatible = "anbernic,rg353v-panel-v2";
++	iovcc-supply = <&vcc3v3_lcd0_n>;
++	vcc-supply = <&vcc3v3_lcd0_n>;
++	/delete-property/ vdd-supply;
++};
++
++&pinctrl {
++	audio-amplifier {
++		spk_amp_enable_h: spk-amp-enable-h {
++			rockchip,pins =
++				<4 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&rk817 {
++	rk817_charger: charger {
++		monitored-battery = <&battery>;
++		rockchip,resistor-sense-micro-ohms = <10000>;
++		rockchip,sleep-enter-current-microamp = <300000>;
++		rockchip,sleep-filter-current-microamp = <100000>;
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/177-arm64-dts-rockchip-Update-leds-for-Anbernic-RGxx3-Se.patch b/target/linux/rockchip/patches-6.1/177-arm64-dts-rockchip-Update-leds-for-Anbernic-RGxx3-Se.patch
new file mode 100644
index 0000000000..67524e2893
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/177-arm64-dts-rockchip-Update-leds-for-Anbernic-RGxx3-Se.patch
@@ -0,0 +1,101 @@
+From 300e77f77e1e73b1e2bb47b931bf5e593a434a4e Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Fri, 12 May 2023 14:16:33 -0500
+Subject: [PATCH 177/383] arm64: dts: rockchip: Update leds for Anbernic RGxx3
+ Series
+
+Each of the LEDs on the RGxx3 which is currently controlled via GPIO
+can also be controlled via a PWM. Change each of the LEDs to PWM so
+that users have the ability to adjust the brightness of the LEDs
+according to their preference.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20230512191633.33416-1-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3566-anbernic-rgxx3.dtsi   | 39 +++++++++++--------
+ 1 file changed, 22 insertions(+), 17 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rgxx3.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3566-anbernic-rgxx3.dtsi
+@@ -191,30 +191,30 @@
+ 		};
+ 	};
+ 
+-	leds: gpio-leds {
+-		compatible = "gpio-leds";
+-		pinctrl-0 = <&led_pins>;
+-		pinctrl-names = "default";
++	leds: pwm-leds {
++		compatible = "pwm-leds";
+ 
+ 		green_led: led-0 {
+ 			color = <LED_COLOR_ID_GREEN>;
+ 			default-state = "on";
+ 			function = LED_FUNCTION_POWER;
+-			gpios = <&gpio0 RK_PC5 GPIO_ACTIVE_HIGH>;
++			max-brightness = <255>;
++			pwms = <&pwm6 0 25000 0>;
+ 		};
+ 
+ 		amber_led: led-1 {
+ 			color = <LED_COLOR_ID_AMBER>;
+ 			function = LED_FUNCTION_CHARGING;
+-			gpios = <&gpio0 RK_PC6 GPIO_ACTIVE_HIGH>;
+-			retain-state-suspended;
++			max-brightness = <255>;
++			pwms = <&pwm7 0 25000 0>;
+ 		};
+ 
+ 		red_led: led-2 {
+ 			color = <LED_COLOR_ID_RED>;
+ 			default-state = "off";
+ 			function = LED_FUNCTION_STATUS;
+-			gpios = <&gpio0 RK_PC7 GPIO_ACTIVE_HIGH>;
++			max-brightness = <255>;
++			pwms = <&pwm0 0 25000 0>;
+ 		};
+ 	};
+ 
+@@ -597,15 +597,6 @@
+ 		};
+ 	};
+ 
+-	gpio-led {
+-		led_pins: led-pins {
+-			rockchip,pins =
+-				<0 RK_PC5 RK_FUNC_GPIO &pcfg_pull_none>,
+-				<0 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>,
+-				<0 RK_PC7 RK_FUNC_GPIO &pcfg_pull_none>;
+-		};
+-	};
+-
+ 	joy-mux {
+ 		joy_mux_en: joy-mux-en {
+ 			rockchip,pins =
+@@ -654,10 +645,24 @@
+ 	vccio7-supply = <&vcc_3v3>;
+ };
+ 
++&pwm0 {
++	pinctrl-0 = <&pwm0m1_pins>;
++	pinctrl-names = "default";
++	status = "okay";
++};
++
+ &pwm5 {
+ 	status = "okay";
+ };
+ 
++&pwm6 {
++	status = "okay";
++};
++
++&pwm7 {
++	status = "okay";
++};
++
+ &saradc {
+ 	vref-supply = <&vcc_1v8>;
+ 	status = "okay";
diff --git a/target/linux/rockchip/patches-6.1/178-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C-Plus.patch b/target/linux/rockchip/patches-6.1/178-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C-Plus.patch
new file mode 100644
index 0000000000..73121dc122
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/178-arm64-dts-rockchip-Add-FriendlyARM-NanoPi-R2C-Plus.patch
@@ -0,0 +1,64 @@
+From 45902bac55d540baee5489f8caba2a733503a0ff Mon Sep 17 00:00:00 2001
+From: Tianling Shen <cnsztl@gmail.com>
+Date: Sat, 13 May 2023 21:53:07 +0800
+Subject: [PATCH 178/383] arm64: dts: rockchip: Add FriendlyARM NanoPi R2C Plus
+
+The NanoPi R2C Plus is a small variant of NanoPi R2C with a on-board
+eMMC flash (8G) included.
+
+Signed-off-by: Tianling Shen <cnsztl@gmail.com>
+Link: https://lore.kernel.org/r/20230513135307.26554-2-cnsztl@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |  1 +
+ .../dts/rockchip/rk3328-nanopi-r2c-plus.dts   | 33 +++++++++++++++++++
+ 2 files changed, 34 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3328-nanopi-r2c-plus.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -15,6 +15,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3326-od
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-a1.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-evb.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2c.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2c-plus.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2s.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-orangepi-r1-plus.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-orangepi-r1-plus-lts.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3328-nanopi-r2c-plus.dts
+@@ -0,0 +1,33 @@
++// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
++/*
++ * Copyright (c) 2021 FriendlyElec Computer Tech. Co., Ltd.
++ * (http://www.friendlyarm.com)
++ *
++ * Copyright (c) 2023 Tianling Shen <cnsztl@gmail.com>
++ */
++
++/dts-v1/;
++#include "rk3328-nanopi-r2c.dts"
++
++/ {
++	model = "FriendlyElec NanoPi R2C Plus";
++	compatible = "friendlyarm,nanopi-r2c-plus", "rockchip,rk3328";
++
++	aliases {
++		mmc1 = &emmc;
++	};
++};
++
++&emmc {
++	bus-width = <8>;
++	cap-mmc-highspeed;
++	max-frequency = <150000000>;
++	mmc-ddr-1_8v;
++	mmc-hs200-1_8v;
++	non-removable;
++	pinctrl-names = "default";
++	pinctrl-0 = <&emmc_clk &emmc_cmd &emmc_bus8>;
++	vmmc-supply = <&vcc_io_33>;
++	vqmmc-supply = <&vcc18_emmc>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/179-arm64-dts-rockchip-Add-rk3588-OTP-node.patch b/target/linux/rockchip/patches-6.1/179-arm64-dts-rockchip-Add-rk3588-OTP-node.patch
new file mode 100644
index 0000000000..266cafb6fa
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/179-arm64-dts-rockchip-Add-rk3588-OTP-node.patch
@@ -0,0 +1,82 @@
+From 454d8712e9dbc16c0bff1333745959bbe3e5fb28 Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Thu, 4 May 2023 23:06:48 +0300
+Subject: [PATCH 179/383] arm64: dts: rockchip: Add rk3588 OTP node
+
+Add DT node for Rockchip RK3588/RK3588S OTP memory.
+
+Co-developed-by: Finley Xiao <finley.xiao@rock-chips.com>
+Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com>
+[moved cpu-version subnode down, to be sorted by address]
+Link: https://lore.kernel.org/r/20230504200648.1119866-9-cristian.ciocaltea@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 54 +++++++++++++++++++++++
+ 1 file changed, 54 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -1848,6 +1848,60 @@
+ 		status = "disabled";
+ 	};
+ 
++	otp: efuse@fecc0000 {
++		compatible = "rockchip,rk3588-otp";
++		reg = <0x0 0xfecc0000 0x0 0x400>;
++		clocks = <&cru CLK_OTPC_NS>, <&cru PCLK_OTPC_NS>,
++			 <&cru CLK_OTP_PHY_G>, <&cru CLK_OTPC_ARB>;
++		clock-names = "otp", "apb_pclk", "phy", "arb";
++		resets = <&cru SRST_OTPC_NS>, <&cru SRST_P_OTPC_NS>,
++			 <&cru SRST_OTPC_ARB>;
++		reset-names = "otp", "apb", "arb";
++		#address-cells = <1>;
++		#size-cells = <1>;
++
++		cpu_code: cpu-code@2 {
++			reg = <0x02 0x2>;
++		};
++
++		otp_id: id@7 {
++			reg = <0x07 0x10>;
++		};
++
++		cpub0_leakage: cpu-leakage@17 {
++			reg = <0x17 0x1>;
++		};
++
++		cpub1_leakage: cpu-leakage@18 {
++			reg = <0x18 0x1>;
++		};
++
++		cpul_leakage: cpu-leakage@19 {
++			reg = <0x19 0x1>;
++		};
++
++		log_leakage: log-leakage@1a {
++			reg = <0x1a 0x1>;
++		};
++
++		gpu_leakage: gpu-leakage@1b {
++			reg = <0x1b 0x1>;
++		};
++
++		otp_cpu_version: cpu-version@1c {
++			reg = <0x1c 0x1>;
++			bits = <3 3>;
++		};
++
++		npu_leakage: npu-leakage@28 {
++			reg = <0x28 0x1>;
++		};
++
++		codec_leakage: codec-leakage@29 {
++			reg = <0x29 0x1>;
++		};
++	};
++
+ 	dmac2: dma-controller@fed10000 {
+ 		compatible = "arm,pl330", "arm,primecell";
+ 		reg = <0x0 0xfed10000 0x0 0x4000>;
diff --git a/target/linux/rockchip/patches-6.1/014-v6.4-arm64-dts-rockchip-fix-button-reset-pin-for-nanopi-r5c.patch b/target/linux/rockchip/patches-6.1/180-arm64-dts-rockchip-fix-button-reset-pin-for-nanopi-r.patch
similarity index 85%
rename from target/linux/rockchip/patches-6.1/014-v6.4-arm64-dts-rockchip-fix-button-reset-pin-for-nanopi-r5c.patch
rename to target/linux/rockchip/patches-6.1/180-arm64-dts-rockchip-fix-button-reset-pin-for-nanopi-r.patch
index 0e59f0275b..d4bde5bfb8 100644
--- a/target/linux/rockchip/patches-6.1/014-v6.4-arm64-dts-rockchip-fix-button-reset-pin-for-nanopi-r5c.patch
+++ b/target/linux/rockchip/patches-6.1/180-arm64-dts-rockchip-fix-button-reset-pin-for-nanopi-r.patch
@@ -1,7 +1,8 @@
-From 5325593377f07de31f7e473a9677a28a04c891f3 Mon Sep 17 00:00:00 2001
+From 14646477019b635150b5f4c9ee5ee45f287498a1 Mon Sep 17 00:00:00 2001
 From: Tianling Shen <cnsztl@gmail.com>
 Date: Thu, 11 May 2023 00:18:50 +0800
-Subject: [PATCH] arm64: dts: rockchip: fix button reset pin for nanopi r5c
+Subject: [PATCH 180/383] arm64: dts: rockchip: fix button reset pin for nanopi
+ r5c
 
 The reset pin was wrongly assigned due to a copy/paste error,
 fix it to match actual gpio pin.
@@ -12,6 +13,7 @@ Fixes: 05620031408a ("arm64: dts: rockchip: Add FriendlyARM NanoPi R5C")
 Signed-off-by: Tianling Shen <cnsztl@gmail.com>
 Link: https://lore.kernel.org/r/20230510161850.4866-1-cnsztl@gmail.com
 Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5c.dts | 2 +-
  arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5s.dts | 1 -
diff --git a/target/linux/rockchip/patches-6.1/181-soc-rockchip-dtpm-use-C99-array-init-syntax.patch b/target/linux/rockchip/patches-6.1/181-soc-rockchip-dtpm-use-C99-array-init-syntax.patch
new file mode 100644
index 0000000000..55b5f9504f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/181-soc-rockchip-dtpm-use-C99-array-init-syntax.patch
@@ -0,0 +1,94 @@
+From 6481be2f2c900518340458510c3411075823d5f9 Mon Sep 17 00:00:00 2001
+From: Randy Dunlap <rdunlap@infradead.org>
+Date: Sun, 30 Apr 2023 19:49:50 -0700
+Subject: [PATCH 181/383] soc: rockchip: dtpm: use C99 array init syntax
+
+Eliminate sparse warnings in soc/rockchip/dtpm.c:
+
+drivers/soc/rockchip/dtpm.c:15:12: sparse: warning: obsolete array initializer, use C99 syntax
+drivers/soc/rockchip/dtpm.c:17:12: sparse: warning: obsolete array initializer, use C99 syntax
+drivers/soc/rockchip/dtpm.c:20:12: sparse: warning: obsolete array initializer, use C99 syntax
+drivers/soc/rockchip/dtpm.c:23:12: sparse: warning: obsolete array initializer, use C99 syntax
+drivers/soc/rockchip/dtpm.c:26:12: sparse: warning: obsolete array initializer, use C99 syntax
+drivers/soc/rockchip/dtpm.c:29:12: sparse: warning: obsolete array initializer, use C99 syntax
+drivers/soc/rockchip/dtpm.c:32:12: sparse: warning: obsolete array initializer, use C99 syntax
+drivers/soc/rockchip/dtpm.c:35:12: sparse: warning: obsolete array initializer, use C99 syntax
+drivers/soc/rockchip/dtpm.c:38:12: sparse: warning: obsolete array initializer, use C99 syntax
+drivers/soc/rockchip/dtpm.c:41:12: sparse: warning: obsolete array initializer, use C99 syntax
+
+Fixes: b9d6c47a2be8 ("rockchip/soc/drivers: Add DTPM description for rk3399")
+Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
+Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
+Cc: Heiko Stuebner <heiko@sntech.de>
+Cc: linux-rockchip@lists.infradead.org
+Acked-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Link: https://lore.kernel.org/r/20230501024950.31518-1-rdunlap@infradead.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/soc/rockchip/dtpm.c | 54 ++++++++++++++++++-------------------
+ 1 file changed, 27 insertions(+), 27 deletions(-)
+
+--- a/drivers/soc/rockchip/dtpm.c
++++ b/drivers/soc/rockchip/dtpm.c
+@@ -12,33 +12,33 @@
+ #include <linux/platform_device.h>
+ 
+ static struct dtpm_node __initdata rk3399_hierarchy[] = {
+-	[0]{ .name = "rk3399",
+-	     .type = DTPM_NODE_VIRTUAL },
+-	[1]{ .name = "package",
+-	     .type = DTPM_NODE_VIRTUAL,
+-	     .parent = &rk3399_hierarchy[0] },
+-	[2]{ .name = "/cpus/cpu@0",
+-	     .type = DTPM_NODE_DT,
+-	     .parent = &rk3399_hierarchy[1] },
+-	[3]{ .name = "/cpus/cpu@1",
+-	     .type = DTPM_NODE_DT,
+-	     .parent = &rk3399_hierarchy[1] },
+-	[4]{ .name = "/cpus/cpu@2",
+-	     .type = DTPM_NODE_DT,
+-	     .parent = &rk3399_hierarchy[1] },
+-	[5]{ .name = "/cpus/cpu@3",
+-	     .type = DTPM_NODE_DT,
+-	     .parent = &rk3399_hierarchy[1] },
+-	[6]{ .name = "/cpus/cpu@100",
+-	     .type = DTPM_NODE_DT,
+-	     .parent = &rk3399_hierarchy[1] },
+-	[7]{ .name = "/cpus/cpu@101",
+-	     .type = DTPM_NODE_DT,
+-	     .parent = &rk3399_hierarchy[1] },
+-	[8]{ .name = "/gpu@ff9a0000",
+-	     .type = DTPM_NODE_DT,
+-	     .parent = &rk3399_hierarchy[1] },
+-	[9]{ /* sentinel */ }
++	[0] = { .name = "rk3399",
++		.type = DTPM_NODE_VIRTUAL },
++	[1] = { .name = "package",
++		.type = DTPM_NODE_VIRTUAL,
++		.parent = &rk3399_hierarchy[0] },
++	[2] = { .name = "/cpus/cpu@0",
++		.type = DTPM_NODE_DT,
++		.parent = &rk3399_hierarchy[1] },
++	[3] = { .name = "/cpus/cpu@1",
++		.type = DTPM_NODE_DT,
++		.parent = &rk3399_hierarchy[1] },
++	[4] = { .name = "/cpus/cpu@2",
++		.type = DTPM_NODE_DT,
++		.parent = &rk3399_hierarchy[1] },
++	[5] = { .name = "/cpus/cpu@3",
++		.type = DTPM_NODE_DT,
++		.parent = &rk3399_hierarchy[1] },
++	[6] = { .name = "/cpus/cpu@100",
++		.type = DTPM_NODE_DT,
++		.parent = &rk3399_hierarchy[1] },
++	[7] = { .name = "/cpus/cpu@101",
++		.type = DTPM_NODE_DT,
++		.parent = &rk3399_hierarchy[1] },
++	[8] = { .name = "/gpu@ff9a0000",
++		.type = DTPM_NODE_DT,
++		.parent = &rk3399_hierarchy[1] },
++	[9] = { /* sentinel */ }
+ };
+ 
+ static struct of_device_id __initdata rockchip_dtpm_match_table[] = {
diff --git a/target/linux/rockchip/patches-6.1/182-soc-rockchip-power-domain-add-rk3588-mem-module-supp.patch b/target/linux/rockchip/patches-6.1/182-soc-rockchip-power-domain-add-rk3588-mem-module-supp.patch
new file mode 100644
index 0000000000..1c81b72efe
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/182-soc-rockchip-power-domain-add-rk3588-mem-module-supp.patch
@@ -0,0 +1,264 @@
+From 016f7ae354e6ea8952cf1c042ef91ec8c989a2a3 Mon Sep 17 00:00:00 2001
+From: Boris Brezillon <boris.brezillon@collabora.com>
+Date: Mon, 3 Apr 2023 21:32:50 +0200
+Subject: [PATCH 182/383] soc: rockchip: power-domain: add rk3588 mem module
+ support
+
+On RK3588 it's also possible to power down the memory used by the
+particular power domains via PMU_MEM_PWR_GATE_SFTCON. This adds
+support for this feature.
+
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com>
+Co-Developed-by: Finley Xiao <finley.xiao@rock-chips.com>
+Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
+Signed-off-by: Boris Brezillon <boris.brezillon@collabora.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230403193250.108693-3-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/soc/rockchip/pm_domains.c | 160 +++++++++++++++++++++++-------
+ 1 file changed, 125 insertions(+), 35 deletions(-)
+
+--- a/drivers/soc/rockchip/pm_domains.c
++++ b/drivers/soc/rockchip/pm_domains.c
+@@ -43,8 +43,10 @@ struct rockchip_domain_info {
+ 	bool active_wakeup;
+ 	int pwr_w_mask;
+ 	int req_w_mask;
++	int mem_status_mask;
+ 	int repair_status_mask;
+ 	u32 pwr_offset;
++	u32 mem_offset;
+ 	u32 req_offset;
+ };
+ 
+@@ -54,6 +56,9 @@ struct rockchip_pmu_info {
+ 	u32 req_offset;
+ 	u32 idle_offset;
+ 	u32 ack_offset;
++	u32 mem_pwr_offset;
++	u32 chain_status_offset;
++	u32 mem_status_offset;
+ 	u32 repair_status_offset;
+ 
+ 	u32 core_pwrcnt_offset;
+@@ -119,13 +124,15 @@ struct rockchip_pmu {
+ 	.active_wakeup = wakeup,			\
+ }
+ 
+-#define DOMAIN_M_O_R(_name, p_offset, pwr, status, r_status, r_offset, req, idle, ack, wakeup)	\
++#define DOMAIN_M_O_R(_name, p_offset, pwr, status, m_offset, m_status, r_status, r_offset, req, idle, ack, wakeup)	\
+ {							\
+ 	.name = _name,					\
+ 	.pwr_offset = p_offset,				\
+ 	.pwr_w_mask = (pwr) << 16,			\
+ 	.pwr_mask = (pwr),				\
+ 	.status_mask = (status),			\
++	.mem_offset = m_offset,				\
++	.mem_status_mask = (m_status),			\
+ 	.repair_status_mask = (r_status),		\
+ 	.req_offset = r_offset,				\
+ 	.req_w_mask = (req) << 16,			\
+@@ -269,8 +276,8 @@ void rockchip_pmu_unblock(void)
+ }
+ EXPORT_SYMBOL_GPL(rockchip_pmu_unblock);
+ 
+-#define DOMAIN_RK3588(name, p_offset, pwr, status, r_status, r_offset, req, idle, wakeup)	\
+-	DOMAIN_M_O_R(name, p_offset, pwr, status, r_status, r_offset, req, idle, idle, wakeup)
++#define DOMAIN_RK3588(name, p_offset, pwr, status, m_offset, m_status, r_status, r_offset, req, idle, wakeup)	\
++	DOMAIN_M_O_R(name, p_offset, pwr, status, m_offset, m_status, r_status, r_offset, req, idle, idle, wakeup)
+ 
+ static bool rockchip_pmu_domain_is_idle(struct rockchip_pm_domain *pd)
+ {
+@@ -408,17 +415,92 @@ static bool rockchip_pmu_domain_is_on(st
+ 	return !(val & pd->info->status_mask);
+ }
+ 
++static bool rockchip_pmu_domain_is_mem_on(struct rockchip_pm_domain *pd)
++{
++	struct rockchip_pmu *pmu = pd->pmu;
++	unsigned int val;
++
++	regmap_read(pmu->regmap,
++		    pmu->info->mem_status_offset + pd->info->mem_offset, &val);
++
++	/* 1'b0: power on, 1'b1: power off */
++	return !(val & pd->info->mem_status_mask);
++}
++
++static bool rockchip_pmu_domain_is_chain_on(struct rockchip_pm_domain *pd)
++{
++	struct rockchip_pmu *pmu = pd->pmu;
++	unsigned int val;
++
++	regmap_read(pmu->regmap,
++		    pmu->info->chain_status_offset + pd->info->mem_offset, &val);
++
++	/* 1'b1: power on, 1'b0: power off */
++	return val & pd->info->mem_status_mask;
++}
++
++static int rockchip_pmu_domain_mem_reset(struct rockchip_pm_domain *pd)
++{
++	struct rockchip_pmu *pmu = pd->pmu;
++	struct generic_pm_domain *genpd = &pd->genpd;
++	bool is_on;
++	int ret = 0;
++
++	ret = readx_poll_timeout_atomic(rockchip_pmu_domain_is_chain_on, pd, is_on,
++					is_on == true, 0, 10000);
++	if (ret) {
++		dev_err(pmu->dev,
++			"failed to get chain status '%s', target_on=1, val=%d\n",
++			genpd->name, is_on);
++		goto error;
++	}
++
++	udelay(20);
++
++	regmap_write(pmu->regmap, pmu->info->mem_pwr_offset + pd->info->pwr_offset,
++		     (pd->info->pwr_mask | pd->info->pwr_w_mask));
++	wmb();
++
++	ret = readx_poll_timeout_atomic(rockchip_pmu_domain_is_mem_on, pd, is_on,
++					is_on == false, 0, 10000);
++	if (ret) {
++		dev_err(pmu->dev,
++			"failed to get mem status '%s', target_on=0, val=%d\n",
++			genpd->name, is_on);
++		goto error;
++	}
++
++	regmap_write(pmu->regmap, pmu->info->mem_pwr_offset + pd->info->pwr_offset,
++		     pd->info->pwr_w_mask);
++	wmb();
++
++	ret = readx_poll_timeout_atomic(rockchip_pmu_domain_is_mem_on, pd, is_on,
++					is_on == true, 0, 10000);
++	if (ret) {
++		dev_err(pmu->dev,
++			"failed to get mem status '%s', target_on=1, val=%d\n",
++			genpd->name, is_on);
++	}
++
++error:
++	return ret;
++}
++
+ static void rockchip_do_pmu_set_power_domain(struct rockchip_pm_domain *pd,
+ 					     bool on)
+ {
+ 	struct rockchip_pmu *pmu = pd->pmu;
+ 	struct generic_pm_domain *genpd = &pd->genpd;
+ 	u32 pd_pwr_offset = pd->info->pwr_offset;
+-	bool is_on;
++	bool is_on, is_mem_on = false;
+ 
+ 	if (pd->info->pwr_mask == 0)
+ 		return;
+-	else if (pd->info->pwr_w_mask)
++
++	if (on && pd->info->mem_status_mask)
++		is_mem_on = rockchip_pmu_domain_is_mem_on(pd);
++
++	if (pd->info->pwr_w_mask)
+ 		regmap_write(pmu->regmap, pmu->info->pwr_offset + pd_pwr_offset,
+ 			     on ? pd->info->pwr_w_mask :
+ 			     (pd->info->pwr_mask | pd->info->pwr_w_mask));
+@@ -428,6 +510,9 @@ static void rockchip_do_pmu_set_power_do
+ 
+ 	wmb();
+ 
++	if (is_mem_on && rockchip_pmu_domain_mem_reset(pd))
++		return;
++
+ 	if (readx_poll_timeout_atomic(rockchip_pmu_domain_is_on, pd, is_on,
+ 				      is_on == on, 0, 10000)) {
+ 		dev_err(pmu->dev,
+@@ -645,7 +730,9 @@ static int rockchip_pm_add_one_domain(st
+ 	pd->genpd.flags = GENPD_FLAG_PM_CLK;
+ 	if (pd_info->active_wakeup)
+ 		pd->genpd.flags |= GENPD_FLAG_ACTIVE_WAKEUP;
+-	pm_genpd_init(&pd->genpd, NULL, !rockchip_pmu_domain_is_on(pd));
++	pm_genpd_init(&pd->genpd, NULL,
++		      !rockchip_pmu_domain_is_on(pd) ||
++		      (pd->info->mem_status_mask && !rockchip_pmu_domain_is_mem_on(pd)));
+ 
+ 	pmu->genpd_data.domains[id] = &pd->genpd;
+ 	return 0;
+@@ -1024,35 +1111,35 @@ static const struct rockchip_domain_info
+ };
+ 
+ static const struct rockchip_domain_info rk3588_pm_domains[] = {
+-	[RK3588_PD_GPU]		= DOMAIN_RK3588("gpu",     0x0, BIT(0),  0,       BIT(1),  0x0, BIT(0),  BIT(0),  false),
+-	[RK3588_PD_NPU]		= DOMAIN_RK3588("npu",     0x0, BIT(1),  BIT(1),  0,       0x0, 0,       0,       false),
+-	[RK3588_PD_VCODEC]	= DOMAIN_RK3588("vcodec",  0x0, BIT(2),  BIT(2),  0,       0x0, 0,       0,       false),
+-	[RK3588_PD_NPUTOP]	= DOMAIN_RK3588("nputop",  0x0, BIT(3),  0,       BIT(2),  0x0, BIT(1),  BIT(1),  false),
+-	[RK3588_PD_NPU1]	= DOMAIN_RK3588("npu1",    0x0, BIT(4),  0,       BIT(3),  0x0, BIT(2),  BIT(2),  false),
+-	[RK3588_PD_NPU2]	= DOMAIN_RK3588("npu2",    0x0, BIT(5),  0,       BIT(4),  0x0, BIT(3),  BIT(3),  false),
+-	[RK3588_PD_VENC0]	= DOMAIN_RK3588("venc0",   0x0, BIT(6),  0,       BIT(5),  0x0, BIT(4),  BIT(4),  false),
+-	[RK3588_PD_VENC1]	= DOMAIN_RK3588("venc1",   0x0, BIT(7),  0,       BIT(6),  0x0, BIT(5),  BIT(5),  false),
+-	[RK3588_PD_RKVDEC0]	= DOMAIN_RK3588("rkvdec0", 0x0, BIT(8),  0,       BIT(7),  0x0, BIT(6),  BIT(6),  false),
+-	[RK3588_PD_RKVDEC1]	= DOMAIN_RK3588("rkvdec1", 0x0, BIT(9),  0,       BIT(8),  0x0, BIT(7),  BIT(7),  false),
+-	[RK3588_PD_VDPU]	= DOMAIN_RK3588("vdpu",    0x0, BIT(10), 0,       BIT(9),  0x0, BIT(8),  BIT(8),  false),
+-	[RK3588_PD_RGA30]	= DOMAIN_RK3588("rga30",   0x0, BIT(11), 0,       BIT(10), 0x0, 0,       0,       false),
+-	[RK3588_PD_AV1]		= DOMAIN_RK3588("av1",     0x0, BIT(12), 0,       BIT(11), 0x0, BIT(9),  BIT(9),  false),
+-	[RK3588_PD_VI]		= DOMAIN_RK3588("vi",      0x0, BIT(13), 0,       BIT(12), 0x0, BIT(10), BIT(10), false),
+-	[RK3588_PD_FEC]		= DOMAIN_RK3588("fec",     0x0, BIT(14), 0,       BIT(13), 0x0, 0,       0,       false),
+-	[RK3588_PD_ISP1]	= DOMAIN_RK3588("isp1",    0x0, BIT(15), 0,       BIT(14), 0x0, BIT(11), BIT(11), false),
+-	[RK3588_PD_RGA31]	= DOMAIN_RK3588("rga31",   0x4, BIT(0),  0,       BIT(15), 0x0, BIT(12), BIT(12), false),
+-	[RK3588_PD_VOP]		= DOMAIN_RK3588("vop",     0x4, BIT(1),  0,       BIT(16), 0x0, BIT(13) | BIT(14), BIT(13) | BIT(14), false),
+-	[RK3588_PD_VO0]		= DOMAIN_RK3588("vo0",     0x4, BIT(2),  0,       BIT(17), 0x0, BIT(15), BIT(15), false),
+-	[RK3588_PD_VO1]		= DOMAIN_RK3588("vo1",     0x4, BIT(3),  0,       BIT(18), 0x4, BIT(0),  BIT(16), false),
+-	[RK3588_PD_AUDIO]	= DOMAIN_RK3588("audio",   0x4, BIT(4),  0,       BIT(19), 0x4, BIT(1),  BIT(17), false),
+-	[RK3588_PD_PHP]		= DOMAIN_RK3588("php",     0x4, BIT(5),  0,       BIT(20), 0x4, BIT(5),  BIT(21), false),
+-	[RK3588_PD_GMAC]	= DOMAIN_RK3588("gmac",    0x4, BIT(6),  0,       BIT(21), 0x0, 0,       0,       false),
+-	[RK3588_PD_PCIE]	= DOMAIN_RK3588("pcie",    0x4, BIT(7),  0,       BIT(22), 0x0, 0,       0,       true),
+-	[RK3588_PD_NVM]		= DOMAIN_RK3588("nvm",     0x4, BIT(8),  BIT(24), 0,       0x4, BIT(2),  BIT(18), false),
+-	[RK3588_PD_NVM0]	= DOMAIN_RK3588("nvm0",    0x4, BIT(9),  0,       BIT(23), 0x0, 0,       0,       false),
+-	[RK3588_PD_SDIO]	= DOMAIN_RK3588("sdio",    0x4, BIT(10), 0,       BIT(24), 0x4, BIT(3),  BIT(19), false),
+-	[RK3588_PD_USB]		= DOMAIN_RK3588("usb",     0x4, BIT(11), 0,       BIT(25), 0x4, BIT(4),  BIT(20), true),
+-	[RK3588_PD_SDMMC]	= DOMAIN_RK3588("sdmmc",   0x4, BIT(13), 0,       BIT(26), 0x0, 0,       0,       false),
++	[RK3588_PD_GPU]		= DOMAIN_RK3588("gpu",     0x0, BIT(0),  0,       0x0, 0,       BIT(1),  0x0, BIT(0),  BIT(0),  false),
++	[RK3588_PD_NPU]		= DOMAIN_RK3588("npu",     0x0, BIT(1),  BIT(1),  0x0, 0,       0,       0x0, 0,       0,       false),
++	[RK3588_PD_VCODEC]	= DOMAIN_RK3588("vcodec",  0x0, BIT(2),  BIT(2),  0x0, 0,       0,       0x0, 0,       0,       false),
++	[RK3588_PD_NPUTOP]	= DOMAIN_RK3588("nputop",  0x0, BIT(3),  0,       0x0, BIT(11), BIT(2),  0x0, BIT(1),  BIT(1),  false),
++	[RK3588_PD_NPU1]	= DOMAIN_RK3588("npu1",    0x0, BIT(4),  0,       0x0, BIT(12), BIT(3),  0x0, BIT(2),  BIT(2),  false),
++	[RK3588_PD_NPU2]	= DOMAIN_RK3588("npu2",    0x0, BIT(5),  0,       0x0, BIT(13), BIT(4),  0x0, BIT(3),  BIT(3),  false),
++	[RK3588_PD_VENC0]	= DOMAIN_RK3588("venc0",   0x0, BIT(6),  0,       0x0, BIT(14), BIT(5),  0x0, BIT(4),  BIT(4),  false),
++	[RK3588_PD_VENC1]	= DOMAIN_RK3588("venc1",   0x0, BIT(7),  0,       0x0, BIT(15), BIT(6),  0x0, BIT(5),  BIT(5),  false),
++	[RK3588_PD_RKVDEC0]	= DOMAIN_RK3588("rkvdec0", 0x0, BIT(8),  0,       0x0, BIT(16), BIT(7),  0x0, BIT(6),  BIT(6),  false),
++	[RK3588_PD_RKVDEC1]	= DOMAIN_RK3588("rkvdec1", 0x0, BIT(9),  0,       0x0, BIT(17), BIT(8),  0x0, BIT(7),  BIT(7),  false),
++	[RK3588_PD_VDPU]	= DOMAIN_RK3588("vdpu",    0x0, BIT(10), 0,       0x0, BIT(18), BIT(9),  0x0, BIT(8),  BIT(8),  false),
++	[RK3588_PD_RGA30]	= DOMAIN_RK3588("rga30",   0x0, BIT(11), 0,       0x0, BIT(19), BIT(10), 0x0, 0,       0,       false),
++	[RK3588_PD_AV1]		= DOMAIN_RK3588("av1",     0x0, BIT(12), 0,       0x0, BIT(20), BIT(11), 0x0, BIT(9),  BIT(9),  false),
++	[RK3588_PD_VI]		= DOMAIN_RK3588("vi",      0x0, BIT(13), 0,       0x0, BIT(21), BIT(12), 0x0, BIT(10), BIT(10), false),
++	[RK3588_PD_FEC]		= DOMAIN_RK3588("fec",     0x0, BIT(14), 0,       0x0, BIT(22), BIT(13), 0x0, 0,       0,       false),
++	[RK3588_PD_ISP1]	= DOMAIN_RK3588("isp1",    0x0, BIT(15), 0,       0x0, BIT(23), BIT(14), 0x0, BIT(11), BIT(11), false),
++	[RK3588_PD_RGA31]	= DOMAIN_RK3588("rga31",   0x4, BIT(0),  0,       0x0, BIT(24), BIT(15), 0x0, BIT(12), BIT(12), false),
++	[RK3588_PD_VOP]		= DOMAIN_RK3588("vop",     0x4, BIT(1),  0,       0x0, BIT(25), BIT(16), 0x0, BIT(13) | BIT(14), BIT(13) | BIT(14), false),
++	[RK3588_PD_VO0]		= DOMAIN_RK3588("vo0",     0x4, BIT(2),  0,       0x0, BIT(26), BIT(17), 0x0, BIT(15), BIT(15), false),
++	[RK3588_PD_VO1]		= DOMAIN_RK3588("vo1",     0x4, BIT(3),  0,       0x0, BIT(27), BIT(18), 0x4, BIT(0),  BIT(16), false),
++	[RK3588_PD_AUDIO]	= DOMAIN_RK3588("audio",   0x4, BIT(4),  0,       0x0, BIT(28), BIT(19), 0x4, BIT(1),  BIT(17), false),
++	[RK3588_PD_PHP]		= DOMAIN_RK3588("php",     0x4, BIT(5),  0,       0x0, BIT(29), BIT(20), 0x4, BIT(5),  BIT(21), false),
++	[RK3588_PD_GMAC]	= DOMAIN_RK3588("gmac",    0x4, BIT(6),  0,       0x0, BIT(30), BIT(21), 0x0, 0,       0,       false),
++	[RK3588_PD_PCIE]	= DOMAIN_RK3588("pcie",    0x4, BIT(7),  0,       0x0, BIT(31), BIT(22), 0x0, 0,       0,       true),
++	[RK3588_PD_NVM]		= DOMAIN_RK3588("nvm",     0x4, BIT(8),  BIT(24), 0x4, 0,       0,       0x4, BIT(2),  BIT(18), false),
++	[RK3588_PD_NVM0]	= DOMAIN_RK3588("nvm0",    0x4, BIT(9),  0,       0x4, BIT(1),  BIT(23), 0x0, 0,       0,       false),
++	[RK3588_PD_SDIO]	= DOMAIN_RK3588("sdio",    0x4, BIT(10), 0,       0x4, BIT(2),  BIT(24), 0x4, BIT(3),  BIT(19), false),
++	[RK3588_PD_USB]		= DOMAIN_RK3588("usb",     0x4, BIT(11), 0,       0x4, BIT(3),  BIT(25), 0x4, BIT(4),  BIT(20), true),
++	[RK3588_PD_SDMMC]	= DOMAIN_RK3588("sdmmc",   0x4, BIT(13), 0,       0x4, BIT(5),  BIT(26), 0x0, 0,       0,       false),
+ };
+ 
+ static const struct rockchip_pmu_info px30_pmu = {
+@@ -1207,6 +1294,9 @@ static const struct rockchip_pmu_info rk
+ 	.req_offset = 0x10c,
+ 	.idle_offset = 0x120,
+ 	.ack_offset = 0x118,
++	.mem_pwr_offset = 0x1a0,
++	.chain_status_offset = 0x1f0,
++	.mem_status_offset = 0x1f8,
+ 	.repair_status_offset = 0x290,
+ 
+ 	.num_domains = ARRAY_SIZE(rk3588_pm_domains),
diff --git a/target/linux/rockchip/patches-6.1/183-irqchip-gic-v3-Add-Rockchip-3588001-erratum-workarou.patch b/target/linux/rockchip/patches-6.1/183-irqchip-gic-v3-Add-Rockchip-3588001-erratum-workarou.patch
new file mode 100644
index 0000000000..af58b3cc81
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/183-irqchip-gic-v3-Add-Rockchip-3588001-erratum-workarou.patch
@@ -0,0 +1,154 @@
+From ec84008b72b43ad8ed6b1208d98bf22d945fcc27 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 18 Apr 2023 16:21:08 +0200
+Subject: [PATCH 183/383] irqchip/gic-v3: Add Rockchip 3588001 erratum
+ workaround
+
+Rockchip RK3588/RK3588s GIC600 integration does not support the
+sharability feature. Rockchip assigned Erratum ID #3588001 for this
+issue.
+
+Note, that the 0x0201743b ID is not Rockchip specific and thus
+there is an extra of_machine_is_compatible() check.
+
+The flags are named FORCE_NON_SHAREABLE to be vendor agnostic,
+since apparently similar integration design errors exist in other
+platforms and they can reuse the same flag.
+
+Co-developed-by: XiaoDong Huang <derrick.huang@rock-chips.com>
+Signed-off-by: XiaoDong Huang <derrick.huang@rock-chips.com>
+Co-developed-by: Kever Yang <kever.yang@rock-chips.com>
+Signed-off-by: Kever Yang <kever.yang@rock-chips.com>
+Co-developed-by: Lucas Tanure <lucas.tanure@collabora.com>
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marc Zyngier <maz@kernel.org>
+Link: https://lore.kernel.org/r/20230418142109.49762-2-sebastian.reichel@collabora.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/arm64/silicon-errata.rst |  3 +++
+ arch/arm64/Kconfig                     | 10 ++++++++
+ drivers/irqchip/irq-gic-v3-its.c       | 35 ++++++++++++++++++++++++++
+ 3 files changed, 48 insertions(+)
+
+--- a/Documentation/arm64/silicon-errata.rst
++++ b/Documentation/arm64/silicon-errata.rst
+@@ -217,6 +217,9 @@ stable kernels.
+ +----------------+-----------------+-----------------+-----------------------------+
+ | Qualcomm Tech. | Kryo4xx Gold    | N/A             | ARM64_ERRATUM_1286807       |
+ +----------------+-----------------+-----------------+-----------------------------+
+++----------------+-----------------+-----------------+-----------------------------+
++| Rockchip       | RK3588          | #3588001        | ROCKCHIP_ERRATUM_3588001    |
+++----------------+-----------------+-----------------+-----------------------------+
+ 
+ +----------------+-----------------+-----------------+-----------------------------+
+ | Fujitsu        | A64FX           | E#010001        | FUJITSU_ERRATUM_010001      |
+--- a/arch/arm64/Kconfig
++++ b/arch/arm64/Kconfig
+@@ -1156,6 +1156,16 @@ config NVIDIA_CARMEL_CNP_ERRATUM
+ 
+ 	  If unsure, say Y.
+ 
++config ROCKCHIP_ERRATUM_3588001
++	bool "Rockchip 3588001: GIC600 can not support shareability attributes"
++	default y
++	help
++	  The Rockchip RK3588 GIC600 SoC integration does not support ACE/ACE-lite.
++	  This means, that its sharability feature may not be used, even though it
++	  is supported by the IP itself.
++
++	  If unsure, say Y.
++
+ config SOCIONEXT_SYNQUACER_PREITS
+ 	bool "Socionext Synquacer: Workaround for GICv3 pre-ITS"
+ 	default y
+--- a/drivers/irqchip/irq-gic-v3-its.c
++++ b/drivers/irqchip/irq-gic-v3-its.c
+@@ -42,9 +42,11 @@
+ #define ITS_FLAGS_CMDQ_NEEDS_FLUSHING		(1ULL << 0)
+ #define ITS_FLAGS_WORKAROUND_CAVIUM_22375	(1ULL << 1)
+ #define ITS_FLAGS_WORKAROUND_CAVIUM_23144	(1ULL << 2)
++#define ITS_FLAGS_FORCE_NON_SHAREABLE		(1ULL << 3)
+ 
+ #define RDIST_FLAGS_PROPBASE_NEEDS_FLUSHING	(1 << 0)
+ #define RDIST_FLAGS_RD_TABLES_PREALLOCATED	(1 << 1)
++#define RDIST_FLAGS_FORCE_NON_SHAREABLE		(1 << 2)
+ 
+ #define RD_LOCAL_LPI_ENABLED                    BIT(0)
+ #define RD_LOCAL_PENDTABLE_PREALLOCATED         BIT(1)
+@@ -2384,6 +2386,9 @@ retry_baser:
+ 	its_write_baser(its, baser, val);
+ 	tmp = baser->val;
+ 
++	if (its->flags & ITS_FLAGS_FORCE_NON_SHAREABLE)
++		tmp &= ~GITS_BASER_SHAREABILITY_MASK;
++
+ 	if ((val ^ tmp) & GITS_BASER_SHAREABILITY_MASK) {
+ 		/*
+ 		 * Shareability didn't stick. Just use
+@@ -3121,6 +3126,9 @@ static void its_cpu_init_lpis(void)
+ 	gicr_write_propbaser(val, rbase + GICR_PROPBASER);
+ 	tmp = gicr_read_propbaser(rbase + GICR_PROPBASER);
+ 
++	if (gic_rdists->flags & RDIST_FLAGS_FORCE_NON_SHAREABLE)
++		tmp &= ~GICR_PROPBASER_SHAREABILITY_MASK;
++
+ 	if ((tmp ^ val) & GICR_PROPBASER_SHAREABILITY_MASK) {
+ 		if (!(tmp & GICR_PROPBASER_SHAREABILITY_MASK)) {
+ 			/*
+@@ -3145,6 +3153,9 @@ static void its_cpu_init_lpis(void)
+ 	gicr_write_pendbaser(val, rbase + GICR_PENDBASER);
+ 	tmp = gicr_read_pendbaser(rbase + GICR_PENDBASER);
+ 
++	if (gic_rdists->flags & RDIST_FLAGS_FORCE_NON_SHAREABLE)
++		tmp &= ~GICR_PENDBASER_SHAREABILITY_MASK;
++
+ 	if (!(tmp & GICR_PENDBASER_SHAREABILITY_MASK)) {
+ 		/*
+ 		 * The HW reports non-shareable, we must remove the
+@@ -4727,6 +4738,19 @@ static bool __maybe_unused its_enable_qu
+ 	return true;
+ }
+ 
++static bool __maybe_unused its_enable_rk3588001(void *data)
++{
++	struct its_node *its = data;
++
++	if (!of_machine_is_compatible("rockchip,rk3588"))
++		return false;
++
++	its->flags |= ITS_FLAGS_FORCE_NON_SHAREABLE;
++	gic_rdists->flags |= RDIST_FLAGS_FORCE_NON_SHAREABLE;
++
++	return true;
++}
++
+ static const struct gic_quirk its_quirks[] = {
+ #ifdef CONFIG_CAVIUM_ERRATUM_22375
+ 	{
+@@ -4773,6 +4797,14 @@ static const struct gic_quirk its_quirks
+ 		.init	= its_enable_quirk_hip07_161600802,
+ 	},
+ #endif
++#ifdef CONFIG_ROCKCHIP_ERRATUM_3588001
++	{
++		.desc   = "ITS: Rockchip erratum RK3588001",
++		.iidr   = 0x0201743b,
++		.mask   = 0xffffffff,
++		.init   = its_enable_rk3588001,
++	},
++#endif
+ 	{
+ 	}
+ };
+@@ -5112,6 +5144,9 @@ static int __init its_probe_one(struct r
+ 	gits_write_cbaser(baser, its->base + GITS_CBASER);
+ 	tmp = gits_read_cbaser(its->base + GITS_CBASER);
+ 
++	if (its->flags & ITS_FLAGS_FORCE_NON_SHAREABLE)
++		tmp &= ~GITS_CBASER_SHAREABILITY_MASK;
++
+ 	if ((tmp ^ baser) & GITS_CBASER_SHAREABILITY_MASK) {
+ 		if (!(tmp & GITS_CBASER_SHAREABILITY_MASK)) {
+ 			/*
diff --git a/target/linux/rockchip/patches-6.1/184-dt-bindings-arm-rockchip-Add-pmu-compatible-for-rv11.patch b/target/linux/rockchip/patches-6.1/184-dt-bindings-arm-rockchip-Add-pmu-compatible-for-rv11.patch
new file mode 100644
index 0000000000..eaa023c332
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/184-dt-bindings-arm-rockchip-Add-pmu-compatible-for-rv11.patch
@@ -0,0 +1,35 @@
+From 4cbcb4ea61bc30275a4cf2154feaccf2d695f1e0 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@edgeble.ai>
+Date: Tue, 29 Nov 2022 13:24:17 +0530
+Subject: [PATCH 184/383] dt-bindings: arm: rockchip: Add pmu compatible for
+ rv1126
+
+Add PMU compatible string for rockchip rv1126.
+
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Jagan Teki <jagan@edgeble.ai>
+Link: https://lore.kernel.org/r/20221129075424.189655-2-jagan@edgeble.ai
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip/pmu.yaml | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip/pmu.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip/pmu.yaml
+@@ -27,6 +27,7 @@ select:
+           - rockchip,rk3399-pmu
+           - rockchip,rk3568-pmu
+           - rockchip,rk3588-pmu
++          - rockchip,rv1126-pmu
+ 
+   required:
+     - compatible
+@@ -43,6 +44,7 @@ properties:
+           - rockchip,rk3399-pmu
+           - rockchip,rk3568-pmu
+           - rockchip,rk3588-pmu
++          - rockchip,rv1126-pmu
+       - const: syscon
+       - const: simple-mfd
+ 
diff --git a/target/linux/rockchip/patches-6.1/185-dt-bindings-clock-add-rk3588-cru-bindings.patch b/target/linux/rockchip/patches-6.1/185-dt-bindings-clock-add-rk3588-cru-bindings.patch
new file mode 100644
index 0000000000..c87b7c2985
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/185-dt-bindings-clock-add-rk3588-cru-bindings.patch
@@ -0,0 +1,93 @@
+From 3330b6c24f398ae6cae0ab1ccd63ccb2bed23734 Mon Sep 17 00:00:00 2001
+From: Elaine Zhang <zhangqing@rock-chips.com>
+Date: Tue, 18 Oct 2022 17:14:01 +0200
+Subject: [PATCH 185/383] dt-bindings: clock: add rk3588 cru bindings
+
+Document the device tree bindings of the rockchip rk3588 SoC
+clock and reset unit.
+
+Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221018151407.63395-4-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/clock/rockchip,rk3588-cru.yaml   | 71 +++++++++++++++++++
+ 1 file changed, 71 insertions(+)
+ create mode 100644 Documentation/devicetree/bindings/clock/rockchip,rk3588-cru.yaml
+
+--- /dev/null
++++ b/Documentation/devicetree/bindings/clock/rockchip,rk3588-cru.yaml
+@@ -0,0 +1,71 @@
++# SPDX-License-Identifier: GPL-2.0-only OR BSD-2-Clause
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/clock/rockchip,rk3588-cru.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip rk3588 Family Clock and Reset Control Module
++
++maintainers:
++  - Elaine Zhang <zhangqing@rock-chips.com>
++  - Heiko Stuebner <heiko@sntech.de>
++
++description: |
++  The RK3588 clock controller generates the clock and also implements a reset
++  controller for SoC peripherals. For example it provides SCLK_UART2 and
++  PCLK_UART2, as well as SRST_P_UART2 and SRST_S_UART2 for the second UART
++  module.
++  Each clock is assigned an identifier and client nodes can use this identifier
++  to specify the clock which they consume. All available clock and reset IDs
++  are defined as preprocessor macros in dt-binding headers.
++
++properties:
++  compatible:
++    enum:
++      - rockchip,rk3588-cru
++
++  reg:
++    maxItems: 1
++
++  "#clock-cells":
++    const: 1
++
++  "#reset-cells":
++    const: 1
++
++  clocks:
++    minItems: 2
++    maxItems: 2
++
++  clock-names:
++    items:
++      - const: xin24m
++      - const: xin32k
++
++  assigned-clocks: true
++
++  assigned-clock-rates: true
++
++  rockchip,grf:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description: >
++      phandle to the syscon managing the "general register files". It is used
++      for GRF muxes, if missing any muxes present in the GRF will not be
++      available.
++
++required:
++  - compatible
++  - reg
++  - "#clock-cells"
++  - "#reset-cells"
++
++additionalProperties: false
++
++examples:
++  - |
++    cru: clock-controller@fd7c0000 {
++      compatible = "rockchip,rk3588-cru";
++      reg = <0xfd7c0000 0x5c000>;
++      #clock-cells = <1>;
++      #reset-cells = <1>;
++    };
diff --git a/target/linux/rockchip/patches-6.1/186-dt-bindings-display-rockchip-convert-rockchip-lvds.t.patch b/target/linux/rockchip/patches-6.1/186-dt-bindings-display-rockchip-convert-rockchip-lvds.t.patch
new file mode 100644
index 0000000000..c539a8fc96
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/186-dt-bindings-display-rockchip-convert-rockchip-lvds.t.patch
@@ -0,0 +1,292 @@
+From be15b9e321ec6bb0f63d8b3cf7afd6f6fd8f6aee Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:22:14 +0100
+Subject: [PATCH 186/383] dt-bindings: display: rockchip: convert
+ rockchip-lvds.txt to YAML
+
+Convert rockchip-lvds.txt to YAML.
+
+Changed:
+  Add power-domains property.
+  Requirements between PX30 and RK3288
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://patchwork.freedesktop.org/patch/msgid/67771143-fd83-383d-41b2-68e8707134e8@gmail.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../display/rockchip/rockchip,lvds.yaml       | 170 ++++++++++++++++++
+ .../display/rockchip/rockchip-lvds.txt        |  92 ----------
+ 2 files changed, 170 insertions(+), 92 deletions(-)
+ create mode 100644 Documentation/devicetree/bindings/display/rockchip/rockchip,lvds.yaml
+ delete mode 100644 Documentation/devicetree/bindings/display/rockchip/rockchip-lvds.txt
+
+--- /dev/null
++++ b/Documentation/devicetree/bindings/display/rockchip/rockchip,lvds.yaml
+@@ -0,0 +1,170 @@
++# SPDX-License-Identifier: GPL-2.0
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/display/rockchip/rockchip,lvds.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip low-voltage differential signal (LVDS) transmitter
++
++maintainers:
++  - Sandy Huang <hjc@rock-chips.com>
++  - Heiko Stuebner <heiko@sntech.de>
++
++properties:
++  compatible:
++    enum:
++      - rockchip,px30-lvds
++      - rockchip,rk3288-lvds
++
++  reg:
++    maxItems: 1
++
++  clocks:
++    maxItems: 1
++
++  clock-names:
++    const: pclk_lvds
++
++  avdd1v0-supply:
++    description: 1.0V analog power.
++
++  avdd1v8-supply:
++    description: 1.8V analog power.
++
++  avdd3v3-supply:
++    description: 3.3V analog power.
++
++  rockchip,grf:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description: Phandle to the general register files syscon.
++
++  rockchip,output:
++    $ref: /schemas/types.yaml#/definitions/string
++    enum: [rgb, lvds, duallvds]
++    description: This describes the output interface.
++
++  phys:
++    maxItems: 1
++
++  phy-names:
++    const: dphy
++
++  pinctrl-names:
++    const: lcdc
++
++  pinctrl-0: true
++
++  power-domains:
++    maxItems: 1
++
++  ports:
++    $ref: /schemas/graph.yaml#/properties/ports
++
++    properties:
++      port@0:
++        $ref: /schemas/graph.yaml#/properties/port
++        description:
++          Video port 0 for the VOP input.
++          The remote endpoint maybe vopb or vopl.
++
++      port@1:
++        $ref: /schemas/graph.yaml#/properties/port
++        description:
++          Video port 1 for either a panel or subsequent encoder.
++
++    required:
++      - port@0
++      - port@1
++
++required:
++  - compatible
++  - rockchip,grf
++  - rockchip,output
++  - ports
++
++allOf:
++  - if:
++      properties:
++        compatible:
++          contains:
++            const: rockchip,px30-lvds
++
++    then:
++      properties:
++        reg: false
++        clocks: false
++        clock-names: false
++        avdd1v0-supply: false
++        avdd1v8-supply: false
++        avdd3v3-supply: false
++
++      required:
++        - phys
++        - phy-names
++
++  - if:
++      properties:
++        compatible:
++          contains:
++            const: rockchip,rk3288-lvds
++
++    then:
++      properties:
++        phys: false
++        phy-names: false
++
++      required:
++        - reg
++        - clocks
++        - clock-names
++        - avdd1v0-supply
++        - avdd1v8-supply
++        - avdd3v3-supply
++
++additionalProperties: false
++
++examples:
++  - |
++    #include <dt-bindings/clock/rk3288-cru.h>
++
++    lvds: lvds@ff96c000 {
++      compatible = "rockchip,rk3288-lvds";
++      reg = <0xff96c000 0x4000>;
++      clocks = <&cru PCLK_LVDS_PHY>;
++      clock-names = "pclk_lvds";
++      avdd1v0-supply = <&vdd10_lcd>;
++      avdd1v8-supply = <&vcc18_lcd>;
++      avdd3v3-supply = <&vcca_33>;
++      pinctrl-names = "lcdc";
++      pinctrl-0 = <&lcdc_ctl>;
++      rockchip,grf = <&grf>;
++      rockchip,output = "rgb";
++
++      ports {
++        #address-cells = <1>;
++        #size-cells = <0>;
++
++        lvds_in: port@0 {
++          reg = <0>;
++          #address-cells = <1>;
++          #size-cells = <0>;
++
++          lvds_in_vopb: endpoint@0 {
++            reg = <0>;
++            remote-endpoint = <&vopb_out_lvds>;
++          };
++          lvds_in_vopl: endpoint@1 {
++            reg = <1>;
++            remote-endpoint = <&vopl_out_lvds>;
++          };
++        };
++
++        lvds_out: port@1 {
++          reg = <1>;
++
++          lvds_out_panel: endpoint {
++            remote-endpoint = <&panel_in_lvds>;
++          };
++        };
++      };
++    };
+--- a/Documentation/devicetree/bindings/display/rockchip/rockchip-lvds.txt
++++ /dev/null
+@@ -1,92 +0,0 @@
+-Rockchip RK3288 LVDS interface
+-================================
+-
+-Required properties:
+-- compatible: matching the soc type, one of
+-	- "rockchip,rk3288-lvds";
+-	- "rockchip,px30-lvds";
+-
+-- reg: physical base address of the controller and length
+-	of memory mapped region.
+-- clocks: must include clock specifiers corresponding to entries in the
+-	clock-names property.
+-- clock-names: must contain "pclk_lvds"
+-
+-- avdd1v0-supply: regulator phandle for 1.0V analog power
+-- avdd1v8-supply: regulator phandle for 1.8V analog power
+-- avdd3v3-supply: regulator phandle for 3.3V analog power
+-
+-- rockchip,grf: phandle to the general register files syscon
+-- rockchip,output: "rgb", "lvds" or "duallvds", This describes the output interface
+-
+-- phys: LVDS/DSI DPHY (px30 only)
+-- phy-names: name of the PHY, must be "dphy" (px30 only)
+-
+-Optional properties:
+-- pinctrl-names: must contain a "lcdc" entry.
+-- pinctrl-0: pin control group to be used for this controller.
+-
+-Required nodes:
+-
+-The lvds has two video ports as described by
+-	Documentation/devicetree/bindings/media/video-interfaces.txt
+-Their connections are modeled using the OF graph bindings specified in
+-	Documentation/devicetree/bindings/graph.txt.
+-
+-- video port 0 for the VOP input, the remote endpoint maybe vopb or vopl
+-- video port 1 for either a panel or subsequent encoder
+-
+-Example:
+-
+-lvds_panel: lvds-panel {
+-	compatible = "auo,b101ean01";
+-	enable-gpios = <&gpio7 21 GPIO_ACTIVE_HIGH>;
+-	data-mapping = "jeida-24";
+-
+-	ports {
+-		panel_in_lvds: endpoint {
+-			remote-endpoint = <&lvds_out_panel>;
+-		};
+-	};
+-};
+-
+-For Rockchip RK3288:
+-
+-	lvds: lvds@ff96c000 {
+-		compatible = "rockchip,rk3288-lvds";
+-		rockchip,grf = <&grf>;
+-		reg = <0xff96c000 0x4000>;
+-		clocks = <&cru PCLK_LVDS_PHY>;
+-		clock-names = "pclk_lvds";
+-		pinctrl-names = "lcdc";
+-		pinctrl-0 = <&lcdc_ctl>;
+-		avdd1v0-supply = <&vdd10_lcd>;
+-		avdd1v8-supply = <&vcc18_lcd>;
+-		avdd3v3-supply = <&vcca_33>;
+-		rockchip,output = "rgb";
+-		ports {
+-			#address-cells = <1>;
+-			#size-cells = <0>;
+-
+-			lvds_in: port@0 {
+-				reg = <0>;
+-
+-				lvds_in_vopb: endpoint@0 {
+-					reg = <0>;
+-					remote-endpoint = <&vopb_out_lvds>;
+-				};
+-				lvds_in_vopl: endpoint@1 {
+-					reg = <1>;
+-					remote-endpoint = <&vopl_out_lvds>;
+-				};
+-			};
+-
+-			lvds_out: port@1 {
+-				reg = <1>;
+-
+-				lvds_out_panel: endpoint {
+-					remote-endpoint = <&panel_in_lvds>;
+-				};
+-			};
+-		};
+-	};
diff --git a/target/linux/rockchip/patches-6.1/187-dt-bindings-display-rockchip-convert-dw_mipi_dsi_roc.patch b/target/linux/rockchip/patches-6.1/187-dt-bindings-display-rockchip-convert-dw_mipi_dsi_roc.patch
new file mode 100644
index 0000000000..4bd7bea0d8
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/187-dt-bindings-display-rockchip-convert-dw_mipi_dsi_roc.patch
@@ -0,0 +1,290 @@
+From e268e840d93b48076d717a92993f33705dac736f Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:26:28 +0100
+Subject: [PATCH 187/383] dt-bindings: display: rockchip: convert
+ dw_mipi_dsi_rockchip.txt to yaml
+
+Convert dw_mipi_dsi_rockchip.txt to yaml.
+
+Changed:
+  file name
+  requirements
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://patchwork.freedesktop.org/patch/msgid/d6dc8453-4807-0a5d-15bf-6dcf80dcd0fe@gmail.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../display/rockchip/dw_mipi_dsi_rockchip.txt |  94 ----------
+ .../rockchip/rockchip,dw-mipi-dsi.yaml        | 166 ++++++++++++++++++
+ 2 files changed, 166 insertions(+), 94 deletions(-)
+ delete mode 100644 Documentation/devicetree/bindings/display/rockchip/dw_mipi_dsi_rockchip.txt
+ create mode 100644 Documentation/devicetree/bindings/display/rockchip/rockchip,dw-mipi-dsi.yaml
+
+--- a/Documentation/devicetree/bindings/display/rockchip/dw_mipi_dsi_rockchip.txt
++++ /dev/null
+@@ -1,94 +0,0 @@
+-Rockchip specific extensions to the Synopsys Designware MIPI DSI
+-================================
+-
+-Required properties:
+-- #address-cells: Should be <1>.
+-- #size-cells: Should be <0>.
+-- compatible: one of
+-	"rockchip,px30-mipi-dsi", "snps,dw-mipi-dsi"
+-	"rockchip,rk3288-mipi-dsi", "snps,dw-mipi-dsi"
+-	"rockchip,rk3399-mipi-dsi", "snps,dw-mipi-dsi"
+-	"rockchip,rk3568-mipi-dsi", "snps,dw-mipi-dsi"
+-- reg: Represent the physical address range of the controller.
+-- interrupts: Represent the controller's interrupt to the CPU(s).
+-- clocks, clock-names: Phandles to the controller's pll reference
+-  clock(ref) when using an internal dphy and APB clock(pclk).
+-  For RK3399, a phy config clock (phy_cfg) and a grf clock(grf)
+-  are required. As described in [1].
+-- rockchip,grf: this soc should set GRF regs to mux vopl/vopb.
+-- ports: contain a port node with endpoint definitions as defined in [2].
+-  For vopb,set the reg = <0> and set the reg = <1> for vopl.
+-- video port 0 for the VOP input, the remote endpoint maybe vopb or vopl
+-- video port 1 for either a panel or subsequent encoder
+-
+-Optional properties:
+-- phys: from general PHY binding: the phandle for the PHY device.
+-- phy-names: Should be "dphy" if phys references an external phy.
+-- #phy-cells: Defined when used as ISP phy, should be 0.
+-- power-domains: a phandle to mipi dsi power domain node.
+-- resets: list of phandle + reset specifier pairs, as described in [3].
+-- reset-names: string reset name, must be "apb".
+-
+-[1] Documentation/devicetree/bindings/clock/clock-bindings.txt
+-[2] Documentation/devicetree/bindings/media/video-interfaces.txt
+-[3] Documentation/devicetree/bindings/reset/reset.txt
+-
+-Example:
+-	mipi_dsi: mipi@ff960000 {
+-		#address-cells = <1>;
+-		#size-cells = <0>;
+-		compatible = "rockchip,rk3288-mipi-dsi", "snps,dw-mipi-dsi";
+-		reg = <0xff960000 0x4000>;
+-		interrupts = <GIC_SPI 83 IRQ_TYPE_LEVEL_HIGH>;
+-		clocks = <&cru SCLK_MIPI_24M>, <&cru PCLK_MIPI_DSI0>;
+-		clock-names = "ref", "pclk";
+-		resets = <&cru SRST_MIPIDSI0>;
+-		reset-names = "apb";
+-		rockchip,grf = <&grf>;
+-
+-		ports {
+-			#address-cells = <1>;
+-			#size-cells = <0>;
+-
+-			mipi_in: port@0 {
+-				reg = <0>;
+-				#address-cells = <1>;
+-				#size-cells = <0>;
+-
+-				mipi_in_vopb: endpoint@0 {
+-					reg = <0>;
+-					remote-endpoint = <&vopb_out_mipi>;
+-				};
+-				mipi_in_vopl: endpoint@1 {
+-					reg = <1>;
+-					remote-endpoint = <&vopl_out_mipi>;
+-				};
+-			};
+-
+-			mipi_out: port@1 {
+-				reg = <1>;
+-				#address-cells = <1>;
+-				#size-cells = <0>;
+-
+-				mipi_out_panel: endpoint {
+-					remote-endpoint = <&panel_in_mipi>;
+-				};
+-			};
+-		};
+-
+-		panel {
+-			compatible ="boe,tv080wum-nl0";
+-			reg = <0>;
+-
+-			enable-gpios = <&gpio7 3 GPIO_ACTIVE_HIGH>;
+-			pinctrl-names = "default";
+-			pinctrl-0 = <&lcd_en>;
+-			backlight = <&backlight>;
+-
+-			port {
+-				panel_in_mipi: endpoint {
+-					remote-endpoint = <&mipi_out_panel>;
+-				};
+-			};
+-		};
+-	};
+--- /dev/null
++++ b/Documentation/devicetree/bindings/display/rockchip/rockchip,dw-mipi-dsi.yaml
+@@ -0,0 +1,166 @@
++# SPDX-License-Identifier: GPL-2.0
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/display/rockchip/rockchip,dw-mipi-dsi.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip specific extensions to the Synopsys Designware MIPI DSI
++
++maintainers:
++  - Sandy Huang <hjc@rock-chips.com>
++  - Heiko Stuebner <heiko@sntech.de>
++
++properties:
++  compatible:
++    items:
++      - enum:
++          - rockchip,px30-mipi-dsi
++          - rockchip,rk3288-mipi-dsi
++          - rockchip,rk3399-mipi-dsi
++          - rockchip,rk3568-mipi-dsi
++      - const: snps,dw-mipi-dsi
++
++  interrupts:
++    maxItems: 1
++
++  clocks:
++    minItems: 1
++    maxItems: 4
++
++  clock-names:
++    oneOf:
++      - minItems: 2
++        items:
++          - const: ref
++          - const: pclk
++          - const: phy_cfg
++          - const: grf
++      - const: pclk
++
++  rockchip,grf:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description:
++      This SoC uses GRF regs to switch between vopl/vopb.
++
++  phys:
++    maxItems: 1
++
++  phy-names:
++    const: dphy
++
++  "#phy-cells":
++    const: 0
++    description:
++      Defined when in use as ISP phy.
++
++  power-domains:
++    maxItems: 1
++
++  "#address-cells":
++    const: 1
++
++  "#size-cells":
++    const: 0
++
++required:
++  - compatible
++  - clocks
++  - clock-names
++  - rockchip,grf
++
++allOf:
++  - $ref: /schemas/display/bridge/snps,dw-mipi-dsi.yaml#
++  - if:
++      properties:
++        compatible:
++          contains:
++            enum:
++              - rockchip,px30-mipi-dsi
++              - rockchip,rk3568-mipi-dsi
++
++    then:
++      properties:
++        clocks:
++          maxItems: 1
++
++        clock-names:
++          maxItems: 1
++
++      required:
++        - phys
++        - phy-names
++
++  - if:
++      properties:
++        compatible:
++          contains:
++            const: rockchip,rk3288-mipi-dsi
++
++    then:
++      properties:
++        clocks:
++          maxItems: 2
++
++        clock-names:
++          maxItems: 2
++
++  - if:
++      properties:
++        compatible:
++          contains:
++            const: rockchip,rk3399-mipi-dsi
++
++    then:
++      properties:
++        clocks:
++          minItems: 4
++
++        clock-names:
++          minItems: 4
++
++unevaluatedProperties: false
++
++examples:
++  - |
++    #include <dt-bindings/clock/rk3288-cru.h>
++    #include <dt-bindings/interrupt-controller/arm-gic.h>
++    #include <dt-bindings/interrupt-controller/irq.h>
++
++    mipi_dsi: dsi@ff960000 {
++      compatible = "rockchip,rk3288-mipi-dsi", "snps,dw-mipi-dsi";
++      reg = <0xff960000 0x4000>;
++      interrupts = <GIC_SPI 83 IRQ_TYPE_LEVEL_HIGH>;
++      clocks = <&cru SCLK_MIPIDSI_24M>, <&cru PCLK_MIPI_DSI0>;
++      clock-names = "ref", "pclk";
++      resets = <&cru SRST_MIPIDSI0>;
++      reset-names = "apb";
++      rockchip,grf = <&grf>;
++
++      ports {
++        #address-cells = <1>;
++        #size-cells = <0>;
++
++        mipi_in: port@0 {
++          reg = <0>;
++          #address-cells = <1>;
++          #size-cells = <0>;
++
++          mipi_in_vopb: endpoint@0 {
++            reg = <0>;
++            remote-endpoint = <&vopb_out_mipi>;
++          };
++          mipi_in_vopl: endpoint@1 {
++            reg = <1>;
++            remote-endpoint = <&vopl_out_mipi>;
++          };
++        };
++
++        mipi_out: port@1 {
++          reg = <1>;
++
++          mipi_out_panel: endpoint {
++            remote-endpoint = <&panel_in_mipi>;
++          };
++        };
++      };
++    };
diff --git a/target/linux/rockchip/patches-6.1/188-dt-bindings-display-rockchip-convert-analogix_dp-roc.patch b/target/linux/rockchip/patches-6.1/188-dt-bindings-display-rockchip-convert-analogix_dp-roc.patch
new file mode 100644
index 0000000000..f56e527ac6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/188-dt-bindings-display-rockchip-convert-analogix_dp-roc.patch
@@ -0,0 +1,231 @@
+From d3900411b446201a96e2063b4f0afbfda8a875c9 Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:27:35 +0100
+Subject: [PATCH 188/383] dt-bindings: display: rockchip: convert
+ analogix_dp-rockchip.txt to yaml
+
+Convert analogix_dp-rockchip.txt to yaml.
+
+Changed:
+  Add power-domains property
+  File name
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://patchwork.freedesktop.org/patch/msgid/88a5a9e3-9bc8-5966-22ec-5bdb1fa7a5b1@gmail.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../display/rockchip/analogix_dp-rockchip.txt |  98 -----------------
+ .../rockchip/rockchip,analogix-dp.yaml        | 103 ++++++++++++++++++
+ 2 files changed, 103 insertions(+), 98 deletions(-)
+ delete mode 100644 Documentation/devicetree/bindings/display/rockchip/analogix_dp-rockchip.txt
+ create mode 100644 Documentation/devicetree/bindings/display/rockchip/rockchip,analogix-dp.yaml
+
+--- a/Documentation/devicetree/bindings/display/rockchip/analogix_dp-rockchip.txt
++++ /dev/null
+@@ -1,98 +0,0 @@
+-Rockchip RK3288 specific extensions to the Analogix Display Port
+-================================
+-
+-Required properties:
+-- compatible: "rockchip,rk3288-dp",
+-	      "rockchip,rk3399-edp";
+-
+-- reg: physical base address of the controller and length
+-
+-- clocks: from common clock binding: handle to dp clock.
+-	  of memory mapped region.
+-
+-- clock-names: from common clock binding:
+-	       Required elements: "dp" "pclk"
+-
+-- resets: Must contain an entry for each entry in reset-names.
+-	  See ../reset/reset.txt for details.
+-
+-- pinctrl-names: Names corresponding to the chip hotplug pinctrl states.
+-- pinctrl-0: pin-control mode. should be <&edp_hpd>
+-
+-- reset-names: Must include the name "dp"
+-
+-- rockchip,grf: this soc should set GRF regs, so need get grf here.
+-
+-- ports: there are 2 port nodes with endpoint definitions as defined in
+-  Documentation/devicetree/bindings/media/video-interfaces.txt.
+-    Port 0: contained 2 endpoints, connecting to the output of vop.
+-    Port 1: contained 1 endpoint, connecting to the input of panel.
+-
+-Optional property for different chips:
+-- clocks: from common clock binding: handle to grf_vio clock.
+-
+-- clock-names: from common clock binding:
+-	       Required elements: "grf"
+-
+-For the below properties, please refer to Analogix DP binding document:
+- * Documentation/devicetree/bindings/display/bridge/analogix_dp.txt
+-- phys (required)
+-- phy-names (required)
+-- hpd-gpios (optional)
+-- force-hpd (optional)
+--------------------------------------------------------------------------------
+-
+-Example:
+-	dp-controller: dp@ff970000 {
+-		compatible = "rockchip,rk3288-dp";
+-		reg = <0xff970000 0x4000>;
+-		interrupts = <GIC_SPI 98 IRQ_TYPE_LEVEL_HIGH>;
+-		clocks = <&cru SCLK_EDP>, <&cru PCLK_EDP_CTRL>;
+-		clock-names = "dp", "pclk";
+-		phys = <&dp_phy>;
+-		phy-names = "dp";
+-
+-		rockchip,grf = <&grf>;
+-		resets = <&cru 111>;
+-		reset-names = "dp";
+-
+-		pinctrl-names = "default";
+-		pinctrl-0 = <&edp_hpd>;
+-
+-
+-		ports {
+-			#address-cells = <1>;
+-			#size-cells = <0>;
+-			edp_in: port@0 {
+-				reg = <0>;
+-				#address-cells = <1>;
+-				#size-cells = <0>;
+-				edp_in_vopb: endpoint@0 {
+-					reg = <0>;
+-					remote-endpoint = <&vopb_out_edp>;
+-				};
+-				edp_in_vopl: endpoint@1 {
+-					reg = <1>;
+-					remote-endpoint = <&vopl_out_edp>;
+-				};
+-			};
+-
+-			edp_out: port@1 {
+-				reg = <1>;
+-				#address-cells = <1>;
+-				#size-cells = <0>;
+-				edp_out_panel: endpoint {
+-					reg = <0>;
+-					remote-endpoint = <&panel_in_edp>
+-				};
+-			};
+-		};
+-	};
+-
+-	pinctrl {
+-		edp {
+-			edp_hpd: edp-hpd {
+-				rockchip,pins = <7 11 RK_FUNC_2 &pcfg_pull_none>;
+-			};
+-		};
+-	};
+--- /dev/null
++++ b/Documentation/devicetree/bindings/display/rockchip/rockchip,analogix-dp.yaml
+@@ -0,0 +1,103 @@
++# SPDX-License-Identifier: GPL-2.0
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/display/rockchip/rockchip,analogix-dp.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip specific extensions to the Analogix Display Port
++
++maintainers:
++  - Sandy Huang <hjc@rock-chips.com>
++  - Heiko Stuebner <heiko@sntech.de>
++
++properties:
++  compatible:
++    enum:
++      - rockchip,rk3288-dp
++      - rockchip,rk3399-edp
++
++  clocks:
++    minItems: 2
++    maxItems: 3
++
++  clock-names:
++    minItems: 2
++    items:
++      - const: dp
++      - const: pclk
++      - const: grf
++
++  power-domains:
++    maxItems: 1
++
++  resets:
++    maxItems: 1
++
++  reset-names:
++    const: dp
++
++  rockchip,grf:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description:
++      This SoC makes use of GRF regs.
++
++required:
++  - compatible
++  - clocks
++  - clock-names
++  - resets
++  - reset-names
++  - rockchip,grf
++
++allOf:
++  - $ref: /schemas/display/bridge/analogix,dp.yaml#
++
++unevaluatedProperties: false
++
++examples:
++  - |
++    #include <dt-bindings/clock/rk3288-cru.h>
++    #include <dt-bindings/interrupt-controller/arm-gic.h>
++    #include <dt-bindings/interrupt-controller/irq.h>
++    dp@ff970000 {
++      compatible = "rockchip,rk3288-dp";
++      reg = <0xff970000 0x4000>;
++      interrupts = <GIC_SPI 98 IRQ_TYPE_LEVEL_HIGH>;
++      clocks = <&cru SCLK_EDP>, <&cru PCLK_EDP_CTRL>;
++      clock-names = "dp", "pclk";
++      phys = <&dp_phy>;
++      phy-names = "dp";
++      resets = <&cru 111>;
++      reset-names = "dp";
++      rockchip,grf = <&grf>;
++      pinctrl-0 = <&edp_hpd>;
++      pinctrl-names = "default";
++
++      ports {
++        #address-cells = <1>;
++        #size-cells = <0>;
++
++        edp_in: port@0 {
++          reg = <0>;
++          #address-cells = <1>;
++          #size-cells = <0>;
++
++          edp_in_vopb: endpoint@0 {
++            reg = <0>;
++            remote-endpoint = <&vopb_out_edp>;
++          };
++          edp_in_vopl: endpoint@1 {
++            reg = <1>;
++            remote-endpoint = <&vopl_out_edp>;
++          };
++        };
++
++        edp_out: port@1 {
++          reg = <1>;
++
++          edp_out_panel: endpoint {
++            remote-endpoint = <&panel_in_edp>;
++          };
++        };
++      };
++    };
diff --git a/target/linux/rockchip/patches-6.1/189-dt-bindings-display-dsi-controller-move-clock-master.patch b/target/linux/rockchip/patches-6.1/189-dt-bindings-display-dsi-controller-move-clock-master.patch
new file mode 100644
index 0000000000..b91a759f19
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/189-dt-bindings-display-dsi-controller-move-clock-master.patch
@@ -0,0 +1,52 @@
+From b18322b37517cf18c412e8372edc73a20deae5d4 Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:24:51 +0100
+Subject: [PATCH 189/383] dt-bindings: display: dsi-controller: move
+ clock-master property
+
+The clock-master property is used for the controller and not in the panel,
+so move it there.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://patchwork.freedesktop.org/patch/msgid/1c3b18ad-350f-e862-de98-a775e11e132c@gmail.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/display/dsi-controller.yaml       | 18 +++++++++---------
+ 1 file changed, 9 insertions(+), 9 deletions(-)
+
+--- a/Documentation/devicetree/bindings/display/dsi-controller.yaml
++++ b/Documentation/devicetree/bindings/display/dsi-controller.yaml
+@@ -30,6 +30,15 @@ properties:
+   $nodename:
+     pattern: "^dsi(@.*)?$"
+ 
++  clock-master:
++    type: boolean
++    description:
++      Should be enabled if the host is being used in conjunction with
++      another DSI host to drive the same peripheral. Hardware supporting
++      such a configuration generally requires the data on both the busses
++      to be driven by the same clock. Only the DSI host instance
++      controlling this clock should contain this property.
++
+   "#address-cells":
+     const: 1
+ 
+@@ -52,15 +61,6 @@ patternProperties:
+           case the reg property can take multiple entries, one for each virtual
+           channel that the peripheral responds to.
+ 
+-      clock-master:
+-        type: boolean
+-        description:
+-          Should be enabled if the host is being used in conjunction with
+-          another DSI host to drive the same peripheral. Hardware supporting
+-          such a configuration generally requires the data on both the busses
+-          to be driven by the same clock. Only the DSI host instance
+-          controlling this clock should contain this property.
+-
+       enforce-video-mode:
+         type: boolean
+         description:
diff --git a/target/linux/rockchip/patches-6.1/190-dt-bindings-display-bridge-snps-dw-mipi-dsi-fix-cloc.patch b/target/linux/rockchip/patches-6.1/190-dt-bindings-display-bridge-snps-dw-mipi-dsi-fix-cloc.patch
new file mode 100644
index 0000000000..eb97fc0284
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/190-dt-bindings-display-bridge-snps-dw-mipi-dsi-fix-cloc.patch
@@ -0,0 +1,42 @@
+From 325090fe4cd0232cdf0e0bb3fe2bfb16646439cf Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:25:44 +0100
+Subject: [PATCH 190/383] dt-bindings: display: bridge: snps,dw-mipi-dsi: fix
+ clock properties
+
+Fix clock properties from the common snps,dw-mipi-dsi.yaml file,
+as they don't match with what is used on the SoCs.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://patchwork.freedesktop.org/patch/msgid/78b4548e-dfe1-d0c6-f96c-5d40f28f8b2e@gmail.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../display/bridge/snps,dw-mipi-dsi.yaml         | 16 +++-------------
+ 1 file changed, 3 insertions(+), 13 deletions(-)
+
+--- a/Documentation/devicetree/bindings/display/bridge/snps,dw-mipi-dsi.yaml
++++ b/Documentation/devicetree/bindings/display/bridge/snps,dw-mipi-dsi.yaml
+@@ -26,19 +26,9 @@ properties:
+   reg:
+     maxItems: 1
+ 
+-  clocks:
+-    items:
+-      - description: Module clock
+-      - description: DSI bus clock for either AHB and APB
+-      - description: Pixel clock for the DPI/RGB input
+-    minItems: 2
++  clocks: true
+ 
+-  clock-names:
+-    items:
+-      - const: ref
+-      - const: pclk
+-      - const: px_clk
+-    minItems: 2
++  clock-names: true
+ 
+   resets:
+     maxItems: 1
diff --git a/target/linux/rockchip/patches-6.1/191-dt-bindings-display-bridge-convert-analogix_dp.txt-t.patch b/target/linux/rockchip/patches-6.1/191-dt-bindings-display-bridge-convert-analogix_dp.txt-t.patch
new file mode 100644
index 0000000000..d9e0e27895
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/191-dt-bindings-display-bridge-convert-analogix_dp.txt-t.patch
@@ -0,0 +1,155 @@
+From da32f359f8dbeb93b410f1d2d77dd88fd20ea297 Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:26:57 +0100
+Subject: [PATCH 191/383] dt-bindings: display: bridge: convert analogix_dp.txt
+ to yaml
+
+Convert analogix_dp.txt to yaml for use as common document.
+
+Changed:
+  Relexed requirements
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://patchwork.freedesktop.org/patch/msgid/489e7bd3-fa26-885f-4104-8b0b29aa4f2b@gmail.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/display/bridge/analogix,dp.yaml  | 63 +++++++++++++++++++
+ .../bindings/display/bridge/analogix_dp.txt   | 51 ---------------
+ .../bindings/display/exynos/exynos_dp.txt     |  2 +-
+ 3 files changed, 64 insertions(+), 52 deletions(-)
+ create mode 100644 Documentation/devicetree/bindings/display/bridge/analogix,dp.yaml
+ delete mode 100644 Documentation/devicetree/bindings/display/bridge/analogix_dp.txt
+
+--- /dev/null
++++ b/Documentation/devicetree/bindings/display/bridge/analogix,dp.yaml
+@@ -0,0 +1,63 @@
++# SPDX-License-Identifier: GPL-2.0
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/display/bridge/analogix,dp.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Analogix Display Port bridge
++
++maintainers:
++  - Rob Herring <robh@kernel.org>
++
++properties:
++  reg:
++    maxItems: 1
++
++  interrupts:
++    maxItems: 1
++
++  clocks: true
++
++  clock-names: true
++
++  phys: true
++
++  phy-names:
++    const: dp
++
++  force-hpd:
++    description:
++      Indicate driver need force hpd when hpd detect failed, this
++      is used for some eDP screen which don not have a hpd signal.
++
++  hpd-gpios:
++    description:
++      Hotplug detect GPIO.
++      Indicates which GPIO should be used for hotplug detection
++
++  ports:
++    $ref: /schemas/graph.yaml#/properties/ports
++
++    properties:
++      port@0:
++        $ref: /schemas/graph.yaml#/properties/port
++        description:
++          Input node to receive pixel data.
++
++      port@1:
++        $ref: /schemas/graph.yaml#/properties/port
++        description:
++          Port node with one endpoint connected to a dp-connector node.
++
++    required:
++      - port@0
++      - port@1
++
++required:
++  - reg
++  - interrupts
++  - clock-names
++  - clocks
++  - ports
++
++additionalProperties: true
+--- a/Documentation/devicetree/bindings/display/bridge/analogix_dp.txt
++++ /dev/null
+@@ -1,51 +0,0 @@
+-Analogix Display Port bridge bindings
+-
+-Required properties for dp-controller:
+-	-compatible:
+-		platform specific such as:
+-		 * "samsung,exynos5-dp"
+-		 * "rockchip,rk3288-dp"
+-		 * "rockchip,rk3399-edp"
+-	-reg:
+-		physical base address of the controller and length
+-		of memory mapped region.
+-	-interrupts:
+-		interrupt combiner values.
+-	-clocks:
+-		from common clock binding: handle to dp clock.
+-	-clock-names:
+-		from common clock binding: Shall be "dp".
+-	-phys:
+-		from general PHY binding: the phandle for the PHY device.
+-	-phy-names:
+-		from general PHY binding: Should be "dp".
+-
+-Optional properties for dp-controller:
+-	-force-hpd:
+-		Indicate driver need force hpd when hpd detect failed, this
+-		is used for some eDP screen which don't have hpd signal.
+-	-hpd-gpios:
+-		Hotplug detect GPIO.
+-		Indicates which GPIO should be used for hotplug detection
+-	-port@[X]: SoC specific port nodes with endpoint definitions as defined
+-		in Documentation/devicetree/bindings/media/video-interfaces.txt,
+-		please refer to the SoC specific binding document:
+-		* Documentation/devicetree/bindings/display/exynos/exynos_dp.txt
+-		* Documentation/devicetree/bindings/display/rockchip/analogix_dp-rockchip.txt
+-
+-[1]: Documentation/devicetree/bindings/media/video-interfaces.txt
+--------------------------------------------------------------------------------
+-
+-Example:
+-
+-	dp-controller {
+-		compatible = "samsung,exynos5-dp";
+-		reg = <0x145b0000 0x10000>;
+-		interrupts = <10 3>;
+-		interrupt-parent = <&combiner>;
+-		clocks = <&clock 342>;
+-		clock-names = "dp";
+-
+-		phys = <&dp_phy>;
+-		phy-names = "dp";
+-	};
+--- a/Documentation/devicetree/bindings/display/exynos/exynos_dp.txt
++++ b/Documentation/devicetree/bindings/display/exynos/exynos_dp.txt
+@@ -50,7 +50,7 @@ Optional properties for dp-controller:
+ 		Documentation/devicetree/bindings/display/panel/display-timing.txt
+ 
+ For the below properties, please refer to Analogix DP binding document:
+- * Documentation/devicetree/bindings/display/bridge/analogix_dp.txt
++ * Documentation/devicetree/bindings/display/bridge/analogix,dp.yaml
+ 	-phys (required)
+ 	-phy-names (required)
+ 	-hpd-gpios (optional)
diff --git a/target/linux/rockchip/patches-6.1/192-dt-bindings-mfd-Add-rk806-binding.patch b/target/linux/rockchip/patches-6.1/192-dt-bindings-mfd-Add-rk806-binding.patch
new file mode 100644
index 0000000000..9a56a5e6dc
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/192-dt-bindings-mfd-Add-rk806-binding.patch
@@ -0,0 +1,426 @@
+From 1f9b12b19fab56acdba865f511ee5ee40970a39e Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 4 May 2023 19:36:11 +0200
+Subject: [PATCH 192/383] dt-bindings: mfd: Add rk806 binding
+
+Add DT binding document for Rockchip's RK806 PMIC.
+
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230504173618.142075-8-sebastian.reichel@collabora.com
+Signed-off-by: Lee Jones <lee@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/mfd/rockchip,rk806.yaml          | 406 ++++++++++++++++++
+ 1 file changed, 406 insertions(+)
+ create mode 100644 Documentation/devicetree/bindings/mfd/rockchip,rk806.yaml
+
+--- /dev/null
++++ b/Documentation/devicetree/bindings/mfd/rockchip,rk806.yaml
+@@ -0,0 +1,406 @@
++# SPDX-License-Identifier: GPL-2.0-only OR BSD-2-Clause
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/mfd/rockchip,rk806.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: RK806 Power Management Integrated Circuit
++
++maintainers:
++  - Sebastian Reichel <sebastian.reichel@collabora.com>
++
++description:
++  Rockchip RK806 series PMIC. This device consists of an spi or
++  i2c controlled MFD that includes multiple switchable regulators.
++
++properties:
++  compatible:
++    enum:
++      - rockchip,rk806
++
++  reg:
++    maxItems: 1
++
++  interrupts:
++    maxItems: 1
++
++  gpio-controller: true
++
++  '#gpio-cells':
++    const: 2
++
++  vcc1-supply:
++    description:
++      The input supply for dcdc-reg1.
++
++  vcc2-supply:
++    description:
++      The input supply for dcdc-reg2.
++
++  vcc3-supply:
++    description:
++      The input supply for dcdc-reg3.
++
++  vcc4-supply:
++    description:
++      The input supply for dcdc-reg4.
++
++  vcc5-supply:
++    description:
++      The input supply for dcdc-reg5.
++
++  vcc6-supply:
++    description:
++      The input supply for dcdc-reg6.
++
++  vcc7-supply:
++    description:
++      The input supply for dcdc-reg7.
++
++  vcc8-supply:
++    description:
++      The input supply for dcdc-reg8.
++
++  vcc9-supply:
++    description:
++      The input supply for dcdc-reg9.
++
++  vcc10-supply:
++    description:
++      The input supply for dcdc-reg10.
++
++  vcc11-supply:
++    description:
++      The input supply for pldo-reg1, pldo-reg2 and pldo-reg3.
++
++  vcc12-supply:
++    description:
++      The input supply for pldo-reg4 and pldo-reg5.
++
++  vcc13-supply:
++    description:
++      The input supply for nldo-reg1, nldo-reg2 and nldo-reg3.
++
++  vcc14-supply:
++    description:
++      The input supply for nldo-reg4 and nldo-reg5.
++
++  vcca-supply:
++    description:
++      The input supply for pldo-reg6.
++
++  regulators:
++    type: object
++    additionalProperties: false
++    patternProperties:
++      "^(dcdc-reg([1-9]|10)|pldo-reg[1-6]|nldo-reg[1-5])$":
++        type: object
++        $ref: /schemas/regulator/regulator.yaml#
++        unevaluatedProperties: false
++
++patternProperties:
++  '-pins$':
++    type: object
++    additionalProperties: false
++    $ref: /schemas/pinctrl/pinmux-node.yaml
++
++    properties:
++      function:
++        enum: [pin_fun0, pin_fun1, pin_fun2, pin_fun3, pin_fun4, pin_fun5]
++
++      pins:
++        $ref: /schemas/types.yaml#/definitions/string
++        enum: [gpio_pwrctrl1, gpio_pwrctrl2, gpio_pwrctrl3]
++
++allOf:
++  - $ref: /schemas/spi/spi-peripheral-props.yaml
++
++required:
++  - compatible
++  - reg
++  - interrupts
++
++unevaluatedProperties: false
++
++examples:
++  - |
++    #include <dt-bindings/pinctrl/rockchip.h>
++    #include <dt-bindings/interrupt-controller/irq.h>
++    #include <dt-bindings/gpio/gpio.h>
++    spi {
++        #address-cells = <1>;
++        #size-cells = <0>;
++
++        pmic@0 {
++            compatible = "rockchip,rk806";
++            reg = <0x0>;
++
++            interrupts = <7 IRQ_TYPE_LEVEL_LOW>;
++
++            vcc1-supply = <&vcc5v0_sys>;
++            vcc2-supply = <&vcc5v0_sys>;
++            vcc3-supply = <&vcc5v0_sys>;
++            vcc4-supply = <&vcc5v0_sys>;
++            vcc5-supply = <&vcc5v0_sys>;
++            vcc6-supply = <&vcc5v0_sys>;
++            vcc7-supply = <&vcc5v0_sys>;
++            vcc8-supply = <&vcc5v0_sys>;
++            vcc9-supply = <&vcc5v0_sys>;
++            vcc10-supply = <&vcc5v0_sys>;
++            vcc11-supply = <&vcc_2v0_pldo_s3>;
++            vcc12-supply = <&vcc5v0_sys>;
++            vcc13-supply = <&vcc5v0_sys>;
++            vcc14-supply = <&vcc_1v1_nldo_s3>;
++            vcca-supply = <&vcc5v0_sys>;
++
++            regulators {
++                vdd_gpu_s0: dcdc-reg1 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <550000>;
++                    regulator-max-microvolt = <950000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vdd_gpu_s0";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++
++                vdd_npu_s0: dcdc-reg2 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <550000>;
++                    regulator-max-microvolt = <950000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vdd_npu_s0";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++
++                vdd_log_s0: dcdc-reg3 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <750000>;
++                    regulator-max-microvolt = <750000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vdd_log_s0";
++                    regulator-state-mem {
++                        regulator-on-in-suspend;
++                        regulator-suspend-microvolt = <750000>;
++                    };
++                };
++
++                vdd_vdenc_s0: dcdc-reg4 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <550000>;
++                    regulator-max-microvolt = <950000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vdd_vdenc_s0";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++
++                vdd_gpu_mem_s0: dcdc-reg5 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <675000>;
++                    regulator-max-microvolt = <950000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vdd_gpu_mem_s0";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++
++                vdd_npu_mem_s0: dcdc-reg6 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <675000>;
++                    regulator-max-microvolt = <950000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vdd_npu_mem_s0";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++
++                vcc_2v0_pldo_s3: dcdc-reg7 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <2000000>;
++                    regulator-max-microvolt = <2000000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vdd_2v0_pldo_s3";
++                    regulator-state-mem {
++                        regulator-on-in-suspend;
++                        regulator-suspend-microvolt = <2000000>;
++                    };
++                };
++
++                vdd_vdenc_mem_s0: dcdc-reg8 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <675000>;
++                    regulator-max-microvolt = <950000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vdd_vdenc_mem_s0";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++
++                vdd2_ddr_s3: dcdc-reg9 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-name = "vdd2_ddr_s3";
++                    regulator-state-mem {
++                        regulator-on-in-suspend;
++                    };
++                };
++
++                vcc_1v1_nldo_s3: dcdc-reg10 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <1100000>;
++                    regulator-max-microvolt = <1100000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vcc_1v1_nldo_s3";
++                    regulator-state-mem {
++                        regulator-on-in-suspend;
++                        regulator-suspend-microvolt = <1100000>;
++                    };
++                };
++
++                avcc_1v8_s0: pldo-reg1 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <1800000>;
++                    regulator-max-microvolt = <1800000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "avcc_1v8_s0";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++
++                vdd1_1v8_ddr_s3: pldo-reg2 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <1800000>;
++                    regulator-max-microvolt = <1800000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vdd1_1v8_ddr_s3";
++                    regulator-state-mem {
++                        regulator-on-in-suspend;
++                        regulator-suspend-microvolt = <1800000>;
++                    };
++                };
++
++                vcc_1v8_s3: pldo-reg3 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <1800000>;
++                    regulator-max-microvolt = <1800000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vcc_1v8_s3";
++                    regulator-state-mem {
++                        regulator-on-in-suspend;
++                        regulator-suspend-microvolt = <1800000>;
++                    };
++                };
++
++                vcc_3v3_s0: pldo-reg4 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <3300000>;
++                    regulator-max-microvolt = <3300000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vcc_3v3_s0";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++
++                vccio_sd_s0: pldo-reg5 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <1800000>;
++                    regulator-max-microvolt = <3300000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vccio_sd_s0";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++
++                master_pldo6_s3: pldo-reg6 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <1800000>;
++                    regulator-max-microvolt = <1800000>;
++                    regulator-name = "master_pldo6_s3";
++                    regulator-state-mem {
++                        regulator-on-in-suspend;
++                        regulator-suspend-microvolt = <1800000>;
++                    };
++                };
++
++                vdd_0v75_s3: nldo-reg1 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <750000>;
++                    regulator-max-microvolt = <750000>;
++                    regulator-ramp-delay = <12500>;
++                    regulator-name = "vdd_0v75_s3";
++                    regulator-state-mem {
++                        regulator-on-in-suspend;
++                        regulator-suspend-microvolt = <750000>;
++                    };
++                };
++
++                vdd2l_0v9_ddr_s3: nldo-reg2 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <900000>;
++                    regulator-max-microvolt = <900000>;
++                    regulator-name = "vdd2l_0v9_ddr_s3";
++                    regulator-state-mem {
++                        regulator-on-in-suspend;
++                        regulator-suspend-microvolt = <900000>;
++                    };
++                };
++
++                master_nldo3: nldo-reg3 {
++                    regulator-name = "master_nldo3";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++
++                avdd_0v75_s0: nldo-reg4 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <750000>;
++                    regulator-max-microvolt = <750000>;
++                    regulator-name = "avdd_0v75_s0";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++
++                vdd_0v85_s0: nldo-reg5 {
++                    regulator-always-on;
++                    regulator-boot-on;
++                    regulator-min-microvolt = <850000>;
++                    regulator-max-microvolt = <850000>;
++                    regulator-name = "vdd_0v85_s0";
++                    regulator-state-mem {
++                        regulator-off-in-suspend;
++                    };
++                };
++            };
++        };
++    };
diff --git a/target/linux/rockchip/patches-6.1/193-dt-bindings-mmc-rockchip-dw-mshc-Add-power-domains-p.patch b/target/linux/rockchip/patches-6.1/193-dt-bindings-mmc-rockchip-dw-mshc-Add-power-domains-p.patch
new file mode 100644
index 0000000000..662a225958
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/193-dt-bindings-mmc-rockchip-dw-mshc-Add-power-domains-p.patch
@@ -0,0 +1,31 @@
+From 753897a422de6bbb7d517fd479d3700408db8262 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@edgeble.ai>
+Date: Tue, 8 Nov 2022 09:43:52 +0530
+Subject: [PATCH 193/383] dt-bindings: mmc: rockchip-dw-mshc: Add power-domains
+ property
+
+Document power-domains property in rockchip dw controller.
+
+RV1126 is using eMMC and SDIO power domains but SDMMC is not.
+
+Signed-off-by: Jagan Teki <jagan@edgeble.ai>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20221108041400.157052-3-jagan@edgeble.ai
+Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/mmc/rockchip-dw-mshc.yaml | 3 +++
+ 1 file changed, 3 insertions(+)
+
+--- a/Documentation/devicetree/bindings/mmc/rockchip-dw-mshc.yaml
++++ b/Documentation/devicetree/bindings/mmc/rockchip-dw-mshc.yaml
+@@ -71,6 +71,9 @@ properties:
+       to control the clock phases, "ciu-sample" is required for tuning
+       high speed modes.
+ 
++  power-domains:
++    maxItems: 1
++
+   rockchip,default-sample-phase:
+     $ref: /schemas/types.yaml#/definitions/uint32
+     minimum: 0
diff --git a/target/linux/rockchip/patches-6.1/194-dt-bindings-mmc-rockchip-dw-mshc-Add-RK3588-compatib.patch b/target/linux/rockchip/patches-6.1/194-dt-bindings-mmc-rockchip-dw-mshc-Add-RK3588-compatib.patch
new file mode 100644
index 0000000000..e46df7b31e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/194-dt-bindings-mmc-rockchip-dw-mshc-Add-RK3588-compatib.patch
@@ -0,0 +1,30 @@
+From 3849da9dacffabef9e40d8fa2b6985d183b5a39b Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Mon, 13 Feb 2023 15:27:39 +0000
+Subject: [PATCH 194/383] dt-bindings: mmc: rockchip-dw-mshc: Add RK3588
+ compatible string
+
+Add RK3588 compatible string for SD interface.
+
+Co-developed-by: Shawn Lin <shawn.lin@rock-chips.com>
+Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://lore.kernel.org/r/20230213152740.359055-1-lucas.tanure@collabora.com
+Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/mmc/rockchip-dw-mshc.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/mmc/rockchip-dw-mshc.yaml
++++ b/Documentation/devicetree/bindings/mmc/rockchip-dw-mshc.yaml
+@@ -39,6 +39,7 @@ properties:
+               - rockchip,rk3368-dw-mshc
+               - rockchip,rk3399-dw-mshc
+               - rockchip,rk3568-dw-mshc
++              - rockchip,rk3588-dw-mshc
+               - rockchip,rv1108-dw-mshc
+               - rockchip,rv1126-dw-mshc
+           - const: rockchip,rk3288-dw-mshc
diff --git a/target/linux/rockchip/patches-6.1/195-dt-bindings-mtd-rockchip-add-rockchip-rk3128-nfc.patch b/target/linux/rockchip/patches-6.1/195-dt-bindings-mtd-rockchip-add-rockchip-rk3128-nfc.patch
new file mode 100644
index 0000000000..5382cc7069
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/195-dt-bindings-mtd-rockchip-add-rockchip-rk3128-nfc.patch
@@ -0,0 +1,29 @@
+From b370a3552b9ecaadb263cf20cf856df14d4699fb Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Sat, 10 Sep 2022 00:01:10 +0200
+Subject: [PATCH 195/383] dt-bindings: mtd: rockchip: add rockchip,rk3128-nfc
+
+Add rockchip,rk3128-nfc compatible string.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
+Link: https://lore.kernel.org/linux-mtd/f09665c1-9938-38c1-9a31-f196a3ef9cf0@gmail.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/mtd/rockchip,nand-controller.yaml     | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/mtd/rockchip,nand-controller.yaml
++++ b/Documentation/devicetree/bindings/mtd/rockchip,nand-controller.yaml
+@@ -19,7 +19,9 @@ properties:
+       - const: rockchip,rk2928-nfc
+       - const: rockchip,rv1108-nfc
+       - items:
+-          - const: rockchip,rk3036-nfc
++          - enum:
++              - rockchip,rk3036-nfc
++              - rockchip,rk3128-nfc
+           - const: rockchip,rk2928-nfc
+       - items:
+           - const: rockchip,rk3308-nfc
diff --git a/target/linux/rockchip/patches-6.1/196-dt-bindings-PCI-Convert-Rockchip-RK3399-PCIe-to-DT-s.patch b/target/linux/rockchip/patches-6.1/196-dt-bindings-PCI-Convert-Rockchip-RK3399-PCIe-to-DT-s.patch
new file mode 100644
index 0000000000..d7dfc582ec
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/196-dt-bindings-PCI-Convert-Rockchip-RK3399-PCIe-to-DT-s.patch
@@ -0,0 +1,519 @@
+From 995238ee2a0734d47536b2d55834ec4eda322fc4 Mon Sep 17 00:00:00 2001
+From: Rob Herring <robh@kernel.org>
+Date: Mon, 19 Dec 2022 13:12:08 -0600
+Subject: [PATCH 196/383] dt-bindings: PCI: Convert Rockchip RK3399 PCIe to DT
+ schema
+
+Convert the Rockchip RK3399 PCIe Host/Endpoint controller to DT schema
+format. Like most dual mode PCI controllers, we need to split the schema
+into common, host and endpoint schemas.
+
+Link: https://lore.kernel.org/r/20221219191209.1975834-1-robh@kernel.org
+Signed-off-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../pci/rockchip,rk3399-pcie-common.yaml      |  69 +++++++++
+ .../bindings/pci/rockchip,rk3399-pcie-ep.yaml |  68 +++++++++
+ .../bindings/pci/rockchip,rk3399-pcie.yaml    | 132 +++++++++++++++++
+ .../bindings/pci/rockchip-pcie-ep.txt         |  62 --------
+ .../bindings/pci/rockchip-pcie-host.txt       | 135 ------------------
+ MAINTAINERS                                   |   2 +-
+ 6 files changed, 270 insertions(+), 198 deletions(-)
+ create mode 100644 Documentation/devicetree/bindings/pci/rockchip,rk3399-pcie-common.yaml
+ create mode 100644 Documentation/devicetree/bindings/pci/rockchip,rk3399-pcie-ep.yaml
+ create mode 100644 Documentation/devicetree/bindings/pci/rockchip,rk3399-pcie.yaml
+ delete mode 100644 Documentation/devicetree/bindings/pci/rockchip-pcie-ep.txt
+ delete mode 100644 Documentation/devicetree/bindings/pci/rockchip-pcie-host.txt
+
+--- /dev/null
++++ b/Documentation/devicetree/bindings/pci/rockchip,rk3399-pcie-common.yaml
+@@ -0,0 +1,69 @@
++# SPDX-License-Identifier: (GPL-2.0 OR BSD-2-Clause)
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/pci/rockchip,rk3399-pcie-common.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip AXI PCIe Bridge Common Properties
++
++maintainers:
++  - Shawn Lin <shawn.lin@rock-chips.com>
++
++properties:
++  reg:
++    maxItems: 2
++
++  clocks:
++    maxItems: 4
++
++  clock-names:
++    items:
++      - const: aclk
++      - const: aclk-perf
++      - const: hclk
++      - const: pm
++
++  num-lanes:
++    maximum: 4
++
++  phys:
++    oneOf:
++      - maxItems: 1
++      - maxItems: 4
++
++  phy-names:
++    oneOf:
++      - const: pcie-phy
++      - items:
++          - const: pcie-phy-0
++          - const: pcie-phy-1
++          - const: pcie-phy-2
++          - const: pcie-phy-3
++
++  resets:
++    maxItems: 7
++
++  reset-names:
++    items:
++      - const: core
++      - const: mgmt
++      - const: mgmt-sticky
++      - const: pipe
++      - const: pm
++      - const: pclk
++      - const: aclk
++
++required:
++  - compatible
++  - reg
++  - reg-names
++  - clocks
++  - clock-names
++  - phys
++  - phy-names
++  - resets
++  - reset-names
++
++additionalProperties: true
++
++...
+--- /dev/null
++++ b/Documentation/devicetree/bindings/pci/rockchip,rk3399-pcie-ep.yaml
+@@ -0,0 +1,68 @@
++# SPDX-License-Identifier: (GPL-2.0 OR BSD-2-Clause)
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/pci/rockchip,rk3399-pcie-ep.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip AXI PCIe Endpoint
++
++maintainers:
++  - Shawn Lin <shawn.lin@rock-chips.com>
++
++allOf:
++  - $ref: /schemas/pci/pci-ep.yaml#
++  - $ref: rockchip,rk3399-pcie-common.yaml#
++
++properties:
++  compatible:
++    const: rockchip,rk3399-pcie-ep
++
++  reg: true
++
++  reg-names:
++    items:
++      - const: apb-base
++      - const: mem-base
++
++  rockchip,max-outbound-regions:
++    description: Maximum number of outbound regions
++    $ref: /schemas/types.yaml#/definitions/uint32
++    maximum: 32
++    default: 32
++
++required:
++  - rockchip,max-outbound-regions
++
++unevaluatedProperties: false
++
++examples:
++  - |
++    #include <dt-bindings/interrupt-controller/arm-gic.h>
++    #include <dt-bindings/gpio/gpio.h>
++    #include <dt-bindings/clock/rk3399-cru.h>
++
++    bus {
++        #address-cells = <2>;
++        #size-cells = <2>;
++
++        pcie-ep@f8000000 {
++            compatible = "rockchip,rk3399-pcie-ep";
++            reg = <0x0 0xfd000000 0x0 0x1000000>, <0x0 0x80000000 0x0 0x20000>;
++            reg-names = "apb-base", "mem-base";
++            clocks = <&cru ACLK_PCIE>, <&cru ACLK_PERF_PCIE>,
++              <&cru PCLK_PCIE>, <&cru SCLK_PCIE_PM>;
++            clock-names = "aclk", "aclk-perf",
++                    "hclk", "pm";
++            max-functions = /bits/ 8 <8>;
++            num-lanes = <4>;
++            resets = <&cru SRST_PCIE_CORE>, <&cru SRST_PCIE_MGMT>,
++              <&cru SRST_PCIE_MGMT_STICKY>, <&cru SRST_PCIE_PIPE> ,
++              <&cru SRST_PCIE_PM>, <&cru SRST_P_PCIE>, <&cru SRST_A_PCIE>;
++            reset-names = "core", "mgmt", "mgmt-sticky", "pipe",
++                    "pm", "pclk", "aclk";
++            phys = <&pcie_phy 0>, <&pcie_phy 1>, <&pcie_phy 2>, <&pcie_phy 3>;
++            phy-names = "pcie-phy-0", "pcie-phy-1", "pcie-phy-2", "pcie-phy-3";
++            rockchip,max-outbound-regions = <16>;
++        };
++    };
++...
+--- /dev/null
++++ b/Documentation/devicetree/bindings/pci/rockchip,rk3399-pcie.yaml
+@@ -0,0 +1,132 @@
++# SPDX-License-Identifier: (GPL-2.0 OR BSD-2-Clause)
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/pci/rockchip,rk3399-pcie.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip AXI PCIe Root Port Bridge Host
++
++maintainers:
++  - Shawn Lin <shawn.lin@rock-chips.com>
++
++allOf:
++  - $ref: /schemas/pci/pci-bus.yaml#
++  - $ref: rockchip,rk3399-pcie-common.yaml#
++
++properties:
++  compatible:
++    const: rockchip,rk3399-pcie
++
++  reg: true
++
++  reg-names:
++    items:
++      - const: axi-base
++      - const: apb-base
++
++  interrupts:
++    maxItems: 3
++
++  interrupt-names:
++    items:
++      - const: sys
++      - const: legacy
++      - const: client
++
++  aspm-no-l0s:
++    description: This property is needed if using 24MHz OSC for RC's PHY.
++
++  ep-gpios:
++    description: pre-reset GPIO
++
++  vpcie12v-supply:
++    description: The 12v regulator to use for PCIe.
++
++  vpcie3v3-supply:
++    description: The 3.3v regulator to use for PCIe.
++
++  vpcie1v8-supply:
++    description: The 1.8v regulator to use for PCIe.
++
++  vpcie0v9-supply:
++    description: The 0.9v regulator to use for PCIe.
++
++  interrupt-controller:
++    type: object
++    additionalProperties: false
++
++    properties:
++      '#address-cells':
++        const: 0
++
++      '#interrupt-cells':
++        const: 1
++
++      interrupt-controller: true
++
++required:
++  - ranges
++  - "#interrupt-cells"
++  - interrupts
++  - interrupt-controller
++  - interrupt-map
++  - interrupt-map-mask
++  - msi-map
++
++unevaluatedProperties: false
++
++examples:
++  - |
++    #include <dt-bindings/interrupt-controller/arm-gic.h>
++    #include <dt-bindings/gpio/gpio.h>
++    #include <dt-bindings/clock/rk3399-cru.h>
++
++    bus {
++        #address-cells = <2>;
++        #size-cells = <2>;
++
++        pcie@f8000000 {
++            compatible = "rockchip,rk3399-pcie";
++            device_type = "pci";
++            #address-cells = <3>;
++            #size-cells = <2>;
++            clocks = <&cru ACLK_PCIE>, <&cru ACLK_PERF_PCIE>,
++              <&cru PCLK_PCIE>, <&cru SCLK_PCIE_PM>;
++            clock-names = "aclk", "aclk-perf",
++                    "hclk", "pm";
++            interrupts = <GIC_SPI 49 IRQ_TYPE_LEVEL_HIGH 0>,
++                  <GIC_SPI 50 IRQ_TYPE_LEVEL_HIGH 0>,
++                  <GIC_SPI 51 IRQ_TYPE_LEVEL_HIGH 0>;
++            interrupt-names = "sys", "legacy", "client";
++            ep-gpios = <&gpio3 13 GPIO_ACTIVE_HIGH>;
++            ranges = <0x83000000 0x0 0xfa000000 0x0 0xfa000000 0x0 0x600000
++                0x81000000 0x0 0xfa600000 0x0 0xfa600000 0x0 0x100000>;
++            num-lanes = <4>;
++            msi-map = <0x0 &its 0x0 0x1000>;
++            reg = <0x0 0xf8000000 0x0 0x2000000>, <0x0 0xfd000000 0x0 0x1000000>;
++            reg-names = "axi-base", "apb-base";
++            resets = <&cru SRST_PCIE_CORE>, <&cru SRST_PCIE_MGMT>,
++              <&cru SRST_PCIE_MGMT_STICKY>, <&cru SRST_PCIE_PIPE> ,
++              <&cru SRST_PCIE_PM>, <&cru SRST_P_PCIE>, <&cru SRST_A_PCIE>;
++            reset-names = "core", "mgmt", "mgmt-sticky", "pipe",
++                    "pm", "pclk", "aclk";
++            /* deprecated legacy PHY model */
++            phys = <&pcie_phy>;
++            phy-names = "pcie-phy";
++            pinctrl-names = "default";
++            pinctrl-0 = <&pcie_clkreq>;
++            #interrupt-cells = <1>;
++            interrupt-map-mask = <0 0 0 7>;
++            interrupt-map = <0 0 0 1 &pcie0_intc 0>,
++                <0 0 0 2 &pcie0_intc 1>,
++                <0 0 0 3 &pcie0_intc 2>,
++                <0 0 0 4 &pcie0_intc 3>;
++
++            pcie0_intc: interrupt-controller {
++                interrupt-controller;
++                #address-cells = <0>;
++                #interrupt-cells = <1>;
++            };
++        };
++    };
++...
+--- a/Documentation/devicetree/bindings/pci/rockchip-pcie-ep.txt
++++ /dev/null
+@@ -1,62 +0,0 @@
+-* Rockchip AXI PCIe Endpoint Controller DT description
+-
+-Required properties:
+-- compatible: Should contain "rockchip,rk3399-pcie-ep"
+-- reg: Two register ranges as listed in the reg-names property
+-- reg-names: Must include the following names
+-	- "apb-base"
+-	- "mem-base"
+-- clocks: Must contain an entry for each entry in clock-names.
+-		See ../clocks/clock-bindings.txt for details.
+-- clock-names: Must include the following entries:
+-	- "aclk"
+-	- "aclk-perf"
+-	- "hclk"
+-	- "pm"
+-- resets: Must contain seven entries for each entry in reset-names.
+-	   See ../reset/reset.txt for details.
+-- reset-names: Must include the following names
+-	- "core"
+-	- "mgmt"
+-	- "mgmt-sticky"
+-	- "pipe"
+-	- "pm"
+-	- "aclk"
+-	- "pclk"
+-- pinctrl-names : The pin control state names
+-- pinctrl-0: The "default" pinctrl state
+-- phys: Must contain an phandle to a PHY for each entry in phy-names.
+-- phy-names: Must include 4 entries for all 4 lanes even if some of
+-  them won't be used for your cases. Entries are of the form "pcie-phy-N":
+-  where N ranges from 0 to 3.
+-  (see example below and you MUST also refer to ../phy/rockchip-pcie-phy.txt
+-  for changing the #phy-cells of phy node to support it)
+-- rockchip,max-outbound-regions: Maximum number of outbound regions
+-
+-Optional Property:
+-- num-lanes: number of lanes to use
+-- max-functions: Maximum number of functions that can be configured (default 1).
+-
+-pcie0-ep: pcie@f8000000 {
+-	compatible = "rockchip,rk3399-pcie-ep";
+-	#address-cells = <3>;
+-	#size-cells = <2>;
+-	rockchip,max-outbound-regions = <16>;
+-	clocks = <&cru ACLK_PCIE>, <&cru ACLK_PERF_PCIE>,
+-		 <&cru PCLK_PCIE>, <&cru SCLK_PCIE_PM>;
+-	clock-names = "aclk", "aclk-perf",
+-		      "hclk", "pm";
+-	max-functions = /bits/ 8 <8>;
+-	num-lanes = <4>;
+-	reg = <0x0 0xfd000000 0x0 0x1000000>, <0x0 0x80000000 0x0 0x20000>;
+-	reg-names = "apb-base", "mem-base";
+-	resets = <&cru SRST_PCIE_CORE>, <&cru SRST_PCIE_MGMT>,
+-		 <&cru SRST_PCIE_MGMT_STICKY>, <&cru SRST_PCIE_PIPE> ,
+-		 <&cru SRST_PCIE_PM>, <&cru SRST_P_PCIE>, <&cru SRST_A_PCIE>;
+-	reset-names = "core", "mgmt", "mgmt-sticky", "pipe",
+-		      "pm", "pclk", "aclk";
+-	phys = <&pcie_phy 0>, <&pcie_phy 1>, <&pcie_phy 2>, <&pcie_phy 3>;
+-	phy-names = "pcie-phy-0", "pcie-phy-1", "pcie-phy-2", "pcie-phy-3";
+-	pinctrl-names = "default";
+-	pinctrl-0 = <&pcie_clkreq>;
+-};
+--- a/Documentation/devicetree/bindings/pci/rockchip-pcie-host.txt
++++ /dev/null
+@@ -1,135 +0,0 @@
+-* Rockchip AXI PCIe Root Port Bridge DT description
+-
+-Required properties:
+-- #address-cells: Address representation for root ports, set to <3>
+-- #size-cells: Size representation for root ports, set to <2>
+-- #interrupt-cells: specifies the number of cells needed to encode an
+-		interrupt source. The value must be 1.
+-- compatible: Should contain "rockchip,rk3399-pcie"
+-- reg: Two register ranges as listed in the reg-names property
+-- reg-names: Must include the following names
+-	- "axi-base"
+-	- "apb-base"
+-- clocks: Must contain an entry for each entry in clock-names.
+-		See ../clocks/clock-bindings.txt for details.
+-- clock-names: Must include the following entries:
+-	- "aclk"
+-	- "aclk-perf"
+-	- "hclk"
+-	- "pm"
+-- msi-map: Maps a Requester ID to an MSI controller and associated
+-	msi-specifier data. See ./pci-msi.txt
+-- interrupts: Three interrupt entries must be specified.
+-- interrupt-names: Must include the following names
+-	- "sys"
+-	- "legacy"
+-	- "client"
+-- resets: Must contain seven entries for each entry in reset-names.
+-	   See ../reset/reset.txt for details.
+-- reset-names: Must include the following names
+-	- "core"
+-	- "mgmt"
+-	- "mgmt-sticky"
+-	- "pipe"
+-	- "pm"
+-	- "aclk"
+-	- "pclk"
+-- pinctrl-names : The pin control state names
+-- pinctrl-0: The "default" pinctrl state
+-- #interrupt-cells: specifies the number of cells needed to encode an
+-	interrupt source. The value must be 1.
+-- interrupt-map-mask and interrupt-map: standard PCI properties
+-
+-Required properties for legacy PHY model (deprecated):
+-- phys: From PHY bindings: Phandle for the Generic PHY for PCIe.
+-- phy-names:  MUST be "pcie-phy".
+-
+-Required properties for per-lane PHY model (preferred):
+-- phys: Must contain an phandle to a PHY for each entry in phy-names.
+-- phy-names: Must include 4 entries for all 4 lanes even if some of
+-  them won't be used for your cases. Entries are of the form "pcie-phy-N":
+-  where N ranges from 0 to 3.
+-  (see example below and you MUST also refer to ../phy/rockchip-pcie-phy.txt
+-  for changing the #phy-cells of phy node to support it)
+-
+-Optional Property:
+-- aspm-no-l0s: RC won't support ASPM L0s. This property is needed if
+-	using 24MHz OSC for RC's PHY.
+-- ep-gpios: contain the entry for pre-reset GPIO
+-- num-lanes: number of lanes to use
+-- vpcie12v-supply: The phandle to the 12v regulator to use for PCIe.
+-- vpcie3v3-supply: The phandle to the 3.3v regulator to use for PCIe.
+-- vpcie1v8-supply: The phandle to the 1.8v regulator to use for PCIe.
+-- vpcie0v9-supply: The phandle to the 0.9v regulator to use for PCIe.
+-
+-*Interrupt controller child node*
+-The core controller provides a single interrupt for legacy INTx. The PCIe node
+-should contain an interrupt controller node as a target for the PCI
+-'interrupt-map' property. This node represents the domain at which the four
+-INTx interrupts are decoded and routed.
+-
+-
+-Required properties for Interrupt controller child node:
+-- interrupt-controller: identifies the node as an interrupt controller
+-- #address-cells: specifies the number of cells needed to encode an
+-	address. The value must be 0.
+-- #interrupt-cells: specifies the number of cells needed to encode an
+-	interrupt source. The value must be 1.
+-
+-Example:
+-
+-pcie0: pcie@f8000000 {
+-	compatible = "rockchip,rk3399-pcie";
+-	#address-cells = <3>;
+-	#size-cells = <2>;
+-	clocks = <&cru ACLK_PCIE>, <&cru ACLK_PERF_PCIE>,
+-		 <&cru PCLK_PCIE>, <&cru SCLK_PCIE_PM>;
+-	clock-names = "aclk", "aclk-perf",
+-		      "hclk", "pm";
+-	bus-range = <0x0 0x1>;
+-	interrupts = <GIC_SPI 49 IRQ_TYPE_LEVEL_HIGH 0>,
+-		     <GIC_SPI 50 IRQ_TYPE_LEVEL_HIGH 0>,
+-		     <GIC_SPI 51 IRQ_TYPE_LEVEL_HIGH 0>;
+-	interrupt-names = "sys", "legacy", "client";
+-	assigned-clocks = <&cru SCLK_PCIEPHY_REF>;
+-	assigned-clock-parents = <&cru SCLK_PCIEPHY_REF100M>;
+-	assigned-clock-rates = <100000000>;
+-	ep-gpios = <&gpio3 13 GPIO_ACTIVE_HIGH>;
+-	ranges = <0x83000000 0x0 0xfa000000 0x0 0xfa000000 0x0 0x600000
+-		  0x81000000 0x0 0xfa600000 0x0 0xfa600000 0x0 0x100000>;
+-	num-lanes = <4>;
+-	msi-map = <0x0 &its 0x0 0x1000>;
+-	reg = <0x0 0xf8000000 0x0 0x2000000>, <0x0 0xfd000000 0x0 0x1000000>;
+-	reg-names = "axi-base", "apb-base";
+-	resets = <&cru SRST_PCIE_CORE>, <&cru SRST_PCIE_MGMT>,
+-		 <&cru SRST_PCIE_MGMT_STICKY>, <&cru SRST_PCIE_PIPE> ,
+-		 <&cru SRST_PCIE_PM>, <&cru SRST_P_PCIE>, <&cru SRST_A_PCIE>;
+-	reset-names = "core", "mgmt", "mgmt-sticky", "pipe",
+-		      "pm", "pclk", "aclk";
+-	/* deprecated legacy PHY model */
+-	phys = <&pcie_phy>;
+-	phy-names = "pcie-phy";
+-	pinctrl-names = "default";
+-	pinctrl-0 = <&pcie_clkreq>;
+-	#interrupt-cells = <1>;
+-	interrupt-map-mask = <0 0 0 7>;
+-	interrupt-map = <0 0 0 1 &pcie0_intc 0>,
+-			<0 0 0 2 &pcie0_intc 1>,
+-			<0 0 0 3 &pcie0_intc 2>,
+-			<0 0 0 4 &pcie0_intc 3>;
+-	pcie0_intc: interrupt-controller {
+-		interrupt-controller;
+-		#address-cells = <0>;
+-		#interrupt-cells = <1>;
+-	};
+-};
+-
+-pcie0: pcie@f8000000 {
+-	...
+-
+-	/* preferred per-lane PHY model */
+-	phys = <&pcie_phy 0>, <&pcie_phy 1>, <&pcie_phy 2>, <&pcie_phy 3>;
+-	phy-names = "pcie-phy-0", "pcie-phy-1", "pcie-phy-2", "pcie-phy-3";
+-
+-	...
+-};
+--- a/MAINTAINERS
++++ b/MAINTAINERS
+@@ -16090,7 +16090,7 @@ M:	Shawn Lin <shawn.lin@rock-chips.com>
+ L:	linux-pci@vger.kernel.org
+ L:	linux-rockchip@lists.infradead.org
+ S:	Maintained
+-F:	Documentation/devicetree/bindings/pci/rockchip-pcie*
++F:	Documentation/devicetree/bindings/pci/rockchip,rk3399-pcie*
+ F:	drivers/pci/controller/pcie-rockchip*
+ 
+ PCIE DRIVER FOR SOCIONEXT UNIPHIER
diff --git a/target/linux/rockchip/patches-6.1/197-dt-bindings-PCI-dwc-Apply-common-schema-to-Rockchip-.patch b/target/linux/rockchip/patches-6.1/197-dt-bindings-PCI-dwc-Apply-common-schema-to-Rockchip-.patch
new file mode 100644
index 0000000000..4d993c18d6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/197-dt-bindings-PCI-dwc-Apply-common-schema-to-Rockchip-.patch
@@ -0,0 +1,36 @@
+From a5e0c66000dc56eecba2ffd45b8229bb687ed481 Mon Sep 17 00:00:00 2001
+From: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Date: Sun, 13 Nov 2022 22:12:54 +0300
+Subject: [PATCH 197/383] dt-bindings: PCI: dwc: Apply common schema to
+ Rockchip DW PCIe nodes
+
+As the DT-bindings description states the Rockchip PCIe controller is
+based on the DW PCIe RP IP-core thus its DT-nodes are supposed to be
+compatible with the common DW PCIe controller schema. Let's make sure they
+are evaluated against it by referring to the snps,dw-pcie.yaml schema in
+the allOf sub-schemas composition.
+
+Link: https://lore.kernel.org/r/20221113191301.5526-14-Sergey.Semin@baikalelectronics.ru
+Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+--- a/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
+@@ -14,10 +14,10 @@ maintainers:
+ description: |+
+   RK3568 SoC PCIe host controller is based on the Synopsys DesignWare
+   PCIe IP and thus inherits all the common properties defined in
+-  designware-pcie.txt.
++  snps,dw-pcie.yaml.
+ 
+ allOf:
+-  - $ref: /schemas/pci/pci-bus.yaml#
++  - $ref: /schemas/pci/snps,dw-pcie.yaml#
+ 
+ properties:
+   compatible:
diff --git a/target/linux/rockchip/patches-6.1/198-dt-bindings-PCI-dwc-Add-rk3588-compatible.patch b/target/linux/rockchip/patches-6.1/198-dt-bindings-PCI-dwc-Add-rk3588-compatible.patch
new file mode 100644
index 0000000000..841dd01397
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/198-dt-bindings-PCI-dwc-Add-rk3588-compatible.patch
@@ -0,0 +1,32 @@
+From ed34a35b864336153effbfc68d7be8f370adee2d Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Tue, 14 Mar 2023 13:55:53 +0000
+Subject: [PATCH 198/383] dt-bindings: PCI: dwc: Add rk3588 compatible
+
+PCIe for RK3588 is the same as RK3568.
+
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230314135555.44162-2-lucas.tanure@collabora.com
+Signed-off-by: Vinod Koul <vkoul@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
+@@ -21,8 +21,12 @@ allOf:
+ 
+ properties:
+   compatible:
+-    items:
++    oneOf:
+       - const: rockchip,rk3568-pcie
++      - items:
++          - enum:
++              - rockchip,rk3588-pcie
++          - const: rockchip,rk3568-pcie
+ 
+   reg:
+     items:
diff --git a/target/linux/rockchip/patches-6.1/199-dt-bindings-phy-rockchip-Add-rk3588-compatible.patch b/target/linux/rockchip/patches-6.1/199-dt-bindings-phy-rockchip-Add-rk3588-compatible.patch
new file mode 100644
index 0000000000..c073f2357b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/199-dt-bindings-phy-rockchip-Add-rk3588-compatible.patch
@@ -0,0 +1,27 @@
+From 5db4e6060c4facd74448a7055459469c0cc210e3 Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Tue, 14 Mar 2023 13:55:54 +0000
+Subject: [PATCH 199/383] dt-bindings: phy: rockchip: Add rk3588 compatible
+
+RK3568 Naneng Combo Phy driver can support RK3588 with the additional
+clocks and initial configuration, so add the compatible line.
+
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230314135555.44162-3-lucas.tanure@collabora.com
+Signed-off-by: Vinod Koul <vkoul@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/phy/phy-rockchip-naneng-combphy.yaml     | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/phy/phy-rockchip-naneng-combphy.yaml
++++ b/Documentation/devicetree/bindings/phy/phy-rockchip-naneng-combphy.yaml
+@@ -13,6 +13,7 @@ properties:
+   compatible:
+     enum:
+       - rockchip,rk3568-naneng-combphy
++      - rockchip,rk3588-naneng-combphy
+ 
+   reg:
+     maxItems: 1
diff --git a/target/linux/rockchip/patches-6.1/200-dt-bindings-pinctrl-rockchip-further-increase-max-am.patch b/target/linux/rockchip/patches-6.1/200-dt-bindings-pinctrl-rockchip-further-increase-max-am.patch
new file mode 100644
index 0000000000..f02b55a663
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/200-dt-bindings-pinctrl-rockchip-further-increase-max-am.patch
@@ -0,0 +1,31 @@
+From 0b785974bb9f1cdf5e80059253d138756e64afee Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Fri, 21 Oct 2022 19:20:12 +0200
+Subject: [PATCH 200/383] dt-bindings: pinctrl: rockchip: further increase max
+ amount of device functions
+
+Apparently RK3588 pinctrl has 13 different device functions, but dt-validate
+only checks for pin configuration being referenced so I did not notice.
+
+Fixes: ed1f77b78322 ("dt-bindings: pinctrl: rockchip: increase max amount of device functions")
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Acked-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://lore.kernel.org/r/20221021172012.87954-1-sebastian.reichel@collabora.com
+Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/pinctrl/rockchip,pinctrl.yaml | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/pinctrl/rockchip,pinctrl.yaml
++++ b/Documentation/devicetree/bindings/pinctrl/rockchip,pinctrl.yaml
+@@ -132,7 +132,7 @@ additionalProperties:
+               description:
+                 Pin bank index.
+             - minimum: 0
+-              maximum: 10
++              maximum: 13
+               description:
+                 Mux 0 means GPIO and mux 1 to N means
+                 the specific device function.
diff --git a/target/linux/rockchip/patches-6.1/201-dt-bindings-pinctrl-rockchip-pinctrl-mark-gpio-sub-n.patch b/target/linux/rockchip/patches-6.1/201-dt-bindings-pinctrl-rockchip-pinctrl-mark-gpio-sub-n.patch
new file mode 100644
index 0000000000..b6a83e17c8
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/201-dt-bindings-pinctrl-rockchip-pinctrl-mark-gpio-sub-n.patch
@@ -0,0 +1,40 @@
+From c0ec798a4d616eca4fb99f9c69315b98e6526b9f Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Sat, 21 Jan 2023 12:08:20 +0100
+Subject: [PATCH 201/383] dt-bindings: pinctrl: rockchip,pinctrl: mark gpio sub
+ nodes of pinctrl as deprecated
+
+Mark gpio sub nodes of pinctrl as deprecated.
+Gpio nodes are now placed in the root of the device tree.
+The relation to pinctrl is now described with the
+"gpio-ranges" property.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
+Link: https://lore.kernel.org/r/137b56f0-8e86-f705-4ba7-d5dfe3c0b477@gmail.com
+Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/pinctrl/rockchip,pinctrl.yaml         | 4 +---
+ 1 file changed, 1 insertion(+), 3 deletions(-)
+
+--- a/Documentation/devicetree/bindings/pinctrl/rockchip,pinctrl.yaml
++++ b/Documentation/devicetree/bindings/pinctrl/rockchip,pinctrl.yaml
+@@ -76,15 +76,13 @@ allOf:
+ required:
+   - compatible
+   - rockchip,grf
+-  - "#address-cells"
+-  - "#size-cells"
+-  - ranges
+ 
+ patternProperties:
+   "gpio@[0-9a-f]+$":
+     type: object
+ 
+     $ref: "/schemas/gpio/rockchip,gpio-bank.yaml#"
++    deprecated: true
+ 
+     unevaluatedProperties: false
+ 
diff --git a/target/linux/rockchip/patches-6.1/202-regulator-dt-bindings-Convert-Fairchild-FAN53555-to-.patch b/target/linux/rockchip/patches-6.1/202-regulator-dt-bindings-Convert-Fairchild-FAN53555-to-.patch
new file mode 100644
index 0000000000..81a79e9e69
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/202-regulator-dt-bindings-Convert-Fairchild-FAN53555-to-.patch
@@ -0,0 +1,118 @@
+From f50565b7b1d4866727087629bf701b6783303709 Mon Sep 17 00:00:00 2001
+From: Rob Herring <robh@kernel.org>
+Date: Sun, 8 Jan 2023 18:46:56 -0600
+Subject: [PATCH 202/383] regulator: dt-bindings: Convert Fairchild FAN53555 to
+ DT schema
+
+Convert the Fairchild FAN53555 and compatible variants binding to DT
+schema format.
+
+Add the undocumented 'vsel-gpios' property used to control the VSEL pin.
+
+The example was missing 'reg', so add it.
+
+Signed-off-by: Rob Herring <robh@kernel.org>
+Link: https://lore.kernel.org/r/20230109004656.451231-1-robh@kernel.org
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/regulator/fan53555.txt           | 24 -------
+ .../bindings/regulator/fcs,fan53555.yaml      | 64 +++++++++++++++++++
+ 2 files changed, 64 insertions(+), 24 deletions(-)
+ delete mode 100644 Documentation/devicetree/bindings/regulator/fan53555.txt
+ create mode 100644 Documentation/devicetree/bindings/regulator/fcs,fan53555.yaml
+
+--- a/Documentation/devicetree/bindings/regulator/fan53555.txt
++++ /dev/null
+@@ -1,24 +0,0 @@
+-Binding for Fairchild FAN53555 regulators
+-
+-Required properties:
+-  - compatible: one of "fcs,fan53555", "fcs,fan53526", "silergy,syr827",
+-		"silergy,syr828" or "tcs,tcs4525".
+-  - reg: I2C address
+-
+-Optional properties:
+-  - fcs,suspend-voltage-selector: declare which of the two available
+-		voltage selector registers should be used for the suspend
+-		voltage. The other one is used for the runtime voltage setting
+-		Possible values are either <0> or <1>
+-  - vin-supply: regulator supplying the vin pin
+-
+-Example:
+-
+-	regulator@40 {
+-		compatible = "fcs,fan53555";
+-		regulator-name = "fan53555";
+-		regulator-min-microvolt = <1000000>;
+-		regulator-max-microvolt = <1800000>;
+-		vin-supply = <&parent_reg>;
+-		fcs,suspend-voltage-selector = <1>;
+-	};
+--- /dev/null
++++ b/Documentation/devicetree/bindings/regulator/fcs,fan53555.yaml
+@@ -0,0 +1,64 @@
++# SPDX-License-Identifier: GPL-2.0
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/regulator/fcs,fan53555.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Fairchild FAN53555 regulators
++
++maintainers:
++  - Heiko Stuebner <heiko@sntech.de>
++
++allOf:
++  - $ref: regulator.yaml#
++
++properties:
++  compatible:
++    enum:
++      - fcs,fan53555
++      - fcs,fan53526
++      - silergy,syr827
++      - silergy,syr828
++      - tcs,tcs4525
++
++  reg:
++    maxItems: 1
++
++  fcs,suspend-voltage-selector:
++    description: Declares which of the two available voltage selector
++      registers should be used for the suspend voltage. The other one is used
++      for the runtime voltage setting.
++    $ref: /schemas/types.yaml#/definitions/uint32
++    enum: [ 0, 1 ]
++
++  vin-supply:
++    description: Supply for the vin pin
++
++  vsel-gpios:
++    description: Voltage Select. When this pin is LOW, VOUT is set by the
++      VSEL0 register. When this pin is HIGH, VOUT is set by the VSEL1 register.
++    maxItems: 1
++
++required:
++  - compatible
++  - reg
++
++unevaluatedProperties: false
++
++examples:
++  - |
++    i2c {
++        #address-cells = <1>;
++        #size-cells = <0>;
++
++        regulator@40 {
++            compatible = "fcs,fan53555";
++            reg = <0x40>;
++            regulator-name = "fan53555";
++            regulator-min-microvolt = <1000000>;
++            regulator-max-microvolt = <1800000>;
++            vin-supply = <&parent_reg>;
++            fcs,suspend-voltage-selector = <1>;
++        };
++    };
++...
diff --git a/target/linux/rockchip/patches-6.1/203-regulator-dt-bindings-fcs-fan53555-Add-support-for-R.patch b/target/linux/rockchip/patches-6.1/203-regulator-dt-bindings-fcs-fan53555-Add-support-for-R.patch
new file mode 100644
index 0000000000..7f55af26a5
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/203-regulator-dt-bindings-fcs-fan53555-Add-support-for-R.patch
@@ -0,0 +1,51 @@
+From 44cda43753bf2797bddedcf1ba04c522e2cbea3d Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Thu, 6 Apr 2023 22:41:51 +0300
+Subject: [PATCH 203/383] regulator: dt-bindings: fcs,fan53555: Add support for
+ RK860X
+
+Add compatibles to support Rockchip RK860X regulators.
+
+RK8600/RK8601 are pretty similar to the FAN53555 regulators, while
+RK8602/RK8603 are a bit different, having a wider voltage selection
+range.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230406194158.963352-2-cristian.ciocaltea@collabora.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/regulator/fcs,fan53555.yaml      | 21 +++++++++++++------
+ 1 file changed, 15 insertions(+), 6 deletions(-)
+
+--- a/Documentation/devicetree/bindings/regulator/fcs,fan53555.yaml
++++ b/Documentation/devicetree/bindings/regulator/fcs,fan53555.yaml
+@@ -14,12 +14,21 @@ allOf:
+ 
+ properties:
+   compatible:
+-    enum:
+-      - fcs,fan53555
+-      - fcs,fan53526
+-      - silergy,syr827
+-      - silergy,syr828
+-      - tcs,tcs4525
++    oneOf:
++      - enum:
++          - fcs,fan53555
++          - fcs,fan53526
++          - rockchip,rk8600
++          - rockchip,rk8602
++          - silergy,syr827
++          - silergy,syr828
++          - tcs,tcs4525
++      - items:
++          - const: rockchip,rk8601
++          - const: rockchip,rk8600
++      - items:
++          - const: rockchip,rk8603
++          - const: rockchip,rk8602
+ 
+   reg:
+     maxItems: 1
diff --git a/target/linux/rockchip/patches-6.1/204-dt-bindings-soc-rockchip-add-initial-rk3588-syscon-c.patch b/target/linux/rockchip/patches-6.1/204-dt-bindings-soc-rockchip-add-initial-rk3588-syscon-c.patch
new file mode 100644
index 0000000000..fa98b8dc36
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/204-dt-bindings-soc-rockchip-add-initial-rk3588-syscon-c.patch
@@ -0,0 +1,32 @@
+From b02173ba8e6f9f9843c4cad420b258a31db3d988 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 9 Jan 2023 16:57:55 +0100
+Subject: [PATCH 204/383] dt-bindings: soc: rockchip: add initial rk3588 syscon
+ compatibles
+
+Add IOC and PHP GRF syscon compatibles for RK3588.
+
+Acked-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Reviewed-by: Jagan Teki <jagan@edgeble.ai>
+Link: https://lore.kernel.org/r/20230109155801.51642-2-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/soc/rockchip/grf.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
++++ b/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
+@@ -20,6 +20,11 @@ properties:
+               - rockchip,rk3568-pipe-grf
+               - rockchip,rk3568-pipe-phy-grf
+               - rockchip,rk3568-usb2phy-grf
++              - rockchip,rk3588-bigcore0-grf
++              - rockchip,rk3588-bigcore1-grf
++              - rockchip,rk3588-ioc
++              - rockchip,rk3588-php-grf
++              - rockchip,rk3588-sys-grf
+               - rockchip,rk3588-pcie3-phy-grf
+               - rockchip,rk3588-pcie3-pipe-grf
+               - rockchip,rv1108-usbgrf
diff --git a/target/linux/rockchip/patches-6.1/205-dt-bindings-soc-rockchip-grf-add-rockchip-rk3288-dp-.patch b/target/linux/rockchip/patches-6.1/205-dt-bindings-soc-rockchip-grf-add-rockchip-rk3288-dp-.patch
new file mode 100644
index 0000000000..21887aa5aa
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/205-dt-bindings-soc-rockchip-grf-add-rockchip-rk3288-dp-.patch
@@ -0,0 +1,32 @@
+From 075e506e9e274fb0ef7b7c5c6672ee8f904c0195 Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 29 Dec 2022 10:45:16 +0100
+Subject: [PATCH 205/383] dt-bindings: soc: rockchip: grf: add
+ rockchip,rk3288-dp-phy.yaml
+
+Add new converted rockchip,rk3288-dp-phy.yaml to grf.yaml file.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+[dropped the unrelated blank line removals that didn't apply]
+Link: https://lore.kernel.org/r/5759c6e1-9c89-4cb2-dd57-83a8db09f547@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/soc/rockchip/grf.yaml | 5 +++--
+ 1 file changed, 3 insertions(+), 2 deletions(-)
+
+--- a/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
++++ b/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
+@@ -97,8 +97,9 @@ allOf:
+     then:
+       properties:
+         edp-phy:
+-          description:
+-            Documentation/devicetree/bindings/phy/rockchip-dp-phy.txt
++          type: object
++          $ref: /schemas/phy/rockchip,rk3288-dp-phy.yaml#
++          unevaluatedProperties: false
+ 
+   - if:
+       properties:
diff --git a/target/linux/rockchip/patches-6.1/206-dt-bindings-phy-rename-phy-rockchip-inno-usb2.yaml.patch b/target/linux/rockchip/patches-6.1/206-dt-bindings-phy-rename-phy-rockchip-inno-usb2.yaml.patch
new file mode 100644
index 0000000000..6bf99b0497
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/206-dt-bindings-phy-rename-phy-rockchip-inno-usb2.yaml.patch
@@ -0,0 +1,413 @@
+From 268353bccdc7bbcdc2184dcad5f4d5d42852b121 Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 29 Dec 2022 12:39:17 +0100
+Subject: [PATCH 206/383] dt-bindings: phy: rename phy-rockchip-inno-usb2.yaml
+
+Rename phy-rockchip-inno-usb2.yaml to a more common format of
+rockchip,inno-usb2phy.yaml
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Acked-By: Vinod Koul <vkoul@kernel.org>
+Acked-by: Rob Herring <robh@kernel.org>
+Link: https://lore.kernel.org/r/99794484-d67e-ee1f-4e76-200de20a879c@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../{phy-rockchip-inno-usb2.yaml => rockchip,inno-usb2phy.yaml} | 2 +-
+ Documentation/devicetree/bindings/soc/rockchip/grf.yaml         | 2 +-
+ 2 files changed, 2 insertions(+), 2 deletions(-)
+ rename Documentation/devicetree/bindings/phy/{phy-rockchip-inno-usb2.yaml => rockchip,inno-usb2phy.yaml} (98%)
+
+--- a/Documentation/devicetree/bindings/phy/phy-rockchip-inno-usb2.yaml
++++ /dev/null
+@@ -1,188 +0,0 @@
+-# SPDX-License-Identifier: GPL-2.0
+-%YAML 1.2
+----
+-$id: http://devicetree.org/schemas/phy/phy-rockchip-inno-usb2.yaml#
+-$schema: http://devicetree.org/meta-schemas/core.yaml#
+-
+-title: Rockchip USB2.0 phy with inno IP block
+-
+-maintainers:
+-  - Heiko Stuebner <heiko@sntech.de>
+-
+-properties:
+-  compatible:
+-    enum:
+-      - rockchip,px30-usb2phy
+-      - rockchip,rk3128-usb2phy
+-      - rockchip,rk3228-usb2phy
+-      - rockchip,rk3308-usb2phy
+-      - rockchip,rk3328-usb2phy
+-      - rockchip,rk3366-usb2phy
+-      - rockchip,rk3399-usb2phy
+-      - rockchip,rk3568-usb2phy
+-      - rockchip,rv1108-usb2phy
+-
+-  reg:
+-    maxItems: 1
+-
+-  clock-output-names:
+-    description:
+-      The usb 480m output clock name.
+-
+-  "#clock-cells":
+-    const: 0
+-
+-  clocks:
+-    maxItems: 1
+-
+-  clock-names:
+-    const: phyclk
+-
+-  assigned-clocks:
+-    description:
+-      Phandle of the usb 480m clock.
+-
+-  assigned-clock-parents:
+-    description:
+-      Parent of the usb 480m clock.
+-      Select between usb-phy output 480m and xin24m.
+-      Refer to clk/clock-bindings.txt for generic clock consumer properties.
+-
+-  extcon:
+-    description:
+-      Phandle to the extcon device providing the cable state for the otg phy.
+-
+-  interrupts:
+-    description: Muxed interrupt for both ports
+-    maxItems: 1
+-
+-  rockchip,usbgrf:
+-    $ref: /schemas/types.yaml#/definitions/phandle
+-    description:
+-      Phandle to the syscon managing the 'usb general register files'.
+-      When set the driver will request its phandle as one companion-grf
+-      for some special SoCs (e.g rv1108).
+-
+-  host-port:
+-    type: object
+-    additionalProperties: false
+-
+-    properties:
+-      "#phy-cells":
+-        const: 0
+-
+-      interrupts:
+-        description: host linestate interrupt
+-        maxItems: 1
+-
+-      interrupt-names:
+-        const: linestate
+-
+-      phy-supply:
+-        description:
+-          Phandle to a regulator that provides power to VBUS.
+-          See ./phy-bindings.txt for details.
+-
+-    required:
+-      - "#phy-cells"
+-
+-  otg-port:
+-    type: object
+-    additionalProperties: false
+-
+-    properties:
+-      "#phy-cells":
+-        const: 0
+-
+-      interrupts:
+-        minItems: 1
+-        maxItems: 3
+-
+-      interrupt-names:
+-        oneOf:
+-          - const: linestate
+-          - const: otg-mux
+-          - items:
+-              - const: otg-bvalid
+-              - const: otg-id
+-              - const: linestate
+-
+-      phy-supply:
+-        description:
+-          Phandle to a regulator that provides power to VBUS.
+-          See ./phy-bindings.txt for details.
+-
+-    required:
+-      - "#phy-cells"
+-
+-required:
+-  - compatible
+-  - reg
+-  - clock-output-names
+-  - "#clock-cells"
+-  - host-port
+-  - otg-port
+-
+-allOf:
+-  - if:
+-      properties:
+-        compatible:
+-          contains:
+-            const: rockchip,rk3568-usb2phy
+-
+-    then:
+-      properties:
+-        host-port:
+-          properties:
+-            interrupts: false
+-
+-        otg-port:
+-          properties:
+-            interrupts: false
+-
+-      required:
+-        - interrupts
+-
+-    else:
+-      properties:
+-        interrupts: false
+-
+-        host-port:
+-          required:
+-            - interrupts
+-            - interrupt-names
+-
+-        otg-port:
+-          required:
+-            - interrupts
+-            - interrupt-names
+-
+-additionalProperties: false
+-
+-examples:
+-  - |
+-    #include <dt-bindings/clock/rk3399-cru.h>
+-    #include <dt-bindings/interrupt-controller/arm-gic.h>
+-    #include <dt-bindings/interrupt-controller/irq.h>
+-    u2phy0: usb2phy@e450 {
+-      compatible = "rockchip,rk3399-usb2phy";
+-      reg = <0xe450 0x10>;
+-      clocks = <&cru SCLK_USB2PHY0_REF>;
+-      clock-names = "phyclk";
+-      clock-output-names = "clk_usbphy0_480m";
+-      #clock-cells = <0>;
+-
+-      u2phy0_host: host-port {
+-        interrupts = <GIC_SPI 27 IRQ_TYPE_LEVEL_HIGH 0>;
+-        interrupt-names = "linestate";
+-        #phy-cells = <0>;
+-      };
+-
+-      u2phy0_otg: otg-port {
+-        interrupts = <GIC_SPI 103 IRQ_TYPE_LEVEL_HIGH 0>,
+-                     <GIC_SPI 104 IRQ_TYPE_LEVEL_HIGH 0>,
+-                     <GIC_SPI 106 IRQ_TYPE_LEVEL_HIGH 0>;
+-        interrupt-names = "otg-bvalid", "otg-id", "linestate";
+-        #phy-cells = <0>;
+-      };
+-    };
+--- /dev/null
++++ b/Documentation/devicetree/bindings/phy/rockchip,inno-usb2phy.yaml
+@@ -0,0 +1,188 @@
++# SPDX-License-Identifier: GPL-2.0
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/phy/rockchip,inno-usb2phy.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip USB2.0 phy with inno IP block
++
++maintainers:
++  - Heiko Stuebner <heiko@sntech.de>
++
++properties:
++  compatible:
++    enum:
++      - rockchip,px30-usb2phy
++      - rockchip,rk3128-usb2phy
++      - rockchip,rk3228-usb2phy
++      - rockchip,rk3308-usb2phy
++      - rockchip,rk3328-usb2phy
++      - rockchip,rk3366-usb2phy
++      - rockchip,rk3399-usb2phy
++      - rockchip,rk3568-usb2phy
++      - rockchip,rv1108-usb2phy
++
++  reg:
++    maxItems: 1
++
++  clock-output-names:
++    description:
++      The usb 480m output clock name.
++
++  "#clock-cells":
++    const: 0
++
++  clocks:
++    maxItems: 1
++
++  clock-names:
++    const: phyclk
++
++  assigned-clocks:
++    description:
++      Phandle of the usb 480m clock.
++
++  assigned-clock-parents:
++    description:
++      Parent of the usb 480m clock.
++      Select between usb-phy output 480m and xin24m.
++      Refer to clk/clock-bindings.txt for generic clock consumer properties.
++
++  extcon:
++    description:
++      Phandle to the extcon device providing the cable state for the otg phy.
++
++  interrupts:
++    description: Muxed interrupt for both ports
++    maxItems: 1
++
++  rockchip,usbgrf:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description:
++      Phandle to the syscon managing the 'usb general register files'.
++      When set the driver will request its phandle as one companion-grf
++      for some special SoCs (e.g rv1108).
++
++  host-port:
++    type: object
++    additionalProperties: false
++
++    properties:
++      "#phy-cells":
++        const: 0
++
++      interrupts:
++        description: host linestate interrupt
++        maxItems: 1
++
++      interrupt-names:
++        const: linestate
++
++      phy-supply:
++        description:
++          Phandle to a regulator that provides power to VBUS.
++          See ./phy-bindings.txt for details.
++
++    required:
++      - "#phy-cells"
++
++  otg-port:
++    type: object
++    additionalProperties: false
++
++    properties:
++      "#phy-cells":
++        const: 0
++
++      interrupts:
++        minItems: 1
++        maxItems: 3
++
++      interrupt-names:
++        oneOf:
++          - const: linestate
++          - const: otg-mux
++          - items:
++              - const: otg-bvalid
++              - const: otg-id
++              - const: linestate
++
++      phy-supply:
++        description:
++          Phandle to a regulator that provides power to VBUS.
++          See ./phy-bindings.txt for details.
++
++    required:
++      - "#phy-cells"
++
++required:
++  - compatible
++  - reg
++  - clock-output-names
++  - "#clock-cells"
++  - host-port
++  - otg-port
++
++allOf:
++  - if:
++      properties:
++        compatible:
++          contains:
++            const: rockchip,rk3568-usb2phy
++
++    then:
++      properties:
++        host-port:
++          properties:
++            interrupts: false
++
++        otg-port:
++          properties:
++            interrupts: false
++
++      required:
++        - interrupts
++
++    else:
++      properties:
++        interrupts: false
++
++        host-port:
++          required:
++            - interrupts
++            - interrupt-names
++
++        otg-port:
++          required:
++            - interrupts
++            - interrupt-names
++
++additionalProperties: false
++
++examples:
++  - |
++    #include <dt-bindings/clock/rk3399-cru.h>
++    #include <dt-bindings/interrupt-controller/arm-gic.h>
++    #include <dt-bindings/interrupt-controller/irq.h>
++    u2phy0: usb2phy@e450 {
++      compatible = "rockchip,rk3399-usb2phy";
++      reg = <0xe450 0x10>;
++      clocks = <&cru SCLK_USB2PHY0_REF>;
++      clock-names = "phyclk";
++      clock-output-names = "clk_usbphy0_480m";
++      #clock-cells = <0>;
++
++      u2phy0_host: host-port {
++        interrupts = <GIC_SPI 27 IRQ_TYPE_LEVEL_HIGH 0>;
++        interrupt-names = "linestate";
++        #phy-cells = <0>;
++      };
++
++      u2phy0_otg: otg-port {
++        interrupts = <GIC_SPI 103 IRQ_TYPE_LEVEL_HIGH 0>,
++                     <GIC_SPI 104 IRQ_TYPE_LEVEL_HIGH 0>,
++                     <GIC_SPI 106 IRQ_TYPE_LEVEL_HIGH 0>;
++        interrupt-names = "otg-bvalid", "otg-id", "linestate";
++        #phy-cells = <0>;
++      };
++    };
+--- a/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
++++ b/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
+@@ -206,7 +206,7 @@ allOf:
+         "usb2phy@[0-9a-f]+$":
+           type: object
+ 
+-          $ref: "/schemas/phy/phy-rockchip-inno-usb2.yaml#"
++          $ref: /schemas/phy/rockchip,inno-usb2phy.yaml#
+ 
+           unevaluatedProperties: false
+ 
diff --git a/target/linux/rockchip/patches-6.1/207-dt-bindings-soc-rockchip-grf-add-rockchip-lvds.yaml.patch b/target/linux/rockchip/patches-6.1/207-dt-bindings-soc-rockchip-grf-add-rockchip-lvds.yaml.patch
new file mode 100644
index 0000000000..ecdeddeb58
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/207-dt-bindings-soc-rockchip-grf-add-rockchip-lvds.yaml.patch
@@ -0,0 +1,41 @@
+From 95da50be5d846250b94a472a8d9aa16f3f34b897 Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Thu, 22 Dec 2022 15:24:15 +0100
+Subject: [PATCH 207/383] dt-bindings: soc: rockchip: grf: add
+ rockchip,lvds.yaml
+
+Add new converted rockchip,lvds.yaml to grf.yaml file.
+Prepare for more SoCs with lvds output.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://patchwork.freedesktop.org/patch/msgid/ff3644da-e5ae-f795-c7d9-454b8c8bdfe8@gmail.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/soc/rockchip/grf.yaml          | 10 +++++++---
+ 1 file changed, 7 insertions(+), 3 deletions(-)
+
+--- a/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
++++ b/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
+@@ -80,13 +80,17 @@ allOf:
+       properties:
+         compatible:
+           contains:
+-            const: rockchip,px30-grf
++            enum:
++              - rockchip,px30-grf
+ 
+     then:
+       properties:
+         lvds:
+-          description:
+-            Documentation/devicetree/bindings/display/rockchip/rockchip-lvds.txt
++          type: object
++
++          $ref: /schemas/display/rockchip/rockchip,lvds.yaml#
++
++          unevaluatedProperties: false
+ 
+   - if:
+       properties:
diff --git a/target/linux/rockchip/patches-6.1/208-dt-bindings-soc-rockchip-add-rk3588-usb2phy-syscon.patch b/target/linux/rockchip/patches-6.1/208-dt-bindings-soc-rockchip-add-rk3588-usb2phy-syscon.patch
new file mode 100644
index 0000000000..ae23994798
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/208-dt-bindings-soc-rockchip-add-rk3588-usb2phy-syscon.patch
@@ -0,0 +1,35 @@
+From 6e33df31caaad43e25a4854f4cb62e241f45638f Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 3 Apr 2023 22:23:01 +0200
+Subject: [PATCH 208/383] dt-bindings: soc: rockchip: add rk3588 usb2phy syscon
+
+The usb2phy is accessible via a syscon registers on RK3588, similar
+to rk3399.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Acked-by: Rob Herring <robh@kernel.org>
+Link: https://lore.kernel.org/r/20230403202307.120562-2-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/soc/rockchip/grf.yaml | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
++++ b/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
+@@ -52,6 +52,7 @@ properties:
+               - rockchip,rk3399-pmugrf
+               - rockchip,rk3568-grf
+               - rockchip,rk3568-pmugrf
++              - rockchip,rk3588-usb2phy-grf
+               - rockchip,rv1108-grf
+               - rockchip,rv1108-pmugrf
+               - rockchip,rv1126-grf
+@@ -199,6 +200,7 @@ allOf:
+               - rockchip,rk3308-usb2phy-grf
+               - rockchip,rk3328-usb2phy-grf
+               - rockchip,rk3399-grf
++              - rockchip,rk3588-usb2phy-grf
+               - rockchip,rv1108-grf
+ 
+     then:
diff --git a/target/linux/rockchip/patches-6.1/209-dt-bindings-rockchip-thermal-Support-the-RK3588-SoC-.patch b/target/linux/rockchip/patches-6.1/209-dt-bindings-rockchip-thermal-Support-the-RK3588-SoC-.patch
new file mode 100644
index 0000000000..ca6c947a00
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/209-dt-bindings-rockchip-thermal-Support-the-RK3588-SoC-.patch
@@ -0,0 +1,28 @@
+From acbd67c1682d4563e2c3778f021c321478aec6f7 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 8 Mar 2023 12:22:53 +0100
+Subject: [PATCH 209/383] dt-bindings: rockchip-thermal: Support the RK3588 SoC
+ compatible
+
+Add a new compatible for the thermal sensor device on RK3588 SoCs.
+
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Link: https://lore.kernel.org/r/20230308112253.15659-8-sebastian.reichel@collabora.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/thermal/rockchip-thermal.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/thermal/rockchip-thermal.yaml
++++ b/Documentation/devicetree/bindings/thermal/rockchip-thermal.yaml
+@@ -19,6 +19,7 @@ properties:
+       - rockchip,rk3368-tsadc
+       - rockchip,rk3399-tsadc
+       - rockchip,rk3568-tsadc
++      - rockchip,rk3588-tsadc
+       - rockchip,rv1108-tsadc
+ 
+   reg:
diff --git a/target/linux/rockchip/patches-6.1/210-dt-bindings-timer-rockchip-Add-rockchip-rk3128-timer.patch b/target/linux/rockchip/patches-6.1/210-dt-bindings-timer-rockchip-Add-rockchip-rk3128-timer.patch
new file mode 100644
index 0000000000..fb19661531
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/210-dt-bindings-timer-rockchip-Add-rockchip-rk3128-timer.patch
@@ -0,0 +1,28 @@
+From 289698c465f3351fa0b330f7ddf92e4ca5bfb854 Mon Sep 17 00:00:00 2001
+From: Johan Jonker <jbx6244@gmail.com>
+Date: Fri, 28 Oct 2022 16:41:30 +0200
+Subject: [PATCH 210/383] dt-bindings: timer: rockchip: Add
+ rockchip,rk3128-timer
+
+Add rockchip,rk3128-timer compatible string.
+
+Signed-off-by: Johan Jonker <jbx6244@gmail.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Daniel Lezcano <daniel.lezcano@kernel.org>
+Link: https://lore.kernel.org/r/0e57f38f-bace-8556-7258-aa0b3c0ac103@gmail.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml
++++ b/Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml
+@@ -18,6 +18,7 @@ properties:
+           - enum:
+               - rockchip,rv1108-timer
+               - rockchip,rk3036-timer
++              - rockchip,rk3128-timer
+               - rockchip,rk3188-timer
+               - rockchip,rk3228-timer
+               - rockchip,rk3229-timer
diff --git a/target/linux/rockchip/patches-6.1/211-dt-bindings-timer-rk-timer-Add-rktimer-for-rv1126.patch b/target/linux/rockchip/patches-6.1/211-dt-bindings-timer-rk-timer-Add-rktimer-for-rv1126.patch
new file mode 100644
index 0000000000..d30e2f38c8
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/211-dt-bindings-timer-rk-timer-Add-rktimer-for-rv1126.patch
@@ -0,0 +1,26 @@
+From e8cb207d78a65204ce7ba71af460dec49ee587bd Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@edgeble.ai>
+Date: Thu, 24 Nov 2022 00:01:18 +0530
+Subject: [PATCH 211/383] dt-bindings: timer: rk-timer: Add rktimer for rv1126
+
+Add rockchip timer compatible string for rockchip rv1126.
+
+Signed-off-by: Jagan Teki <jagan@edgeble.ai>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20221123183124.6911-3-jagan@edgeble.ai
+Signed-off-by: Daniel Lezcano <daniel.lezcano@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml
++++ b/Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml
+@@ -17,6 +17,7 @@ properties:
+       - items:
+           - enum:
+               - rockchip,rv1108-timer
++              - rockchip,rv1126-timer
+               - rockchip,rk3036-timer
+               - rockchip,rk3128-timer
+               - rockchip,rk3188-timer
diff --git a/target/linux/rockchip/patches-6.1/212-dt-bindings-timer-rockchip-Drop-superfluous-rk3288-c.patch b/target/linux/rockchip/patches-6.1/212-dt-bindings-timer-rockchip-Drop-superfluous-rk3288-c.patch
new file mode 100644
index 0000000000..1e790c0466
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/212-dt-bindings-timer-rockchip-Drop-superfluous-rk3288-c.patch
@@ -0,0 +1,40 @@
+From 8595bd3140a00cdd20a43453199f3b4a1223ebae Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Wed, 19 Apr 2023 21:13:07 +0300
+Subject: [PATCH 212/383] dt-bindings: timer: rockchip: Drop superfluous rk3288
+ compatible
+
+The compatible string for Rockchip RK3288 is wrongly provided in the
+'enum' item, in addition to the subsequent 'const', which allows the
+usage of an incorrect specification:
+
+  compatible = "rockchip,rk3288-timer", "rockchip,rk3288-timer";
+
+As the rk3288 string is also specified in the top-most 'const' item, the
+binding already allows the usage of the correct variant:
+
+  compatible = "rockchip,rk3288-timer";
+
+Drop the unwanted rk3288 entry from the enum.
+
+Fixes: faa186adbd06 ("dt-bindings: timer: convert rockchip,rk-timer.txt to YAML")
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Link: https://lore.kernel.org/r/20230419181309.338354-2-cristian.ciocaltea@collabora.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml | 1 -
+ 1 file changed, 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml
++++ b/Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml
+@@ -23,7 +23,6 @@ properties:
+               - rockchip,rk3188-timer
+               - rockchip,rk3228-timer
+               - rockchip,rk3229-timer
+-              - rockchip,rk3288-timer
+               - rockchip,rk3368-timer
+               - rockchip,px30-timer
+           - const: rockchip,rk3288-timer
diff --git a/target/linux/rockchip/patches-6.1/213-dt-bindings-timer-rockchip-Add-rk3588-compatible.patch b/target/linux/rockchip/patches-6.1/213-dt-bindings-timer-rockchip-Add-rk3588-compatible.patch
new file mode 100644
index 0000000000..d1db22f58d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/213-dt-bindings-timer-rockchip-Add-rk3588-compatible.patch
@@ -0,0 +1,27 @@
+From c59821c362910fc1f773a36577aec17c29f061dc Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Wed, 19 Apr 2023 21:13:08 +0300
+Subject: [PATCH 213/383] dt-bindings: timer: rockchip: Add rk3588 compatible
+
+Add compatible string for Rockchip RK3588 timer.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Link: https://lore.kernel.org/r/20230419181309.338354-3-cristian.ciocaltea@collabora.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml
++++ b/Documentation/devicetree/bindings/timer/rockchip,rk-timer.yaml
+@@ -24,6 +24,7 @@ properties:
+               - rockchip,rk3228-timer
+               - rockchip,rk3229-timer
+               - rockchip,rk3368-timer
++              - rockchip,rk3588-timer
+               - rockchip,px30-timer
+           - const: rockchip,rk3288-timer
+   reg:
diff --git a/target/linux/rockchip/patches-6.1/214-dt-bindings-usb-rockchip-dwc3-Move-RK3399-to-its-own.patch b/target/linux/rockchip/patches-6.1/214-dt-bindings-usb-rockchip-dwc3-Move-RK3399-to-its-own.patch
new file mode 100644
index 0000000000..63bfc50240
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/214-dt-bindings-usb-rockchip-dwc3-Move-RK3399-to-its-own.patch
@@ -0,0 +1,186 @@
+From 36e89e629736513666902e0a0e6a1c9d4eb54da1 Mon Sep 17 00:00:00 2001
+From: Rob Herring <robh@kernel.org>
+Date: Mon, 23 Jan 2023 20:59:36 -0600
+Subject: [PATCH 214/383] dt-bindings: usb: rockchip,dwc3: Move RK3399 to its
+ own schema
+
+The rockchip,dwc3.yaml schema defines a single DWC3 node, but the RK3399
+uses the discouraged parent wrapper node and child 'generic' DWC3 node.
+The intent was to modify the RK3399 DTs to use a single node, but the DT
+changes were rejected for ABI reasons. However, the schema was accepted
+as-is.
+
+To fix this, we need to move the RK3399 binding to its own schema file.
+The RK3328 and RK3568 bindings are correct and use a single node.
+
+Cc: Johan Jonker <jbx6244@gmail.com>
+Signed-off-by: Rob Herring <robh@kernel.org>
+Link: https://lore.kernel.org/r/20230124025936.3256213-2-robh@kernel.org
+Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/usb/rockchip,dwc3.yaml           |  10 +-
+ .../bindings/usb/rockchip,rk3399-dwc3.yaml    | 115 ++++++++++++++++++
+ 2 files changed, 119 insertions(+), 6 deletions(-)
+ create mode 100644 Documentation/devicetree/bindings/usb/rockchip,rk3399-dwc3.yaml
+
+--- a/Documentation/devicetree/bindings/usb/rockchip,dwc3.yaml
++++ b/Documentation/devicetree/bindings/usb/rockchip,dwc3.yaml
+@@ -29,7 +29,6 @@ select:
+       contains:
+         enum:
+           - rockchip,rk3328-dwc3
+-          - rockchip,rk3399-dwc3
+           - rockchip,rk3568-dwc3
+   required:
+     - compatible
+@@ -39,7 +38,6 @@ properties:
+     items:
+       - enum:
+           - rockchip,rk3328-dwc3
+-          - rockchip,rk3399-dwc3
+           - rockchip,rk3568-dwc3
+       - const: snps,dwc3
+ 
+@@ -90,7 +88,7 @@ required:
+ 
+ examples:
+   - |
+-    #include <dt-bindings/clock/rk3399-cru.h>
++    #include <dt-bindings/clock/rk3328-cru.h>
+     #include <dt-bindings/interrupt-controller/arm-gic.h>
+ 
+     bus {
+@@ -98,11 +96,11 @@ examples:
+       #size-cells = <2>;
+ 
+       usbdrd3_0: usb@fe800000 {
+-        compatible = "rockchip,rk3399-dwc3", "snps,dwc3";
++        compatible = "rockchip,rk3328-dwc3", "snps,dwc3";
+         reg = <0x0 0xfe800000 0x0 0x100000>;
+         interrupts = <GIC_SPI 105 IRQ_TYPE_LEVEL_HIGH>;
+-        clocks = <&cru SCLK_USB3OTG0_REF>, <&cru SCLK_USB3OTG0_SUSPEND>,
+-                 <&cru ACLK_USB3OTG0>, <&cru ACLK_USB3_GRF>;
++        clocks = <&cru SCLK_USB3OTG_REF>, <&cru SCLK_USB3OTG_SUSPEND>,
++                 <&cru ACLK_USB3OTG>;
+         clock-names = "ref_clk", "suspend_clk",
+                       "bus_clk", "grf_clk";
+         dr_mode = "otg";
+--- /dev/null
++++ b/Documentation/devicetree/bindings/usb/rockchip,rk3399-dwc3.yaml
+@@ -0,0 +1,115 @@
++# SPDX-License-Identifier: GPL-2.0
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/usb/rockchip,rk3399-dwc3.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip RK3399 SuperSpeed DWC3 USB SoC controller
++
++maintainers:
++  - Heiko Stuebner <heiko@sntech.de>
++
++properties:
++  compatible:
++    const: rockchip,rk3399-dwc3
++
++  '#address-cells':
++    const: 2
++
++  '#size-cells':
++    const: 2
++
++  ranges: true
++
++  clocks:
++    items:
++      - description:
++          Controller reference clock, must to be 24 MHz
++      - description:
++          Controller suspend clock, must to be 24 MHz or 32 KHz
++      - description:
++          Master/Core clock, must to be >= 62.5 MHz for SS
++          operation and >= 30MHz for HS operation
++      - description:
++          USB3 aclk peri
++      - description:
++          USB3 aclk
++      - description:
++          Controller grf clock
++
++  clock-names:
++    items:
++      - const: ref_clk
++      - const: suspend_clk
++      - const: bus_clk
++      - const: aclk_usb3_rksoc_axi_perf
++      - const: aclk_usb3
++      - const: grf_clk
++
++  resets:
++    maxItems: 1
++
++  reset-names:
++    const: usb3-otg
++
++patternProperties:
++  '^usb@':
++    $ref: snps,dwc3.yaml#
++
++additionalProperties: false
++
++required:
++  - compatible
++  - '#address-cells'
++  - '#size-cells'
++  - ranges
++  - clocks
++  - clock-names
++  - resets
++  - reset-names
++
++examples:
++  - |
++    #include <dt-bindings/clock/rk3399-cru.h>
++    #include <dt-bindings/power/rk3399-power.h>
++    #include <dt-bindings/interrupt-controller/arm-gic.h>
++
++    bus {
++        #address-cells = <2>;
++        #size-cells = <2>;
++
++        usb {
++            compatible = "rockchip,rk3399-dwc3";
++            #address-cells = <2>;
++            #size-cells = <2>;
++            ranges;
++            clocks = <&cru SCLK_USB3OTG0_REF>, <&cru SCLK_USB3OTG0_SUSPEND>,
++                     <&cru ACLK_USB3OTG0>, <&cru ACLK_USB3_RKSOC_AXI_PERF>,
++                     <&cru ACLK_USB3>, <&cru ACLK_USB3_GRF>;
++            clock-names = "ref_clk", "suspend_clk",
++                          "bus_clk", "aclk_usb3_rksoc_axi_perf",
++                          "aclk_usb3", "grf_clk";
++            resets = <&cru SRST_A_USB3_OTG0>;
++            reset-names = "usb3-otg";
++
++            usb@fe800000 {
++                compatible = "snps,dwc3";
++                reg = <0x0 0xfe800000 0x0 0x100000>;
++                interrupts = <GIC_SPI 105 IRQ_TYPE_LEVEL_HIGH 0>;
++                clocks = <&cru SCLK_USB3OTG0_REF>, <&cru ACLK_USB3OTG0>,
++                         <&cru SCLK_USB3OTG0_SUSPEND>;
++                clock-names = "ref", "bus_early", "suspend";
++                dr_mode = "otg";
++                phys = <&u2phy0_otg>, <&tcphy0_usb3>;
++                phy-names = "usb2-phy", "usb3-phy";
++                phy_type = "utmi_wide";
++                snps,dis_enblslpm_quirk;
++                snps,dis-u2-freeclk-exists-quirk;
++                snps,dis_u2_susphy_quirk;
++                snps,dis-del-phy-power-chg-quirk;
++                snps,dis-tx-ipgap-linecheck-quirk;
++                power-domains = <&power RK3399_PD_USB3>;
++            };
++        };
++    };
++...
diff --git a/target/linux/rockchip/patches-6.1/215-clk-rockchip-add-register-offset-of-the-cores-select.patch b/target/linux/rockchip/patches-6.1/215-clk-rockchip-add-register-offset-of-the-cores-select.patch
new file mode 100644
index 0000000000..675540770f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/215-clk-rockchip-add-register-offset-of-the-cores-select.patch
@@ -0,0 +1,81 @@
+From 213cd57683805c67f3271263a034a3716afe0bfb Mon Sep 17 00:00:00 2001
+From: Elaine Zhang <zhangqing@rock-chips.com>
+Date: Tue, 18 Oct 2022 17:14:02 +0200
+Subject: [PATCH 215/383] clk: rockchip: add register offset of the cores
+ select parent
+
+The cores select parent register is special on RK3588.
+
+Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221018151407.63395-5-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/rockchip/clk-cpu.c | 28 ++++++++++++++++++++--------
+ drivers/clk/rockchip/clk.h     |  3 +++
+ 2 files changed, 23 insertions(+), 8 deletions(-)
+
+--- a/drivers/clk/rockchip/clk-cpu.c
++++ b/drivers/clk/rockchip/clk-cpu.c
+@@ -166,10 +166,16 @@ static int rockchip_cpuclk_pre_rate_chan
+ 		}
+ 	}
+ 	/* select alternate parent */
+-	writel(HIWORD_UPDATE(reg_data->mux_core_alt,
+-			     reg_data->mux_core_mask,
+-			     reg_data->mux_core_shift),
+-	       cpuclk->reg_base + reg_data->core_reg[0]);
++	if (reg_data->mux_core_reg)
++		writel(HIWORD_UPDATE(reg_data->mux_core_alt,
++				     reg_data->mux_core_mask,
++				     reg_data->mux_core_shift),
++		       cpuclk->reg_base + reg_data->mux_core_reg);
++	else
++		writel(HIWORD_UPDATE(reg_data->mux_core_alt,
++				     reg_data->mux_core_mask,
++				     reg_data->mux_core_shift),
++		       cpuclk->reg_base + reg_data->core_reg[0]);
+ 
+ 	spin_unlock_irqrestore(cpuclk->lock, flags);
+ 	return 0;
+@@ -202,10 +208,16 @@ static int rockchip_cpuclk_post_rate_cha
+ 	 * primary parent by the extra dividers that were needed for the alt.
+ 	 */
+ 
+-	writel(HIWORD_UPDATE(reg_data->mux_core_main,
+-			     reg_data->mux_core_mask,
+-			     reg_data->mux_core_shift),
+-	       cpuclk->reg_base + reg_data->core_reg[0]);
++	if (reg_data->mux_core_reg)
++		writel(HIWORD_UPDATE(reg_data->mux_core_main,
++				     reg_data->mux_core_mask,
++				     reg_data->mux_core_shift),
++		       cpuclk->reg_base + reg_data->mux_core_reg);
++	else
++		writel(HIWORD_UPDATE(reg_data->mux_core_main,
++				     reg_data->mux_core_mask,
++				     reg_data->mux_core_shift),
++		       cpuclk->reg_base + reg_data->core_reg[0]);
+ 
+ 	/* remove dividers */
+ 	for (i = 0; i < reg_data->num_cores; i++) {
+--- a/drivers/clk/rockchip/clk.h
++++ b/drivers/clk/rockchip/clk.h
+@@ -389,6 +389,8 @@ struct rockchip_cpuclk_rate_table {
+  * @div_core_shift[]:	cores divider offset used to divide the pll value
+  * @div_core_mask[]:	cores divider mask
+  * @num_cores:	number of cpu cores
++ * @mux_core_reg:       register offset of the cores select parent
++ * @mux_core_alt:       mux value to select alternate parent
+  * @mux_core_main:	mux value to select main parent of core
+  * @mux_core_shift:	offset of the core multiplexer
+  * @mux_core_mask:	core multiplexer mask
+@@ -398,6 +400,7 @@ struct rockchip_cpuclk_reg_data {
+ 	u8	div_core_shift[ROCKCHIP_CPUCLK_MAX_CORES];
+ 	u32	div_core_mask[ROCKCHIP_CPUCLK_MAX_CORES];
+ 	int	num_cores;
++	int	mux_core_reg;
+ 	u8	mux_core_alt;
+ 	u8	mux_core_main;
+ 	u8	mux_core_shift;
diff --git a/target/linux/rockchip/patches-6.1/216-clk-rockchip-add-pll-type-for-RK3588.patch b/target/linux/rockchip/patches-6.1/216-clk-rockchip-add-pll-type-for-RK3588.patch
new file mode 100644
index 0000000000..a5566faa72
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/216-clk-rockchip-add-pll-type-for-RK3588.patch
@@ -0,0 +1,301 @@
+From e8e23381852477cef6c4c21772732b09604959c9 Mon Sep 17 00:00:00 2001
+From: Elaine Zhang <zhangqing@rock-chips.com>
+Date: Tue, 18 Oct 2022 17:14:03 +0200
+Subject: [PATCH 216/383] clk: rockchip: add pll type for RK3588
+
+Add RK3588 PLL support fully relying on lookup tables like
+the other upstream supported rockchip platforms.
+
+Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>
+[rebase and modify code to avoid PLL parameter calculation]
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221018151407.63395-6-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/rockchip/clk-pll.c | 218 ++++++++++++++++++++++++++++++++-
+ drivers/clk/rockchip/clk.h     |  18 +++
+ 2 files changed, 235 insertions(+), 1 deletion(-)
+
+--- a/drivers/clk/rockchip/clk-pll.c
++++ b/drivers/clk/rockchip/clk-pll.c
+@@ -843,6 +843,213 @@ static const struct clk_ops rockchip_rk3
+ };
+ 
+ /*
++ * PLL used in RK3588
++ */
++
++#define RK3588_PLLCON(i)               (i * 0x4)
++#define RK3588_PLLCON0_M_MASK          0x3ff
++#define RK3588_PLLCON0_M_SHIFT         0
++#define RK3588_PLLCON1_P_MASK          0x3f
++#define RK3588_PLLCON1_P_SHIFT         0
++#define RK3588_PLLCON1_S_MASK          0x7
++#define RK3588_PLLCON1_S_SHIFT         6
++#define RK3588_PLLCON2_K_MASK          0xffff
++#define RK3588_PLLCON2_K_SHIFT         0
++#define RK3588_PLLCON1_PWRDOWN         BIT(13)
++#define RK3588_PLLCON6_LOCK_STATUS     BIT(15)
++
++static int rockchip_rk3588_pll_wait_lock(struct rockchip_clk_pll *pll)
++{
++	u32 pllcon;
++	int ret;
++
++	/*
++	 * Lock time typical 250, max 500 input clock cycles @24MHz
++	 * So define a very safe maximum of 1000us, meaning 24000 cycles.
++	 */
++	ret = readl_relaxed_poll_timeout(pll->reg_base + RK3588_PLLCON(6),
++					 pllcon,
++					 pllcon & RK3588_PLLCON6_LOCK_STATUS,
++					 0, 1000);
++	if (ret)
++		pr_err("%s: timeout waiting for pll to lock\n", __func__);
++
++	return ret;
++}
++
++static void rockchip_rk3588_pll_get_params(struct rockchip_clk_pll *pll,
++					   struct rockchip_pll_rate_table *rate)
++{
++	u32 pllcon;
++
++	pllcon = readl_relaxed(pll->reg_base + RK3588_PLLCON(0));
++	rate->m = ((pllcon >> RK3588_PLLCON0_M_SHIFT) & RK3588_PLLCON0_M_MASK);
++
++	pllcon = readl_relaxed(pll->reg_base + RK3588_PLLCON(1));
++	rate->p = ((pllcon >> RK3588_PLLCON1_P_SHIFT) & RK3588_PLLCON1_P_MASK);
++	rate->s = ((pllcon >> RK3588_PLLCON1_S_SHIFT) & RK3588_PLLCON1_S_MASK);
++
++	pllcon = readl_relaxed(pll->reg_base + RK3588_PLLCON(2));
++	rate->k = ((pllcon >> RK3588_PLLCON2_K_SHIFT) & RK3588_PLLCON2_K_MASK);
++}
++
++static unsigned long rockchip_rk3588_pll_recalc_rate(struct clk_hw *hw, unsigned long prate)
++{
++	struct rockchip_clk_pll *pll = to_rockchip_clk_pll(hw);
++	struct rockchip_pll_rate_table cur;
++	u64 rate64 = prate, postdiv;
++
++	rockchip_rk3588_pll_get_params(pll, &cur);
++
++	rate64 *= cur.m;
++	do_div(rate64, cur.p);
++
++	if (cur.k) {
++		/* fractional mode */
++		u64 frac_rate64 = prate * cur.k;
++
++		postdiv = cur.p * 65535;
++		do_div(frac_rate64, postdiv);
++		rate64 += frac_rate64;
++	}
++	rate64 = rate64 >> cur.s;
++
++	return (unsigned long)rate64;
++}
++
++static int rockchip_rk3588_pll_set_params(struct rockchip_clk_pll *pll,
++					  const struct rockchip_pll_rate_table *rate)
++{
++	const struct clk_ops *pll_mux_ops = pll->pll_mux_ops;
++	struct clk_mux *pll_mux = &pll->pll_mux;
++	struct rockchip_pll_rate_table cur;
++	int rate_change_remuxed = 0;
++	int cur_parent;
++	int ret;
++
++	pr_debug("%s: rate settings for %lu p: %d, m: %d, s: %d, k: %d\n",
++		 __func__, rate->rate, rate->p, rate->m, rate->s, rate->k);
++
++	rockchip_rk3588_pll_get_params(pll, &cur);
++	cur.rate = 0;
++
++	if (pll->type == pll_rk3588) {
++		cur_parent = pll_mux_ops->get_parent(&pll_mux->hw);
++		if (cur_parent == PLL_MODE_NORM) {
++			pll_mux_ops->set_parent(&pll_mux->hw, PLL_MODE_SLOW);
++			rate_change_remuxed = 1;
++		}
++	}
++
++	/* set pll power down */
++	writel(HIWORD_UPDATE(RK3588_PLLCON1_PWRDOWN,
++			     RK3588_PLLCON1_PWRDOWN, 0),
++	       pll->reg_base + RK3399_PLLCON(1));
++
++	/* update pll values */
++	writel_relaxed(HIWORD_UPDATE(rate->m, RK3588_PLLCON0_M_MASK, RK3588_PLLCON0_M_SHIFT),
++		       pll->reg_base + RK3399_PLLCON(0));
++
++	writel_relaxed(HIWORD_UPDATE(rate->p, RK3588_PLLCON1_P_MASK, RK3588_PLLCON1_P_SHIFT) |
++		       HIWORD_UPDATE(rate->s, RK3588_PLLCON1_S_MASK, RK3588_PLLCON1_S_SHIFT),
++		       pll->reg_base + RK3399_PLLCON(1));
++
++	writel_relaxed(HIWORD_UPDATE(rate->k, RK3588_PLLCON2_K_MASK, RK3588_PLLCON2_K_SHIFT),
++		       pll->reg_base + RK3399_PLLCON(2));
++
++	/* set pll power up */
++	writel(HIWORD_UPDATE(0, RK3588_PLLCON1_PWRDOWN, 0),
++	       pll->reg_base + RK3588_PLLCON(1));
++
++	/* wait for the pll to lock */
++	ret = rockchip_rk3588_pll_wait_lock(pll);
++	if (ret) {
++		pr_warn("%s: pll update unsuccessful, trying to restore old params\n",
++			__func__);
++		rockchip_rk3588_pll_set_params(pll, &cur);
++	}
++
++	if ((pll->type == pll_rk3588) && rate_change_remuxed)
++		pll_mux_ops->set_parent(&pll_mux->hw, PLL_MODE_NORM);
++
++	return ret;
++}
++
++static int rockchip_rk3588_pll_set_rate(struct clk_hw *hw, unsigned long drate,
++					unsigned long prate)
++{
++	struct rockchip_clk_pll *pll = to_rockchip_clk_pll(hw);
++	const struct rockchip_pll_rate_table *rate;
++
++	pr_debug("%s: changing %s to %lu with a parent rate of %lu\n",
++		 __func__, __clk_get_name(hw->clk), drate, prate);
++
++	/* Get required rate settings from table */
++	rate = rockchip_get_pll_settings(pll, drate);
++	if (!rate) {
++		pr_err("%s: Invalid rate : %lu for pll clk %s\n", __func__,
++			drate, __clk_get_name(hw->clk));
++		return -EINVAL;
++	}
++
++	return rockchip_rk3588_pll_set_params(pll, rate);
++}
++
++static int rockchip_rk3588_pll_enable(struct clk_hw *hw)
++{
++	struct rockchip_clk_pll *pll = to_rockchip_clk_pll(hw);
++
++	writel(HIWORD_UPDATE(0, RK3588_PLLCON1_PWRDOWN, 0),
++	       pll->reg_base + RK3588_PLLCON(1));
++	rockchip_rk3588_pll_wait_lock(pll);
++
++	return 0;
++}
++
++static void rockchip_rk3588_pll_disable(struct clk_hw *hw)
++{
++	struct rockchip_clk_pll *pll = to_rockchip_clk_pll(hw);
++
++	writel(HIWORD_UPDATE(RK3588_PLLCON1_PWRDOWN, RK3588_PLLCON1_PWRDOWN, 0),
++	       pll->reg_base + RK3588_PLLCON(1));
++}
++
++static int rockchip_rk3588_pll_is_enabled(struct clk_hw *hw)
++{
++	struct rockchip_clk_pll *pll = to_rockchip_clk_pll(hw);
++	u32 pllcon = readl(pll->reg_base + RK3588_PLLCON(1));
++
++	return !(pllcon & RK3588_PLLCON1_PWRDOWN);
++}
++
++static int rockchip_rk3588_pll_init(struct clk_hw *hw)
++{
++	struct rockchip_clk_pll *pll = to_rockchip_clk_pll(hw);
++
++	if (!(pll->flags & ROCKCHIP_PLL_SYNC_RATE))
++		return 0;
++
++	return 0;
++}
++
++static const struct clk_ops rockchip_rk3588_pll_clk_norate_ops = {
++	.recalc_rate = rockchip_rk3588_pll_recalc_rate,
++	.enable = rockchip_rk3588_pll_enable,
++	.disable = rockchip_rk3588_pll_disable,
++	.is_enabled = rockchip_rk3588_pll_is_enabled,
++};
++
++static const struct clk_ops rockchip_rk3588_pll_clk_ops = {
++	.recalc_rate = rockchip_rk3588_pll_recalc_rate,
++	.round_rate = rockchip_pll_round_rate,
++	.set_rate = rockchip_rk3588_pll_set_rate,
++	.enable = rockchip_rk3588_pll_enable,
++	.disable = rockchip_rk3588_pll_disable,
++	.is_enabled = rockchip_rk3588_pll_is_enabled,
++	.init = rockchip_rk3588_pll_init,
++};
++
++/*
+  * Common registering of pll clocks
+  */
+ 
+@@ -890,7 +1097,8 @@ struct clk *rockchip_clk_register_pll(st
+ 	if (pll_type == pll_rk3036 ||
+ 	    pll_type == pll_rk3066 ||
+ 	    pll_type == pll_rk3328 ||
+-	    pll_type == pll_rk3399)
++	    pll_type == pll_rk3399 ||
++	    pll_type == pll_rk3588)
+ 		pll_mux->flags |= CLK_MUX_HIWORD_MASK;
+ 
+ 	/* the actual muxing is xin24m, pll-output, xin32k */
+@@ -957,6 +1165,14 @@ struct clk *rockchip_clk_register_pll(st
+ 		else
+ 			init.ops = &rockchip_rk3399_pll_clk_ops;
+ 		break;
++	case pll_rk3588:
++	case pll_rk3588_core:
++		if (!pll->rate_table)
++			init.ops = &rockchip_rk3588_pll_clk_norate_ops;
++		else
++			init.ops = &rockchip_rk3588_pll_clk_ops;
++		init.flags = flags;
++		break;
+ 	default:
+ 		pr_warn("%s: Unknown pll type for pll clk %s\n",
+ 			__func__, name);
+--- a/drivers/clk/rockchip/clk.h
++++ b/drivers/clk/rockchip/clk.h
+@@ -240,6 +240,8 @@ enum rockchip_pll_type {
+ 	pll_rk3066,
+ 	pll_rk3328,
+ 	pll_rk3399,
++	pll_rk3588,
++	pll_rk3588_core,
+ };
+ 
+ #define RK3036_PLL_RATE(_rate, _refdiv, _fbdiv, _postdiv1,	\
+@@ -272,6 +274,15 @@ enum rockchip_pll_type {
+ 	.nb = _nb,						\
+ }
+ 
++#define RK3588_PLL_RATE(_rate, _p, _m, _s, _k)			\
++{								\
++	.rate   = _rate##U,					\
++	.p = _p,						\
++	.m = _m,						\
++	.s = _s,						\
++	.k = _k,						\
++}
++
+ /**
+  * struct rockchip_clk_provider - information about clock provider
+  * @reg_base: virtual address for the register base.
+@@ -307,6 +318,13 @@ struct rockchip_pll_rate_table {
+ 			unsigned int dsmpd;
+ 			unsigned int frac;
+ 		};
++		struct {
++			/* for RK3588 */
++			unsigned int m;
++			unsigned int p;
++			unsigned int s;
++			unsigned int k;
++		};
+ 	};
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/217-clk-rockchip-allow-additional-mux-options-for-cpu-cl.patch b/target/linux/rockchip/patches-6.1/217-clk-rockchip-allow-additional-mux-options-for-cpu-cl.patch
new file mode 100644
index 0000000000..5b34909257
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/217-clk-rockchip-allow-additional-mux-options-for-cpu-cl.patch
@@ -0,0 +1,123 @@
+From 7942aa7e188ebaa3bdb1677ef729969c9612e0e3 Mon Sep 17 00:00:00 2001
+From: Elaine Zhang <zhangqing@rock-chips.com>
+Date: Tue, 18 Oct 2022 17:14:04 +0200
+Subject: [PATCH 217/383] clk: rockchip: allow additional mux options for
+ cpu-clock frequency changes
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+In order to improve the main frequency of CPU, the clock path of CPU is
+simplified as follows:
+                         |--\
+                         |   \            |--\
+ --apll--|\              |    \           |   \
+         | |--apll_core--|     \          |    \
+ --24M---|/              |mux1 |--[gate]--|mux2|---clk_core
+                         |     /          |    /
+ --gpll--|\              |    /    |------|   /
+         | |--gpll_core--|   /     |      |--/
+ --24M---|/              |--/      |
+                                   |
+ -------apll_directly--------------|
+
+When the CPU requests high frequency, we want to use MUX2 select the
+"apll_directly".
+At low frequencies use MUX1 to select “apll_core" and then MUX2 to
+select "apll_core_gate".
+
+However, in this way, the CPU frequency conversion needs to be
+in the following order:
+1. MUX2 select to "apll_core_gate", MUX1 select "gpll_core"
+2. Apll sets slow_mode, sets APLL parameters, locks APLL, and then APLL
+sets normal_mode
+3. MUX1 select "apll_core", MUX2 select "apll_directly"
+
+So add pre_mux and post_mux options to cover this special requirements.
+
+Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>
+[rebase]
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221018151407.63395-7-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/rockchip/clk-cpu.c | 41 ++++++++++++++++++++++++++++++++++
+ drivers/clk/rockchip/clk.h     |  2 ++
+ 2 files changed, 43 insertions(+)
+
+--- a/drivers/clk/rockchip/clk-cpu.c
++++ b/drivers/clk/rockchip/clk-cpu.c
+@@ -113,6 +113,42 @@ static void rockchip_cpuclk_set_dividers
+ 	}
+ }
+ 
++static void rockchip_cpuclk_set_pre_muxs(struct rockchip_cpuclk *cpuclk,
++					 const struct rockchip_cpuclk_rate_table *rate)
++{
++	int i;
++
++	/* alternate parent is active now. set the pre_muxs */
++	for (i = 0; i < ARRAY_SIZE(rate->pre_muxs); i++) {
++		const struct rockchip_cpuclk_clksel *clksel = &rate->pre_muxs[i];
++
++		if (!clksel->reg)
++			break;
++
++		pr_debug("%s: setting reg 0x%x to 0x%x\n",
++			 __func__, clksel->reg, clksel->val);
++		writel(clksel->val, cpuclk->reg_base + clksel->reg);
++	}
++}
++
++static void rockchip_cpuclk_set_post_muxs(struct rockchip_cpuclk *cpuclk,
++					  const struct rockchip_cpuclk_rate_table *rate)
++{
++	int i;
++
++	/* alternate parent is active now. set the muxs */
++	for (i = 0; i < ARRAY_SIZE(rate->post_muxs); i++) {
++		const struct rockchip_cpuclk_clksel *clksel = &rate->post_muxs[i];
++
++		if (!clksel->reg)
++			break;
++
++		pr_debug("%s: setting reg 0x%x to 0x%x\n",
++			 __func__, clksel->reg, clksel->val);
++		writel(clksel->val, cpuclk->reg_base + clksel->reg);
++	}
++}
++
+ static int rockchip_cpuclk_pre_rate_change(struct rockchip_cpuclk *cpuclk,
+ 					   struct clk_notifier_data *ndata)
+ {
+@@ -165,6 +201,9 @@ static int rockchip_cpuclk_pre_rate_chan
+ 			       cpuclk->reg_base + reg_data->core_reg[i]);
+ 		}
+ 	}
++
++	rockchip_cpuclk_set_pre_muxs(cpuclk, rate);
++
+ 	/* select alternate parent */
+ 	if (reg_data->mux_core_reg)
+ 		writel(HIWORD_UPDATE(reg_data->mux_core_alt,
+@@ -219,6 +258,8 @@ static int rockchip_cpuclk_post_rate_cha
+ 				     reg_data->mux_core_shift),
+ 		       cpuclk->reg_base + reg_data->core_reg[0]);
+ 
++	rockchip_cpuclk_set_post_muxs(cpuclk, rate);
++
+ 	/* remove dividers */
+ 	for (i = 0; i < reg_data->num_cores; i++) {
+ 		writel(HIWORD_UPDATE(0, reg_data->div_core_mask[i],
+--- a/drivers/clk/rockchip/clk.h
++++ b/drivers/clk/rockchip/clk.h
+@@ -399,6 +399,8 @@ struct rockchip_cpuclk_clksel {
+ struct rockchip_cpuclk_rate_table {
+ 	unsigned long prate;
+ 	struct rockchip_cpuclk_clksel divs[ROCKCHIP_CPUCLK_NUM_DIVIDERS];
++	struct rockchip_cpuclk_clksel pre_muxs[ROCKCHIP_CPUCLK_NUM_DIVIDERS];
++	struct rockchip_cpuclk_clksel post_muxs[ROCKCHIP_CPUCLK_NUM_DIVIDERS];
+ };
+ 
+ /**
diff --git a/target/linux/rockchip/patches-6.1/218-clk-rockchip-simplify-rockchip_clk_add_lookup.patch b/target/linux/rockchip/patches-6.1/218-clk-rockchip-simplify-rockchip_clk_add_lookup.patch
new file mode 100644
index 0000000000..779aab6308
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/218-clk-rockchip-simplify-rockchip_clk_add_lookup.patch
@@ -0,0 +1,73 @@
+From 37bf5284d424b395e804f8a93ce4b262998966c6 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 18 Oct 2022 17:14:05 +0200
+Subject: [PATCH 218/383] clk: rockchip: simplify rockchip_clk_add_lookup
+
+rockchip_clk_add_lookup is only called from within the file,
+so it can be made static. The additional checks are removed
+with the following reasoning:
+
+1. The data structure is initialized by rockchip_clk_init(),
+   which is called by all rockchip platforms before the clocks
+   are registered. Not doing so would result in an incomplete
+   clock tree at the moment, which is a fatal error. In other
+   parts of the kernel these kind of checks are usually
+   omitted, so this was done here. The alternative is adding
+   a pr_err to inform the kernel programmer adding a new platform
+   about his incorrect code. Apart from that we are also not
+   checking if the clock id is within the array boundings.
+
+2. While not used so far by any rockchip platform, 0 is a valid
+   clock identifier. To align rockchip closer to other ARM
+   platforms we will start using it with rk3588.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221018151407.63395-8-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/rockchip/clk.c | 14 ++++++--------
+ drivers/clk/rockchip/clk.h |  2 --
+ 2 files changed, 6 insertions(+), 10 deletions(-)
+
+--- a/drivers/clk/rockchip/clk.c
++++ b/drivers/clk/rockchip/clk.c
+@@ -198,6 +198,12 @@ static void rockchip_fractional_approxim
+ 	clk_fractional_divider_general_approximation(hw, rate, parent_rate, m, n);
+ }
+ 
++static void rockchip_clk_add_lookup(struct rockchip_clk_provider *ctx,
++				    struct clk *clk, unsigned int id)
++{
++	ctx->clk_data.clks[id] = clk;
++}
++
+ static struct clk *rockchip_clk_register_frac_branch(
+ 		struct rockchip_clk_provider *ctx, const char *name,
+ 		const char *const *parent_names, u8 num_parents,
+@@ -401,14 +407,6 @@ void rockchip_clk_of_add_provider(struct
+ }
+ EXPORT_SYMBOL_GPL(rockchip_clk_of_add_provider);
+ 
+-void rockchip_clk_add_lookup(struct rockchip_clk_provider *ctx,
+-			     struct clk *clk, unsigned int id)
+-{
+-	if (ctx->clk_data.clks && id)
+-		ctx->clk_data.clks[id] = clk;
+-}
+-EXPORT_SYMBOL_GPL(rockchip_clk_add_lookup);
+-
+ void rockchip_clk_register_plls(struct rockchip_clk_provider *ctx,
+ 				struct rockchip_pll_clock *list,
+ 				unsigned int nr_pll, int grf_lock_offset)
+--- a/drivers/clk/rockchip/clk.h
++++ b/drivers/clk/rockchip/clk.h
+@@ -928,8 +928,6 @@ struct rockchip_clk_provider *rockchip_c
+ 			void __iomem *base, unsigned long nr_clks);
+ void rockchip_clk_of_add_provider(struct device_node *np,
+ 				struct rockchip_clk_provider *ctx);
+-void rockchip_clk_add_lookup(struct rockchip_clk_provider *ctx,
+-			     struct clk *clk, unsigned int id);
+ void rockchip_clk_register_branches(struct rockchip_clk_provider *ctx,
+ 				    struct rockchip_clk_branch *list,
+ 				    unsigned int nr_clk);
diff --git a/target/linux/rockchip/patches-6.1/219-clk-rockchip-add-lookup-table-support.patch b/target/linux/rockchip/patches-6.1/219-clk-rockchip-add-lookup-table-support.patch
new file mode 100644
index 0000000000..4fc580ba20
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/219-clk-rockchip-add-lookup-table-support.patch
@@ -0,0 +1,131 @@
+From 4837f108f8c3a9a4a0c97b3b9a1988136012aba6 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 18 Oct 2022 17:14:06 +0200
+Subject: [PATCH 219/383] clk: rockchip: add lookup table support
+
+Add support for mapping reset IDs to register offsets
+to support gapless continous platform reset IDs.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221018151407.63395-9-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/rockchip/clk.h     | 21 +++++++++++++++------
+ drivers/clk/rockchip/softrst.c | 34 +++++++++++++++++++++++++---------
+ 2 files changed, 40 insertions(+), 15 deletions(-)
+
+--- a/drivers/clk/rockchip/clk.h
++++ b/drivers/clk/rockchip/clk.h
+@@ -958,15 +958,24 @@ struct clk *rockchip_clk_register_halfdi
+ 					  spinlock_t *lock);
+ 
+ #ifdef CONFIG_RESET_CONTROLLER
+-void rockchip_register_softrst(struct device_node *np,
+-			       unsigned int num_regs,
+-			       void __iomem *base, u8 flags);
++void rockchip_register_softrst_lut(struct device_node *np,
++				   const int *lookup_table,
++				   unsigned int num_regs,
++				   void __iomem *base, u8 flags);
+ #else
+-static inline void rockchip_register_softrst(struct device_node *np,
+-			       unsigned int num_regs,
+-			       void __iomem *base, u8 flags)
++static inline void rockchip_register_softrst_lut(struct device_node *np,
++				   const int *lookup_table,
++				   unsigned int num_regs,
++				   void __iomem *base, u8 flags)
+ {
+ }
+ #endif
+ 
++static inline void rockchip_register_softrst(struct device_node *np,
++					     unsigned int num_regs,
++					     void __iomem *base, u8 flags)
++{
++	return rockchip_register_softrst_lut(np, NULL, num_regs, base, flags);
++}
++
+ #endif
+--- a/drivers/clk/rockchip/softrst.c
++++ b/drivers/clk/rockchip/softrst.c
+@@ -12,6 +12,7 @@
+ 
+ struct rockchip_softrst {
+ 	struct reset_controller_dev	rcdev;
++	const int			*lut;
+ 	void __iomem			*reg_base;
+ 	int				num_regs;
+ 	int				num_per_reg;
+@@ -25,8 +26,13 @@ static int rockchip_softrst_assert(struc
+ 	struct rockchip_softrst *softrst = container_of(rcdev,
+ 						     struct rockchip_softrst,
+ 						     rcdev);
+-	int bank = id / softrst->num_per_reg;
+-	int offset = id % softrst->num_per_reg;
++	int bank, offset;
++
++	if (softrst->lut)
++		id = softrst->lut[id];
++
++	bank = id / softrst->num_per_reg;
++	offset = id % softrst->num_per_reg;
+ 
+ 	if (softrst->flags & ROCKCHIP_SOFTRST_HIWORD_MASK) {
+ 		writel(BIT(offset) | (BIT(offset) << 16),
+@@ -52,8 +58,13 @@ static int rockchip_softrst_deassert(str
+ 	struct rockchip_softrst *softrst = container_of(rcdev,
+ 						     struct rockchip_softrst,
+ 						     rcdev);
+-	int bank = id / softrst->num_per_reg;
+-	int offset = id % softrst->num_per_reg;
++	int bank, offset;
++
++	if (softrst->lut)
++		id = softrst->lut[id];
++
++	bank = id / softrst->num_per_reg;
++	offset = id % softrst->num_per_reg;
+ 
+ 	if (softrst->flags & ROCKCHIP_SOFTRST_HIWORD_MASK) {
+ 		writel((BIT(offset) << 16), softrst->reg_base + (bank * 4));
+@@ -77,9 +88,10 @@ static const struct reset_control_ops ro
+ 	.deassert	= rockchip_softrst_deassert,
+ };
+ 
+-void rockchip_register_softrst(struct device_node *np,
+-			       unsigned int num_regs,
+-			       void __iomem *base, u8 flags)
++void rockchip_register_softrst_lut(struct device_node *np,
++				   const int *lookup_table,
++				   unsigned int num_regs,
++				   void __iomem *base, u8 flags)
+ {
+ 	struct rockchip_softrst *softrst;
+ 	int ret;
+@@ -91,13 +103,17 @@ void rockchip_register_softrst(struct de
+ 	spin_lock_init(&softrst->lock);
+ 
+ 	softrst->reg_base = base;
++	softrst->lut = lookup_table;
+ 	softrst->flags = flags;
+ 	softrst->num_regs = num_regs;
+ 	softrst->num_per_reg = (flags & ROCKCHIP_SOFTRST_HIWORD_MASK) ? 16
+ 								      : 32;
+ 
+ 	softrst->rcdev.owner = THIS_MODULE;
+-	softrst->rcdev.nr_resets =  num_regs * softrst->num_per_reg;
++	if (lookup_table)
++		softrst->rcdev.nr_resets = num_regs;
++	else
++		softrst->rcdev.nr_resets = num_regs * softrst->num_per_reg;
+ 	softrst->rcdev.ops = &rockchip_softrst_ops;
+ 	softrst->rcdev.of_node = np;
+ 	ret = reset_controller_register(&softrst->rcdev);
+@@ -107,4 +123,4 @@ void rockchip_register_softrst(struct de
+ 		kfree(softrst);
+ 	}
+ };
+-EXPORT_SYMBOL_GPL(rockchip_register_softrst);
++EXPORT_SYMBOL_GPL(rockchip_register_softrst_lut);
diff --git a/target/linux/rockchip/patches-6.1/220-clk-rockchip-add-clock-controller-for-the-RK3588.patch b/target/linux/rockchip/patches-6.1/220-clk-rockchip-add-clock-controller-for-the-RK3588.patch
new file mode 100644
index 0000000000..272dba7c43
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/220-clk-rockchip-add-clock-controller-for-the-RK3588.patch
@@ -0,0 +1,3517 @@
+From 9a59eacce9db21cc2de1dd7c0267c170ec674f92 Mon Sep 17 00:00:00 2001
+From: Elaine Zhang <zhangqing@rock-chips.com>
+Date: Tue, 18 Oct 2022 17:14:07 +0200
+Subject: [PATCH 220/383] clk: rockchip: add clock controller for the RK3588
+
+Add full clock controller support RK3588.
+
+[rebase, integrate fixes from Wyon and Finley, add missing frequencies
+ to PLL lookup table, update commit message, add GATE_LINK clocks which
+ downstream handles in its own driver with one DT node per clock]
+
+Signed-off-by: Wyon Bi <bivvy.bi@rock-chips.com>
+Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
+Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221018151407.63395-10-sebastian.reichel@collabora.com
+[dropped module stuff after talking to Sebastian]
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/rockchip/Kconfig      |    8 +
+ drivers/clk/rockchip/Makefile     |    1 +
+ drivers/clk/rockchip/clk-rk3588.c | 2533 +++++++++++++++++++++++++++++
+ drivers/clk/rockchip/clk.h        |   49 +-
+ drivers/clk/rockchip/rst-rk3588.c |  857 ++++++++++
+ 5 files changed, 3447 insertions(+), 1 deletion(-)
+ create mode 100644 drivers/clk/rockchip/clk-rk3588.c
+ create mode 100644 drivers/clk/rockchip/rst-rk3588.c
+
+--- a/drivers/clk/rockchip/Kconfig
++++ b/drivers/clk/rockchip/Kconfig
+@@ -99,4 +99,12 @@ config CLK_RK3568
+ 	default y
+ 	help
+ 	  Build the driver for RK3568 Clock Driver.
++
++config CLK_RK3588
++	bool "Rockchip RK3588 clock controller support"
++	depends on ARM64 || COMPILE_TEST
++	default y
++	help
++	  Build the driver for RK3588 Clock Driver.
++
+ endif
+--- a/drivers/clk/rockchip/Makefile
++++ b/drivers/clk/rockchip/Makefile
+@@ -28,3 +28,4 @@ obj-$(CONFIG_CLK_RK3328)        += clk-r
+ obj-$(CONFIG_CLK_RK3368)        += clk-rk3368.o
+ obj-$(CONFIG_CLK_RK3399)        += clk-rk3399.o
+ obj-$(CONFIG_CLK_RK3568)	+= clk-rk3568.o
++obj-$(CONFIG_CLK_RK3588)	+= clk-rk3588.o rst-rk3588.o
+--- /dev/null
++++ b/drivers/clk/rockchip/clk-rk3588.c
+@@ -0,0 +1,2533 @@
++// SPDX-License-Identifier: GPL-2.0
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co. Ltd.
++ * Author: Elaine Zhang <zhangqing@rock-chips.com>
++ */
++
++#include <linux/clk-provider.h>
++#include <linux/of.h>
++#include <linux/of_address.h>
++#include <linux/platform_device.h>
++#include <linux/syscore_ops.h>
++#include <dt-bindings/clock/rockchip,rk3588-cru.h>
++#include "clk.h"
++
++/*
++ * GATE with additional linked clock. Downstream enables the linked clock
++ * (via runtime PM) whenever the gate is enabled. The downstream implementation
++ * does this via separate clock nodes for each of the linked gate clocks,
++ * which leaks parts of the clock tree into DT. It is unclear why this is
++ * actually needed and things work without it for simple use cases. Thus
++ * the linked clock is ignored for now.
++ */
++#define GATE_LINK(_id, cname, pname, linkname, f, o, b, gf) \
++	GATE(_id, cname, pname, f, o, b, gf)
++
++
++#define RK3588_GRF_SOC_STATUS0		0x600
++#define RK3588_PHYREF_ALT_GATE		0xc38
++
++enum rk3588_plls {
++	b0pll, b1pll, lpll, v0pll, aupll, cpll, gpll, npll, ppll,
++};
++
++static struct rockchip_pll_rate_table rk3588_pll_rates[] = {
++	/* _mhz, _p, _m, _s, _k */
++	RK3588_PLL_RATE(2520000000, 2, 210, 0, 0),
++	RK3588_PLL_RATE(2496000000, 2, 208, 0, 0),
++	RK3588_PLL_RATE(2472000000, 2, 206, 0, 0),
++	RK3588_PLL_RATE(2448000000, 2, 204, 0, 0),
++	RK3588_PLL_RATE(2424000000, 2, 202, 0, 0),
++	RK3588_PLL_RATE(2400000000, 2, 200, 0, 0),
++	RK3588_PLL_RATE(2376000000, 2, 198, 0, 0),
++	RK3588_PLL_RATE(2352000000, 2, 196, 0, 0),
++	RK3588_PLL_RATE(2328000000, 2, 194, 0, 0),
++	RK3588_PLL_RATE(2304000000, 2, 192, 0, 0),
++	RK3588_PLL_RATE(2280000000, 2, 190, 0, 0),
++	RK3588_PLL_RATE(2256000000, 2, 376, 1, 0),
++	RK3588_PLL_RATE(2232000000, 2, 372, 1, 0),
++	RK3588_PLL_RATE(2208000000, 2, 368, 1, 0),
++	RK3588_PLL_RATE(2184000000, 2, 364, 1, 0),
++	RK3588_PLL_RATE(2160000000, 2, 360, 1, 0),
++	RK3588_PLL_RATE(2136000000, 2, 356, 1, 0),
++	RK3588_PLL_RATE(2112000000, 2, 352, 1, 0),
++	RK3588_PLL_RATE(2088000000, 2, 348, 1, 0),
++	RK3588_PLL_RATE(2064000000, 2, 344, 1, 0),
++	RK3588_PLL_RATE(2040000000, 2, 340, 1, 0),
++	RK3588_PLL_RATE(2016000000, 2, 336, 1, 0),
++	RK3588_PLL_RATE(1992000000, 2, 332, 1, 0),
++	RK3588_PLL_RATE(1968000000, 2, 328, 1, 0),
++	RK3588_PLL_RATE(1944000000, 2, 324, 1, 0),
++	RK3588_PLL_RATE(1920000000, 2, 320, 1, 0),
++	RK3588_PLL_RATE(1896000000, 2, 316, 1, 0),
++	RK3588_PLL_RATE(1872000000, 2, 312, 1, 0),
++	RK3588_PLL_RATE(1848000000, 2, 308, 1, 0),
++	RK3588_PLL_RATE(1824000000, 2, 304, 1, 0),
++	RK3588_PLL_RATE(1800000000, 2, 300, 1, 0),
++	RK3588_PLL_RATE(1776000000, 2, 296, 1, 0),
++	RK3588_PLL_RATE(1752000000, 2, 292, 1, 0),
++	RK3588_PLL_RATE(1728000000, 2, 288, 1, 0),
++	RK3588_PLL_RATE(1704000000, 2, 284, 1, 0),
++	RK3588_PLL_RATE(1680000000, 2, 280, 1, 0),
++	RK3588_PLL_RATE(1656000000, 2, 276, 1, 0),
++	RK3588_PLL_RATE(1632000000, 2, 272, 1, 0),
++	RK3588_PLL_RATE(1608000000, 2, 268, 1, 0),
++	RK3588_PLL_RATE(1584000000, 2, 264, 1, 0),
++	RK3588_PLL_RATE(1560000000, 2, 260, 1, 0),
++	RK3588_PLL_RATE(1536000000, 2, 256, 1, 0),
++	RK3588_PLL_RATE(1512000000, 2, 252, 1, 0),
++	RK3588_PLL_RATE(1488000000, 2, 248, 1, 0),
++	RK3588_PLL_RATE(1464000000, 2, 244, 1, 0),
++	RK3588_PLL_RATE(1440000000, 2, 240, 1, 0),
++	RK3588_PLL_RATE(1416000000, 2, 236, 1, 0),
++	RK3588_PLL_RATE(1392000000, 2, 232, 1, 0),
++	RK3588_PLL_RATE(1320000000, 2, 220, 1, 0),
++	RK3588_PLL_RATE(1200000000, 2, 200, 1, 0),
++	RK3588_PLL_RATE(1188000000, 2, 198, 1, 0),
++	RK3588_PLL_RATE(1100000000, 3, 550, 2, 0),
++	RK3588_PLL_RATE(1008000000, 2, 336, 2, 0),
++	RK3588_PLL_RATE(1000000000, 3, 500, 2, 0),
++	RK3588_PLL_RATE(983040000, 4, 655, 2, 23592),
++	RK3588_PLL_RATE(955520000, 3, 477, 2, 49806),
++	RK3588_PLL_RATE(903168000, 6, 903, 2, 11009),
++	RK3588_PLL_RATE(900000000, 2, 300, 2, 0),
++	RK3588_PLL_RATE(850000000, 3, 425, 2, 0),
++	RK3588_PLL_RATE(816000000, 2, 272, 2, 0),
++	RK3588_PLL_RATE(786432000, 2, 262, 2, 9437),
++	RK3588_PLL_RATE(786000000, 1, 131, 2, 0),
++	RK3588_PLL_RATE(785560000, 3, 392, 2, 51117),
++	RK3588_PLL_RATE(722534400, 8, 963, 2, 24850),
++	RK3588_PLL_RATE(600000000, 2, 200, 2, 0),
++	RK3588_PLL_RATE(594000000, 2, 198, 2, 0),
++	RK3588_PLL_RATE(408000000, 2, 272, 3, 0),
++	RK3588_PLL_RATE(312000000, 2, 208, 3, 0),
++	RK3588_PLL_RATE(216000000, 2, 288, 4, 0),
++	RK3588_PLL_RATE(100000000, 3, 400, 5, 0),
++	RK3588_PLL_RATE(96000000, 2, 256, 5, 0),
++	{ /* sentinel */ },
++};
++
++#define RK3588_CLK_CORE_B0_SEL_CLEAN_MASK	0x3
++#define RK3588_CLK_CORE_B0_SEL_CLEAN_SHIFT	13
++#define RK3588_CLK_CORE_B1_SEL_CLEAN_MASK	0x3
++#define RK3588_CLK_CORE_B1_SEL_CLEAN_SHIFT	5
++#define RK3588_CLK_CORE_B0_GPLL_DIV_MASK	0x1f
++#define RK3588_CLK_CORE_B0_GPLL_DIV_SHIFT	1
++#define RK3588_CLK_CORE_L_SEL_CLEAN_MASK	0x3
++#define RK3588_CLK_CORE_L1_SEL_CLEAN_SHIFT	12
++#define RK3588_CLK_CORE_L0_SEL_CLEAN_SHIFT	5
++#define RK3588_CLK_DSU_SEL_DF_MASK		0x1
++#define RK3588_CLK_DSU_SEL_DF_SHIFT		15
++#define RK3588_CLK_DSU_DF_SRC_MASK		0x3
++#define RK3588_CLK_DSU_DF_SRC_SHIFT		12
++#define RK3588_CLK_DSU_DF_DIV_MASK		0x1f
++#define RK3588_CLK_DSU_DF_DIV_SHIFT		7
++#define RK3588_ACLKM_DSU_DIV_MASK		0x1f
++#define RK3588_ACLKM_DSU_DIV_SHIFT		1
++#define RK3588_ACLKS_DSU_DIV_MASK		0x1f
++#define RK3588_ACLKS_DSU_DIV_SHIFT		6
++#define RK3588_ACLKMP_DSU_DIV_MASK		0x1f
++#define RK3588_ACLKMP_DSU_DIV_SHIFT		11
++#define RK3588_PERIPH_DSU_DIV_MASK		0x1f
++#define RK3588_PERIPH_DSU_DIV_SHIFT		0
++#define RK3588_ATCLK_DSU_DIV_MASK		0x1f
++#define RK3588_ATCLK_DSU_DIV_SHIFT		0
++#define RK3588_GICCLK_DSU_DIV_MASK		0x1f
++#define RK3588_GICCLK_DSU_DIV_SHIFT		5
++
++#define RK3588_CORE_B0_SEL(_apllcore)						\
++{										\
++	.reg = RK3588_BIGCORE0_CLKSEL_CON(0),					\
++	.val = HIWORD_UPDATE(_apllcore, RK3588_CLK_CORE_B0_SEL_CLEAN_MASK,	\
++			RK3588_CLK_CORE_B0_SEL_CLEAN_SHIFT) |			\
++		HIWORD_UPDATE(0, RK3588_CLK_CORE_B0_GPLL_DIV_MASK,		\
++			RK3588_CLK_CORE_B0_GPLL_DIV_SHIFT),			\
++}
++
++#define RK3588_CORE_B1_SEL(_apllcore)						\
++{										\
++	.reg = RK3588_BIGCORE0_CLKSEL_CON(1),					\
++	.val = HIWORD_UPDATE(_apllcore, RK3588_CLK_CORE_B1_SEL_CLEAN_MASK,	\
++			RK3588_CLK_CORE_B1_SEL_CLEAN_SHIFT),			\
++}
++
++#define RK3588_CORE_B2_SEL(_apllcore)						\
++{										\
++	.reg = RK3588_BIGCORE1_CLKSEL_CON(0),					\
++	.val = HIWORD_UPDATE(_apllcore, RK3588_CLK_CORE_B0_SEL_CLEAN_MASK,	\
++			RK3588_CLK_CORE_B0_SEL_CLEAN_SHIFT) |			\
++		HIWORD_UPDATE(0, RK3588_CLK_CORE_B0_GPLL_DIV_MASK,		\
++			RK3588_CLK_CORE_B0_GPLL_DIV_SHIFT),			\
++}
++
++#define RK3588_CORE_B3_SEL(_apllcore)						\
++{										\
++	.reg = RK3588_BIGCORE1_CLKSEL_CON(1),					\
++	.val = HIWORD_UPDATE(_apllcore, RK3588_CLK_CORE_B1_SEL_CLEAN_MASK,	\
++			RK3588_CLK_CORE_B1_SEL_CLEAN_SHIFT),			\
++}
++
++#define RK3588_CORE_L_SEL0(_offs, _apllcore)					\
++{										\
++	.reg = RK3588_DSU_CLKSEL_CON(6 + _offs),				\
++	.val = HIWORD_UPDATE(_apllcore, RK3588_CLK_CORE_L_SEL_CLEAN_MASK,	\
++			RK3588_CLK_CORE_L0_SEL_CLEAN_SHIFT) |			\
++		HIWORD_UPDATE(_apllcore, RK3588_CLK_CORE_L_SEL_CLEAN_MASK,	\
++			RK3588_CLK_CORE_L1_SEL_CLEAN_SHIFT),			\
++}
++
++#define RK3588_CORE_L_SEL1(_seldsu, _divdsu)				\
++{									\
++	.reg = RK3588_DSU_CLKSEL_CON(0),				\
++	.val = HIWORD_UPDATE(_seldsu, RK3588_CLK_DSU_DF_SRC_MASK,	\
++			RK3588_CLK_DSU_DF_SRC_SHIFT) |			\
++		HIWORD_UPDATE(_divdsu - 1, RK3588_CLK_DSU_DF_DIV_MASK,	\
++			RK3588_CLK_DSU_DF_DIV_SHIFT),			\
++}
++
++#define RK3588_CORE_L_SEL2(_aclkm, _aclkmp, _aclks)			\
++{									\
++	.reg = RK3588_DSU_CLKSEL_CON(1),				\
++	.val = HIWORD_UPDATE(_aclkm - 1, RK3588_ACLKM_DSU_DIV_MASK,	\
++			RK3588_ACLKM_DSU_DIV_SHIFT) |			\
++		HIWORD_UPDATE(_aclkmp - 1, RK3588_ACLKMP_DSU_DIV_MASK,	\
++			RK3588_ACLKMP_DSU_DIV_SHIFT) |			\
++		HIWORD_UPDATE(_aclks - 1, RK3588_ACLKS_DSU_DIV_MASK,	\
++			RK3588_ACLKS_DSU_DIV_SHIFT),			\
++}
++
++#define RK3588_CORE_L_SEL3(_periph)					\
++{									\
++	.reg = RK3588_DSU_CLKSEL_CON(2),				\
++	.val = HIWORD_UPDATE(_periph - 1, RK3588_PERIPH_DSU_DIV_MASK,	\
++			RK3588_PERIPH_DSU_DIV_SHIFT),			\
++}
++
++#define RK3588_CORE_L_SEL4(_gicclk, _atclk)				\
++{									\
++	.reg = RK3588_DSU_CLKSEL_CON(3),				\
++	.val = HIWORD_UPDATE(_gicclk - 1, RK3588_GICCLK_DSU_DIV_MASK,	\
++			RK3588_GICCLK_DSU_DIV_SHIFT) |			\
++		HIWORD_UPDATE(_atclk - 1, RK3588_ATCLK_DSU_DIV_MASK,	\
++			RK3588_ATCLK_DSU_DIV_SHIFT),			\
++}
++
++#define RK3588_CPUB01CLK_RATE(_prate, _apllcore)		\
++{								\
++	.prate = _prate##U,					\
++	.pre_muxs = {						\
++		RK3588_CORE_B0_SEL(0),				\
++		RK3588_CORE_B1_SEL(0),				\
++	},							\
++	.post_muxs = {						\
++		RK3588_CORE_B0_SEL(_apllcore),			\
++		RK3588_CORE_B1_SEL(_apllcore),			\
++	},							\
++}
++
++#define RK3588_CPUB23CLK_RATE(_prate, _apllcore)		\
++{								\
++	.prate = _prate##U,					\
++	.pre_muxs = {						\
++		RK3588_CORE_B2_SEL(0),				\
++		RK3588_CORE_B3_SEL(0),				\
++	},							\
++	.post_muxs = {						\
++		RK3588_CORE_B2_SEL(_apllcore),			\
++		RK3588_CORE_B3_SEL(_apllcore),			\
++	},							\
++}
++
++#define RK3588_CPULCLK_RATE(_prate, _apllcore, _seldsu, _divdsu) \
++{								\
++	.prate = _prate##U,					\
++	.pre_muxs = {						\
++		RK3588_CORE_L_SEL0(0, 0),			\
++		RK3588_CORE_L_SEL0(1, 0),			\
++		RK3588_CORE_L_SEL1(3, 2),			\
++		RK3588_CORE_L_SEL2(2, 3, 3),			\
++		RK3588_CORE_L_SEL3(4),				\
++		RK3588_CORE_L_SEL4(4, 4),			\
++	},							\
++	.post_muxs = {						\
++		RK3588_CORE_L_SEL0(0, _apllcore),		\
++		RK3588_CORE_L_SEL0(1, _apllcore),		\
++		RK3588_CORE_L_SEL1(_seldsu, _divdsu),		\
++	},							\
++}
++
++static struct rockchip_cpuclk_rate_table rk3588_cpub0clk_rates[] __initdata = {
++	RK3588_CPUB01CLK_RATE(2496000000, 1),
++	RK3588_CPUB01CLK_RATE(2400000000, 1),
++	RK3588_CPUB01CLK_RATE(2304000000, 1),
++	RK3588_CPUB01CLK_RATE(2208000000, 1),
++	RK3588_CPUB01CLK_RATE(2184000000, 1),
++	RK3588_CPUB01CLK_RATE(2088000000, 1),
++	RK3588_CPUB01CLK_RATE(2040000000, 1),
++	RK3588_CPUB01CLK_RATE(2016000000, 1),
++	RK3588_CPUB01CLK_RATE(1992000000, 1),
++	RK3588_CPUB01CLK_RATE(1896000000, 1),
++	RK3588_CPUB01CLK_RATE(1800000000, 1),
++	RK3588_CPUB01CLK_RATE(1704000000, 0),
++	RK3588_CPUB01CLK_RATE(1608000000, 0),
++	RK3588_CPUB01CLK_RATE(1584000000, 0),
++	RK3588_CPUB01CLK_RATE(1560000000, 0),
++	RK3588_CPUB01CLK_RATE(1536000000, 0),
++	RK3588_CPUB01CLK_RATE(1512000000, 0),
++	RK3588_CPUB01CLK_RATE(1488000000, 0),
++	RK3588_CPUB01CLK_RATE(1464000000, 0),
++	RK3588_CPUB01CLK_RATE(1440000000, 0),
++	RK3588_CPUB01CLK_RATE(1416000000, 0),
++	RK3588_CPUB01CLK_RATE(1392000000, 0),
++	RK3588_CPUB01CLK_RATE(1368000000, 0),
++	RK3588_CPUB01CLK_RATE(1344000000, 0),
++	RK3588_CPUB01CLK_RATE(1320000000, 0),
++	RK3588_CPUB01CLK_RATE(1296000000, 0),
++	RK3588_CPUB01CLK_RATE(1272000000, 0),
++	RK3588_CPUB01CLK_RATE(1248000000, 0),
++	RK3588_CPUB01CLK_RATE(1224000000, 0),
++	RK3588_CPUB01CLK_RATE(1200000000, 0),
++	RK3588_CPUB01CLK_RATE(1104000000, 0),
++	RK3588_CPUB01CLK_RATE(1008000000, 0),
++	RK3588_CPUB01CLK_RATE(912000000, 0),
++	RK3588_CPUB01CLK_RATE(816000000, 0),
++	RK3588_CPUB01CLK_RATE(696000000, 0),
++	RK3588_CPUB01CLK_RATE(600000000, 0),
++	RK3588_CPUB01CLK_RATE(408000000, 0),
++	RK3588_CPUB01CLK_RATE(312000000, 0),
++	RK3588_CPUB01CLK_RATE(216000000, 0),
++	RK3588_CPUB01CLK_RATE(96000000, 0),
++};
++
++static const struct rockchip_cpuclk_reg_data rk3588_cpub0clk_data = {
++	.core_reg[0] = RK3588_BIGCORE0_CLKSEL_CON(0),
++	.div_core_shift[0] = 8,
++	.div_core_mask[0] = 0x1f,
++	.core_reg[1] = RK3588_BIGCORE0_CLKSEL_CON(1),
++	.div_core_shift[1] = 0,
++	.div_core_mask[1] = 0x1f,
++	.num_cores = 2,
++	.mux_core_alt = 1,
++	.mux_core_main = 2,
++	.mux_core_shift = 6,
++	.mux_core_mask = 0x3,
++};
++
++static struct rockchip_cpuclk_rate_table rk3588_cpub1clk_rates[] __initdata = {
++	RK3588_CPUB23CLK_RATE(2496000000, 1),
++	RK3588_CPUB23CLK_RATE(2400000000, 1),
++	RK3588_CPUB23CLK_RATE(2304000000, 1),
++	RK3588_CPUB23CLK_RATE(2208000000, 1),
++	RK3588_CPUB23CLK_RATE(2184000000, 1),
++	RK3588_CPUB23CLK_RATE(2088000000, 1),
++	RK3588_CPUB23CLK_RATE(2040000000, 1),
++	RK3588_CPUB23CLK_RATE(2016000000, 1),
++	RK3588_CPUB23CLK_RATE(1992000000, 1),
++	RK3588_CPUB23CLK_RATE(1896000000, 1),
++	RK3588_CPUB23CLK_RATE(1800000000, 1),
++	RK3588_CPUB23CLK_RATE(1704000000, 0),
++	RK3588_CPUB23CLK_RATE(1608000000, 0),
++	RK3588_CPUB23CLK_RATE(1584000000, 0),
++	RK3588_CPUB23CLK_RATE(1560000000, 0),
++	RK3588_CPUB23CLK_RATE(1536000000, 0),
++	RK3588_CPUB23CLK_RATE(1512000000, 0),
++	RK3588_CPUB23CLK_RATE(1488000000, 0),
++	RK3588_CPUB23CLK_RATE(1464000000, 0),
++	RK3588_CPUB23CLK_RATE(1440000000, 0),
++	RK3588_CPUB23CLK_RATE(1416000000, 0),
++	RK3588_CPUB23CLK_RATE(1392000000, 0),
++	RK3588_CPUB23CLK_RATE(1368000000, 0),
++	RK3588_CPUB23CLK_RATE(1344000000, 0),
++	RK3588_CPUB23CLK_RATE(1320000000, 0),
++	RK3588_CPUB23CLK_RATE(1296000000, 0),
++	RK3588_CPUB23CLK_RATE(1272000000, 0),
++	RK3588_CPUB23CLK_RATE(1248000000, 0),
++	RK3588_CPUB23CLK_RATE(1224000000, 0),
++	RK3588_CPUB23CLK_RATE(1200000000, 0),
++	RK3588_CPUB23CLK_RATE(1104000000, 0),
++	RK3588_CPUB23CLK_RATE(1008000000, 0),
++	RK3588_CPUB23CLK_RATE(912000000, 0),
++	RK3588_CPUB23CLK_RATE(816000000, 0),
++	RK3588_CPUB23CLK_RATE(696000000, 0),
++	RK3588_CPUB23CLK_RATE(600000000, 0),
++	RK3588_CPUB23CLK_RATE(408000000, 0),
++	RK3588_CPUB23CLK_RATE(312000000, 0),
++	RK3588_CPUB23CLK_RATE(216000000, 0),
++	RK3588_CPUB23CLK_RATE(96000000, 0),
++};
++
++static const struct rockchip_cpuclk_reg_data rk3588_cpub1clk_data = {
++	.core_reg[0] = RK3588_BIGCORE1_CLKSEL_CON(0),
++	.div_core_shift[0] = 8,
++	.div_core_mask[0] = 0x1f,
++	.core_reg[1] = RK3588_BIGCORE1_CLKSEL_CON(1),
++	.div_core_shift[1] = 0,
++	.div_core_mask[1] = 0x1f,
++	.num_cores = 2,
++	.mux_core_alt = 1,
++	.mux_core_main = 2,
++	.mux_core_shift = 6,
++	.mux_core_mask = 0x3,
++};
++
++static struct rockchip_cpuclk_rate_table rk3588_cpulclk_rates[] __initdata = {
++	RK3588_CPULCLK_RATE(2208000000, 1, 3, 1),
++	RK3588_CPULCLK_RATE(2184000000, 1, 3, 1),
++	RK3588_CPULCLK_RATE(2088000000, 1, 3, 1),
++	RK3588_CPULCLK_RATE(2040000000, 1, 3, 1),
++	RK3588_CPULCLK_RATE(2016000000, 1, 3, 1),
++	RK3588_CPULCLK_RATE(1992000000, 1, 3, 1),
++	RK3588_CPULCLK_RATE(1896000000, 1, 3, 1),
++	RK3588_CPULCLK_RATE(1800000000, 1, 3, 1),
++	RK3588_CPULCLK_RATE(1704000000, 0, 3, 1),
++	RK3588_CPULCLK_RATE(1608000000, 0, 3, 1),
++	RK3588_CPULCLK_RATE(1584000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1560000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1536000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1512000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1488000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1464000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1440000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1416000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1392000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1368000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1344000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1320000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1296000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1272000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1248000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1224000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1200000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1104000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(1008000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(912000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(816000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(696000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(600000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(408000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(312000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(216000000, 0, 2, 1),
++	RK3588_CPULCLK_RATE(96000000, 0, 2, 1),
++};
++
++static const struct rockchip_cpuclk_reg_data rk3588_cpulclk_data = {
++	.core_reg[0] = RK3588_DSU_CLKSEL_CON(6),
++	.div_core_shift[0] = 0,
++	.div_core_mask[0] = 0x1f,
++	.core_reg[1] = RK3588_DSU_CLKSEL_CON(6),
++	.div_core_shift[1] = 7,
++	.div_core_mask[1] = 0x1f,
++	.core_reg[2] = RK3588_DSU_CLKSEL_CON(7),
++	.div_core_shift[2] = 0,
++	.div_core_mask[2] = 0x1f,
++	.core_reg[3] = RK3588_DSU_CLKSEL_CON(7),
++	.div_core_shift[3] = 7,
++	.div_core_mask[3] = 0x1f,
++	.num_cores = 4,
++	.mux_core_reg = RK3588_DSU_CLKSEL_CON(5),
++	.mux_core_alt = 1,
++	.mux_core_main = 2,
++	.mux_core_shift = 14,
++	.mux_core_mask = 0x3,
++};
++
++PNAME(mux_pll_p)			= { "xin24m", "xin32k" };
++PNAME(mux_armclkl_p)			= { "xin24m", "gpll", "lpll" };
++PNAME(mux_armclkb01_p)			= { "xin24m", "gpll", "b0pll",};
++PNAME(mux_armclkb23_p)			= { "xin24m", "gpll", "b1pll",};
++PNAME(b0pll_b1pll_lpll_gpll_p)		= { "b0pll", "b1pll", "lpll", "gpll" };
++PNAME(gpll_24m_p)			= { "gpll", "xin24m" };
++PNAME(gpll_aupll_p)			= { "gpll", "aupll" };
++PNAME(gpll_lpll_p)			= { "gpll", "lpll" };
++PNAME(gpll_cpll_p)			= { "gpll", "cpll" };
++PNAME(gpll_spll_p)			= { "gpll", "spll" };
++PNAME(gpll_cpll_24m_p)			= { "gpll", "cpll", "xin24m"};
++PNAME(gpll_cpll_aupll_p)		= { "gpll", "cpll", "aupll"};
++PNAME(gpll_cpll_npll_p)			= { "gpll", "cpll", "npll"};
++PNAME(gpll_cpll_npll_v0pll_p)		= { "gpll", "cpll", "npll", "v0pll"};
++PNAME(gpll_cpll_24m_spll_p)		= { "gpll", "cpll", "xin24m", "spll" };
++PNAME(gpll_cpll_aupll_spll_p)		= { "gpll", "cpll", "aupll", "spll" };
++PNAME(gpll_cpll_aupll_npll_p)		= { "gpll", "cpll", "aupll", "npll" };
++PNAME(gpll_cpll_v0pll_aupll_p)		= { "gpll", "cpll", "v0pll", "aupll" };
++PNAME(gpll_cpll_v0pll_spll_p)		= { "gpll", "cpll", "v0pll", "spll" };
++PNAME(gpll_cpll_aupll_npll_spll_p)	= { "gpll", "cpll", "aupll", "npll", "spll" };
++PNAME(gpll_cpll_dmyaupll_npll_spll_p)	= { "gpll", "cpll", "dummy_aupll", "npll", "spll" };
++PNAME(gpll_cpll_npll_aupll_spll_p)	= { "gpll", "cpll", "npll", "aupll", "spll" };
++PNAME(gpll_cpll_npll_1000m_p)		= { "gpll", "cpll", "npll", "clk_1000m_src" };
++PNAME(mux_24m_spll_gpll_cpll_p)		= { "xin24m", "spll", "gpll", "cpll" };
++PNAME(mux_24m_32k_p)			= { "xin24m", "xin32k" };
++PNAME(mux_24m_100m_p)			= { "xin24m", "clk_100m_src" };
++PNAME(mux_200m_100m_p)			= { "clk_200m_src", "clk_100m_src" };
++PNAME(mux_100m_50m_24m_p)		= { "clk_100m_src", "clk_50m_src", "xin24m" };
++PNAME(mux_150m_50m_24m_p)		= { "clk_150m_src", "clk_50m_src", "xin24m" };
++PNAME(mux_150m_100m_24m_p)		= { "clk_150m_src", "clk_100m_src", "xin24m" };
++PNAME(mux_200m_150m_24m_p)		= { "clk_200m_src", "clk_150m_src", "xin24m" };
++PNAME(mux_150m_100m_50m_24m_p)		= { "clk_150m_src", "clk_100m_src", "clk_50m_src", "xin24m" };
++PNAME(mux_200m_100m_50m_24m_p)		= { "clk_200m_src", "clk_100m_src", "clk_50m_src", "xin24m" };
++PNAME(mux_300m_200m_100m_24m_p)		= { "clk_300m_src", "clk_200m_src", "clk_100m_src", "xin24m" };
++PNAME(mux_700m_400m_200m_24m_p)		= { "clk_700m_src", "clk_400m_src", "clk_200m_src", "xin24m" };
++PNAME(mux_500m_250m_100m_24m_p)		= { "clk_500m_src", "clk_250m_src", "clk_100m_src", "xin24m" };
++PNAME(mux_500m_300m_100m_24m_p)		= { "clk_500m_src", "clk_300m_src", "clk_100m_src", "xin24m" };
++PNAME(mux_400m_200m_100m_24m_p)		= { "clk_400m_src", "clk_200m_src", "clk_100m_src", "xin24m" };
++PNAME(clk_i2s2_2ch_p)			= { "clk_i2s2_2ch_src", "clk_i2s2_2ch_frac", "i2s2_mclkin", "xin12m" };
++PNAME(i2s2_2ch_mclkout_p)		= { "mclk_i2s2_2ch", "xin12m" };
++PNAME(clk_i2s3_2ch_p)			= { "clk_i2s3_2ch_src", "clk_i2s3_2ch_frac", "i2s3_mclkin", "xin12m" };
++PNAME(i2s3_2ch_mclkout_p)		= { "mclk_i2s3_2ch", "xin12m" };
++PNAME(clk_i2s0_8ch_tx_p)		= { "clk_i2s0_8ch_tx_src", "clk_i2s0_8ch_tx_frac", "i2s0_mclkin", "xin12m" };
++PNAME(clk_i2s0_8ch_rx_p)		= { "clk_i2s0_8ch_rx_src", "clk_i2s0_8ch_rx_frac", "i2s0_mclkin", "xin12m" };
++PNAME(i2s0_8ch_mclkout_p)		= { "mclk_i2s0_8ch_tx", "mclk_i2s0_8ch_rx", "xin12m" };
++PNAME(clk_i2s1_8ch_tx_p)		= { "clk_i2s1_8ch_tx_src", "clk_i2s1_8ch_tx_frac", "i2s1_mclkin", "xin12m" };
++PNAME(clk_i2s1_8ch_rx_p)		= { "clk_i2s1_8ch_rx_src", "clk_i2s1_8ch_rx_frac", "i2s1_mclkin", "xin12m" };
++PNAME(i2s1_8ch_mclkout_p)		= { "mclk_i2s1_8ch_tx", "mclk_i2s1_8ch_rx", "xin12m" };
++PNAME(clk_i2s4_8ch_tx_p)		= { "clk_i2s4_8ch_tx_src", "clk_i2s4_8ch_tx_frac", "i2s4_mclkin", "xin12m" };
++PNAME(clk_i2s5_8ch_tx_p)		= { "clk_i2s5_8ch_tx_src", "clk_i2s5_8ch_tx_frac", "i2s5_mclkin", "xin12m" };
++PNAME(clk_i2s6_8ch_tx_p)		= { "clk_i2s6_8ch_tx_src", "clk_i2s6_8ch_tx_frac", "i2s6_mclkin", "xin12m" };
++PNAME(clk_i2s6_8ch_rx_p)		= { "clk_i2s6_8ch_rx_src", "clk_i2s6_8ch_rx_frac", "i2s6_mclkin", "xin12m" };
++PNAME(i2s6_8ch_mclkout_p)		= { "mclk_i2s6_8ch_tx", "mclk_i2s6_8ch_rx", "xin12m" };
++PNAME(clk_i2s7_8ch_rx_p)		= { "clk_i2s7_8ch_rx_src", "clk_i2s7_8ch_rx_frac", "i2s7_mclkin", "xin12m" };
++PNAME(clk_i2s8_8ch_tx_p)		= { "clk_i2s8_8ch_tx_src", "clk_i2s8_8ch_tx_frac", "i2s8_mclkin", "xin12m" };
++PNAME(clk_i2s9_8ch_rx_p)		= { "clk_i2s9_8ch_rx_src", "clk_i2s9_8ch_rx_frac", "i2s9_mclkin", "xin12m" };
++PNAME(clk_i2s10_8ch_rx_p)		= { "clk_i2s10_8ch_rx_src", "clk_i2s10_8ch_rx_frac", "i2s10_mclkin", "xin12m" };
++PNAME(clk_spdif0_p)			= { "clk_spdif0_src", "clk_spdif0_frac", "xin12m" };
++PNAME(clk_spdif1_p)			= { "clk_spdif1_src", "clk_spdif1_frac", "xin12m" };
++PNAME(clk_spdif2_dp0_p)			= { "clk_spdif2_dp0_src", "clk_spdif2_dp0_frac", "xin12m" };
++PNAME(clk_spdif3_p)			= { "clk_spdif3_src", "clk_spdif3_frac", "xin12m" };
++PNAME(clk_spdif4_p)			= { "clk_spdif4_src", "clk_spdif4_frac", "xin12m" };
++PNAME(clk_spdif5_dp1_p)			= { "clk_spdif5_dp1_src", "clk_spdif5_dp1_frac", "xin12m" };
++PNAME(clk_uart0_p)			= { "clk_uart0_src", "clk_uart0_frac", "xin24m" };
++PNAME(clk_uart1_p)			= { "clk_uart1_src", "clk_uart1_frac", "xin24m" };
++PNAME(clk_uart2_p)			= { "clk_uart2_src", "clk_uart2_frac", "xin24m" };
++PNAME(clk_uart3_p)			= { "clk_uart3_src", "clk_uart3_frac", "xin24m" };
++PNAME(clk_uart4_p)			= { "clk_uart4_src", "clk_uart4_frac", "xin24m" };
++PNAME(clk_uart5_p)			= { "clk_uart5_src", "clk_uart5_frac", "xin24m" };
++PNAME(clk_uart6_p)			= { "clk_uart6_src", "clk_uart6_frac", "xin24m" };
++PNAME(clk_uart7_p)			= { "clk_uart7_src", "clk_uart7_frac", "xin24m" };
++PNAME(clk_uart8_p)			= { "clk_uart8_src", "clk_uart8_frac", "xin24m" };
++PNAME(clk_uart9_p)			= { "clk_uart9_src", "clk_uart9_frac", "xin24m" };
++PNAME(clk_gmac0_ptp_ref_p)		= { "cpll", "clk_gmac0_ptpref_io" };
++PNAME(clk_gmac1_ptp_ref_p)		= { "cpll", "clk_gmac1_ptpref_io" };
++PNAME(clk_hdmirx_aud_p)			= { "clk_hdmirx_aud_src", "clk_hdmirx_aud_frac" };
++PNAME(aclk_hdcp1_root_p)		= { "gpll", "cpll", "clk_hdmitrx_refsrc" };
++PNAME(aclk_vop_sub_src_p)		= { "aclk_vop_root", "aclk_vop_div2_src" };
++PNAME(dclk_vop0_p)			= { "dclk_vop0_src", "clk_hdmiphy_pixel0", "clk_hdmiphy_pixel1" };
++PNAME(dclk_vop1_p)			= { "dclk_vop1_src", "clk_hdmiphy_pixel0", "clk_hdmiphy_pixel1" };
++PNAME(dclk_vop2_p)			= { "dclk_vop2_src", "clk_hdmiphy_pixel0", "clk_hdmiphy_pixel1" };
++PNAME(pmu_200m_100m_p)			= { "clk_pmu1_200m_src", "clk_pmu1_100m_src" };
++PNAME(pmu_300m_24m_p)			= { "clk_300m_src", "xin24m" };
++PNAME(pmu_400m_24m_p)			= { "clk_400m_src", "xin24m" };
++PNAME(pmu_100m_50m_24m_src_p)		= { "clk_pmu1_100m_src", "clk_pmu1_50m_src", "xin24m" };
++PNAME(pmu_24m_32k_100m_src_p)		= { "xin24m", "32k", "clk_pmu1_100m_src" };
++PNAME(hclk_pmu1_root_p)			= { "clk_pmu1_200m_src", "clk_pmu1_100m_src", "clk_pmu1_50m_src", "xin24m" };
++PNAME(hclk_pmu_cm0_root_p)		= { "clk_pmu1_400m_src", "clk_pmu1_200m_src", "clk_pmu1_100m_src", "xin24m" };
++PNAME(mclk_pdm0_p)			= { "clk_pmu1_300m_src", "clk_pmu1_200m_src" };
++PNAME(mux_24m_ppll_spll_p)		= { "xin24m", "ppll", "spll" };
++PNAME(mux_24m_ppll_p)			= { "xin24m", "ppll" };
++PNAME(clk_ref_pipe_phy0_p)		= { "clk_ref_pipe_phy0_osc_src", "clk_ref_pipe_phy0_pll_src" };
++PNAME(clk_ref_pipe_phy1_p)		= { "clk_ref_pipe_phy1_osc_src", "clk_ref_pipe_phy1_pll_src" };
++PNAME(clk_ref_pipe_phy2_p)		= { "clk_ref_pipe_phy2_osc_src", "clk_ref_pipe_phy2_pll_src" };
++
++#define MFLAGS CLK_MUX_HIWORD_MASK
++#define DFLAGS CLK_DIVIDER_HIWORD_MASK
++#define GFLAGS (CLK_GATE_HIWORD_MASK | CLK_GATE_SET_TO_DISABLE)
++
++static struct rockchip_clk_branch rk3588_i2s0_8ch_tx_fracmux __initdata =
++	MUX(CLK_I2S0_8CH_TX, "clk_i2s0_8ch_tx", clk_i2s0_8ch_tx_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(26), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s0_8ch_rx_fracmux __initdata =
++	MUX(CLK_I2S0_8CH_RX, "clk_i2s0_8ch_rx", clk_i2s0_8ch_rx_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(28), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s1_8ch_tx_fracmux __initdata =
++	MUX(CLK_I2S1_8CH_TX, "clk_i2s1_8ch_tx", clk_i2s1_8ch_tx_p, CLK_SET_RATE_PARENT,
++			 RK3588_PMU_CLKSEL_CON(7), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s1_8ch_rx_fracmux __initdata =
++	MUX(CLK_I2S1_8CH_RX, "clk_i2s1_8ch_rx", clk_i2s1_8ch_rx_p, CLK_SET_RATE_PARENT,
++			 RK3588_PMU_CLKSEL_CON(9), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s2_2ch_fracmux __initdata =
++	MUX(CLK_I2S2_2CH, "clk_i2s2_2ch", clk_i2s2_2ch_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(30), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s3_2ch_fracmux __initdata =
++	MUX(CLK_I2S3_2CH, "clk_i2s3_2ch", clk_i2s3_2ch_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(32), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s4_8ch_tx_fracmux __initdata =
++	MUX(CLK_I2S4_8CH_TX, "clk_i2s4_8ch_tx", clk_i2s4_8ch_tx_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(120), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s5_8ch_tx_fracmux __initdata =
++	MUX(CLK_I2S5_8CH_TX, "clk_i2s5_8ch_tx", clk_i2s5_8ch_tx_p, CLK_SET_RATE_PARENT,
++			 RK3588_CLKSEL_CON(142), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s6_8ch_tx_fracmux __initdata =
++	MUX(CLK_I2S6_8CH_TX, "clk_i2s6_8ch_tx", clk_i2s6_8ch_tx_p, CLK_SET_RATE_PARENT,
++			 RK3588_CLKSEL_CON(146), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s6_8ch_rx_fracmux __initdata =
++	MUX(CLK_I2S6_8CH_RX, "clk_i2s6_8ch_rx", clk_i2s6_8ch_rx_p, CLK_SET_RATE_PARENT,
++			 RK3588_CLKSEL_CON(148), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s7_8ch_rx_fracmux __initdata =
++	MUX(CLK_I2S7_8CH_RX, "clk_i2s7_8ch_rx", clk_i2s7_8ch_rx_p, CLK_SET_RATE_PARENT,
++			 RK3588_CLKSEL_CON(131), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s8_8ch_tx_fracmux __initdata =
++	MUX(CLK_I2S8_8CH_TX, "clk_i2s8_8ch_tx", clk_i2s8_8ch_tx_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(122), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s9_8ch_rx_fracmux __initdata =
++	MUX(CLK_I2S9_8CH_RX, "clk_i2s9_8ch_rx", clk_i2s9_8ch_rx_p, CLK_SET_RATE_PARENT,
++			 RK3588_CLKSEL_CON(155), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_i2s10_8ch_rx_fracmux __initdata =
++	MUX(CLK_I2S10_8CH_RX, "clk_i2s10_8ch_rx", clk_i2s10_8ch_rx_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(157), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_spdif0_fracmux __initdata =
++	MUX(CLK_SPDIF0, "clk_spdif0", clk_spdif0_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(34), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_spdif1_fracmux __initdata =
++	MUX(CLK_SPDIF1, "clk_spdif1", clk_spdif1_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(36), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_spdif2_dp0_fracmux __initdata =
++	MUX(CLK_SPDIF2_DP0, "clk_spdif2_dp0", clk_spdif2_dp0_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(124), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_spdif3_fracmux __initdata =
++	MUX(CLK_SPDIF3, "clk_spdif3", clk_spdif3_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(150), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_spdif4_fracmux __initdata =
++	MUX(CLK_SPDIF4, "clk_spdif4", clk_spdif4_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(152), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_spdif5_dp1_fracmux __initdata =
++	MUX(CLK_SPDIF5_DP1, "clk_spdif5_dp1", clk_spdif5_dp1_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(126), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_uart0_fracmux __initdata =
++	MUX(CLK_UART0, "clk_uart0", clk_uart0_p, CLK_SET_RATE_PARENT,
++			RK3588_PMU_CLKSEL_CON(5), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_uart1_fracmux __initdata =
++	MUX(CLK_UART1, "clk_uart1", clk_uart1_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(43), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_uart2_fracmux __initdata =
++	MUX(CLK_UART2, "clk_uart2", clk_uart2_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(45), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_uart3_fracmux __initdata =
++	MUX(CLK_UART3, "clk_uart3", clk_uart3_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(47), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_uart4_fracmux __initdata =
++	MUX(CLK_UART4, "clk_uart4", clk_uart4_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(49), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_uart5_fracmux __initdata =
++	MUX(CLK_UART5, "clk_uart5", clk_uart5_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(51), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_uart6_fracmux __initdata =
++	MUX(CLK_UART6, "clk_uart6", clk_uart6_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(53), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_uart7_fracmux __initdata =
++	MUX(CLK_UART7, "clk_uart7", clk_uart7_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(55), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_uart8_fracmux __initdata =
++	MUX(CLK_UART8, "clk_uart8", clk_uart8_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(57), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_uart9_fracmux __initdata =
++	MUX(CLK_UART9, "clk_uart9", clk_uart9_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(59), 0, 2, MFLAGS);
++
++static struct rockchip_clk_branch rk3588_hdmirx_aud_fracmux __initdata =
++	MUX(CLK_HDMIRX_AUD_P_MUX, "clk_hdmirx_aud_mux", clk_hdmirx_aud_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(140), 0, 1, MFLAGS);
++
++static struct rockchip_pll_clock rk3588_pll_clks[] __initdata = {
++	[b0pll] = PLL(pll_rk3588_core, PLL_B0PLL, "b0pll", mux_pll_p,
++		     CLK_IGNORE_UNUSED, RK3588_B0_PLL_CON(0),
++		     RK3588_B0_PLL_MODE_CON0, 0, 15, 0, rk3588_pll_rates),
++	[b1pll] = PLL(pll_rk3588_core, PLL_B1PLL, "b1pll", mux_pll_p,
++		     CLK_IGNORE_UNUSED, RK3588_B1_PLL_CON(8),
++		     RK3588_B1_PLL_MODE_CON0, 0, 15, 0, rk3588_pll_rates),
++	[lpll] = PLL(pll_rk3588_core, PLL_LPLL, "lpll", mux_pll_p,
++		     CLK_IGNORE_UNUSED, RK3588_LPLL_CON(16),
++		     RK3588_LPLL_MODE_CON0, 0, 15, 0, rk3588_pll_rates),
++	[v0pll] = PLL(pll_rk3588, PLL_V0PLL, "v0pll", mux_pll_p,
++		     0, RK3588_PLL_CON(88),
++		     RK3588_MODE_CON0, 4, 15, 0, rk3588_pll_rates),
++	[aupll] = PLL(pll_rk3588, PLL_AUPLL, "aupll", mux_pll_p,
++		     0, RK3588_PLL_CON(96),
++		     RK3588_MODE_CON0, 6, 15, 0, rk3588_pll_rates),
++	[cpll] = PLL(pll_rk3588, PLL_CPLL, "cpll", mux_pll_p,
++		     CLK_IGNORE_UNUSED, RK3588_PLL_CON(104),
++		     RK3588_MODE_CON0, 8, 15, 0, rk3588_pll_rates),
++	[gpll] = PLL(pll_rk3588, PLL_GPLL, "gpll", mux_pll_p,
++		     CLK_IGNORE_UNUSED, RK3588_PLL_CON(112),
++		     RK3588_MODE_CON0, 2, 15, 0, rk3588_pll_rates),
++	[npll] = PLL(pll_rk3588, PLL_NPLL, "npll", mux_pll_p,
++		     0, RK3588_PLL_CON(120),
++		     RK3588_MODE_CON0, 0, 15, 0, rk3588_pll_rates),
++	[ppll] = PLL(pll_rk3588_core, PLL_PPLL, "ppll", mux_pll_p,
++		     CLK_IGNORE_UNUSED, RK3588_PMU_PLL_CON(128),
++		     RK3588_MODE_CON0, 10, 15, 0, rk3588_pll_rates),
++};
++
++static struct rockchip_clk_branch rk3588_clk_branches[] __initdata = {
++	/*
++	 * CRU Clock-Architecture
++	 */
++	/* fixed */
++	FACTOR(0, "xin12m", "xin24m", 0, 1, 2),
++
++	/* top */
++	COMPOSITE(CLK_50M_SRC, "clk_50m_src", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(0), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 0, GFLAGS),
++	COMPOSITE(CLK_100M_SRC, "clk_100m_src", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(0), 11, 1, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 1, GFLAGS),
++	COMPOSITE(CLK_150M_SRC, "clk_150m_src", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(1), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 2, GFLAGS),
++	COMPOSITE(CLK_200M_SRC, "clk_200m_src", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(1), 11, 1, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 3, GFLAGS),
++	COMPOSITE(CLK_250M_SRC, "clk_250m_src", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(2), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 4, GFLAGS),
++	COMPOSITE(CLK_300M_SRC, "clk_300m_src", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(2), 11, 1, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 5, GFLAGS),
++	COMPOSITE(CLK_350M_SRC, "clk_350m_src", gpll_spll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(3), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 6, GFLAGS),
++	COMPOSITE(CLK_400M_SRC, "clk_400m_src", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(3), 11, 1, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 7, GFLAGS),
++	COMPOSITE_HALFDIV(CLK_450M_SRC, "clk_450m_src", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(4), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 8, GFLAGS),
++	COMPOSITE(CLK_500M_SRC, "clk_500m_src", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(4), 11, 1, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 9, GFLAGS),
++	COMPOSITE(CLK_600M_SRC, "clk_600m_src", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(5), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 10, GFLAGS),
++	COMPOSITE(CLK_650M_SRC, "clk_650m_src", gpll_lpll_p, 0,
++			RK3588_CLKSEL_CON(5), 11, 1, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 11, GFLAGS),
++	COMPOSITE(CLK_700M_SRC, "clk_700m_src", gpll_spll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(6), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 12, GFLAGS),
++	COMPOSITE(CLK_800M_SRC, "clk_800m_src", gpll_aupll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(6), 11, 1, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 13, GFLAGS),
++	COMPOSITE_HALFDIV(CLK_1000M_SRC, "clk_1000m_src", gpll_cpll_npll_v0pll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(7), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 14, GFLAGS),
++	COMPOSITE(CLK_1200M_SRC, "clk_1200m_src", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(7), 12, 1, MFLAGS, 7, 5, DFLAGS,
++			RK3588_CLKGATE_CON(0), 15, GFLAGS),
++	COMPOSITE_NODIV(ACLK_TOP_M300_ROOT, "aclk_top_m300_root", mux_300m_200m_100m_24m_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(9), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(1), 10, GFLAGS),
++	COMPOSITE_NODIV(ACLK_TOP_M500_ROOT, "aclk_top_m500_root", mux_500m_300m_100m_24m_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(9), 2, 2, MFLAGS,
++			RK3588_CLKGATE_CON(1), 11, GFLAGS),
++	COMPOSITE_NODIV(ACLK_TOP_M400_ROOT, "aclk_top_m400_root", mux_400m_200m_100m_24m_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(9), 4, 2, MFLAGS,
++			RK3588_CLKGATE_CON(1), 12, GFLAGS),
++	COMPOSITE_NODIV(ACLK_TOP_S200_ROOT, "aclk_top_s200_root", mux_200m_100m_50m_24m_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(9), 6, 2, MFLAGS,
++			RK3588_CLKGATE_CON(1), 13, GFLAGS),
++	COMPOSITE_NODIV(ACLK_TOP_S400_ROOT, "aclk_top_s400_root", mux_400m_200m_100m_24m_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(9), 8, 2, MFLAGS,
++			RK3588_CLKGATE_CON(1), 14, GFLAGS),
++	COMPOSITE(ACLK_TOP_ROOT, "aclk_top_root", gpll_cpll_aupll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(8), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(1), 0, GFLAGS),
++	COMPOSITE_NODIV(PCLK_TOP_ROOT, "pclk_top_root", mux_100m_50m_24m_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(8), 7, 2, MFLAGS,
++			RK3588_CLKGATE_CON(1), 1, GFLAGS),
++	COMPOSITE(ACLK_LOW_TOP_ROOT, "aclk_low_top_root", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(8), 14, 1, MFLAGS, 9, 5, DFLAGS,
++			RK3588_CLKGATE_CON(1), 2, GFLAGS),
++	COMPOSITE(CLK_MIPI_CAMARAOUT_M0, "clk_mipi_camaraout_m0", mux_24m_spll_gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(18), 8, 2, MFLAGS, 0, 8, DFLAGS,
++			RK3588_CLKGATE_CON(5), 9, GFLAGS),
++	COMPOSITE(CLK_MIPI_CAMARAOUT_M1, "clk_mipi_camaraout_m1", mux_24m_spll_gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(19), 8, 2, MFLAGS, 0, 8, DFLAGS,
++			RK3588_CLKGATE_CON(5), 10, GFLAGS),
++	COMPOSITE(CLK_MIPI_CAMARAOUT_M2, "clk_mipi_camaraout_m2", mux_24m_spll_gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(20), 8, 2, MFLAGS, 0, 8, DFLAGS,
++			RK3588_CLKGATE_CON(5), 11, GFLAGS),
++	COMPOSITE(CLK_MIPI_CAMARAOUT_M3, "clk_mipi_camaraout_m3", mux_24m_spll_gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(21), 8, 2, MFLAGS, 0, 8, DFLAGS,
++			RK3588_CLKGATE_CON(5), 12, GFLAGS),
++	COMPOSITE(CLK_MIPI_CAMARAOUT_M4, "clk_mipi_camaraout_m4", mux_24m_spll_gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(22), 8, 2, MFLAGS, 0, 8, DFLAGS,
++			RK3588_CLKGATE_CON(5), 13, GFLAGS),
++	COMPOSITE(MCLK_GMAC0_OUT, "mclk_gmac0_out", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(15), 7, 1, MFLAGS, 0, 7, DFLAGS,
++			RK3588_CLKGATE_CON(5), 3, GFLAGS),
++	COMPOSITE(REFCLKO25M_ETH0_OUT, "refclko25m_eth0_out", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(15), 15, 1, MFLAGS, 8, 7, DFLAGS,
++			RK3588_CLKGATE_CON(5), 4, GFLAGS),
++	COMPOSITE(REFCLKO25M_ETH1_OUT, "refclko25m_eth1_out", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(16), 7, 1, MFLAGS, 0, 7, DFLAGS,
++			RK3588_CLKGATE_CON(5), 5, GFLAGS),
++	COMPOSITE(CLK_CIFOUT_OUT, "clk_cifout_out", gpll_cpll_24m_spll_p, 0,
++			RK3588_CLKSEL_CON(17), 8, 2, MFLAGS, 0, 8, DFLAGS,
++			RK3588_CLKGATE_CON(5), 6, GFLAGS),
++	GATE(PCLK_MIPI_DCPHY0, "pclk_mipi_dcphy0", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(3), 14, GFLAGS),
++	GATE(PCLK_MIPI_DCPHY1, "pclk_mipi_dcphy1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(4), 3, GFLAGS),
++	GATE(PCLK_CSIPHY0, "pclk_csiphy0", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(1), 6, GFLAGS),
++	GATE(PCLK_CSIPHY1, "pclk_csiphy1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(1), 8, GFLAGS),
++	GATE(PCLK_CRU, "pclk_cru", "pclk_top_root", CLK_IS_CRITICAL,
++			RK3588_CLKGATE_CON(5), 0, GFLAGS),
++
++	/* bigcore0 */
++	COMPOSITE_NODIV(PCLK_BIGCORE0_ROOT, "pclk_bigcore0_root", mux_100m_50m_24m_p,
++			CLK_IS_CRITICAL,
++			RK3588_BIGCORE0_CLKSEL_CON(2), 0, 2, MFLAGS,
++			RK3588_BIGCORE0_CLKGATE_CON(0), 14, GFLAGS),
++	GATE(PCLK_BIGCORE0_PVTM, "pclk_bigcore0_pvtm", "pclk_bigcore0_root", 0,
++			RK3588_BIGCORE0_CLKGATE_CON(1), 0, GFLAGS),
++	GATE(CLK_BIGCORE0_PVTM, "clk_bigcore0_pvtm", "xin24m", 0,
++			RK3588_BIGCORE0_CLKGATE_CON(0), 12, GFLAGS),
++	GATE(CLK_CORE_BIGCORE0_PVTM, "clk_core_bigcore0_pvtm", "armclk_b01", 0,
++			RK3588_BIGCORE0_CLKGATE_CON(0), 13, GFLAGS),
++
++	/* bigcore1 */
++	COMPOSITE_NODIV(PCLK_BIGCORE1_ROOT, "pclk_bigcore1_root", mux_100m_50m_24m_p,
++			CLK_IS_CRITICAL,
++			RK3588_BIGCORE1_CLKSEL_CON(2), 0, 2, MFLAGS,
++			RK3588_BIGCORE1_CLKGATE_CON(0), 14, GFLAGS),
++	GATE(PCLK_BIGCORE1_PVTM, "pclk_bigcore1_pvtm", "pclk_bigcore1_root", 0,
++			RK3588_BIGCORE1_CLKGATE_CON(1), 0, GFLAGS),
++	GATE(CLK_BIGCORE1_PVTM, "clk_bigcore1_pvtm", "xin24m", 0,
++			RK3588_BIGCORE1_CLKGATE_CON(0), 12, GFLAGS),
++	GATE(CLK_CORE_BIGCORE1_PVTM, "clk_core_bigcore1_pvtm", "armclk_b23", 0,
++			RK3588_BIGCORE1_CLKGATE_CON(0), 13, GFLAGS),
++
++	/* dsu */
++	COMPOSITE(0, "sclk_dsu", b0pll_b1pll_lpll_gpll_p, CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(0), 12, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_DSU_CLKGATE_CON(0), 4, GFLAGS),
++	COMPOSITE_NOMUX(0, "atclk_dsu", "sclk_dsu", CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(3), 0, 5, DFLAGS | CLK_DIVIDER_READ_ONLY,
++			RK3588_DSU_CLKGATE_CON(1), 0, GFLAGS),
++	COMPOSITE_NOMUX(0, "gicclk_dsu", "sclk_dsu", CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(3), 5, 5, DFLAGS | CLK_DIVIDER_READ_ONLY,
++			RK3588_DSU_CLKGATE_CON(1), 1, GFLAGS),
++	COMPOSITE_NOMUX(0, "aclkmp_dsu", "sclk_dsu", CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(1), 11, 5, DFLAGS | CLK_DIVIDER_READ_ONLY,
++			RK3588_DSU_CLKGATE_CON(0), 12, GFLAGS),
++	COMPOSITE_NOMUX(0, "aclkm_dsu", "sclk_dsu", CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(1), 1, 5, DFLAGS | CLK_DIVIDER_READ_ONLY,
++			RK3588_DSU_CLKGATE_CON(0), 8, GFLAGS),
++	COMPOSITE_NOMUX(0, "aclks_dsu", "sclk_dsu", CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(1), 6, 5, DFLAGS | CLK_DIVIDER_READ_ONLY,
++			RK3588_DSU_CLKGATE_CON(0), 9, GFLAGS),
++	COMPOSITE_NOMUX(0, "periph_dsu", "sclk_dsu", CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(2), 0, 5, DFLAGS | CLK_DIVIDER_READ_ONLY,
++			RK3588_DSU_CLKGATE_CON(0), 13, GFLAGS),
++	COMPOSITE_NOMUX(0, "cntclk_dsu", "periph_dsu", CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(2), 5, 5, DFLAGS | CLK_DIVIDER_READ_ONLY,
++			RK3588_DSU_CLKGATE_CON(0), 14, GFLAGS),
++	COMPOSITE_NOMUX(0, "tsclk_dsu", "periph_dsu", CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(2), 10, 5, DFLAGS | CLK_DIVIDER_READ_ONLY,
++			RK3588_DSU_CLKGATE_CON(0), 15, GFLAGS),
++	COMPOSITE_NODIV(PCLK_DSU_S_ROOT, "pclk_dsu_s_root", mux_100m_50m_24m_p, CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(4), 11, 2, MFLAGS,
++			RK3588_DSU_CLKGATE_CON(2), 2, GFLAGS),
++	COMPOSITE(PCLK_DSU_ROOT, "pclk_dsu_root", b0pll_b1pll_lpll_gpll_p, CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(4), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_DSU_CLKGATE_CON(1), 3, GFLAGS),
++	COMPOSITE_NODIV(PCLK_DSU_NS_ROOT, "pclk_dsu_ns_root", mux_100m_50m_24m_p, CLK_IS_CRITICAL,
++			RK3588_DSU_CLKSEL_CON(4), 7, 2, MFLAGS,
++			RK3588_DSU_CLKGATE_CON(1), 4, GFLAGS),
++	GATE(PCLK_LITCORE_PVTM, "pclk_litcore_pvtm", "pclk_dsu_ns_root", 0,
++			RK3588_DSU_CLKGATE_CON(2), 6, GFLAGS),
++	GATE(PCLK_DBG, "pclk_dbg", "pclk_dsu_root", CLK_IS_CRITICAL,
++			RK3588_DSU_CLKGATE_CON(1), 7, GFLAGS),
++	GATE(PCLK_DSU, "pclk_dsu", "pclk_dsu_root", CLK_IS_CRITICAL,
++			RK3588_DSU_CLKGATE_CON(1), 6, GFLAGS),
++	GATE(PCLK_S_DAPLITE, "pclk_s_daplite", "pclk_dsu_ns_root", CLK_IGNORE_UNUSED,
++			RK3588_DSU_CLKGATE_CON(1), 8, GFLAGS),
++	GATE(PCLK_M_DAPLITE, "pclk_m_daplite", "pclk_dsu_root", CLK_IGNORE_UNUSED,
++			RK3588_DSU_CLKGATE_CON(1), 9, GFLAGS),
++	GATE(CLK_LITCORE_PVTM, "clk_litcore_pvtm", "xin24m", 0,
++			RK3588_DSU_CLKGATE_CON(2), 0, GFLAGS),
++	GATE(CLK_CORE_LITCORE_PVTM, "clk_core_litcore_pvtm", "armclk_l", 0,
++			RK3588_DSU_CLKGATE_CON(2), 1, GFLAGS),
++
++	/* audio */
++	COMPOSITE_NODIV(HCLK_AUDIO_ROOT, "hclk_audio_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(24), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(7), 0, GFLAGS),
++	COMPOSITE_NODIV(PCLK_AUDIO_ROOT, "pclk_audio_root", mux_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(24), 2, 2, MFLAGS,
++			RK3588_CLKGATE_CON(7), 1, GFLAGS),
++	GATE(HCLK_I2S2_2CH, "hclk_i2s2_2ch", "hclk_audio_root", 0,
++			RK3588_CLKGATE_CON(7), 12, GFLAGS),
++	GATE(HCLK_I2S3_2CH, "hclk_i2s3_2ch", "hclk_audio_root", 0,
++			RK3588_CLKGATE_CON(7), 13, GFLAGS),
++	COMPOSITE(CLK_I2S2_2CH_SRC, "clk_i2s2_2ch_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(28), 9, 1, MFLAGS, 4, 5, DFLAGS,
++			RK3588_CLKGATE_CON(7), 14, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S2_2CH_FRAC, "clk_i2s2_2ch_frac", "clk_i2s2_2ch_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(29), 0,
++			RK3588_CLKGATE_CON(7), 15, GFLAGS,
++			&rk3588_i2s2_2ch_fracmux),
++	GATE(MCLK_I2S2_2CH, "mclk_i2s2_2ch", "clk_i2s2_2ch", 0,
++			RK3588_CLKGATE_CON(8), 0, GFLAGS),
++	MUX(I2S2_2CH_MCLKOUT, "i2s2_2ch_mclkout", i2s2_2ch_mclkout_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(30), 2, 1, MFLAGS),
++
++	COMPOSITE(CLK_I2S3_2CH_SRC, "clk_i2s3_2ch_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(30), 8, 1, MFLAGS, 3, 5, DFLAGS,
++			RK3588_CLKGATE_CON(8), 1, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S3_2CH_FRAC, "clk_i2s3_2ch_frac", "clk_i2s3_2ch_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(31), 0,
++			RK3588_CLKGATE_CON(8), 2, GFLAGS,
++			&rk3588_i2s3_2ch_fracmux),
++	GATE(MCLK_I2S3_2CH, "mclk_i2s3_2ch", "clk_i2s3_2ch", 0,
++			RK3588_CLKGATE_CON(8), 3, GFLAGS),
++	GATE(CLK_DAC_ACDCDIG, "clk_dac_acdcdig", "mclk_i2s3_2ch", 0,
++			RK3588_CLKGATE_CON(8), 4, GFLAGS),
++	MUX(I2S3_2CH_MCLKOUT, "i2s3_2ch_mclkout", i2s3_2ch_mclkout_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(32), 2, 1, MFLAGS),
++	GATE(PCLK_ACDCDIG, "pclk_acdcdig", "pclk_audio_root", 0,
++			RK3588_CLKGATE_CON(7), 11, GFLAGS),
++	GATE(HCLK_I2S0_8CH, "hclk_i2s0_8ch", "hclk_audio_root", 0,
++			RK3588_CLKGATE_CON(7), 4, GFLAGS),
++
++	COMPOSITE(CLK_I2S0_8CH_TX_SRC, "clk_i2s0_8ch_tx_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(24), 9, 1, MFLAGS, 4, 5, DFLAGS,
++			RK3588_CLKGATE_CON(7), 5, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S0_8CH_TX_FRAC, "clk_i2s0_8ch_tx_frac", "clk_i2s0_8ch_tx_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(25), 0,
++			RK3588_CLKGATE_CON(7), 6, GFLAGS,
++			&rk3588_i2s0_8ch_tx_fracmux),
++	GATE(MCLK_I2S0_8CH_TX, "mclk_i2s0_8ch_tx", "clk_i2s0_8ch_tx", 0,
++			RK3588_CLKGATE_CON(7), 7, GFLAGS),
++
++	COMPOSITE(CLK_I2S0_8CH_RX_SRC, "clk_i2s0_8ch_rx_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(26), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(7), 8, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S0_8CH_RX_FRAC, "clk_i2s0_8ch_rx_frac", "clk_i2s0_8ch_rx_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(27), 0,
++			RK3588_CLKGATE_CON(7), 9, GFLAGS,
++			&rk3588_i2s0_8ch_rx_fracmux),
++	GATE(MCLK_I2S0_8CH_RX, "mclk_i2s0_8ch_rx", "clk_i2s0_8ch_rx", 0,
++			RK3588_CLKGATE_CON(7), 10, GFLAGS),
++	MUX(I2S0_8CH_MCLKOUT, "i2s0_8ch_mclkout", i2s0_8ch_mclkout_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(28), 2, 2, MFLAGS),
++
++	GATE(HCLK_PDM1, "hclk_pdm1", "hclk_audio_root", 0,
++			RK3588_CLKGATE_CON(9), 6, GFLAGS),
++	COMPOSITE(MCLK_PDM1, "mclk_pdm1", gpll_cpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(36), 7, 2, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(9), 7, GFLAGS),
++
++	GATE(HCLK_SPDIF0, "hclk_spdif0", "hclk_audio_root", 0,
++			RK3588_CLKGATE_CON(8), 14, GFLAGS),
++	COMPOSITE(CLK_SPDIF0_SRC, "clk_spdif0_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(32), 8, 1, MFLAGS, 3, 5, DFLAGS,
++			RK3588_CLKGATE_CON(8), 15, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_SPDIF0_FRAC, "clk_spdif0_frac", "clk_spdif0_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(33), 0,
++			RK3588_CLKGATE_CON(9), 0, GFLAGS,
++			&rk3588_spdif0_fracmux),
++	GATE(MCLK_SPDIF0, "mclk_spdif0", "clk_spdif0", 0,
++			RK3588_CLKGATE_CON(9), 1, GFLAGS),
++
++	GATE(HCLK_SPDIF1, "hclk_spdif1", "hclk_audio_root", 0,
++			RK3588_CLKGATE_CON(9), 2, GFLAGS),
++	COMPOSITE(CLK_SPDIF1_SRC, "clk_spdif1_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(34), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(9), 3, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_SPDIF1_FRAC, "clk_spdif1_frac", "clk_spdif1_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(35), 0,
++			RK3588_CLKGATE_CON(9), 4, GFLAGS,
++			&rk3588_spdif1_fracmux),
++	GATE(MCLK_SPDIF1, "mclk_spdif1", "clk_spdif1", 0,
++			RK3588_CLKGATE_CON(9), 5, GFLAGS),
++
++	COMPOSITE(ACLK_AV1_ROOT, "aclk_av1_root", gpll_cpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(163), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(68), 0, GFLAGS),
++	COMPOSITE_NODIV(PCLK_AV1_ROOT, "pclk_av1_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(163), 7, 2, MFLAGS,
++			RK3588_CLKGATE_CON(68), 3, GFLAGS),
++
++	/* bus */
++	COMPOSITE(ACLK_BUS_ROOT, "aclk_bus_root", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(38), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(10), 0, GFLAGS),
++
++	GATE(PCLK_MAILBOX0, "pclk_mailbox0", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(16), 11, GFLAGS),
++	GATE(PCLK_MAILBOX1, "pclk_mailbox1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(16), 12, GFLAGS),
++	GATE(PCLK_MAILBOX2, "pclk_mailbox2", "pclk_top_root", 0,
++		RK3588_CLKGATE_CON(16), 13, GFLAGS),
++	GATE(PCLK_PMU2, "pclk_pmu2", "pclk_top_root", CLK_IS_CRITICAL,
++			RK3588_CLKGATE_CON(19), 3, GFLAGS),
++	GATE(PCLK_PMUCM0_INTMUX, "pclk_pmucm0_intmux", "pclk_top_root", CLK_IS_CRITICAL,
++			RK3588_CLKGATE_CON(19), 4, GFLAGS),
++	GATE(PCLK_DDRCM0_INTMUX, "pclk_ddrcm0_intmux", "pclk_top_root", CLK_IS_CRITICAL,
++			RK3588_CLKGATE_CON(19), 5, GFLAGS),
++
++	GATE(PCLK_PWM1, "pclk_pwm1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(15), 3, GFLAGS),
++	COMPOSITE_NODIV(CLK_PWM1, "clk_pwm1", mux_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(59), 12, 2, MFLAGS,
++			RK3588_CLKGATE_CON(15), 4, GFLAGS),
++	GATE(CLK_PWM1_CAPTURE, "clk_pwm1_capture", "xin24m", 0,
++			RK3588_CLKGATE_CON(15), 5, GFLAGS),
++	GATE(PCLK_PWM2, "pclk_pwm2", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(15), 6, GFLAGS),
++	COMPOSITE_NODIV(CLK_PWM2, "clk_pwm2", mux_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(59), 14, 2, MFLAGS,
++			RK3588_CLKGATE_CON(15), 7, GFLAGS),
++	GATE(CLK_PWM2_CAPTURE, "clk_pwm2_capture", "xin24m", 0,
++			RK3588_CLKGATE_CON(15), 8, GFLAGS),
++	GATE(PCLK_PWM3, "pclk_pwm3", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(15), 9, GFLAGS),
++	COMPOSITE_NODIV(CLK_PWM3, "clk_pwm3", mux_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(60), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(15), 10, GFLAGS),
++	GATE(CLK_PWM3_CAPTURE, "clk_pwm3_capture", "xin24m", 0,
++			RK3588_CLKGATE_CON(15), 11, GFLAGS),
++
++	GATE(PCLK_BUSTIMER0, "pclk_bustimer0", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(15), 12, GFLAGS),
++	GATE(PCLK_BUSTIMER1, "pclk_bustimer1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(15), 13, GFLAGS),
++	COMPOSITE_NODIV(CLK_BUS_TIMER_ROOT, "clk_bus_timer_root", mux_24m_100m_p, 0,
++			RK3588_CLKSEL_CON(60), 2, 1, MFLAGS,
++			RK3588_CLKGATE_CON(15), 14, GFLAGS),
++	GATE(CLK_BUSTIMER0, "clk_bustimer0", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(15), 15, GFLAGS),
++	GATE(CLK_BUSTIMER1, "clk_bustimer1", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(16), 0, GFLAGS),
++	GATE(CLK_BUSTIMER2, "clk_bustimer2", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(16), 1, GFLAGS),
++	GATE(CLK_BUSTIMER3, "clk_bustimer3", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(16), 2, GFLAGS),
++	GATE(CLK_BUSTIMER4, "clk_bustimer4", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(16), 3, GFLAGS),
++	GATE(CLK_BUSTIMER5, "clk_bustimer5", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(16), 4, GFLAGS),
++	GATE(CLK_BUSTIMER6, "clk_bustimer6", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(16), 5, GFLAGS),
++	GATE(CLK_BUSTIMER7, "clk_bustimer7", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(16), 6, GFLAGS),
++	GATE(CLK_BUSTIMER8, "clk_bustimer8", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(16), 7, GFLAGS),
++	GATE(CLK_BUSTIMER9, "clk_bustimer9", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(16), 8, GFLAGS),
++	GATE(CLK_BUSTIMER10, "clk_bustimer10", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(16), 9, GFLAGS),
++	GATE(CLK_BUSTIMER11, "clk_bustimer11", "clk_bus_timer_root", 0,
++			RK3588_CLKGATE_CON(16), 10, GFLAGS),
++
++	GATE(PCLK_WDT0, "pclk_wdt0", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(15), 0, GFLAGS),
++	GATE(TCLK_WDT0, "tclk_wdt0", "xin24m", 0,
++			RK3588_CLKGATE_CON(15), 1, GFLAGS),
++
++	GATE(PCLK_CAN0, "pclk_can0", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(11), 8, GFLAGS),
++	COMPOSITE(CLK_CAN0, "clk_can0", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(39), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(11), 9, GFLAGS),
++	GATE(PCLK_CAN1, "pclk_can1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(11), 10, GFLAGS),
++	COMPOSITE(CLK_CAN1, "clk_can1", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(39), 11, 1, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(11), 11, GFLAGS),
++	GATE(PCLK_CAN2, "pclk_can2", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(11), 12, GFLAGS),
++	COMPOSITE(CLK_CAN2, "clk_can2", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(40), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(11), 13, GFLAGS),
++
++	GATE(ACLK_DECOM, "aclk_decom", "aclk_bus_root", 0,
++			RK3588_CLKGATE_CON(17), 6, GFLAGS),
++	GATE(PCLK_DECOM, "pclk_decom", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(17), 7, GFLAGS),
++	COMPOSITE(DCLK_DECOM, "dclk_decom", gpll_spll_p, 0,
++			RK3588_CLKSEL_CON(62), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(17), 8, GFLAGS),
++	GATE(ACLK_DMAC0, "aclk_dmac0", "aclk_bus_root", 0,
++			RK3588_CLKGATE_CON(10), 5, GFLAGS),
++	GATE(ACLK_DMAC1, "aclk_dmac1", "aclk_bus_root", 0,
++			RK3588_CLKGATE_CON(10), 6, GFLAGS),
++	GATE(ACLK_DMAC2, "aclk_dmac2", "aclk_bus_root", 0,
++			RK3588_CLKGATE_CON(10), 7, GFLAGS),
++	GATE(ACLK_GIC, "aclk_gic", "aclk_bus_root", CLK_IS_CRITICAL,
++			RK3588_CLKGATE_CON(10), 3, GFLAGS),
++
++	GATE(PCLK_GPIO1, "pclk_gpio1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(16), 14, GFLAGS),
++	COMPOSITE(DBCLK_GPIO1, "dbclk_gpio1", mux_24m_32k_p, 0,
++			RK3588_CLKSEL_CON(60), 8, 1, MFLAGS, 3, 5, DFLAGS,
++			RK3588_CLKGATE_CON(16), 15, GFLAGS),
++	GATE(PCLK_GPIO2, "pclk_gpio2", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(17), 0, GFLAGS),
++	COMPOSITE(DBCLK_GPIO2, "dbclk_gpio2", mux_24m_32k_p, 0,
++			RK3588_CLKSEL_CON(60), 14, 1, MFLAGS, 9, 5, DFLAGS,
++			RK3588_CLKGATE_CON(17), 1, GFLAGS),
++	GATE(PCLK_GPIO3, "pclk_gpio3", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(17), 2, GFLAGS),
++	COMPOSITE(DBCLK_GPIO3, "dbclk_gpio3", mux_24m_32k_p, 0,
++			RK3588_CLKSEL_CON(61), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(17), 3, GFLAGS),
++	GATE(PCLK_GPIO4, "pclk_gpio4", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(17), 4, GFLAGS),
++	COMPOSITE(DBCLK_GPIO4, "dbclk_gpio4", mux_24m_32k_p, 0,
++			RK3588_CLKSEL_CON(61), 11, 1, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(17), 5, GFLAGS),
++
++	GATE(PCLK_I2C1, "pclk_i2c1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(10), 8, GFLAGS),
++	GATE(PCLK_I2C2, "pclk_i2c2", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(10), 9, GFLAGS),
++	GATE(PCLK_I2C3, "pclk_i2c3", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(10), 10, GFLAGS),
++	GATE(PCLK_I2C4, "pclk_i2c4", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(10), 11, GFLAGS),
++	GATE(PCLK_I2C5, "pclk_i2c5", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(10), 12, GFLAGS),
++	GATE(PCLK_I2C6, "pclk_i2c6", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(10), 13, GFLAGS),
++	GATE(PCLK_I2C7, "pclk_i2c7", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(10), 14, GFLAGS),
++	GATE(PCLK_I2C8, "pclk_i2c8", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(10), 15, GFLAGS),
++	COMPOSITE_NODIV(CLK_I2C1, "clk_i2c1", mux_200m_100m_p, 0,
++			RK3588_CLKSEL_CON(38), 6, 1, MFLAGS,
++			RK3588_CLKGATE_CON(11), 0, GFLAGS),
++	COMPOSITE_NODIV(CLK_I2C2, "clk_i2c2", mux_200m_100m_p, 0,
++			RK3588_CLKSEL_CON(38), 7, 1, MFLAGS,
++			RK3588_CLKGATE_CON(11), 1, GFLAGS),
++	COMPOSITE_NODIV(CLK_I2C3, "clk_i2c3", mux_200m_100m_p, 0,
++			RK3588_CLKSEL_CON(38), 8, 1, MFLAGS,
++			RK3588_CLKGATE_CON(11), 2, GFLAGS),
++	COMPOSITE_NODIV(CLK_I2C4, "clk_i2c4", mux_200m_100m_p, 0,
++			RK3588_CLKSEL_CON(38), 9, 1, MFLAGS,
++			RK3588_CLKGATE_CON(11), 3, GFLAGS),
++	COMPOSITE_NODIV(CLK_I2C5, "clk_i2c5", mux_200m_100m_p, 0,
++			RK3588_CLKSEL_CON(38), 10, 1, MFLAGS,
++			RK3588_CLKGATE_CON(11), 4, GFLAGS),
++	COMPOSITE_NODIV(CLK_I2C6, "clk_i2c6", mux_200m_100m_p, 0,
++			RK3588_CLKSEL_CON(38), 11, 1, MFLAGS,
++			RK3588_CLKGATE_CON(11), 5, GFLAGS),
++	COMPOSITE_NODIV(CLK_I2C7, "clk_i2c7", mux_200m_100m_p, 0,
++			RK3588_CLKSEL_CON(38), 12, 1, MFLAGS,
++			RK3588_CLKGATE_CON(11), 6, GFLAGS),
++	COMPOSITE_NODIV(CLK_I2C8, "clk_i2c8", mux_200m_100m_p, 0,
++			RK3588_CLKSEL_CON(38), 13, 1, MFLAGS,
++			RK3588_CLKGATE_CON(11), 7, GFLAGS),
++
++	GATE(PCLK_OTPC_NS, "pclk_otpc_ns", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(18), 9, GFLAGS),
++	GATE(CLK_OTPC_NS, "clk_otpc_ns", "xin24m", 0,
++			RK3588_CLKGATE_CON(18), 10, GFLAGS),
++	GATE(CLK_OTPC_ARB, "clk_otpc_arb", "xin24m", 0,
++			RK3588_CLKGATE_CON(18), 11, GFLAGS),
++	GATE(CLK_OTP_PHY_G, "clk_otp_phy_g", "xin24m", 0,
++			RK3588_CLKGATE_CON(18), 13, GFLAGS),
++	GATE(CLK_OTPC_AUTO_RD_G, "clk_otpc_auto_rd_g", "xin24m", 0,
++			RK3588_CLKGATE_CON(18), 12, GFLAGS),
++
++	GATE(PCLK_SARADC, "pclk_saradc", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(11), 14, GFLAGS),
++	COMPOSITE(CLK_SARADC, "clk_saradc", gpll_24m_p, 0,
++			RK3588_CLKSEL_CON(40), 14, 1, MFLAGS, 6, 8, DFLAGS,
++			RK3588_CLKGATE_CON(11), 15, GFLAGS),
++
++	GATE(PCLK_SPI0, "pclk_spi0", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(14), 6, GFLAGS),
++	GATE(PCLK_SPI1, "pclk_spi1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(14), 7, GFLAGS),
++	GATE(PCLK_SPI2, "pclk_spi2", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(14), 8, GFLAGS),
++	GATE(PCLK_SPI3, "pclk_spi3", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(14), 9, GFLAGS),
++	GATE(PCLK_SPI4, "pclk_spi4", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(14), 10, GFLAGS),
++	COMPOSITE_NODIV(CLK_SPI0, "clk_spi0", mux_200m_150m_24m_p, 0,
++			RK3588_CLKSEL_CON(59), 2, 2, MFLAGS,
++			RK3588_CLKGATE_CON(14), 11, GFLAGS),
++	COMPOSITE_NODIV(CLK_SPI1, "clk_spi1", mux_200m_150m_24m_p, 0,
++			RK3588_CLKSEL_CON(59), 4, 2, MFLAGS,
++			RK3588_CLKGATE_CON(14), 12, GFLAGS),
++	COMPOSITE_NODIV(CLK_SPI2, "clk_spi2", mux_200m_150m_24m_p, 0,
++			RK3588_CLKSEL_CON(59), 6, 2, MFLAGS,
++			RK3588_CLKGATE_CON(14), 13, GFLAGS),
++	COMPOSITE_NODIV(CLK_SPI3, "clk_spi3", mux_200m_150m_24m_p, 0,
++			RK3588_CLKSEL_CON(59), 8, 2, MFLAGS,
++			RK3588_CLKGATE_CON(14), 14, GFLAGS),
++	COMPOSITE_NODIV(CLK_SPI4, "clk_spi4", mux_200m_150m_24m_p, 0,
++			RK3588_CLKSEL_CON(59), 10, 2, MFLAGS,
++			RK3588_CLKGATE_CON(14), 15, GFLAGS),
++
++	GATE(ACLK_SPINLOCK, "aclk_spinlock", "aclk_bus_root", CLK_IGNORE_UNUSED,
++			RK3588_CLKGATE_CON(18), 6, GFLAGS),
++	GATE(PCLK_TSADC, "pclk_tsadc", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(12), 0, GFLAGS),
++	COMPOSITE(CLK_TSADC, "clk_tsadc", gpll_24m_p, 0,
++			RK3588_CLKSEL_CON(41), 8, 1, MFLAGS, 0, 8, DFLAGS,
++			RK3588_CLKGATE_CON(12), 1, GFLAGS),
++
++	GATE(PCLK_UART1, "pclk_uart1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(12), 2, GFLAGS),
++	GATE(PCLK_UART2, "pclk_uart2", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(12), 3, GFLAGS),
++	GATE(PCLK_UART3, "pclk_uart3", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(12), 4, GFLAGS),
++	GATE(PCLK_UART4, "pclk_uart4", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(12), 5, GFLAGS),
++	GATE(PCLK_UART5, "pclk_uart5", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(12), 6, GFLAGS),
++	GATE(PCLK_UART6, "pclk_uart6", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(12), 7, GFLAGS),
++	GATE(PCLK_UART7, "pclk_uart7", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(12), 8, GFLAGS),
++	GATE(PCLK_UART8, "pclk_uart8", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(12), 9, GFLAGS),
++	GATE(PCLK_UART9, "pclk_uart9", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(12), 10, GFLAGS),
++
++	COMPOSITE(CLK_UART1_SRC, "clk_uart1_src", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(41), 14, 1, MFLAGS, 9, 5, DFLAGS,
++			RK3588_CLKGATE_CON(12), 11, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_UART1_FRAC, "clk_uart1_frac", "clk_uart1_src", CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(42), 0,
++			RK3588_CLKGATE_CON(12), 12, GFLAGS,
++			&rk3588_uart1_fracmux),
++	GATE(SCLK_UART1, "sclk_uart1", "clk_uart1", 0,
++			RK3588_CLKGATE_CON(12), 13, GFLAGS),
++	COMPOSITE(CLK_UART2_SRC, "clk_uart2_src", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(43), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(12), 14, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_UART2_FRAC, "clk_uart2_frac", "clk_uart2_src", CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(44), 0,
++			RK3588_CLKGATE_CON(12), 15, GFLAGS,
++			&rk3588_uart2_fracmux),
++	GATE(SCLK_UART2, "sclk_uart2", "clk_uart2", 0,
++			RK3588_CLKGATE_CON(13), 0, GFLAGS),
++	COMPOSITE(CLK_UART3_SRC, "clk_uart3_src", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(45), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(13), 1, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_UART3_FRAC, "clk_uart3_frac", "clk_uart3_src", CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(46), 0,
++			RK3588_CLKGATE_CON(13), 2, GFLAGS,
++			&rk3588_uart3_fracmux),
++	GATE(SCLK_UART3, "sclk_uart3", "clk_uart3", 0,
++			RK3588_CLKGATE_CON(13), 3, GFLAGS),
++	COMPOSITE(CLK_UART4_SRC, "clk_uart4_src", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(47), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(13), 4, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_UART4_FRAC, "clk_uart4_frac", "clk_uart4_src", CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(48), 0,
++			RK3588_CLKGATE_CON(13), 5, GFLAGS,
++			&rk3588_uart4_fracmux),
++	GATE(SCLK_UART4, "sclk_uart4", "clk_uart4", 0,
++			RK3588_CLKGATE_CON(13), 6, GFLAGS),
++	COMPOSITE(CLK_UART5_SRC, "clk_uart5_src", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(49), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(13), 7, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_UART5_FRAC, "clk_uart5_frac", "clk_uart5_src", CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(50), 0,
++			RK3588_CLKGATE_CON(13), 8, GFLAGS,
++			&rk3588_uart5_fracmux),
++	GATE(SCLK_UART5, "sclk_uart5", "clk_uart5", 0,
++			RK3588_CLKGATE_CON(13), 9, GFLAGS),
++	COMPOSITE(CLK_UART6_SRC, "clk_uart6_src", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(51), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(13), 10, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_UART6_FRAC, "clk_uart6_frac", "clk_uart6_src", CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(52), 0,
++			RK3588_CLKGATE_CON(13), 11, GFLAGS,
++			&rk3588_uart6_fracmux),
++	GATE(SCLK_UART6, "sclk_uart6", "clk_uart6", 0,
++			RK3588_CLKGATE_CON(13), 12, GFLAGS),
++	COMPOSITE(CLK_UART7_SRC, "clk_uart7_src", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(53), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(13), 13, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_UART7_FRAC, "clk_uart7_frac", "clk_uart7_src", CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(54), 0,
++			RK3588_CLKGATE_CON(13), 14, GFLAGS,
++			&rk3588_uart7_fracmux),
++	GATE(SCLK_UART7, "sclk_uart7", "clk_uart7", 0,
++			RK3588_CLKGATE_CON(13), 15, GFLAGS),
++	COMPOSITE(CLK_UART8_SRC, "clk_uart8_src", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(55), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(14), 0, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_UART8_FRAC, "clk_uart8_frac", "clk_uart8_src", CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(56), 0,
++			RK3588_CLKGATE_CON(14), 1, GFLAGS,
++			&rk3588_uart8_fracmux),
++	GATE(SCLK_UART8, "sclk_uart8", "clk_uart8", 0,
++			RK3588_CLKGATE_CON(14), 2, GFLAGS),
++	COMPOSITE(CLK_UART9_SRC, "clk_uart9_src", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(57), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(14), 3, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_UART9_FRAC, "clk_uart9_frac", "clk_uart9_src", CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(58), 0,
++			RK3588_CLKGATE_CON(14), 4, GFLAGS,
++			&rk3588_uart9_fracmux),
++	GATE(SCLK_UART9, "sclk_uart9", "clk_uart9", 0,
++			RK3588_CLKGATE_CON(14), 5, GFLAGS),
++
++	/* center */
++	COMPOSITE_NODIV(ACLK_CENTER_ROOT, "aclk_center_root", mux_700m_400m_200m_24m_p,
++			CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(165), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(69), 0, GFLAGS),
++	COMPOSITE_NODIV(ACLK_CENTER_LOW_ROOT, "aclk_center_low_root", mux_500m_250m_100m_24m_p,
++			CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(165), 2, 2, MFLAGS,
++			RK3588_CLKGATE_CON(69), 1, GFLAGS),
++	COMPOSITE_NODIV(HCLK_CENTER_ROOT, "hclk_center_root", mux_400m_200m_100m_24m_p,
++			CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(165), 4, 2, MFLAGS,
++			RK3588_CLKGATE_CON(69), 2, GFLAGS),
++	COMPOSITE_NODIV(PCLK_CENTER_ROOT, "pclk_center_root", mux_200m_100m_50m_24m_p,
++			CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(165), 6, 2, MFLAGS | CLK_MUX_READ_ONLY,
++			RK3588_CLKGATE_CON(69), 3, GFLAGS),
++	GATE(ACLK_DMA2DDR, "aclk_dma2ddr", "aclk_center_root", CLK_IS_CRITICAL,
++			RK3588_CLKGATE_CON(69), 5, GFLAGS),
++	GATE(ACLK_DDR_SHAREMEM, "aclk_ddr_sharemem", "aclk_center_low_root", CLK_IS_CRITICAL,
++			RK3588_CLKGATE_CON(69), 6, GFLAGS),
++	COMPOSITE_NODIV(ACLK_CENTER_S200_ROOT, "aclk_center_s200_root", mux_200m_100m_50m_24m_p,
++			CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(165), 8, 2, MFLAGS,
++			RK3588_CLKGATE_CON(69), 8, GFLAGS),
++	COMPOSITE_NODIV(ACLK_CENTER_S400_ROOT, "aclk_center_s400_root", mux_400m_200m_100m_24m_p,
++			CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(165), 10, 2, MFLAGS,
++			RK3588_CLKGATE_CON(69), 9, GFLAGS),
++	GATE(FCLK_DDR_CM0_CORE, "fclk_ddr_cm0_core", "hclk_center_root", CLK_IS_CRITICAL,
++			RK3588_CLKGATE_CON(69), 14, GFLAGS),
++	COMPOSITE_NODIV(CLK_DDR_TIMER_ROOT, "clk_ddr_timer_root", mux_24m_100m_p, CLK_IGNORE_UNUSED,
++			RK3588_CLKSEL_CON(165), 12, 1, MFLAGS,
++			RK3588_CLKGATE_CON(69), 15, GFLAGS),
++	GATE(CLK_DDR_TIMER0, "clk_ddr_timer0", "clk_ddr_timer_root", 0,
++			RK3588_CLKGATE_CON(70), 0, GFLAGS),
++	GATE(CLK_DDR_TIMER1, "clk_ddr_timer1", "clk_ddr_timer_root", 0,
++			RK3588_CLKGATE_CON(70), 1, GFLAGS),
++	GATE(TCLK_WDT_DDR, "tclk_wdt_ddr", "xin24m", 0,
++			RK3588_CLKGATE_CON(70), 2, GFLAGS),
++	COMPOSITE(CLK_DDR_CM0_RTC, "clk_ddr_cm0_rtc", mux_24m_32k_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(166), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(70), 4, GFLAGS),
++	GATE(PCLK_WDT, "pclk_wdt", "pclk_center_root", 0,
++			RK3588_CLKGATE_CON(70), 7, GFLAGS),
++	GATE(PCLK_TIMER, "pclk_timer", "pclk_center_root", 0,
++			RK3588_CLKGATE_CON(70), 8, GFLAGS),
++	GATE(PCLK_DMA2DDR, "pclk_dma2ddr", "pclk_center_root", CLK_IS_CRITICAL,
++			RK3588_CLKGATE_CON(70), 9, GFLAGS),
++	GATE(PCLK_SHAREMEM, "pclk_sharemem", "pclk_center_root", CLK_IS_CRITICAL,
++			RK3588_CLKGATE_CON(70), 10, GFLAGS),
++
++	/* gpu */
++	COMPOSITE(CLK_GPU_SRC, "clk_gpu_src", gpll_cpll_aupll_npll_spll_p, 0,
++			RK3588_CLKSEL_CON(158), 5, 3, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(66), 1, GFLAGS),
++	GATE(CLK_GPU, "clk_gpu", "clk_gpu_src", 0,
++			RK3588_CLKGATE_CON(66), 4, GFLAGS),
++	GATE(CLK_GPU_COREGROUP, "clk_gpu_coregroup", "clk_gpu_src", 0,
++			RK3588_CLKGATE_CON(66), 6, GFLAGS),
++	COMPOSITE_NOMUX(CLK_GPU_STACKS, "clk_gpu_stacks", "clk_gpu_src", 0,
++			RK3588_CLKSEL_CON(159), 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(66), 7, GFLAGS),
++	GATE(CLK_GPU_PVTM, "clk_gpu_pvtm", "xin24m", 0,
++			RK3588_CLKGATE_CON(67), 0, GFLAGS),
++	GATE(CLK_CORE_GPU_PVTM, "clk_core_gpu_pvtm", "clk_gpu_src", 0,
++			RK3588_CLKGATE_CON(67), 1, GFLAGS),
++
++	/* isp1 */
++	COMPOSITE(ACLK_ISP1_ROOT, "aclk_isp1_root", gpll_cpll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(67), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(26), 0, GFLAGS),
++	COMPOSITE_NODIV(HCLK_ISP1_ROOT, "hclk_isp1_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(67), 7, 2, MFLAGS,
++			RK3588_CLKGATE_CON(26), 1, GFLAGS),
++	COMPOSITE(CLK_ISP1_CORE, "clk_isp1_core", gpll_cpll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(67), 14, 2, MFLAGS, 9, 5, DFLAGS,
++			RK3588_CLKGATE_CON(26), 2, GFLAGS),
++	GATE(CLK_ISP1_CORE_MARVIN, "clk_isp1_core_marvin", "clk_isp1_core", 0,
++			RK3588_CLKGATE_CON(26), 3, GFLAGS),
++	GATE(CLK_ISP1_CORE_VICAP, "clk_isp1_core_vicap", "clk_isp1_core", 0,
++			RK3588_CLKGATE_CON(26), 4, GFLAGS),
++
++	/* npu */
++	COMPOSITE_NODIV(HCLK_NPU_ROOT, "hclk_npu_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(73), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(29), 0, GFLAGS),
++	COMPOSITE(CLK_NPU_DSU0, "clk_npu_dsu0", gpll_cpll_aupll_npll_spll_p, 0,
++			RK3588_CLKSEL_CON(73), 7, 3, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(29), 1, GFLAGS),
++	COMPOSITE_NODIV(PCLK_NPU_ROOT, "pclk_npu_root", mux_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(74), 1, 2, MFLAGS,
++			RK3588_CLKGATE_CON(29), 4, GFLAGS),
++	GATE(ACLK_NPU1, "aclk_npu1", "clk_npu_dsu0", 0,
++			RK3588_CLKGATE_CON(27), 0, GFLAGS),
++	GATE(HCLK_NPU1, "hclk_npu1", "hclk_npu_root", 0,
++			RK3588_CLKGATE_CON(27), 2, GFLAGS),
++	GATE(ACLK_NPU2, "aclk_npu2", "clk_npu_dsu0", 0,
++			RK3588_CLKGATE_CON(28), 0, GFLAGS),
++	GATE(HCLK_NPU2, "hclk_npu2", "hclk_npu_root", 0,
++			RK3588_CLKGATE_CON(28), 2, GFLAGS),
++	COMPOSITE_NODIV(HCLK_NPU_CM0_ROOT, "hclk_npu_cm0_root", mux_400m_200m_100m_24m_p, 0,
++			RK3588_CLKSEL_CON(74), 5, 2, MFLAGS,
++			RK3588_CLKGATE_CON(30), 1, GFLAGS),
++	GATE(FCLK_NPU_CM0_CORE, "fclk_npu_cm0_core", "hclk_npu_cm0_root", 0,
++			RK3588_CLKGATE_CON(30), 3, GFLAGS),
++	COMPOSITE(CLK_NPU_CM0_RTC, "clk_npu_cm0_rtc", mux_24m_32k_p, 0,
++			RK3588_CLKSEL_CON(74), 12, 1, MFLAGS, 7, 5, DFLAGS,
++			RK3588_CLKGATE_CON(30), 5, GFLAGS),
++	GATE(PCLK_NPU_PVTM, "pclk_npu_pvtm", "pclk_npu_root", 0,
++			RK3588_CLKGATE_CON(29), 12, GFLAGS),
++	GATE(PCLK_NPU_GRF, "pclk_npu_grf", "pclk_npu_root", CLK_IGNORE_UNUSED,
++			RK3588_CLKGATE_CON(29), 13, GFLAGS),
++	GATE(CLK_NPU_PVTM, "clk_npu_pvtm", "xin24m", 0,
++			RK3588_CLKGATE_CON(29), 14, GFLAGS),
++	GATE(CLK_CORE_NPU_PVTM, "clk_core_npu_pvtm", "clk_npu_dsu0", 0,
++			RK3588_CLKGATE_CON(29), 15, GFLAGS),
++	GATE(ACLK_NPU0, "aclk_npu0", "clk_npu_dsu0", 0,
++			RK3588_CLKGATE_CON(30), 6, GFLAGS),
++	GATE(HCLK_NPU0, "hclk_npu0", "hclk_npu_root", 0,
++			RK3588_CLKGATE_CON(30), 8, GFLAGS),
++	GATE(PCLK_NPU_TIMER, "pclk_npu_timer", "pclk_npu_root", 0,
++			RK3588_CLKGATE_CON(29), 6, GFLAGS),
++	COMPOSITE_NODIV(CLK_NPUTIMER_ROOT, "clk_nputimer_root", mux_24m_100m_p, 0,
++			RK3588_CLKSEL_CON(74), 3, 1, MFLAGS,
++			RK3588_CLKGATE_CON(29), 7, GFLAGS),
++	GATE(CLK_NPUTIMER0, "clk_nputimer0", "clk_nputimer_root", 0,
++			RK3588_CLKGATE_CON(29), 8, GFLAGS),
++	GATE(CLK_NPUTIMER1, "clk_nputimer1", "clk_nputimer_root", 0,
++			RK3588_CLKGATE_CON(29), 9, GFLAGS),
++	GATE(PCLK_NPU_WDT, "pclk_npu_wdt", "pclk_npu_root", 0,
++			RK3588_CLKGATE_CON(29), 10, GFLAGS),
++	GATE(TCLK_NPU_WDT, "tclk_npu_wdt", "xin24m", 0,
++			RK3588_CLKGATE_CON(29), 11, GFLAGS),
++
++	/* nvm */
++	COMPOSITE_NODIV(HCLK_NVM_ROOT,  "hclk_nvm_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(77), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(31), 0, GFLAGS),
++	COMPOSITE(ACLK_NVM_ROOT, "aclk_nvm_root", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(77), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(31), 1, GFLAGS),
++	GATE(ACLK_EMMC, "aclk_emmc", "aclk_nvm_root", 0,
++			RK3588_CLKGATE_CON(31), 5, GFLAGS),
++	COMPOSITE(CCLK_EMMC, "cclk_emmc", gpll_cpll_24m_p, 0,
++			RK3588_CLKSEL_CON(77), 14, 2, MFLAGS, 8, 6, DFLAGS,
++			RK3588_CLKGATE_CON(31), 6, GFLAGS),
++	COMPOSITE(BCLK_EMMC, "bclk_emmc", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(78), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(31), 7, GFLAGS),
++	GATE(TMCLK_EMMC, "tmclk_emmc", "xin24m", 0,
++			RK3588_CLKGATE_CON(31), 8, GFLAGS),
++
++	COMPOSITE(SCLK_SFC, "sclk_sfc", gpll_cpll_24m_p, 0,
++			RK3588_CLKSEL_CON(78), 12, 2, MFLAGS, 6, 6, DFLAGS,
++			RK3588_CLKGATE_CON(31), 9, GFLAGS),
++
++	/* php */
++	COMPOSITE(CLK_GMAC0_PTP_REF, "clk_gmac0_ptp_ref", clk_gmac0_ptp_ref_p, 0,
++			RK3588_CLKSEL_CON(81), 6, 1, MFLAGS, 0, 6, DFLAGS,
++			RK3588_CLKGATE_CON(34), 10, GFLAGS),
++	COMPOSITE(CLK_GMAC1_PTP_REF, "clk_gmac1_ptp_ref", clk_gmac1_ptp_ref_p, 0,
++			RK3588_CLKSEL_CON(81), 13, 1, MFLAGS, 7, 6, DFLAGS,
++			RK3588_CLKGATE_CON(34), 11, GFLAGS),
++	COMPOSITE(CLK_GMAC_125M, "clk_gmac_125m", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(83), 15, 1, MFLAGS, 8, 7, DFLAGS,
++			RK3588_CLKGATE_CON(35), 5, GFLAGS),
++	COMPOSITE(CLK_GMAC_50M, "clk_gmac_50m", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(84), 7, 1, MFLAGS, 0, 7, DFLAGS,
++			RK3588_CLKGATE_CON(35), 6, GFLAGS),
++
++	COMPOSITE(ACLK_PCIE_ROOT, "aclk_pcie_root", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(80), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(32), 6, GFLAGS),
++	COMPOSITE(ACLK_PHP_ROOT, "aclk_php_root", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(80), 13, 1, MFLAGS, 8, 5, DFLAGS,
++			RK3588_CLKGATE_CON(32), 7, GFLAGS),
++	COMPOSITE_NODIV(PCLK_PHP_ROOT, "pclk_php_root", mux_150m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(80), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(32), 0, GFLAGS),
++	GATE(ACLK_PHP_GIC_ITS, "aclk_php_gic_its", "aclk_pcie_root", CLK_IS_CRITICAL,
++			RK3588_CLKGATE_CON(34), 6, GFLAGS),
++	GATE(ACLK_PCIE_BRIDGE, "aclk_pcie_bridge", "aclk_pcie_root", 0,
++			RK3588_CLKGATE_CON(32), 8, GFLAGS),
++	GATE(ACLK_MMU_PCIE, "aclk_mmu_pcie", "aclk_pcie_bridge", 0,
++			RK3588_CLKGATE_CON(34), 7, GFLAGS),
++	GATE(ACLK_MMU_PHP, "aclk_mmu_php", "aclk_php_root", 0,
++			RK3588_CLKGATE_CON(34), 8, GFLAGS),
++	GATE(ACLK_PCIE_4L_DBI, "aclk_pcie_4l_dbi", "aclk_php_root", 0,
++			RK3588_CLKGATE_CON(32), 13, GFLAGS),
++	GATE(ACLK_PCIE_2L_DBI, "aclk_pcie_2l_dbi", "aclk_php_root", 0,
++			RK3588_CLKGATE_CON(32), 14, GFLAGS),
++	GATE(ACLK_PCIE_1L0_DBI, "aclk_pcie_1l0_dbi", "aclk_php_root", 0,
++			RK3588_CLKGATE_CON(32), 15, GFLAGS),
++	GATE(ACLK_PCIE_1L1_DBI, "aclk_pcie_1l1_dbi", "aclk_php_root", 0,
++			RK3588_CLKGATE_CON(33), 0, GFLAGS),
++	GATE(ACLK_PCIE_1L2_DBI, "aclk_pcie_1l2_dbi", "aclk_php_root", 0,
++			RK3588_CLKGATE_CON(33), 1, GFLAGS),
++	GATE(ACLK_PCIE_4L_MSTR, "aclk_pcie_4l_mstr", "aclk_mmu_pcie", 0,
++			RK3588_CLKGATE_CON(33), 2, GFLAGS),
++	GATE(ACLK_PCIE_2L_MSTR, "aclk_pcie_2l_mstr", "aclk_mmu_pcie", 0,
++			RK3588_CLKGATE_CON(33), 3, GFLAGS),
++	GATE(ACLK_PCIE_1L0_MSTR, "aclk_pcie_1l0_mstr", "aclk_mmu_pcie", 0,
++			RK3588_CLKGATE_CON(33), 4, GFLAGS),
++	GATE(ACLK_PCIE_1L1_MSTR, "aclk_pcie_1l1_mstr", "aclk_mmu_pcie", 0,
++			RK3588_CLKGATE_CON(33), 5, GFLAGS),
++	GATE(ACLK_PCIE_1L2_MSTR, "aclk_pcie_1l2_mstr", "aclk_mmu_pcie", 0,
++			RK3588_CLKGATE_CON(33), 6, GFLAGS),
++	GATE(ACLK_PCIE_4L_SLV, "aclk_pcie_4l_slv", "aclk_php_root", 0,
++			RK3588_CLKGATE_CON(33), 7, GFLAGS),
++	GATE(ACLK_PCIE_2L_SLV, "aclk_pcie_2l_slv", "aclk_php_root", 0,
++			RK3588_CLKGATE_CON(33), 8, GFLAGS),
++	GATE(ACLK_PCIE_1L0_SLV, "aclk_pcie_1l0_slv", "aclk_php_root", 0,
++			RK3588_CLKGATE_CON(33), 9, GFLAGS),
++	GATE(ACLK_PCIE_1L1_SLV, "aclk_pcie_1l1_slv", "aclk_php_root", 0,
++			RK3588_CLKGATE_CON(33), 10, GFLAGS),
++	GATE(ACLK_PCIE_1L2_SLV, "aclk_pcie_1l2_slv", "aclk_php_root", 0,
++			RK3588_CLKGATE_CON(33), 11, GFLAGS),
++	GATE(PCLK_PCIE_4L, "pclk_pcie_4l", "pclk_php_root", 0,
++			RK3588_CLKGATE_CON(33), 12, GFLAGS),
++	GATE(PCLK_PCIE_2L, "pclk_pcie_2l", "pclk_php_root", 0,
++			RK3588_CLKGATE_CON(33), 13, GFLAGS),
++	GATE(PCLK_PCIE_1L0, "pclk_pcie_1l0", "pclk_php_root", 0,
++			RK3588_CLKGATE_CON(33), 14, GFLAGS),
++	GATE(PCLK_PCIE_1L1, "pclk_pcie_1l1", "pclk_php_root", 0,
++			RK3588_CLKGATE_CON(33), 15, GFLAGS),
++	GATE(PCLK_PCIE_1L2, "pclk_pcie_1l2", "pclk_php_root", 0,
++			RK3588_CLKGATE_CON(34), 0, GFLAGS),
++	GATE(CLK_PCIE_AUX0, "clk_pcie_aux0", "xin24m", 0,
++			RK3588_CLKGATE_CON(34), 1, GFLAGS),
++	GATE(CLK_PCIE_AUX1, "clk_pcie_aux1", "xin24m", 0,
++			RK3588_CLKGATE_CON(34), 2, GFLAGS),
++	GATE(CLK_PCIE_AUX2, "clk_pcie_aux2", "xin24m", 0,
++			RK3588_CLKGATE_CON(34), 3, GFLAGS),
++	GATE(CLK_PCIE_AUX3, "clk_pcie_aux3", "xin24m", 0,
++			RK3588_CLKGATE_CON(34), 4, GFLAGS),
++	GATE(CLK_PCIE_AUX4, "clk_pcie_aux4", "xin24m", 0,
++			RK3588_CLKGATE_CON(34), 5, GFLAGS),
++	GATE(CLK_PIPEPHY0_REF, "clk_pipephy0_ref", "xin24m", 0,
++			RK3588_CLKGATE_CON(37), 0, GFLAGS),
++	GATE(CLK_PIPEPHY1_REF, "clk_pipephy1_ref", "xin24m", 0,
++			RK3588_CLKGATE_CON(37), 1, GFLAGS),
++	GATE(CLK_PIPEPHY2_REF, "clk_pipephy2_ref", "xin24m", 0,
++			RK3588_CLKGATE_CON(37), 2, GFLAGS),
++	GATE(PCLK_GMAC0, "pclk_gmac0", "pclk_php_root", 0,
++			RK3588_CLKGATE_CON(32), 3, GFLAGS),
++	GATE(PCLK_GMAC1, "pclk_gmac1", "pclk_php_root", 0,
++			RK3588_CLKGATE_CON(32), 4, GFLAGS),
++	GATE(ACLK_GMAC0, "aclk_gmac0", "aclk_mmu_php", 0,
++			RK3588_CLKGATE_CON(32), 10, GFLAGS),
++	GATE(ACLK_GMAC1, "aclk_gmac1", "aclk_mmu_php", 0,
++			RK3588_CLKGATE_CON(32), 11, GFLAGS),
++	GATE(CLK_PMALIVE0, "clk_pmalive0", "xin24m", 0,
++			RK3588_CLKGATE_CON(37), 4, GFLAGS),
++	GATE(CLK_PMALIVE1, "clk_pmalive1", "xin24m", 0,
++			RK3588_CLKGATE_CON(37), 5, GFLAGS),
++	GATE(CLK_PMALIVE2, "clk_pmalive2", "xin24m", 0,
++			RK3588_CLKGATE_CON(37), 6, GFLAGS),
++	GATE(ACLK_SATA0, "aclk_sata0", "aclk_mmu_php", 0,
++			RK3588_CLKGATE_CON(37), 7, GFLAGS),
++	GATE(ACLK_SATA1, "aclk_sata1", "aclk_mmu_php", 0,
++			RK3588_CLKGATE_CON(37), 8, GFLAGS),
++	GATE(ACLK_SATA2, "aclk_sata2", "aclk_mmu_php", 0,
++			RK3588_CLKGATE_CON(37), 9, GFLAGS),
++	COMPOSITE(CLK_RXOOB0, "clk_rxoob0", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(82), 7, 1, MFLAGS, 0, 7, DFLAGS,
++			RK3588_CLKGATE_CON(37), 10, GFLAGS),
++	COMPOSITE(CLK_RXOOB1, "clk_rxoob1", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(82), 15, 1, MFLAGS, 8, 7, DFLAGS,
++			RK3588_CLKGATE_CON(37), 11, GFLAGS),
++	COMPOSITE(CLK_RXOOB2, "clk_rxoob2", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(83), 7, 1, MFLAGS, 0, 7, DFLAGS,
++			RK3588_CLKGATE_CON(37), 12, GFLAGS),
++	GATE(ACLK_USB3OTG2, "aclk_usb3otg2", "aclk_mmu_php", 0,
++			RK3588_CLKGATE_CON(35), 7, GFLAGS),
++	GATE(SUSPEND_CLK_USB3OTG2, "suspend_clk_usb3otg2", "xin24m", 0,
++			RK3588_CLKGATE_CON(35), 8, GFLAGS),
++	GATE(REF_CLK_USB3OTG2, "ref_clk_usb3otg2", "xin24m", 0,
++			RK3588_CLKGATE_CON(35), 9, GFLAGS),
++	COMPOSITE(CLK_UTMI_OTG2, "clk_utmi_otg2", mux_150m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(84), 12, 2, MFLAGS, 8, 4, DFLAGS,
++			RK3588_CLKGATE_CON(35), 10, GFLAGS),
++	GATE(PCLK_PCIE_COMBO_PIPE_PHY0, "pclk_pcie_combo_pipe_phy0", "pclk_top_root", 0,
++			RK3588_PHP_CLKGATE_CON(0), 5, GFLAGS),
++	GATE(PCLK_PCIE_COMBO_PIPE_PHY1, "pclk_pcie_combo_pipe_phy1", "pclk_top_root", 0,
++			RK3588_PHP_CLKGATE_CON(0), 6, GFLAGS),
++	GATE(PCLK_PCIE_COMBO_PIPE_PHY2, "pclk_pcie_combo_pipe_phy2", "pclk_top_root", 0,
++			RK3588_PHP_CLKGATE_CON(0), 7, GFLAGS),
++	GATE(PCLK_PCIE_COMBO_PIPE_PHY, "pclk_pcie_combo_pipe_phy", "pclk_top_root", 0,
++			RK3588_PHP_CLKGATE_CON(0), 8, GFLAGS),
++
++	/* rga */
++	COMPOSITE(CLK_RGA3_1_CORE, "clk_rga3_1_core", gpll_cpll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(174), 14, 2, MFLAGS, 9, 5, DFLAGS,
++			RK3588_CLKGATE_CON(76), 6, GFLAGS),
++	COMPOSITE(ACLK_RGA3_ROOT, "aclk_rga3_root", gpll_cpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(174), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(76), 0, GFLAGS),
++	COMPOSITE_NODIV(HCLK_RGA3_ROOT, "hclk_rga3_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(174), 7, 2, MFLAGS,
++			RK3588_CLKGATE_CON(76), 1, GFLAGS),
++	GATE(HCLK_RGA3_1, "hclk_rga3_1", "hclk_rga3_root", 0,
++			RK3588_CLKGATE_CON(76), 4, GFLAGS),
++	GATE(ACLK_RGA3_1, "aclk_rga3_1", "aclk_rga3_root", 0,
++			RK3588_CLKGATE_CON(76), 5, GFLAGS),
++
++	/* vdec */
++	COMPOSITE_NODIV(0, "hclk_rkvdec0_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(89), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(40), 0, GFLAGS),
++	COMPOSITE(0, "aclk_rkvdec0_root", gpll_cpll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(89), 7, 2, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(40), 1, GFLAGS),
++	COMPOSITE(ACLK_RKVDEC_CCU, "aclk_rkvdec_ccu", gpll_cpll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(89), 14, 2, MFLAGS, 9, 5, DFLAGS,
++			RK3588_CLKGATE_CON(40), 2, GFLAGS),
++	COMPOSITE(CLK_RKVDEC0_CA, "clk_rkvdec0_ca", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(90), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(40), 7, GFLAGS),
++	COMPOSITE(CLK_RKVDEC0_HEVC_CA, "clk_rkvdec0_hevc_ca", gpll_cpll_npll_1000m_p, 0,
++			RK3588_CLKSEL_CON(90), 11, 2, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(40), 8, GFLAGS),
++	COMPOSITE(CLK_RKVDEC0_CORE, "clk_rkvdec0_core", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(91), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(40), 9, GFLAGS),
++	COMPOSITE_NODIV(0, "hclk_rkvdec1_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(93), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(41), 0, GFLAGS),
++	COMPOSITE(0, "aclk_rkvdec1_root", gpll_cpll_aupll_npll_p, 0,
++			RK3588_CLKSEL_CON(93), 7, 2, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(41), 1, GFLAGS),
++	COMPOSITE(CLK_RKVDEC1_CA, "clk_rkvdec1_ca", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(93), 14, 1, MFLAGS, 9, 5, DFLAGS,
++			RK3588_CLKGATE_CON(41), 6, GFLAGS),
++	COMPOSITE(CLK_RKVDEC1_HEVC_CA, "clk_rkvdec1_hevc_ca", gpll_cpll_npll_1000m_p, 0,
++			RK3588_CLKSEL_CON(94), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(41), 7, GFLAGS),
++	COMPOSITE(CLK_RKVDEC1_CORE, "clk_rkvdec1_core", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(94), 12, 1, MFLAGS, 7, 5, DFLAGS,
++			RK3588_CLKGATE_CON(41), 8, GFLAGS),
++
++	/* sdio */
++	COMPOSITE_NODIV(0, "hclk_sdio_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(172), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(75), 0, GFLAGS),
++	COMPOSITE(CCLK_SRC_SDIO, "cclk_src_sdio", gpll_cpll_24m_p, 0,
++			RK3588_CLKSEL_CON(172), 8, 2, MFLAGS, 2, 6, DFLAGS,
++			RK3588_CLKGATE_CON(75), 3, GFLAGS),
++	MMC(SCLK_SDIO_DRV, "sdio_drv", "cclk_src_sdio", RK3588_SDIO_CON0, 1),
++	MMC(SCLK_SDIO_SAMPLE, "sdio_sample", "cclk_src_sdio", RK3588_SDIO_CON1, 1),
++
++	/* usb */
++	COMPOSITE(ACLK_USB_ROOT, "aclk_usb_root", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(96), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(42), 0, GFLAGS),
++	COMPOSITE_NODIV(HCLK_USB_ROOT, "hclk_usb_root", mux_150m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(96), 6, 2, MFLAGS,
++			RK3588_CLKGATE_CON(42), 1, GFLAGS),
++	GATE(SUSPEND_CLK_USB3OTG0, "suspend_clk_usb3otg0", "xin24m", 0,
++			RK3588_CLKGATE_CON(42), 5, GFLAGS),
++	GATE(REF_CLK_USB3OTG0, "ref_clk_usb3otg0", "xin24m", 0,
++			RK3588_CLKGATE_CON(42), 6, GFLAGS),
++	GATE(SUSPEND_CLK_USB3OTG1, "suspend_clk_usb3otg1", "xin24m", 0,
++			RK3588_CLKGATE_CON(42), 8, GFLAGS),
++	GATE(REF_CLK_USB3OTG1, "ref_clk_usb3otg1", "xin24m", 0,
++			RK3588_CLKGATE_CON(42), 9, GFLAGS),
++
++	/* vdpu */
++	COMPOSITE(ACLK_VDPU_ROOT, "aclk_vdpu_root", gpll_cpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(98), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(44), 0, GFLAGS),
++	COMPOSITE_NODIV(ACLK_VDPU_LOW_ROOT, "aclk_vdpu_low_root", mux_400m_200m_100m_24m_p, 0,
++			RK3588_CLKSEL_CON(98), 7, 2, MFLAGS,
++			RK3588_CLKGATE_CON(44), 1, GFLAGS),
++	COMPOSITE_NODIV(HCLK_VDPU_ROOT, "hclk_vdpu_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(98), 9, 2, MFLAGS,
++			RK3588_CLKGATE_CON(44), 2, GFLAGS),
++	COMPOSITE(ACLK_JPEG_DECODER_ROOT, "aclk_jpeg_decoder_root", gpll_cpll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(99), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(44), 3, GFLAGS),
++	GATE(HCLK_IEP2P0, "hclk_iep2p0", "hclk_vdpu_root", 0,
++			RK3588_CLKGATE_CON(45), 4, GFLAGS),
++	COMPOSITE(CLK_IEP2P0_CORE, "clk_iep2p0_core", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(99), 12, 1, MFLAGS, 7, 5, DFLAGS,
++			RK3588_CLKGATE_CON(45), 6, GFLAGS),
++	GATE(HCLK_JPEG_ENCODER0, "hclk_jpeg_encoder0", "hclk_vdpu_root", 0,
++			RK3588_CLKGATE_CON(44), 11, GFLAGS),
++	GATE(HCLK_JPEG_ENCODER1, "hclk_jpeg_encoder1", "hclk_vdpu_root", 0,
++			RK3588_CLKGATE_CON(44), 13, GFLAGS),
++	GATE(HCLK_JPEG_ENCODER2, "hclk_jpeg_encoder2", "hclk_vdpu_root", 0,
++			RK3588_CLKGATE_CON(44), 15, GFLAGS),
++	GATE(HCLK_JPEG_ENCODER3, "hclk_jpeg_encoder3", "hclk_vdpu_root", 0,
++			RK3588_CLKGATE_CON(45), 1, GFLAGS),
++	GATE(HCLK_JPEG_DECODER, "hclk_jpeg_decoder", "hclk_vdpu_root", 0,
++			RK3588_CLKGATE_CON(45), 3, GFLAGS),
++	GATE(HCLK_RGA2, "hclk_rga2", "hclk_vdpu_root", 0,
++			RK3588_CLKGATE_CON(45), 7, GFLAGS),
++	GATE(ACLK_RGA2, "aclk_rga2", "aclk_vdpu_root", 0,
++			RK3588_CLKGATE_CON(45), 8, GFLAGS),
++	COMPOSITE(CLK_RGA2_CORE, "clk_rga2_core", gpll_cpll_npll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(100), 5, 3, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(45), 9, GFLAGS),
++	GATE(HCLK_RGA3_0, "hclk_rga3_0", "hclk_vdpu_root", 0,
++			RK3588_CLKGATE_CON(45), 10, GFLAGS),
++	GATE(ACLK_RGA3_0, "aclk_rga3_0", "aclk_vdpu_root", 0,
++			RK3588_CLKGATE_CON(45), 11, GFLAGS),
++	COMPOSITE(CLK_RGA3_0_CORE, "clk_rga3_0_core", gpll_cpll_npll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(100), 13, 3, MFLAGS, 8, 5, DFLAGS,
++			RK3588_CLKGATE_CON(45), 12, GFLAGS),
++	GATE(HCLK_VPU, "hclk_vpu", "hclk_vdpu_root", 0,
++			RK3588_CLKGATE_CON(44), 9, GFLAGS),
++
++	/* venc */
++	COMPOSITE_NODIV(HCLK_RKVENC1_ROOT, "hclk_rkvenc1_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(104), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(48), 0, GFLAGS),
++	COMPOSITE(ACLK_RKVENC1_ROOT, "aclk_rkvenc1_root", gpll_cpll_npll_p, 0,
++			RK3588_CLKSEL_CON(104), 7, 2, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(48), 1, GFLAGS),
++	COMPOSITE_NODIV(HCLK_RKVENC0_ROOT, "hclk_rkvenc0_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(102), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(47), 0, GFLAGS),
++	COMPOSITE(ACLK_RKVENC0_ROOT, "aclk_rkvenc0_root", gpll_cpll_npll_p, 0,
++			RK3588_CLKSEL_CON(102), 7, 2, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(47), 1, GFLAGS),
++	GATE(HCLK_RKVENC0, "hclk_rkvenc0", "hclk_rkvenc0_root", 0,
++			RK3588_CLKGATE_CON(47), 4, GFLAGS),
++	GATE(ACLK_RKVENC0, "aclk_rkvenc0", "aclk_rkvenc0_root", 0,
++			RK3588_CLKGATE_CON(47), 5, GFLAGS),
++	COMPOSITE(CLK_RKVENC0_CORE, "clk_rkvenc0_core", gpll_cpll_aupll_npll_p, 0,
++			RK3588_CLKSEL_CON(102), 14, 2, MFLAGS, 9, 5, DFLAGS,
++			RK3588_CLKGATE_CON(47), 6, GFLAGS),
++	COMPOSITE(CLK_RKVENC1_CORE, "clk_rkvenc1_core", gpll_cpll_aupll_npll_p, 0,
++			RK3588_CLKSEL_CON(104), 14, 2, MFLAGS, 9, 5, DFLAGS,
++			RK3588_CLKGATE_CON(48), 6, GFLAGS),
++
++	/* vi */
++	COMPOSITE(ACLK_VI_ROOT, "aclk_vi_root", gpll_cpll_npll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(106), 5, 3, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(49), 0, GFLAGS),
++	COMPOSITE_NODIV(HCLK_VI_ROOT, "hclk_vi_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(106), 8, 2, MFLAGS,
++			RK3588_CLKGATE_CON(49), 1, GFLAGS),
++	COMPOSITE_NODIV(PCLK_VI_ROOT, "pclk_vi_root", mux_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(106), 10, 2, MFLAGS,
++			RK3588_CLKGATE_CON(49), 2, GFLAGS),
++	COMPOSITE_NODIV(ICLK_CSIHOST01, "iclk_csihost01", mux_400m_200m_100m_24m_p, 0,
++			RK3588_CLKSEL_CON(108), 14, 2, MFLAGS,
++			RK3588_CLKGATE_CON(51), 10, GFLAGS),
++	GATE(ICLK_CSIHOST0, "iclk_csihost0", "iclk_csihost01", 0,
++			RK3588_CLKGATE_CON(51), 11, GFLAGS),
++	GATE(ICLK_CSIHOST1, "iclk_csihost1", "iclk_csihost01", 0,
++			RK3588_CLKGATE_CON(51), 12, GFLAGS),
++	GATE(PCLK_CSI_HOST_0, "pclk_csi_host_0", "pclk_vi_root", 0,
++			RK3588_CLKGATE_CON(50), 4, GFLAGS),
++	GATE(PCLK_CSI_HOST_1, "pclk_csi_host_1", "pclk_vi_root", 0,
++			RK3588_CLKGATE_CON(50), 5, GFLAGS),
++	GATE(PCLK_CSI_HOST_2, "pclk_csi_host_2", "pclk_vi_root", 0,
++			RK3588_CLKGATE_CON(50), 6, GFLAGS),
++	GATE(PCLK_CSI_HOST_3, "pclk_csi_host_3", "pclk_vi_root", 0,
++			RK3588_CLKGATE_CON(50), 7, GFLAGS),
++	GATE(PCLK_CSI_HOST_4, "pclk_csi_host_4", "pclk_vi_root", 0,
++			RK3588_CLKGATE_CON(50), 8, GFLAGS),
++	GATE(PCLK_CSI_HOST_5, "pclk_csi_host_5", "pclk_vi_root", 0,
++			RK3588_CLKGATE_CON(50), 9, GFLAGS),
++	GATE(ACLK_FISHEYE0, "aclk_fisheye0", "aclk_vi_root", 0,
++			RK3588_CLKGATE_CON(49), 14, GFLAGS),
++	GATE(HCLK_FISHEYE0, "hclk_fisheye0", "hclk_vi_root", 0,
++			RK3588_CLKGATE_CON(49), 15, GFLAGS),
++	COMPOSITE(CLK_FISHEYE0_CORE, "clk_fisheye0_core", gpll_cpll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(108), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(50), 0, GFLAGS),
++	GATE(ACLK_FISHEYE1, "aclk_fisheye1", "aclk_vi_root", 0,
++			RK3588_CLKGATE_CON(50), 1, GFLAGS),
++	GATE(HCLK_FISHEYE1, "hclk_fisheye1", "hclk_vi_root", 0,
++			RK3588_CLKGATE_CON(50), 2, GFLAGS),
++	COMPOSITE(CLK_FISHEYE1_CORE, "clk_fisheye1_core", gpll_cpll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(108), 12, 2, MFLAGS, 7, 5, DFLAGS,
++			RK3588_CLKGATE_CON(50), 3, GFLAGS),
++	COMPOSITE(CLK_ISP0_CORE, "clk_isp0_core", gpll_cpll_aupll_spll_p, 0,
++			RK3588_CLKSEL_CON(107), 11, 2, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(49), 9, GFLAGS),
++	GATE(CLK_ISP0_CORE_MARVIN, "clk_isp0_core_marvin", "clk_isp0_core", 0,
++			RK3588_CLKGATE_CON(49), 10, GFLAGS),
++	GATE(CLK_ISP0_CORE_VICAP, "clk_isp0_core_vicap", "clk_isp0_core", 0,
++			RK3588_CLKGATE_CON(49), 11, GFLAGS),
++	GATE(ACLK_ISP0, "aclk_isp0", "aclk_vi_root", 0,
++			RK3588_CLKGATE_CON(49), 12, GFLAGS),
++	GATE(HCLK_ISP0, "hclk_isp0", "hclk_vi_root", 0,
++			RK3588_CLKGATE_CON(49), 13, GFLAGS),
++	COMPOSITE(DCLK_VICAP, "dclk_vicap", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(107), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(49), 6, GFLAGS),
++	GATE(ACLK_VICAP, "aclk_vicap", "aclk_vi_root", 0,
++			RK3588_CLKGATE_CON(49), 7, GFLAGS),
++	GATE(HCLK_VICAP, "hclk_vicap", "hclk_vi_root", 0,
++			RK3588_CLKGATE_CON(49), 8, GFLAGS),
++
++	/* vo0 */
++	COMPOSITE(ACLK_VO0_ROOT, "aclk_vo0_root", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(116), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(55), 0, GFLAGS),
++	COMPOSITE_NODIV(HCLK_VO0_ROOT, "hclk_vo0_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(116), 6, 2, MFLAGS,
++			RK3588_CLKGATE_CON(55), 1, GFLAGS),
++	COMPOSITE_NODIV(HCLK_VO0_S_ROOT, "hclk_vo0_s_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(116), 8, 2, MFLAGS,
++			RK3588_CLKGATE_CON(55), 2, GFLAGS),
++	COMPOSITE_NODIV(PCLK_VO0_ROOT, "pclk_vo0_root", mux_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(116), 10, 2, MFLAGS,
++			RK3588_CLKGATE_CON(55), 3, GFLAGS),
++	COMPOSITE_NODIV(PCLK_VO0_S_ROOT, "pclk_vo0_s_root", mux_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(116), 12, 2, MFLAGS,
++			RK3588_CLKGATE_CON(55), 4, GFLAGS),
++	GATE(PCLK_DP0, "pclk_dp0", "pclk_vo0_root", 0,
++			RK3588_CLKGATE_CON(56), 4, GFLAGS),
++	GATE(PCLK_DP1, "pclk_dp1", "pclk_vo0_root", 0,
++			RK3588_CLKGATE_CON(56), 5, GFLAGS),
++	GATE(PCLK_S_DP0, "pclk_s_dp0", "pclk_vo0_s_root", 0,
++			RK3588_CLKGATE_CON(56), 6, GFLAGS),
++	GATE(PCLK_S_DP1, "pclk_s_dp1", "pclk_vo0_s_root", 0,
++			RK3588_CLKGATE_CON(56), 7, GFLAGS),
++	GATE(CLK_DP0, "clk_dp0", "aclk_vo0_root", 0,
++			RK3588_CLKGATE_CON(56), 8, GFLAGS),
++	GATE(CLK_DP1, "clk_dp1", "aclk_vo0_root", 0,
++			RK3588_CLKGATE_CON(56), 9, GFLAGS),
++	GATE(HCLK_HDCP_KEY0, "hclk_hdcp_key0", "hclk_vo0_s_root", 0,
++			RK3588_CLKGATE_CON(55), 11, GFLAGS),
++	GATE(PCLK_HDCP0, "pclk_hdcp0", "pclk_vo0_root", 0,
++			RK3588_CLKGATE_CON(55), 14, GFLAGS),
++	GATE(ACLK_TRNG0, "aclk_trng0", "aclk_vo0_root", 0,
++			RK3588_CLKGATE_CON(56), 0, GFLAGS),
++	GATE(PCLK_TRNG0, "pclk_trng0", "pclk_vo0_root", 0,
++			RK3588_CLKGATE_CON(56), 1, GFLAGS),
++	GATE(PCLK_VO0GRF, "pclk_vo0grf", "pclk_vo0_root", CLK_IGNORE_UNUSED,
++			RK3588_CLKGATE_CON(55), 10, GFLAGS),
++	COMPOSITE(CLK_I2S4_8CH_TX_SRC, "clk_i2s4_8ch_tx_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(118), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(56), 11, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S4_8CH_TX_FRAC, "clk_i2s4_8ch_tx_frac", "clk_i2s4_8ch_tx_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(119), 0,
++			RK3588_CLKGATE_CON(56), 12, GFLAGS,
++			&rk3588_i2s4_8ch_tx_fracmux),
++	GATE(MCLK_I2S4_8CH_TX, "mclk_i2s4_8ch_tx", "clk_i2s4_8ch_tx", 0,
++			RK3588_CLKGATE_CON(56), 13, GFLAGS),
++	COMPOSITE(CLK_I2S8_8CH_TX_SRC, "clk_i2s8_8ch_tx_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(120), 8, 1, MFLAGS, 3, 5, DFLAGS,
++			RK3588_CLKGATE_CON(56), 15, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S8_8CH_TX_FRAC, "clk_i2s8_8ch_tx_frac", "clk_i2s8_8ch_tx_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(121), 0,
++			RK3588_CLKGATE_CON(57), 0, GFLAGS,
++			&rk3588_i2s8_8ch_tx_fracmux),
++	GATE(MCLK_I2S8_8CH_TX, "mclk_i2s8_8ch_tx", "clk_i2s8_8ch_tx", 0,
++			RK3588_CLKGATE_CON(57), 1, GFLAGS),
++	COMPOSITE(CLK_SPDIF2_DP0_SRC, "clk_spdif2_dp0_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(122), 8, 1, MFLAGS, 3, 5, DFLAGS,
++			RK3588_CLKGATE_CON(57), 3, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_SPDIF2_DP0_FRAC, "clk_spdif2_dp0_frac", "clk_spdif2_dp0_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(123), 0,
++			RK3588_CLKGATE_CON(57), 4, GFLAGS,
++			&rk3588_spdif2_dp0_fracmux),
++	GATE(MCLK_SPDIF2_DP0, "mclk_spdif2_dp0", "clk_spdif2_dp0", 0,
++			RK3588_CLKGATE_CON(57), 5, GFLAGS),
++	GATE(MCLK_SPDIF2, "mclk_spdif2", "clk_spdif2_dp0", 0,
++			RK3588_CLKGATE_CON(57), 6, GFLAGS),
++	COMPOSITE(CLK_SPDIF5_DP1_SRC, "clk_spdif5_dp1_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(124), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(57), 8, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_SPDIF5_DP1_FRAC, "clk_spdif5_dp1_frac", "clk_spdif5_dp1_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(125), 0,
++			RK3588_CLKGATE_CON(57), 9, GFLAGS,
++			&rk3588_spdif5_dp1_fracmux),
++	GATE(MCLK_SPDIF5_DP1, "mclk_spdif5_dp1", "clk_spdif5_dp1", 0,
++			RK3588_CLKGATE_CON(57), 10, GFLAGS),
++	GATE(MCLK_SPDIF5, "mclk_spdif5", "clk_spdif5_dp1", 0,
++			RK3588_CLKGATE_CON(57), 11, GFLAGS),
++	COMPOSITE_NOMUX(CLK_AUX16M_0, "clk_aux16m_0", "gpll", 0,
++			RK3588_CLKSEL_CON(117), 0, 8, DFLAGS,
++			RK3588_CLKGATE_CON(56), 2, GFLAGS),
++	COMPOSITE_NOMUX(CLK_AUX16M_1, "clk_aux16m_1", "gpll", 0,
++			RK3588_CLKSEL_CON(117), 8, 8, DFLAGS,
++			RK3588_CLKGATE_CON(56), 3, GFLAGS),
++
++	/* vo1 */
++	COMPOSITE_HALFDIV(CLK_HDMITRX_REFSRC, "clk_hdmitrx_refsrc", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(157), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(65), 9, GFLAGS),
++	COMPOSITE(ACLK_HDCP1_ROOT, "aclk_hdcp1_root", aclk_hdcp1_root_p, 0,
++			RK3588_CLKSEL_CON(128), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(59), 0, GFLAGS),
++	COMPOSITE(ACLK_HDMIRX_ROOT, "aclk_hdmirx_root", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(128), 12, 1, MFLAGS, 7, 5, DFLAGS,
++			RK3588_CLKGATE_CON(59), 1, GFLAGS),
++	COMPOSITE_NODIV(HCLK_VO1_ROOT, "hclk_vo1_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(128), 13, 2, MFLAGS,
++			RK3588_CLKGATE_CON(59), 2, GFLAGS),
++	COMPOSITE_NODIV(HCLK_VO1_S_ROOT, "hclk_vo1_s_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(129), 0, 2, MFLAGS,
++			RK3588_CLKGATE_CON(59), 3, GFLAGS),
++	COMPOSITE_NODIV(PCLK_VO1_ROOT, "pclk_vo1_root", mux_150m_100m_24m_p, 0,
++			RK3588_CLKSEL_CON(129), 2, 2, MFLAGS,
++			RK3588_CLKGATE_CON(59), 4, GFLAGS),
++	COMPOSITE_NODIV(PCLK_VO1_S_ROOT, "pclk_vo1_s_root", mux_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(129), 4, 2, MFLAGS,
++			RK3588_CLKGATE_CON(59), 5, GFLAGS),
++	COMPOSITE(ACLK_VOP_ROOT, "aclk_vop_root", gpll_cpll_dmyaupll_npll_spll_p, 0,
++			RK3588_CLKSEL_CON(110), 5, 3, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(52), 0, GFLAGS),
++	COMPOSITE_NODIV(ACLK_VOP_LOW_ROOT, "aclk_vop_low_root", mux_400m_200m_100m_24m_p, 0,
++			RK3588_CLKSEL_CON(110), 8, 2, MFLAGS,
++			RK3588_CLKGATE_CON(52), 1, GFLAGS),
++	COMPOSITE_NODIV(HCLK_VOP_ROOT, "hclk_vop_root", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(110), 10, 2, MFLAGS,
++			RK3588_CLKGATE_CON(52), 2, GFLAGS),
++	COMPOSITE_NODIV(PCLK_VOP_ROOT, "pclk_vop_root", mux_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(110), 12, 2, MFLAGS,
++			RK3588_CLKGATE_CON(52), 3, GFLAGS),
++	COMPOSITE(ACLK_VO1USB_TOP_ROOT, "aclk_vo1usb_top_root", gpll_cpll_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(170), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(74), 0, GFLAGS),
++	COMPOSITE_NODIV(HCLK_VO1USB_TOP_ROOT, "hclk_vo1usb_top_root", mux_200m_100m_50m_24m_p, CLK_IS_CRITICAL,
++			RK3588_CLKSEL_CON(170), 6, 2, MFLAGS,
++			RK3588_CLKGATE_CON(74), 2, GFLAGS),
++	MUX(ACLK_VOP_SUB_SRC, "aclk_vop_sub_src", aclk_vop_sub_src_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(115), 9, 1, MFLAGS),
++	GATE(PCLK_EDP0, "pclk_edp0", "pclk_vo1_root", 0,
++			RK3588_CLKGATE_CON(62), 0, GFLAGS),
++	GATE(CLK_EDP0_24M, "clk_edp0_24m", "xin24m", 0,
++			RK3588_CLKGATE_CON(62), 1, GFLAGS),
++	COMPOSITE_NODIV(CLK_EDP0_200M, "clk_edp0_200m", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(140), 1, 2, MFLAGS,
++			RK3588_CLKGATE_CON(62), 2, GFLAGS),
++	GATE(PCLK_EDP1, "pclk_edp1", "pclk_vo1_root", 0,
++			RK3588_CLKGATE_CON(62), 3, GFLAGS),
++	GATE(CLK_EDP1_24M, "clk_edp1_24m", "xin24m", 0,
++			RK3588_CLKGATE_CON(62), 4, GFLAGS),
++	COMPOSITE_NODIV(CLK_EDP1_200M, "clk_edp1_200m", mux_200m_100m_50m_24m_p, 0,
++			RK3588_CLKSEL_CON(140), 3, 2, MFLAGS,
++			RK3588_CLKGATE_CON(62), 5, GFLAGS),
++	GATE(HCLK_HDCP_KEY1, "hclk_hdcp_key1", "hclk_vo1_s_root", 0,
++			RK3588_CLKGATE_CON(60), 4, GFLAGS),
++	GATE(PCLK_HDCP1, "pclk_hdcp1", "pclk_vo1_root", 0,
++			RK3588_CLKGATE_CON(60), 7, GFLAGS),
++	GATE(ACLK_HDMIRX, "aclk_hdmirx", "aclk_hdmirx_root", 0,
++			RK3588_CLKGATE_CON(61), 9, GFLAGS),
++	GATE(PCLK_HDMIRX, "pclk_hdmirx", "pclk_vo1_root", 0,
++			RK3588_CLKGATE_CON(61), 10, GFLAGS),
++	GATE(CLK_HDMIRX_REF, "clk_hdmirx_ref", "aclk_hdcp1_root", 0,
++			RK3588_CLKGATE_CON(61), 11, GFLAGS),
++	COMPOSITE(CLK_HDMIRX_AUD_SRC, "clk_hdmirx_aud_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(138), 8, 1, MFLAGS, 0, 8, DFLAGS,
++			RK3588_CLKGATE_CON(61), 12, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_HDMIRX_AUD_FRAC, "clk_hdmirx_aud_frac", "clk_hdmirx_aud_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(139), 0,
++			RK3588_CLKGATE_CON(61), 13, GFLAGS,
++			&rk3588_hdmirx_aud_fracmux),
++	GATE(CLK_HDMIRX_AUD, "clk_hdmirx_aud", "clk_hdmirx_aud_mux", 0,
++			RK3588_CLKGATE_CON(61), 14, GFLAGS),
++	GATE(PCLK_HDMITX0, "pclk_hdmitx0", "pclk_vo1_root", 0,
++			RK3588_CLKGATE_CON(60), 11, GFLAGS),
++	COMPOSITE(CLK_HDMITX0_EARC, "clk_hdmitx0_earc", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(133), 6, 1, MFLAGS, 1, 5, DFLAGS,
++			RK3588_CLKGATE_CON(60), 15, GFLAGS),
++	GATE(CLK_HDMITX0_REF, "clk_hdmitx0_ref", "aclk_hdcp1_root", 0,
++			RK3588_CLKGATE_CON(61), 0, GFLAGS),
++	GATE(PCLK_HDMITX1, "pclk_hdmitx1", "pclk_vo1_root", 0,
++			RK3588_CLKGATE_CON(61), 2, GFLAGS),
++	COMPOSITE(CLK_HDMITX1_EARC, "clk_hdmitx1_earc", gpll_cpll_p, 0,
++			RK3588_CLKSEL_CON(136), 6, 1, MFLAGS, 1, 5, DFLAGS,
++			RK3588_CLKGATE_CON(61), 6, GFLAGS),
++	GATE(CLK_HDMITX1_REF, "clk_hdmitx1_ref", "aclk_hdcp1_root", 0,
++			RK3588_CLKGATE_CON(61), 7, GFLAGS),
++	GATE(ACLK_TRNG1, "aclk_trng1", "aclk_hdcp1_root", 0,
++			RK3588_CLKGATE_CON(60), 9, GFLAGS),
++	GATE(PCLK_TRNG1, "pclk_trng1", "pclk_vo1_root", 0,
++			RK3588_CLKGATE_CON(60), 10, GFLAGS),
++	GATE(0, "pclk_vo1grf", "pclk_vo1_root", CLK_IGNORE_UNUSED,
++			RK3588_CLKGATE_CON(59), 12, GFLAGS),
++	GATE(PCLK_S_EDP0, "pclk_s_edp0", "pclk_vo1_s_root", 0,
++			RK3588_CLKGATE_CON(59), 14, GFLAGS),
++	GATE(PCLK_S_EDP1, "pclk_s_edp1", "pclk_vo1_s_root", 0,
++			RK3588_CLKGATE_CON(59), 15, GFLAGS),
++	GATE(PCLK_S_HDMIRX, "pclk_s_hdmirx", "pclk_vo1_s_root", 0,
++			RK3588_CLKGATE_CON(65), 8, GFLAGS),
++	COMPOSITE(CLK_I2S10_8CH_RX_SRC, "clk_i2s10_8ch_rx_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(155), 8, 1, MFLAGS, 3, 5, DFLAGS,
++			RK3588_CLKGATE_CON(65), 5, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S10_8CH_RX_FRAC, "clk_i2s10_8ch_rx_frac", "clk_i2s10_8ch_rx_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(156), 0,
++			RK3588_CLKGATE_CON(65), 6, GFLAGS,
++			&rk3588_i2s10_8ch_rx_fracmux),
++	GATE(MCLK_I2S10_8CH_RX, "mclk_i2s10_8ch_rx", "clk_i2s10_8ch_rx", 0,
++			RK3588_CLKGATE_CON(65), 7, GFLAGS),
++	COMPOSITE(CLK_I2S7_8CH_RX_SRC, "clk_i2s7_8ch_rx_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(129), 11, 1, MFLAGS, 6, 5, DFLAGS,
++			RK3588_CLKGATE_CON(60), 1, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S7_8CH_RX_FRAC, "clk_i2s7_8ch_rx_frac", "clk_i2s7_8ch_rx_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(130), 0,
++			RK3588_CLKGATE_CON(60), 2, GFLAGS,
++			&rk3588_i2s7_8ch_rx_fracmux),
++	GATE(MCLK_I2S7_8CH_RX, "mclk_i2s7_8ch_rx", "clk_i2s7_8ch_rx", 0,
++			RK3588_CLKGATE_CON(60), 3, GFLAGS),
++	COMPOSITE(CLK_I2S9_8CH_RX_SRC, "clk_i2s9_8ch_rx_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(153), 12, 1, MFLAGS, 7, 5, DFLAGS,
++			RK3588_CLKGATE_CON(65), 1, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S9_8CH_RX_FRAC, "clk_i2s9_8ch_rx_frac", "clk_i2s9_8ch_rx_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(154), 0,
++			RK3588_CLKGATE_CON(65), 2, GFLAGS,
++			&rk3588_i2s9_8ch_rx_fracmux),
++	GATE(MCLK_I2S9_8CH_RX, "mclk_i2s9_8ch_rx", "clk_i2s9_8ch_rx", 0,
++			RK3588_CLKGATE_CON(65), 3, GFLAGS),
++	COMPOSITE(CLK_I2S5_8CH_TX_SRC, "clk_i2s5_8ch_tx_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(140), 10, 1, MFLAGS, 5, 5, DFLAGS,
++			RK3588_CLKGATE_CON(62), 6, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S5_8CH_TX_FRAC, "clk_i2s5_8ch_tx_frac", "clk_i2s5_8ch_tx_src", 0,
++			RK3588_CLKSEL_CON(141), 0,
++			RK3588_CLKGATE_CON(62), 7, GFLAGS,
++			&rk3588_i2s5_8ch_tx_fracmux),
++	GATE(MCLK_I2S5_8CH_TX, "mclk_i2s5_8ch_tx", "clk_i2s5_8ch_tx", 0,
++			RK3588_CLKGATE_CON(62), 8, GFLAGS),
++	COMPOSITE(CLK_I2S6_8CH_TX_SRC, "clk_i2s6_8ch_tx_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(144), 8, 1, MFLAGS, 3, 5, DFLAGS,
++			RK3588_CLKGATE_CON(62), 13, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S6_8CH_TX_FRAC, "clk_i2s6_8ch_tx_frac", "clk_i2s6_8ch_tx_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(145), 0,
++			RK3588_CLKGATE_CON(62), 14, GFLAGS,
++			&rk3588_i2s6_8ch_tx_fracmux),
++	GATE(MCLK_I2S6_8CH_TX, "mclk_i2s6_8ch_tx", "clk_i2s6_8ch_tx", 0,
++			RK3588_CLKGATE_CON(62), 15, GFLAGS),
++	COMPOSITE(CLK_I2S6_8CH_RX_SRC, "clk_i2s6_8ch_rx_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(146), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(63), 0, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S6_8CH_RX_FRAC, "clk_i2s6_8ch_rx_frac", "clk_i2s6_8ch_rx_src", 0,
++			RK3588_CLKSEL_CON(147), 0,
++			RK3588_CLKGATE_CON(63), 1, GFLAGS,
++			&rk3588_i2s6_8ch_rx_fracmux),
++	GATE(MCLK_I2S6_8CH_RX, "mclk_i2s6_8ch_rx", "clk_i2s6_8ch_rx", 0,
++			RK3588_CLKGATE_CON(63), 2, GFLAGS),
++	MUX(I2S6_8CH_MCLKOUT, "i2s6_8ch_mclkout", i2s6_8ch_mclkout_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(148), 2, 2, MFLAGS),
++	COMPOSITE(CLK_SPDIF3_SRC, "clk_spdif3_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(148), 9, 1, MFLAGS, 4, 5, DFLAGS,
++			RK3588_CLKGATE_CON(63), 5, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_SPDIF3_FRAC, "clk_spdif3_frac", "clk_spdif3_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(149), 0,
++			RK3588_CLKGATE_CON(63), 6, GFLAGS,
++			&rk3588_spdif3_fracmux),
++	GATE(MCLK_SPDIF3, "mclk_spdif3", "clk_spdif3", 0,
++			RK3588_CLKGATE_CON(63), 7, GFLAGS),
++	COMPOSITE(CLK_SPDIF4_SRC, "clk_spdif4_src", gpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(150), 7, 1, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(63), 9, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_SPDIF4_FRAC, "clk_spdif4_frac", "clk_spdif4_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(151), 0,
++			RK3588_CLKGATE_CON(63), 10, GFLAGS,
++			&rk3588_spdif4_fracmux),
++	GATE(MCLK_SPDIF4, "mclk_spdif4", "clk_spdif4", 0,
++			RK3588_CLKGATE_CON(63), 11, GFLAGS),
++	COMPOSITE(MCLK_SPDIFRX0, "mclk_spdifrx0", gpll_cpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(152), 7, 2, MFLAGS, 2, 5, DFLAGS,
++			RK3588_CLKGATE_CON(63), 13, GFLAGS),
++	COMPOSITE(MCLK_SPDIFRX1, "mclk_spdifrx1", gpll_cpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(152), 14, 2, MFLAGS, 9, 5, DFLAGS,
++			RK3588_CLKGATE_CON(63), 15, GFLAGS),
++	COMPOSITE(MCLK_SPDIFRX2, "mclk_spdifrx2", gpll_cpll_aupll_p, 0,
++			RK3588_CLKSEL_CON(153), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(64), 1, GFLAGS),
++	GATE(CLK_HDMIHDP0, "clk_hdmihdp0", "xin24m", 0,
++			RK3588_CLKGATE_CON(73), 12, GFLAGS),
++	GATE(CLK_HDMIHDP1, "clk_hdmihdp1", "xin24m", 0,
++			RK3588_CLKGATE_CON(73), 13, GFLAGS),
++	GATE(PCLK_HDPTX0, "pclk_hdptx0", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(72), 5, GFLAGS),
++	GATE(PCLK_HDPTX1, "pclk_hdptx1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(72), 6, GFLAGS),
++	GATE(PCLK_USBDPPHY0, "pclk_usbdpphy0", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(72), 2, GFLAGS),
++	GATE(PCLK_USBDPPHY1, "pclk_usbdpphy1", "pclk_top_root", 0,
++			RK3588_CLKGATE_CON(72), 4, GFLAGS),
++	GATE(HCLK_VOP, "hclk_vop", "hclk_vop_root", 0,
++			RK3588_CLKGATE_CON(52), 8, GFLAGS),
++	GATE(ACLK_VOP, "aclk_vop", "aclk_vop_sub_src", 0,
++			RK3588_CLKGATE_CON(52), 9, GFLAGS),
++	COMPOSITE(DCLK_VOP0_SRC, "dclk_vop0_src", gpll_cpll_v0pll_aupll_p, 0,
++			RK3588_CLKSEL_CON(111), 7, 2, MFLAGS, 0, 7, DFLAGS,
++			RK3588_CLKGATE_CON(52), 10, GFLAGS),
++	COMPOSITE(DCLK_VOP1_SRC, "dclk_vop1_src", gpll_cpll_v0pll_aupll_p, 0,
++			RK3588_CLKSEL_CON(111), 14, 2, MFLAGS, 9, 5, DFLAGS,
++			RK3588_CLKGATE_CON(52), 11, GFLAGS),
++	COMPOSITE(DCLK_VOP2_SRC, "dclk_vop2_src", gpll_cpll_v0pll_aupll_p, CLK_SET_RATE_PARENT | CLK_SET_RATE_NO_REPARENT,
++			RK3588_CLKSEL_CON(112), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_CLKGATE_CON(52), 12, GFLAGS),
++	COMPOSITE_NODIV(DCLK_VOP0, "dclk_vop0", dclk_vop0_p,
++			CLK_SET_RATE_PARENT | CLK_SET_RATE_NO_REPARENT,
++			RK3588_CLKSEL_CON(112), 7, 2, MFLAGS,
++			RK3588_CLKGATE_CON(52), 13, GFLAGS),
++	COMPOSITE_NODIV(DCLK_VOP1, "dclk_vop1", dclk_vop1_p,
++			CLK_SET_RATE_PARENT | CLK_SET_RATE_NO_REPARENT,
++			RK3588_CLKSEL_CON(112), 9, 2, MFLAGS,
++			RK3588_CLKGATE_CON(53), 0, GFLAGS),
++	COMPOSITE_NODIV(DCLK_VOP2, "dclk_vop2", dclk_vop2_p,
++			CLK_SET_RATE_PARENT | CLK_SET_RATE_NO_REPARENT,
++			RK3588_CLKSEL_CON(112), 11, 2, MFLAGS,
++			RK3588_CLKGATE_CON(53), 1, GFLAGS),
++	COMPOSITE(DCLK_VOP3, "dclk_vop3", gpll_cpll_v0pll_aupll_p, 0,
++			RK3588_CLKSEL_CON(113), 7, 2, MFLAGS, 0, 7, DFLAGS,
++			RK3588_CLKGATE_CON(53), 2, GFLAGS),
++	GATE(PCLK_DSIHOST0, "pclk_dsihost0", "pclk_vop_root", 0,
++			RK3588_CLKGATE_CON(53), 4, GFLAGS),
++	GATE(PCLK_DSIHOST1, "pclk_dsihost1", "pclk_vop_root", 0,
++			RK3588_CLKGATE_CON(53), 5, GFLAGS),
++	COMPOSITE(CLK_DSIHOST0, "clk_dsihost0", gpll_cpll_v0pll_spll_p, 0,
++			RK3588_CLKSEL_CON(114), 7, 2, MFLAGS, 0, 7, DFLAGS,
++			RK3588_CLKGATE_CON(53), 6, GFLAGS),
++	COMPOSITE(CLK_DSIHOST1, "clk_dsihost1", gpll_cpll_v0pll_spll_p, 0,
++			RK3588_CLKSEL_CON(115), 7, 2, MFLAGS, 0, 7, DFLAGS,
++			RK3588_CLKGATE_CON(53), 7, GFLAGS),
++	GATE(CLK_VOP_PMU, "clk_vop_pmu", "xin24m", CLK_IGNORE_UNUSED,
++			RK3588_CLKGATE_CON(53), 8, GFLAGS),
++	GATE(ACLK_VOP_DOBY, "aclk_vop_doby", "aclk_vop_root", 0,
++			RK3588_CLKGATE_CON(53), 10, GFLAGS),
++	GATE(CLK_USBDP_PHY0_IMMORTAL, "clk_usbdp_phy0_immortal", "xin24m", CLK_IGNORE_UNUSED,
++			RK3588_CLKGATE_CON(2), 8, GFLAGS),
++	GATE(CLK_USBDP_PHY1_IMMORTAL, "clk_usbdp_phy1_immortal", "xin24m", CLK_IGNORE_UNUSED,
++			RK3588_CLKGATE_CON(2), 15, GFLAGS),
++
++	GATE(CLK_REF_PIPE_PHY0_OSC_SRC, "clk_ref_pipe_phy0_osc_src", "xin24m", 0,
++			RK3588_CLKGATE_CON(77), 0, GFLAGS),
++	GATE(CLK_REF_PIPE_PHY1_OSC_SRC, "clk_ref_pipe_phy1_osc_src", "xin24m", 0,
++			RK3588_CLKGATE_CON(77), 1, GFLAGS),
++	GATE(CLK_REF_PIPE_PHY2_OSC_SRC, "clk_ref_pipe_phy2_osc_src", "xin24m", 0,
++			RK3588_CLKGATE_CON(77), 2, GFLAGS),
++	COMPOSITE_NOMUX(CLK_REF_PIPE_PHY0_PLL_SRC, "clk_ref_pipe_phy0_pll_src", "ppll", 0,
++			RK3588_CLKSEL_CON(176), 0, 6, DFLAGS,
++			RK3588_CLKGATE_CON(77), 3, GFLAGS),
++	COMPOSITE_NOMUX(CLK_REF_PIPE_PHY1_PLL_SRC, "clk_ref_pipe_phy1_pll_src", "ppll", 0,
++			RK3588_CLKSEL_CON(176), 6, 6, DFLAGS,
++			RK3588_CLKGATE_CON(77), 4, GFLAGS),
++	COMPOSITE_NOMUX(CLK_REF_PIPE_PHY2_PLL_SRC, "clk_ref_pipe_phy2_pll_src", "ppll", 0,
++			RK3588_CLKSEL_CON(177), 0, 6, DFLAGS,
++			RK3588_CLKGATE_CON(77), 5, GFLAGS),
++	MUX(CLK_REF_PIPE_PHY0, "clk_ref_pipe_phy0", clk_ref_pipe_phy0_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(177), 6, 1, MFLAGS),
++	MUX(CLK_REF_PIPE_PHY1, "clk_ref_pipe_phy1", clk_ref_pipe_phy1_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(177), 7, 1, MFLAGS),
++	MUX(CLK_REF_PIPE_PHY2, "clk_ref_pipe_phy2", clk_ref_pipe_phy2_p, CLK_SET_RATE_PARENT,
++			RK3588_CLKSEL_CON(177), 8, 1, MFLAGS),
++
++	/* pmu */
++	COMPOSITE(CLK_PMU1_300M_SRC, "clk_pmu1_300m_src", pmu_300m_24m_p, 0,
++			RK3588_PMU_CLKSEL_CON(0), 15, 1, MFLAGS, 10, 5, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(0), 3, GFLAGS),
++	COMPOSITE(CLK_PMU1_400M_SRC, "clk_pmu1_400m_src", pmu_400m_24m_p, 0,
++			RK3588_PMU_CLKSEL_CON(1), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(0), 4, GFLAGS),
++	COMPOSITE_NOMUX(CLK_PMU1_50M_SRC, "clk_pmu1_50m_src", "clk_pmu1_400m_src", 0,
++			RK3588_PMU_CLKSEL_CON(0), 0, 4, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(0), 0, GFLAGS),
++	COMPOSITE_NOMUX(CLK_PMU1_100M_SRC, "clk_pmu1_100m_src", "clk_pmu1_400m_src", 0,
++			RK3588_PMU_CLKSEL_CON(0), 4, 3, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(0), 1, GFLAGS),
++	COMPOSITE_NOMUX(CLK_PMU1_200M_SRC, "clk_pmu1_200m_src", "clk_pmu1_400m_src", 0,
++			RK3588_PMU_CLKSEL_CON(0), 7, 3, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(0), 2, GFLAGS),
++	COMPOSITE_NODIV(HCLK_PMU1_ROOT, "hclk_pmu1_root", hclk_pmu1_root_p, CLK_IS_CRITICAL,
++			RK3588_PMU_CLKSEL_CON(1), 6, 2, MFLAGS,
++			RK3588_PMU_CLKGATE_CON(0), 5, GFLAGS),
++	COMPOSITE_NODIV(PCLK_PMU1_ROOT, "pclk_pmu1_root", pmu_100m_50m_24m_src_p, CLK_IS_CRITICAL,
++			RK3588_PMU_CLKSEL_CON(1), 8, 2, MFLAGS,
++			RK3588_PMU_CLKGATE_CON(0), 7, GFLAGS),
++	GATE(PCLK_PMU0_ROOT, "pclk_pmu0_root", "pclk_pmu1_root", CLK_IS_CRITICAL,
++			RK3588_PMU_CLKGATE_CON(5), 0, GFLAGS),
++	COMPOSITE_NODIV(HCLK_PMU_CM0_ROOT, "hclk_pmu_cm0_root", hclk_pmu_cm0_root_p, CLK_IS_CRITICAL,
++			RK3588_PMU_CLKSEL_CON(1), 10, 2, MFLAGS,
++			RK3588_PMU_CLKGATE_CON(0), 8, GFLAGS),
++	GATE(CLK_PMU0, "clk_pmu0", "xin24m", CLK_IS_CRITICAL,
++			RK3588_PMU_CLKGATE_CON(5), 1, GFLAGS),
++	GATE(PCLK_PMU0, "pclk_pmu0", "pclk_pmu0_root", CLK_IS_CRITICAL,
++			RK3588_PMU_CLKGATE_CON(5), 2, GFLAGS),
++	GATE(PCLK_PMU0IOC, "pclk_pmu0ioc", "pclk_pmu0_root", CLK_IS_CRITICAL,
++			RK3588_PMU_CLKGATE_CON(5), 4, GFLAGS),
++	GATE(PCLK_GPIO0, "pclk_gpio0", "pclk_pmu0_root", 0,
++			RK3588_PMU_CLKGATE_CON(5), 5, GFLAGS),
++	COMPOSITE_NODIV(DBCLK_GPIO0, "dbclk_gpio0", mux_24m_32k_p, 0,
++			RK3588_PMU_CLKSEL_CON(17), 0, 1, MFLAGS,
++			RK3588_PMU_CLKGATE_CON(5), 6, GFLAGS),
++	GATE(PCLK_I2C0, "pclk_i2c0", "pclk_pmu0_root", 0,
++			RK3588_PMU_CLKGATE_CON(2), 1, GFLAGS),
++	COMPOSITE_NODIV(CLK_I2C0, "clk_i2c0", pmu_200m_100m_p, 0,
++			RK3588_PMU_CLKSEL_CON(3), 6, 1, MFLAGS,
++			RK3588_PMU_CLKGATE_CON(2), 2, GFLAGS),
++	GATE(HCLK_I2S1_8CH, "hclk_i2s1_8ch", "hclk_pmu1_root", 0,
++			RK3588_PMU_CLKGATE_CON(2), 7, GFLAGS),
++	COMPOSITE_NOMUX(CLK_I2S1_8CH_TX_SRC, "clk_i2s1_8ch_tx_src", "cpll", 0,
++			RK3588_PMU_CLKSEL_CON(5), 2, 5, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(2), 8, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S1_8CH_TX_FRAC, "clk_i2s1_8ch_tx_frac", "clk_i2s1_8ch_tx_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_PMU_CLKSEL_CON(6), 0,
++			RK3588_PMU_CLKGATE_CON(2), 9, GFLAGS,
++			&rk3588_i2s1_8ch_tx_fracmux),
++	GATE(MCLK_I2S1_8CH_TX, "mclk_i2s1_8ch_tx", "clk_i2s1_8ch_tx", 0,
++			RK3588_PMU_CLKGATE_CON(2), 10, GFLAGS),
++	COMPOSITE_NOMUX(CLK_I2S1_8CH_RX_SRC, "clk_i2s1_8ch_rx_src", "cpll", 0,
++			RK3588_PMU_CLKSEL_CON(7), 2, 5, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(2), 11, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_I2S1_8CH_RX_FRAC, "clk_i2s1_8ch_rx_frac", "clk_i2s1_8ch_rx_src",
++			CLK_SET_RATE_PARENT,
++			RK3588_PMU_CLKSEL_CON(8), 0,
++			RK3588_PMU_CLKGATE_CON(2), 12, GFLAGS,
++			&rk3588_i2s1_8ch_rx_fracmux),
++	GATE(MCLK_I2S1_8CH_RX, "mclk_i2s1_8ch_rx", "clk_i2s1_8ch_rx", 0,
++			RK3588_PMU_CLKGATE_CON(2), 13, GFLAGS),
++	MUX(I2S1_8CH_MCLKOUT, "i2s1_8ch_mclkout", i2s1_8ch_mclkout_p, CLK_SET_RATE_PARENT,
++			RK3588_PMU_CLKSEL_CON(9), 2, 2, MFLAGS),
++	GATE(PCLK_PMU1, "pclk_pmu1", "pclk_pmu0_root", CLK_IS_CRITICAL,
++			RK3588_PMU_CLKGATE_CON(1), 0, GFLAGS),
++	GATE(CLK_DDR_FAIL_SAFE, "clk_ddr_fail_safe", "clk_pmu0", CLK_IGNORE_UNUSED,
++			RK3588_PMU_CLKGATE_CON(1), 1, GFLAGS),
++	GATE(CLK_PMU1, "clk_pmu1", "clk_pmu0", CLK_IS_CRITICAL,
++			RK3588_PMU_CLKGATE_CON(1), 3, GFLAGS),
++	GATE(HCLK_PDM0, "hclk_pdm0", "hclk_pmu1_root", 0,
++			RK3588_PMU_CLKGATE_CON(2), 14, GFLAGS),
++	COMPOSITE_NODIV(MCLK_PDM0, "mclk_pdm0", mclk_pdm0_p, 0,
++			RK3588_PMU_CLKSEL_CON(9), 4, 1, MFLAGS,
++			RK3588_PMU_CLKGATE_CON(2), 15, GFLAGS),
++	GATE(HCLK_VAD, "hclk_vad", "hclk_pmu1_root", 0,
++			RK3588_PMU_CLKGATE_CON(3), 0, GFLAGS),
++	GATE(FCLK_PMU_CM0_CORE, "fclk_pmu_cm0_core", "hclk_pmu_cm0_root", CLK_IS_CRITICAL,
++			RK3588_PMU_CLKGATE_CON(0), 13, GFLAGS),
++	COMPOSITE(CLK_PMU_CM0_RTC, "clk_pmu_cm0_rtc", mux_24m_32k_p, CLK_IS_CRITICAL,
++			RK3588_PMU_CLKSEL_CON(2), 5, 1, MFLAGS, 0, 5, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(0), 15, GFLAGS),
++	GATE(PCLK_PMU1_IOC, "pclk_pmu1_ioc", "pclk_pmu0_root", CLK_IGNORE_UNUSED,
++			RK3588_PMU_CLKGATE_CON(1), 5, GFLAGS),
++	GATE(PCLK_PMU1PWM, "pclk_pmu1pwm", "pclk_pmu0_root", 0,
++			RK3588_PMU_CLKGATE_CON(1), 12, GFLAGS),
++	COMPOSITE_NODIV(CLK_PMU1PWM, "clk_pmu1pwm", pmu_100m_50m_24m_src_p, 0,
++			RK3588_PMU_CLKSEL_CON(2), 9, 2, MFLAGS,
++			RK3588_PMU_CLKGATE_CON(1), 13, GFLAGS),
++	GATE(CLK_PMU1PWM_CAPTURE, "clk_pmu1pwm_capture", "xin24m", 0,
++			RK3588_PMU_CLKGATE_CON(1), 14, GFLAGS),
++	GATE(PCLK_PMU1TIMER, "pclk_pmu1timer", "pclk_pmu0_root", 0,
++			RK3588_PMU_CLKGATE_CON(1), 8, GFLAGS),
++	COMPOSITE_NODIV(CLK_PMU1TIMER_ROOT, "clk_pmu1timer_root", pmu_24m_32k_100m_src_p, 0,
++			RK3588_PMU_CLKSEL_CON(2), 7, 2, MFLAGS,
++			RK3588_PMU_CLKGATE_CON(1), 9, GFLAGS),
++	GATE(CLK_PMU1TIMER0, "clk_pmu1timer0", "clk_pmu1timer_root", 0,
++			RK3588_PMU_CLKGATE_CON(1), 10, GFLAGS),
++	GATE(CLK_PMU1TIMER1, "clk_pmu1timer1", "clk_pmu1timer_root", 0,
++			RK3588_PMU_CLKGATE_CON(1), 11, GFLAGS),
++	COMPOSITE_NOMUX(CLK_UART0_SRC, "clk_uart0_src", "cpll", 0,
++			RK3588_PMU_CLKSEL_CON(3), 7, 5, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(2), 3, GFLAGS),
++	COMPOSITE_FRACMUX(CLK_UART0_FRAC, "clk_uart0_frac", "clk_uart0_src", CLK_SET_RATE_PARENT,
++			RK3588_PMU_CLKSEL_CON(4), 0,
++			RK3588_PMU_CLKGATE_CON(2), 4, GFLAGS,
++			&rk3588_uart0_fracmux),
++	GATE(SCLK_UART0, "sclk_uart0", "clk_uart0", 0,
++			RK3588_PMU_CLKGATE_CON(2), 5, GFLAGS),
++	GATE(PCLK_UART0, "pclk_uart0", "pclk_pmu0_root", 0,
++			RK3588_PMU_CLKGATE_CON(2), 6, GFLAGS),
++	GATE(PCLK_PMU1WDT, "pclk_pmu1wdt", "pclk_pmu0_root", 0,
++			RK3588_PMU_CLKGATE_CON(1), 6, GFLAGS),
++	COMPOSITE_NODIV(TCLK_PMU1WDT, "tclk_pmu1wdt", mux_24m_32k_p, 0,
++			RK3588_PMU_CLKSEL_CON(2), 6, 1, MFLAGS,
++			RK3588_PMU_CLKGATE_CON(1), 7, GFLAGS),
++	COMPOSITE(CLK_CR_PARA, "clk_cr_para", mux_24m_ppll_spll_p, 0,
++			RK3588_PMU_CLKSEL_CON(15), 5, 2, MFLAGS, 0, 5, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(4), 11, GFLAGS),
++	COMPOSITE(CLK_USB2PHY_HDPTXRXPHY_REF, "clk_usb2phy_hdptxrxphy_ref", mux_24m_ppll_p,
++			CLK_IS_CRITICAL,
++			RK3588_PMU_CLKSEL_CON(14), 14, 1, MFLAGS, 9, 5, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(4), 7, GFLAGS),
++	COMPOSITE(CLK_USBDPPHY_MIPIDCPPHY_REF, "clk_usbdpphy_mipidcpphy_ref", mux_24m_ppll_spll_p,
++			CLK_IS_CRITICAL,
++			RK3588_PMU_CLKSEL_CON(14), 7, 2, MFLAGS, 0, 7, DFLAGS,
++			RK3588_PMU_CLKGATE_CON(4), 3, GFLAGS),
++
++	GATE(CLK_PHY0_REF_ALT_P, "clk_phy0_ref_alt_p", "ppll", 0,
++			RK3588_PHYREF_ALT_GATE, 0, GFLAGS),
++	GATE(CLK_PHY0_REF_ALT_M, "clk_phy0_ref_alt_m", "ppll", 0,
++			RK3588_PHYREF_ALT_GATE, 1, GFLAGS),
++	GATE(CLK_PHY1_REF_ALT_P, "clk_phy1_ref_alt_p", "ppll", 0,
++			RK3588_PHYREF_ALT_GATE, 2, GFLAGS),
++	GATE(CLK_PHY1_REF_ALT_M, "clk_phy1_ref_alt_m", "ppll", 0,
++			RK3588_PHYREF_ALT_GATE, 3, GFLAGS),
++
++	GATE(HCLK_SPDIFRX0, "hclk_spdifrx0", "hclk_vo1", 0,
++			RK3588_CLKGATE_CON(63), 12, GFLAGS),
++	GATE(HCLK_SPDIFRX1, "hclk_spdifrx1", "hclk_vo1", 0,
++			RK3588_CLKGATE_CON(63), 14, GFLAGS),
++	GATE(HCLK_SPDIFRX2, "hclk_spdifrx2", "hclk_vo1", 0,
++			RK3588_CLKGATE_CON(64), 0, GFLAGS),
++	GATE(HCLK_SPDIF4, "hclk_spdif4", "hclk_vo1", 0,
++			RK3588_CLKGATE_CON(63), 8, GFLAGS),
++	GATE(HCLK_SPDIF3, "hclk_spdif3", "hclk_vo1", 0,
++			RK3588_CLKGATE_CON(63), 4, GFLAGS),
++	GATE(HCLK_I2S6_8CH, "hclk_i2s6_8ch", "hclk_vo1", 0,
++			RK3588_CLKGATE_CON(63), 3, GFLAGS),
++	GATE(HCLK_I2S5_8CH, "hclk_i2s5_8ch", "hclk_vo1", 0,
++			RK3588_CLKGATE_CON(62), 12, GFLAGS),
++	GATE(HCLK_I2S9_8CH, "hclk_i2s9_8ch", "hclk_vo1", 0,
++			RK3588_CLKGATE_CON(65), 0, GFLAGS),
++	GATE(HCLK_I2S7_8CH, "hclk_i2s7_8ch", "hclk_vo1", 0,
++			RK3588_CLKGATE_CON(60), 0, GFLAGS),
++	GATE(HCLK_I2S10_8CH, "hclk_i2s10_8ch", "hclk_vo1", 0,
++			RK3588_CLKGATE_CON(65), 4, GFLAGS),
++	GATE(ACLK_HDCP1, "aclk_hdcp1", "aclk_hdcp1_pre", 0,
++			RK3588_CLKGATE_CON(60), 5, GFLAGS),
++	GATE(HCLK_HDCP1, "hclk_hdcp1", "hclk_vo1", 0,
++			RK3588_CLKGATE_CON(60), 6, GFLAGS),
++	GATE(HCLK_SPDIF5_DP1, "hclk_spdif5_dp1", "hclk_vo0", 0,
++			RK3588_CLKGATE_CON(57), 7, GFLAGS),
++	GATE(HCLK_SPDIF2_DP0, "hclk_spdif2_dp0", "hclk_vo0", 0,
++			RK3588_CLKGATE_CON(57), 2, GFLAGS),
++	GATE(HCLK_I2S8_8CH, "hclk_i2s8_8ch", "hclk_vo0", 0,
++			RK3588_CLKGATE_CON(56), 14, GFLAGS),
++	GATE(HCLK_I2S4_8CH, "hclk_i2s4_8ch", "hclk_vo0", 0,
++			RK3588_CLKGATE_CON(56), 10, GFLAGS),
++	GATE(ACLK_HDCP0, "aclk_hdcp0", "aclk_hdcp0_pre", 0,
++			RK3588_CLKGATE_CON(55), 12, GFLAGS),
++	GATE(HCLK_HDCP0, "hclk_hdcp0", "hclk_vo0", 0,
++			RK3588_CLKGATE_CON(55), 13, GFLAGS),
++	GATE(HCLK_RKVENC1, "hclk_rkvenc1", "hclk_rkvenc1_pre", 0,
++			RK3588_CLKGATE_CON(48), 4, GFLAGS),
++	GATE(ACLK_RKVENC1, "aclk_rkvenc1", "aclk_rkvenc1_pre", 0,
++			RK3588_CLKGATE_CON(48), 5, GFLAGS),
++	GATE(ACLK_VPU, "aclk_vpu", "aclk_vdpu_low_pre", 0,
++			RK3588_CLKGATE_CON(44), 8, GFLAGS),
++	GATE(ACLK_IEP2P0, "aclk_iep2p0", "aclk_vdpu_low_pre", 0,
++			RK3588_CLKGATE_CON(45), 5, GFLAGS),
++	GATE(ACLK_JPEG_ENCODER0, "aclk_jpeg_encoder0", "aclk_vdpu_low_pre", 0,
++			RK3588_CLKGATE_CON(44), 10, GFLAGS),
++	GATE(ACLK_JPEG_ENCODER1, "aclk_jpeg_encoder1", "aclk_vdpu_low_pre", 0,
++			RK3588_CLKGATE_CON(44), 12, GFLAGS),
++	GATE(ACLK_JPEG_ENCODER2, "aclk_jpeg_encoder2", "aclk_vdpu_low_pre", 0,
++			RK3588_CLKGATE_CON(44), 14, GFLAGS),
++	GATE(ACLK_JPEG_ENCODER3, "aclk_jpeg_encoder3", "aclk_vdpu_low_pre", 0,
++			RK3588_CLKGATE_CON(45), 0, GFLAGS),
++	GATE(ACLK_JPEG_DECODER, "aclk_jpeg_decoder", "aclk_jpeg_decoder_pre", 0,
++			RK3588_CLKGATE_CON(45), 2, GFLAGS),
++	GATE(ACLK_USB3OTG1, "aclk_usb3otg1", "aclk_usb", 0,
++			RK3588_CLKGATE_CON(42), 7, GFLAGS),
++	GATE(HCLK_HOST0, "hclk_host0", "hclk_usb", 0,
++			RK3588_CLKGATE_CON(42), 10, GFLAGS),
++	GATE(HCLK_HOST_ARB0, "hclk_host_arb0", "hclk_usb", 0,
++			RK3588_CLKGATE_CON(42), 11, GFLAGS),
++	GATE(HCLK_HOST1, "hclk_host1", "hclk_usb", 0,
++			RK3588_CLKGATE_CON(42), 12, GFLAGS),
++	GATE(HCLK_HOST_ARB1, "hclk_host_arb1", "hclk_usb", 0,
++			RK3588_CLKGATE_CON(42), 13, GFLAGS),
++	GATE(ACLK_USB3OTG0, "aclk_usb3otg0", "aclk_usb", 0,
++			RK3588_CLKGATE_CON(42), 4, GFLAGS),
++	MMC(SCLK_SDMMC_DRV, "sdmmc_drv", "scmi_cclk_sd", RK3588_SDMMC_CON0, 1),
++	MMC(SCLK_SDMMC_SAMPLE, "sdmmc_sample", "scmi_cclk_sd", RK3588_SDMMC_CON1, 1),
++	GATE(HCLK_SDIO, "hclk_sdio", "hclk_sdio_pre", 0,
++			RK3588_CLKGATE_CON(75), 2, GFLAGS),
++	GATE(HCLK_RKVDEC1, "hclk_rkvdec1", "hclk_rkvdec1_pre", 0,
++			RK3588_CLKGATE_CON(41), 2, GFLAGS),
++	GATE(ACLK_RKVDEC1, "aclk_rkvdec1", "aclk_rkvdec1_pre", 0,
++			RK3588_CLKGATE_CON(41), 3, GFLAGS),
++	GATE(HCLK_RKVDEC0, "hclk_rkvdec0", "hclk_rkvdec0_pre", 0,
++			RK3588_CLKGATE_CON(40), 3, GFLAGS),
++	GATE(ACLK_RKVDEC0, "aclk_rkvdec0", "aclk_rkvdec0_pre", 0,
++			RK3588_CLKGATE_CON(40), 4, GFLAGS),
++	GATE(CLK_PCIE4L_PIPE, "clk_pcie4l_pipe", "clk_pipe30phy_pipe0_i", 0,
++			RK3588_CLKGATE_CON(39), 0, GFLAGS),
++	GATE(CLK_PCIE2L_PIPE, "clk_pcie2l_pipe", "clk_pipe30phy_pipe2_i", 0,
++			RK3588_CLKGATE_CON(39), 1, GFLAGS),
++	GATE(CLK_PIPEPHY0_PIPE_G, "clk_pipephy0_pipe_g", "clk_pipephy0_pipe_i", 0,
++			RK3588_CLKGATE_CON(38), 3, GFLAGS),
++	GATE(CLK_PIPEPHY1_PIPE_G, "clk_pipephy1_pipe_g", "clk_pipephy1_pipe_i", 0,
++			RK3588_CLKGATE_CON(38), 4, GFLAGS),
++	GATE(CLK_PIPEPHY2_PIPE_G, "clk_pipephy2_pipe_g", "clk_pipephy2_pipe_i", 0,
++			RK3588_CLKGATE_CON(38), 5, GFLAGS),
++	GATE(CLK_PIPEPHY0_PIPE_ASIC_G, "clk_pipephy0_pipe_asic_g", "clk_pipephy0_pipe_i", 0,
++			RK3588_CLKGATE_CON(38), 6, GFLAGS),
++	GATE(CLK_PIPEPHY1_PIPE_ASIC_G, "clk_pipephy1_pipe_asic_g", "clk_pipephy1_pipe_i", 0,
++			RK3588_CLKGATE_CON(38), 7, GFLAGS),
++	GATE(CLK_PIPEPHY2_PIPE_ASIC_G, "clk_pipephy2_pipe_asic_g", "clk_pipephy2_pipe_i", 0,
++			RK3588_CLKGATE_CON(38), 8, GFLAGS),
++	GATE(CLK_PIPEPHY2_PIPE_U3_G, "clk_pipephy2_pipe_u3_g", "clk_pipephy2_pipe_i", 0,
++			RK3588_CLKGATE_CON(38), 9, GFLAGS),
++	GATE(CLK_PCIE1L2_PIPE, "clk_pcie1l2_pipe", "clk_pipephy0_pipe_g", 0,
++			RK3588_CLKGATE_CON(38), 13, GFLAGS),
++	GATE(CLK_PCIE1L0_PIPE, "clk_pcie1l0_pipe", "clk_pipephy1_pipe_g", 0,
++			RK3588_CLKGATE_CON(38), 14, GFLAGS),
++	GATE(CLK_PCIE1L1_PIPE, "clk_pcie1l1_pipe", "clk_pipephy2_pipe_g", 0,
++			RK3588_CLKGATE_CON(38), 15, GFLAGS),
++	GATE(HCLK_SFC, "hclk_sfc", "hclk_nvm", 0,
++			RK3588_CLKGATE_CON(31), 10, GFLAGS),
++	GATE(HCLK_SFC_XIP, "hclk_sfc_xip", "hclk_nvm", 0,
++			RK3588_CLKGATE_CON(31), 11, GFLAGS),
++	GATE(HCLK_EMMC, "hclk_emmc", "hclk_nvm", 0,
++			RK3588_CLKGATE_CON(31), 4, GFLAGS),
++	GATE(ACLK_ISP1, "aclk_isp1", "aclk_isp1_pre", 0,
++			RK3588_CLKGATE_CON(26), 5, GFLAGS),
++	GATE(HCLK_ISP1, "hclk_isp1", "hclk_isp1_pre", 0,
++			RK3588_CLKGATE_CON(26), 7, GFLAGS),
++	GATE(PCLK_AV1, "pclk_av1", "pclk_av1_pre", 0,
++			RK3588_CLKGATE_CON(68), 5, GFLAGS),
++	GATE(ACLK_AV1, "aclk_av1", "aclk_av1_pre", 0,
++			RK3588_CLKGATE_CON(68), 2, GFLAGS),
++
++	GATE_LINK(ACLK_ISP1_PRE, "aclk_isp1_pre", "aclk_isp1_root", "aclk_vi_root", 0, RK3588_CLKGATE_CON(26), 6, GFLAGS),
++	GATE_LINK(HCLK_ISP1_PRE, "hclk_isp1_pre", "hclk_isp1_root", "hclk_vi_root", 0, RK3588_CLKGATE_CON(26), 8, GFLAGS),
++	GATE_LINK(HCLK_NVM, "hclk_nvm", "hclk_nvm_root", "aclk_nvm_root", 0, RK3588_CLKGATE_CON(31), 2, GFLAGS),
++	GATE_LINK(ACLK_USB, "aclk_usb", "aclk_usb_root", "aclk_vo1usb_top_root", 0, RK3588_CLKGATE_CON(42), 2, GFLAGS),
++	GATE_LINK(HCLK_USB, "hclk_usb", "hclk_usb_root", "hclk_vo1usb_top_root", 0, RK3588_CLKGATE_CON(42), 3, GFLAGS),
++	GATE_LINK(ACLK_JPEG_DECODER_PRE, "aclk_jpeg_decoder_pre", "aclk_jpeg_decoder_root", "aclk_vdpu_root", 0, RK3588_CLKGATE_CON(44), 7, GFLAGS),
++	GATE_LINK(ACLK_VDPU_LOW_PRE, "aclk_vdpu_low_pre", "aclk_vdpu_low_root", "aclk_vdpu_root", 0, RK3588_CLKGATE_CON(44), 5, GFLAGS),
++	GATE_LINK(ACLK_RKVENC1_PRE, "aclk_rkvenc1_pre", "aclk_rkvenc1_root", "aclk_rkvenc0", 0, RK3588_CLKGATE_CON(48), 3, GFLAGS),
++	GATE_LINK(HCLK_RKVENC1_PRE, "hclk_rkvenc1_pre", "hclk_rkvenc1_root", "hclk_rkvenc0", 0, RK3588_CLKGATE_CON(48), 2, GFLAGS),
++	GATE_LINK(HCLK_RKVDEC0_PRE, "hclk_rkvdec0_pre", "hclk_rkvdec0_root", "hclk_vdpu_root", 0, RK3588_CLKGATE_CON(40), 5, GFLAGS),
++	GATE_LINK(ACLK_RKVDEC0_PRE, "aclk_rkvdec0_pre", "aclk_rkvdec0_root", "aclk_vdpu_root", 0, RK3588_CLKGATE_CON(40), 6, GFLAGS),
++	GATE_LINK(HCLK_RKVDEC1_PRE, "hclk_rkvdec1_pre", "hclk_rkvdec1_root", "hclk_vdpu_root", 0, RK3588_CLKGATE_CON(41), 4, GFLAGS),
++	GATE_LINK(ACLK_RKVDEC1_PRE, "aclk_rkvdec1_pre", "aclk_rkvdec1_root", "aclk_vdpu_root", 0, RK3588_CLKGATE_CON(41), 5, GFLAGS),
++	GATE_LINK(ACLK_HDCP0_PRE, "aclk_hdcp0_pre", "aclk_vo0_root", "aclk_vop_low_root", 0, RK3588_CLKGATE_CON(55), 9, GFLAGS),
++	GATE_LINK(HCLK_VO0, "hclk_vo0", "hclk_vo0_root", "hclk_vop_root", 0, RK3588_CLKGATE_CON(55), 5, GFLAGS),
++	GATE_LINK(ACLK_HDCP1_PRE, "aclk_hdcp1_pre", "aclk_hdcp1_root", "aclk_vo1usb_top_root", 0, RK3588_CLKGATE_CON(59), 6, GFLAGS),
++	GATE_LINK(HCLK_VO1, "hclk_vo1", "hclk_vo1_root", "hclk_vo1usb_top_root", 0, RK3588_CLKGATE_CON(59), 9, GFLAGS),
++	GATE_LINK(ACLK_AV1_PRE, "aclk_av1_pre", "aclk_av1_root", "aclk_vdpu_root", 0, RK3588_CLKGATE_CON(68), 1, GFLAGS),
++	GATE_LINK(PCLK_AV1_PRE, "pclk_av1_pre", "pclk_av1_root", "hclk_vdpu_root", 0, RK3588_CLKGATE_CON(68), 4, GFLAGS),
++	GATE_LINK(HCLK_SDIO_PRE, "hclk_sdio_pre", "hclk_sdio_root", "hclk_nvm", 0, RK3588_CLKGATE_CON(75), 1, GFLAGS),
++};
++
++static void __init rk3588_clk_init(struct device_node *np)
++{
++	struct rockchip_clk_provider *ctx;
++	void __iomem *reg_base;
++
++	reg_base = of_iomap(np, 0);
++	if (!reg_base) {
++		pr_err("%s: could not map cru region\n", __func__);
++		return;
++	}
++
++	ctx = rockchip_clk_init(np, reg_base, CLK_NR_CLKS);
++	if (IS_ERR(ctx)) {
++		pr_err("%s: rockchip clk init failed\n", __func__);
++		iounmap(reg_base);
++		return;
++	}
++
++	rockchip_clk_register_plls(ctx, rk3588_pll_clks,
++				   ARRAY_SIZE(rk3588_pll_clks),
++				   RK3588_GRF_SOC_STATUS0);
++
++	rockchip_clk_register_armclk(ctx, ARMCLK_L, "armclk_l",
++			mux_armclkl_p, ARRAY_SIZE(mux_armclkl_p),
++			&rk3588_cpulclk_data, rk3588_cpulclk_rates,
++			ARRAY_SIZE(rk3588_cpulclk_rates));
++	rockchip_clk_register_armclk(ctx, ARMCLK_B01, "armclk_b01",
++			mux_armclkb01_p, ARRAY_SIZE(mux_armclkb01_p),
++			&rk3588_cpub0clk_data, rk3588_cpub0clk_rates,
++			ARRAY_SIZE(rk3588_cpub0clk_rates));
++	rockchip_clk_register_armclk(ctx, ARMCLK_B23, "armclk_b23",
++			mux_armclkb23_p, ARRAY_SIZE(mux_armclkb23_p),
++			&rk3588_cpub1clk_data, rk3588_cpub1clk_rates,
++			ARRAY_SIZE(rk3588_cpub1clk_rates));
++
++	rockchip_clk_register_branches(ctx, rk3588_clk_branches,
++				       ARRAY_SIZE(rk3588_clk_branches));
++
++	rk3588_rst_init(np, reg_base);
++
++	rockchip_register_restart_notifier(ctx, RK3588_GLB_SRST_FST, NULL);
++
++	rockchip_clk_of_add_provider(np, ctx);
++}
++
++CLK_OF_DECLARE(rk3588_cru, "rockchip,rk3588-cru", rk3588_clk_init);
++
++struct clk_rk3588_inits {
++	void (*inits)(struct device_node *np);
++};
++
++static const struct clk_rk3588_inits clk_3588_cru_init = {
++	.inits = rk3588_clk_init,
++};
++
++static const struct of_device_id clk_rk3588_match_table[] = {
++	{
++		.compatible = "rockchip,rk3588-cru",
++		.data = &clk_3588_cru_init,
++	},
++	{ }
++};
++
++static int __init clk_rk3588_probe(struct platform_device *pdev)
++{
++	const struct clk_rk3588_inits *init_data;
++	struct device *dev = &pdev->dev;
++
++	init_data = device_get_match_data(dev);
++	if (!init_data)
++		return -EINVAL;
++
++	if (init_data->inits)
++		init_data->inits(dev->of_node);
++
++	return 0;
++}
++
++static struct platform_driver clk_rk3588_driver = {
++	.driver		= {
++		.name	= "clk-rk3588",
++		.of_match_table = clk_rk3588_match_table,
++		.suppress_bind_attrs = true,
++	},
++};
++builtin_platform_driver_probe(clk_rk3588_driver, clk_rk3588_probe);
+--- a/drivers/clk/rockchip/clk.h
++++ b/drivers/clk/rockchip/clk.h
+@@ -235,6 +235,51 @@ struct clk;
+ #define RK3568_PMU_CLKGATE_CON(x)	((x) * 0x4 + 0x180)
+ #define RK3568_PMU_SOFTRST_CON(x)	((x) * 0x4 + 0x200)
+ 
++#define RK3588_PHP_CRU_BASE		0x8000
++#define RK3588_PMU_CRU_BASE		0x30000
++#define RK3588_BIGCORE0_CRU_BASE	0x50000
++#define RK3588_BIGCORE1_CRU_BASE	0x52000
++#define RK3588_DSU_CRU_BASE		0x58000
++
++#define RK3588_PLL_CON(x)		RK2928_PLL_CON(x)
++#define RK3588_MODE_CON0		0x280
++#define RK3588_B0_PLL_MODE_CON0		(RK3588_BIGCORE0_CRU_BASE + 0x280)
++#define RK3588_B1_PLL_MODE_CON0		(RK3588_BIGCORE1_CRU_BASE + 0x280)
++#define RK3588_LPLL_MODE_CON0		(RK3588_DSU_CRU_BASE + 0x280)
++#define RK3588_CLKSEL_CON(x)		((x) * 0x4 + 0x300)
++#define RK3588_CLKGATE_CON(x)		((x) * 0x4 + 0x800)
++#define RK3588_SOFTRST_CON(x)		((x) * 0x4 + 0xa00)
++#define RK3588_GLB_CNT_TH		0xc00
++#define RK3588_GLB_SRST_FST		0xc08
++#define RK3588_GLB_SRST_SND		0xc0c
++#define RK3588_GLB_RST_CON		0xc10
++#define RK3588_GLB_RST_ST		0xc04
++#define RK3588_SDIO_CON0		0xC24
++#define RK3588_SDIO_CON1		0xC28
++#define RK3588_SDMMC_CON0		0xC30
++#define RK3588_SDMMC_CON1		0xC34
++
++#define RK3588_PHP_CLKGATE_CON(x)	((x) * 0x4 + RK3588_PHP_CRU_BASE + 0x800)
++#define RK3588_PHP_SOFTRST_CON(x)	((x) * 0x4 + RK3588_PHP_CRU_BASE + 0xa00)
++
++#define RK3588_PMU_PLL_CON(x)		((x) * 0x4 + RK3588_PHP_CRU_BASE)
++#define RK3588_PMU_CLKSEL_CON(x)	((x) * 0x4 + RK3588_PMU_CRU_BASE + 0x300)
++#define RK3588_PMU_CLKGATE_CON(x)	((x) * 0x4 + RK3588_PMU_CRU_BASE + 0x800)
++#define RK3588_PMU_SOFTRST_CON(x)	((x) * 0x4 + RK3588_PMU_CRU_BASE + 0xa00)
++
++#define RK3588_B0_PLL_CON(x)		((x) * 0x4 + RK3588_BIGCORE0_CRU_BASE)
++#define RK3588_BIGCORE0_CLKSEL_CON(x)	((x) * 0x4 + RK3588_BIGCORE0_CRU_BASE + 0x300)
++#define RK3588_BIGCORE0_CLKGATE_CON(x)	((x) * 0x4 + RK3588_BIGCORE0_CRU_BASE + 0x800)
++#define RK3588_BIGCORE0_SOFTRST_CON(x)	((x) * 0x4 + RK3588_BIGCORE0_CRU_BASE + 0xa00)
++#define RK3588_B1_PLL_CON(x)		((x) * 0x4 + RK3588_BIGCORE1_CRU_BASE)
++#define RK3588_BIGCORE1_CLKSEL_CON(x)	((x) * 0x4 + RK3588_BIGCORE1_CRU_BASE + 0x300)
++#define RK3588_BIGCORE1_CLKGATE_CON(x)	((x) * 0x4 + RK3588_BIGCORE1_CRU_BASE + 0x800)
++#define RK3588_BIGCORE1_SOFTRST_CON(x)	((x) * 0x4 + RK3588_BIGCORE1_CRU_BASE + 0xa00)
++#define RK3588_LPLL_CON(x)		((x) * 0x4 + RK3588_DSU_CRU_BASE)
++#define RK3588_DSU_CLKSEL_CON(x)	((x) * 0x4 + RK3588_DSU_CRU_BASE + 0x300)
++#define RK3588_DSU_CLKGATE_CON(x)	((x) * 0x4 + RK3588_DSU_CRU_BASE + 0x800)
++#define RK3588_DSU_SOFTRST_CON(x)	((x) * 0x4 + RK3588_DSU_CRU_BASE + 0xa00)
++
+ enum rockchip_pll_type {
+ 	pll_rk3036,
+ 	pll_rk3066,
+@@ -394,7 +439,7 @@ struct rockchip_cpuclk_clksel {
+ 	u32 val;
+ };
+ 
+-#define ROCKCHIP_CPUCLK_NUM_DIVIDERS	5
++#define ROCKCHIP_CPUCLK_NUM_DIVIDERS	6
+ #define ROCKCHIP_CPUCLK_MAX_CORES	4
+ struct rockchip_cpuclk_rate_table {
+ 	unsigned long prate;
+@@ -978,4 +1023,6 @@ static inline void rockchip_register_sof
+ 	return rockchip_register_softrst_lut(np, NULL, num_regs, base, flags);
+ }
+ 
++void rk3588_rst_init(struct device_node *np, void __iomem *reg_base);
++
+ #endif
+--- /dev/null
++++ b/drivers/clk/rockchip/rst-rk3588.c
+@@ -0,0 +1,857 @@
++// SPDX-License-Identifier: GPL-2.0-or-later
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ * Copyright (c) 2022 Collabora Ltd.
++ * Author: Sebastian Reichel <sebastian.reichel@collabora.com>
++ */
++
++#include <linux/module.h>
++#include <linux/of.h>
++#include <dt-bindings/reset/rockchip,rk3588-cru.h>
++#include "clk.h"
++
++/* 0xFD7C0000 + 0x0A00 */
++#define RK3588_CRU_RESET_OFFSET(id, reg, bit) [id] = (0 + reg * 16 + bit)
++
++/* 0xFD7C8000 + 0x0A00 */
++#define RK3588_PHPTOPCRU_RESET_OFFSET(id, reg, bit) [id] = (0x8000*4 + reg * 16 + bit)
++
++/* 0xFD7D0000 + 0x0A00 */
++#define RK3588_SECURECRU_RESET_OFFSET(id, reg, bit) [id] = (0x10000*4 + reg * 16 + bit)
++
++/* 0xFD7F0000 + 0x0A00 */
++#define RK3588_PMU1CRU_RESET_OFFSET(id, reg, bit) [id] = (0x30000*4 + reg * 16 + bit)
++
++/* mapping table for reset ID to register offset */
++static const int rk3588_register_offset[] = {
++	/* SOFTRST_CON01 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_TOP_BIU, 1, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_P_TOP_BIU, 1, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CSIPHY0, 1, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_CSIPHY0, 1, 7), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_P_CSIPHY1, 1, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_CSIPHY1, 1, 9), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_A_TOP_M500_BIU, 1, 15),
++
++	/* SOFTRST_CON02 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_TOP_M400_BIU, 2, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_A_TOP_S200_BIU, 2, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_A_TOP_S400_BIU, 2, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_A_TOP_M300_BIU, 2, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY0_INIT, 2, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY0_CMN, 2, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY0_LANE, 2, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY0_PCS, 2, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY1_INIT, 2, 15),
++
++	/* SOFTRST_CON03 */
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY1_CMN, 3, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY1_LANE, 3, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY1_PCS, 3, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_DCPHY0, 3, 11), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_P_MIPI_DCPHY0, 3, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_P_MIPI_DCPHY0_GRF, 3, 15),
++
++	/* SOFTRST_CON04 */
++	RK3588_CRU_RESET_OFFSET(SRST_DCPHY1, 4, 0), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_P_MIPI_DCPHY1, 4, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_P_MIPI_DCPHY1_GRF, 4, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_SLV_CDPHY, 4, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_SLV_CSIPHY, 4, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_SLV_VCCIO3_5, 4, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_SLV_VCCIO6, 4, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_SLV_EMMCIO, 4, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_SLV_IOC_TOP, 4, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_SLV_IOC_RIGHT, 4, 11),
++
++	/* SOFTRST_CON05 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_CRU, 5, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_A_CHANNEL_SECURE2VO1USB, 5, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_A_CHANNEL_SECURE2CENTER, 5, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_H_CHANNEL_SECURE2VO1USB, 5, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_H_CHANNEL_SECURE2CENTER, 5, 15),
++
++	/* SOFTRST_CON06 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_CHANNEL_SECURE2VO1USB, 6, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CHANNEL_SECURE2CENTER, 6, 1),
++
++	/* SOFTRST_CON07 */
++	RK3588_CRU_RESET_OFFSET(SRST_H_AUDIO_BIU, 7, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_P_AUDIO_BIU, 7, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_H_I2S0_8CH, 7, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S0_8CH_TX, 7, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S0_8CH_RX, 7, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_P_ACDCDIG, 7, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_H_I2S2_2CH, 7, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_H_I2S3_2CH, 7, 13),
++
++	/* SOFTRST_CON08 */
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S2_2CH, 8, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S3_2CH, 8, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_DAC_ACDCDIG, 8, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_H_SPDIF0, 8, 14),
++
++	/* SOFTRST_CON09 */
++	RK3588_CRU_RESET_OFFSET(SRST_M_SPDIF0, 9, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_H_SPDIF1, 9, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_M_SPDIF1, 9, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_H_PDM1, 9, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_PDM1, 9, 7),
++
++	/* SOFTRST_CON10 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_BUS_BIU, 10, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_P_BUS_BIU, 10, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_A_GIC, 10, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_A_GIC_DBG, 10, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DMAC0, 10, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DMAC1, 10, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DMAC2, 10, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_I2C1, 10, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_P_I2C2, 10, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_P_I2C3, 10, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_P_I2C4, 10, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_P_I2C5, 10, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_P_I2C6, 10, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_P_I2C7, 10, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_P_I2C8, 10, 15),
++
++	/* SOFTRST_CON11 */
++	RK3588_CRU_RESET_OFFSET(SRST_I2C1, 11, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_I2C2, 11, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_I2C3, 11, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_I2C4, 11, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_I2C5, 11, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_I2C6, 11, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_I2C7, 11, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_I2C8, 11, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CAN0, 11, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_CAN0, 11, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CAN1, 11, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_CAN1, 11, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CAN2, 11, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_CAN2, 11, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_P_SARADC, 11, 14),
++
++	/* SOFTRST_CON12 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_TSADC, 12, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_TSADC, 12, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_P_UART1, 12, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_P_UART2, 12, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_P_UART3, 12, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_UART4, 12, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_P_UART5, 12, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_UART6, 12, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_UART7, 12, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_P_UART8, 12, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_P_UART9, 12, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_S_UART1, 12, 13),
++
++	/* SOFTRST_CON13 */
++	RK3588_CRU_RESET_OFFSET(SRST_S_UART2, 13, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_S_UART3, 13, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_S_UART4, 13, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_S_UART5, 13, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_S_UART6, 13, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_S_UART7, 13, 15),
++
++	/* SOFTRST_CON14 */
++	RK3588_CRU_RESET_OFFSET(SRST_S_UART8, 14, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_S_UART9, 14, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_P_SPI0, 14, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_SPI1, 14, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_SPI2, 14, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_P_SPI3, 14, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_P_SPI4, 14, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_SPI0, 14, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_SPI1, 14, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_SPI2, 14, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_SPI3, 14, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_SPI4, 14, 15),
++
++	/* SOFTRST_CON15 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_WDT0, 15, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_T_WDT0, 15, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_P_SYS_GRF, 15, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_P_PWM1, 15, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_PWM1, 15, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_PWM2, 15, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_PWM2, 15, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_PWM3, 15, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_PWM3, 15, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_P_BUSTIMER0, 15, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_P_BUSTIMER1, 15, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER0, 15, 15),
++
++	/* SOFTRST_CON16 */
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER1, 16, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER2, 16, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER3, 16, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER4, 16, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER5, 16, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER6, 16, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER7, 16, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER8, 16, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER9, 16, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER10, 16, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_BUSTIMER11, 16, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_P_MAILBOX0, 16, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_P_MAILBOX1, 16, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_P_MAILBOX2, 16, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_P_GPIO1, 16, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_GPIO1, 16, 15),
++
++	/* SOFTRST_CON17 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_GPIO2, 17, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_GPIO2, 17, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_P_GPIO3, 17, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_GPIO3, 17, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_P_GPIO4, 17, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_GPIO4, 17, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DECOM, 17, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DECOM, 17, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_D_DECOM, 17, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_P_TOP, 17, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_A_GICADB_GIC2CORE_BUS, 17, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DFT2APB, 17, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_MST_TOP, 17, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_MST_CDPHY, 17, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_MST_BOT_RIGHT, 17, 15),
++
++	/* SOFTRST_CON18 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_MST_IOC_TOP, 18, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_MST_IOC_RIGHT, 18, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_MST_CSIPHY, 18, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_MST_VCCIO3_5, 18, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_MST_VCCIO6, 18, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_MST_EMMCIO, 18, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_A_SPINLOCK, 18, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_OTPC_NS, 18, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_OTPC_NS, 18, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_OTPC_ARB, 18, 11),
++
++	/* SOFTRST_CON19 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_BUSIOC, 19, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_P_PMUCM0_INTMUX, 19, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDRCM0_INTMUX, 19, 5),
++
++	/* SOFTRST_CON20 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_DFICTL_CH0, 20, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_MON_CH0, 20, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_STANDBY_CH0, 20, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_UPCTL_CH0, 20, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_TM_DDR_MON_CH0, 20, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_GRF_CH01, 20, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_DFI_CH0, 20, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_SBR_CH0, 20, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_UPCTL_CH0, 20, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_DFICTL_CH0, 20, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_MON_CH0, 20, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_STANDBY_CH0, 20, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR_UPCTL_CH0, 20, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_DFICTL_CH1, 20, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_MON_CH1, 20, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_STANDBY_CH1, 20, 15),
++
++	/* SOFTRST_CON21 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_UPCTL_CH1, 21, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_TM_DDR_MON_CH1, 21, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_DFI_CH1, 21, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_SBR_CH1, 21, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_UPCTL_CH1, 21, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_DFICTL_CH1, 21, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_MON_CH1, 21, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_STANDBY_CH1, 21, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR_UPCTL_CH1, 21, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR01_MSCH0, 21, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR01_RS_MSCH0, 21, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR01_FRS_MSCH0, 21, 15),
++
++	/* SOFTRST_CON22 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR01_SCRAMBLE0, 22, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR01_FRS_SCRAMBLE0, 22, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR01_MSCH1, 22, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR01_RS_MSCH1, 22, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR01_FRS_MSCH1, 22, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR01_SCRAMBLE1, 22, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR01_FRS_SCRAMBLE1, 22, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR01_MSCH0, 22, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR01_MSCH1, 22, 8),
++
++	/* SOFTRST_CON23 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_DFICTL_CH2, 23, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_MON_CH2, 23, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_STANDBY_CH2, 23, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_UPCTL_CH2, 23, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_TM_DDR_MON_CH2, 23, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_GRF_CH23, 23, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_DFI_CH2, 23, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_SBR_CH2, 23, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_UPCTL_CH2, 23, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_DFICTL_CH2, 23, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_MON_CH2, 23, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_STANDBY_CH2, 23, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR_UPCTL_CH2, 23, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_DFICTL_CH3, 23, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_MON_CH3, 23, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_STANDBY_CH3, 23, 15),
++
++	/* SOFTRST_CON24 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR_UPCTL_CH3, 24, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_TM_DDR_MON_CH3, 24, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_DFI_CH3, 24, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_SBR_CH3, 24, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_UPCTL_CH3, 24, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_DFICTL_CH3, 24, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_MON_CH3, 24, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_STANDBY_CH3, 24, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR_UPCTL_CH3, 24, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR23_MSCH2, 24, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR23_RS_MSCH2, 24, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR23_FRS_MSCH2, 24, 15),
++
++	/* SOFTRST_CON25 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR23_SCRAMBLE2, 25, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR23_FRS_SCRAMBLE2, 25, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR23_MSCH3, 25, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR23_RS_MSCH3, 25, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR23_FRS_MSCH3, 25, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR23_SCRAMBLE3, 25, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR23_FRS_SCRAMBLE3, 25, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR23_MSCH2, 25, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DDR23_MSCH3, 25, 8),
++
++	/* SOFTRST_CON26 */
++	RK3588_CRU_RESET_OFFSET(SRST_ISP1, 26, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_ISP1_VICAP, 26, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_ISP1_BIU, 26, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_H_ISP1_BIU, 26, 8),
++
++	/* SOFTRST_CON27 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKNN1, 27, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKNN1_BIU, 27, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKNN1, 27, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKNN1_BIU, 27, 3),
++
++	/* SOFTRST_CON28 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKNN2, 28, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKNN2_BIU, 28, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKNN2, 28, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKNN2_BIU, 28, 3),
++
++	/* SOFTRST_CON29 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKNN_DSU0, 29, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_P_NPUTOP_BIU, 29, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_P_NPU_TIMER, 29, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_NPUTIMER0, 29, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_NPUTIMER1, 29, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_P_NPU_WDT, 29, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_T_NPU_WDT, 29, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_P_NPU_PVTM, 29, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_P_NPU_GRF, 29, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_NPU_PVTM, 29, 14),
++
++	/* SOFTRST_CON30 */
++	RK3588_CRU_RESET_OFFSET(SRST_NPU_PVTPLL, 30, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_H_NPU_CM0_BIU, 30, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_F_NPU_CM0_CORE, 30, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_T_NPU_CM0_JTAG, 30, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKNN0, 30, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKNN0_BIU, 30, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKNN0, 30, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKNN0_BIU, 30, 9),
++
++	/* SOFTRST_CON31 */
++	RK3588_CRU_RESET_OFFSET(SRST_H_NVM_BIU, 31, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_A_NVM_BIU, 31, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_H_EMMC, 31, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_EMMC, 31, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_C_EMMC, 31, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_B_EMMC, 31, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_T_EMMC, 31, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_S_SFC, 31, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_H_SFC, 31, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_H_SFC_XIP, 31, 11),
++
++	/* SOFTRST_CON32 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_GRF, 32, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DEC_BIU, 32, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_P_PHP_BIU, 32, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_A_PCIE_GRIDGE, 32, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_A_PHP_BIU, 32, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_A_GMAC0, 32, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_A_GMAC1, 32, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_A_PCIE_BIU, 32, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_PCIE0_POWER_UP, 32, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_PCIE1_POWER_UP, 32, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_PCIE2_POWER_UP, 32, 15),
++
++	/* SOFTRST_CON33 */
++	RK3588_CRU_RESET_OFFSET(SRST_PCIE3_POWER_UP, 33, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_PCIE4_POWER_UP, 33, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_P_PCIE0, 33, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_P_PCIE1, 33, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_P_PCIE2, 33, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_P_PCIE3, 33, 15),
++
++	/* SOFTRST_CON34 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_PCIE4, 34, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_A_PHP_GIC_ITS, 34, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_A_MMU_PCIE, 34, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_A_MMU_PHP, 34, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_A_MMU_BIU, 34, 9),
++
++	/* SOFTRST_CON35 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_USB3OTG2, 35, 7),
++
++	/* SOFTRST_CON37 */
++	RK3588_CRU_RESET_OFFSET(SRST_PMALIVE0, 37, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_PMALIVE1, 37, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_PMALIVE2, 37, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_A_SATA0, 37, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_A_SATA1, 37, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_A_SATA2, 37, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_RXOOB0, 37, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_RXOOB1, 37, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_RXOOB2, 37, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_ASIC0, 37, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_ASIC1, 37, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_ASIC2, 37, 15),
++
++	/* SOFTRST_CON40 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKVDEC_CCU, 40, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKVDEC0, 40, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKVDEC0, 40, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKVDEC0_BIU, 40, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKVDEC0_BIU, 40, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_RKVDEC0_CA, 40, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_RKVDEC0_HEVC_CA, 40, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_RKVDEC0_CORE, 40, 9),
++
++	/* SOFTRST_CON41 */
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKVDEC1, 41, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKVDEC1, 41, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKVDEC1_BIU, 41, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKVDEC1_BIU, 41, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_RKVDEC1_CA, 41, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_RKVDEC1_HEVC_CA, 41, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_RKVDEC1_CORE, 41, 8),
++
++	/* SOFTRST_CON42 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_USB_BIU, 42, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_H_USB_BIU, 42, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_A_USB3OTG0, 42, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_USB3OTG1, 42, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_H_HOST0, 42, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_H_HOST_ARB0, 42, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_H_HOST1, 42, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_H_HOST_ARB1, 42, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_A_USB_GRF, 42, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_C_USB2P0_HOST0, 42, 15),
++
++	/* SOFTRST_CON43 */
++	RK3588_CRU_RESET_OFFSET(SRST_C_USB2P0_HOST1, 43, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_HOST_UTMI0, 43, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_HOST_UTMI1, 43, 2),
++
++	/* SOFTRST_CON44 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_VDPU_BIU, 44, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_VDPU_LOW_BIU, 44, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_H_VDPU_BIU, 44, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_A_JPEG_DECODER_BIU, 44, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_A_VPU, 44, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_H_VPU, 44, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_A_JPEG_ENCODER0, 44, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_H_JPEG_ENCODER0, 44, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_A_JPEG_ENCODER1, 44, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_H_JPEG_ENCODER1, 44, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_A_JPEG_ENCODER2, 44, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_H_JPEG_ENCODER2, 44, 15),
++
++	/* SOFTRST_CON45 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_JPEG_ENCODER3, 45, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_H_JPEG_ENCODER3, 45, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_A_JPEG_DECODER, 45, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_H_JPEG_DECODER, 45, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_H_IEP2P0, 45, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_IEP2P0, 45, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_IEP2P0_CORE, 45, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RGA2, 45, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RGA2, 45, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_RGA2_CORE, 45, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RGA3_0, 45, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RGA3_0, 45, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_RGA3_0_CORE, 45, 12),
++
++	/* SOFTRST_CON47 */
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKVENC0_BIU, 47, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKVENC0_BIU, 47, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKVENC0, 47, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKVENC0, 47, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_RKVENC0_CORE, 47, 6),
++
++	/* SOFTRST_CON48 */
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKVENC1_BIU, 48, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKVENC1_BIU, 48, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RKVENC1, 48, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RKVENC1, 48, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_RKVENC1_CORE, 48, 6),
++
++	/* SOFTRST_CON49 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_VI_BIU, 49, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_H_VI_BIU, 49, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_VI_BIU, 49, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_D_VICAP, 49, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_A_VICAP, 49, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_H_VICAP, 49, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_ISP0, 49, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_ISP0_VICAP, 49, 11),
++
++	/* SOFTRST_CON50 */
++	RK3588_CRU_RESET_OFFSET(SRST_FISHEYE0, 50, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_FISHEYE1, 50, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CSI_HOST_0, 50, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CSI_HOST_1, 50, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CSI_HOST_2, 50, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CSI_HOST_3, 50, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CSI_HOST_4, 50, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CSI_HOST_5, 50, 9),
++
++	/* SOFTRST_CON51 */
++	RK3588_CRU_RESET_OFFSET(SRST_CSIHOST0_VICAP, 51, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_CSIHOST1_VICAP, 51, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_CSIHOST2_VICAP, 51, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_CSIHOST3_VICAP, 51, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_CSIHOST4_VICAP, 51, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_CSIHOST5_VICAP, 51, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_CIFIN, 51, 13),
++
++	/* SOFTRST_CON52 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_VOP_BIU, 52, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_VOP_LOW_BIU, 52, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_H_VOP_BIU, 52, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_VOP_BIU, 52, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_H_VOP, 52, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_A_VOP, 52, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_D_VOP0, 52, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_D_VOP2HDMI_BRIDGE0, 52, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_D_VOP2HDMI_BRIDGE1, 52, 15),
++
++	/* SOFTRST_CON53 */
++	RK3588_CRU_RESET_OFFSET(SRST_D_VOP1, 53, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_D_VOP2, 53, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_D_VOP3, 53, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_P_VOPGRF, 53, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DSIHOST0, 53, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DSIHOST1, 53, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_DSIHOST0, 53, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_DSIHOST1, 53, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_VOP_PMU, 53, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_P_VOP_CHANNEL_BIU, 53, 9),
++
++	/* SOFTRST_CON55 */
++	RK3588_CRU_RESET_OFFSET(SRST_H_VO0_BIU, 55, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_H_VO0_S_BIU, 55, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_VO0_BIU, 55, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_VO0_S_BIU, 55, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_A_HDCP0_BIU, 55, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_P_VO0GRF, 55, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_H_HDCP_KEY0, 55, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_A_HDCP0, 55, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_H_HDCP0, 55, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_HDCP0, 55, 15),
++
++	/* SOFTRST_CON56 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_TRNG0, 56, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_DP0, 56, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_DP1, 56, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_H_I2S4_8CH, 56, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S4_8CH_TX, 56, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_H_I2S8_8CH, 56, 14),
++
++	/* SOFTRST_CON57 */
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S8_8CH_TX, 57, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_H_SPDIF2_DP0, 57, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_M_SPDIF2_DP0, 57, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_H_SPDIF5_DP1, 57, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_M_SPDIF5_DP1, 57, 11),
++
++	/* SOFTRST_CON59 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_HDCP1_BIU, 59, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_A_VO1_BIU, 59, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_H_VOP1_BIU, 59, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_H_VOP1_S_BIU, 59, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_P_VOP1_BIU, 59, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_P_VO1GRF, 59, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_P_VO1_S_BIU, 59, 13),
++
++	/* SOFTRST_CON60 */
++	RK3588_CRU_RESET_OFFSET(SRST_H_I2S7_8CH, 60, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S7_8CH_RX, 60, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_H_HDCP_KEY1, 60, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_HDCP1, 60, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_H_HDCP1, 60, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_HDCP1, 60, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_P_TRNG1, 60, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_P_HDMITX0, 60, 11),
++
++	/* SOFTRST_CON61 */
++	RK3588_CRU_RESET_OFFSET(SRST_HDMITX0_REF, 61, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_P_HDMITX1, 61, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_HDMITX1_REF, 61, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_A_HDMIRX, 61, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_P_HDMIRX, 61, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_HDMIRX_REF, 61, 11),
++
++	/* SOFTRST_CON62 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_EDP0, 62, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_EDP0_24M, 62, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_P_EDP1, 62, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_EDP1_24M, 62, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S5_8CH_TX, 62, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_H_I2S5_8CH, 62, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S6_8CH_TX, 62, 15),
++
++	/* SOFTRST_CON63 */
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S6_8CH_RX, 63, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_H_I2S6_8CH, 63, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_H_SPDIF3, 63, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_M_SPDIF3, 63, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_H_SPDIF4, 63, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_M_SPDIF4, 63, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_H_SPDIFRX0, 63, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_M_SPDIFRX0, 63, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_H_SPDIFRX1, 63, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_M_SPDIFRX1, 63, 15),
++
++	/* SOFTRST_CON64 */
++	RK3588_CRU_RESET_OFFSET(SRST_H_SPDIFRX2, 64, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_M_SPDIFRX2, 64, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_LINKSYM_HDMITXPHY0, 64, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_LINKSYM_HDMITXPHY1, 64, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_VO1_BRIDGE0, 64, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_VO1_BRIDGE1, 64, 15),
++
++	/* SOFTRST_CON65 */
++	RK3588_CRU_RESET_OFFSET(SRST_H_I2S9_8CH, 65, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S9_8CH_RX, 65, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_H_I2S10_8CH, 65, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_M_I2S10_8CH_RX, 65, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_S_HDMIRX, 65, 8),
++
++	/* SOFTRST_CON66 */
++	RK3588_CRU_RESET_OFFSET(SRST_GPU, 66, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_SYS_GPU, 66, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_A_S_GPU_BIU, 66, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_A_M0_GPU_BIU, 66, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_A_M1_GPU_BIU, 66, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_A_M2_GPU_BIU, 66, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_A_M3_GPU_BIU, 66, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_P_GPU_BIU, 66, 14),
++	RK3588_CRU_RESET_OFFSET(SRST_P_GPU_PVTM, 66, 15),
++
++	/* SOFTRST_CON67 */
++	RK3588_CRU_RESET_OFFSET(SRST_GPU_PVTM, 67, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_P_GPU_GRF, 67, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_GPU_PVTPLL, 67, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_GPU_JTAG, 67, 4),
++
++	/* SOFTRST_CON68 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_AV1_BIU, 68, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_A_AV1, 68, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_P_AV1_BIU, 68, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_AV1, 68, 5),
++
++	/* SOFTRST_CON69 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR_BIU, 69, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DMA2DDR, 69, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR_SHAREMEM, 69, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_A_DDR_SHAREMEM_BIU, 69, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_A_CENTER_S200_BIU, 69, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_A_CENTER_S400_BIU, 69, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_H_AHB2APB, 69, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_H_CENTER_BIU, 69, 13),
++	RK3588_CRU_RESET_OFFSET(SRST_F_DDR_CM0_CORE, 69, 14),
++
++	/* SOFTRST_CON70 */
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_TIMER0, 70, 0),
++	RK3588_CRU_RESET_OFFSET(SRST_DDR_TIMER1, 70, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_T_WDT_DDR, 70, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_T_DDR_CM0_JTAG, 70, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CENTER_GRF, 70, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_P_AHB2APB, 70, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_WDT, 70, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_TIMER, 70, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_P_DMA2DDR, 70, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_P_SHAREMEM, 70, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CENTER_BIU, 70, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_P_CENTER_CHANNEL_BIU, 70, 12),
++
++	/* SOFTRST_CON72 */
++	RK3588_CRU_RESET_OFFSET(SRST_P_USBDPGRF0, 72, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_P_USBDPPHY0, 72, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_P_USBDPGRF1, 72, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_P_USBDPPHY1, 72, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_P_HDPTX0, 72, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_P_HDPTX1, 72, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_P_APB2ASB_SLV_BOT_RIGHT, 72, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_P_USB2PHY_U3_0_GRF0, 72, 8),
++	RK3588_CRU_RESET_OFFSET(SRST_P_USB2PHY_U3_1_GRF0, 72, 9),
++	RK3588_CRU_RESET_OFFSET(SRST_P_USB2PHY_U2_0_GRF0, 72, 10),
++	RK3588_CRU_RESET_OFFSET(SRST_P_USB2PHY_U2_1_GRF0, 72, 11),
++	RK3588_CRU_RESET_OFFSET(SRST_HDPTX0_ROPLL, 72, 12), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_HDPTX0_LCPLL, 72, 13), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_HDPTX0, 72, 14), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_HDPTX1_ROPLL, 72, 15), // missing in TRM
++
++	/* SOFTRST_CON73 */
++	RK3588_CRU_RESET_OFFSET(SRST_HDPTX1_LCPLL, 73, 0), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_HDPTX1, 73, 1), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_HDPTX0_HDMIRXPHY_SET, 73, 2), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY0, 73, 3), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY0_LCPLL, 73, 4), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY0_ROPLL, 73, 5), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY0_PCS_HS, 73, 6), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY1, 73, 7), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY1_LCPLL, 73, 8), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY1_ROPLL, 73, 9), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_USBDP_COMBO_PHY1_PCS_HS, 73, 10), // missing in TRM
++	RK3588_CRU_RESET_OFFSET(SRST_HDMIHDP0, 73, 12),
++	RK3588_CRU_RESET_OFFSET(SRST_HDMIHDP1, 73, 13),
++
++	/* SOFTRST_CON74 */
++	RK3588_CRU_RESET_OFFSET(SRST_A_VO1USB_TOP_BIU, 74, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_H_VO1USB_TOP_BIU, 74, 3),
++
++	/* SOFTRST_CON75 */
++	RK3588_CRU_RESET_OFFSET(SRST_H_SDIO_BIU, 75, 1),
++	RK3588_CRU_RESET_OFFSET(SRST_H_SDIO, 75, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_SDIO, 75, 3),
++
++	/* SOFTRST_CON76 */
++	RK3588_CRU_RESET_OFFSET(SRST_H_RGA3_BIU, 76, 2),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RGA3_BIU, 76, 3),
++	RK3588_CRU_RESET_OFFSET(SRST_H_RGA3_1, 76, 4),
++	RK3588_CRU_RESET_OFFSET(SRST_A_RGA3_1, 76, 5),
++	RK3588_CRU_RESET_OFFSET(SRST_RGA3_1_CORE, 76, 6),
++
++	/* SOFTRST_CON77 */
++	RK3588_CRU_RESET_OFFSET(SRST_REF_PIPE_PHY0, 77, 6),
++	RK3588_CRU_RESET_OFFSET(SRST_REF_PIPE_PHY1, 77, 7),
++	RK3588_CRU_RESET_OFFSET(SRST_REF_PIPE_PHY2, 77, 8),
++
++	/* PHPTOPCRU_SOFTRST_CON00 */
++	RK3588_PHPTOPCRU_RESET_OFFSET(SRST_P_PHPTOP_CRU, 0, 1),
++	RK3588_PHPTOPCRU_RESET_OFFSET(SRST_P_PCIE2_GRF0, 0, 2),
++	RK3588_PHPTOPCRU_RESET_OFFSET(SRST_P_PCIE2_GRF1, 0, 3),
++	RK3588_PHPTOPCRU_RESET_OFFSET(SRST_P_PCIE2_GRF2, 0, 4),
++	RK3588_PHPTOPCRU_RESET_OFFSET(SRST_P_PCIE2_PHY0, 0, 5),
++	RK3588_PHPTOPCRU_RESET_OFFSET(SRST_P_PCIE2_PHY1, 0, 6),
++	RK3588_PHPTOPCRU_RESET_OFFSET(SRST_P_PCIE2_PHY2, 0, 7),
++	RK3588_PHPTOPCRU_RESET_OFFSET(SRST_P_PCIE3_PHY, 0, 8),
++	RK3588_PHPTOPCRU_RESET_OFFSET(SRST_P_APB2ASB_SLV_CHIP_TOP, 0, 9),
++	RK3588_PHPTOPCRU_RESET_OFFSET(SRST_PCIE30_PHY, 0, 10),
++
++	/* PMU1CRU_SOFTRST_CON00 */
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_H_PMU1_BIU, 0, 10),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_PMU1_BIU, 0, 11),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_H_PMU_CM0_BIU, 0, 12),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_F_PMU_CM0_CORE, 0, 13),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_T_PMU1_CM0_JTAG, 0, 14),
++
++	/* PMU1CRU_SOFTRST_CON01 */
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_DDR_FAIL_SAFE, 1, 1),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_CRU_PMU1, 1, 2),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_PMU1_GRF, 1, 4),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_PMU1_IOC, 1, 5),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_PMU1WDT, 1, 6),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_T_PMU1WDT, 1, 7),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_PMU1TIMER, 1, 8),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_PMU1TIMER0, 1, 10),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_PMU1TIMER1, 1, 11),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_PMU1PWM, 1, 12),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_PMU1PWM, 1, 13),
++
++	/* PMU1CRU_SOFTRST_CON02 */
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_I2C0, 2, 1),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_I2C0, 2, 2),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_S_UART0, 2, 5),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_UART0, 2, 6),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_H_I2S1_8CH, 2, 7),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_M_I2S1_8CH_TX, 2, 10),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_M_I2S1_8CH_RX, 2, 13),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_H_PDM0, 2, 14),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_PDM0, 2, 15),
++
++	/* PMU1CRU_SOFTRST_CON03 */
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_H_VAD, 3, 0),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_HDPTX0_INIT, 3, 11),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_HDPTX0_CMN, 3, 12),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_HDPTX0_LANE, 3, 13),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_HDPTX1_INIT, 3, 15),
++
++	/* PMU1CRU_SOFTRST_CON04 */
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_HDPTX1_CMN, 4, 0),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_HDPTX1_LANE, 4, 1),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_M_MIPI_DCPHY0, 4, 3),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_S_MIPI_DCPHY0, 4, 4),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_M_MIPI_DCPHY1, 4, 5),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_S_MIPI_DCPHY1, 4, 6),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_OTGPHY_U3_0, 4, 7),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_OTGPHY_U3_1, 4, 8),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_OTGPHY_U2_0, 4, 9),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_OTGPHY_U2_1, 4, 10),
++
++	/* PMU1CRU_SOFTRST_CON05 */
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_PMU0GRF, 5, 3),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_PMU0IOC, 5, 4),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_P_GPIO0, 5, 5),
++	RK3588_PMU1CRU_RESET_OFFSET(SRST_GPIO0, 5, 6),
++
++	/* SECURECRU_SOFTRST_CON00 */
++	RK3588_SECURECRU_RESET_OFFSET(SRST_A_SECURE_NS_BIU, 0, 10),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_H_SECURE_NS_BIU, 0, 11),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_A_SECURE_S_BIU, 0, 12),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_H_SECURE_S_BIU, 0, 13),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_P_SECURE_S_BIU, 0, 14),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_CRYPTO_CORE, 0, 15),
++
++	/* SECURECRU_SOFTRST_CON01 */
++	RK3588_SECURECRU_RESET_OFFSET(SRST_CRYPTO_PKA, 1, 0),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_CRYPTO_RNG, 1, 1),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_A_CRYPTO, 1, 2),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_H_CRYPTO, 1, 3),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_KEYLADDER_CORE, 1, 9),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_KEYLADDER_RNG, 1, 10),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_A_KEYLADDER, 1, 11),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_H_KEYLADDER, 1, 12),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_P_OTPC_S, 1, 13),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_OTPC_S, 1, 14),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_WDT_S, 1, 15),
++
++	/* SECURECRU_SOFTRST_CON02 */
++	RK3588_SECURECRU_RESET_OFFSET(SRST_T_WDT_S, 2, 0),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_H_BOOTROM, 2, 1),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_A_DCF, 2, 2),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_P_DCF, 2, 3),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_H_BOOTROM_NS, 2, 5),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_P_KEYLADDER, 2, 14),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_H_TRNG_S, 2, 15),
++
++	/* SECURECRU_SOFTRST_CON03 */
++	RK3588_SECURECRU_RESET_OFFSET(SRST_H_TRNG_NS, 3, 0),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_D_SDMMC_BUFFER, 3, 1),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_H_SDMMC, 3, 2),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_H_SDMMC_BUFFER, 3, 3),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_SDMMC, 3, 4),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_P_TRNG_CHK, 3, 5),
++	RK3588_SECURECRU_RESET_OFFSET(SRST_TRNG_S, 3, 6),
++};
++
++void rk3588_rst_init(struct device_node *np, void __iomem *reg_base)
++{
++	rockchip_register_softrst_lut(np,
++				      rk3588_register_offset,
++				      ARRAY_SIZE(rk3588_register_offset),
++				      reg_base + RK3588_SOFTRST_CON(0),
++				      ROCKCHIP_SOFTRST_HIWORD_MASK);
++}
diff --git a/target/linux/rockchip/patches-6.1/221-clk-Remove-a-useless-include.patch b/target/linux/rockchip/patches-6.1/221-clk-Remove-a-useless-include.patch
new file mode 100644
index 0000000000..0ca940e840
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/221-clk-Remove-a-useless-include.patch
@@ -0,0 +1,29 @@
+From 78b56785a0fa785077c8f2ec896140d2cba8cc8a Mon Sep 17 00:00:00 2001
+From: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
+Date: Sat, 12 Nov 2022 22:43:03 +0100
+Subject: [PATCH 221/383] clk: Remove a useless include
+
+<linux/rational.h> is not needed for these drivers. Remove the
+corresponding #include.
+
+Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
+Link: https://lore.kernel.org/r/12dd5cb49efa7714f8e0389e4c7b3bc829e8a90e.1668289299.git.christophe.jaillet@wanadoo.fr
+Acked-by: Heiko Stuebner <heiko@sntech.de>
+Acked-by: Jerome Brunet <jbrunet@baylibre.com>
+Reviewed-by: Luca Ceresoli <luca.ceresoli@bootlin.com>
+Signed-off-by: Stephen Boyd <sboyd@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/rockchip/clk.c | 1 -
+ 1 file changed, 1 deletion(-)
+
+--- a/drivers/clk/rockchip/clk.c
++++ b/drivers/clk/rockchip/clk.c
+@@ -21,7 +21,6 @@
+ #include <linux/mfd/syscon.h>
+ #include <linux/regmap.h>
+ #include <linux/reboot.h>
+-#include <linux/rational.h>
+ 
+ #include "../clk-fractional-divider.h"
+ #include "clk.h"
diff --git a/target/linux/rockchip/patches-6.1/222-clk-rockchip-Remove-values-for-mmask-and-nmask-in-st.patch b/target/linux/rockchip/patches-6.1/222-clk-rockchip-Remove-values-for-mmask-and-nmask-in-st.patch
new file mode 100644
index 0000000000..a5b4811da9
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/222-clk-rockchip-Remove-values-for-mmask-and-nmask-in-st.patch
@@ -0,0 +1,31 @@
+From f16649f16a9c7321897bf4b11a6b3f78f97a76f8 Mon Sep 17 00:00:00 2001
+From: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
+Date: Sun, 2 Apr 2023 11:42:06 +0200
+Subject: [PATCH 222/383] clk: rockchip: Remove values for mmask and nmask in
+ struct clk_fractional_divider
+
+Now that fractional_divider clk computes mmask and nmask when needed, there
+is no more need to provide them explicitly anymore.
+
+Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
+Link: https://lore.kernel.org/r/58e1950566e40e2fbb31004baee57a164ca6a390.1680423909.git.christophe.jaillet@wanadoo.fr
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Stephen Boyd <sboyd@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/rockchip/clk.c | 2 --
+ 1 file changed, 2 deletions(-)
+
+--- a/drivers/clk/rockchip/clk.c
++++ b/drivers/clk/rockchip/clk.c
+@@ -244,10 +244,8 @@ static struct clk *rockchip_clk_register
+ 	div->reg = base + muxdiv_offset;
+ 	div->mshift = 16;
+ 	div->mwidth = 16;
+-	div->mmask = GENMASK(div->mwidth - 1, 0) << div->mshift;
+ 	div->nshift = 0;
+ 	div->nwidth = 16;
+-	div->nmask = GENMASK(div->nwidth - 1, 0) << div->nshift;
+ 	div->lock = lock;
+ 	div->approximation = rockchip_fractional_approximation;
+ 	div_ops = &clk_fractional_divider_ops;
diff --git a/target/linux/rockchip/patches-6.1/223-clk-rockchip-rk3588-make-gate-linked-clocks-critical.patch b/target/linux/rockchip/patches-6.1/223-clk-rockchip-rk3588-make-gate-linked-clocks-critical.patch
new file mode 100644
index 0000000000..4b7f23ada1
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/223-clk-rockchip-rk3588-make-gate-linked-clocks-critical.patch
@@ -0,0 +1,150 @@
+From 08a92df3f5afe34c5115709fe3e77572989b5d93 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 3 Apr 2023 21:32:49 +0200
+Subject: [PATCH 223/383] clk: rockchip: rk3588: make gate linked clocks
+ critical
+
+RK3588 has a couple of hardware blocks called Native Interface Unit
+(NIU) that gate the clocks to devices behind them. Effectively this
+means that some clocks require two parent clocks being enabled.
+Downstream implemented this by using a separate clock driver
+("clk-link") for them, which enables the second clock using PM
+framework.
+
+In the upstream kernel we are currently missing support for the second
+parent. The information about it is in the GATE_LINK() macro as
+linkname, but that is not used. Thus the second parent clock is not
+properly enabled. So far this did not really matter, since these clocks
+are mostly required for the more advanced IP blocks, that are not yet
+supported upstream. As this is about to change we need a fix. There
+are three options available:
+
+1. Properly implement support for having two parent clocks in the
+   clock framework.
+2. Mark the affected clocks CLK_IGNORE_UNUSED, so that they are not
+   disabled. This wastes some power, but keeps the hack contained
+   within the clock driver. Going from this to the first solution
+   is easy once that has been implemented.
+3. Enabling the extra clock in the consumer driver. This leaks some
+   implementation details into DT.
+
+This patch implements the second option as an intermediate solution
+until the first one is available. I used an alias for CLK_IS_CRITICAL,
+so that it's easy to see which clocks are not really critical once
+the clock framework supports a better way to implement this.
+
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230403193250.108693-2-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/rockchip/clk-rk3588.c | 42 +++++++++++++++++++------------
+ 1 file changed, 26 insertions(+), 16 deletions(-)
+
+--- a/drivers/clk/rockchip/clk-rk3588.c
++++ b/drivers/clk/rockchip/clk-rk3588.c
+@@ -13,15 +13,25 @@
+ #include "clk.h"
+ 
+ /*
+- * GATE with additional linked clock. Downstream enables the linked clock
+- * (via runtime PM) whenever the gate is enabled. The downstream implementation
+- * does this via separate clock nodes for each of the linked gate clocks,
+- * which leaks parts of the clock tree into DT. It is unclear why this is
+- * actually needed and things work without it for simple use cases. Thus
+- * the linked clock is ignored for now.
++ * Recent Rockchip SoCs have a new hardware block called Native Interface
++ * Unit (NIU), which gates clocks to devices behind them. These effectively
++ * need two parent clocks.
++ *
++ * Downstream enables the linked clock via runtime PM whenever the gate is
++ * enabled. This implementation uses separate clock nodes for each of the
++ * linked gate clocks, which leaks parts of the clock tree into DT.
++ *
++ * The GATE_LINK macro instead takes the second parent via 'linkname', but
++ * ignores the information. Once the clock framework is ready to handle it, the
++ * information should be passed on here. But since these clocks are required to
++ * access multiple relevant IP blocks, such as PCIe or USB, we mark all linked
++ * clocks critical until a better solution is available. This will waste some
++ * power, but avoids leaking implementation details into DT or hanging the
++ * system.
+  */
+ #define GATE_LINK(_id, cname, pname, linkname, f, o, b, gf) \
+ 	GATE(_id, cname, pname, f, o, b, gf)
++#define RK3588_LINKED_CLK		CLK_IS_CRITICAL
+ 
+ 
+ #define RK3588_GRF_SOC_STATUS0		0x600
+@@ -1446,7 +1456,7 @@ static struct rockchip_clk_branch rk3588
+ 	COMPOSITE_NODIV(HCLK_NVM_ROOT,  "hclk_nvm_root", mux_200m_100m_50m_24m_p, 0,
+ 			RK3588_CLKSEL_CON(77), 0, 2, MFLAGS,
+ 			RK3588_CLKGATE_CON(31), 0, GFLAGS),
+-	COMPOSITE(ACLK_NVM_ROOT, "aclk_nvm_root", gpll_cpll_p, 0,
++	COMPOSITE(ACLK_NVM_ROOT, "aclk_nvm_root", gpll_cpll_p, RK3588_LINKED_CLK,
+ 			RK3588_CLKSEL_CON(77), 7, 1, MFLAGS, 2, 5, DFLAGS,
+ 			RK3588_CLKGATE_CON(31), 1, GFLAGS),
+ 	GATE(ACLK_EMMC, "aclk_emmc", "aclk_nvm_root", 0,
+@@ -1675,13 +1685,13 @@ static struct rockchip_clk_branch rk3588
+ 			RK3588_CLKGATE_CON(42), 9, GFLAGS),
+ 
+ 	/* vdpu */
+-	COMPOSITE(ACLK_VDPU_ROOT, "aclk_vdpu_root", gpll_cpll_aupll_p, 0,
++	COMPOSITE(ACLK_VDPU_ROOT, "aclk_vdpu_root", gpll_cpll_aupll_p, RK3588_LINKED_CLK,
+ 			RK3588_CLKSEL_CON(98), 5, 2, MFLAGS, 0, 5, DFLAGS,
+ 			RK3588_CLKGATE_CON(44), 0, GFLAGS),
+ 	COMPOSITE_NODIV(ACLK_VDPU_LOW_ROOT, "aclk_vdpu_low_root", mux_400m_200m_100m_24m_p, 0,
+ 			RK3588_CLKSEL_CON(98), 7, 2, MFLAGS,
+ 			RK3588_CLKGATE_CON(44), 1, GFLAGS),
+-	COMPOSITE_NODIV(HCLK_VDPU_ROOT, "hclk_vdpu_root", mux_200m_100m_50m_24m_p, 0,
++	COMPOSITE_NODIV(HCLK_VDPU_ROOT, "hclk_vdpu_root", mux_200m_100m_50m_24m_p, RK3588_LINKED_CLK,
+ 			RK3588_CLKSEL_CON(98), 9, 2, MFLAGS,
+ 			RK3588_CLKGATE_CON(44), 2, GFLAGS),
+ 	COMPOSITE(ACLK_JPEG_DECODER_ROOT, "aclk_jpeg_decoder_root", gpll_cpll_aupll_spll_p, 0,
+@@ -1732,9 +1742,9 @@ static struct rockchip_clk_branch rk3588
+ 	COMPOSITE(ACLK_RKVENC0_ROOT, "aclk_rkvenc0_root", gpll_cpll_npll_p, 0,
+ 			RK3588_CLKSEL_CON(102), 7, 2, MFLAGS, 2, 5, DFLAGS,
+ 			RK3588_CLKGATE_CON(47), 1, GFLAGS),
+-	GATE(HCLK_RKVENC0, "hclk_rkvenc0", "hclk_rkvenc0_root", 0,
++	GATE(HCLK_RKVENC0, "hclk_rkvenc0", "hclk_rkvenc0_root", RK3588_LINKED_CLK,
+ 			RK3588_CLKGATE_CON(47), 4, GFLAGS),
+-	GATE(ACLK_RKVENC0, "aclk_rkvenc0", "aclk_rkvenc0_root", 0,
++	GATE(ACLK_RKVENC0, "aclk_rkvenc0", "aclk_rkvenc0_root", RK3588_LINKED_CLK,
+ 			RK3588_CLKGATE_CON(47), 5, GFLAGS),
+ 	COMPOSITE(CLK_RKVENC0_CORE, "clk_rkvenc0_core", gpll_cpll_aupll_npll_p, 0,
+ 			RK3588_CLKSEL_CON(102), 14, 2, MFLAGS, 9, 5, DFLAGS,
+@@ -1744,10 +1754,10 @@ static struct rockchip_clk_branch rk3588
+ 			RK3588_CLKGATE_CON(48), 6, GFLAGS),
+ 
+ 	/* vi */
+-	COMPOSITE(ACLK_VI_ROOT, "aclk_vi_root", gpll_cpll_npll_aupll_spll_p, 0,
++	COMPOSITE(ACLK_VI_ROOT, "aclk_vi_root", gpll_cpll_npll_aupll_spll_p, RK3588_LINKED_CLK,
+ 			RK3588_CLKSEL_CON(106), 5, 3, MFLAGS, 0, 5, DFLAGS,
+ 			RK3588_CLKGATE_CON(49), 0, GFLAGS),
+-	COMPOSITE_NODIV(HCLK_VI_ROOT, "hclk_vi_root", mux_200m_100m_50m_24m_p, 0,
++	COMPOSITE_NODIV(HCLK_VI_ROOT, "hclk_vi_root", mux_200m_100m_50m_24m_p, RK3588_LINKED_CLK,
+ 			RK3588_CLKSEL_CON(106), 8, 2, MFLAGS,
+ 			RK3588_CLKGATE_CON(49), 1, GFLAGS),
+ 	COMPOSITE_NODIV(PCLK_VI_ROOT, "pclk_vi_root", mux_100m_50m_24m_p, 0,
+@@ -1919,10 +1929,10 @@ static struct rockchip_clk_branch rk3588
+ 	COMPOSITE(ACLK_VOP_ROOT, "aclk_vop_root", gpll_cpll_dmyaupll_npll_spll_p, 0,
+ 			RK3588_CLKSEL_CON(110), 5, 3, MFLAGS, 0, 5, DFLAGS,
+ 			RK3588_CLKGATE_CON(52), 0, GFLAGS),
+-	COMPOSITE_NODIV(ACLK_VOP_LOW_ROOT, "aclk_vop_low_root", mux_400m_200m_100m_24m_p, 0,
++	COMPOSITE_NODIV(ACLK_VOP_LOW_ROOT, "aclk_vop_low_root", mux_400m_200m_100m_24m_p, RK3588_LINKED_CLK,
+ 			RK3588_CLKSEL_CON(110), 8, 2, MFLAGS,
+ 			RK3588_CLKGATE_CON(52), 1, GFLAGS),
+-	COMPOSITE_NODIV(HCLK_VOP_ROOT, "hclk_vop_root", mux_200m_100m_50m_24m_p, 0,
++	COMPOSITE_NODIV(HCLK_VOP_ROOT, "hclk_vop_root", mux_200m_100m_50m_24m_p, RK3588_LINKED_CLK,
+ 			RK3588_CLKSEL_CON(110), 10, 2, MFLAGS,
+ 			RK3588_CLKGATE_CON(52), 2, GFLAGS),
+ 	COMPOSITE_NODIV(PCLK_VOP_ROOT, "pclk_vop_root", mux_100m_50m_24m_p, 0,
+@@ -2425,7 +2435,7 @@ static struct rockchip_clk_branch rk3588
+ 
+ 	GATE_LINK(ACLK_ISP1_PRE, "aclk_isp1_pre", "aclk_isp1_root", "aclk_vi_root", 0, RK3588_CLKGATE_CON(26), 6, GFLAGS),
+ 	GATE_LINK(HCLK_ISP1_PRE, "hclk_isp1_pre", "hclk_isp1_root", "hclk_vi_root", 0, RK3588_CLKGATE_CON(26), 8, GFLAGS),
+-	GATE_LINK(HCLK_NVM, "hclk_nvm", "hclk_nvm_root", "aclk_nvm_root", 0, RK3588_CLKGATE_CON(31), 2, GFLAGS),
++	GATE_LINK(HCLK_NVM, "hclk_nvm", "hclk_nvm_root", "aclk_nvm_root", RK3588_LINKED_CLK, RK3588_CLKGATE_CON(31), 2, GFLAGS),
+ 	GATE_LINK(ACLK_USB, "aclk_usb", "aclk_usb_root", "aclk_vo1usb_top_root", 0, RK3588_CLKGATE_CON(42), 2, GFLAGS),
+ 	GATE_LINK(HCLK_USB, "hclk_usb", "hclk_usb_root", "hclk_vo1usb_top_root", 0, RK3588_CLKGATE_CON(42), 3, GFLAGS),
+ 	GATE_LINK(ACLK_JPEG_DECODER_PRE, "aclk_jpeg_decoder_pre", "aclk_jpeg_decoder_root", "aclk_vdpu_root", 0, RK3588_CLKGATE_CON(44), 7, GFLAGS),
diff --git a/target/linux/rockchip/patches-6.1/224-clk-RK808-Reduce-struct-rk808-usage.patch b/target/linux/rockchip/patches-6.1/224-clk-RK808-Reduce-struct-rk808-usage.patch
new file mode 100644
index 0000000000..a82b186446
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/224-clk-RK808-Reduce-struct-rk808-usage.patch
@@ -0,0 +1,133 @@
+From 6e19b2ab9946f98ccc425dd102b7390cbfdd0ee2 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 4 May 2023 19:36:05 +0200
+Subject: [PATCH 224/383] clk: RK808: Reduce 'struct rk808' usage
+
+Reduce usage of 'struct rk808' (driver data of the parent MFD), so
+that only the chip variant field is still being accessed directly.
+This allows restructuring the MFD driver to support SPI based
+PMICs.
+
+Acked-by: Stephen Boyd <sboyd@kernel.org>
+Tested-by: Diederik de Haas <didi.debian@cknow.org> # Rock64, Quartz64 Model A + B
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com> # Pine64 QuartzPro64
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230504173618.142075-2-sebastian.reichel@collabora.com
+Signed-off-by: Lee Jones <lee@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/clk-rk808.c | 34 ++++++++++++++++------------------
+ 1 file changed, 16 insertions(+), 18 deletions(-)
+
+--- a/drivers/clk/clk-rk808.c
++++ b/drivers/clk/clk-rk808.c
+@@ -12,10 +12,9 @@
+ #include <linux/slab.h>
+ #include <linux/platform_device.h>
+ #include <linux/mfd/rk808.h>
+-#include <linux/i2c.h>
+ 
+ struct rk808_clkout {
+-	struct rk808 *rk808;
++	struct regmap		*regmap;
+ 	struct clk_hw		clkout1_hw;
+ 	struct clk_hw		clkout2_hw;
+ };
+@@ -31,9 +30,8 @@ static int rk808_clkout2_enable(struct c
+ 	struct rk808_clkout *rk808_clkout = container_of(hw,
+ 							 struct rk808_clkout,
+ 							 clkout2_hw);
+-	struct rk808 *rk808 = rk808_clkout->rk808;
+ 
+-	return regmap_update_bits(rk808->regmap, RK808_CLK32OUT_REG,
++	return regmap_update_bits(rk808_clkout->regmap, RK808_CLK32OUT_REG,
+ 				  CLK32KOUT2_EN, enable ? CLK32KOUT2_EN : 0);
+ }
+ 
+@@ -52,10 +50,9 @@ static int rk808_clkout2_is_prepared(str
+ 	struct rk808_clkout *rk808_clkout = container_of(hw,
+ 							 struct rk808_clkout,
+ 							 clkout2_hw);
+-	struct rk808 *rk808 = rk808_clkout->rk808;
+ 	uint32_t val;
+ 
+-	int ret = regmap_read(rk808->regmap, RK808_CLK32OUT_REG, &val);
++	int ret = regmap_read(rk808_clkout->regmap, RK808_CLK32OUT_REG, &val);
+ 
+ 	if (ret < 0)
+ 		return ret;
+@@ -93,9 +90,8 @@ static int rk817_clkout2_enable(struct c
+ 	struct rk808_clkout *rk808_clkout = container_of(hw,
+ 							 struct rk808_clkout,
+ 							 clkout2_hw);
+-	struct rk808 *rk808 = rk808_clkout->rk808;
+ 
+-	return regmap_update_bits(rk808->regmap, RK817_SYS_CFG(1),
++	return regmap_update_bits(rk808_clkout->regmap, RK817_SYS_CFG(1),
+ 				  RK817_CLK32KOUT2_EN,
+ 				  enable ? RK817_CLK32KOUT2_EN : 0);
+ }
+@@ -115,10 +111,9 @@ static int rk817_clkout2_is_prepared(str
+ 	struct rk808_clkout *rk808_clkout = container_of(hw,
+ 							 struct rk808_clkout,
+ 							 clkout2_hw);
+-	struct rk808 *rk808 = rk808_clkout->rk808;
+ 	unsigned int val;
+ 
+-	int ret = regmap_read(rk808->regmap, RK817_SYS_CFG(1), &val);
++	int ret = regmap_read(rk808_clkout->regmap, RK817_SYS_CFG(1), &val);
+ 
+ 	if (ret < 0)
+ 		return 0;
+@@ -153,18 +148,21 @@ static const struct clk_ops *rkpmic_get_
+ static int rk808_clkout_probe(struct platform_device *pdev)
+ {
+ 	struct rk808 *rk808 = dev_get_drvdata(pdev->dev.parent);
+-	struct i2c_client *client = rk808->i2c;
+-	struct device_node *node = client->dev.of_node;
++	struct device *dev = &pdev->dev;
+ 	struct clk_init_data init = {};
+ 	struct rk808_clkout *rk808_clkout;
+ 	int ret;
+ 
+-	rk808_clkout = devm_kzalloc(&client->dev,
++	dev->of_node = pdev->dev.parent->of_node;
++
++	rk808_clkout = devm_kzalloc(dev,
+ 				    sizeof(*rk808_clkout), GFP_KERNEL);
+ 	if (!rk808_clkout)
+ 		return -ENOMEM;
+ 
+-	rk808_clkout->rk808 = rk808;
++	rk808_clkout->regmap = dev_get_regmap(pdev->dev.parent, NULL);
++	if (!rk808_clkout->regmap)
++		return -ENODEV;
+ 
+ 	init.parent_names = NULL;
+ 	init.num_parents = 0;
+@@ -173,10 +171,10 @@ static int rk808_clkout_probe(struct pla
+ 	rk808_clkout->clkout1_hw.init = &init;
+ 
+ 	/* optional override of the clockname */
+-	of_property_read_string_index(node, "clock-output-names",
++	of_property_read_string_index(dev->of_node, "clock-output-names",
+ 				      0, &init.name);
+ 
+-	ret = devm_clk_hw_register(&client->dev, &rk808_clkout->clkout1_hw);
++	ret = devm_clk_hw_register(dev, &rk808_clkout->clkout1_hw);
+ 	if (ret)
+ 		return ret;
+ 
+@@ -185,10 +183,10 @@ static int rk808_clkout_probe(struct pla
+ 	rk808_clkout->clkout2_hw.init = &init;
+ 
+ 	/* optional override of the clockname */
+-	of_property_read_string_index(node, "clock-output-names",
++	of_property_read_string_index(dev->of_node, "clock-output-names",
+ 				      1, &init.name);
+ 
+-	ret = devm_clk_hw_register(&client->dev, &rk808_clkout->clkout2_hw);
++	ret = devm_clk_hw_register(dev, &rk808_clkout->clkout2_hw);
+ 	if (ret)
+ 		return ret;
+ 
diff --git a/target/linux/rockchip/patches-6.1/225-mfd-rk808-Convert-to-i2c-s-.probe_new.patch b/target/linux/rockchip/patches-6.1/225-mfd-rk808-Convert-to-i2c-s-.probe_new.patch
new file mode 100644
index 0000000000..f84c76ca1e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/225-mfd-rk808-Convert-to-i2c-s-.probe_new.patch
@@ -0,0 +1,40 @@
+From 9d6a187a4a0dc45d9eba7c35feb794f82506ae7b Mon Sep 17 00:00:00 2001
+From: =?UTF-8?q?Uwe=20Kleine-K=C3=B6nig?= <u.kleine-koenig@pengutronix.de>
+Date: Fri, 18 Nov 2022 23:43:07 +0100
+Subject: [PATCH 225/383] mfd: rk808: Convert to i2c's .probe_new()
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+The probe function doesn't make use of the i2c_device_id * parameter so it
+can be trivially converted.
+
+Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
+Signed-off-by: Lee Jones <lee@kernel.org>
+Link: https://lore.kernel.org/r/20221118224540.619276-454-uwe@kleine-koenig.org
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mfd/rk808.c | 5 ++---
+ 1 file changed, 2 insertions(+), 3 deletions(-)
+
+--- a/drivers/mfd/rk808.c
++++ b/drivers/mfd/rk808.c
+@@ -640,8 +640,7 @@ static const struct of_device_id rk808_o
+ };
+ MODULE_DEVICE_TABLE(of, rk808_of_match);
+ 
+-static int rk808_probe(struct i2c_client *client,
+-		       const struct i2c_device_id *id)
++static int rk808_probe(struct i2c_client *client)
+ {
+ 	struct device_node *np = client->dev.of_node;
+ 	struct rk808 *rk808;
+@@ -861,7 +860,7 @@ static struct i2c_driver rk808_i2c_drive
+ 		.of_match_table = rk808_of_match,
+ 		.pm = &rk8xx_pm_ops,
+ 	},
+-	.probe    = rk808_probe,
++	.probe_new = rk808_probe,
+ 	.remove   = rk808_remove,
+ 	.shutdown = rk8xx_shutdown,
+ };
diff --git a/target/linux/rockchip/patches-6.1/226-mfd-rk808-Permit-having-multiple-PMIC-instances.patch b/target/linux/rockchip/patches-6.1/226-mfd-rk808-Permit-having-multiple-PMIC-instances.patch
new file mode 100644
index 0000000000..2921e906ff
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/226-mfd-rk808-Permit-having-multiple-PMIC-instances.patch
@@ -0,0 +1,97 @@
+From 55bd7a34687b34eef66097db33015e65e2a00961 Mon Sep 17 00:00:00 2001
+From: Neil Armstrong <neil.armstrong@linaro.org>
+Date: Mon, 31 Oct 2022 17:05:07 +0100
+Subject: [PATCH 226/383] mfd: rk808: Permit having multiple PMIC instances
+
+This set each cells id to PLATFORM_DEVID_NONE to allow multiple
+instances of each cell in case multiple PMICs handled by the rk808
+driver are probed.
+
+This fixes probing a RK818 and a RK817 on the Odroid Go Ultra
+devices.
+
+Signed-off-by: Neil Armstrong <neil.armstrong@linaro.org>
+Signed-off-by: Lee Jones <lee@kernel.org>
+Link: https://lore.kernel.org/r/20221025-rk808-multi-v2-0-d292d51ada81@linaro.org
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mfd/rk808.c | 26 ++++++++++++++++----------
+ 1 file changed, 16 insertions(+), 10 deletions(-)
+
+--- a/drivers/mfd/rk808.c
++++ b/drivers/mfd/rk808.c
+@@ -137,58 +137,64 @@ static const struct resource rk817_charg
+ };
+ 
+ static const struct mfd_cell rk805s[] = {
+-	{ .name = "rk808-clkout", },
+-	{ .name = "rk808-regulator", },
+-	{ .name = "rk805-pinctrl", },
++	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
++	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
++	{ .name = "rk805-pinctrl", .id = PLATFORM_DEVID_NONE, },
+ 	{
+ 		.name = "rk808-rtc",
+ 		.num_resources = ARRAY_SIZE(rtc_resources),
+ 		.resources = &rtc_resources[0],
++		.id = PLATFORM_DEVID_NONE,
+ 	},
+ 	{	.name = "rk805-pwrkey",
+ 		.num_resources = ARRAY_SIZE(rk805_key_resources),
+ 		.resources = &rk805_key_resources[0],
++		.id = PLATFORM_DEVID_NONE,
+ 	},
+ };
+ 
+ static const struct mfd_cell rk808s[] = {
+-	{ .name = "rk808-clkout", },
+-	{ .name = "rk808-regulator", },
++	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
++	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
+ 	{
+ 		.name = "rk808-rtc",
+ 		.num_resources = ARRAY_SIZE(rtc_resources),
+ 		.resources = rtc_resources,
++		.id = PLATFORM_DEVID_NONE,
+ 	},
+ };
+ 
+ static const struct mfd_cell rk817s[] = {
+-	{ .name = "rk808-clkout",},
+-	{ .name = "rk808-regulator",},
++	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
++	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
+ 	{
+ 		.name = "rk805-pwrkey",
+ 		.num_resources = ARRAY_SIZE(rk817_pwrkey_resources),
+ 		.resources = &rk817_pwrkey_resources[0],
++		.id = PLATFORM_DEVID_NONE,
+ 	},
+ 	{
+ 		.name = "rk808-rtc",
+ 		.num_resources = ARRAY_SIZE(rk817_rtc_resources),
+ 		.resources = &rk817_rtc_resources[0],
++		.id = PLATFORM_DEVID_NONE,
+ 	},
+-	{ .name = "rk817-codec",},
++	{ .name = "rk817-codec", .id = PLATFORM_DEVID_NONE, },
+ 	{
+ 		.name = "rk817-charger",
+ 		.num_resources = ARRAY_SIZE(rk817_charger_resources),
+ 		.resources = &rk817_charger_resources[0],
++		.id = PLATFORM_DEVID_NONE,
+ 	},
+ };
+ 
+ static const struct mfd_cell rk818s[] = {
+-	{ .name = "rk808-clkout", },
+-	{ .name = "rk808-regulator", },
++	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
+ 	{
+ 		.name = "rk808-rtc",
+ 		.num_resources = ARRAY_SIZE(rtc_resources),
+ 		.resources = rtc_resources,
++		.id = PLATFORM_DEVID_NONE,
+ 	},
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/227-mfd-rk808-Re-add-rk808-clkout-to-RK818.patch b/target/linux/rockchip/patches-6.1/227-mfd-rk808-Re-add-rk808-clkout-to-RK818.patch
new file mode 100644
index 0000000000..e5c08f7eee
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/227-mfd-rk808-Re-add-rk808-clkout-to-RK818.patch
@@ -0,0 +1,32 @@
+From 89bee42c7d96dc87e65480e9c09502497e9b5ba4 Mon Sep 17 00:00:00 2001
+From: Tom Fitzhenry <tom@tom-fitzhenry.me.uk>
+Date: Mon, 2 Jan 2023 22:11:47 +1100
+Subject: [PATCH 227/383] mfd: rk808: Re-add rk808-clkout to RK818
+
+Fixes RK818 (e.g. on Pinephone Pro) to register its clock, without which
+dependent devices (e.g. wifi/BT, via sdio-wifi-pwrseq) fail to probe.
+
+This line was removed in commit 3633daacea2e
+("mfd: rk808: Permit having multiple PMIC instances"), but only from RK818.
+
+Fixes: 3633daacea2e ("mfd: rk808: Permit having multiple PMIC instances")
+Signed-off-by: Tom Fitzhenry <tom@tom-fitzhenry.me.uk>
+Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
+Acked-by: Neil Armstrong <neil.armstrong@linaro.org>
+Signed-off-by: Lee Jones <lee@kernel.org>
+Link: https://lore.kernel.org/r/20230102111147.2580861-1-tom@tom-fitzhenry.me.uk
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mfd/rk808.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/drivers/mfd/rk808.c
++++ b/drivers/mfd/rk808.c
+@@ -189,6 +189,7 @@ static const struct mfd_cell rk817s[] =
+ };
+ 
+ static const struct mfd_cell rk818s[] = {
++	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
+ 	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
+ 	{
+ 		.name = "rk808-rtc",
diff --git a/target/linux/rockchip/patches-6.1/228-mfd-rk808-Convert-to-device-managed-resources.patch b/target/linux/rockchip/patches-6.1/228-mfd-rk808-Convert-to-device-managed-resources.patch
new file mode 100644
index 0000000000..f47a667114
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/228-mfd-rk808-Convert-to-device-managed-resources.patch
@@ -0,0 +1,152 @@
+From 26b0b32d2841305856fd7cdf7b6a96badf2c2599 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 4 May 2023 19:36:06 +0200
+Subject: [PATCH 228/383] mfd: rk808: Convert to device managed resources
+
+Fully convert the driver to device managed resources.
+
+Tested-by: Diederik de Haas <didi.debian@cknow.org> # Rock64, Quartz64 Model A + B
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com> # Pine64 QuartzPro64
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230504173618.142075-3-sebastian.reichel@collabora.com
+Signed-off-by: Lee Jones <lee@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mfd/rk808.c | 64 ++++++++++++++++-----------------------------
+ 1 file changed, 22 insertions(+), 42 deletions(-)
+
+--- a/drivers/mfd/rk808.c
++++ b/drivers/mfd/rk808.c
+@@ -548,13 +548,11 @@ static const struct regmap_irq_chip rk81
+ 	.init_ack_masked = true,
+ };
+ 
+-static struct i2c_client *rk808_i2c_client;
+-
+-static void rk808_pm_power_off(void)
++static int rk808_power_off(struct sys_off_data *data)
+ {
++	struct rk808 *rk808 = data->cb_data;
+ 	int ret;
+ 	unsigned int reg, bit;
+-	struct rk808 *rk808 = i2c_get_clientdata(rk808_i2c_client);
+ 
+ 	switch (rk808->variant) {
+ 	case RK805_ID:
+@@ -575,16 +573,18 @@ static void rk808_pm_power_off(void)
+ 		bit = DEV_OFF;
+ 		break;
+ 	default:
+-		return;
++		return NOTIFY_DONE;
+ 	}
+ 	ret = regmap_update_bits(rk808->regmap, reg, bit, bit);
+ 	if (ret)
+-		dev_err(&rk808_i2c_client->dev, "Failed to shutdown device!\n");
++		dev_err(&rk808->i2c->dev, "Failed to shutdown device!\n");
++
++	return NOTIFY_DONE;
+ }
+ 
+-static int rk808_restart_notify(struct notifier_block *this, unsigned long mode, void *cmd)
++static int rk808_restart(struct sys_off_data *data)
+ {
+-	struct rk808 *rk808 = i2c_get_clientdata(rk808_i2c_client);
++	struct rk808 *rk808 = data->cb_data;
+ 	unsigned int reg, bit;
+ 	int ret;
+ 
+@@ -600,16 +600,11 @@ static int rk808_restart_notify(struct n
+ 	}
+ 	ret = regmap_update_bits(rk808->regmap, reg, bit, bit);
+ 	if (ret)
+-		dev_err(&rk808_i2c_client->dev, "Failed to restart device!\n");
++		dev_err(&rk808->i2c->dev, "Failed to restart device!\n");
+ 
+ 	return NOTIFY_DONE;
+ }
+ 
+-static struct notifier_block rk808_restart_handler = {
+-	.notifier_call = rk808_restart_notify,
+-	.priority = 192,
+-};
+-
+ static void rk8xx_shutdown(struct i2c_client *client)
+ {
+ 	struct rk808 *rk808 = i2c_get_clientdata(client);
+@@ -745,9 +740,9 @@ static int rk808_probe(struct i2c_client
+ 		return -EINVAL;
+ 	}
+ 
+-	ret = regmap_add_irq_chip(rk808->regmap, client->irq,
+-				  IRQF_ONESHOT, -1,
+-				  rk808->regmap_irq_chip, &rk808->irq_data);
++	ret = devm_regmap_add_irq_chip(&client->dev, rk808->regmap, client->irq,
++				       IRQF_ONESHOT, -1,
++				       rk808->regmap_irq_chip, &rk808->irq_data);
+ 	if (ret) {
+ 		dev_err(&client->dev, "Failed to add irq_chip %d\n", ret);
+ 		return ret;
+@@ -771,17 +766,23 @@ static int rk808_probe(struct i2c_client
+ 			      regmap_irq_get_domain(rk808->irq_data));
+ 	if (ret) {
+ 		dev_err(&client->dev, "failed to add MFD devices %d\n", ret);
+-		goto err_irq;
++		return ret;
+ 	}
+ 
+ 	if (of_property_read_bool(np, "rockchip,system-power-controller")) {
+-		rk808_i2c_client = client;
+-		pm_power_off = rk808_pm_power_off;
++		ret = devm_register_sys_off_handler(&client->dev,
++				    SYS_OFF_MODE_POWER_OFF_PREPARE, SYS_OFF_PRIO_HIGH,
++				    &rk808_power_off, rk808);
++		if (ret)
++			return dev_err_probe(&client->dev, ret,
++					     "failed to register poweroff handler\n");
+ 
+ 		switch (rk808->variant) {
+ 		case RK809_ID:
+ 		case RK817_ID:
+-			ret = register_restart_handler(&rk808_restart_handler);
++			ret = devm_register_sys_off_handler(&client->dev,
++							    SYS_OFF_MODE_RESTART, SYS_OFF_PRIO_HIGH,
++							    &rk808_restart, rk808);
+ 			if (ret)
+ 				dev_warn(&client->dev, "failed to register rst handler, %d\n", ret);
+ 			break;
+@@ -792,26 +793,6 @@ static int rk808_probe(struct i2c_client
+ 	}
+ 
+ 	return 0;
+-
+-err_irq:
+-	regmap_del_irq_chip(client->irq, rk808->irq_data);
+-	return ret;
+-}
+-
+-static void rk808_remove(struct i2c_client *client)
+-{
+-	struct rk808 *rk808 = i2c_get_clientdata(client);
+-
+-	regmap_del_irq_chip(client->irq, rk808->irq_data);
+-
+-	/**
+-	 * pm_power_off may points to a function from another module.
+-	 * Check if the pointer is set by us and only then overwrite it.
+-	 */
+-	if (pm_power_off == rk808_pm_power_off)
+-		pm_power_off = NULL;
+-
+-	unregister_restart_handler(&rk808_restart_handler);
+ }
+ 
+ static int __maybe_unused rk8xx_suspend(struct device *dev)
+@@ -868,7 +849,6 @@ static struct i2c_driver rk808_i2c_drive
+ 		.pm = &rk8xx_pm_ops,
+ 	},
+ 	.probe_new = rk808_probe,
+-	.remove   = rk808_remove,
+ 	.shutdown = rk8xx_shutdown,
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/229-mfd-rk808-Use-dev_err_probe.patch b/target/linux/rockchip/patches-6.1/229-mfd-rk808-Use-dev_err_probe.patch
new file mode 100644
index 0000000000..9dcf7861c2
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/229-mfd-rk808-Use-dev_err_probe.patch
@@ -0,0 +1,104 @@
+From 3b3c8e38f04839777a073b8d049256993c91b469 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 4 May 2023 19:36:07 +0200
+Subject: [PATCH 229/383] mfd: rk808: Use dev_err_probe
+
+Use dev_err_probe instead of dev_err in probe function,
+which simplifies code a little bit and prints the error
+code.
+
+Also drop possibly incorrect printing of chip id registers
+while touching the error message.
+
+Tested-by: Diederik de Haas <didi.debian@cknow.org> # Rock64, Quartz64 Model A + B
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com> # Pine64 QuartzPro64
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230504173618.142075-4-sebastian.reichel@collabora.com
+Signed-off-by: Lee Jones <lee@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mfd/rk808.c | 48 +++++++++++++++------------------------------
+ 1 file changed, 16 insertions(+), 32 deletions(-)
+
+--- a/drivers/mfd/rk808.c
++++ b/drivers/mfd/rk808.c
+@@ -670,18 +670,12 @@ static int rk808_probe(struct i2c_client
+ 
+ 	/* Read chip variant */
+ 	msb = i2c_smbus_read_byte_data(client, pmic_id_msb);
+-	if (msb < 0) {
+-		dev_err(&client->dev, "failed to read the chip id at 0x%x\n",
+-			RK808_ID_MSB);
+-		return msb;
+-	}
++	if (msb < 0)
++		return dev_err_probe(&client->dev, msb, "failed to read the chip id MSB\n");
+ 
+ 	lsb = i2c_smbus_read_byte_data(client, pmic_id_lsb);
+-	if (lsb < 0) {
+-		dev_err(&client->dev, "failed to read the chip id at 0x%x\n",
+-			RK808_ID_LSB);
+-		return lsb;
+-	}
++	if (lsb < 0)
++		return dev_err_probe(&client->dev, lsb, "failed to read the chip id LSB\n");
+ 
+ 	rk808->variant = ((msb << 8) | lsb) & RK8XX_ID_MSK;
+ 	dev_info(&client->dev, "chip id: 0x%x\n", (unsigned int)rk808->variant);
+@@ -730,44 +724,34 @@ static int rk808_probe(struct i2c_client
+ 	i2c_set_clientdata(client, rk808);
+ 
+ 	rk808->regmap = devm_regmap_init_i2c(client, rk808->regmap_cfg);
+-	if (IS_ERR(rk808->regmap)) {
+-		dev_err(&client->dev, "regmap initialization failed\n");
+-		return PTR_ERR(rk808->regmap);
+-	}
++	if (IS_ERR(rk808->regmap))
++		return dev_err_probe(&client->dev, PTR_ERR(rk808->regmap),
++				     "regmap initialization failed\n");
+ 
+-	if (!client->irq) {
+-		dev_err(&client->dev, "No interrupt support, no core IRQ\n");
+-		return -EINVAL;
+-	}
++	if (!client->irq)
++		return dev_err_probe(&client->dev, -EINVAL, "No interrupt support, no core IRQ\n");
+ 
+ 	ret = devm_regmap_add_irq_chip(&client->dev, rk808->regmap, client->irq,
+ 				       IRQF_ONESHOT, -1,
+ 				       rk808->regmap_irq_chip, &rk808->irq_data);
+-	if (ret) {
+-		dev_err(&client->dev, "Failed to add irq_chip %d\n", ret);
+-		return ret;
+-	}
++	if (ret)
++		return dev_err_probe(&client->dev, ret, "Failed to add irq_chip\n");
+ 
+ 	for (i = 0; i < nr_pre_init_regs; i++) {
+ 		ret = regmap_update_bits(rk808->regmap,
+ 					pre_init_reg[i].addr,
+ 					pre_init_reg[i].mask,
+ 					pre_init_reg[i].value);
+-		if (ret) {
+-			dev_err(&client->dev,
+-				"0x%x write err\n",
+-				pre_init_reg[i].addr);
+-			return ret;
+-		}
++		if (ret)
++			return dev_err_probe(&client->dev, ret, "0x%x write err\n",
++					     pre_init_reg[i].addr);
+ 	}
+ 
+ 	ret = devm_mfd_add_devices(&client->dev, PLATFORM_DEVID_NONE,
+ 			      cells, nr_cells, NULL, 0,
+ 			      regmap_irq_get_domain(rk808->irq_data));
+-	if (ret) {
+-		dev_err(&client->dev, "failed to add MFD devices %d\n", ret);
+-		return ret;
+-	}
++	if (ret)
++		return dev_err_probe(&client->dev, ret, "failed to add MFD devices\n");
+ 
+ 	if (of_property_read_bool(np, "rockchip,system-power-controller")) {
+ 		ret = devm_register_sys_off_handler(&client->dev,
diff --git a/target/linux/rockchip/patches-6.1/230-mfd-rk808-Replace-struct-i2c_client-with-struct-devi.patch b/target/linux/rockchip/patches-6.1/230-mfd-rk808-Replace-struct-i2c_client-with-struct-devi.patch
new file mode 100644
index 0000000000..7ab8dfe1cf
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/230-mfd-rk808-Replace-struct-i2c_client-with-struct-devi.patch
@@ -0,0 +1,61 @@
+From 977a58c38c23b84f60eebc7141d03ab1464ad820 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 4 May 2023 19:36:08 +0200
+Subject: [PATCH 230/383] mfd: rk808: Replace 'struct i2c_client' with 'struct
+ device'
+
+Put 'struct device' pointer into the MFD platform_data instead
+of the 'struct i2c_client' pointer. This simplifies the code
+and prepares the MFD for SPI support.
+
+Tested-by: Diederik de Haas <didi.debian@cknow.org> # Rock64, Quartz64 Model A + B
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com> # Pine64 QuartzPro64
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230504173618.142075-5-sebastian.reichel@collabora.com
+Signed-off-by: Lee Jones <lee@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mfd/rk808.c       | 6 +++---
+ include/linux/mfd/rk808.h | 2 +-
+ 2 files changed, 4 insertions(+), 4 deletions(-)
+
+--- a/drivers/mfd/rk808.c
++++ b/drivers/mfd/rk808.c
+@@ -577,7 +577,7 @@ static int rk808_power_off(struct sys_of
+ 	}
+ 	ret = regmap_update_bits(rk808->regmap, reg, bit, bit);
+ 	if (ret)
+-		dev_err(&rk808->i2c->dev, "Failed to shutdown device!\n");
++		dev_err(rk808->dev, "Failed to shutdown device!\n");
+ 
+ 	return NOTIFY_DONE;
+ }
+@@ -600,7 +600,7 @@ static int rk808_restart(struct sys_off_
+ 	}
+ 	ret = regmap_update_bits(rk808->regmap, reg, bit, bit);
+ 	if (ret)
+-		dev_err(&rk808->i2c->dev, "Failed to restart device!\n");
++		dev_err(rk808->dev, "Failed to restart device!\n");
+ 
+ 	return NOTIFY_DONE;
+ }
+@@ -720,7 +720,7 @@ static int rk808_probe(struct i2c_client
+ 		return -EINVAL;
+ 	}
+ 
+-	rk808->i2c = client;
++	rk808->dev = &client->dev;
+ 	i2c_set_clientdata(client, rk808);
+ 
+ 	rk808->regmap = devm_regmap_init_i2c(client, rk808->regmap_cfg);
+--- a/include/linux/mfd/rk808.h
++++ b/include/linux/mfd/rk808.h
+@@ -787,7 +787,7 @@ enum {
+ };
+ 
+ struct rk808 {
+-	struct i2c_client		*i2c;
++	struct device			*dev;
+ 	struct regmap_irq_chip_data	*irq_data;
+ 	struct regmap			*regmap;
+ 	long				variant;
diff --git a/target/linux/rockchip/patches-6.1/231-mfd-rk808-Split-into-core-and-i2c.patch b/target/linux/rockchip/patches-6.1/231-mfd-rk808-Split-into-core-and-i2c.patch
new file mode 100644
index 0000000000..5e6e5e6543
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/231-mfd-rk808-Split-into-core-and-i2c.patch
@@ -0,0 +1,1915 @@
+From 913d4f5a3492d221c52d40d7f6d85532cff29a25 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 4 May 2023 19:36:09 +0200
+Subject: [PATCH 231/383] mfd: rk808: Split into core and i2c
+
+Split rk808 into a core and an i2c part in preparation for
+SPI support.
+
+Acked-by: Alexandre Belloni <alexandre.belloni@bootlin.com> # for RTC
+Tested-by: Diederik de Haas <didi.debian@cknow.org> # Rock64, Quartz64 Model A + B
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com> # Pine64 QuartzPro64
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230504173618.142075-6-sebastian.reichel@collabora.com
+Signed-off-by: Lee Jones <lee@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/Kconfig                   |   2 +-
+ drivers/input/misc/Kconfig            |   2 +-
+ drivers/mfd/Kconfig                   |   7 +-
+ drivers/mfd/Makefile                  |   3 +-
+ drivers/mfd/{rk808.c => rk8xx-core.c} | 209 +++++---------------------
+ drivers/mfd/rk8xx-i2c.c               | 200 ++++++++++++++++++++++++
+ drivers/pinctrl/Kconfig               |   2 +-
+ drivers/power/supply/Kconfig          |   2 +-
+ drivers/regulator/Kconfig             |   2 +-
+ drivers/rtc/Kconfig                   |   2 +-
+ include/linux/mfd/rk808.h             |   6 +
+ sound/soc/codecs/Kconfig              |   2 +-
+ 12 files changed, 256 insertions(+), 183 deletions(-)
+ rename drivers/mfd/{rk808.c => rk8xx-core.c} (76%)
+ create mode 100644 drivers/mfd/rk8xx-i2c.c
+
+--- a/drivers/clk/Kconfig
++++ b/drivers/clk/Kconfig
+@@ -83,7 +83,7 @@ config COMMON_CLK_MAX9485
+ 
+ config COMMON_CLK_RK808
+ 	tristate "Clock driver for RK805/RK808/RK809/RK817/RK818"
+-	depends on MFD_RK808
++	depends on MFD_RK8XX
+ 	help
+ 	  This driver supports RK805, RK809 and RK817, RK808 and RK818 crystal oscillator clock.
+ 	  These multi-function devices have two fixed-rate oscillators, clocked at 32KHz each.
+--- a/drivers/input/misc/Kconfig
++++ b/drivers/input/misc/Kconfig
+@@ -588,7 +588,7 @@ config INPUT_PWM_VIBRA
+ 
+ config INPUT_RK805_PWRKEY
+ 	tristate "Rockchip RK805 PMIC power key support"
+-	depends on MFD_RK808
++	depends on MFD_RK8XX
+ 	help
+ 	  Select this option to enable power key driver for RK805.
+ 
+--- a/drivers/mfd/Kconfig
++++ b/drivers/mfd/Kconfig
+@@ -1202,12 +1202,17 @@ config MFD_RC5T583
+ 	  Additional drivers must be enabled in order to use the
+ 	  different functionality of the device.
+ 
+-config MFD_RK808
++config MFD_RK8XX
++	bool
++	select MFD_CORE
++
++config MFD_RK8XX_I2C
+ 	tristate "Rockchip RK805/RK808/RK809/RK817/RK818 Power Management Chip"
+ 	depends on I2C && OF
+ 	select MFD_CORE
+ 	select REGMAP_I2C
+ 	select REGMAP_IRQ
++	select MFD_RK8XX
+ 	help
+ 	  If you say yes here you get support for the RK805, RK808, RK809,
+ 	  RK817 and RK818 Power Management chips.
+--- a/drivers/mfd/Makefile
++++ b/drivers/mfd/Makefile
+@@ -223,7 +223,8 @@ obj-$(CONFIG_MFD_PALMAS)	+= palmas.o
+ obj-$(CONFIG_MFD_VIPERBOARD)    += viperboard.o
+ obj-$(CONFIG_MFD_NTXEC)		+= ntxec.o
+ obj-$(CONFIG_MFD_RC5T583)	+= rc5t583.o rc5t583-irq.o
+-obj-$(CONFIG_MFD_RK808)		+= rk808.o
++obj-$(CONFIG_MFD_RK8XX)		+= rk8xx-core.o
++obj-$(CONFIG_MFD_RK8XX_I2C)	+= rk8xx-i2c.o
+ obj-$(CONFIG_MFD_RN5T618)	+= rn5t618.o
+ obj-$(CONFIG_MFD_SEC_CORE)	+= sec-core.o sec-irq.o
+ obj-$(CONFIG_MFD_SYSCON)	+= syscon.o
+--- a/drivers/mfd/rk808.c
++++ /dev/null
+@@ -1,845 +0,0 @@
+-// SPDX-License-Identifier: GPL-2.0-only
+-/*
+- * MFD core driver for Rockchip RK808/RK818
+- *
+- * Copyright (c) 2014, Fuzhou Rockchip Electronics Co., Ltd
+- *
+- * Author: Chris Zhong <zyw@rock-chips.com>
+- * Author: Zhang Qing <zhangqing@rock-chips.com>
+- *
+- * Copyright (C) 2016 PHYTEC Messtechnik GmbH
+- *
+- * Author: Wadim Egorov <w.egorov@phytec.de>
+- */
+-
+-#include <linux/i2c.h>
+-#include <linux/interrupt.h>
+-#include <linux/mfd/rk808.h>
+-#include <linux/mfd/core.h>
+-#include <linux/module.h>
+-#include <linux/of_device.h>
+-#include <linux/regmap.h>
+-#include <linux/reboot.h>
+-
+-struct rk808_reg_data {
+-	int addr;
+-	int mask;
+-	int value;
+-};
+-
+-static bool rk808_is_volatile_reg(struct device *dev, unsigned int reg)
+-{
+-	/*
+-	 * Notes:
+-	 * - Technically the ROUND_30s bit makes RTC_CTRL_REG volatile, but
+-	 *   we don't use that feature.  It's better to cache.
+-	 * - It's unlikely we care that RK808_DEVCTRL_REG is volatile since
+-	 *   bits are cleared in case when we shutoff anyway, but better safe.
+-	 */
+-
+-	switch (reg) {
+-	case RK808_SECONDS_REG ... RK808_WEEKS_REG:
+-	case RK808_RTC_STATUS_REG:
+-	case RK808_VB_MON_REG:
+-	case RK808_THERMAL_REG:
+-	case RK808_DCDC_UV_STS_REG:
+-	case RK808_LDO_UV_STS_REG:
+-	case RK808_DCDC_PG_REG:
+-	case RK808_LDO_PG_REG:
+-	case RK808_DEVCTRL_REG:
+-	case RK808_INT_STS_REG1:
+-	case RK808_INT_STS_REG2:
+-		return true;
+-	}
+-
+-	return false;
+-}
+-
+-static bool rk817_is_volatile_reg(struct device *dev, unsigned int reg)
+-{
+-	/*
+-	 * Notes:
+-	 * - Technically the ROUND_30s bit makes RTC_CTRL_REG volatile, but
+-	 *   we don't use that feature.  It's better to cache.
+-	 */
+-
+-	switch (reg) {
+-	case RK817_SECONDS_REG ... RK817_WEEKS_REG:
+-	case RK817_RTC_STATUS_REG:
+-	case RK817_CODEC_DTOP_LPT_SRST:
+-	case RK817_GAS_GAUGE_ADC_CONFIG0 ... RK817_GAS_GAUGE_CUR_ADC_K0:
+-	case RK817_PMIC_CHRG_STS:
+-	case RK817_PMIC_CHRG_OUT:
+-	case RK817_PMIC_CHRG_IN:
+-	case RK817_INT_STS_REG0:
+-	case RK817_INT_STS_REG1:
+-	case RK817_INT_STS_REG2:
+-	case RK817_SYS_STS:
+-		return true;
+-	}
+-
+-	return false;
+-}
+-
+-static const struct regmap_config rk818_regmap_config = {
+-	.reg_bits = 8,
+-	.val_bits = 8,
+-	.max_register = RK818_USB_CTRL_REG,
+-	.cache_type = REGCACHE_RBTREE,
+-	.volatile_reg = rk808_is_volatile_reg,
+-};
+-
+-static const struct regmap_config rk805_regmap_config = {
+-	.reg_bits = 8,
+-	.val_bits = 8,
+-	.max_register = RK805_OFF_SOURCE_REG,
+-	.cache_type = REGCACHE_RBTREE,
+-	.volatile_reg = rk808_is_volatile_reg,
+-};
+-
+-static const struct regmap_config rk808_regmap_config = {
+-	.reg_bits = 8,
+-	.val_bits = 8,
+-	.max_register = RK808_IO_POL_REG,
+-	.cache_type = REGCACHE_RBTREE,
+-	.volatile_reg = rk808_is_volatile_reg,
+-};
+-
+-static const struct regmap_config rk817_regmap_config = {
+-	.reg_bits = 8,
+-	.val_bits = 8,
+-	.max_register = RK817_GPIO_INT_CFG,
+-	.cache_type = REGCACHE_NONE,
+-	.volatile_reg = rk817_is_volatile_reg,
+-};
+-
+-static const struct resource rtc_resources[] = {
+-	DEFINE_RES_IRQ(RK808_IRQ_RTC_ALARM),
+-};
+-
+-static const struct resource rk817_rtc_resources[] = {
+-	DEFINE_RES_IRQ(RK817_IRQ_RTC_ALARM),
+-};
+-
+-static const struct resource rk805_key_resources[] = {
+-	DEFINE_RES_IRQ(RK805_IRQ_PWRON_RISE),
+-	DEFINE_RES_IRQ(RK805_IRQ_PWRON_FALL),
+-};
+-
+-static const struct resource rk817_pwrkey_resources[] = {
+-	DEFINE_RES_IRQ(RK817_IRQ_PWRON_RISE),
+-	DEFINE_RES_IRQ(RK817_IRQ_PWRON_FALL),
+-};
+-
+-static const struct resource rk817_charger_resources[] = {
+-	DEFINE_RES_IRQ(RK817_IRQ_PLUG_IN),
+-	DEFINE_RES_IRQ(RK817_IRQ_PLUG_OUT),
+-};
+-
+-static const struct mfd_cell rk805s[] = {
+-	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
+-	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
+-	{ .name = "rk805-pinctrl", .id = PLATFORM_DEVID_NONE, },
+-	{
+-		.name = "rk808-rtc",
+-		.num_resources = ARRAY_SIZE(rtc_resources),
+-		.resources = &rtc_resources[0],
+-		.id = PLATFORM_DEVID_NONE,
+-	},
+-	{	.name = "rk805-pwrkey",
+-		.num_resources = ARRAY_SIZE(rk805_key_resources),
+-		.resources = &rk805_key_resources[0],
+-		.id = PLATFORM_DEVID_NONE,
+-	},
+-};
+-
+-static const struct mfd_cell rk808s[] = {
+-	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
+-	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
+-	{
+-		.name = "rk808-rtc",
+-		.num_resources = ARRAY_SIZE(rtc_resources),
+-		.resources = rtc_resources,
+-		.id = PLATFORM_DEVID_NONE,
+-	},
+-};
+-
+-static const struct mfd_cell rk817s[] = {
+-	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
+-	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
+-	{
+-		.name = "rk805-pwrkey",
+-		.num_resources = ARRAY_SIZE(rk817_pwrkey_resources),
+-		.resources = &rk817_pwrkey_resources[0],
+-		.id = PLATFORM_DEVID_NONE,
+-	},
+-	{
+-		.name = "rk808-rtc",
+-		.num_resources = ARRAY_SIZE(rk817_rtc_resources),
+-		.resources = &rk817_rtc_resources[0],
+-		.id = PLATFORM_DEVID_NONE,
+-	},
+-	{ .name = "rk817-codec", .id = PLATFORM_DEVID_NONE, },
+-	{
+-		.name = "rk817-charger",
+-		.num_resources = ARRAY_SIZE(rk817_charger_resources),
+-		.resources = &rk817_charger_resources[0],
+-		.id = PLATFORM_DEVID_NONE,
+-	},
+-};
+-
+-static const struct mfd_cell rk818s[] = {
+-	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
+-	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
+-	{
+-		.name = "rk808-rtc",
+-		.num_resources = ARRAY_SIZE(rtc_resources),
+-		.resources = rtc_resources,
+-		.id = PLATFORM_DEVID_NONE,
+-	},
+-};
+-
+-static const struct rk808_reg_data rk805_pre_init_reg[] = {
+-	{RK805_BUCK1_CONFIG_REG, RK805_BUCK1_2_ILMAX_MASK,
+-				 RK805_BUCK1_2_ILMAX_4000MA},
+-	{RK805_BUCK2_CONFIG_REG, RK805_BUCK1_2_ILMAX_MASK,
+-				 RK805_BUCK1_2_ILMAX_4000MA},
+-	{RK805_BUCK3_CONFIG_REG, RK805_BUCK3_4_ILMAX_MASK,
+-				 RK805_BUCK3_ILMAX_3000MA},
+-	{RK805_BUCK4_CONFIG_REG, RK805_BUCK3_4_ILMAX_MASK,
+-				 RK805_BUCK4_ILMAX_3500MA},
+-	{RK805_BUCK4_CONFIG_REG, BUCK_ILMIN_MASK, BUCK_ILMIN_400MA},
+-	{RK805_THERMAL_REG, TEMP_HOTDIE_MSK, TEMP115C},
+-};
+-
+-static const struct rk808_reg_data rk808_pre_init_reg[] = {
+-	{ RK808_BUCK3_CONFIG_REG, BUCK_ILMIN_MASK,  BUCK_ILMIN_150MA },
+-	{ RK808_BUCK4_CONFIG_REG, BUCK_ILMIN_MASK,  BUCK_ILMIN_200MA },
+-	{ RK808_BOOST_CONFIG_REG, BOOST_ILMIN_MASK, BOOST_ILMIN_100MA },
+-	{ RK808_BUCK1_CONFIG_REG, BUCK1_RATE_MASK,  BUCK_ILMIN_200MA },
+-	{ RK808_BUCK2_CONFIG_REG, BUCK2_RATE_MASK,  BUCK_ILMIN_200MA },
+-	{ RK808_DCDC_UV_ACT_REG,  BUCK_UV_ACT_MASK, BUCK_UV_ACT_DISABLE},
+-	{ RK808_VB_MON_REG,       MASK_ALL,         VB_LO_ACT |
+-						    VB_LO_SEL_3500MV },
+-};
+-
+-static const struct rk808_reg_data rk817_pre_init_reg[] = {
+-	{RK817_RTC_CTRL_REG, RTC_STOP, RTC_STOP},
+-	/* Codec specific registers */
+-	{ RK817_CODEC_DTOP_VUCTL, MASK_ALL, 0x03 },
+-	{ RK817_CODEC_DTOP_VUCTIME, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DTOP_LPT_SRST, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DTOP_DIGEN_CLKE, MASK_ALL, 0x00 },
+-	/* from vendor driver, CODEC_AREF_RTCFG0 not defined in data sheet */
+-	{ RK817_CODEC_AREF_RTCFG0, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_AREF_RTCFG1, MASK_ALL, 0x06 },
+-	{ RK817_CODEC_AADC_CFG0, MASK_ALL, 0xc8 },
+-	/* from vendor driver, CODEC_AADC_CFG1 not defined in data sheet */
+-	{ RK817_CODEC_AADC_CFG1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DADC_VOLL, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DADC_VOLR, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DADC_SR_ACL0, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DADC_ALC1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DADC_ALC2, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DADC_NG, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DADC_HPF, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DADC_RVOLL, MASK_ALL, 0xff },
+-	{ RK817_CODEC_DADC_RVOLR, MASK_ALL, 0xff },
+-	{ RK817_CODEC_AMIC_CFG0, MASK_ALL, 0x70 },
+-	{ RK817_CODEC_AMIC_CFG1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DMIC_PGA_GAIN, MASK_ALL, 0x66 },
+-	{ RK817_CODEC_DMIC_LMT1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DMIC_LMT2, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DMIC_NG1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DMIC_NG2, MASK_ALL, 0x00 },
+-	/* from vendor driver, CODEC_ADAC_CFG0 not defined in data sheet */
+-	{ RK817_CODEC_ADAC_CFG0, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_ADAC_CFG1, MASK_ALL, 0x07 },
+-	{ RK817_CODEC_DDAC_POPD_DACST, MASK_ALL, 0x82 },
+-	{ RK817_CODEC_DDAC_VOLL, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DDAC_VOLR, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DDAC_SR_LMT0, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DDAC_LMT1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DDAC_LMT2, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DDAC_MUTE_MIXCTL, MASK_ALL, 0xa0 },
+-	{ RK817_CODEC_DDAC_RVOLL, MASK_ALL, 0xff },
+-	{ RK817_CODEC_DADC_RVOLR, MASK_ALL, 0xff },
+-	{ RK817_CODEC_AMIC_CFG0, MASK_ALL, 0x70 },
+-	{ RK817_CODEC_AMIC_CFG1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DMIC_PGA_GAIN, MASK_ALL, 0x66 },
+-	{ RK817_CODEC_DMIC_LMT1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DMIC_LMT2, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DMIC_NG1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DMIC_NG2, MASK_ALL, 0x00 },
+-	/* from vendor driver, CODEC_ADAC_CFG0 not defined in data sheet */
+-	{ RK817_CODEC_ADAC_CFG0, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_ADAC_CFG1, MASK_ALL, 0x07 },
+-	{ RK817_CODEC_DDAC_POPD_DACST, MASK_ALL, 0x82 },
+-	{ RK817_CODEC_DDAC_VOLL, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DDAC_VOLR, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DDAC_SR_LMT0, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DDAC_LMT1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DDAC_LMT2, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DDAC_MUTE_MIXCTL, MASK_ALL, 0xa0 },
+-	{ RK817_CODEC_DDAC_RVOLL, MASK_ALL, 0xff },
+-	{ RK817_CODEC_DDAC_RVOLR, MASK_ALL, 0xff },
+-	{ RK817_CODEC_AHP_ANTI0, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_AHP_ANTI1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_AHP_CFG0, MASK_ALL, 0xe0 },
+-	{ RK817_CODEC_AHP_CFG1, MASK_ALL, 0x1f },
+-	{ RK817_CODEC_AHP_CP, MASK_ALL, 0x09 },
+-	{ RK817_CODEC_ACLASSD_CFG1, MASK_ALL, 0x69 },
+-	{ RK817_CODEC_ACLASSD_CFG2, MASK_ALL, 0x44 },
+-	{ RK817_CODEC_APLL_CFG0, MASK_ALL, 0x04 },
+-	{ RK817_CODEC_APLL_CFG1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_APLL_CFG2, MASK_ALL, 0x30 },
+-	{ RK817_CODEC_APLL_CFG3, MASK_ALL, 0x19 },
+-	{ RK817_CODEC_APLL_CFG4, MASK_ALL, 0x65 },
+-	{ RK817_CODEC_APLL_CFG5, MASK_ALL, 0x01 },
+-	{ RK817_CODEC_DI2S_CKM, MASK_ALL, 0x01 },
+-	{ RK817_CODEC_DI2S_RSD, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DI2S_RXCR1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DI2S_RXCR2, MASK_ALL, 0x17 },
+-	{ RK817_CODEC_DI2S_RXCMD_TSD, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DI2S_TXCR1, MASK_ALL, 0x00 },
+-	{ RK817_CODEC_DI2S_TXCR2, MASK_ALL, 0x17 },
+-	{ RK817_CODEC_DI2S_TXCR3_TXCMD, MASK_ALL, 0x00 },
+-	{RK817_GPIO_INT_CFG, RK817_INT_POL_MSK, RK817_INT_POL_L},
+-	{RK817_SYS_CFG(1), RK817_HOTDIE_TEMP_MSK | RK817_TSD_TEMP_MSK,
+-					   RK817_HOTDIE_105 | RK817_TSD_140},
+-};
+-
+-static const struct rk808_reg_data rk818_pre_init_reg[] = {
+-	/* improve efficiency */
+-	{ RK818_BUCK2_CONFIG_REG, BUCK2_RATE_MASK,  BUCK_ILMIN_250MA },
+-	{ RK818_BUCK4_CONFIG_REG, BUCK_ILMIN_MASK,  BUCK_ILMIN_250MA },
+-	{ RK818_BOOST_CONFIG_REG, BOOST_ILMIN_MASK, BOOST_ILMIN_100MA },
+-	{ RK818_USB_CTRL_REG,	  RK818_USB_ILIM_SEL_MASK,
+-						    RK818_USB_ILMIN_2000MA },
+-	/* close charger when usb lower then 3.4V */
+-	{ RK818_USB_CTRL_REG,	  RK818_USB_CHG_SD_VSEL_MASK,
+-						    (0x7 << 4) },
+-	/* no action when vref */
+-	{ RK818_H5V_EN_REG,	  BIT(1),	    RK818_REF_RDY_CTRL },
+-	/* enable HDMI 5V */
+-	{ RK818_H5V_EN_REG,	  BIT(0),	    RK818_H5V_EN },
+-	{ RK808_VB_MON_REG,	  MASK_ALL,	    VB_LO_ACT |
+-						    VB_LO_SEL_3500MV },
+-};
+-
+-static const struct regmap_irq rk805_irqs[] = {
+-	[RK805_IRQ_PWRON_RISE] = {
+-		.mask = RK805_IRQ_PWRON_RISE_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK805_IRQ_VB_LOW] = {
+-		.mask = RK805_IRQ_VB_LOW_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK805_IRQ_PWRON] = {
+-		.mask = RK805_IRQ_PWRON_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK805_IRQ_PWRON_LP] = {
+-		.mask = RK805_IRQ_PWRON_LP_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK805_IRQ_HOTDIE] = {
+-		.mask = RK805_IRQ_HOTDIE_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK805_IRQ_RTC_ALARM] = {
+-		.mask = RK805_IRQ_RTC_ALARM_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK805_IRQ_RTC_PERIOD] = {
+-		.mask = RK805_IRQ_RTC_PERIOD_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK805_IRQ_PWRON_FALL] = {
+-		.mask = RK805_IRQ_PWRON_FALL_MSK,
+-		.reg_offset = 0,
+-	},
+-};
+-
+-static const struct regmap_irq rk808_irqs[] = {
+-	/* INT_STS */
+-	[RK808_IRQ_VOUT_LO] = {
+-		.mask = RK808_IRQ_VOUT_LO_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK808_IRQ_VB_LO] = {
+-		.mask = RK808_IRQ_VB_LO_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK808_IRQ_PWRON] = {
+-		.mask = RK808_IRQ_PWRON_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK808_IRQ_PWRON_LP] = {
+-		.mask = RK808_IRQ_PWRON_LP_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK808_IRQ_HOTDIE] = {
+-		.mask = RK808_IRQ_HOTDIE_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK808_IRQ_RTC_ALARM] = {
+-		.mask = RK808_IRQ_RTC_ALARM_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK808_IRQ_RTC_PERIOD] = {
+-		.mask = RK808_IRQ_RTC_PERIOD_MSK,
+-		.reg_offset = 0,
+-	},
+-
+-	/* INT_STS2 */
+-	[RK808_IRQ_PLUG_IN_INT] = {
+-		.mask = RK808_IRQ_PLUG_IN_INT_MSK,
+-		.reg_offset = 1,
+-	},
+-	[RK808_IRQ_PLUG_OUT_INT] = {
+-		.mask = RK808_IRQ_PLUG_OUT_INT_MSK,
+-		.reg_offset = 1,
+-	},
+-};
+-
+-static const struct regmap_irq rk818_irqs[] = {
+-	/* INT_STS */
+-	[RK818_IRQ_VOUT_LO] = {
+-		.mask = RK818_IRQ_VOUT_LO_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK818_IRQ_VB_LO] = {
+-		.mask = RK818_IRQ_VB_LO_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK818_IRQ_PWRON] = {
+-		.mask = RK818_IRQ_PWRON_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK818_IRQ_PWRON_LP] = {
+-		.mask = RK818_IRQ_PWRON_LP_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK818_IRQ_HOTDIE] = {
+-		.mask = RK818_IRQ_HOTDIE_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK818_IRQ_RTC_ALARM] = {
+-		.mask = RK818_IRQ_RTC_ALARM_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK818_IRQ_RTC_PERIOD] = {
+-		.mask = RK818_IRQ_RTC_PERIOD_MSK,
+-		.reg_offset = 0,
+-	},
+-	[RK818_IRQ_USB_OV] = {
+-		.mask = RK818_IRQ_USB_OV_MSK,
+-		.reg_offset = 0,
+-	},
+-
+-	/* INT_STS2 */
+-	[RK818_IRQ_PLUG_IN] = {
+-		.mask = RK818_IRQ_PLUG_IN_MSK,
+-		.reg_offset = 1,
+-	},
+-	[RK818_IRQ_PLUG_OUT] = {
+-		.mask = RK818_IRQ_PLUG_OUT_MSK,
+-		.reg_offset = 1,
+-	},
+-	[RK818_IRQ_CHG_OK] = {
+-		.mask = RK818_IRQ_CHG_OK_MSK,
+-		.reg_offset = 1,
+-	},
+-	[RK818_IRQ_CHG_TE] = {
+-		.mask = RK818_IRQ_CHG_TE_MSK,
+-		.reg_offset = 1,
+-	},
+-	[RK818_IRQ_CHG_TS1] = {
+-		.mask = RK818_IRQ_CHG_TS1_MSK,
+-		.reg_offset = 1,
+-	},
+-	[RK818_IRQ_TS2] = {
+-		.mask = RK818_IRQ_TS2_MSK,
+-		.reg_offset = 1,
+-	},
+-	[RK818_IRQ_CHG_CVTLIM] = {
+-		.mask = RK818_IRQ_CHG_CVTLIM_MSK,
+-		.reg_offset = 1,
+-	},
+-	[RK818_IRQ_DISCHG_ILIM] = {
+-		.mask = RK818_IRQ_DISCHG_ILIM_MSK,
+-		.reg_offset = 1,
+-	},
+-};
+-
+-static const struct regmap_irq rk817_irqs[RK817_IRQ_END] = {
+-	REGMAP_IRQ_REG_LINE(0, 8),
+-	REGMAP_IRQ_REG_LINE(1, 8),
+-	REGMAP_IRQ_REG_LINE(2, 8),
+-	REGMAP_IRQ_REG_LINE(3, 8),
+-	REGMAP_IRQ_REG_LINE(4, 8),
+-	REGMAP_IRQ_REG_LINE(5, 8),
+-	REGMAP_IRQ_REG_LINE(6, 8),
+-	REGMAP_IRQ_REG_LINE(7, 8),
+-	REGMAP_IRQ_REG_LINE(8, 8),
+-	REGMAP_IRQ_REG_LINE(9, 8),
+-	REGMAP_IRQ_REG_LINE(10, 8),
+-	REGMAP_IRQ_REG_LINE(11, 8),
+-	REGMAP_IRQ_REG_LINE(12, 8),
+-	REGMAP_IRQ_REG_LINE(13, 8),
+-	REGMAP_IRQ_REG_LINE(14, 8),
+-	REGMAP_IRQ_REG_LINE(15, 8),
+-	REGMAP_IRQ_REG_LINE(16, 8),
+-	REGMAP_IRQ_REG_LINE(17, 8),
+-	REGMAP_IRQ_REG_LINE(18, 8),
+-	REGMAP_IRQ_REG_LINE(19, 8),
+-	REGMAP_IRQ_REG_LINE(20, 8),
+-	REGMAP_IRQ_REG_LINE(21, 8),
+-	REGMAP_IRQ_REG_LINE(22, 8),
+-	REGMAP_IRQ_REG_LINE(23, 8)
+-};
+-
+-static struct regmap_irq_chip rk805_irq_chip = {
+-	.name = "rk805",
+-	.irqs = rk805_irqs,
+-	.num_irqs = ARRAY_SIZE(rk805_irqs),
+-	.num_regs = 1,
+-	.status_base = RK805_INT_STS_REG,
+-	.mask_base = RK805_INT_STS_MSK_REG,
+-	.ack_base = RK805_INT_STS_REG,
+-	.init_ack_masked = true,
+-};
+-
+-static const struct regmap_irq_chip rk808_irq_chip = {
+-	.name = "rk808",
+-	.irqs = rk808_irqs,
+-	.num_irqs = ARRAY_SIZE(rk808_irqs),
+-	.num_regs = 2,
+-	.irq_reg_stride = 2,
+-	.status_base = RK808_INT_STS_REG1,
+-	.mask_base = RK808_INT_STS_MSK_REG1,
+-	.ack_base = RK808_INT_STS_REG1,
+-	.init_ack_masked = true,
+-};
+-
+-static struct regmap_irq_chip rk817_irq_chip = {
+-	.name = "rk817",
+-	.irqs = rk817_irqs,
+-	.num_irqs = ARRAY_SIZE(rk817_irqs),
+-	.num_regs = 3,
+-	.irq_reg_stride = 2,
+-	.status_base = RK817_INT_STS_REG0,
+-	.mask_base = RK817_INT_STS_MSK_REG0,
+-	.ack_base = RK817_INT_STS_REG0,
+-	.init_ack_masked = true,
+-};
+-
+-static const struct regmap_irq_chip rk818_irq_chip = {
+-	.name = "rk818",
+-	.irqs = rk818_irqs,
+-	.num_irqs = ARRAY_SIZE(rk818_irqs),
+-	.num_regs = 2,
+-	.irq_reg_stride = 2,
+-	.status_base = RK818_INT_STS_REG1,
+-	.mask_base = RK818_INT_STS_MSK_REG1,
+-	.ack_base = RK818_INT_STS_REG1,
+-	.init_ack_masked = true,
+-};
+-
+-static int rk808_power_off(struct sys_off_data *data)
+-{
+-	struct rk808 *rk808 = data->cb_data;
+-	int ret;
+-	unsigned int reg, bit;
+-
+-	switch (rk808->variant) {
+-	case RK805_ID:
+-		reg = RK805_DEV_CTRL_REG;
+-		bit = DEV_OFF;
+-		break;
+-	case RK808_ID:
+-		reg = RK808_DEVCTRL_REG,
+-		bit = DEV_OFF_RST;
+-		break;
+-	case RK809_ID:
+-	case RK817_ID:
+-		reg = RK817_SYS_CFG(3);
+-		bit = DEV_OFF;
+-		break;
+-	case RK818_ID:
+-		reg = RK818_DEVCTRL_REG;
+-		bit = DEV_OFF;
+-		break;
+-	default:
+-		return NOTIFY_DONE;
+-	}
+-	ret = regmap_update_bits(rk808->regmap, reg, bit, bit);
+-	if (ret)
+-		dev_err(rk808->dev, "Failed to shutdown device!\n");
+-
+-	return NOTIFY_DONE;
+-}
+-
+-static int rk808_restart(struct sys_off_data *data)
+-{
+-	struct rk808 *rk808 = data->cb_data;
+-	unsigned int reg, bit;
+-	int ret;
+-
+-	switch (rk808->variant) {
+-	case RK809_ID:
+-	case RK817_ID:
+-		reg = RK817_SYS_CFG(3);
+-		bit = DEV_RST;
+-		break;
+-
+-	default:
+-		return NOTIFY_DONE;
+-	}
+-	ret = regmap_update_bits(rk808->regmap, reg, bit, bit);
+-	if (ret)
+-		dev_err(rk808->dev, "Failed to restart device!\n");
+-
+-	return NOTIFY_DONE;
+-}
+-
+-static void rk8xx_shutdown(struct i2c_client *client)
+-{
+-	struct rk808 *rk808 = i2c_get_clientdata(client);
+-	int ret;
+-
+-	switch (rk808->variant) {
+-	case RK805_ID:
+-		ret = regmap_update_bits(rk808->regmap,
+-					 RK805_GPIO_IO_POL_REG,
+-					 SLP_SD_MSK,
+-					 SHUTDOWN_FUN);
+-		break;
+-	case RK809_ID:
+-	case RK817_ID:
+-		ret = regmap_update_bits(rk808->regmap,
+-					 RK817_SYS_CFG(3),
+-					 RK817_SLPPIN_FUNC_MSK,
+-					 SLPPIN_DN_FUN);
+-		break;
+-	default:
+-		return;
+-	}
+-	if (ret)
+-		dev_warn(&client->dev,
+-			 "Cannot switch to power down function\n");
+-}
+-
+-static const struct of_device_id rk808_of_match[] = {
+-	{ .compatible = "rockchip,rk805" },
+-	{ .compatible = "rockchip,rk808" },
+-	{ .compatible = "rockchip,rk809" },
+-	{ .compatible = "rockchip,rk817" },
+-	{ .compatible = "rockchip,rk818" },
+-	{ },
+-};
+-MODULE_DEVICE_TABLE(of, rk808_of_match);
+-
+-static int rk808_probe(struct i2c_client *client)
+-{
+-	struct device_node *np = client->dev.of_node;
+-	struct rk808 *rk808;
+-	const struct rk808_reg_data *pre_init_reg;
+-	const struct mfd_cell *cells;
+-	int nr_pre_init_regs;
+-	int nr_cells;
+-	int msb, lsb;
+-	unsigned char pmic_id_msb, pmic_id_lsb;
+-	int ret;
+-	int i;
+-
+-	rk808 = devm_kzalloc(&client->dev, sizeof(*rk808), GFP_KERNEL);
+-	if (!rk808)
+-		return -ENOMEM;
+-
+-	if (of_device_is_compatible(np, "rockchip,rk817") ||
+-	    of_device_is_compatible(np, "rockchip,rk809")) {
+-		pmic_id_msb = RK817_ID_MSB;
+-		pmic_id_lsb = RK817_ID_LSB;
+-	} else {
+-		pmic_id_msb = RK808_ID_MSB;
+-		pmic_id_lsb = RK808_ID_LSB;
+-	}
+-
+-	/* Read chip variant */
+-	msb = i2c_smbus_read_byte_data(client, pmic_id_msb);
+-	if (msb < 0)
+-		return dev_err_probe(&client->dev, msb, "failed to read the chip id MSB\n");
+-
+-	lsb = i2c_smbus_read_byte_data(client, pmic_id_lsb);
+-	if (lsb < 0)
+-		return dev_err_probe(&client->dev, lsb, "failed to read the chip id LSB\n");
+-
+-	rk808->variant = ((msb << 8) | lsb) & RK8XX_ID_MSK;
+-	dev_info(&client->dev, "chip id: 0x%x\n", (unsigned int)rk808->variant);
+-
+-	switch (rk808->variant) {
+-	case RK805_ID:
+-		rk808->regmap_cfg = &rk805_regmap_config;
+-		rk808->regmap_irq_chip = &rk805_irq_chip;
+-		pre_init_reg = rk805_pre_init_reg;
+-		nr_pre_init_regs = ARRAY_SIZE(rk805_pre_init_reg);
+-		cells = rk805s;
+-		nr_cells = ARRAY_SIZE(rk805s);
+-		break;
+-	case RK808_ID:
+-		rk808->regmap_cfg = &rk808_regmap_config;
+-		rk808->regmap_irq_chip = &rk808_irq_chip;
+-		pre_init_reg = rk808_pre_init_reg;
+-		nr_pre_init_regs = ARRAY_SIZE(rk808_pre_init_reg);
+-		cells = rk808s;
+-		nr_cells = ARRAY_SIZE(rk808s);
+-		break;
+-	case RK818_ID:
+-		rk808->regmap_cfg = &rk818_regmap_config;
+-		rk808->regmap_irq_chip = &rk818_irq_chip;
+-		pre_init_reg = rk818_pre_init_reg;
+-		nr_pre_init_regs = ARRAY_SIZE(rk818_pre_init_reg);
+-		cells = rk818s;
+-		nr_cells = ARRAY_SIZE(rk818s);
+-		break;
+-	case RK809_ID:
+-	case RK817_ID:
+-		rk808->regmap_cfg = &rk817_regmap_config;
+-		rk808->regmap_irq_chip = &rk817_irq_chip;
+-		pre_init_reg = rk817_pre_init_reg;
+-		nr_pre_init_regs = ARRAY_SIZE(rk817_pre_init_reg);
+-		cells = rk817s;
+-		nr_cells = ARRAY_SIZE(rk817s);
+-		break;
+-	default:
+-		dev_err(&client->dev, "Unsupported RK8XX ID %lu\n",
+-			rk808->variant);
+-		return -EINVAL;
+-	}
+-
+-	rk808->dev = &client->dev;
+-	i2c_set_clientdata(client, rk808);
+-
+-	rk808->regmap = devm_regmap_init_i2c(client, rk808->regmap_cfg);
+-	if (IS_ERR(rk808->regmap))
+-		return dev_err_probe(&client->dev, PTR_ERR(rk808->regmap),
+-				     "regmap initialization failed\n");
+-
+-	if (!client->irq)
+-		return dev_err_probe(&client->dev, -EINVAL, "No interrupt support, no core IRQ\n");
+-
+-	ret = devm_regmap_add_irq_chip(&client->dev, rk808->regmap, client->irq,
+-				       IRQF_ONESHOT, -1,
+-				       rk808->regmap_irq_chip, &rk808->irq_data);
+-	if (ret)
+-		return dev_err_probe(&client->dev, ret, "Failed to add irq_chip\n");
+-
+-	for (i = 0; i < nr_pre_init_regs; i++) {
+-		ret = regmap_update_bits(rk808->regmap,
+-					pre_init_reg[i].addr,
+-					pre_init_reg[i].mask,
+-					pre_init_reg[i].value);
+-		if (ret)
+-			return dev_err_probe(&client->dev, ret, "0x%x write err\n",
+-					     pre_init_reg[i].addr);
+-	}
+-
+-	ret = devm_mfd_add_devices(&client->dev, PLATFORM_DEVID_NONE,
+-			      cells, nr_cells, NULL, 0,
+-			      regmap_irq_get_domain(rk808->irq_data));
+-	if (ret)
+-		return dev_err_probe(&client->dev, ret, "failed to add MFD devices\n");
+-
+-	if (of_property_read_bool(np, "rockchip,system-power-controller")) {
+-		ret = devm_register_sys_off_handler(&client->dev,
+-				    SYS_OFF_MODE_POWER_OFF_PREPARE, SYS_OFF_PRIO_HIGH,
+-				    &rk808_power_off, rk808);
+-		if (ret)
+-			return dev_err_probe(&client->dev, ret,
+-					     "failed to register poweroff handler\n");
+-
+-		switch (rk808->variant) {
+-		case RK809_ID:
+-		case RK817_ID:
+-			ret = devm_register_sys_off_handler(&client->dev,
+-							    SYS_OFF_MODE_RESTART, SYS_OFF_PRIO_HIGH,
+-							    &rk808_restart, rk808);
+-			if (ret)
+-				dev_warn(&client->dev, "failed to register rst handler, %d\n", ret);
+-			break;
+-		default:
+-			dev_dbg(&client->dev, "pmic controlled board reset not supported\n");
+-			break;
+-		}
+-	}
+-
+-	return 0;
+-}
+-
+-static int __maybe_unused rk8xx_suspend(struct device *dev)
+-{
+-	struct rk808 *rk808 = i2c_get_clientdata(to_i2c_client(dev));
+-	int ret = 0;
+-
+-	switch (rk808->variant) {
+-	case RK805_ID:
+-		ret = regmap_update_bits(rk808->regmap,
+-					 RK805_GPIO_IO_POL_REG,
+-					 SLP_SD_MSK,
+-					 SLEEP_FUN);
+-		break;
+-	case RK809_ID:
+-	case RK817_ID:
+-		ret = regmap_update_bits(rk808->regmap,
+-					 RK817_SYS_CFG(3),
+-					 RK817_SLPPIN_FUNC_MSK,
+-					 SLPPIN_SLP_FUN);
+-		break;
+-	default:
+-		break;
+-	}
+-
+-	return ret;
+-}
+-
+-static int __maybe_unused rk8xx_resume(struct device *dev)
+-{
+-	struct rk808 *rk808 = i2c_get_clientdata(to_i2c_client(dev));
+-	int ret = 0;
+-
+-	switch (rk808->variant) {
+-	case RK809_ID:
+-	case RK817_ID:
+-		ret = regmap_update_bits(rk808->regmap,
+-					 RK817_SYS_CFG(3),
+-					 RK817_SLPPIN_FUNC_MSK,
+-					 SLPPIN_NULL_FUN);
+-		break;
+-	default:
+-		break;
+-	}
+-
+-	return ret;
+-}
+-static SIMPLE_DEV_PM_OPS(rk8xx_pm_ops, rk8xx_suspend, rk8xx_resume);
+-
+-static struct i2c_driver rk808_i2c_driver = {
+-	.driver = {
+-		.name = "rk808",
+-		.of_match_table = rk808_of_match,
+-		.pm = &rk8xx_pm_ops,
+-	},
+-	.probe_new = rk808_probe,
+-	.shutdown = rk8xx_shutdown,
+-};
+-
+-module_i2c_driver(rk808_i2c_driver);
+-
+-MODULE_LICENSE("GPL");
+-MODULE_AUTHOR("Chris Zhong <zyw@rock-chips.com>");
+-MODULE_AUTHOR("Zhang Qing <zhangqing@rock-chips.com>");
+-MODULE_AUTHOR("Wadim Egorov <w.egorov@phytec.de>");
+-MODULE_DESCRIPTION("RK808/RK818 PMIC driver");
+--- /dev/null
++++ b/drivers/mfd/rk8xx-core.c
+@@ -0,0 +1,706 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * MFD core driver for Rockchip RK8XX
++ *
++ * Copyright (c) 2014, Fuzhou Rockchip Electronics Co., Ltd
++ * Copyright (C) 2016 PHYTEC Messtechnik GmbH
++ *
++ * Author: Chris Zhong <zyw@rock-chips.com>
++ * Author: Zhang Qing <zhangqing@rock-chips.com>
++ * Author: Wadim Egorov <w.egorov@phytec.de>
++ */
++
++#include <linux/interrupt.h>
++#include <linux/mfd/rk808.h>
++#include <linux/mfd/core.h>
++#include <linux/module.h>
++#include <linux/of_device.h>
++#include <linux/regmap.h>
++#include <linux/reboot.h>
++
++struct rk808_reg_data {
++	int addr;
++	int mask;
++	int value;
++};
++
++static const struct resource rtc_resources[] = {
++	DEFINE_RES_IRQ(RK808_IRQ_RTC_ALARM),
++};
++
++static const struct resource rk817_rtc_resources[] = {
++	DEFINE_RES_IRQ(RK817_IRQ_RTC_ALARM),
++};
++
++static const struct resource rk805_key_resources[] = {
++	DEFINE_RES_IRQ(RK805_IRQ_PWRON_RISE),
++	DEFINE_RES_IRQ(RK805_IRQ_PWRON_FALL),
++};
++
++static const struct resource rk817_pwrkey_resources[] = {
++	DEFINE_RES_IRQ(RK817_IRQ_PWRON_RISE),
++	DEFINE_RES_IRQ(RK817_IRQ_PWRON_FALL),
++};
++
++static const struct resource rk817_charger_resources[] = {
++	DEFINE_RES_IRQ(RK817_IRQ_PLUG_IN),
++	DEFINE_RES_IRQ(RK817_IRQ_PLUG_OUT),
++};
++
++static const struct mfd_cell rk805s[] = {
++	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
++	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
++	{ .name = "rk805-pinctrl", .id = PLATFORM_DEVID_NONE, },
++	{
++		.name = "rk808-rtc",
++		.num_resources = ARRAY_SIZE(rtc_resources),
++		.resources = &rtc_resources[0],
++		.id = PLATFORM_DEVID_NONE,
++	},
++	{	.name = "rk805-pwrkey",
++		.num_resources = ARRAY_SIZE(rk805_key_resources),
++		.resources = &rk805_key_resources[0],
++		.id = PLATFORM_DEVID_NONE,
++	},
++};
++
++static const struct mfd_cell rk808s[] = {
++	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
++	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
++	{
++		.name = "rk808-rtc",
++		.num_resources = ARRAY_SIZE(rtc_resources),
++		.resources = rtc_resources,
++		.id = PLATFORM_DEVID_NONE,
++	},
++};
++
++static const struct mfd_cell rk817s[] = {
++	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
++	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
++	{
++		.name = "rk805-pwrkey",
++		.num_resources = ARRAY_SIZE(rk817_pwrkey_resources),
++		.resources = &rk817_pwrkey_resources[0],
++		.id = PLATFORM_DEVID_NONE,
++	},
++	{
++		.name = "rk808-rtc",
++		.num_resources = ARRAY_SIZE(rk817_rtc_resources),
++		.resources = &rk817_rtc_resources[0],
++		.id = PLATFORM_DEVID_NONE,
++	},
++	{ .name = "rk817-codec", .id = PLATFORM_DEVID_NONE, },
++	{
++		.name = "rk817-charger",
++		.num_resources = ARRAY_SIZE(rk817_charger_resources),
++		.resources = &rk817_charger_resources[0],
++		.id = PLATFORM_DEVID_NONE,
++	},
++};
++
++static const struct mfd_cell rk818s[] = {
++	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
++	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
++	{
++		.name = "rk808-rtc",
++		.num_resources = ARRAY_SIZE(rtc_resources),
++		.resources = rtc_resources,
++		.id = PLATFORM_DEVID_NONE,
++	},
++};
++
++static const struct rk808_reg_data rk805_pre_init_reg[] = {
++	{RK805_BUCK1_CONFIG_REG, RK805_BUCK1_2_ILMAX_MASK,
++				 RK805_BUCK1_2_ILMAX_4000MA},
++	{RK805_BUCK2_CONFIG_REG, RK805_BUCK1_2_ILMAX_MASK,
++				 RK805_BUCK1_2_ILMAX_4000MA},
++	{RK805_BUCK3_CONFIG_REG, RK805_BUCK3_4_ILMAX_MASK,
++				 RK805_BUCK3_ILMAX_3000MA},
++	{RK805_BUCK4_CONFIG_REG, RK805_BUCK3_4_ILMAX_MASK,
++				 RK805_BUCK4_ILMAX_3500MA},
++	{RK805_BUCK4_CONFIG_REG, BUCK_ILMIN_MASK, BUCK_ILMIN_400MA},
++	{RK805_THERMAL_REG, TEMP_HOTDIE_MSK, TEMP115C},
++};
++
++static const struct rk808_reg_data rk808_pre_init_reg[] = {
++	{ RK808_BUCK3_CONFIG_REG, BUCK_ILMIN_MASK,  BUCK_ILMIN_150MA },
++	{ RK808_BUCK4_CONFIG_REG, BUCK_ILMIN_MASK,  BUCK_ILMIN_200MA },
++	{ RK808_BOOST_CONFIG_REG, BOOST_ILMIN_MASK, BOOST_ILMIN_100MA },
++	{ RK808_BUCK1_CONFIG_REG, BUCK1_RATE_MASK,  BUCK_ILMIN_200MA },
++	{ RK808_BUCK2_CONFIG_REG, BUCK2_RATE_MASK,  BUCK_ILMIN_200MA },
++	{ RK808_DCDC_UV_ACT_REG,  BUCK_UV_ACT_MASK, BUCK_UV_ACT_DISABLE},
++	{ RK808_VB_MON_REG,       MASK_ALL,         VB_LO_ACT |
++						    VB_LO_SEL_3500MV },
++};
++
++static const struct rk808_reg_data rk817_pre_init_reg[] = {
++	{RK817_RTC_CTRL_REG, RTC_STOP, RTC_STOP},
++	/* Codec specific registers */
++	{ RK817_CODEC_DTOP_VUCTL, MASK_ALL, 0x03 },
++	{ RK817_CODEC_DTOP_VUCTIME, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DTOP_LPT_SRST, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DTOP_DIGEN_CLKE, MASK_ALL, 0x00 },
++	/* from vendor driver, CODEC_AREF_RTCFG0 not defined in data sheet */
++	{ RK817_CODEC_AREF_RTCFG0, MASK_ALL, 0x00 },
++	{ RK817_CODEC_AREF_RTCFG1, MASK_ALL, 0x06 },
++	{ RK817_CODEC_AADC_CFG0, MASK_ALL, 0xc8 },
++	/* from vendor driver, CODEC_AADC_CFG1 not defined in data sheet */
++	{ RK817_CODEC_AADC_CFG1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DADC_VOLL, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DADC_VOLR, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DADC_SR_ACL0, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DADC_ALC1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DADC_ALC2, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DADC_NG, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DADC_HPF, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DADC_RVOLL, MASK_ALL, 0xff },
++	{ RK817_CODEC_DADC_RVOLR, MASK_ALL, 0xff },
++	{ RK817_CODEC_AMIC_CFG0, MASK_ALL, 0x70 },
++	{ RK817_CODEC_AMIC_CFG1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DMIC_PGA_GAIN, MASK_ALL, 0x66 },
++	{ RK817_CODEC_DMIC_LMT1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DMIC_LMT2, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DMIC_NG1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DMIC_NG2, MASK_ALL, 0x00 },
++	/* from vendor driver, CODEC_ADAC_CFG0 not defined in data sheet */
++	{ RK817_CODEC_ADAC_CFG0, MASK_ALL, 0x00 },
++	{ RK817_CODEC_ADAC_CFG1, MASK_ALL, 0x07 },
++	{ RK817_CODEC_DDAC_POPD_DACST, MASK_ALL, 0x82 },
++	{ RK817_CODEC_DDAC_VOLL, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DDAC_VOLR, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DDAC_SR_LMT0, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DDAC_LMT1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DDAC_LMT2, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DDAC_MUTE_MIXCTL, MASK_ALL, 0xa0 },
++	{ RK817_CODEC_DDAC_RVOLL, MASK_ALL, 0xff },
++	{ RK817_CODEC_DADC_RVOLR, MASK_ALL, 0xff },
++	{ RK817_CODEC_AMIC_CFG0, MASK_ALL, 0x70 },
++	{ RK817_CODEC_AMIC_CFG1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DMIC_PGA_GAIN, MASK_ALL, 0x66 },
++	{ RK817_CODEC_DMIC_LMT1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DMIC_LMT2, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DMIC_NG1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DMIC_NG2, MASK_ALL, 0x00 },
++	/* from vendor driver, CODEC_ADAC_CFG0 not defined in data sheet */
++	{ RK817_CODEC_ADAC_CFG0, MASK_ALL, 0x00 },
++	{ RK817_CODEC_ADAC_CFG1, MASK_ALL, 0x07 },
++	{ RK817_CODEC_DDAC_POPD_DACST, MASK_ALL, 0x82 },
++	{ RK817_CODEC_DDAC_VOLL, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DDAC_VOLR, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DDAC_SR_LMT0, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DDAC_LMT1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DDAC_LMT2, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DDAC_MUTE_MIXCTL, MASK_ALL, 0xa0 },
++	{ RK817_CODEC_DDAC_RVOLL, MASK_ALL, 0xff },
++	{ RK817_CODEC_DDAC_RVOLR, MASK_ALL, 0xff },
++	{ RK817_CODEC_AHP_ANTI0, MASK_ALL, 0x00 },
++	{ RK817_CODEC_AHP_ANTI1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_AHP_CFG0, MASK_ALL, 0xe0 },
++	{ RK817_CODEC_AHP_CFG1, MASK_ALL, 0x1f },
++	{ RK817_CODEC_AHP_CP, MASK_ALL, 0x09 },
++	{ RK817_CODEC_ACLASSD_CFG1, MASK_ALL, 0x69 },
++	{ RK817_CODEC_ACLASSD_CFG2, MASK_ALL, 0x44 },
++	{ RK817_CODEC_APLL_CFG0, MASK_ALL, 0x04 },
++	{ RK817_CODEC_APLL_CFG1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_APLL_CFG2, MASK_ALL, 0x30 },
++	{ RK817_CODEC_APLL_CFG3, MASK_ALL, 0x19 },
++	{ RK817_CODEC_APLL_CFG4, MASK_ALL, 0x65 },
++	{ RK817_CODEC_APLL_CFG5, MASK_ALL, 0x01 },
++	{ RK817_CODEC_DI2S_CKM, MASK_ALL, 0x01 },
++	{ RK817_CODEC_DI2S_RSD, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DI2S_RXCR1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DI2S_RXCR2, MASK_ALL, 0x17 },
++	{ RK817_CODEC_DI2S_RXCMD_TSD, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DI2S_TXCR1, MASK_ALL, 0x00 },
++	{ RK817_CODEC_DI2S_TXCR2, MASK_ALL, 0x17 },
++	{ RK817_CODEC_DI2S_TXCR3_TXCMD, MASK_ALL, 0x00 },
++	{RK817_GPIO_INT_CFG, RK817_INT_POL_MSK, RK817_INT_POL_L},
++	{RK817_SYS_CFG(1), RK817_HOTDIE_TEMP_MSK | RK817_TSD_TEMP_MSK,
++					   RK817_HOTDIE_105 | RK817_TSD_140},
++};
++
++static const struct rk808_reg_data rk818_pre_init_reg[] = {
++	/* improve efficiency */
++	{ RK818_BUCK2_CONFIG_REG, BUCK2_RATE_MASK,  BUCK_ILMIN_250MA },
++	{ RK818_BUCK4_CONFIG_REG, BUCK_ILMIN_MASK,  BUCK_ILMIN_250MA },
++	{ RK818_BOOST_CONFIG_REG, BOOST_ILMIN_MASK, BOOST_ILMIN_100MA },
++	{ RK818_USB_CTRL_REG,	  RK818_USB_ILIM_SEL_MASK,
++						    RK818_USB_ILMIN_2000MA },
++	/* close charger when usb lower then 3.4V */
++	{ RK818_USB_CTRL_REG,	  RK818_USB_CHG_SD_VSEL_MASK,
++						    (0x7 << 4) },
++	/* no action when vref */
++	{ RK818_H5V_EN_REG,	  BIT(1),	    RK818_REF_RDY_CTRL },
++	/* enable HDMI 5V */
++	{ RK818_H5V_EN_REG,	  BIT(0),	    RK818_H5V_EN },
++	{ RK808_VB_MON_REG,	  MASK_ALL,	    VB_LO_ACT |
++						    VB_LO_SEL_3500MV },
++};
++
++static const struct regmap_irq rk805_irqs[] = {
++	[RK805_IRQ_PWRON_RISE] = {
++		.mask = RK805_IRQ_PWRON_RISE_MSK,
++		.reg_offset = 0,
++	},
++	[RK805_IRQ_VB_LOW] = {
++		.mask = RK805_IRQ_VB_LOW_MSK,
++		.reg_offset = 0,
++	},
++	[RK805_IRQ_PWRON] = {
++		.mask = RK805_IRQ_PWRON_MSK,
++		.reg_offset = 0,
++	},
++	[RK805_IRQ_PWRON_LP] = {
++		.mask = RK805_IRQ_PWRON_LP_MSK,
++		.reg_offset = 0,
++	},
++	[RK805_IRQ_HOTDIE] = {
++		.mask = RK805_IRQ_HOTDIE_MSK,
++		.reg_offset = 0,
++	},
++	[RK805_IRQ_RTC_ALARM] = {
++		.mask = RK805_IRQ_RTC_ALARM_MSK,
++		.reg_offset = 0,
++	},
++	[RK805_IRQ_RTC_PERIOD] = {
++		.mask = RK805_IRQ_RTC_PERIOD_MSK,
++		.reg_offset = 0,
++	},
++	[RK805_IRQ_PWRON_FALL] = {
++		.mask = RK805_IRQ_PWRON_FALL_MSK,
++		.reg_offset = 0,
++	},
++};
++
++static const struct regmap_irq rk808_irqs[] = {
++	/* INT_STS */
++	[RK808_IRQ_VOUT_LO] = {
++		.mask = RK808_IRQ_VOUT_LO_MSK,
++		.reg_offset = 0,
++	},
++	[RK808_IRQ_VB_LO] = {
++		.mask = RK808_IRQ_VB_LO_MSK,
++		.reg_offset = 0,
++	},
++	[RK808_IRQ_PWRON] = {
++		.mask = RK808_IRQ_PWRON_MSK,
++		.reg_offset = 0,
++	},
++	[RK808_IRQ_PWRON_LP] = {
++		.mask = RK808_IRQ_PWRON_LP_MSK,
++		.reg_offset = 0,
++	},
++	[RK808_IRQ_HOTDIE] = {
++		.mask = RK808_IRQ_HOTDIE_MSK,
++		.reg_offset = 0,
++	},
++	[RK808_IRQ_RTC_ALARM] = {
++		.mask = RK808_IRQ_RTC_ALARM_MSK,
++		.reg_offset = 0,
++	},
++	[RK808_IRQ_RTC_PERIOD] = {
++		.mask = RK808_IRQ_RTC_PERIOD_MSK,
++		.reg_offset = 0,
++	},
++
++	/* INT_STS2 */
++	[RK808_IRQ_PLUG_IN_INT] = {
++		.mask = RK808_IRQ_PLUG_IN_INT_MSK,
++		.reg_offset = 1,
++	},
++	[RK808_IRQ_PLUG_OUT_INT] = {
++		.mask = RK808_IRQ_PLUG_OUT_INT_MSK,
++		.reg_offset = 1,
++	},
++};
++
++static const struct regmap_irq rk818_irqs[] = {
++	/* INT_STS */
++	[RK818_IRQ_VOUT_LO] = {
++		.mask = RK818_IRQ_VOUT_LO_MSK,
++		.reg_offset = 0,
++	},
++	[RK818_IRQ_VB_LO] = {
++		.mask = RK818_IRQ_VB_LO_MSK,
++		.reg_offset = 0,
++	},
++	[RK818_IRQ_PWRON] = {
++		.mask = RK818_IRQ_PWRON_MSK,
++		.reg_offset = 0,
++	},
++	[RK818_IRQ_PWRON_LP] = {
++		.mask = RK818_IRQ_PWRON_LP_MSK,
++		.reg_offset = 0,
++	},
++	[RK818_IRQ_HOTDIE] = {
++		.mask = RK818_IRQ_HOTDIE_MSK,
++		.reg_offset = 0,
++	},
++	[RK818_IRQ_RTC_ALARM] = {
++		.mask = RK818_IRQ_RTC_ALARM_MSK,
++		.reg_offset = 0,
++	},
++	[RK818_IRQ_RTC_PERIOD] = {
++		.mask = RK818_IRQ_RTC_PERIOD_MSK,
++		.reg_offset = 0,
++	},
++	[RK818_IRQ_USB_OV] = {
++		.mask = RK818_IRQ_USB_OV_MSK,
++		.reg_offset = 0,
++	},
++
++	/* INT_STS2 */
++	[RK818_IRQ_PLUG_IN] = {
++		.mask = RK818_IRQ_PLUG_IN_MSK,
++		.reg_offset = 1,
++	},
++	[RK818_IRQ_PLUG_OUT] = {
++		.mask = RK818_IRQ_PLUG_OUT_MSK,
++		.reg_offset = 1,
++	},
++	[RK818_IRQ_CHG_OK] = {
++		.mask = RK818_IRQ_CHG_OK_MSK,
++		.reg_offset = 1,
++	},
++	[RK818_IRQ_CHG_TE] = {
++		.mask = RK818_IRQ_CHG_TE_MSK,
++		.reg_offset = 1,
++	},
++	[RK818_IRQ_CHG_TS1] = {
++		.mask = RK818_IRQ_CHG_TS1_MSK,
++		.reg_offset = 1,
++	},
++	[RK818_IRQ_TS2] = {
++		.mask = RK818_IRQ_TS2_MSK,
++		.reg_offset = 1,
++	},
++	[RK818_IRQ_CHG_CVTLIM] = {
++		.mask = RK818_IRQ_CHG_CVTLIM_MSK,
++		.reg_offset = 1,
++	},
++	[RK818_IRQ_DISCHG_ILIM] = {
++		.mask = RK818_IRQ_DISCHG_ILIM_MSK,
++		.reg_offset = 1,
++	},
++};
++
++static const struct regmap_irq rk817_irqs[RK817_IRQ_END] = {
++	REGMAP_IRQ_REG_LINE(0, 8),
++	REGMAP_IRQ_REG_LINE(1, 8),
++	REGMAP_IRQ_REG_LINE(2, 8),
++	REGMAP_IRQ_REG_LINE(3, 8),
++	REGMAP_IRQ_REG_LINE(4, 8),
++	REGMAP_IRQ_REG_LINE(5, 8),
++	REGMAP_IRQ_REG_LINE(6, 8),
++	REGMAP_IRQ_REG_LINE(7, 8),
++	REGMAP_IRQ_REG_LINE(8, 8),
++	REGMAP_IRQ_REG_LINE(9, 8),
++	REGMAP_IRQ_REG_LINE(10, 8),
++	REGMAP_IRQ_REG_LINE(11, 8),
++	REGMAP_IRQ_REG_LINE(12, 8),
++	REGMAP_IRQ_REG_LINE(13, 8),
++	REGMAP_IRQ_REG_LINE(14, 8),
++	REGMAP_IRQ_REG_LINE(15, 8),
++	REGMAP_IRQ_REG_LINE(16, 8),
++	REGMAP_IRQ_REG_LINE(17, 8),
++	REGMAP_IRQ_REG_LINE(18, 8),
++	REGMAP_IRQ_REG_LINE(19, 8),
++	REGMAP_IRQ_REG_LINE(20, 8),
++	REGMAP_IRQ_REG_LINE(21, 8),
++	REGMAP_IRQ_REG_LINE(22, 8),
++	REGMAP_IRQ_REG_LINE(23, 8)
++};
++
++static struct regmap_irq_chip rk805_irq_chip = {
++	.name = "rk805",
++	.irqs = rk805_irqs,
++	.num_irqs = ARRAY_SIZE(rk805_irqs),
++	.num_regs = 1,
++	.status_base = RK805_INT_STS_REG,
++	.mask_base = RK805_INT_STS_MSK_REG,
++	.ack_base = RK805_INT_STS_REG,
++	.init_ack_masked = true,
++};
++
++static const struct regmap_irq_chip rk808_irq_chip = {
++	.name = "rk808",
++	.irqs = rk808_irqs,
++	.num_irqs = ARRAY_SIZE(rk808_irqs),
++	.num_regs = 2,
++	.irq_reg_stride = 2,
++	.status_base = RK808_INT_STS_REG1,
++	.mask_base = RK808_INT_STS_MSK_REG1,
++	.ack_base = RK808_INT_STS_REG1,
++	.init_ack_masked = true,
++};
++
++static struct regmap_irq_chip rk817_irq_chip = {
++	.name = "rk817",
++	.irqs = rk817_irqs,
++	.num_irqs = ARRAY_SIZE(rk817_irqs),
++	.num_regs = 3,
++	.irq_reg_stride = 2,
++	.status_base = RK817_INT_STS_REG0,
++	.mask_base = RK817_INT_STS_MSK_REG0,
++	.ack_base = RK817_INT_STS_REG0,
++	.init_ack_masked = true,
++};
++
++static const struct regmap_irq_chip rk818_irq_chip = {
++	.name = "rk818",
++	.irqs = rk818_irqs,
++	.num_irqs = ARRAY_SIZE(rk818_irqs),
++	.num_regs = 2,
++	.irq_reg_stride = 2,
++	.status_base = RK818_INT_STS_REG1,
++	.mask_base = RK818_INT_STS_MSK_REG1,
++	.ack_base = RK818_INT_STS_REG1,
++	.init_ack_masked = true,
++};
++
++static int rk808_power_off(struct sys_off_data *data)
++{
++	struct rk808 *rk808 = data->cb_data;
++	int ret;
++	unsigned int reg, bit;
++
++	switch (rk808->variant) {
++	case RK805_ID:
++		reg = RK805_DEV_CTRL_REG;
++		bit = DEV_OFF;
++		break;
++	case RK808_ID:
++		reg = RK808_DEVCTRL_REG,
++		bit = DEV_OFF_RST;
++		break;
++	case RK809_ID:
++	case RK817_ID:
++		reg = RK817_SYS_CFG(3);
++		bit = DEV_OFF;
++		break;
++	case RK818_ID:
++		reg = RK818_DEVCTRL_REG;
++		bit = DEV_OFF;
++		break;
++	default:
++		return NOTIFY_DONE;
++	}
++	ret = regmap_update_bits(rk808->regmap, reg, bit, bit);
++	if (ret)
++		dev_err(rk808->dev, "Failed to shutdown device!\n");
++
++	return NOTIFY_DONE;
++}
++
++static int rk808_restart(struct sys_off_data *data)
++{
++	struct rk808 *rk808 = data->cb_data;
++	unsigned int reg, bit;
++	int ret;
++
++	switch (rk808->variant) {
++	case RK809_ID:
++	case RK817_ID:
++		reg = RK817_SYS_CFG(3);
++		bit = DEV_RST;
++		break;
++
++	default:
++		return NOTIFY_DONE;
++	}
++	ret = regmap_update_bits(rk808->regmap, reg, bit, bit);
++	if (ret)
++		dev_err(rk808->dev, "Failed to restart device!\n");
++
++	return NOTIFY_DONE;
++}
++
++void rk8xx_shutdown(struct device *dev)
++{
++	struct rk808 *rk808 = dev_get_drvdata(dev);
++	int ret;
++
++	switch (rk808->variant) {
++	case RK805_ID:
++		ret = regmap_update_bits(rk808->regmap,
++					 RK805_GPIO_IO_POL_REG,
++					 SLP_SD_MSK,
++					 SHUTDOWN_FUN);
++		break;
++	case RK809_ID:
++	case RK817_ID:
++		ret = regmap_update_bits(rk808->regmap,
++					 RK817_SYS_CFG(3),
++					 RK817_SLPPIN_FUNC_MSK,
++					 SLPPIN_DN_FUN);
++		break;
++	default:
++		return;
++	}
++	if (ret)
++		dev_warn(dev,
++			 "Cannot switch to power down function\n");
++}
++EXPORT_SYMBOL_GPL(rk8xx_shutdown);
++
++int rk8xx_probe(struct device *dev, int variant, unsigned int irq, struct regmap *regmap)
++{
++	struct rk808 *rk808;
++	const struct rk808_reg_data *pre_init_reg;
++	const struct mfd_cell *cells;
++	int nr_pre_init_regs;
++	int nr_cells;
++	int ret;
++	int i;
++
++	rk808 = devm_kzalloc(dev, sizeof(*rk808), GFP_KERNEL);
++	if (!rk808)
++		return -ENOMEM;
++	rk808->dev = dev;
++	rk808->variant = variant;
++	rk808->regmap = regmap;
++	dev_set_drvdata(dev, rk808);
++
++	switch (rk808->variant) {
++	case RK805_ID:
++		rk808->regmap_irq_chip = &rk805_irq_chip;
++		pre_init_reg = rk805_pre_init_reg;
++		nr_pre_init_regs = ARRAY_SIZE(rk805_pre_init_reg);
++		cells = rk805s;
++		nr_cells = ARRAY_SIZE(rk805s);
++		break;
++	case RK808_ID:
++		rk808->regmap_irq_chip = &rk808_irq_chip;
++		pre_init_reg = rk808_pre_init_reg;
++		nr_pre_init_regs = ARRAY_SIZE(rk808_pre_init_reg);
++		cells = rk808s;
++		nr_cells = ARRAY_SIZE(rk808s);
++		break;
++	case RK818_ID:
++		rk808->regmap_irq_chip = &rk818_irq_chip;
++		pre_init_reg = rk818_pre_init_reg;
++		nr_pre_init_regs = ARRAY_SIZE(rk818_pre_init_reg);
++		cells = rk818s;
++		nr_cells = ARRAY_SIZE(rk818s);
++		break;
++	case RK809_ID:
++	case RK817_ID:
++		rk808->regmap_irq_chip = &rk817_irq_chip;
++		pre_init_reg = rk817_pre_init_reg;
++		nr_pre_init_regs = ARRAY_SIZE(rk817_pre_init_reg);
++		cells = rk817s;
++		nr_cells = ARRAY_SIZE(rk817s);
++		break;
++	default:
++		dev_err(dev, "Unsupported RK8XX ID %lu\n", rk808->variant);
++		return -EINVAL;
++	}
++
++	dev_info(dev, "chip id: 0x%x\n", (unsigned int)rk808->variant);
++
++	if (!irq)
++		return dev_err_probe(dev, -EINVAL, "No interrupt support, no core IRQ\n");
++
++	ret = devm_regmap_add_irq_chip(dev, rk808->regmap, irq,
++				       IRQF_ONESHOT, -1,
++				       rk808->regmap_irq_chip, &rk808->irq_data);
++	if (ret)
++		return dev_err_probe(dev, ret, "Failed to add irq_chip\n");
++
++	for (i = 0; i < nr_pre_init_regs; i++) {
++		ret = regmap_update_bits(rk808->regmap,
++					pre_init_reg[i].addr,
++					pre_init_reg[i].mask,
++					pre_init_reg[i].value);
++		if (ret)
++			return dev_err_probe(dev, ret, "0x%x write err\n",
++					     pre_init_reg[i].addr);
++	}
++
++	ret = devm_mfd_add_devices(dev, PLATFORM_DEVID_NONE,
++			      cells, nr_cells, NULL, 0,
++			      regmap_irq_get_domain(rk808->irq_data));
++	if (ret)
++		return dev_err_probe(dev, ret, "failed to add MFD devices\n");
++
++	if (device_property_read_bool(dev, "rockchip,system-power-controller")) {
++		ret = devm_register_sys_off_handler(dev,
++				    SYS_OFF_MODE_POWER_OFF_PREPARE, SYS_OFF_PRIO_HIGH,
++				    &rk808_power_off, rk808);
++		if (ret)
++			return dev_err_probe(dev, ret,
++					     "failed to register poweroff handler\n");
++
++		switch (rk808->variant) {
++		case RK809_ID:
++		case RK817_ID:
++			ret = devm_register_sys_off_handler(dev,
++							    SYS_OFF_MODE_RESTART, SYS_OFF_PRIO_HIGH,
++							    &rk808_restart, rk808);
++			if (ret)
++				dev_warn(dev, "failed to register rst handler, %d\n", ret);
++			break;
++		default:
++			dev_dbg(dev, "pmic controlled board reset not supported\n");
++			break;
++		}
++	}
++
++	return 0;
++}
++EXPORT_SYMBOL_GPL(rk8xx_probe);
++
++int rk8xx_suspend(struct device *dev)
++{
++	struct rk808 *rk808 = dev_get_drvdata(dev);
++	int ret = 0;
++
++	switch (rk808->variant) {
++	case RK805_ID:
++		ret = regmap_update_bits(rk808->regmap,
++					 RK805_GPIO_IO_POL_REG,
++					 SLP_SD_MSK,
++					 SLEEP_FUN);
++		break;
++	case RK809_ID:
++	case RK817_ID:
++		ret = regmap_update_bits(rk808->regmap,
++					 RK817_SYS_CFG(3),
++					 RK817_SLPPIN_FUNC_MSK,
++					 SLPPIN_SLP_FUN);
++		break;
++	default:
++		break;
++	}
++
++	return ret;
++}
++EXPORT_SYMBOL_GPL(rk8xx_suspend);
++
++int rk8xx_resume(struct device *dev)
++{
++	struct rk808 *rk808 = dev_get_drvdata(dev);
++	int ret = 0;
++
++	switch (rk808->variant) {
++	case RK809_ID:
++	case RK817_ID:
++		ret = regmap_update_bits(rk808->regmap,
++					 RK817_SYS_CFG(3),
++					 RK817_SLPPIN_FUNC_MSK,
++					 SLPPIN_NULL_FUN);
++		break;
++	default:
++		break;
++	}
++
++	return ret;
++}
++EXPORT_SYMBOL_GPL(rk8xx_resume);
++
++MODULE_LICENSE("GPL");
++MODULE_AUTHOR("Chris Zhong <zyw@rock-chips.com>");
++MODULE_AUTHOR("Zhang Qing <zhangqing@rock-chips.com>");
++MODULE_AUTHOR("Wadim Egorov <w.egorov@phytec.de>");
++MODULE_DESCRIPTION("RK8xx PMIC core");
+--- /dev/null
++++ b/drivers/mfd/rk8xx-i2c.c
+@@ -0,0 +1,200 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Rockchip RK808/RK818 Core (I2C) driver
++ *
++ * Copyright (c) 2014, Fuzhou Rockchip Electronics Co., Ltd
++ * Copyright (C) 2016 PHYTEC Messtechnik GmbH
++ *
++ * Author: Chris Zhong <zyw@rock-chips.com>
++ * Author: Zhang Qing <zhangqing@rock-chips.com>
++ * Author: Wadim Egorov <w.egorov@phytec.de>
++ */
++
++#include <linux/i2c.h>
++#include <linux/mfd/rk808.h>
++#include <linux/module.h>
++#include <linux/of.h>
++#include <linux/regmap.h>
++
++static bool rk808_is_volatile_reg(struct device *dev, unsigned int reg)
++{
++	/*
++	 * Notes:
++	 * - Technically the ROUND_30s bit makes RTC_CTRL_REG volatile, but
++	 *   we don't use that feature.  It's better to cache.
++	 * - It's unlikely we care that RK808_DEVCTRL_REG is volatile since
++	 *   bits are cleared in case when we shutoff anyway, but better safe.
++	 */
++
++	switch (reg) {
++	case RK808_SECONDS_REG ... RK808_WEEKS_REG:
++	case RK808_RTC_STATUS_REG:
++	case RK808_VB_MON_REG:
++	case RK808_THERMAL_REG:
++	case RK808_DCDC_UV_STS_REG:
++	case RK808_LDO_UV_STS_REG:
++	case RK808_DCDC_PG_REG:
++	case RK808_LDO_PG_REG:
++	case RK808_DEVCTRL_REG:
++	case RK808_INT_STS_REG1:
++	case RK808_INT_STS_REG2:
++		return true;
++	}
++
++	return false;
++}
++
++static bool rk817_is_volatile_reg(struct device *dev, unsigned int reg)
++{
++	/*
++	 * Notes:
++	 * - Technically the ROUND_30s bit makes RTC_CTRL_REG volatile, but
++	 *   we don't use that feature.  It's better to cache.
++	 */
++
++	switch (reg) {
++	case RK817_SECONDS_REG ... RK817_WEEKS_REG:
++	case RK817_RTC_STATUS_REG:
++	case RK817_CODEC_DTOP_LPT_SRST:
++	case RK817_GAS_GAUGE_ADC_CONFIG0 ... RK817_GAS_GAUGE_CUR_ADC_K0:
++	case RK817_PMIC_CHRG_STS:
++	case RK817_PMIC_CHRG_OUT:
++	case RK817_PMIC_CHRG_IN:
++	case RK817_INT_STS_REG0:
++	case RK817_INT_STS_REG1:
++	case RK817_INT_STS_REG2:
++	case RK817_SYS_STS:
++		return true;
++	}
++
++	return false;
++}
++
++
++static const struct regmap_config rk818_regmap_config = {
++	.reg_bits = 8,
++	.val_bits = 8,
++	.max_register = RK818_USB_CTRL_REG,
++	.cache_type = REGCACHE_RBTREE,
++	.volatile_reg = rk808_is_volatile_reg,
++};
++
++static const struct regmap_config rk805_regmap_config = {
++	.reg_bits = 8,
++	.val_bits = 8,
++	.max_register = RK805_OFF_SOURCE_REG,
++	.cache_type = REGCACHE_RBTREE,
++	.volatile_reg = rk808_is_volatile_reg,
++};
++
++static const struct regmap_config rk808_regmap_config = {
++	.reg_bits = 8,
++	.val_bits = 8,
++	.max_register = RK808_IO_POL_REG,
++	.cache_type = REGCACHE_RBTREE,
++	.volatile_reg = rk808_is_volatile_reg,
++};
++
++static const struct regmap_config rk817_regmap_config = {
++	.reg_bits = 8,
++	.val_bits = 8,
++	.max_register = RK817_GPIO_INT_CFG,
++	.cache_type = REGCACHE_NONE,
++	.volatile_reg = rk817_is_volatile_reg,
++};
++
++static int rk8xx_i2c_get_variant(struct i2c_client *client)
++{
++	u8 pmic_id_msb, pmic_id_lsb;
++	int msb, lsb;
++
++	if (of_device_is_compatible(client->dev.of_node, "rockchip,rk817") ||
++	    of_device_is_compatible(client->dev.of_node, "rockchip,rk809")) {
++		pmic_id_msb = RK817_ID_MSB;
++		pmic_id_lsb = RK817_ID_LSB;
++	} else {
++		pmic_id_msb = RK808_ID_MSB;
++		pmic_id_lsb = RK808_ID_LSB;
++	}
++
++	/* Read chip variant */
++	msb = i2c_smbus_read_byte_data(client, pmic_id_msb);
++	if (msb < 0)
++		return dev_err_probe(&client->dev, msb, "failed to read the chip id MSB\n");
++
++	lsb = i2c_smbus_read_byte_data(client, pmic_id_lsb);
++	if (lsb < 0)
++		return dev_err_probe(&client->dev, lsb, "failed to read the chip id LSB\n");
++
++	return ((msb << 8) | lsb) & RK8XX_ID_MSK;
++}
++
++static int rk8xx_i2c_probe(struct i2c_client *client)
++{
++	const struct regmap_config *regmap_cfg;
++	struct regmap *regmap;
++	int variant;
++
++	variant = rk8xx_i2c_get_variant(client);
++	if (variant < 0)
++		return variant;
++
++	switch (variant) {
++	case RK805_ID:
++		regmap_cfg = &rk805_regmap_config;
++		break;
++	case RK808_ID:
++		regmap_cfg = &rk808_regmap_config;
++		break;
++	case RK818_ID:
++		regmap_cfg = &rk818_regmap_config;
++		break;
++	case RK809_ID:
++	case RK817_ID:
++		regmap_cfg = &rk817_regmap_config;
++		break;
++	default:
++		return dev_err_probe(&client->dev, -EINVAL, "Unsupported RK8XX ID %x\n", variant);
++	}
++
++	regmap = devm_regmap_init_i2c(client, regmap_cfg);
++	if (IS_ERR(regmap))
++		return dev_err_probe(&client->dev, PTR_ERR(regmap),
++				     "regmap initialization failed\n");
++
++	return rk8xx_probe(&client->dev, variant, client->irq, regmap);
++}
++
++static void rk8xx_i2c_shutdown(struct i2c_client *client)
++{
++	rk8xx_shutdown(&client->dev);
++}
++
++static SIMPLE_DEV_PM_OPS(rk8xx_i2c_pm_ops, rk8xx_suspend, rk8xx_resume);
++
++static const struct of_device_id rk8xx_i2c_of_match[] = {
++	{ .compatible = "rockchip,rk805" },
++	{ .compatible = "rockchip,rk808" },
++	{ .compatible = "rockchip,rk809" },
++	{ .compatible = "rockchip,rk817" },
++	{ .compatible = "rockchip,rk818" },
++	{ },
++};
++MODULE_DEVICE_TABLE(of, rk8xx_i2c_of_match);
++
++static struct i2c_driver rk8xx_i2c_driver = {
++	.driver = {
++		.name = "rk8xx-i2c",
++		.of_match_table = rk8xx_i2c_of_match,
++		.pm = &rk8xx_i2c_pm_ops,
++	},
++	.probe_new = rk8xx_i2c_probe,
++	.shutdown  = rk8xx_i2c_shutdown,
++};
++module_i2c_driver(rk8xx_i2c_driver);
++
++MODULE_LICENSE("GPL");
++MODULE_AUTHOR("Chris Zhong <zyw@rock-chips.com>");
++MODULE_AUTHOR("Zhang Qing <zhangqing@rock-chips.com>");
++MODULE_AUTHOR("Wadim Egorov <w.egorov@phytec.de>");
++MODULE_DESCRIPTION("RK8xx I2C PMIC driver");
+--- a/drivers/pinctrl/Kconfig
++++ b/drivers/pinctrl/Kconfig
+@@ -396,7 +396,7 @@ config PINCTRL_PISTACHIO
+ 
+ config PINCTRL_RK805
+ 	tristate "Pinctrl and GPIO driver for RK805 PMIC"
+-	depends on MFD_RK808
++	depends on MFD_RK8XX
+ 	select GPIOLIB
+ 	select PINMUX
+ 	select GENERIC_PINCONF
+--- a/drivers/power/supply/Kconfig
++++ b/drivers/power/supply/Kconfig
+@@ -725,7 +725,7 @@ config CHARGER_BQ256XX
+ 
+ config CHARGER_RK817
+ 	tristate "Rockchip RK817 PMIC Battery Charger"
+-	depends on MFD_RK808
++	depends on MFD_RK8XX
+ 	help
+ 	  Say Y to include support for Rockchip RK817 Battery Charger.
+ 
+--- a/drivers/regulator/Kconfig
++++ b/drivers/regulator/Kconfig
+@@ -1039,7 +1039,7 @@ config REGULATOR_RC5T583
+ 
+ config REGULATOR_RK808
+ 	tristate "Rockchip RK805/RK808/RK809/RK817/RK818 Power regulators"
+-	depends on MFD_RK808
++	depends on MFD_RK8XX
+ 	help
+ 	  Select this option to enable the power regulator of ROCKCHIP
+ 	  PMIC RK805,RK809&RK817,RK808 and RK818.
+--- a/drivers/rtc/Kconfig
++++ b/drivers/rtc/Kconfig
+@@ -395,7 +395,7 @@ config RTC_DRV_NCT3018Y
+ 
+ config RTC_DRV_RK808
+ 	tristate "Rockchip RK805/RK808/RK809/RK817/RK818 RTC"
+-	depends on MFD_RK808
++	depends on MFD_RK8XX
+ 	help
+ 	  If you say yes here you will get support for the
+ 	  RTC of RK805, RK809 and RK817, RK808 and RK818 PMIC.
+--- a/include/linux/mfd/rk808.h
++++ b/include/linux/mfd/rk808.h
+@@ -794,4 +794,10 @@ struct rk808 {
+ 	const struct regmap_config	*regmap_cfg;
+ 	const struct regmap_irq_chip	*regmap_irq_chip;
+ };
++
++void rk8xx_shutdown(struct device *dev);
++int rk8xx_probe(struct device *dev, int variant, unsigned int irq, struct regmap *regmap);
++int rk8xx_suspend(struct device *dev);
++int rk8xx_resume(struct device *dev);
++
+ #endif /* __LINUX_REGULATOR_RK808_H */
+--- a/sound/soc/codecs/Kconfig
++++ b/sound/soc/codecs/Kconfig
+@@ -1211,7 +1211,7 @@ config SND_SOC_RK3328
+ 
+ config SND_SOC_RK817
+ 	tristate "Rockchip RK817 audio CODEC"
+-	depends on MFD_RK808 || COMPILE_TEST
++	depends on MFD_RK8XX || COMPILE_TEST
+ 
+ config SND_SOC_RL6231
+ 	tristate
diff --git a/target/linux/rockchip/patches-6.1/232-mfd-rk8xx-i2c-Use-device_get_match_data.patch b/target/linux/rockchip/patches-6.1/232-mfd-rk8xx-i2c-Use-device_get_match_data.patch
new file mode 100644
index 0000000000..15be1d7ebf
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/232-mfd-rk8xx-i2c-Use-device_get_match_data.patch
@@ -0,0 +1,159 @@
+From 4f4bccd6c5a165055daeeafe4a593845ddaca0d6 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 4 May 2023 19:36:10 +0200
+Subject: [PATCH 232/383] mfd: rk8xx-i2c: Use device_get_match_data
+
+Simplify the device identification logic by supplying the relevant
+information via of_match_data. This also removes the dev_info()
+printing the chip version, since that's supplied by the match data
+now.
+
+Due to lack of hardware this change is compile-tested only.
+
+Tested-by: Diederik de Haas <didi.debian@cknow.org> # Rock64, Quartz64 Model A + B
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com> # Pine64 QuartzPro64
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230504173618.142075-7-sebastian.reichel@collabora.com
+Signed-off-by: Lee Jones <lee@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mfd/rk8xx-core.c |  2 -
+ drivers/mfd/rk8xx-i2c.c  | 89 +++++++++++++++++-----------------------
+ 2 files changed, 37 insertions(+), 54 deletions(-)
+
+--- a/drivers/mfd/rk8xx-core.c
++++ b/drivers/mfd/rk8xx-core.c
+@@ -597,8 +597,6 @@ int rk8xx_probe(struct device *dev, int
+ 		return -EINVAL;
+ 	}
+ 
+-	dev_info(dev, "chip id: 0x%x\n", (unsigned int)rk808->variant);
+-
+ 	if (!irq)
+ 		return dev_err_probe(dev, -EINVAL, "No interrupt support, no core IRQ\n");
+ 
+--- a/drivers/mfd/rk8xx-i2c.c
++++ b/drivers/mfd/rk8xx-i2c.c
+@@ -16,6 +16,11 @@
+ #include <linux/of.h>
+ #include <linux/regmap.h>
+ 
++struct rk8xx_i2c_platform_data {
++	const struct regmap_config *regmap_cfg;
++	int variant;
++};
++
+ static bool rk808_is_volatile_reg(struct device *dev, unsigned int reg)
+ {
+ 	/*
+@@ -103,66 +108,46 @@ static const struct regmap_config rk817_
+ 	.volatile_reg = rk817_is_volatile_reg,
+ };
+ 
+-static int rk8xx_i2c_get_variant(struct i2c_client *client)
+-{
+-	u8 pmic_id_msb, pmic_id_lsb;
+-	int msb, lsb;
++static const struct rk8xx_i2c_platform_data rk805_data = {
++	.regmap_cfg = &rk805_regmap_config,
++	.variant = RK805_ID,
++};
+ 
+-	if (of_device_is_compatible(client->dev.of_node, "rockchip,rk817") ||
+-	    of_device_is_compatible(client->dev.of_node, "rockchip,rk809")) {
+-		pmic_id_msb = RK817_ID_MSB;
+-		pmic_id_lsb = RK817_ID_LSB;
+-	} else {
+-		pmic_id_msb = RK808_ID_MSB;
+-		pmic_id_lsb = RK808_ID_LSB;
+-	}
++static const struct rk8xx_i2c_platform_data rk808_data = {
++	.regmap_cfg = &rk808_regmap_config,
++	.variant = RK808_ID,
++};
+ 
+-	/* Read chip variant */
+-	msb = i2c_smbus_read_byte_data(client, pmic_id_msb);
+-	if (msb < 0)
+-		return dev_err_probe(&client->dev, msb, "failed to read the chip id MSB\n");
+-
+-	lsb = i2c_smbus_read_byte_data(client, pmic_id_lsb);
+-	if (lsb < 0)
+-		return dev_err_probe(&client->dev, lsb, "failed to read the chip id LSB\n");
++static const struct rk8xx_i2c_platform_data rk809_data = {
++	.regmap_cfg = &rk817_regmap_config,
++	.variant = RK809_ID,
++};
+ 
+-	return ((msb << 8) | lsb) & RK8XX_ID_MSK;
+-}
++static const struct rk8xx_i2c_platform_data rk817_data = {
++	.regmap_cfg = &rk817_regmap_config,
++	.variant = RK817_ID,
++};
++
++static const struct rk8xx_i2c_platform_data rk818_data = {
++	.regmap_cfg = &rk818_regmap_config,
++	.variant = RK818_ID,
++};
+ 
+ static int rk8xx_i2c_probe(struct i2c_client *client)
+ {
+-	const struct regmap_config *regmap_cfg;
++	const struct rk8xx_i2c_platform_data *data;
+ 	struct regmap *regmap;
+-	int variant;
+ 
+-	variant = rk8xx_i2c_get_variant(client);
+-	if (variant < 0)
+-		return variant;
+-
+-	switch (variant) {
+-	case RK805_ID:
+-		regmap_cfg = &rk805_regmap_config;
+-		break;
+-	case RK808_ID:
+-		regmap_cfg = &rk808_regmap_config;
+-		break;
+-	case RK818_ID:
+-		regmap_cfg = &rk818_regmap_config;
+-		break;
+-	case RK809_ID:
+-	case RK817_ID:
+-		regmap_cfg = &rk817_regmap_config;
+-		break;
+-	default:
+-		return dev_err_probe(&client->dev, -EINVAL, "Unsupported RK8XX ID %x\n", variant);
+-	}
++	data = device_get_match_data(&client->dev);
++	if (!data)
++		return -ENODEV;
+ 
+-	regmap = devm_regmap_init_i2c(client, regmap_cfg);
++	regmap = devm_regmap_init_i2c(client, data->regmap_cfg);
+ 	if (IS_ERR(regmap))
+ 		return dev_err_probe(&client->dev, PTR_ERR(regmap),
+ 				     "regmap initialization failed\n");
+ 
+-	return rk8xx_probe(&client->dev, variant, client->irq, regmap);
++	return rk8xx_probe(&client->dev, data->variant, client->irq, regmap);
+ }
+ 
+ static void rk8xx_i2c_shutdown(struct i2c_client *client)
+@@ -173,11 +158,11 @@ static void rk8xx_i2c_shutdown(struct i2
+ static SIMPLE_DEV_PM_OPS(rk8xx_i2c_pm_ops, rk8xx_suspend, rk8xx_resume);
+ 
+ static const struct of_device_id rk8xx_i2c_of_match[] = {
+-	{ .compatible = "rockchip,rk805" },
+-	{ .compatible = "rockchip,rk808" },
+-	{ .compatible = "rockchip,rk809" },
+-	{ .compatible = "rockchip,rk817" },
+-	{ .compatible = "rockchip,rk818" },
++	{ .compatible = "rockchip,rk805", .data = &rk805_data },
++	{ .compatible = "rockchip,rk808", .data = &rk808_data },
++	{ .compatible = "rockchip,rk809", .data = &rk809_data },
++	{ .compatible = "rockchip,rk817", .data = &rk817_data },
++	{ .compatible = "rockchip,rk818", .data = &rk818_data },
+ 	{ },
+ };
+ MODULE_DEVICE_TABLE(of, rk8xx_i2c_of_match);
diff --git a/target/linux/rockchip/patches-6.1/233-mfd-rk8xx-Add-rk806-support.patch b/target/linux/rockchip/patches-6.1/233-mfd-rk8xx-Add-rk806-support.patch
new file mode 100644
index 0000000000..2a3453d24c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/233-mfd-rk8xx-Add-rk806-support.patch
@@ -0,0 +1,744 @@
+From 015e9112f29888f35fbb01d7f416d56780f18f2b Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 4 May 2023 19:36:12 +0200
+Subject: [PATCH 233/383] mfd: rk8xx: Add rk806 support
+
+Add support for SPI connected rk806, which is used by the RK3588
+evaluation boards. The PMIC is advertised to support I2C and SPI,
+but the evaluation boards all use SPI. Thus only SPI support is
+added here.
+
+Tested-by: Diederik de Haas <didi.debian@cknow.org> # Rock64, Quartz64 Model A + B
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com> # Pine64 QuartzPro64
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20230504173618.142075-9-sebastian.reichel@collabora.com
+Signed-off-by: Lee Jones <lee@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mfd/Kconfig       |  14 ++
+ drivers/mfd/Makefile      |   1 +
+ drivers/mfd/rk8xx-core.c  |  69 ++++++-
+ drivers/mfd/rk8xx-spi.c   | 124 ++++++++++++
+ include/linux/mfd/rk808.h | 409 ++++++++++++++++++++++++++++++++++++++
+ 5 files changed, 614 insertions(+), 3 deletions(-)
+ create mode 100644 drivers/mfd/rk8xx-spi.c
+
+--- a/drivers/mfd/Kconfig
++++ b/drivers/mfd/Kconfig
+@@ -1220,6 +1220,20 @@ config MFD_RK8XX_I2C
+ 	  through I2C interface. The device supports multiple sub-devices
+ 	  including interrupts, RTC, LDO & DCDC regulators, and onkey.
+ 
++config MFD_RK8XX_SPI
++	tristate "Rockchip RK806 Power Management Chip"
++	depends on SPI && OF
++	select MFD_CORE
++	select REGMAP_SPI
++	select REGMAP_IRQ
++	select MFD_RK8XX
++	help
++	  If you say yes here you get support for the RK806 Power Management
++	  chip.
++	  This driver provides common support for accessing the device
++	  through an SPI interface. The device supports multiple sub-devices
++	  including interrupts, LDO & DCDC regulators, and power on-key.
++
+ config MFD_RN5T618
+ 	tristate "Ricoh RN5T567/618 PMIC"
+ 	depends on I2C
+--- a/drivers/mfd/Makefile
++++ b/drivers/mfd/Makefile
+@@ -225,6 +225,7 @@ obj-$(CONFIG_MFD_NTXEC)		+= ntxec.o
+ obj-$(CONFIG_MFD_RC5T583)	+= rc5t583.o rc5t583-irq.o
+ obj-$(CONFIG_MFD_RK8XX)		+= rk8xx-core.o
+ obj-$(CONFIG_MFD_RK8XX_I2C)	+= rk8xx-i2c.o
++obj-$(CONFIG_MFD_RK8XX_SPI)	+= rk8xx-spi.o
+ obj-$(CONFIG_MFD_RN5T618)	+= rn5t618.o
+ obj-$(CONFIG_MFD_SEC_CORE)	+= sec-core.o sec-irq.o
+ obj-$(CONFIG_MFD_SYSCON)	+= syscon.o
+--- a/drivers/mfd/rk8xx-core.c
++++ b/drivers/mfd/rk8xx-core.c
+@@ -37,6 +37,11 @@ static const struct resource rk805_key_r
+ 	DEFINE_RES_IRQ(RK805_IRQ_PWRON_FALL),
+ };
+ 
++static struct resource rk806_pwrkey_resources[] = {
++	DEFINE_RES_IRQ(RK806_IRQ_PWRON_FALL),
++	DEFINE_RES_IRQ(RK806_IRQ_PWRON_RISE),
++};
++
+ static const struct resource rk817_pwrkey_resources[] = {
+ 	DEFINE_RES_IRQ(RK817_IRQ_PWRON_RISE),
+ 	DEFINE_RES_IRQ(RK817_IRQ_PWRON_FALL),
+@@ -64,6 +69,17 @@ static const struct mfd_cell rk805s[] =
+ 	},
+ };
+ 
++static const struct mfd_cell rk806s[] = {
++	{ .name = "rk805-pinctrl", .id = PLATFORM_DEVID_AUTO, },
++	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_AUTO, },
++	{
++		.name = "rk805-pwrkey",
++		.resources = rk806_pwrkey_resources,
++		.num_resources = ARRAY_SIZE(rk806_pwrkey_resources),
++		.id = PLATFORM_DEVID_AUTO,
++	},
++};
++
+ static const struct mfd_cell rk808s[] = {
+ 	{ .name = "rk808-clkout", .id = PLATFORM_DEVID_NONE, },
+ 	{ .name = "rk808-regulator", .id = PLATFORM_DEVID_NONE, },
+@@ -123,6 +139,12 @@ static const struct rk808_reg_data rk805
+ 	{RK805_THERMAL_REG, TEMP_HOTDIE_MSK, TEMP115C},
+ };
+ 
++static const struct rk808_reg_data rk806_pre_init_reg[] = {
++	{ RK806_GPIO_INT_CONFIG, RK806_INT_POL_MSK, RK806_INT_POL_L },
++	{ RK806_SYS_CFG3, RK806_SLAVE_RESTART_FUN_MSK, RK806_SLAVE_RESTART_FUN_EN },
++	{ RK806_SYS_OPTION, RK806_SYS_ENB2_2M_MSK, RK806_SYS_ENB2_2M_EN },
++};
++
+ static const struct rk808_reg_data rk808_pre_init_reg[] = {
+ 	{ RK808_BUCK3_CONFIG_REG, BUCK_ILMIN_MASK,  BUCK_ILMIN_150MA },
+ 	{ RK808_BUCK4_CONFIG_REG, BUCK_ILMIN_MASK,  BUCK_ILMIN_200MA },
+@@ -273,6 +295,27 @@ static const struct regmap_irq rk805_irq
+ 	},
+ };
+ 
++static const struct regmap_irq rk806_irqs[] = {
++	/* INT_STS0 IRQs */
++	REGMAP_IRQ_REG(RK806_IRQ_PWRON_FALL, 0, RK806_INT_STS_PWRON_FALL),
++	REGMAP_IRQ_REG(RK806_IRQ_PWRON_RISE, 0, RK806_INT_STS_PWRON_RISE),
++	REGMAP_IRQ_REG(RK806_IRQ_PWRON, 0, RK806_INT_STS_PWRON),
++	REGMAP_IRQ_REG(RK806_IRQ_PWRON_LP, 0, RK806_INT_STS_PWRON_LP),
++	REGMAP_IRQ_REG(RK806_IRQ_HOTDIE, 0, RK806_INT_STS_HOTDIE),
++	REGMAP_IRQ_REG(RK806_IRQ_VDC_RISE, 0, RK806_INT_STS_VDC_RISE),
++	REGMAP_IRQ_REG(RK806_IRQ_VDC_FALL, 0, RK806_INT_STS_VDC_FALL),
++	REGMAP_IRQ_REG(RK806_IRQ_VB_LO, 0, RK806_INT_STS_VB_LO),
++	/* INT_STS1 IRQs */
++	REGMAP_IRQ_REG(RK806_IRQ_REV0, 1, RK806_INT_STS_REV0),
++	REGMAP_IRQ_REG(RK806_IRQ_REV1, 1, RK806_INT_STS_REV1),
++	REGMAP_IRQ_REG(RK806_IRQ_REV2, 1, RK806_INT_STS_REV2),
++	REGMAP_IRQ_REG(RK806_IRQ_CRC_ERROR, 1, RK806_INT_STS_CRC_ERROR),
++	REGMAP_IRQ_REG(RK806_IRQ_SLP3_GPIO, 1, RK806_INT_STS_SLP3_GPIO),
++	REGMAP_IRQ_REG(RK806_IRQ_SLP2_GPIO, 1, RK806_INT_STS_SLP2_GPIO),
++	REGMAP_IRQ_REG(RK806_IRQ_SLP1_GPIO, 1, RK806_INT_STS_SLP1_GPIO),
++	REGMAP_IRQ_REG(RK806_IRQ_WDT, 1, RK806_INT_STS_WDT),
++};
++
+ static const struct regmap_irq rk808_irqs[] = {
+ 	/* INT_STS */
+ 	[RK808_IRQ_VOUT_LO] = {
+@@ -423,6 +466,18 @@ static struct regmap_irq_chip rk805_irq_
+ 	.init_ack_masked = true,
+ };
+ 
++static struct regmap_irq_chip rk806_irq_chip = {
++	.name = "rk806",
++	.irqs = rk806_irqs,
++	.num_irqs = ARRAY_SIZE(rk806_irqs),
++	.num_regs = 2,
++	.irq_reg_stride = 2,
++	.mask_base = RK806_INT_MSK0,
++	.status_base = RK806_INT_STS0,
++	.ack_base = RK806_INT_STS0,
++	.init_ack_masked = true,
++};
++
+ static const struct regmap_irq_chip rk808_irq_chip = {
+ 	.name = "rk808",
+ 	.irqs = rk808_irqs,
+@@ -549,6 +604,7 @@ int rk8xx_probe(struct device *dev, int
+ 	struct rk808 *rk808;
+ 	const struct rk808_reg_data *pre_init_reg;
+ 	const struct mfd_cell *cells;
++	int dual_support = 0;
+ 	int nr_pre_init_regs;
+ 	int nr_cells;
+ 	int ret;
+@@ -570,6 +626,14 @@ int rk8xx_probe(struct device *dev, int
+ 		cells = rk805s;
+ 		nr_cells = ARRAY_SIZE(rk805s);
+ 		break;
++	case RK806_ID:
++		rk808->regmap_irq_chip = &rk806_irq_chip;
++		pre_init_reg = rk806_pre_init_reg;
++		nr_pre_init_regs = ARRAY_SIZE(rk806_pre_init_reg);
++		cells = rk806s;
++		nr_cells = ARRAY_SIZE(rk806s);
++		dual_support = IRQF_SHARED;
++		break;
+ 	case RK808_ID:
+ 		rk808->regmap_irq_chip = &rk808_irq_chip;
+ 		pre_init_reg = rk808_pre_init_reg;
+@@ -601,7 +665,7 @@ int rk8xx_probe(struct device *dev, int
+ 		return dev_err_probe(dev, -EINVAL, "No interrupt support, no core IRQ\n");
+ 
+ 	ret = devm_regmap_add_irq_chip(dev, rk808->regmap, irq,
+-				       IRQF_ONESHOT, -1,
++				       IRQF_ONESHOT | dual_support, -1,
+ 				       rk808->regmap_irq_chip, &rk808->irq_data);
+ 	if (ret)
+ 		return dev_err_probe(dev, ret, "Failed to add irq_chip\n");
+@@ -616,8 +680,7 @@ int rk8xx_probe(struct device *dev, int
+ 					     pre_init_reg[i].addr);
+ 	}
+ 
+-	ret = devm_mfd_add_devices(dev, PLATFORM_DEVID_NONE,
+-			      cells, nr_cells, NULL, 0,
++	ret = devm_mfd_add_devices(dev, 0, cells, nr_cells, NULL, 0,
+ 			      regmap_irq_get_domain(rk808->irq_data));
+ 	if (ret)
+ 		return dev_err_probe(dev, ret, "failed to add MFD devices\n");
+--- /dev/null
++++ b/drivers/mfd/rk8xx-spi.c
+@@ -0,0 +1,124 @@
++// SPDX-License-Identifier: GPL-2.0
++/*
++ * Rockchip RK806 Core (SPI) driver
++ *
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ * Copyright (c) 2023 Collabora Ltd.
++ *
++ * Author: Xu Shengfei <xsf@rock-chips.com>
++ * Author: Sebastian Reichel <sebastian.reichel@collabora.com>
++ */
++
++#include <linux/interrupt.h>
++#include <linux/mfd/core.h>
++#include <linux/mfd/rk808.h>
++#include <linux/module.h>
++#include <linux/regmap.h>
++#include <linux/spi/spi.h>
++
++#define RK806_ADDR_SIZE 2
++#define RK806_CMD_WITH_SIZE(CMD, VALUE_BYTES) \
++	(RK806_CMD_##CMD | RK806_CMD_CRC_DIS | (VALUE_BYTES - 1))
++
++static const struct regmap_range rk806_volatile_ranges[] = {
++	regmap_reg_range(RK806_POWER_EN0, RK806_POWER_EN5),
++	regmap_reg_range(RK806_DVS_START_CTRL, RK806_INT_MSK1),
++};
++
++static const struct regmap_access_table rk806_volatile_table = {
++	.yes_ranges = rk806_volatile_ranges,
++	.n_yes_ranges = ARRAY_SIZE(rk806_volatile_ranges),
++};
++
++static const struct regmap_config rk806_regmap_config_spi = {
++	.reg_bits = 16,
++	.val_bits = 8,
++	.max_register = RK806_BUCK_RSERVE_REG5,
++	.cache_type = REGCACHE_RBTREE,
++	.volatile_table = &rk806_volatile_table,
++};
++
++static int rk806_spi_bus_write(void *context, const void *vdata, size_t count)
++{
++	struct device *dev = context;
++	struct spi_device *spi = to_spi_device(dev);
++	struct spi_transfer xfer[2] = { 0 };
++	/* data and thus count includes the register address */
++	size_t val_size = count - RK806_ADDR_SIZE;
++	char cmd;
++
++	if (val_size < 1 || val_size > (RK806_CMD_LEN_MSK + 1))
++		return -EINVAL;
++
++	cmd = RK806_CMD_WITH_SIZE(WRITE, val_size);
++
++	xfer[0].tx_buf = &cmd;
++	xfer[0].len = sizeof(cmd);
++	xfer[1].tx_buf = vdata;
++	xfer[1].len = count;
++
++	return spi_sync_transfer(spi, xfer, ARRAY_SIZE(xfer));
++}
++
++static int rk806_spi_bus_read(void *context, const void *vreg, size_t reg_size,
++			      void *val, size_t val_size)
++{
++	struct device *dev = context;
++	struct spi_device *spi = to_spi_device(dev);
++	char txbuf[3] = { 0 };
++
++	if (reg_size != RK806_ADDR_SIZE ||
++	    val_size < 1 || val_size > (RK806_CMD_LEN_MSK + 1))
++		return -EINVAL;
++
++	/* TX buffer contains command byte followed by two address bytes */
++	txbuf[0] = RK806_CMD_WITH_SIZE(READ, val_size);
++	memcpy(txbuf+1, vreg, reg_size);
++
++	return spi_write_then_read(spi, txbuf, sizeof(txbuf), val, val_size);
++}
++
++static const struct regmap_bus rk806_regmap_bus_spi = {
++	.write = rk806_spi_bus_write,
++	.read = rk806_spi_bus_read,
++	.reg_format_endian_default = REGMAP_ENDIAN_LITTLE,
++};
++
++static int rk8xx_spi_probe(struct spi_device *spi)
++{
++	struct regmap *regmap;
++
++	regmap = devm_regmap_init(&spi->dev, &rk806_regmap_bus_spi,
++				  &spi->dev, &rk806_regmap_config_spi);
++	if (IS_ERR(regmap))
++		return dev_err_probe(&spi->dev, PTR_ERR(regmap),
++				     "Failed to init regmap\n");
++
++	return rk8xx_probe(&spi->dev, RK806_ID, spi->irq, regmap);
++}
++
++static const struct of_device_id rk8xx_spi_of_match[] = {
++	{ .compatible = "rockchip,rk806", },
++	{ }
++};
++MODULE_DEVICE_TABLE(of, rk8xx_spi_of_match);
++
++static const struct spi_device_id rk8xx_spi_id_table[] = {
++	{ "rk806", 0 },
++	{ }
++};
++MODULE_DEVICE_TABLE(spi, rk8xx_spi_id_table);
++
++static struct spi_driver rk8xx_spi_driver = {
++	.driver		= {
++		.name	= "rk8xx-spi",
++		.of_match_table = rk8xx_spi_of_match,
++	},
++	.probe		= rk8xx_spi_probe,
++	.id_table	= rk8xx_spi_id_table,
++};
++module_spi_driver(rk8xx_spi_driver);
++
++MODULE_AUTHOR("Xu Shengfei <xsf@rock-chips.com>");
++MODULE_DESCRIPTION("RK8xx SPI PMIC driver");
++MODULE_LICENSE("GPL");
+--- a/include/linux/mfd/rk808.h
++++ b/include/linux/mfd/rk808.h
+@@ -289,6 +289,414 @@ enum rk805_reg {
+ #define RK805_INT_ALARM_EN		(1 << 3)
+ #define RK805_INT_TIMER_EN		(1 << 2)
+ 
++/* RK806 */
++#define RK806_POWER_EN0			0x0
++#define RK806_POWER_EN1			0x1
++#define RK806_POWER_EN2			0x2
++#define RK806_POWER_EN3			0x3
++#define RK806_POWER_EN4			0x4
++#define RK806_POWER_EN5			0x5
++#define RK806_POWER_SLP_EN0		0x6
++#define RK806_POWER_SLP_EN1		0x7
++#define RK806_POWER_SLP_EN2		0x8
++#define RK806_POWER_DISCHRG_EN0		0x9
++#define RK806_POWER_DISCHRG_EN1		0xA
++#define RK806_POWER_DISCHRG_EN2		0xB
++#define RK806_BUCK_FB_CONFIG		0xC
++#define RK806_SLP_LP_CONFIG		0xD
++#define RK806_POWER_FPWM_EN0		0xE
++#define RK806_POWER_FPWM_EN1		0xF
++#define RK806_BUCK1_CONFIG		0x10
++#define RK806_BUCK2_CONFIG		0x11
++#define RK806_BUCK3_CONFIG		0x12
++#define RK806_BUCK4_CONFIG		0x13
++#define RK806_BUCK5_CONFIG		0x14
++#define RK806_BUCK6_CONFIG		0x15
++#define RK806_BUCK7_CONFIG		0x16
++#define RK806_BUCK8_CONFIG		0x17
++#define RK806_BUCK9_CONFIG		0x18
++#define RK806_BUCK10_CONFIG		0x19
++#define RK806_BUCK1_ON_VSEL		0x1A
++#define RK806_BUCK2_ON_VSEL		0x1B
++#define RK806_BUCK3_ON_VSEL		0x1C
++#define RK806_BUCK4_ON_VSEL		0x1D
++#define RK806_BUCK5_ON_VSEL		0x1E
++#define RK806_BUCK6_ON_VSEL		0x1F
++#define RK806_BUCK7_ON_VSEL		0x20
++#define RK806_BUCK8_ON_VSEL		0x21
++#define RK806_BUCK9_ON_VSEL		0x22
++#define RK806_BUCK10_ON_VSEL		0x23
++#define RK806_BUCK1_SLP_VSEL		0x24
++#define RK806_BUCK2_SLP_VSEL		0x25
++#define RK806_BUCK3_SLP_VSEL		0x26
++#define RK806_BUCK4_SLP_VSEL		0x27
++#define RK806_BUCK5_SLP_VSEL		0x28
++#define RK806_BUCK6_SLP_VSEL		0x29
++#define RK806_BUCK7_SLP_VSEL		0x2A
++#define RK806_BUCK8_SLP_VSEL		0x2B
++#define RK806_BUCK9_SLP_VSEL		0x2D
++#define RK806_BUCK10_SLP_VSEL		0x2E
++#define RK806_BUCK_DEBUG1		0x30
++#define RK806_BUCK_DEBUG2		0x31
++#define RK806_BUCK_DEBUG3		0x32
++#define RK806_BUCK_DEBUG4		0x33
++#define RK806_BUCK_DEBUG5		0x34
++#define RK806_BUCK_DEBUG6		0x35
++#define RK806_BUCK_DEBUG7		0x36
++#define RK806_BUCK_DEBUG8		0x37
++#define RK806_BUCK_DEBUG9		0x38
++#define RK806_BUCK_DEBUG10		0x39
++#define RK806_BUCK_DEBUG11		0x3A
++#define RK806_BUCK_DEBUG12		0x3B
++#define RK806_BUCK_DEBUG13		0x3C
++#define RK806_BUCK_DEBUG14		0x3D
++#define RK806_BUCK_DEBUG15		0x3E
++#define RK806_BUCK_DEBUG16		0x3F
++#define RK806_BUCK_DEBUG17		0x40
++#define RK806_BUCK_DEBUG18		0x41
++#define RK806_NLDO_IMAX			0x42
++#define RK806_NLDO1_ON_VSEL		0x43
++#define RK806_NLDO2_ON_VSEL		0x44
++#define RK806_NLDO3_ON_VSEL		0x45
++#define RK806_NLDO4_ON_VSEL		0x46
++#define RK806_NLDO5_ON_VSEL		0x47
++#define RK806_NLDO1_SLP_VSEL		0x48
++#define RK806_NLDO2_SLP_VSEL		0x49
++#define RK806_NLDO3_SLP_VSEL		0x4A
++#define RK806_NLDO4_SLP_VSEL		0x4B
++#define RK806_NLDO5_SLP_VSEL		0x4C
++#define RK806_PLDO_IMAX			0x4D
++#define RK806_PLDO1_ON_VSEL		0x4E
++#define RK806_PLDO2_ON_VSEL		0x4F
++#define RK806_PLDO3_ON_VSEL		0x50
++#define RK806_PLDO4_ON_VSEL		0x51
++#define RK806_PLDO5_ON_VSEL		0x52
++#define RK806_PLDO6_ON_VSEL		0x53
++#define RK806_PLDO1_SLP_VSEL		0x54
++#define RK806_PLDO2_SLP_VSEL		0x55
++#define RK806_PLDO3_SLP_VSEL		0x56
++#define RK806_PLDO4_SLP_VSEL		0x57
++#define RK806_PLDO5_SLP_VSEL		0x58
++#define RK806_PLDO6_SLP_VSEL		0x59
++#define RK806_CHIP_NAME			0x5A
++#define RK806_CHIP_VER			0x5B
++#define RK806_OTP_VER			0x5C
++#define RK806_SYS_STS			0x5D
++#define RK806_SYS_CFG0			0x5E
++#define RK806_SYS_CFG1			0x5F
++#define RK806_SYS_OPTION		0x61
++#define RK806_SLEEP_CONFIG0		0x62
++#define RK806_SLEEP_CONFIG1		0x63
++#define RK806_SLEEP_CTR_SEL0		0x64
++#define RK806_SLEEP_CTR_SEL1		0x65
++#define RK806_SLEEP_CTR_SEL2		0x66
++#define RK806_SLEEP_CTR_SEL3		0x67
++#define RK806_SLEEP_CTR_SEL4		0x68
++#define RK806_SLEEP_CTR_SEL5		0x69
++#define RK806_DVS_CTRL_SEL0		0x6A
++#define RK806_DVS_CTRL_SEL1		0x6B
++#define RK806_DVS_CTRL_SEL2		0x6C
++#define RK806_DVS_CTRL_SEL3		0x6D
++#define RK806_DVS_CTRL_SEL4		0x6E
++#define RK806_DVS_CTRL_SEL5		0x6F
++#define RK806_DVS_START_CTRL		0x70
++#define RK806_SLEEP_GPIO		0x71
++#define RK806_SYS_CFG3			0x72
++#define RK806_ON_SOURCE			0x74
++#define RK806_OFF_SOURCE		0x75
++#define RK806_PWRON_KEY			0x76
++#define RK806_INT_STS0			0x77
++#define RK806_INT_MSK0			0x78
++#define RK806_INT_STS1			0x79
++#define RK806_INT_MSK1			0x7A
++#define RK806_GPIO_INT_CONFIG		0x7B
++#define RK806_DATA_REG0			0x7C
++#define RK806_DATA_REG1			0x7D
++#define RK806_DATA_REG2			0x7E
++#define RK806_DATA_REG3			0x7F
++#define RK806_DATA_REG4			0x80
++#define RK806_DATA_REG5			0x81
++#define RK806_DATA_REG6			0x82
++#define RK806_DATA_REG7			0x83
++#define RK806_DATA_REG8			0x84
++#define RK806_DATA_REG9			0x85
++#define RK806_DATA_REG10		0x86
++#define RK806_DATA_REG11		0x87
++#define RK806_DATA_REG12		0x88
++#define RK806_DATA_REG13		0x89
++#define RK806_DATA_REG14		0x8A
++#define RK806_DATA_REG15		0x8B
++#define RK806_TM_REG			0x8C
++#define RK806_OTP_EN_REG		0x8D
++#define RK806_FUNC_OTP_EN_REG		0x8E
++#define RK806_TEST_REG1			0x8F
++#define RK806_TEST_REG2			0x90
++#define RK806_TEST_REG3			0x91
++#define RK806_TEST_REG4			0x92
++#define RK806_TEST_REG5			0x93
++#define RK806_BUCK_VSEL_OTP_REG0	0x94
++#define RK806_BUCK_VSEL_OTP_REG1	0x95
++#define RK806_BUCK_VSEL_OTP_REG2	0x96
++#define RK806_BUCK_VSEL_OTP_REG3	0x97
++#define RK806_BUCK_VSEL_OTP_REG4	0x98
++#define RK806_BUCK_VSEL_OTP_REG5	0x99
++#define RK806_BUCK_VSEL_OTP_REG6	0x9A
++#define RK806_BUCK_VSEL_OTP_REG7	0x9B
++#define RK806_BUCK_VSEL_OTP_REG8	0x9C
++#define RK806_BUCK_VSEL_OTP_REG9	0x9D
++#define RK806_NLDO1_VSEL_OTP_REG0	0x9E
++#define RK806_NLDO1_VSEL_OTP_REG1	0x9F
++#define RK806_NLDO1_VSEL_OTP_REG2	0xA0
++#define RK806_NLDO1_VSEL_OTP_REG3	0xA1
++#define RK806_NLDO1_VSEL_OTP_REG4	0xA2
++#define RK806_PLDO_VSEL_OTP_REG0	0xA3
++#define RK806_PLDO_VSEL_OTP_REG1	0xA4
++#define RK806_PLDO_VSEL_OTP_REG2	0xA5
++#define RK806_PLDO_VSEL_OTP_REG3	0xA6
++#define RK806_PLDO_VSEL_OTP_REG4	0xA7
++#define RK806_PLDO_VSEL_OTP_REG5	0xA8
++#define RK806_BUCK_EN_OTP_REG1		0xA9
++#define RK806_NLDO_EN_OTP_REG1		0xAA
++#define RK806_PLDO_EN_OTP_REG1		0xAB
++#define RK806_BUCK_FB_RES_OTP_REG1	0xAC
++#define RK806_OTP_RESEV_REG0		0xAD
++#define RK806_OTP_RESEV_REG1		0xAE
++#define RK806_OTP_RESEV_REG2		0xAF
++#define RK806_OTP_RESEV_REG3		0xB0
++#define RK806_OTP_RESEV_REG4		0xB1
++#define RK806_BUCK_SEQ_REG0		0xB2
++#define RK806_BUCK_SEQ_REG1		0xB3
++#define RK806_BUCK_SEQ_REG2		0xB4
++#define RK806_BUCK_SEQ_REG3		0xB5
++#define RK806_BUCK_SEQ_REG4		0xB6
++#define RK806_BUCK_SEQ_REG5		0xB7
++#define RK806_BUCK_SEQ_REG6		0xB8
++#define RK806_BUCK_SEQ_REG7		0xB9
++#define RK806_BUCK_SEQ_REG8		0xBA
++#define RK806_BUCK_SEQ_REG9		0xBB
++#define RK806_BUCK_SEQ_REG10		0xBC
++#define RK806_BUCK_SEQ_REG11		0xBD
++#define RK806_BUCK_SEQ_REG12		0xBE
++#define RK806_BUCK_SEQ_REG13		0xBF
++#define RK806_BUCK_SEQ_REG14		0xC0
++#define RK806_BUCK_SEQ_REG15		0xC1
++#define RK806_BUCK_SEQ_REG16		0xC2
++#define RK806_BUCK_SEQ_REG17		0xC3
++#define RK806_HK_TRIM_REG1		0xC4
++#define RK806_HK_TRIM_REG2		0xC5
++#define RK806_BUCK_REF_TRIM_REG1	0xC6
++#define RK806_BUCK_REF_TRIM_REG2	0xC7
++#define RK806_BUCK_REF_TRIM_REG3	0xC8
++#define RK806_BUCK_REF_TRIM_REG4	0xC9
++#define RK806_BUCK_REF_TRIM_REG5	0xCA
++#define RK806_BUCK_OSC_TRIM_REG1	0xCB
++#define RK806_BUCK_OSC_TRIM_REG2	0xCC
++#define RK806_BUCK_OSC_TRIM_REG3	0xCD
++#define RK806_BUCK_OSC_TRIM_REG4	0xCE
++#define RK806_BUCK_OSC_TRIM_REG5	0xCF
++#define RK806_BUCK_TRIM_ZCDIOS_REG1	0xD0
++#define RK806_BUCK_TRIM_ZCDIOS_REG2	0xD1
++#define RK806_NLDO_TRIM_REG1		0xD2
++#define RK806_NLDO_TRIM_REG2		0xD3
++#define RK806_NLDO_TRIM_REG3		0xD4
++#define RK806_PLDO_TRIM_REG1		0xD5
++#define RK806_PLDO_TRIM_REG2		0xD6
++#define RK806_PLDO_TRIM_REG3		0xD7
++#define RK806_TRIM_ICOMP_REG1		0xD8
++#define RK806_TRIM_ICOMP_REG2		0xD9
++#define RK806_EFUSE_CONTROL_REGH	0xDA
++#define RK806_FUSE_PROG_REG		0xDB
++#define RK806_MAIN_FSM_STS_REG		0xDD
++#define RK806_FSM_REG			0xDE
++#define RK806_TOP_RESEV_OFFR		0xEC
++#define RK806_TOP_RESEV_POR		0xED
++#define RK806_BUCK_VRSN_REG1		0xEE
++#define RK806_BUCK_VRSN_REG2		0xEF
++#define RK806_NLDO_RLOAD_SEL_REG1	0xF0
++#define RK806_PLDO_RLOAD_SEL_REG1	0xF1
++#define RK806_PLDO_RLOAD_SEL_REG2	0xF2
++#define RK806_BUCK_CMIN_MX_REG1		0xF3
++#define RK806_BUCK_CMIN_MX_REG2		0xF4
++#define RK806_BUCK_FREQ_SET_REG1	0xF5
++#define RK806_BUCK_FREQ_SET_REG2	0xF6
++#define RK806_BUCK_RS_MEABS_REG1	0xF7
++#define RK806_BUCK_RS_MEABS_REG2	0xF8
++#define RK806_BUCK_RS_ZDLEB_REG1	0xF9
++#define RK806_BUCK_RS_ZDLEB_REG2	0xFA
++#define RK806_BUCK_RSERVE_REG1		0xFB
++#define RK806_BUCK_RSERVE_REG2		0xFC
++#define RK806_BUCK_RSERVE_REG3		0xFD
++#define RK806_BUCK_RSERVE_REG4		0xFE
++#define RK806_BUCK_RSERVE_REG5		0xFF
++
++/* INT_STS Register field definitions */
++#define RK806_INT_STS_PWRON_FALL	BIT(0)
++#define RK806_INT_STS_PWRON_RISE	BIT(1)
++#define RK806_INT_STS_PWRON		BIT(2)
++#define RK806_INT_STS_PWRON_LP		BIT(3)
++#define RK806_INT_STS_HOTDIE		BIT(4)
++#define RK806_INT_STS_VDC_RISE		BIT(5)
++#define RK806_INT_STS_VDC_FALL		BIT(6)
++#define RK806_INT_STS_VB_LO		BIT(7)
++#define RK806_INT_STS_REV0		BIT(0)
++#define RK806_INT_STS_REV1		BIT(1)
++#define RK806_INT_STS_REV2		BIT(2)
++#define RK806_INT_STS_CRC_ERROR		BIT(3)
++#define RK806_INT_STS_SLP3_GPIO		BIT(4)
++#define RK806_INT_STS_SLP2_GPIO		BIT(5)
++#define RK806_INT_STS_SLP1_GPIO		BIT(6)
++#define RK806_INT_STS_WDT		BIT(7)
++
++/* SPI command */
++#define RK806_CMD_READ			0
++#define RK806_CMD_WRITE			BIT(7)
++#define RK806_CMD_CRC_EN		BIT(6)
++#define RK806_CMD_CRC_DIS		0
++#define RK806_CMD_LEN_MSK		0x0f
++#define RK806_REG_H			0x00
++
++#define VERSION_AB		0x01
++
++enum rk806_reg_id {
++	RK806_ID_DCDC1 = 0,
++	RK806_ID_DCDC2,
++	RK806_ID_DCDC3,
++	RK806_ID_DCDC4,
++	RK806_ID_DCDC5,
++	RK806_ID_DCDC6,
++	RK806_ID_DCDC7,
++	RK806_ID_DCDC8,
++	RK806_ID_DCDC9,
++	RK806_ID_DCDC10,
++
++	RK806_ID_NLDO1,
++	RK806_ID_NLDO2,
++	RK806_ID_NLDO3,
++	RK806_ID_NLDO4,
++	RK806_ID_NLDO5,
++
++	RK806_ID_PLDO1,
++	RK806_ID_PLDO2,
++	RK806_ID_PLDO3,
++	RK806_ID_PLDO4,
++	RK806_ID_PLDO5,
++	RK806_ID_PLDO6,
++	RK806_ID_END,
++};
++
++/* Define the RK806 IRQ numbers */
++enum rk806_irqs {
++	/* INT_STS0 registers */
++	RK806_IRQ_PWRON_FALL,
++	RK806_IRQ_PWRON_RISE,
++	RK806_IRQ_PWRON,
++	RK806_IRQ_PWRON_LP,
++	RK806_IRQ_HOTDIE,
++	RK806_IRQ_VDC_RISE,
++	RK806_IRQ_VDC_FALL,
++	RK806_IRQ_VB_LO,
++
++	/* INT_STS0 registers */
++	RK806_IRQ_REV0,
++	RK806_IRQ_REV1,
++	RK806_IRQ_REV2,
++	RK806_IRQ_CRC_ERROR,
++	RK806_IRQ_SLP3_GPIO,
++	RK806_IRQ_SLP2_GPIO,
++	RK806_IRQ_SLP1_GPIO,
++	RK806_IRQ_WDT,
++};
++
++/* VCC1 Low Voltage Threshold */
++enum rk806_lv_sel {
++	VB_LO_SEL_2800,
++	VB_LO_SEL_2900,
++	VB_LO_SEL_3000,
++	VB_LO_SEL_3100,
++	VB_LO_SEL_3200,
++	VB_LO_SEL_3300,
++	VB_LO_SEL_3400,
++	VB_LO_SEL_3500,
++};
++
++/* System Shutdown Voltage Select */
++enum rk806_uv_sel {
++	VB_UV_SEL_2700,
++	VB_UV_SEL_2800,
++	VB_UV_SEL_2900,
++	VB_UV_SEL_3000,
++	VB_UV_SEL_3100,
++	VB_UV_SEL_3200,
++	VB_UV_SEL_3300,
++	VB_UV_SEL_3400,
++};
++
++/* Pin Function */
++enum rk806_pwrctrl_fun {
++	PWRCTRL_NULL_FUN,
++	PWRCTRL_SLP_FUN,
++	PWRCTRL_POWOFF_FUN,
++	PWRCTRL_RST_FUN,
++	PWRCTRL_DVS_FUN,
++	PWRCTRL_GPIO_FUN,
++};
++
++/* Pin Polarity */
++enum rk806_pin_level {
++	POL_LOW,
++	POL_HIGH,
++};
++
++enum rk806_vsel_ctr_sel {
++	CTR_BY_NO_EFFECT,
++	CTR_BY_PWRCTRL1,
++	CTR_BY_PWRCTRL2,
++	CTR_BY_PWRCTRL3,
++};
++
++enum rk806_dvs_ctr_sel {
++	CTR_SEL_NO_EFFECT,
++	CTR_SEL_DVS_START1,
++	CTR_SEL_DVS_START2,
++	CTR_SEL_DVS_START3,
++};
++
++enum rk806_pin_dr_sel {
++	RK806_PIN_INPUT,
++	RK806_PIN_OUTPUT,
++};
++
++#define RK806_INT_POL_MSK		BIT(1)
++#define RK806_INT_POL_H			BIT(1)
++#define RK806_INT_POL_L			0
++
++#define RK806_SLAVE_RESTART_FUN_MSK	BIT(1)
++#define RK806_SLAVE_RESTART_FUN_EN	BIT(1)
++#define RK806_SLAVE_RESTART_FUN_OFF	0
++
++#define RK806_SYS_ENB2_2M_MSK		BIT(1)
++#define RK806_SYS_ENB2_2M_EN		BIT(1)
++#define RK806_SYS_ENB2_2M_OFF		0
++
++enum rk806_int_fun {
++	RK806_INT_ONLY,
++	RK806_INT_ADN_WKUP,
++};
++
++enum rk806_dvs_mode {
++	RK806_DVS_NOT_SUPPORT,
++	RK806_DVS_START1,
++	RK806_DVS_START2,
++	RK806_DVS_START3,
++	RK806_DVS_PWRCTRL1,
++	RK806_DVS_PWRCTRL2,
++	RK806_DVS_PWRCTRL3,
++	RK806_DVS_START_PWRCTR1,
++	RK806_DVS_START_PWRCTR2,
++	RK806_DVS_START_PWRCTR3,
++	RK806_DVS_END,
++};
++
+ /* RK808 IRQ Definitions */
+ #define RK808_IRQ_VOUT_LO	0
+ #define RK808_IRQ_VB_LO		1
+@@ -780,6 +1188,7 @@ enum {
+ 
+ enum {
+ 	RK805_ID = 0x8050,
++	RK806_ID = 0x8060,
+ 	RK808_ID = 0x0000,
+ 	RK809_ID = 0x8090,
+ 	RK817_ID = 0x8170,
diff --git a/target/linux/rockchip/patches-6.1/234-regulator-rk808-reduce-struct-rk808-usage.patch b/target/linux/rockchip/patches-6.1/234-regulator-rk808-reduce-struct-rk808-usage.patch
new file mode 100644
index 0000000000..b6782f0487
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/234-regulator-rk808-reduce-struct-rk808-usage.patch
@@ -0,0 +1,83 @@
+From a4500ef729453d29aa91ff2ccbb838818ebb8a35 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 20 Oct 2022 22:42:40 +0200
+Subject: [PATCH 234/383] regulator: rk808: reduce 'struct rk808' usage
+
+Reduce usage of 'struct rk808' (driver data of the parent MFD), so
+that only the chip variant field is still being accessed directly.
+This allows restructuring the MFD driver to support SPI based
+PMICs.
+
+Acked-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221020204251.108565-3-sebastian.reichel@collabora.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/regulator/rk808-regulator.c | 20 ++++++++++++--------
+ 1 file changed, 12 insertions(+), 8 deletions(-)
+
+--- a/drivers/regulator/rk808-regulator.c
++++ b/drivers/regulator/rk808-regulator.c
+@@ -14,7 +14,6 @@
+ 
+ #include <linux/delay.h>
+ #include <linux/gpio.h>
+-#include <linux/i2c.h>
+ #include <linux/module.h>
+ #include <linux/of_device.h>
+ #include <linux/of_gpio.h>
+@@ -1286,19 +1285,23 @@ dt_parse_end:
+ static int rk808_regulator_probe(struct platform_device *pdev)
+ {
+ 	struct rk808 *rk808 = dev_get_drvdata(pdev->dev.parent);
+-	struct i2c_client *client = rk808->i2c;
+ 	struct regulator_config config = {};
+ 	struct regulator_dev *rk808_rdev;
+ 	struct rk808_regulator_data *pdata;
+ 	const struct regulator_desc *regulators;
++	struct regmap *regmap;
+ 	int ret, i, nregulators;
+ 
++	regmap = dev_get_regmap(pdev->dev.parent, NULL);
++	if (!regmap)
++		return -ENODEV;
++
+ 	pdata = devm_kzalloc(&pdev->dev, sizeof(*pdata), GFP_KERNEL);
+ 	if (!pdata)
+ 		return -ENOMEM;
+ 
+-	ret = rk808_regulator_dt_parse_pdata(&pdev->dev, &client->dev,
+-					     rk808->regmap, pdata);
++	ret = rk808_regulator_dt_parse_pdata(&pdev->dev, pdev->dev.parent,
++					     regmap, pdata);
+ 	if (ret < 0)
+ 		return ret;
+ 
+@@ -1326,21 +1329,22 @@ static int rk808_regulator_probe(struct
+ 		nregulators = RK818_NUM_REGULATORS;
+ 		break;
+ 	default:
+-		dev_err(&client->dev, "unsupported RK8XX ID %lu\n",
++		dev_err(&pdev->dev, "unsupported RK8XX ID %lu\n",
+ 			rk808->variant);
+ 		return -EINVAL;
+ 	}
+ 
+-	config.dev = &client->dev;
++	config.dev = &pdev->dev;
++	config.dev->of_node = pdev->dev.parent->of_node;
+ 	config.driver_data = pdata;
+-	config.regmap = rk808->regmap;
++	config.regmap = regmap;
+ 
+ 	/* Instantiate the regulators */
+ 	for (i = 0; i < nregulators; i++) {
+ 		rk808_rdev = devm_regulator_register(&pdev->dev,
+ 						     &regulators[i], &config);
+ 		if (IS_ERR(rk808_rdev)) {
+-			dev_err(&client->dev,
++			dev_err(&pdev->dev,
+ 				"failed to register %d regulator\n", i);
+ 			return PTR_ERR(rk808_rdev);
+ 		}
diff --git a/target/linux/rockchip/patches-6.1/235-regulator-rk808-Use-dev_err_probe.patch b/target/linux/rockchip/patches-6.1/235-regulator-rk808-Use-dev_err_probe.patch
new file mode 100644
index 0000000000..469eb267dd
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/235-regulator-rk808-Use-dev_err_probe.patch
@@ -0,0 +1,35 @@
+From cfd259d1f7d6c8dbc15a68628d52657f0e1c0581 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 20 Oct 2022 22:42:49 +0200
+Subject: [PATCH 235/383] regulator: rk808: Use dev_err_probe
+
+Print error message for potential EPROBE_DEFER error using
+dev_err_probe, which captures the reason in
+/sys/kernel/debug/devices_deferred and otherwise silences
+the message.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221020204251.108565-12-sebastian.reichel@collabora.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/regulator/rk808-regulator.c | 8 +++-----
+ 1 file changed, 3 insertions(+), 5 deletions(-)
+
+--- a/drivers/regulator/rk808-regulator.c
++++ b/drivers/regulator/rk808-regulator.c
+@@ -1343,11 +1343,9 @@ static int rk808_regulator_probe(struct
+ 	for (i = 0; i < nregulators; i++) {
+ 		rk808_rdev = devm_regulator_register(&pdev->dev,
+ 						     &regulators[i], &config);
+-		if (IS_ERR(rk808_rdev)) {
+-			dev_err(&pdev->dev,
+-				"failed to register %d regulator\n", i);
+-			return PTR_ERR(rk808_rdev);
+-		}
++		if (IS_ERR(rk808_rdev))
++			return dev_err_probe(&pdev->dev, PTR_ERR(rk808_rdev),
++					     "failed to register %d regulator\n", i);
+ 	}
+ 
+ 	return 0;
diff --git a/target/linux/rockchip/patches-6.1/236-regulator-Set-PROBE_PREFER_ASYNCHRONOUS-for-drivers-.patch b/target/linux/rockchip/patches-6.1/236-regulator-Set-PROBE_PREFER_ASYNCHRONOUS-for-drivers-.patch
new file mode 100644
index 0000000000..92b2a23770
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/236-regulator-Set-PROBE_PREFER_ASYNCHRONOUS-for-drivers-.patch
@@ -0,0 +1,57 @@
+From 6b7b6e2e7d88a5471315b410e87fcd2dca87d464 Mon Sep 17 00:00:00 2001
+From: Douglas Anderson <dianders@chromium.org>
+Date: Thu, 16 Mar 2023 12:54:38 -0700
+Subject: [PATCH 236/383] regulator: Set PROBE_PREFER_ASYNCHRONOUS for drivers
+ that existed in 4.14
+
+Probing of regulators can be a slow operation and can contribute to
+slower boot times. This is especially true if a regulator is turned on
+at probe time (with regulator-boot-on or regulator-always-on) and the
+regulator requires delays (off-on-time, ramp time, etc).
+
+While the overall kernel is not ready to switch to async probe by
+default, as per the discussion on the mailing lists [1] it is believed
+that the regulator subsystem is in good shape and we can move
+regulator drivers over wholesale. There is no way to just magically
+opt in all regulators (regulators are just normal drivers like
+platform_driver), so we set PROBE_PREFER_ASYNCHRONOUS for all
+regulators found in 'drivers/regulator' individually.
+
+Given the number of drivers touched and the impossibility to test this
+ahead of time, it wouldn't be shocking at all if this caused a
+regression for someone. If there is a regression caused by this patch,
+it's likely to be one of the cases talked about in [1]. As a "quick
+fix", drivers involved in the regression could be fixed by changing
+them to PROBE_FORCE_SYNCHRONOUS. That being said, the correct fix
+would be to directly fix the problem that caused the issue with async
+probe.
+
+The approach here follows a similar approach that was used for the mmc
+subsystem several years ago [2]. In fact, I ran nearly the same python
+script to auto-generate the changes. The only thing I changed was to
+search for "i2c_driver", "spmi_driver", and "spi_driver" in addition
+to "platform_driver".
+
+[1] https://lore.kernel.org/r/06db017f-e985-4434-8d1d-02ca2100cca0@sirena.org.uk
+[2] https://lore.kernel.org/r/20200903232441.2694866-1-dianders@chromium.org/
+
+Signed-off-by: Douglas Anderson <dianders@chromium.org>
+Link: https://lore.kernel.org/r/20230316125351.1.I2a4677392a38db5758dee0788b2cea5872562a82@changeid
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/regulator/rk808-regulator.c | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+--- a/drivers/regulator/rk808-regulator.c
++++ b/drivers/regulator/rk808-regulator.c
+@@ -1354,7 +1354,8 @@ static int rk808_regulator_probe(struct
+ static struct platform_driver rk808_regulator_driver = {
+ 	.probe = rk808_regulator_probe,
+ 	.driver = {
+-		.name = "rk808-regulator"
++		.name = "rk808-regulator",
++		.probe_type = PROBE_PREFER_ASYNCHRONOUS,
+ 	},
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/237-dt-bindings-usb-Add-H616-compatible-string.patch b/target/linux/rockchip/patches-6.1/237-dt-bindings-usb-Add-H616-compatible-string.patch
new file mode 100644
index 0000000000..391082eb7a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/237-dt-bindings-usb-Add-H616-compatible-string.patch
@@ -0,0 +1,39 @@
+From 8cfb9b22a521a6aa2a39f3ca228540deda656cd4 Mon Sep 17 00:00:00 2001
+From: Andre Przywara <andre.przywara@arm.com>
+Date: Mon, 31 Oct 2022 11:13:52 +0000
+Subject: [PATCH 237/383] dt-bindings: usb: Add H616 compatible string
+
+The Allwinner H616 contains four fully OHCI/EHCI compatible USB host
+controllers, so just add their compatible strings to the list of
+generic OHCI/EHCI controllers.
+
+Signed-off-by: Andre Przywara <andre.przywara@arm.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20221031111358.3387297-2-andre.przywara@arm.com
+Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/usb/generic-ehci.yaml | 1 +
+ Documentation/devicetree/bindings/usb/generic-ohci.yaml | 1 +
+ 2 files changed, 2 insertions(+)
+
+--- a/Documentation/devicetree/bindings/usb/generic-ehci.yaml
++++ b/Documentation/devicetree/bindings/usb/generic-ehci.yaml
+@@ -30,6 +30,7 @@ properties:
+               - allwinner,sun4i-a10-ehci
+               - allwinner,sun50i-a64-ehci
+               - allwinner,sun50i-h6-ehci
++              - allwinner,sun50i-h616-ehci
+               - allwinner,sun5i-a13-ehci
+               - allwinner,sun6i-a31-ehci
+               - allwinner,sun7i-a20-ehci
+--- a/Documentation/devicetree/bindings/usb/generic-ohci.yaml
++++ b/Documentation/devicetree/bindings/usb/generic-ohci.yaml
+@@ -20,6 +20,7 @@ properties:
+               - allwinner,sun4i-a10-ohci
+               - allwinner,sun50i-a64-ohci
+               - allwinner,sun50i-h6-ohci
++              - allwinner,sun50i-h616-ohci
+               - allwinner,sun5i-a13-ohci
+               - allwinner,sun6i-a31-ohci
+               - allwinner,sun7i-a20-ohci
diff --git a/target/linux/rockchip/patches-6.1/238-dt-bindings-usb-Convert-multiple-usb-ohci-bindings-t.patch b/target/linux/rockchip/patches-6.1/238-dt-bindings-usb-Convert-multiple-usb-ohci-bindings-t.patch
new file mode 100644
index 0000000000..97053aec05
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/238-dt-bindings-usb-Convert-multiple-usb-ohci-bindings-t.patch
@@ -0,0 +1,178 @@
+From fa350fa7a0dd8a4c7b8b303cc9d754f060f765ab Mon Sep 17 00:00:00 2001
+From: Rob Herring <robh@kernel.org>
+Date: Mon, 23 Jan 2023 21:05:16 -0600
+Subject: [PATCH 238/383] dt-bindings: usb: Convert multiple "usb-ohci"
+ bindings to DT schema
+
+"usb-ohci" is another "generic" OHCI controller compatible string used by
+several platforms. Add it to the generic-ohci.yaml schema and remove all
+the old binding docs.
+
+Marvell pxa-usb.txt has "usb-ohci" in the example, but actual users don't,
+so drop it.
+
+Signed-off-by: Rob Herring <robh@kernel.org>
+Link: https://lore.kernel.org/r/20230110-dt-usb-v3-2-5af0541fcf8c@kernel.org
+Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/powerpc/nintendo/wii.txt         | 10 ------
+ .../devicetree/bindings/usb/generic-ohci.yaml | 28 +++++++++++++--
+ .../devicetree/bindings/usb/ohci-nxp.txt      | 24 -------------
+ .../devicetree/bindings/usb/pxa-usb.txt       |  2 +-
+ .../devicetree/bindings/usb/spear-usb.txt     | 35 -------------------
+ 5 files changed, 26 insertions(+), 73 deletions(-)
+ delete mode 100644 Documentation/devicetree/bindings/usb/ohci-nxp.txt
+ delete mode 100644 Documentation/devicetree/bindings/usb/spear-usb.txt
+
+--- a/Documentation/devicetree/bindings/powerpc/nintendo/wii.txt
++++ b/Documentation/devicetree/bindings/powerpc/nintendo/wii.txt
+@@ -97,16 +97,6 @@ Nintendo Wii device tree
+    - reg : should contain the EXI registers location and length
+    - interrupts : should contain the EXI interrupt
+ 
+-1.g) The Open Host Controller Interface (OHCI) nodes
+-
+-  Represent the USB 1.x Open Host Controller Interfaces.
+-
+-  Required properties:
+-
+-   - compatible : should be "nintendo,hollywood-usb-ohci","usb-ohci"
+-   - reg : should contain the OHCI registers location and length
+-   - interrupts : should contain the OHCI interrupt
+-
+ 1.h) The Enhanced Host Controller Interface (EHCI) node
+ 
+   Represents the USB 2.0 Enhanced Host Controller Interface.
+--- a/Documentation/devicetree/bindings/usb/generic-ohci.yaml
++++ b/Documentation/devicetree/bindings/usb/generic-ohci.yaml
+@@ -6,9 +6,6 @@ $schema: http://devicetree.org/meta-sche
+ 
+ title: USB OHCI Controller
+ 
+-allOf:
+-  - $ref: "usb-hcd.yaml"
+-
+ maintainers:
+   - Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+ 
+@@ -50,6 +47,13 @@ properties:
+               - snps,hsdk-v1.0-ohci
+           - const: generic-ohci
+       - const: generic-ohci
++      - items:
++          - enum:
++              - cavium,octeon-6335-ohci
++              - nintendo,hollywood-usb-ohci
++              - nxp,ohci-nxp
++              - st,spear600-ohci
++          - const: usb-ohci
+ 
+   reg:
+     maxItems: 1
+@@ -119,11 +123,29 @@ properties:
+       - host
+       - otg
+ 
++  transceiver:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description:
++      The associated ISP1301 device. Necessary for the UDC controller for
++      connecting to the USB physical layer.
++
+ required:
+   - compatible
+   - reg
+   - interrupts
+ 
++allOf:
++  - $ref: usb-hcd.yaml
++  - if:
++      not:
++        properties:
++          compatible:
++            contains:
++              const: nxp,ohci-nxp
++    then:
++      properties:
++        transceiver: false
++
+ additionalProperties: false
+ 
+ examples:
+--- a/Documentation/devicetree/bindings/usb/ohci-nxp.txt
++++ /dev/null
+@@ -1,24 +0,0 @@
+-* OHCI controller, NXP ohci-nxp variant
+-
+-Required properties:
+-- compatible: must be "nxp,ohci-nxp"
+-- reg: physical base address of the controller and length of memory mapped
+-  region.
+-- interrupts: The OHCI interrupt
+-- transceiver: phandle of the associated ISP1301 device - this is necessary for
+-               the UDC controller for connecting to the USB physical layer
+-
+-Example (LPC32xx):
+-
+-	isp1301: usb-transceiver@2c {
+-		compatible = "nxp,isp1301";
+-		reg = <0x2c>;
+-	};
+-
+-	ohci@31020000 {
+-		compatible = "nxp,ohci-nxp";
+-		reg = <0x31020000 0x300>;
+-		interrupt-parent = <&mic>;
+-		interrupts = <0x3b 0>;
+-		transceiver = <&isp1301>;
+-	};
+--- a/Documentation/devicetree/bindings/usb/pxa-usb.txt
++++ b/Documentation/devicetree/bindings/usb/pxa-usb.txt
+@@ -22,7 +22,7 @@ Optional properties:
+ Example:
+ 
+ 	usb0: ohci@4c000000 {
+-		compatible = "marvell,pxa-ohci", "usb-ohci";
++		compatible = "marvell,pxa-ohci";
+ 		reg = <0x4c000000 0x100000>;
+ 		interrupts = <18>;
+ 		marvell,enable-port1;
+--- a/Documentation/devicetree/bindings/usb/spear-usb.txt
++++ /dev/null
+@@ -1,35 +0,0 @@
+-ST SPEAr SoC USB controllers:
+------------------------------
+-
+-EHCI:
+------
+-
+-Required properties:
+-- compatible: "st,spear600-ehci"
+-- interrupts: Should contain the EHCI interrupt
+-
+-Example:
+-
+-	ehci@e1800000 {
+-		compatible = "st,spear600-ehci", "usb-ehci";
+-		reg = <0xe1800000 0x1000>;
+-		interrupt-parent = <&vic1>;
+-		interrupts = <27>;
+-	};
+-
+-
+-OHCI:
+------
+-
+-Required properties:
+-- compatible: "st,spear600-ohci"
+-- interrupts: Should contain the OHCI interrupt
+-
+-Example:
+-
+-	ohci@e1900000 {
+-		compatible = "st,spear600-ohci", "usb-ohci";
+-		reg = <0xe1800000 0x1000>;
+-		interrupt-parent = <&vic1>;
+-		interrupts = <26>;
+-	};
diff --git a/target/linux/rockchip/patches-6.1/239-dt-bindings-usb-Convert-OMAP-OHCI-EHCI-bindings-to-s.patch b/target/linux/rockchip/patches-6.1/239-dt-bindings-usb-Convert-OMAP-OHCI-EHCI-bindings-to-s.patch
new file mode 100644
index 0000000000..baa1969cfe
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/239-dt-bindings-usb-Convert-OMAP-OHCI-EHCI-bindings-to-s.patch
@@ -0,0 +1,132 @@
+From 9fa0037b606b7ee403ca098b12ea6dd5711b2c95 Mon Sep 17 00:00:00 2001
+From: Rob Herring <robh@kernel.org>
+Date: Mon, 23 Jan 2023 21:05:17 -0600
+Subject: [PATCH 239/383] dt-bindings: usb: Convert OMAP OHCI/EHCI bindings to
+ schema
+
+The OMAP OHCI and EHCI USB host bindings follow the generic binding, so
+add the compatibles and remove the old txt binding docs.
+
+The examples in omap-usb-host.txt don't match actual users, so update
+them dropping the fallback compatible.
+
+Signed-off-by: Rob Herring <robh@kernel.org>
+Acked-by: Lee Jones <lee@kernel.org>
+Link: https://lore.kernel.org/r/20230110-dt-usb-v3-3-5af0541fcf8c@kernel.org
+Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/mfd/omap-usb-host.txt |  8 ++---
+ .../devicetree/bindings/usb/ehci-omap.txt     | 31 -------------------
+ .../devicetree/bindings/usb/generic-ehci.yaml |  1 +
+ .../devicetree/bindings/usb/generic-ohci.yaml |  4 ++-
+ .../devicetree/bindings/usb/ohci-omap3.txt    | 15 ---------
+ 5 files changed, 8 insertions(+), 51 deletions(-)
+ delete mode 100644 Documentation/devicetree/bindings/usb/ehci-omap.txt
+ delete mode 100644 Documentation/devicetree/bindings/usb/ohci-omap3.txt
+
+--- a/Documentation/devicetree/bindings/mfd/omap-usb-host.txt
++++ b/Documentation/devicetree/bindings/mfd/omap-usb-host.txt
+@@ -64,8 +64,8 @@ Required properties if child node exists
+ Properties for children:
+ 
+ The OMAP HS USB Host subsystem contains EHCI and OHCI controllers.
+-See Documentation/devicetree/bindings/usb/ehci-omap.txt and
+-Documentation/devicetree/bindings/usb/ohci-omap3.txt.
++See Documentation/devicetree/bindings/usb/generic-ehci.yaml and
++Documentation/devicetree/bindings/usb/generic-ohci.yaml.
+ 
+ Example for OMAP4:
+ 
+@@ -78,14 +78,14 @@ usbhshost: usbhshost@4a064000 {
+ 	ranges;
+ 
+ 	usbhsohci: ohci@4a064800 {
+-		compatible = "ti,ohci-omap3", "usb-ohci";
++		compatible = "ti,ohci-omap3";
+ 		reg = <0x4a064800 0x400>;
+ 		interrupt-parent = <&gic>;
+ 		interrupts = <0 76 0x4>;
+ 	};
+ 
+ 	usbhsehci: ehci@4a064c00 {
+-		compatible = "ti,ehci-omap", "usb-ehci";
++		compatible = "ti,ehci-omap";
+ 		reg = <0x4a064c00 0x400>;
+ 		interrupt-parent = <&gic>;
+ 		interrupts = <0 77 0x4>;
+--- a/Documentation/devicetree/bindings/usb/ehci-omap.txt
++++ /dev/null
+@@ -1,31 +0,0 @@
+-OMAP HS USB EHCI controller
+-
+-This device is usually the child of the omap-usb-host
+-Documentation/devicetree/bindings/mfd/omap-usb-host.txt
+-
+-Required properties:
+-
+-- compatible: should be "ti,ehci-omap"
+-- reg: should contain one register range i.e. start and length
+-- interrupts: description of the interrupt line
+-
+-Optional properties:
+-
+-- phys: list of phandles to PHY nodes.
+-  This property is required if at least one of the ports are in
+-  PHY mode i.e. OMAP_EHCI_PORT_MODE_PHY
+-
+-To specify the port mode, see
+-Documentation/devicetree/bindings/mfd/omap-usb-host.txt
+-
+-Example for OMAP4:
+-
+-usbhsehci: ehci@4a064c00 {
+-	compatible = "ti,ehci-omap";
+-	reg = <0x4a064c00 0x400>;
+-	interrupts = <0 77 0x4>;
+-};
+-
+-&usbhsehci {
+-	phys = <&hsusb1_phy 0 &hsusb3_phy>;
+-};
+--- a/Documentation/devicetree/bindings/usb/generic-ehci.yaml
++++ b/Documentation/devicetree/bindings/usb/generic-ehci.yaml
+@@ -74,6 +74,7 @@ properties:
+           - const: usb-ehci
+       - enum:
+           - generic-ehci
++          - ti,ehci-omap
+           - usb-ehci
+ 
+   reg:
+--- a/Documentation/devicetree/bindings/usb/generic-ohci.yaml
++++ b/Documentation/devicetree/bindings/usb/generic-ohci.yaml
+@@ -46,7 +46,9 @@ properties:
+               - ingenic,jz4740-ohci
+               - snps,hsdk-v1.0-ohci
+           - const: generic-ohci
+-      - const: generic-ohci
++      - enum:
++          - generic-ohci
++          - ti,ohci-omap3
+       - items:
+           - enum:
+               - cavium,octeon-6335-ohci
+--- a/Documentation/devicetree/bindings/usb/ohci-omap3.txt
++++ /dev/null
+@@ -1,15 +0,0 @@
+-OMAP HS USB OHCI controller (OMAP3 and later)
+-
+-Required properties:
+-
+-- compatible: should be "ti,ohci-omap3"
+-- reg: should contain one register range i.e. start and length
+-- interrupts: description of the interrupt line
+-
+-Example for OMAP4:
+-
+-usbhsohci: ohci@4a064800 {
+-	compatible = "ti,ohci-omap3";
+-	reg = <0x4a064800 0x400>;
+-	interrupts = <0 76 0x4>;
+-};
diff --git a/target/linux/rockchip/patches-6.1/240-dt-bindings-usb-allow-evaluated-properties-in-OHCI-c.patch b/target/linux/rockchip/patches-6.1/240-dt-bindings-usb-allow-evaluated-properties-in-OHCI-c.patch
new file mode 100644
index 0000000000..6a546fced9
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/240-dt-bindings-usb-allow-evaluated-properties-in-OHCI-c.patch
@@ -0,0 +1,33 @@
+From af3c0f7f051205118c47f893e1e65e4b8b7fa120 Mon Sep 17 00:00:00 2001
+From: =?UTF-8?q?Rafa=C5=82=20Mi=C5=82ecki?= <rafal@milecki.pl>
+Date: Tue, 28 Feb 2023 16:21:05 +0100
+Subject: [PATCH 240/383] dt-bindings: usb: allow evaluated properties in OHCI
+ controllers
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+This binding uses usb-hcd.yaml so replace additionalProperties with
+unevaluatedProperties to allow generic USB HCD properties. It's how EHCI
+and XHCI bindings work too.
+
+Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
+Acked-by: Rob Herring <robh@kernel.org>
+Link: https://lore.kernel.org/r/20230228152105.25358-1-zajec5@gmail.com
+Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/usb/generic-ohci.yaml | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/usb/generic-ohci.yaml
++++ b/Documentation/devicetree/bindings/usb/generic-ohci.yaml
+@@ -148,7 +148,7 @@ allOf:
+       properties:
+         transceiver: false
+ 
+-additionalProperties: false
++unevaluatedProperties: false
+ 
+ examples:
+   - |
diff --git a/target/linux/rockchip/patches-6.1/241-pinctrl-rk805-add-rk806-pinctrl-support.patch b/target/linux/rockchip/patches-6.1/241-pinctrl-rk805-add-rk806-pinctrl-support.patch
new file mode 100644
index 0000000000..522174b3bb
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/241-pinctrl-rk805-add-rk806-pinctrl-support.patch
@@ -0,0 +1,337 @@
+From a55798aaa672a9ea67bdd2c22ca922cff79b1fb4 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 4 Jul 2022 18:56:16 +0200
+Subject: [PATCH 241/383] pinctrl: rk805: add rk806 pinctrl support
+
+Add support for rk806 dvs pinctrl to the existing rk805
+driver.
+
+This has been implemented using shengfei Xu's rk806
+specific driver from the vendor tree as reference.
+
+Co-developed-by: shengfei Xu <xsf@rock-chips.com>
+Signed-off-by: shengfei Xu <xsf@rock-chips.com>
+Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
+Acked-by: Linus Walleij <linus.walleij@linaro.org>
+Tested-by: Diederik de Haas <didi.debian@cknow.org> # Rock64, Quartz64 Model A + B
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com> # Pine64 QuartzPro64
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/pinctrl/pinctrl-rk805.c | 189 ++++++++++++++++++++++++++++----
+ 1 file changed, 168 insertions(+), 21 deletions(-)
+
+--- a/drivers/pinctrl/pinctrl-rk805.c
++++ b/drivers/pinctrl/pinctrl-rk805.c
+@@ -1,10 +1,12 @@
+ // SPDX-License-Identifier: GPL-2.0-or-later
+ /*
+- * Pinctrl driver for Rockchip RK805 PMIC
++ * Pinctrl driver for Rockchip RK805/RK806 PMIC
+  *
+  * Copyright (c) 2017, Fuzhou Rockchip Electronics Co., Ltd
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
+  *
+  * Author: Joseph Chen <chenjh@rock-chips.com>
++ * Author: Xu Shengfei <xsf@rock-chips.com>
+  *
+  * Based on the pinctrl-as3722 driver
+  */
+@@ -44,6 +46,7 @@ struct rk805_pin_group {
+ 
+ /*
+  * @reg: gpio setting register;
++ * @fun_reg: functions select register;
+  * @fun_mask: functions select mask value, when set is gpio;
+  * @dir_mask: input or output mask value, when set is output, otherwise input;
+  * @val_mask: gpio set value, when set is level high, otherwise low;
+@@ -56,6 +59,7 @@ struct rk805_pin_group {
+  */
+ struct rk805_pin_config {
+ 	u8 reg;
++	u8 fun_reg;
+ 	u8 fun_msk;
+ 	u8 dir_msk;
+ 	u8 val_msk;
+@@ -80,22 +84,50 @@ enum rk805_pinmux_option {
+ 	RK805_PINMUX_GPIO,
+ };
+ 
++enum rk806_pinmux_option {
++	RK806_PINMUX_FUN0 = 0,
++	RK806_PINMUX_FUN1,
++	RK806_PINMUX_FUN2,
++	RK806_PINMUX_FUN3,
++	RK806_PINMUX_FUN4,
++	RK806_PINMUX_FUN5,
++};
++
+ enum {
+ 	RK805_GPIO0,
+ 	RK805_GPIO1,
+ };
+ 
++enum {
++	RK806_GPIO_DVS1,
++	RK806_GPIO_DVS2,
++	RK806_GPIO_DVS3
++};
++
+ static const char *const rk805_gpio_groups[] = {
+ 	"gpio0",
+ 	"gpio1",
+ };
+ 
++static const char *const rk806_gpio_groups[] = {
++	"gpio_pwrctrl1",
++	"gpio_pwrctrl2",
++	"gpio_pwrctrl3",
++};
++
+ /* RK805: 2 output only GPIOs */
+ static const struct pinctrl_pin_desc rk805_pins_desc[] = {
+ 	PINCTRL_PIN(RK805_GPIO0, "gpio0"),
+ 	PINCTRL_PIN(RK805_GPIO1, "gpio1"),
+ };
+ 
++/* RK806 */
++static const struct pinctrl_pin_desc rk806_pins_desc[] = {
++	PINCTRL_PIN(RK806_GPIO_DVS1, "gpio_pwrctrl1"),
++	PINCTRL_PIN(RK806_GPIO_DVS2, "gpio_pwrctrl2"),
++	PINCTRL_PIN(RK806_GPIO_DVS3, "gpio_pwrctrl3"),
++};
++
+ static const struct rk805_pin_function rk805_pin_functions[] = {
+ 	{
+ 		.name = "gpio",
+@@ -105,6 +137,45 @@ static const struct rk805_pin_function r
+ 	},
+ };
+ 
++static const struct rk805_pin_function rk806_pin_functions[] = {
++	{
++		.name = "pin_fun0",
++		.groups = rk806_gpio_groups,
++		.ngroups = ARRAY_SIZE(rk806_gpio_groups),
++		.mux_option = RK806_PINMUX_FUN0,
++	},
++	{
++		.name = "pin_fun1",
++		.groups = rk806_gpio_groups,
++		.ngroups = ARRAY_SIZE(rk806_gpio_groups),
++		.mux_option = RK806_PINMUX_FUN1,
++	},
++	{
++		.name = "pin_fun2",
++		.groups = rk806_gpio_groups,
++		.ngroups = ARRAY_SIZE(rk806_gpio_groups),
++		.mux_option = RK806_PINMUX_FUN2,
++	},
++	{
++		.name = "pin_fun3",
++		.groups = rk806_gpio_groups,
++		.ngroups = ARRAY_SIZE(rk806_gpio_groups),
++		.mux_option = RK806_PINMUX_FUN3,
++	},
++	{
++		.name = "pin_fun4",
++		.groups = rk806_gpio_groups,
++		.ngroups = ARRAY_SIZE(rk806_gpio_groups),
++		.mux_option = RK806_PINMUX_FUN4,
++	},
++	{
++		.name = "pin_fun5",
++		.groups = rk806_gpio_groups,
++		.ngroups = ARRAY_SIZE(rk806_gpio_groups),
++		.mux_option = RK806_PINMUX_FUN5,
++	},
++};
++
+ static const struct rk805_pin_group rk805_pin_groups[] = {
+ 	{
+ 		.name = "gpio0",
+@@ -118,6 +189,24 @@ static const struct rk805_pin_group rk80
+ 	},
+ };
+ 
++static const struct rk805_pin_group rk806_pin_groups[] = {
++	{
++		.name = "gpio_pwrctrl1",
++		.pins = { RK806_GPIO_DVS1 },
++		.npins = 1,
++	},
++	{
++		.name = "gpio_pwrctrl2",
++		.pins = { RK806_GPIO_DVS2 },
++		.npins = 1,
++	},
++	{
++		.name = "gpio_pwrctrl3",
++		.pins = { RK806_GPIO_DVS3 },
++		.npins = 1,
++	}
++};
++
+ #define RK805_GPIO0_VAL_MSK	BIT(0)
+ #define RK805_GPIO1_VAL_MSK	BIT(1)
+ 
+@@ -132,6 +221,40 @@ static const struct rk805_pin_config rk8
+ 	},
+ };
+ 
++#define RK806_PWRCTRL1_DR	BIT(0)
++#define RK806_PWRCTRL2_DR	BIT(1)
++#define RK806_PWRCTRL3_DR	BIT(2)
++#define RK806_PWRCTRL1_DATA	BIT(4)
++#define RK806_PWRCTRL2_DATA	BIT(5)
++#define RK806_PWRCTRL3_DATA	BIT(6)
++#define RK806_PWRCTRL1_FUN	GENMASK(2, 0)
++#define RK806_PWRCTRL2_FUN	GENMASK(6, 4)
++#define RK806_PWRCTRL3_FUN	GENMASK(2, 0)
++
++static struct rk805_pin_config rk806_gpio_cfgs[] = {
++	{
++		.fun_reg = RK806_SLEEP_CONFIG0,
++		.fun_msk = RK806_PWRCTRL1_FUN,
++		.reg = RK806_SLEEP_GPIO,
++		.val_msk = RK806_PWRCTRL1_DATA,
++		.dir_msk = RK806_PWRCTRL1_DR,
++	},
++	{
++		.fun_reg = RK806_SLEEP_CONFIG0,
++		.fun_msk = RK806_PWRCTRL2_FUN,
++		.reg = RK806_SLEEP_GPIO,
++		.val_msk = RK806_PWRCTRL2_DATA,
++		.dir_msk = RK806_PWRCTRL2_DR,
++	},
++	{
++		.fun_reg = RK806_SLEEP_CONFIG1,
++		.fun_msk = RK806_PWRCTRL3_FUN,
++		.reg = RK806_SLEEP_GPIO,
++		.val_msk = RK806_PWRCTRL3_DATA,
++		.dir_msk = RK806_PWRCTRL3_DR,
++	}
++};
++
+ /* generic gpio chip */
+ static int rk805_gpio_get(struct gpio_chip *chip, unsigned int offset)
+ {
+@@ -289,19 +412,13 @@ static int _rk805_pinctrl_set_mux(struct
+ 	if (!pci->pin_cfg[offset].fun_msk)
+ 		return 0;
+ 
+-	if (mux == RK805_PINMUX_GPIO) {
+-		ret = regmap_update_bits(pci->rk808->regmap,
+-					 pci->pin_cfg[offset].reg,
+-					 pci->pin_cfg[offset].fun_msk,
+-					 pci->pin_cfg[offset].fun_msk);
+-		if (ret) {
+-			dev_err(pci->dev, "set gpio%d GPIO failed\n", offset);
+-			return ret;
+-		}
+-	} else {
+-		dev_err(pci->dev, "Couldn't find function mux %d\n", mux);
+-		return -EINVAL;
+-	}
++	mux <<= ffs(pci->pin_cfg[offset].fun_msk) - 1;
++	ret = regmap_update_bits(pci->rk808->regmap,
++				 pci->pin_cfg[offset].fun_reg,
++				 pci->pin_cfg[offset].fun_msk, mux);
++
++	if (ret)
++		dev_err(pci->dev, "set gpio%d func%d failed\n", offset, mux);
+ 
+ 	return 0;
+ }
+@@ -317,6 +434,22 @@ static int rk805_pinctrl_set_mux(struct
+ 	return _rk805_pinctrl_set_mux(pctldev, offset, mux);
+ }
+ 
++static int rk805_pinctrl_gpio_request_enable(struct pinctrl_dev *pctldev,
++					     struct pinctrl_gpio_range *range,
++					     unsigned int offset)
++{
++	struct rk805_pctrl_info *pci = pinctrl_dev_get_drvdata(pctldev);
++
++	switch (pci->rk808->variant) {
++	case RK805_ID:
++		return _rk805_pinctrl_set_mux(pctldev, offset, RK805_PINMUX_GPIO);
++	case RK806_ID:
++		return _rk805_pinctrl_set_mux(pctldev, offset, RK806_PINMUX_FUN5);
++	}
++
++	return -ENOTSUPP;
++}
++
+ static int rk805_pmx_gpio_set_direction(struct pinctrl_dev *pctldev,
+ 					struct pinctrl_gpio_range *range,
+ 					unsigned int offset, bool input)
+@@ -324,13 +457,6 @@ static int rk805_pmx_gpio_set_direction(
+ 	struct rk805_pctrl_info *pci = pinctrl_dev_get_drvdata(pctldev);
+ 	int ret;
+ 
+-	/* switch to gpio function */
+-	ret = _rk805_pinctrl_set_mux(pctldev, offset, RK805_PINMUX_GPIO);
+-	if (ret) {
+-		dev_err(pci->dev, "set gpio%d mux failed\n", offset);
+-		return ret;
+-	}
+-
+ 	/* set direction */
+ 	if (!pci->pin_cfg[offset].dir_msk)
+ 		return 0;
+@@ -352,6 +478,7 @@ static const struct pinmux_ops rk805_pin
+ 	.get_function_name	= rk805_pinctrl_get_func_name,
+ 	.get_function_groups	= rk805_pinctrl_get_func_groups,
+ 	.set_mux		= rk805_pinctrl_set_mux,
++	.gpio_request_enable	= rk805_pinctrl_gpio_request_enable,
+ 	.gpio_set_direction	= rk805_pmx_gpio_set_direction,
+ };
+ 
+@@ -364,6 +491,7 @@ static int rk805_pinconf_get(struct pinc
+ 
+ 	switch (param) {
+ 	case PIN_CONFIG_OUTPUT:
++	case PIN_CONFIG_INPUT_ENABLE:
+ 		arg = rk805_gpio_get(&pci->gpio_chip, pin);
+ 		break;
+ 	default:
+@@ -393,6 +521,12 @@ static int rk805_pinconf_set(struct pinc
+ 			rk805_gpio_set(&pci->gpio_chip, pin, arg);
+ 			rk805_pmx_gpio_set_direction(pctldev, NULL, pin, false);
+ 			break;
++		case PIN_CONFIG_INPUT_ENABLE:
++			if (pci->rk808->variant != RK805_ID && arg) {
++				rk805_pmx_gpio_set_direction(pctldev, NULL, pin, true);
++				break;
++			}
++			fallthrough;
+ 		default:
+ 			dev_err(pci->dev, "Properties not supported\n");
+ 			return -ENOTSUPP;
+@@ -448,6 +582,18 @@ static int rk805_pinctrl_probe(struct pl
+ 		pci->pin_cfg = rk805_gpio_cfgs;
+ 		pci->gpio_chip.ngpio = ARRAY_SIZE(rk805_gpio_cfgs);
+ 		break;
++	case RK806_ID:
++		pci->pins = rk806_pins_desc;
++		pci->num_pins = ARRAY_SIZE(rk806_pins_desc);
++		pci->functions = rk806_pin_functions;
++		pci->num_functions = ARRAY_SIZE(rk806_pin_functions);
++		pci->groups = rk806_pin_groups;
++		pci->num_pin_groups = ARRAY_SIZE(rk806_pin_groups);
++		pci->pinctrl_desc.pins = rk806_pins_desc;
++		pci->pinctrl_desc.npins = ARRAY_SIZE(rk806_pins_desc);
++		pci->pin_cfg = rk806_gpio_cfgs;
++		pci->gpio_chip.ngpio = ARRAY_SIZE(rk806_gpio_cfgs);
++		break;
+ 	default:
+ 		dev_err(&pdev->dev, "unsupported RK805 ID %lu\n",
+ 			pci->rk808->variant);
+@@ -488,5 +634,6 @@ static struct platform_driver rk805_pinc
+ module_platform_driver(rk805_pinctrl_driver);
+ 
+ MODULE_DESCRIPTION("RK805 pin control and GPIO driver");
++MODULE_AUTHOR("Xu Shengfei <xsf@rock-chips.com>");
+ MODULE_AUTHOR("Joseph Chen <chenjh@rock-chips.com>");
+ MODULE_LICENSE("GPL v2");
diff --git a/target/linux/rockchip/patches-6.1/242-regulator-expose-regulator_find_closest_bigger.patch b/target/linux/rockchip/patches-6.1/242-regulator-expose-regulator_find_closest_bigger.patch
new file mode 100644
index 0000000000..72e2949a79
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/242-regulator-expose-regulator_find_closest_bigger.patch
@@ -0,0 +1,75 @@
+From b9129bbe59b3d53039c91b9daa908af84822b614 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Fri, 9 Sep 2022 18:24:43 +0200
+Subject: [PATCH 242/383] regulator: expose regulator_find_closest_bigger
+
+Expose and document the table lookup logic used by
+regulator_set_ramp_delay_regmap, so that it can be
+reused for devices that cannot be configured via
+regulator_set_ramp_delay_regmap.
+
+Tested-by: Diederik de Haas <didi.debian@cknow.org> # Rock64, Quartz64 Model A + B
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com> # Pine64 QuartzPro64
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/regulator/helpers.c      | 22 ++++++++++++++++++----
+ include/linux/regulator/driver.h |  2 ++
+ 2 files changed, 20 insertions(+), 4 deletions(-)
+
+--- a/drivers/regulator/helpers.c
++++ b/drivers/regulator/helpers.c
+@@ -902,8 +902,21 @@ bool regulator_is_equal(struct regulator
+ }
+ EXPORT_SYMBOL_GPL(regulator_is_equal);
+ 
+-static int find_closest_bigger(unsigned int target, const unsigned int *table,
+-			       unsigned int num_sel, unsigned int *sel)
++/**
++ * regulator_find_closest_bigger - helper to find offset in ramp delay table
++ *
++ * @target: targeted ramp_delay
++ * @table: table with supported ramp delays
++ * @num_sel: number of entries in the table
++ * @sel: Pointer to store table offset
++ *
++ * This is the internal helper used by regulator_set_ramp_delay_regmap to
++ * map ramp delay to register value. It should only be used directly if
++ * regulator_set_ramp_delay_regmap cannot handle a specific device setup
++ * (e.g. because the value is split over multiple registers).
++ */
++int regulator_find_closest_bigger(unsigned int target, const unsigned int *table,
++				  unsigned int num_sel, unsigned int *sel)
+ {
+ 	unsigned int s, tmp, max, maxsel = 0;
+ 	bool found = false;
+@@ -933,6 +946,7 @@ static int find_closest_bigger(unsigned
+ 
+ 	return 0;
+ }
++EXPORT_SYMBOL_GPL(regulator_find_closest_bigger);
+ 
+ /**
+  * regulator_set_ramp_delay_regmap - set_ramp_delay() helper
+@@ -951,8 +965,8 @@ int regulator_set_ramp_delay_regmap(stru
+ 	if (WARN_ON(!rdev->desc->n_ramp_values || !rdev->desc->ramp_delay_table))
+ 		return -EINVAL;
+ 
+-	ret = find_closest_bigger(ramp_delay, rdev->desc->ramp_delay_table,
+-				  rdev->desc->n_ramp_values, &sel);
++	ret = regulator_find_closest_bigger(ramp_delay, rdev->desc->ramp_delay_table,
++					    rdev->desc->n_ramp_values, &sel);
+ 
+ 	if (ret) {
+ 		dev_warn(rdev_get_dev(rdev),
+--- a/include/linux/regulator/driver.h
++++ b/include/linux/regulator/driver.h
+@@ -758,6 +758,8 @@ int regulator_set_current_limit_regmap(s
+ 				       int min_uA, int max_uA);
+ int regulator_get_current_limit_regmap(struct regulator_dev *rdev);
+ void *regulator_get_init_drvdata(struct regulator_init_data *reg_init_data);
++int regulator_find_closest_bigger(unsigned int target, const unsigned int *table,
++				  unsigned int num_sel, unsigned int *sel);
+ int regulator_set_ramp_delay_regmap(struct regulator_dev *rdev, int ramp_delay);
+ int regulator_sync_voltage_rdev(struct regulator_dev *rdev);
+ 
diff --git a/target/linux/rockchip/patches-6.1/243-regulator-rk808-fix-asynchronous-probing.patch b/target/linux/rockchip/patches-6.1/243-regulator-rk808-fix-asynchronous-probing.patch
new file mode 100644
index 0000000000..17f602951d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/243-regulator-rk808-fix-asynchronous-probing.patch
@@ -0,0 +1,30 @@
+From 7cb5fe497fa7e15ae9d244da966f7931ad7a7136 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 3 May 2023 18:38:26 +0200
+Subject: [PATCH 243/383] regulator: rk808: fix asynchronous probing
+
+If the probe routine fails with -EPROBE_DEFER after taking over the
+OF node from its parent driver, reprobing triggers pinctrl_bind_pins()
+and that will fail. Fix this by setting of_node_reused, so that the
+device does not try to setup pin muxing.
+
+For me this always happens once the driver is marked to prefer async
+probing and never happens without that flag.
+
+Fixes: 259b93b21a9f ("regulator: Set PROBE_PREFER_ASYNCHRONOUS for drivers that existed in 4.14")
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/regulator/rk808-regulator.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/drivers/regulator/rk808-regulator.c
++++ b/drivers/regulator/rk808-regulator.c
+@@ -1336,6 +1336,7 @@ static int rk808_regulator_probe(struct
+ 
+ 	config.dev = &pdev->dev;
+ 	config.dev->of_node = pdev->dev.parent->of_node;
++	config.dev->of_node_reused = true;
+ 	config.driver_data = pdata;
+ 	config.regmap = regmap;
+ 
diff --git a/target/linux/rockchip/patches-6.1/244-regulator-rk808-cleanup-parent-device-usage.patch b/target/linux/rockchip/patches-6.1/244-regulator-rk808-cleanup-parent-device-usage.patch
new file mode 100644
index 0000000000..0c6f55960d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/244-regulator-rk808-cleanup-parent-device-usage.patch
@@ -0,0 +1,69 @@
+From f35a1161e73b4390bac1d5a86d46ae260743fe1e Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 3 May 2023 19:19:42 +0200
+Subject: [PATCH 244/383] regulator: rk808: cleanup parent device usage
+
+By overridering the device's of_node a bit earlier we can
+get the GPIOs and any other DT properties from our own
+device instead of relying on the parent device.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/regulator/rk808-regulator.c | 13 ++++++-------
+ 1 file changed, 6 insertions(+), 7 deletions(-)
+
+--- a/drivers/regulator/rk808-regulator.c
++++ b/drivers/regulator/rk808-regulator.c
+@@ -1245,20 +1245,19 @@ static const struct regulator_desc rk818
+ };
+ 
+ static int rk808_regulator_dt_parse_pdata(struct device *dev,
+-				   struct device *client_dev,
+ 				   struct regmap *map,
+ 				   struct rk808_regulator_data *pdata)
+ {
+ 	struct device_node *np;
+ 	int tmp, ret = 0, i;
+ 
+-	np = of_get_child_by_name(client_dev->of_node, "regulators");
++	np = of_get_child_by_name(dev->of_node, "regulators");
+ 	if (!np)
+ 		return -ENXIO;
+ 
+ 	for (i = 0; i < ARRAY_SIZE(pdata->dvs_gpio); i++) {
+ 		pdata->dvs_gpio[i] =
+-			devm_gpiod_get_index_optional(client_dev, "dvs", i,
++			devm_gpiod_get_index_optional(dev, "dvs", i,
+ 						      GPIOD_OUT_LOW);
+ 		if (IS_ERR(pdata->dvs_gpio[i])) {
+ 			ret = PTR_ERR(pdata->dvs_gpio[i]);
+@@ -1292,6 +1291,9 @@ static int rk808_regulator_probe(struct
+ 	struct regmap *regmap;
+ 	int ret, i, nregulators;
+ 
++	pdev->dev.of_node = pdev->dev.parent->of_node;
++	pdev->dev.of_node_reused = true;
++
+ 	regmap = dev_get_regmap(pdev->dev.parent, NULL);
+ 	if (!regmap)
+ 		return -ENODEV;
+@@ -1300,8 +1302,7 @@ static int rk808_regulator_probe(struct
+ 	if (!pdata)
+ 		return -ENOMEM;
+ 
+-	ret = rk808_regulator_dt_parse_pdata(&pdev->dev, pdev->dev.parent,
+-					     regmap, pdata);
++	ret = rk808_regulator_dt_parse_pdata(&pdev->dev, regmap, pdata);
+ 	if (ret < 0)
+ 		return ret;
+ 
+@@ -1335,8 +1336,6 @@ static int rk808_regulator_probe(struct
+ 	}
+ 
+ 	config.dev = &pdev->dev;
+-	config.dev->of_node = pdev->dev.parent->of_node;
+-	config.dev->of_node_reused = true;
+ 	config.driver_data = pdata;
+ 	config.regmap = regmap;
+ 
diff --git a/target/linux/rockchip/patches-6.1/245-regulator-rk808-revert-to-synchronous-probing.patch b/target/linux/rockchip/patches-6.1/245-regulator-rk808-revert-to-synchronous-probing.patch
new file mode 100644
index 0000000000..4e98ec2cca
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/245-regulator-rk808-revert-to-synchronous-probing.patch
@@ -0,0 +1,39 @@
+From f28eadc90e6b85e0cce2ac937dcea39f998d0183 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 4 May 2023 16:11:48 +0200
+Subject: [PATCH 245/383] regulator: rk808: revert to synchronous probing
+
+The rk808 driver registers a bunch of regulator devices in a loop.
+If one of the later regulators fails to register (usually because
+its input supply is not yet available) everything will be unrolled
+(i.e. previously registered regulators will be unregistered). With
+asynchronous registration there might already be consumers, though.
+We do not have the necessary infrastructure to properly unregister
+the consumer device, so this scenario should be avoided.
+
+First checking all input supplies or disallowing usage of the regulators
+until all are registered does not work, since there can be
+self-references (e.g. DCDC channels providing the supply of LDOs).
+
+The only sensible solution I found is registering the regulator devices
+asynchronously, so that we do not have to unroll. Since this is a major
+rework let's revert back to synchronous probing for now to fix the issue
+at hand.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/regulator/rk808-regulator.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/regulator/rk808-regulator.c
++++ b/drivers/regulator/rk808-regulator.c
+@@ -1355,7 +1355,7 @@ static struct platform_driver rk808_regu
+ 	.probe = rk808_regulator_probe,
+ 	.driver = {
+ 		.name = "rk808-regulator",
+-		.probe_type = PROBE_PREFER_ASYNCHRONOUS,
++		.probe_type = PROBE_FORCE_SYNCHRONOUS,
+ 	},
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/246-regulator-rk808-add-rk806-support.patch b/target/linux/rockchip/patches-6.1/246-regulator-rk808-add-rk806-support.patch
new file mode 100644
index 0000000000..3608921b83
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/246-regulator-rk808-add-rk806-support.patch
@@ -0,0 +1,481 @@
+From e2d9ac60fbb2b0c958bc6c2b2c112acfa7003834 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 20 Oct 2022 22:08:09 +0200
+Subject: [PATCH 246/383] regulator: rk808: add rk806 support
+
+Add rk806 support to the existing rk808 regulator
+driver.
+
+This has been implemented using shengfei Xu's rk806
+specific driver from the vendor tree as reference.
+
+Co-developed-by: shengfei Xu <xsf@rock-chips.com>
+Signed-off-by: shengfei Xu <xsf@rock-chips.com>
+Reviewed-by: Matti Vaittinen <mazziesaccount@gmail.com>
+Tested-by: Diederik de Haas <didi.debian@cknow.org> # Rock64, Quartz64 Model A + B
+Tested-by: Vincent Legoll <vincent.legoll@gmail.com> # Pine64 QuartzPro64
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/regulator/rk808-regulator.c | 385 ++++++++++++++++++++++++++++
+ 1 file changed, 385 insertions(+)
+
+--- a/drivers/regulator/rk808-regulator.c
++++ b/drivers/regulator/rk808-regulator.c
+@@ -3,9 +3,11 @@
+  * Regulator driver for Rockchip RK805/RK808/RK818
+  *
+  * Copyright (c) 2014, Fuzhou Rockchip Electronics Co., Ltd
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
+  *
+  * Author: Chris Zhong <zyw@rock-chips.com>
+  * Author: Zhang Qing <zhangqing@rock-chips.com>
++ * Author: Xu Shengfei <xsf@rock-chips.com>
+  *
+  * Copyright (C) 2016 PHYTEC Messtechnik GmbH
+  *
+@@ -39,6 +41,13 @@
+ #define RK818_LDO3_ON_VSEL_MASK		0xf
+ #define RK818_BOOST_ON_VSEL_MASK	0xe0
+ 
++#define RK806_DCDC_SLP_REG_OFFSET	0x0A
++#define RK806_NLDO_SLP_REG_OFFSET	0x05
++#define RK806_PLDO_SLP_REG_OFFSET	0x06
++
++#define RK806_BUCK_SEL_CNT		0xff
++#define RK806_LDO_SEL_CNT		0xff
++
+ /* Ramp rate definitions for buck1 / buck2 only */
+ #define RK808_RAMP_RATE_OFFSET		3
+ #define RK808_RAMP_RATE_MASK		(3 << RK808_RAMP_RATE_OFFSET)
+@@ -117,6 +126,34 @@
+ 	RK8XX_DESC_COM(_id, _match, _supply, _min, _max, _step, _vreg,	\
+ 	_vmask, _ereg, _emask, 0, 0, _etime, &rk805_reg_ops)
+ 
++#define RK806_REGULATOR(_name, _supply_name, _id, _ops,\
++			_n_voltages, _vr, _er, _lr, ctrl_bit,\
++			_rr, _rm, _rt)\
++[_id] = {\
++		.name = _name,\
++		.supply_name = _supply_name,\
++		.of_match = of_match_ptr(_name),\
++		.regulators_node = of_match_ptr("regulators"),\
++		.id = _id,\
++		.ops = &_ops,\
++		.type = REGULATOR_VOLTAGE,\
++		.n_voltages = _n_voltages,\
++		.linear_ranges = _lr,\
++		.n_linear_ranges = ARRAY_SIZE(_lr),\
++		.vsel_reg = _vr,\
++		.vsel_mask = 0xff,\
++		.enable_reg = _er,\
++		.enable_mask = ENABLE_MASK(ctrl_bit),\
++		.enable_val = ENABLE_MASK(ctrl_bit),\
++		.disable_val = DISABLE_VAL(ctrl_bit),\
++		.of_map_mode = rk8xx_regulator_of_map_mode,\
++		.ramp_reg = _rr,\
++		.ramp_mask = _rm,\
++		.ramp_delay_table = _rt, \
++		.n_ramp_values = ARRAY_SIZE(_rt), \
++		.owner = THIS_MODULE,\
++	}
++
+ #define RK8XX_DESC(_id, _match, _supply, _min, _max, _step, _vreg,	\
+ 	_vmask, _ereg, _emask, _etime)					\
+ 	RK8XX_DESC_COM(_id, _match, _supply, _min, _max, _step, _vreg,	\
+@@ -153,6 +190,17 @@
+ 	RKXX_DESC_SWITCH_COM(_id, _match, _supply, _ereg, _emask,	\
+ 	0, 0, &rk808_switch_ops)
+ 
++struct rk8xx_register_bit {
++	u8 reg;
++	u8 bit;
++};
++
++#define RK8XX_REG_BIT(_reg, _bit)					\
++	{								\
++		.reg = _reg,						\
++		.bit = BIT(_bit),						\
++	}
++
+ struct rk808_regulator_data {
+ 	struct gpio_desc *dvs_gpio[2];
+ };
+@@ -216,6 +264,133 @@ static const unsigned int rk817_buck1_4_
+ 	3000, 6300, 12500, 25000
+ };
+ 
++static int rk806_set_mode_dcdc(struct regulator_dev *rdev, unsigned int mode)
++{
++	int rid = rdev_get_id(rdev);
++	int ctr_bit, reg;
++
++	reg = RK806_POWER_FPWM_EN0 + rid / 8;
++	ctr_bit = rid % 8;
++
++	switch (mode) {
++	case REGULATOR_MODE_FAST:
++		return regmap_update_bits(rdev->regmap, reg,
++					  PWM_MODE_MSK << ctr_bit,
++					  FPWM_MODE << ctr_bit);
++	case REGULATOR_MODE_NORMAL:
++		return regmap_update_bits(rdev->regmap, reg,
++					  PWM_MODE_MSK << ctr_bit,
++					  AUTO_PWM_MODE << ctr_bit);
++	default:
++		dev_err(rdev_get_dev(rdev), "mode unsupported: %u\n", mode);
++		return -EINVAL;
++	}
++
++	return 0;
++}
++
++static unsigned int rk806_get_mode_dcdc(struct regulator_dev *rdev)
++{
++	int rid = rdev_get_id(rdev);
++	int ctr_bit, reg;
++	unsigned int val;
++	int err;
++
++	reg = RK806_POWER_FPWM_EN0 + rid / 8;
++	ctr_bit = rid % 8;
++
++	err = regmap_read(rdev->regmap, reg, &val);
++	if (err)
++		return err;
++
++	if ((val >> ctr_bit) & FPWM_MODE)
++		return REGULATOR_MODE_FAST;
++	else
++		return REGULATOR_MODE_NORMAL;
++}
++
++static const struct rk8xx_register_bit rk806_dcdc_rate2[] = {
++	RK8XX_REG_BIT(0xEB, 0),
++	RK8XX_REG_BIT(0xEB, 1),
++	RK8XX_REG_BIT(0xEB, 2),
++	RK8XX_REG_BIT(0xEB, 3),
++	RK8XX_REG_BIT(0xEB, 4),
++	RK8XX_REG_BIT(0xEB, 5),
++	RK8XX_REG_BIT(0xEB, 6),
++	RK8XX_REG_BIT(0xEB, 7),
++	RK8XX_REG_BIT(0xEA, 0),
++	RK8XX_REG_BIT(0xEA, 1),
++};
++
++static const unsigned int rk806_ramp_delay_table_dcdc[] = {
++	50000, 25000, 12500, 6250, 3125, 1560, 961, 390
++};
++
++static int rk806_set_ramp_delay_dcdc(struct regulator_dev *rdev, int ramp_delay)
++{
++	int rid = rdev_get_id(rdev);
++	int regval, ramp_value, ret;
++
++	ret = regulator_find_closest_bigger(ramp_delay, rdev->desc->ramp_delay_table,
++					    rdev->desc->n_ramp_values, &ramp_value);
++	if (ret) {
++		dev_warn(rdev_get_dev(rdev),
++			 "Can't set ramp-delay %u, setting %u\n", ramp_delay,
++			 rdev->desc->ramp_delay_table[ramp_value]);
++	}
++
++	regval = ramp_value << (ffs(rdev->desc->ramp_mask) - 1);
++
++	ret = regmap_update_bits(rdev->regmap, rdev->desc->ramp_reg,
++				 rdev->desc->ramp_mask, regval);
++	if (ret)
++		return ret;
++
++	/*
++	 * The above is effectively a copy of regulator_set_ramp_delay_regmap(),
++	 * but that only stores the lower 2 bits for rk806 DCDC ramp. The MSB must
++	 * be stored in a separate register, so this open codes the implementation
++	 * to have access to the ramp_value.
++	 */
++
++	regval = (ramp_value >> 2) & 0x1 ? rk806_dcdc_rate2[rid].bit : 0;
++	return regmap_update_bits(rdev->regmap, rk806_dcdc_rate2[rid].reg,
++				  rk806_dcdc_rate2[rid].bit,
++				  regval);
++}
++
++static const unsigned int rk806_ramp_delay_table_ldo[] = {
++	100000, 50000, 25000, 12500, 6280, 3120, 1900, 780
++};
++
++static int rk806_set_suspend_voltage_range(struct regulator_dev *rdev, int reg_offset, int uv)
++{
++	int sel = regulator_map_voltage_linear_range(rdev, uv, uv);
++	unsigned int reg;
++
++	if (sel < 0)
++		return -EINVAL;
++
++	reg = rdev->desc->vsel_reg + reg_offset;
++
++	return regmap_update_bits(rdev->regmap, reg, rdev->desc->vsel_mask, sel);
++}
++
++static int rk806_set_suspend_voltage_range_dcdc(struct regulator_dev *rdev, int uv)
++{
++	return rk806_set_suspend_voltage_range(rdev, RK806_DCDC_SLP_REG_OFFSET, uv);
++}
++
++static int rk806_set_suspend_voltage_range_nldo(struct regulator_dev *rdev, int uv)
++{
++	return rk806_set_suspend_voltage_range(rdev, RK806_NLDO_SLP_REG_OFFSET, uv);
++}
++
++static int rk806_set_suspend_voltage_range_pldo(struct regulator_dev *rdev, int uv)
++{
++	return rk806_set_suspend_voltage_range(rdev, RK806_PLDO_SLP_REG_OFFSET, uv);
++}
++
+ static int rk808_buck1_2_get_voltage_sel_regmap(struct regulator_dev *rdev)
+ {
+ 	struct rk808_regulator_data *pdata = rdev_get_drvdata(rdev);
+@@ -393,6 +568,47 @@ static int rk805_set_suspend_disable(str
+ 				  0);
+ }
+ 
++static const struct rk8xx_register_bit rk806_suspend_bits[] = {
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN0, 0),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN0, 1),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN0, 2),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN0, 3),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN0, 4),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN0, 5),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN0, 6),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN0, 7),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN1, 6),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN1, 7),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN1, 0),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN1, 1),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN1, 2),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN1, 3),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN1, 4),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN2, 1),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN2, 2),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN2, 3),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN2, 4),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN2, 5),
++	RK8XX_REG_BIT(RK806_POWER_SLP_EN2, 0),
++};
++
++static int rk806_set_suspend_enable(struct regulator_dev *rdev)
++{
++	int rid = rdev_get_id(rdev);
++
++	return regmap_update_bits(rdev->regmap, rk806_suspend_bits[rid].reg,
++				  rk806_suspend_bits[rid].bit,
++				  rk806_suspend_bits[rid].bit);
++}
++
++static int rk806_set_suspend_disable(struct regulator_dev *rdev)
++{
++	int rid = rdev_get_id(rdev);
++
++	return regmap_update_bits(rdev->regmap, rk806_suspend_bits[rid].reg,
++				  rk806_suspend_bits[rid].bit, 0);
++}
++
+ static int rk808_set_suspend_enable(struct regulator_dev *rdev)
+ {
+ 	unsigned int reg;
+@@ -561,6 +777,64 @@ static const struct regulator_ops rk805_
+ 	.set_suspend_disable    = rk805_set_suspend_disable,
+ };
+ 
++static const struct regulator_ops rk806_ops_dcdc = {
++	.list_voltage		= regulator_list_voltage_linear_range,
++	.map_voltage		= regulator_map_voltage_linear_range,
++	.get_voltage_sel	= regulator_get_voltage_sel_regmap,
++	.set_voltage_sel        = regulator_set_voltage_sel_regmap,
++	.set_voltage_time_sel	= regulator_set_voltage_time_sel,
++	.set_mode		= rk806_set_mode_dcdc,
++	.get_mode		= rk806_get_mode_dcdc,
++
++	.enable			= regulator_enable_regmap,
++	.disable		= regulator_disable_regmap,
++	.is_enabled		= rk8xx_is_enabled_wmsk_regmap,
++
++	.set_suspend_mode	= rk806_set_mode_dcdc,
++	.set_ramp_delay		= rk806_set_ramp_delay_dcdc,
++
++	.set_suspend_voltage	= rk806_set_suspend_voltage_range_dcdc,
++	.set_suspend_enable	= rk806_set_suspend_enable,
++	.set_suspend_disable	= rk806_set_suspend_disable,
++};
++
++static const struct regulator_ops rk806_ops_nldo = {
++	.list_voltage		= regulator_list_voltage_linear_range,
++	.map_voltage		= regulator_map_voltage_linear_range,
++	.get_voltage_sel	= regulator_get_voltage_sel_regmap,
++	.set_voltage_sel        = regulator_set_voltage_sel_regmap,
++	.set_voltage_time_sel	= regulator_set_voltage_time_sel,
++
++	.enable			= regulator_enable_regmap,
++	.disable		= regulator_disable_regmap,
++	.is_enabled		= regulator_is_enabled_regmap,
++
++	.set_ramp_delay		= regulator_set_ramp_delay_regmap,
++
++	.set_suspend_voltage	= rk806_set_suspend_voltage_range_nldo,
++	.set_suspend_enable	= rk806_set_suspend_enable,
++	.set_suspend_disable	= rk806_set_suspend_disable,
++};
++
++static const struct regulator_ops rk806_ops_pldo = {
++	.list_voltage		= regulator_list_voltage_linear_range,
++	.map_voltage		= regulator_map_voltage_linear_range,
++
++	.get_voltage_sel	= regulator_get_voltage_sel_regmap,
++	.set_voltage_sel        = regulator_set_voltage_sel_regmap,
++	.set_voltage_time_sel	= regulator_set_voltage_time_sel,
++
++	.enable			= regulator_enable_regmap,
++	.disable		= regulator_disable_regmap,
++	.is_enabled		= regulator_is_enabled_regmap,
++
++	.set_ramp_delay		= regulator_set_ramp_delay_regmap,
++
++	.set_suspend_voltage	= rk806_set_suspend_voltage_range_pldo,
++	.set_suspend_enable	= rk806_set_suspend_enable,
++	.set_suspend_disable	= rk806_set_suspend_disable,
++};
++
+ static const struct regulator_ops rk808_buck1_2_ops = {
+ 	.list_voltage		= regulator_list_voltage_linear,
+ 	.map_voltage		= regulator_map_voltage_linear,
+@@ -743,6 +1017,112 @@ static const struct regulator_desc rk805
+ 		BIT(2), 400),
+ };
+ 
++static const struct linear_range rk806_buck_voltage_ranges[] = {
++	REGULATOR_LINEAR_RANGE(500000, 0, 160, 6250), /* 500mV ~ 1500mV */
++	REGULATOR_LINEAR_RANGE(1500000, 161, 237, 25000), /* 1500mV ~ 3400mV */
++	REGULATOR_LINEAR_RANGE(3400000, 238, 255, 0),
++};
++
++static const struct linear_range rk806_ldo_voltage_ranges[] = {
++	REGULATOR_LINEAR_RANGE(500000, 0, 232, 12500), /* 500mV ~ 3400mV */
++	REGULATOR_LINEAR_RANGE(3400000, 233, 255, 0), /* 500mV ~ 3400mV */
++};
++
++static const struct regulator_desc rk806_reg[] = {
++	RK806_REGULATOR("dcdc-reg1", "vcc1", RK806_ID_DCDC1, rk806_ops_dcdc,
++			RK806_BUCK_SEL_CNT, RK806_BUCK1_ON_VSEL,
++			RK806_POWER_EN0, rk806_buck_voltage_ranges, 0,
++			RK806_BUCK1_CONFIG, 0xc0, rk806_ramp_delay_table_dcdc),
++	RK806_REGULATOR("dcdc-reg2", "vcc2", RK806_ID_DCDC2, rk806_ops_dcdc,
++			RK806_BUCK_SEL_CNT, RK806_BUCK2_ON_VSEL,
++			RK806_POWER_EN0, rk806_buck_voltage_ranges, 1,
++			RK806_BUCK2_CONFIG, 0xc0, rk806_ramp_delay_table_dcdc),
++	RK806_REGULATOR("dcdc-reg3", "vcc3", RK806_ID_DCDC3, rk806_ops_dcdc,
++			RK806_BUCK_SEL_CNT, RK806_BUCK3_ON_VSEL,
++			RK806_POWER_EN0, rk806_buck_voltage_ranges, 2,
++			RK806_BUCK3_CONFIG, 0xc0, rk806_ramp_delay_table_dcdc),
++	RK806_REGULATOR("dcdc-reg4", "vcc4", RK806_ID_DCDC4, rk806_ops_dcdc,
++			RK806_BUCK_SEL_CNT, RK806_BUCK4_ON_VSEL,
++			RK806_POWER_EN0, rk806_buck_voltage_ranges, 3,
++			RK806_BUCK4_CONFIG, 0xc0, rk806_ramp_delay_table_dcdc),
++
++	RK806_REGULATOR("dcdc-reg5", "vcc5", RK806_ID_DCDC5, rk806_ops_dcdc,
++			RK806_BUCK_SEL_CNT, RK806_BUCK5_ON_VSEL,
++			RK806_POWER_EN1, rk806_buck_voltage_ranges, 0,
++			RK806_BUCK5_CONFIG, 0xc0, rk806_ramp_delay_table_dcdc),
++	RK806_REGULATOR("dcdc-reg6", "vcc6", RK806_ID_DCDC6, rk806_ops_dcdc,
++			RK806_BUCK_SEL_CNT, RK806_BUCK6_ON_VSEL,
++			RK806_POWER_EN1, rk806_buck_voltage_ranges, 1,
++			RK806_BUCK6_CONFIG, 0xc0, rk806_ramp_delay_table_dcdc),
++	RK806_REGULATOR("dcdc-reg7", "vcc7", RK806_ID_DCDC7, rk806_ops_dcdc,
++			RK806_BUCK_SEL_CNT, RK806_BUCK7_ON_VSEL,
++			RK806_POWER_EN1, rk806_buck_voltage_ranges, 2,
++			RK806_BUCK7_CONFIG, 0xc0, rk806_ramp_delay_table_dcdc),
++	RK806_REGULATOR("dcdc-reg8", "vcc8", RK806_ID_DCDC8, rk806_ops_dcdc,
++			RK806_BUCK_SEL_CNT, RK806_BUCK8_ON_VSEL,
++			RK806_POWER_EN1, rk806_buck_voltage_ranges, 3,
++			RK806_BUCK8_CONFIG, 0xc0, rk806_ramp_delay_table_dcdc),
++
++	RK806_REGULATOR("dcdc-reg9", "vcc9", RK806_ID_DCDC9, rk806_ops_dcdc,
++			RK806_BUCK_SEL_CNT, RK806_BUCK9_ON_VSEL,
++			RK806_POWER_EN2, rk806_buck_voltage_ranges, 0,
++			RK806_BUCK9_CONFIG, 0xc0, rk806_ramp_delay_table_dcdc),
++	RK806_REGULATOR("dcdc-reg10", "vcc10", RK806_ID_DCDC10, rk806_ops_dcdc,
++			RK806_BUCK_SEL_CNT, RK806_BUCK10_ON_VSEL,
++			RK806_POWER_EN2, rk806_buck_voltage_ranges, 1,
++			RK806_BUCK10_CONFIG, 0xc0, rk806_ramp_delay_table_dcdc),
++
++	RK806_REGULATOR("nldo-reg1", "vcc13", RK806_ID_NLDO1, rk806_ops_nldo,
++			RK806_LDO_SEL_CNT, RK806_NLDO1_ON_VSEL,
++			RK806_POWER_EN3, rk806_ldo_voltage_ranges, 0,
++			0xEA, 0x38, rk806_ramp_delay_table_ldo),
++	RK806_REGULATOR("nldo-reg2", "vcc13", RK806_ID_NLDO2, rk806_ops_nldo,
++			RK806_LDO_SEL_CNT, RK806_NLDO2_ON_VSEL,
++			RK806_POWER_EN3, rk806_ldo_voltage_ranges, 1,
++			0xEA, 0x38, rk806_ramp_delay_table_ldo),
++	RK806_REGULATOR("nldo-reg3", "vcc13", RK806_ID_NLDO3, rk806_ops_nldo,
++			RK806_LDO_SEL_CNT, RK806_NLDO3_ON_VSEL,
++			RK806_POWER_EN3, rk806_ldo_voltage_ranges, 2,
++			0xEA, 0x38, rk806_ramp_delay_table_ldo),
++	RK806_REGULATOR("nldo-reg4", "vcc14", RK806_ID_NLDO4, rk806_ops_nldo,
++			RK806_LDO_SEL_CNT, RK806_NLDO4_ON_VSEL,
++			RK806_POWER_EN3, rk806_ldo_voltage_ranges, 3,
++			0xEA, 0x38, rk806_ramp_delay_table_ldo),
++
++	RK806_REGULATOR("nldo-reg5", "vcc14", RK806_ID_NLDO5, rk806_ops_nldo,
++			RK806_LDO_SEL_CNT, RK806_NLDO5_ON_VSEL,
++			RK806_POWER_EN5, rk806_ldo_voltage_ranges, 2,
++			0xEA, 0x38, rk806_ramp_delay_table_ldo),
++
++	RK806_REGULATOR("pldo-reg1", "vcc11", RK806_ID_PLDO1, rk806_ops_pldo,
++			RK806_LDO_SEL_CNT, RK806_PLDO1_ON_VSEL,
++			RK806_POWER_EN4, rk806_ldo_voltage_ranges, 1,
++			0xEA, 0x38, rk806_ramp_delay_table_ldo),
++	RK806_REGULATOR("pldo-reg2", "vcc11", RK806_ID_PLDO2, rk806_ops_pldo,
++			RK806_LDO_SEL_CNT, RK806_PLDO2_ON_VSEL,
++			RK806_POWER_EN4, rk806_ldo_voltage_ranges, 2,
++			0xEA, 0x38, rk806_ramp_delay_table_ldo),
++	RK806_REGULATOR("pldo-reg3", "vcc11", RK806_ID_PLDO3, rk806_ops_pldo,
++			RK806_LDO_SEL_CNT, RK806_PLDO3_ON_VSEL,
++			RK806_POWER_EN4, rk806_ldo_voltage_ranges, 3,
++			0xEA, 0x38, rk806_ramp_delay_table_ldo),
++
++	RK806_REGULATOR("pldo-reg4", "vcc12", RK806_ID_PLDO4, rk806_ops_pldo,
++			RK806_LDO_SEL_CNT, RK806_PLDO4_ON_VSEL,
++			RK806_POWER_EN5, rk806_ldo_voltage_ranges, 0,
++			0xEA, 0x38, rk806_ramp_delay_table_ldo),
++	RK806_REGULATOR("pldo-reg5", "vcc12", RK806_ID_PLDO5, rk806_ops_pldo,
++			RK806_LDO_SEL_CNT, RK806_PLDO5_ON_VSEL,
++			RK806_POWER_EN5, rk806_ldo_voltage_ranges, 1,
++			0xEA, 0x38, rk806_ramp_delay_table_ldo),
++
++	RK806_REGULATOR("pldo-reg6", "vcca", RK806_ID_PLDO6, rk806_ops_pldo,
++			RK806_LDO_SEL_CNT, RK806_PLDO6_ON_VSEL,
++			RK806_POWER_EN4, rk806_ldo_voltage_ranges, 0,
++			0xEA, 0x38, rk806_ramp_delay_table_ldo),
++};
++
++
+ static const struct regulator_desc rk808_reg[] = {
+ 	{
+ 		.name = "DCDC_REG1",
+@@ -1313,6 +1693,10 @@ static int rk808_regulator_probe(struct
+ 		regulators = rk805_reg;
+ 		nregulators = RK805_NUM_REGULATORS;
+ 		break;
++	case RK806_ID:
++		regulators = rk806_reg;
++		nregulators = ARRAY_SIZE(rk806_reg);
++		break;
+ 	case RK808_ID:
+ 		regulators = rk808_reg;
+ 		nregulators = RK808_NUM_REGULATORS;
+@@ -1366,5 +1750,6 @@ MODULE_AUTHOR("Tony xie <tony.xie@rock-c
+ MODULE_AUTHOR("Chris Zhong <zyw@rock-chips.com>");
+ MODULE_AUTHOR("Zhang Qing <zhangqing@rock-chips.com>");
+ MODULE_AUTHOR("Wadim Egorov <w.egorov@phytec.de>");
++MODULE_AUTHOR("Xu Shengfei <xsf@rock-chips.com>");
+ MODULE_LICENSE("GPL");
+ MODULE_ALIAS("platform:rk808-regulator");
diff --git a/target/linux/rockchip/patches-6.1/247-arm64-defconfig-update-RK8XX-MFD-config.patch b/target/linux/rockchip/patches-6.1/247-arm64-defconfig-update-RK8XX-MFD-config.patch
new file mode 100644
index 0000000000..5f2a7639b3
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/247-arm64-defconfig-update-RK8XX-MFD-config.patch
@@ -0,0 +1,26 @@
+From ec0248b3d14b51734d055bdd0b5f10236595d830 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 7 Feb 2023 18:02:45 +0100
+Subject: [PATCH 247/383] arm64: defconfig: update RK8XX MFD config
+
+Update the defconfig for the new RK8XX MFD config name,
+which got split to add SPI support.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/configs/defconfig | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+--- a/arch/arm64/configs/defconfig
++++ b/arch/arm64/configs/defconfig
+@@ -650,7 +650,8 @@ CONFIG_MFD_MAX77620=y
+ CONFIG_MFD_MT6360=y
+ CONFIG_MFD_MT6397=y
+ CONFIG_MFD_SPMI_PMIC=y
+-CONFIG_MFD_RK808=y
++CONFIG_MFD_RK8XX_I2C=y
++CONFIG_MFD_RK8XX_SPI=y
+ CONFIG_MFD_SEC_CORE=y
+ CONFIG_MFD_SL28CPLD=y
+ CONFIG_MFD_ROHM_BD718XX=y
diff --git a/target/linux/rockchip/patches-6.1/248-arm64-dts-rockchip-rk3588-evb1-add-pmic.patch b/target/linux/rockchip/patches-6.1/248-arm64-dts-rockchip-rk3588-evb1-add-pmic.patch
new file mode 100644
index 0000000000..2dee0dae43
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/248-arm64-dts-rockchip-rk3588-evb1-add-pmic.patch
@@ -0,0 +1,764 @@
+From 16062a2547d5c82671b59290b824750b311e1b32 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 12 Jul 2022 15:17:33 +0200
+Subject: [PATCH 248/383] arm64: dts: rockchip: rk3588-evb1: add pmic
+
+This adds PMIC support for the RK3588 EVB.
+
+Signed-off-by: shengfei Xu <xsf@rock-chips.com>
+Co-developed-by: shengfei Xu <xsf@rock-chips.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588-evb1-v10.dts     | 740 ++++++++++++++++++
+ 1 file changed, 740 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
+@@ -123,6 +123,746 @@
+ 	status = "okay";
+ };
+ 
++&spi2 {
++	status = "okay";
++	assigned-clocks = <&cru CLK_SPI2>;
++	assigned-clock-rates = <200000000>;
++	num-cs = <2>;
++
++	pmic@0 {
++		compatible = "rockchip,rk806";
++		spi-max-frequency = <1000000>;
++		reg = <0x0>;
++
++		interrupt-parent = <&gpio0>;
++		interrupts = <7 IRQ_TYPE_LEVEL_LOW>;
++
++		pinctrl-names = "default", "pmic-power-off";
++		pinctrl-0 = <&pmic_pins>, <&rk806_dvs1_null>, <&rk806_dvs2_null>, <&rk806_dvs3_null>;
++		pinctrl-1 = <&rk806_dvs1_pwrdn>;
++
++		vcc1-supply = <&vcc5v0_sys>;
++		vcc2-supply = <&vcc5v0_sys>;
++		vcc3-supply = <&vcc5v0_sys>;
++		vcc4-supply = <&vcc5v0_sys>;
++		vcc5-supply = <&vcc5v0_sys>;
++		vcc6-supply = <&vcc5v0_sys>;
++		vcc7-supply = <&vcc5v0_sys>;
++		vcc8-supply = <&vcc5v0_sys>;
++		vcc9-supply = <&vcc5v0_sys>;
++		vcc10-supply = <&vcc5v0_sys>;
++		vcc11-supply = <&vcc_2v0_pldo_s3>;
++		vcc12-supply = <&vcc5v0_sys>;
++		vcc13-supply = <&vcc5v0_sys>;
++		vcc14-supply = <&vcc_1v1_nldo_s3>;
++		vcca-supply = <&vcc5v0_sys>;
++
++		gpio-controller;
++		#gpio-cells = <2>;
++
++		rk806_dvs1_null: dvs1-null-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs1_slp: dvs1-slp-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun1";
++		};
++
++		rk806_dvs1_pwrdn: dvs1-pwrdn-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun2";
++		};
++
++		rk806_dvs1_rst: dvs1-rst-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun3";
++		};
++
++		rk806_dvs2_null: dvs2-null-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs2_slp: dvs2-slp-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun1";
++		};
++
++		rk806_dvs2_pwrdn: dvs2-pwrdn-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun2";
++		};
++
++		rk806_dvs2_rst: dvs2-rst-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun3";
++		};
++
++		rk806_dvs2_dvs: dvs2-dvs-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun4";
++		};
++
++		rk806_dvs2_gpio: dvs2-gpio-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun5";
++		};
++
++		rk806_dvs3_null: dvs3-null-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs3_slp: dvs3-slp-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun1";
++		};
++
++		rk806_dvs3_pwrdn: dvs3-pwrdn-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun2";
++		};
++
++		rk806_dvs3_rst: dvs3-rst-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun3";
++		};
++
++		rk806_dvs3_dvs: dvs3-dvs-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun4";
++		};
++
++		rk806_dvs3_gpio: dvs3-gpio-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun5";
++		};
++
++		regulators {
++			vdd_gpu_s0: dcdc-reg1 {
++				regulator-boot-on;
++				regulator-min-microvolt = <550000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_gpu_s0";
++				regulator-enable-ramp-delay = <400>;
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_npu_s0: dcdc-reg2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <550000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_npu_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_log_s0: dcdc-reg3 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <675000>;
++				regulator-max-microvolt = <750000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_log_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <750000>;
++				};
++			};
++
++			vdd_vdenc_s0: dcdc-reg4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <550000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_vdenc_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++
++			};
++
++			vdd_gpu_mem_s0: dcdc-reg5 {
++				regulator-boot-on;
++				regulator-min-microvolt = <675000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++				regulator-enable-ramp-delay = <400>;
++				regulator-name = "vdd_gpu_mem_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++
++			};
++
++			vdd_npu_mem_s0: dcdc-reg6 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <675000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_npu_mem_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++
++			};
++
++			vcc_2v0_pldo_s3: dcdc-reg7 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <2000000>;
++				regulator-max-microvolt = <2000000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_2v0_pldo_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <2000000>;
++				};
++			};
++
++			vdd_vdenc_mem_s0: dcdc-reg8 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <675000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_vdenc_mem_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd2_ddr_s3: dcdc-reg9 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-name = "vdd2_ddr_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vcc_1v1_nldo_s3: dcdc-reg10 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1100000>;
++				regulator-max-microvolt = <1100000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vcc_1v1_nldo_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1100000>;
++				};
++			};
++
++			avcc_1v8_s0: pldo-reg1 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "avcc_1v8_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd1_1v8_ddr_s3: pldo-reg2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd1_1v8_ddr_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			avcc_1v8_codec_s0: pldo-reg3 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "avcc_1v8_codec_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_3v3_s3: pldo-reg4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vcc_3v3_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vccio_sd_s0: pldo-reg5 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vccio_sd_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_1v8_s3: pldo-reg6 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vccio_1v8_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vdd_0v75_s3: nldo-reg1 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <750000>;
++				regulator-max-microvolt = <750000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_0v75_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <750000>;
++				};
++			};
++
++			vdd2l_0v9_ddr_s3: nldo-reg2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <900000>;
++				regulator-max-microvolt = <900000>;
++				regulator-name = "vdd2l_0v9_ddr_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <900000>;
++				};
++			};
++
++			vdd_0v75_hdmi_edp_s0: nldo-reg3 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <750000>;
++				regulator-max-microvolt = <750000>;
++				regulator-name = "vdd_0v75_hdmi_edp_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			avdd_0v75_s0: nldo-reg4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <750000>;
++				regulator-max-microvolt = <750000>;
++				regulator-name = "avdd_0v75_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_0v85_s0: nldo-reg5 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <850000>;
++				regulator-max-microvolt = <850000>;
++				regulator-name = "vdd_0v85_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++		};
++	};
++
++	pmic@1 {
++		compatible = "rockchip,rk806";
++		spi-max-frequency = <1000000>;
++		reg = <0x01>;
++
++		interrupt-parent = <&gpio0>;
++		interrupts = <7 IRQ_TYPE_LEVEL_LOW>;
++
++		pinctrl-names = "default", "pmic-sleep";
++		pinctrl-0 = <&rk806_slave_dvs1_null>, <&rk806_slave_dvs2_null>, <&rk806_slave_dvs3_null>;
++		pinctrl-1 = <&rk806_slave_dvs1_slp>, <&rk806_slave_dvs2_null>, <&rk806_slave_dvs3_null>;
++
++		vcc1-supply = <&vcc5v0_sys>;
++		vcc2-supply = <&vcc5v0_sys>;
++		vcc3-supply = <&vcc5v0_sys>;
++		vcc4-supply = <&vcc5v0_sys>;
++		vcc5-supply = <&vcc5v0_sys>;
++		vcc6-supply = <&vcc5v0_sys>;
++		vcc7-supply = <&vcc5v0_sys>;
++		vcc8-supply = <&vcc5v0_sys>;
++		vcc9-supply = <&vcc5v0_sys>;
++		vcc10-supply = <&vcc5v0_sys>;
++		vcc11-supply = <&vcc_2v0_pldo_s3>;
++		vcc12-supply = <&vcc5v0_sys>;
++		vcc13-supply = <&vcc_1v1_nldo_s3>;
++		vcc14-supply = <&vcc_2v0_pldo_s3>;
++		vcca-supply = <&vcc5v0_sys>;
++
++		gpio-controller;
++		#gpio-cells = <2>;
++
++		rk806_slave_dvs1_null: dvs1-null-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun0";
++		};
++
++		rk806_slave_dvs1_slp: dvs1-slp-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun1";
++		};
++
++		rk806_slave_dvs1_pwrdn: dvs1-pwrdn-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun2";
++		};
++
++		rk806_slave_dvs1_rst: dvs1-rst-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun3";
++		};
++
++		rk806_slave_dvs2_null: dvs2-null-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun0";
++		};
++
++		rk806_slave_dvs2_slp: dvs2-slp-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun1";
++		};
++
++		rk806_slave_dvs2_pwrdn: dvs2-pwrdn-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun2";
++		};
++
++		rk806_slave_dvs2_rst: dvs2-rst-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun3";
++		};
++
++		rk806_slave_dvs2_dvs: dvs2-dvs-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun4";
++		};
++
++		rk806_slave_dvs2_gpio: dvs2-gpio-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun5";
++		};
++
++		rk806_slave_dvs3_null: dvs3-null-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun0";
++		};
++
++		rk806_slave_dvs3_slp: dvs3-slp-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun1";
++		};
++
++		rk806_slave_dvs3_pwrdn: dvs3-pwrdn-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun2";
++		};
++
++		rk806_slave_dvs3_rst: dvs3-rst-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun3";
++		};
++
++		rk806_slave_dvs3_dvs: dvs3-dvs-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun4";
++		};
++
++		rk806_slave_dvs3_gpio: dvs3-gpio-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun5";
++		};
++
++		regulators {
++			vdd_cpu_big1_s0: dcdc-reg1 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <550000>;
++				regulator-max-microvolt = <1050000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_cpu_big1_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_cpu_big0_s0: dcdc-reg2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <550000>;
++				regulator-max-microvolt = <1050000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_cpu_big0_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_cpu_lit_s0: dcdc-reg3 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <550000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_cpu_lit_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_3v3_s0: dcdc-reg4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vcc_3v3_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_cpu_big1_mem_s0: dcdc-reg5 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <675000>;
++				regulator-max-microvolt = <1050000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_cpu_big1_mem_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++
++			vdd_cpu_big0_mem_s0: dcdc-reg6 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <675000>;
++				regulator-max-microvolt = <1050000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_cpu_big0_mem_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_1v8_s0: dcdc-reg7 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vcc_1v8_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_cpu_lit_mem_s0: dcdc-reg8 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <675000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_cpu_lit_mem_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vddq_ddr_s0: dcdc-reg9 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-name = "vddq_ddr_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_ddr_s0: dcdc-reg10 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <675000>;
++				regulator-max-microvolt = <900000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_ddr_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_1v8_cam_s0: pldo-reg1 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vcc_1v8_cam_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			avdd1v8_ddr_pll_s0: pldo-reg2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "avdd1v8_ddr_pll_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_1v8_pll_s0: pldo-reg3 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_1v8_pll_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_3v3_sd_s0: pldo-reg4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vcc_3v3_sd_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_2v8_cam_s0: pldo-reg5 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <2800000>;
++				regulator-max-microvolt = <2800000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vcc_2v8_cam_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			pldo6_s3: pldo-reg6 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++				regulator-name = "pldo6_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vdd_0v75_pll_s0: nldo-reg1 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <750000>;
++				regulator-max-microvolt = <750000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_0v75_pll_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_ddr_pll_s0: nldo-reg2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <850000>;
++				regulator-max-microvolt = <850000>;
++				regulator-name = "vdd_ddr_pll_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			avdd_0v85_s0: nldo-reg3 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <850000>;
++				regulator-max-microvolt = <850000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "avdd_0v85_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			avdd_1v2_cam_s0: nldo-reg4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1200000>;
++				regulator-max-microvolt = <1200000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "avdd_1v2_cam_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			avdd_1v2_s0: nldo-reg5 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1200000>;
++				regulator-max-microvolt = <1200000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "avdd_1v2_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++		};
++	};
++};
++
+ &uart2 {
+ 	pinctrl-0 = <&uart2m0_xfer>;
+ 	status = "okay";
diff --git a/target/linux/rockchip/patches-6.1/249-cpufreq-rockchip-Introduce-driver-for-rk3588.patch b/target/linux/rockchip/patches-6.1/249-cpufreq-rockchip-Introduce-driver-for-rk3588.patch
new file mode 100644
index 0000000000..9372c931bc
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/249-cpufreq-rockchip-Introduce-driver-for-rk3588.patch
@@ -0,0 +1,708 @@
+From 66ae7200b69720abd1ce6c9db7c4d50357fc5761 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 18 Aug 2022 14:21:30 +0200
+Subject: [PATCH 249/383] cpufreq: rockchip: Introduce driver for rk3588
+
+This is a heavily modified port from the downstream driver.
+Downstream used it for multiple rockchip generations, while
+upstream just used the generic cpufreq-dt driver so far. For
+rk3588 this is no longer good enough, since two regulators
+need to be controlled.
+
+Also during shutdown the correct frequency needs to be configured
+for the big CPU cores to avoid a system hang when firmware tries
+to bring them up at reboot time.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/cpufreq/Kconfig.arm          |  10 +
+ drivers/cpufreq/Makefile             |   1 +
+ drivers/cpufreq/cpufreq-dt-platdev.c |   2 +
+ drivers/cpufreq/rockchip-cpufreq.c   | 640 +++++++++++++++++++++++++++
+ 4 files changed, 653 insertions(+)
+ create mode 100644 drivers/cpufreq/rockchip-cpufreq.c
+
+--- a/drivers/cpufreq/Kconfig.arm
++++ b/drivers/cpufreq/Kconfig.arm
+@@ -180,6 +180,16 @@ config ARM_RASPBERRYPI_CPUFREQ
+ 
+ 	  If in doubt, say N.
+ 
++config ARM_ROCKCHIP_CPUFREQ
++	tristate "Rockchip CPUfreq driver"
++	depends on ARCH_ROCKCHIP && CPUFREQ_DT
++	select PM_OPP
++	help
++	  This adds the CPUFreq driver support for Rockchip SoCs,
++	  based on cpufreq-dt.
++
++	  If in doubt, say N.
++
+ config ARM_S3C_CPUFREQ
+ 	bool
+ 	help
+--- a/drivers/cpufreq/Makefile
++++ b/drivers/cpufreq/Makefile
+@@ -70,6 +70,7 @@ obj-$(CONFIG_PXA3xx)			+= pxa3xx-cpufreq
+ obj-$(CONFIG_ARM_QCOM_CPUFREQ_HW)	+= qcom-cpufreq-hw.o
+ obj-$(CONFIG_ARM_QCOM_CPUFREQ_NVMEM)	+= qcom-cpufreq-nvmem.o
+ obj-$(CONFIG_ARM_RASPBERRYPI_CPUFREQ) 	+= raspberrypi-cpufreq.o
++obj-$(CONFIG_ARM_ROCKCHIP_CPUFREQ)	+= rockchip-cpufreq.o
+ obj-$(CONFIG_ARM_S3C2410_CPUFREQ)	+= s3c2410-cpufreq.o
+ obj-$(CONFIG_ARM_S3C2412_CPUFREQ)	+= s3c2412-cpufreq.o
+ obj-$(CONFIG_ARM_S3C2416_CPUFREQ)	+= s3c2416-cpufreq.o
+--- a/drivers/cpufreq/cpufreq-dt-platdev.c
++++ b/drivers/cpufreq/cpufreq-dt-platdev.c
+@@ -154,6 +154,8 @@ static const struct of_device_id blockli
+ 	{ .compatible = "qcom,sm8250", },
+ 	{ .compatible = "qcom,sm8350", },
+ 
++	{ .compatible = "rockchip,rk3588", },
++
+ 	{ .compatible = "st,stih407", },
+ 	{ .compatible = "st,stih410", },
+ 	{ .compatible = "st,stih418", },
+--- /dev/null
++++ b/drivers/cpufreq/rockchip-cpufreq.c
+@@ -0,0 +1,640 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Rockchip CPUFreq Driver. This is similar to the generic DT
++ * cpufreq driver, but handles the following platform specific
++ * quirks:
++ *
++ *  * support for two regulators - one for the CPU core and one
++ *    for the memory interface
++ *  * reboot handler to setup the reboot frequency
++ *  * handling of read margin registers
++ *
++ * Copyright (C) 2017 Fuzhou Rockchip Electronics Co., Ltd
++ * Copyright (C) 2023 Collabora Ltd.
++ */
++
++#include <linux/cpu.h>
++#include <linux/cpufreq.h>
++#include <linux/err.h>
++#include <linux/init.h>
++#include <linux/kernel.h>
++#include <linux/mfd/syscon.h>
++#include <linux/module.h>
++#include <linux/of.h>
++#include <linux/of_address.h>
++#include <linux/platform_device.h>
++#include <linux/pm_opp.h>
++#include <linux/slab.h>
++#include <linux/reboot.h>
++#include <linux/regmap.h>
++#include <linux/regulator/consumer.h>
++
++#include "cpufreq-dt.h"
++
++#define RK3588_MEMCFG_HSSPRF_LOW	0x20
++#define RK3588_MEMCFG_HSDPRF_LOW	0x28
++#define RK3588_MEMCFG_HSDPRF_HIGH	0x2c
++#define RK3588_CPU_CTRL			0x30
++
++#define VOLT_RM_TABLE_END		~1
++
++static struct platform_device *cpufreq_pdev;
++static LIST_HEAD(priv_list);
++
++struct volt_rm_table {
++	uint32_t volt;
++	uint32_t rm;
++};
++
++struct rockchip_opp_info {
++	const struct rockchip_opp_data *data;
++	struct volt_rm_table *volt_rm_tbl;
++	struct regmap *grf;
++	u32 current_rm;
++	u32 reboot_freq;
++};
++
++struct private_data {
++	struct list_head node;
++
++	cpumask_var_t cpus;
++	struct device *cpu_dev;
++	struct cpufreq_frequency_table *freq_table;
++};
++
++struct rockchip_opp_data {
++	int (*set_read_margin)(struct device *dev, struct rockchip_opp_info *opp_info,
++			       unsigned long volt);
++};
++
++struct cluster_info {
++	struct list_head list_head;
++	struct rockchip_opp_info opp_info;
++	cpumask_t cpus;
++};
++static LIST_HEAD(cluster_info_list);
++
++static int rk3588_cpu_set_read_margin(struct device *dev, struct rockchip_opp_info *opp_info,
++				      unsigned long volt)
++{
++	bool is_found = false;
++	u32 rm;
++	int i;
++
++	if (!opp_info->volt_rm_tbl)
++		return 0;
++
++	for (i = 0; opp_info->volt_rm_tbl[i].rm != VOLT_RM_TABLE_END; i++) {
++		if (volt >= opp_info->volt_rm_tbl[i].volt) {
++			rm = opp_info->volt_rm_tbl[i].rm;
++			is_found = true;
++			break;
++		}
++	}
++
++	if (!is_found)
++		return 0;
++	if (rm == opp_info->current_rm)
++		return 0;
++	if (!opp_info->grf)
++		return 0;
++
++	dev_dbg(dev, "set rm to %d\n", rm);
++	regmap_write(opp_info->grf, RK3588_MEMCFG_HSSPRF_LOW, 0x001c0000 | (rm << 2));
++	regmap_write(opp_info->grf, RK3588_MEMCFG_HSDPRF_LOW, 0x003c0000 | (rm << 2));
++	regmap_write(opp_info->grf, RK3588_MEMCFG_HSDPRF_HIGH, 0x003c0000 | (rm << 2));
++	regmap_write(opp_info->grf, RK3588_CPU_CTRL, 0x00200020);
++	udelay(1);
++	regmap_write(opp_info->grf, RK3588_CPU_CTRL, 0x00200000);
++
++	opp_info->current_rm = rm;
++
++	return 0;
++}
++
++static const struct rockchip_opp_data rk3588_cpu_opp_data = {
++	.set_read_margin = rk3588_cpu_set_read_margin,
++};
++
++static const struct of_device_id rockchip_cpufreq_of_match[] = {
++	{
++		.compatible = "rockchip,rk3588",
++		.data = (void *)&rk3588_cpu_opp_data,
++	},
++	{},
++};
++
++static struct cluster_info *rockchip_cluster_info_lookup(int cpu)
++{
++	struct cluster_info *cluster;
++
++	list_for_each_entry(cluster, &cluster_info_list, list_head) {
++		if (cpumask_test_cpu(cpu, &cluster->cpus))
++			return cluster;
++	}
++
++	return NULL;
++}
++
++static int rockchip_cpufreq_set_volt(struct device *dev,
++				     struct regulator *reg,
++				     struct dev_pm_opp_supply *supply)
++{
++	int ret;
++
++	ret = regulator_set_voltage_triplet(reg, supply->u_volt_min,
++					    supply->u_volt, supply->u_volt_max);
++	if (ret)
++		dev_err(dev, "%s: failed to set voltage (%lu %lu %lu uV): %d\n",
++			__func__, supply->u_volt_min, supply->u_volt,
++			supply->u_volt_max, ret);
++
++	return ret;
++}
++
++static int rockchip_cpufreq_set_read_margin(struct device *dev,
++					    struct rockchip_opp_info *opp_info,
++					    unsigned long volt)
++{
++	if (opp_info->data && opp_info->data->set_read_margin) {
++		opp_info->data->set_read_margin(dev, opp_info, volt);
++	}
++
++	return 0;
++}
++
++static int rk_opp_config_regulators(struct device *dev,
++				    struct dev_pm_opp *old_opp, struct dev_pm_opp *new_opp,
++				    struct regulator **regulators, unsigned int count)
++{
++	struct dev_pm_opp_supply old_supplies[2];
++	struct dev_pm_opp_supply new_supplies[2];
++	struct regulator *vdd_reg = regulators[0];
++	struct regulator *mem_reg = regulators[1];
++	struct rockchip_opp_info *opp_info;
++	struct cluster_info *cluster;
++	int ret = 0;
++	unsigned long old_freq = dev_pm_opp_get_freq(old_opp);
++	unsigned long new_freq = dev_pm_opp_get_freq(new_opp);
++
++	/* We must have two regulators here */
++	WARN_ON(count != 2);
++
++	ret = dev_pm_opp_get_supplies(old_opp, old_supplies);
++	if (ret)
++		return ret;
++
++	ret = dev_pm_opp_get_supplies(new_opp, new_supplies);
++	if (ret)
++		return ret;
++
++	cluster = rockchip_cluster_info_lookup(dev->id);
++	if (!cluster)
++		return -EINVAL;
++	opp_info = &cluster->opp_info;
++
++	if (new_freq >= old_freq) {
++		ret = rockchip_cpufreq_set_volt(dev, mem_reg, &new_supplies[1]);
++		if (ret)
++			goto error;
++		ret = rockchip_cpufreq_set_volt(dev, vdd_reg, &new_supplies[0]);
++		if (ret)
++			goto error;
++		rockchip_cpufreq_set_read_margin(dev, opp_info, new_supplies[0].u_volt);
++	} else {
++		rockchip_cpufreq_set_read_margin(dev, opp_info, new_supplies[0].u_volt);
++		ret = rockchip_cpufreq_set_volt(dev, vdd_reg, &new_supplies[0]);
++		if (ret)
++			goto error;
++		ret = rockchip_cpufreq_set_volt(dev, mem_reg, &new_supplies[1]);
++		if (ret)
++			goto error;
++	}
++
++	return 0;
++
++error:
++	rockchip_cpufreq_set_read_margin(dev, opp_info, old_supplies[0].u_volt);
++	rockchip_cpufreq_set_volt(dev, mem_reg, &old_supplies[1]);
++	rockchip_cpufreq_set_volt(dev, vdd_reg, &old_supplies[0]);
++	return ret;
++}
++
++static void rockchip_get_opp_data(const struct of_device_id *matches,
++				  struct rockchip_opp_info *info)
++{
++	const struct of_device_id *match;
++	struct device_node *node;
++
++	node = of_find_node_by_path("/");
++	match = of_match_node(matches, node);
++	if (match && match->data)
++		info->data = match->data;
++	of_node_put(node);
++}
++
++static int rockchip_get_volt_rm_table(struct device *dev, struct device_node *np,
++				      char *porp_name, struct volt_rm_table **table)
++{
++	struct volt_rm_table *rm_table;
++	const struct property *prop;
++	int count, i;
++
++	prop = of_find_property(np, porp_name, NULL);
++	if (!prop)
++		return -EINVAL;
++
++	if (!prop->value)
++		return -ENODATA;
++
++	count = of_property_count_u32_elems(np, porp_name);
++	if (count < 0)
++		return -EINVAL;
++
++	if (count % 2)
++		return -EINVAL;
++
++	rm_table = devm_kzalloc(dev, sizeof(*rm_table) * (count / 2 + 1),
++				GFP_KERNEL);
++	if (!rm_table)
++		return -ENOMEM;
++
++	for (i = 0; i < count / 2; i++) {
++		of_property_read_u32_index(np, porp_name, 2 * i,
++					   &rm_table[i].volt);
++		of_property_read_u32_index(np, porp_name, 2 * i + 1,
++					   &rm_table[i].rm);
++	}
++
++	rm_table[i].volt = 0;
++	rm_table[i].rm = VOLT_RM_TABLE_END;
++
++	*table = rm_table;
++
++	return 0;
++}
++
++static int rockchip_cpufreq_reboot(struct notifier_block *notifier, unsigned long event, void *cmd)
++{
++	struct cluster_info *cluster;
++	struct device *dev;
++	int freq, ret, cpu;
++
++	if (event != SYS_RESTART)
++		return NOTIFY_DONE;
++
++	for_each_possible_cpu(cpu) {
++		cluster = rockchip_cluster_info_lookup(cpu);
++		if (!cluster)
++			continue;
++
++		dev = get_cpu_device(cpu);
++		if (!dev)
++			continue;
++
++		freq = cluster->opp_info.reboot_freq;
++
++		if (freq) {
++			ret = dev_pm_opp_set_rate(dev, freq);
++			if (ret)
++				dev_err(dev, "Failed setting reboot freq for cpu %d to %d: %d\n",
++					cpu, freq, ret);
++			dev_pm_opp_remove_table(dev);
++		}
++	}
++
++	return NOTIFY_DONE;
++}
++
++static int rockchip_cpufreq_cluster_init(int cpu, struct cluster_info *cluster)
++{
++	struct rockchip_opp_info *opp_info = &cluster->opp_info;
++	int reg_table_token = -EINVAL;
++	int opp_table_token = -EINVAL;
++	struct device_node *np;
++	struct device *dev;
++	const char * const reg_names[] = { "cpu", "mem", NULL };
++	int ret = 0;
++
++	dev = get_cpu_device(cpu);
++	if (!dev)
++		return -ENODEV;
++
++	if (!of_find_property(dev->of_node, "cpu-supply", NULL))
++		return -ENOENT;
++
++	np = of_parse_phandle(dev->of_node, "operating-points-v2", 0);
++	if (!np) {
++		dev_warn(dev, "OPP-v2 not supported\n");
++		return -ENOENT;
++	}
++
++	reg_table_token = dev_pm_opp_set_regulators(dev, reg_names);
++	if (reg_table_token < 0) {
++		ret = reg_table_token;
++		dev_err_probe(dev, ret, "Failed to set opp regulators\n");
++		goto np_err;
++	}
++
++	ret = dev_pm_opp_of_get_sharing_cpus(dev, &cluster->cpus);
++	if (ret) {
++		dev_err_probe(dev, ret, "Failed to get sharing cpus\n");
++		goto np_err;
++	}
++
++	rockchip_get_opp_data(rockchip_cpufreq_of_match, opp_info);
++	if (opp_info->data && opp_info->data->set_read_margin) {
++		opp_info->current_rm = UINT_MAX;
++		opp_info->grf = syscon_regmap_lookup_by_phandle(np, "rockchip,grf");
++		if (IS_ERR(opp_info->grf))
++			opp_info->grf = NULL;
++		rockchip_get_volt_rm_table(dev, np, "rockchip,volt-mem-read-margin", &opp_info->volt_rm_tbl);
++
++		of_property_read_u32(np, "rockchip,reboot-freq", &opp_info->reboot_freq);
++	}
++
++	opp_table_token = dev_pm_opp_set_config_regulators(dev, rk_opp_config_regulators);
++	if (opp_table_token < 0) {
++		ret = opp_table_token;
++		dev_err(dev, "Failed to set opp config regulators\n");
++		goto reg_opp_table;
++	}
++
++	of_node_put(np);
++
++	return 0;
++
++reg_opp_table:
++	if (reg_table_token >= 0)
++		dev_pm_opp_put_regulators(reg_table_token);
++np_err:
++	of_node_put(np);
++
++	return ret;
++}
++
++static struct notifier_block rockchip_cpufreq_reboot_notifier = {
++	.notifier_call = rockchip_cpufreq_reboot,
++	.priority = 0,
++};
++
++static struct freq_attr *cpufreq_rockchip_attr[] = {
++	&cpufreq_freq_attr_scaling_available_freqs,
++	NULL,
++};
++
++static int cpufreq_online(struct cpufreq_policy *policy)
++{
++	/* We did light-weight tear down earlier, nothing to do here */
++	return 0;
++}
++
++static int cpufreq_offline(struct cpufreq_policy *policy)
++{
++	/*
++	 * Preserve policy->driver_data and don't free resources on light-weight
++	 * tear down.
++	 */
++	return 0;
++}
++
++static struct private_data *rockchip_cpufreq_find_data(int cpu)
++{
++	struct private_data *priv;
++
++	list_for_each_entry(priv, &priv_list, node) {
++		if (cpumask_test_cpu(cpu, priv->cpus))
++			return priv;
++	}
++
++	return NULL;
++}
++
++static int cpufreq_init(struct cpufreq_policy *policy)
++{
++	struct private_data *priv;
++	struct device *cpu_dev;
++	struct clk *cpu_clk;
++	unsigned int transition_latency;
++	int ret;
++
++	priv = rockchip_cpufreq_find_data(policy->cpu);
++	if (!priv) {
++		pr_err("failed to find data for cpu%d\n", policy->cpu);
++		return -ENODEV;
++	}
++	cpu_dev = priv->cpu_dev;
++
++	cpu_clk = clk_get(cpu_dev, NULL);
++	if (IS_ERR(cpu_clk)) {
++		ret = PTR_ERR(cpu_clk);
++		dev_err(cpu_dev, "%s: failed to get clk: %d\n", __func__, ret);
++		return ret;
++	}
++
++	transition_latency = dev_pm_opp_get_max_transition_latency(cpu_dev);
++	if (!transition_latency)
++		transition_latency = CPUFREQ_ETERNAL;
++
++	cpumask_copy(policy->cpus, priv->cpus);
++	policy->driver_data = priv;
++	policy->clk = cpu_clk;
++	policy->freq_table = priv->freq_table;
++	policy->suspend_freq = dev_pm_opp_get_suspend_opp_freq(cpu_dev) / 1000;
++	policy->cpuinfo.transition_latency = transition_latency;
++	policy->dvfs_possible_from_any_cpu = true;
++
++	return 0;
++}
++
++static int cpufreq_exit(struct cpufreq_policy *policy)
++{
++	clk_put(policy->clk);
++	return 0;
++}
++
++static int set_target(struct cpufreq_policy *policy, unsigned int index)
++{
++	struct private_data *priv = policy->driver_data;
++	unsigned long freq = policy->freq_table[index].frequency;
++
++	return dev_pm_opp_set_rate(priv->cpu_dev, freq * 1000);
++}
++
++static struct cpufreq_driver rockchip_cpufreq_driver = {
++	.flags = CPUFREQ_NEED_INITIAL_FREQ_CHECK |
++		 CPUFREQ_IS_COOLING_DEV |
++		 CPUFREQ_HAVE_GOVERNOR_PER_POLICY,
++	.verify = cpufreq_generic_frequency_table_verify,
++	.target_index = set_target,
++	.get = cpufreq_generic_get,
++	.init = cpufreq_init,
++	.exit = cpufreq_exit,
++	.online = cpufreq_online,
++	.offline = cpufreq_offline,
++	.register_em = cpufreq_register_em_with_opp,
++	.name = "rockchip-cpufreq",
++	.attr = cpufreq_rockchip_attr,
++	.suspend = cpufreq_generic_suspend,
++};
++
++static int rockchip_cpufreq_init(struct device *dev, int cpu)
++{
++	struct private_data *priv;
++	struct device *cpu_dev;
++	int ret;
++
++	priv = devm_kzalloc(dev, sizeof(*priv), GFP_KERNEL);
++	if (!priv)
++		return -ENOMEM;
++
++	if (!alloc_cpumask_var(&priv->cpus, GFP_KERNEL))
++		return -ENOMEM;
++
++	cpumask_set_cpu(cpu, priv->cpus);
++
++	cpu_dev = get_cpu_device(cpu);
++	if (!cpu_dev)
++		return -EPROBE_DEFER;
++	priv->cpu_dev = cpu_dev;
++
++	ret = dev_pm_opp_of_get_sharing_cpus(cpu_dev, priv->cpus);
++	if (ret)
++		return ret;
++
++	ret = dev_pm_opp_of_cpumask_add_table(priv->cpus);
++	if (ret)
++		return ret;
++
++	ret = dev_pm_opp_get_opp_count(cpu_dev);
++	if (ret <= 0)
++		return dev_err_probe(cpu_dev, -ENODEV, "OPP table can't be empty\n");
++
++	ret = dev_pm_opp_init_cpufreq_table(cpu_dev, &priv->freq_table);
++	if (ret)
++		return dev_err_probe(cpu_dev, ret, "failed to init cpufreq table\n");
++
++	list_add(&priv->node, &priv_list);
++
++	return 0;
++}
++
++static void rockchip_cpufreq_free_list(void *data)
++{
++	struct cluster_info *cluster, *pos;
++
++	list_for_each_entry_safe(cluster, pos, &cluster_info_list, list_head) {
++		list_del(&cluster->list_head);
++	}
++}
++
++static int rockchip_cpufreq_init_list(struct device *dev)
++{
++	struct cluster_info *cluster;
++	int cpu, ret;
++
++	for_each_possible_cpu(cpu) {
++		cluster = rockchip_cluster_info_lookup(cpu);
++		if (cluster)
++			continue;
++
++		cluster = devm_kzalloc(dev, sizeof(*cluster), GFP_KERNEL);
++		if (!cluster) {
++			ret = -ENOMEM;
++			goto release_cluster_info;
++		}
++
++		ret = rockchip_cpufreq_cluster_init(cpu, cluster);
++		if (ret) {
++			dev_err_probe(dev, ret, "Failed to initialize dvfs info cpu%d\n", cpu);
++			goto release_cluster_info;
++		}
++		list_add(&cluster->list_head, &cluster_info_list);
++	}
++
++	return 0;
++
++release_cluster_info:
++	rockchip_cpufreq_free_list(NULL);
++	return ret;
++}
++
++static void rockchip_cpufreq_unregister(void *data)
++{
++	cpufreq_unregister_driver(&rockchip_cpufreq_driver);
++}
++
++static int rockchip_cpufreq_probe(struct platform_device *pdev)
++{
++	int ret, cpu;
++
++	ret = rockchip_cpufreq_init_list(&pdev->dev);
++	if (ret)
++		return ret;
++
++	ret = devm_add_action_or_reset(&pdev->dev, rockchip_cpufreq_free_list, NULL);
++	if (ret)
++		return ret;
++
++	ret = devm_register_reboot_notifier(&pdev->dev, &rockchip_cpufreq_reboot_notifier);
++	if (ret)
++		return dev_err_probe(&pdev->dev, ret, "Failed to register reboot handler\n");
++
++	for_each_possible_cpu(cpu) {
++		ret = rockchip_cpufreq_init(&pdev->dev, cpu);
++		if (ret)
++			return ret;
++	}
++
++	ret = cpufreq_register_driver(&rockchip_cpufreq_driver);
++	if (ret)
++		return dev_err_probe(&pdev->dev, ret, "failed register driver\n");
++
++	ret = devm_add_action_or_reset(&pdev->dev, rockchip_cpufreq_unregister, NULL);
++	if (ret)
++		return ret;
++
++	return 0;
++}
++
++static struct platform_driver rockchip_cpufreq_platdrv = {
++	.driver = {
++		.name	= "rockchip-cpufreq",
++	},
++	.probe		= rockchip_cpufreq_probe,
++};
++
++static int __init rockchip_cpufreq_driver_init(void)
++{
++	int ret;
++
++	ret = platform_driver_register(&rockchip_cpufreq_platdrv);
++	if (ret)
++		return ret;
++
++	cpufreq_pdev = platform_device_register_data(NULL, "rockchip-cpufreq", -1,
++						     NULL, 0);
++	if (IS_ERR(cpufreq_pdev)) {
++		pr_err("failed to register rockchip-cpufreq platform device\n");
++		ret = PTR_ERR(cpufreq_pdev);
++		goto unregister_platform_driver;
++	}
++
++	return 0;
++
++unregister_platform_driver:
++	platform_driver_unregister(&rockchip_cpufreq_platdrv);
++	return ret;
++}
++module_init(rockchip_cpufreq_driver_init);
++
++static void __exit rockchip_cpufreq_driver_exit(void)
++{
++	platform_device_unregister(cpufreq_pdev);
++	platform_driver_unregister(&rockchip_cpufreq_platdrv);
++}
++module_exit(rockchip_cpufreq_driver_exit)
++
++MODULE_AUTHOR("Finley Xiao <finley.xiao@rock-chips.com>");
++MODULE_DESCRIPTION("Rockchip cpufreq driver");
++MODULE_LICENSE("GPL v2");
diff --git a/target/linux/rockchip/patches-6.1/250-arm64-dts-rockchip-rk3588-add-cpu-frequency-scaling-.patch b/target/linux/rockchip/patches-6.1/250-arm64-dts-rockchip-rk3588-add-cpu-frequency-scaling-.patch
new file mode 100644
index 0000000000..c78d615b03
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/250-arm64-dts-rockchip-rk3588-add-cpu-frequency-scaling-.patch
@@ -0,0 +1,556 @@
+From cce542d393d7e0ab3268eb75b4c028550425f91b Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 4 Apr 2023 17:30:46 +0200
+Subject: [PATCH 250/383] arm64: dts: rockchip: rk3588: add cpu frequency
+ scaling support
+
+Add required bits for CPU frequency scaling to the Rockchip 3588
+devicetree. This is missing the 2.4 GHz operating point for the
+big cpu clusters, since that does not work well on all SoCs.
+Downstream has a driver for PVTM, which reduces the requested
+frequencies based on (among other things) silicon quality.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 452 ++++++++++++++++++++++
+ 1 file changed, 452 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -8,6 +8,7 @@
+ #include <dt-bindings/interrupt-controller/irq.h>
+ #include <dt-bindings/power/rk3588-power.h>
+ #include <dt-bindings/reset/rockchip,rk3588-cru.h>
++#include <dt-bindings/thermal/thermal.h>
+ 
+ / {
+ 	compatible = "rockchip,rk3588";
+@@ -16,6 +17,215 @@
+ 	#address-cells = <2>;
+ 	#size-cells = <2>;
+ 
++	cluster0_opp_table: opp-table-cluster0 {
++		compatible = "operating-points-v2";
++		opp-shared;
++
++		opp-408000000 {
++			opp-hz = /bits/ 64 <408000000>;
++			opp-microvolt = <750000 750000 950000>,
++					<750000 750000 950000>;
++			clock-latency-ns = <40000>;
++			opp-suspend;
++		};
++		opp-600000000 {
++			opp-hz = /bits/ 64 <600000000>;
++			opp-microvolt = <750000 750000 950000>,
++					<750000 750000 950000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-816000000 {
++			opp-hz = /bits/ 64 <816000000>;
++			opp-microvolt = <750000 750000 950000>,
++					<750000 750000 950000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1008000000 {
++			opp-hz = /bits/ 64 <1008000000>;
++			opp-microvolt = <750000 750000 950000>,
++					<750000 750000 950000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1200000000 {
++			opp-hz = /bits/ 64 <1200000000>;
++			opp-microvolt = <775000 775000 950000>,
++					<775000 775000 950000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1416000000 {
++			opp-hz = /bits/ 64 <1416000000>;
++			opp-microvolt = <825000 825000 950000>,
++					<825000 825000 950000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1608000000 {
++			opp-hz = /bits/ 64 <1608000000>;
++			opp-microvolt = <875000 875000 950000>,
++					<875000 875000 950000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1800000000 {
++			opp-hz = /bits/ 64 <1800000000>;
++			opp-microvolt = <950000 950000 950000>,
++					<950000 950000 950000>;
++			clock-latency-ns = <40000>;
++		};
++	};
++
++	cluster1_opp_table: opp-table-cluster1 {
++		compatible = "operating-points-v2";
++		opp-shared;
++
++		rockchip,grf = <&bigcore0_grf>;
++		rockchip,volt-mem-read-margin = <
++			855000	1
++			765000	2
++			675000	3
++			495000	4
++		>;
++
++		rockchip,reboot-freq = <1800000000>;
++
++		opp-408000000 {
++			opp-hz = /bits/ 64 <408000000>;
++			opp-microvolt = <600000 600000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++			opp-suspend;
++		};
++		opp-600000000 {
++			opp-hz = /bits/ 64 <600000000>;
++			opp-microvolt = <600000 600000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-816000000 {
++			opp-hz = /bits/ 64 <816000000>;
++			opp-microvolt = <600000 600000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1008000000 {
++			opp-hz = /bits/ 64 <1008000000>;
++			opp-microvolt = <625000 625000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1200000000 {
++			opp-hz = /bits/ 64 <1200000000>;
++			opp-microvolt = <650000 650000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1416000000 {
++			opp-hz = /bits/ 64 <1416000000>;
++			opp-microvolt = <675000 675000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1608000000 {
++			opp-hz = /bits/ 64 <1608000000>;
++			opp-microvolt = <700000 700000 1000000>,
++					<700000 700000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1800000000 {
++			opp-hz = /bits/ 64 <1800000000>;
++			opp-microvolt = <775000 775000 1000000>,
++					<775000 775000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-2016000000 {
++			opp-hz = /bits/ 64 <2016000000>;
++			opp-microvolt = <850000 850000 1000000>,
++					<850000 850000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-2208000000 {
++			opp-hz = /bits/ 64 <2208000000>;
++			opp-microvolt = <925000 925000 1000000>,
++					<925000 925000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++	};
++
++	cluster2_opp_table: opp-table-cluster2 {
++		compatible = "operating-points-v2";
++		opp-shared;
++
++		rockchip,grf = <&bigcore1_grf>;
++		rockchip,volt-mem-read-margin = <
++			855000	1
++			765000	2
++			675000	3
++			495000	4
++		>;
++
++		rockchip,reboot-freq = <1800000000>;
++
++		opp-408000000 {
++			opp-hz = /bits/ 64 <408000000>;
++			opp-microvolt = <600000 600000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++			opp-suspend;
++		};
++		opp-600000000 {
++			opp-hz = /bits/ 64 <600000000>;
++			opp-microvolt = <600000 600000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-816000000 {
++			opp-hz = /bits/ 64 <816000000>;
++			opp-microvolt = <600000 600000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1008000000 {
++			opp-hz = /bits/ 64 <1008000000>;
++			opp-microvolt = <625000 625000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1200000000 {
++			opp-hz = /bits/ 64 <1200000000>;
++			opp-microvolt = <650000 650000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1416000000 {
++			opp-hz = /bits/ 64 <1416000000>;
++			opp-microvolt = <675000 675000 1000000>,
++					<675000 675000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1608000000 {
++			opp-hz = /bits/ 64 <1608000000>;
++			opp-microvolt = <700000 700000 1000000>,
++					<700000 700000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-1800000000 {
++			opp-hz = /bits/ 64 <1800000000>;
++			opp-microvolt = <775000 775000 1000000>,
++					<775000 775000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-2016000000 {
++			opp-hz = /bits/ 64 <2016000000>;
++			opp-microvolt = <850000 850000 1000000>,
++					<850000 850000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++		opp-2208000000 {
++			opp-hz = /bits/ 64 <2208000000>;
++			opp-microvolt = <925000 925000 1000000>,
++					<925000 925000 1000000>;
++			clock-latency-ns = <40000>;
++		};
++	};
++
+ 	cpus {
+ 		#address-cells = <1>;
+ 		#size-cells = <0>;
+@@ -62,6 +272,7 @@
+ 			clocks = <&scmi_clk SCMI_CLK_CPUL>;
+ 			assigned-clocks = <&scmi_clk SCMI_CLK_CPUL>;
+ 			assigned-clock-rates = <816000000>;
++			operating-points-v2 = <&cluster0_opp_table>;
+ 			cpu-idle-states = <&CPU_SLEEP>;
+ 			i-cache-size = <32768>;
+ 			i-cache-line-size = <64>;
+@@ -81,6 +292,7 @@
+ 			enable-method = "psci";
+ 			capacity-dmips-mhz = <530>;
+ 			clocks = <&scmi_clk SCMI_CLK_CPUL>;
++			operating-points-v2 = <&cluster0_opp_table>;
+ 			cpu-idle-states = <&CPU_SLEEP>;
+ 			i-cache-size = <32768>;
+ 			i-cache-line-size = <64>;
+@@ -100,6 +312,7 @@
+ 			enable-method = "psci";
+ 			capacity-dmips-mhz = <530>;
+ 			clocks = <&scmi_clk SCMI_CLK_CPUL>;
++			operating-points-v2 = <&cluster0_opp_table>;
+ 			cpu-idle-states = <&CPU_SLEEP>;
+ 			i-cache-size = <32768>;
+ 			i-cache-line-size = <64>;
+@@ -119,6 +332,7 @@
+ 			enable-method = "psci";
+ 			capacity-dmips-mhz = <530>;
+ 			clocks = <&scmi_clk SCMI_CLK_CPUL>;
++			operating-points-v2 = <&cluster0_opp_table>;
+ 			cpu-idle-states = <&CPU_SLEEP>;
+ 			i-cache-size = <32768>;
+ 			i-cache-line-size = <64>;
+@@ -140,6 +354,7 @@
+ 			clocks = <&scmi_clk SCMI_CLK_CPUB01>;
+ 			assigned-clocks = <&scmi_clk SCMI_CLK_CPUB01>;
+ 			assigned-clock-rates = <816000000>;
++			operating-points-v2 = <&cluster1_opp_table>;
+ 			cpu-idle-states = <&CPU_SLEEP>;
+ 			i-cache-size = <65536>;
+ 			i-cache-line-size = <64>;
+@@ -159,6 +374,7 @@
+ 			enable-method = "psci";
+ 			capacity-dmips-mhz = <1024>;
+ 			clocks = <&scmi_clk SCMI_CLK_CPUB01>;
++			operating-points-v2 = <&cluster1_opp_table>;
+ 			cpu-idle-states = <&CPU_SLEEP>;
+ 			i-cache-size = <65536>;
+ 			i-cache-line-size = <64>;
+@@ -180,6 +396,7 @@
+ 			clocks = <&scmi_clk SCMI_CLK_CPUB23>;
+ 			assigned-clocks = <&scmi_clk SCMI_CLK_CPUB23>;
+ 			assigned-clock-rates = <816000000>;
++			operating-points-v2 = <&cluster2_opp_table>;
+ 			cpu-idle-states = <&CPU_SLEEP>;
+ 			i-cache-size = <65536>;
+ 			i-cache-line-size = <64>;
+@@ -199,6 +416,7 @@
+ 			enable-method = "psci";
+ 			capacity-dmips-mhz = <1024>;
+ 			clocks = <&scmi_clk SCMI_CLK_CPUB23>;
++			operating-points-v2 = <&cluster2_opp_table>;
+ 			cpu-idle-states = <&CPU_SLEEP>;
+ 			i-cache-size = <65536>;
+ 			i-cache-line-size = <64>;
+@@ -360,6 +578,230 @@
+ 		#clock-cells = <0>;
+ 	};
+ 
++	thermal_zones: thermal-zones {
++		soc_thermal: soc-thermal {
++			polling-delay-passive = <20>; /* milliseconds */
++			polling-delay = <1000>; /* milliseconds */
++			sustainable-power = <2100>; /* milliwatts */
++
++			thermal-sensors = <&tsadc 0>;
++			trips {
++				trip-point-0 {
++					temperature = <75000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				soc_target: trip-point-1 {
++					temperature = <85000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				trip-point-2 {
++					/* millicelsius */
++					temperature = <115000>;
++					/* millicelsius */
++					hysteresis = <2000>;
++					type = "critical";
++				};
++			};
++
++			cooling-maps {
++				map0 {
++					trip = <&soc_target>;
++					cooling-device = <&cpu_l0 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_l1 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_l2 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_l3 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_b0 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_b1 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_b2 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_b3 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>;
++					contribution = <1024>;
++				};
++			};
++		};
++
++		bigcore0_thermal: bigcore0-thermal {
++			polling-delay-passive = <20>; /* milliseconds */
++			polling-delay = <1000>; /* milliseconds */
++			thermal-sensors = <&tsadc 1>;
++
++			trips {
++				trip-point-0 {
++					temperature = <75000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				b0_target: trip-point-1 {
++					temperature = <85000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				trip-point-2 {
++					/* millicelsius */
++					temperature = <115000>;
++					/* millicelsius */
++					hysteresis = <2000>;
++					type = "critical";
++				};
++			};
++
++			cooling-maps {
++				map0 {
++					trip = <&b0_target>;
++					cooling-device = <&cpu_b0 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_b1 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>;
++					contribution = <1024>;
++				};
++			};
++		};
++
++		bigcore1_thermal: bigcore1-thermal {
++			polling-delay-passive = <20>; /* milliseconds */
++			polling-delay = <1000>; /* milliseconds */
++			thermal-sensors = <&tsadc 2>;
++			trips {
++				trip-point-0 {
++					temperature = <75000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				b1_target: trip-point-1 {
++					temperature = <85000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				trip-point-2 {
++					/* millicelsius */
++					temperature = <115000>;
++					/* millicelsius */
++					hysteresis = <2000>;
++					type = "critical";
++				};
++			};
++
++			cooling-maps {
++				map0 {
++					trip = <&b1_target>;
++					cooling-device = <&cpu_b2 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_b3 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>;
++					contribution = <1024>;
++				};
++			};
++		};
++
++		little_core_thermal: littlecore-thermal {
++			polling-delay-passive = <20>; /* milliseconds */
++			polling-delay = <1000>; /* milliseconds */
++			thermal-sensors = <&tsadc 3>;
++			trips {
++				trip-point-0 {
++					temperature = <75000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				l0_target: trip-point-1 {
++					temperature = <85000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				trip-point-2 {
++					/* millicelsius */
++					temperature = <115000>;
++					/* millicelsius */
++					hysteresis = <2000>;
++					type = "critical";
++				};
++			};
++
++			cooling-maps {
++				map0 {
++					trip = <&l0_target>;
++					cooling-device = <&cpu_l0 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_l1 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_l2 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
++							 <&cpu_l3 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>;
++					contribution = <1024>;
++				};
++			};
++		};
++
++		center_thermal: center-thermal {
++			polling-delay-passive = <20>; /* milliseconds */
++			polling-delay = <1000>; /* milliseconds */
++			thermal-sensors = <&tsadc 4>;
++			trips {
++				trip-point-0 {
++					temperature = <75000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				trip-point-1 {
++					temperature = <85000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				trip-point-2 {
++					/* millicelsius */
++					temperature = <115000>;
++					/* millicelsius */
++					hysteresis = <2000>;
++					type = "critical";
++				};
++			};
++		};
++
++		gpu_thermal: gpu-thermal {
++			polling-delay-passive = <20>; /* milliseconds */
++			polling-delay = <1000>; /* milliseconds */
++			thermal-sensors = <&tsadc 5>;
++			trips {
++				trip-point-0 {
++					temperature = <75000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				trip-point-1 {
++					temperature = <85000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				trip-point-2 {
++					/* millicelsius */
++					temperature = <115000>;
++					/* millicelsius */
++					hysteresis = <2000>;
++					type = "critical";
++				};
++			};
++		};
++
++		npu_thermal: npu-thermal {
++			polling-delay-passive = <20>; /* milliseconds */
++			polling-delay = <1000>; /* milliseconds */
++			thermal-sensors = <&tsadc 6>;
++			trips {
++				trip-point-0 {
++					temperature = <75000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				trip-point-1 {
++					temperature = <85000>;
++					hysteresis = <2000>;
++					type = "passive";
++				};
++				trip-point-2 {
++					/* millicelsius */
++					temperature = <115000>;
++					/* millicelsius */
++					hysteresis = <2000>;
++					type = "critical";
++				};
++			};
++		};
++	};
++
+ 	timer {
+ 		compatible = "arm,armv8-timer";
+ 		interrupts = <GIC_PPI 13 IRQ_TYPE_LEVEL_HIGH 0>,
+@@ -402,6 +844,16 @@
+ 		reg = <0x0 0xfd58c000 0x0 0x1000>;
+ 	};
+ 
++	bigcore0_grf: syscon@fd590000 {
++		compatible = "rockchip,rk3588-bigcore0-grf", "syscon";
++		reg = <0x0 0xfd590000 0x0 0x100>;
++	};
++
++	bigcore1_grf: syscon@fd592000 {
++		compatible = "rockchip,rk3588-bigcore1-grf", "syscon";
++		reg = <0x0 0xfd592000 0x0 0x100>;
++	};
++
+ 	php_grf: syscon@fd5b0000 {
+ 		compatible = "rockchip,rk3588-php-grf", "syscon";
+ 		reg = <0x0 0xfd5b0000 0x0 0x1000>;
diff --git a/target/linux/rockchip/patches-6.1/251-arm64-dts-rockchip-rk3588-evb1-add-cpu-regulator-inf.patch b/target/linux/rockchip/patches-6.1/251-arm64-dts-rockchip-rk3588-evb1-add-cpu-regulator-inf.patch
new file mode 100644
index 0000000000..fffbb9dd19
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/251-arm64-dts-rockchip-rk3588-evb1-add-cpu-regulator-inf.patch
@@ -0,0 +1,50 @@
+From 0391014ac6b5e7304c274f11720990c3f517eb8b Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 18 Aug 2022 14:35:46 +0200
+Subject: [PATCH 251/383] arm64: dts: rockchip: rk3588-evb1: add cpu regulator
+ info
+
+Add regulator information for the CPU and enable the thermal sensor
+to have working cpu frequency scaling.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588-evb1-v10.dts     | 19 +++++++++++++++++++
+ 1 file changed, 19 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
+@@ -49,6 +49,21 @@
+ 	};
+ };
+ 
++&cpu_l0 {
++	cpu-supply = <&vdd_cpu_lit_s0>;
++	mem-supply = <&vdd_cpu_lit_mem_s0>;
++};
++
++&cpu_b0 {
++	cpu-supply = <&vdd_cpu_big0_s0>;
++	mem-supply = <&vdd_cpu_big0_mem_s0>;
++};
++
++&cpu_b2 {
++	cpu-supply = <&vdd_cpu_big1_s0>;
++	mem-supply = <&vdd_cpu_big1_mem_s0>;
++};
++
+ &gmac0 {
+ 	clock_in_out = "output";
+ 	phy-handle = <&rgmii_phy>;
+@@ -863,6 +878,10 @@
+ 	};
+ };
+ 
++&tsadc {
++	status = "okay";
++};
++
+ &uart2 {
+ 	pinctrl-0 = <&uart2m0_xfer>;
+ 	status = "okay";
diff --git a/target/linux/rockchip/patches-6.1/252-dt-bindings-usb-Add-RK3588-OHCI.patch b/target/linux/rockchip/patches-6.1/252-dt-bindings-usb-Add-RK3588-OHCI.patch
new file mode 100644
index 0000000000..c828d818f2
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/252-dt-bindings-usb-Add-RK3588-OHCI.patch
@@ -0,0 +1,55 @@
+From 5b5dce2b195fbdfd126a06304fc37f0c93cb1752 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 30 Mar 2023 16:31:18 +0200
+Subject: [PATCH 252/383] dt-bindings: usb: Add RK3588 OHCI
+
+Add compatible for RK3588 OHCI. As far as I know it's fully
+compatible with generic-ohci.
+
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/usb/generic-ohci.yaml   | 17 ++++++++++++++++-
+ 1 file changed, 16 insertions(+), 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/usb/generic-ohci.yaml
++++ b/Documentation/devicetree/bindings/usb/generic-ohci.yaml
+@@ -44,6 +44,7 @@ properties:
+               - hpe,gxp-ohci
+               - ibm,476gtr-ohci
+               - ingenic,jz4740-ohci
++              - rockchip,rk3588-ohci
+               - snps,hsdk-v1.0-ohci
+           - const: generic-ohci
+       - enum:
+@@ -69,7 +70,7 @@ properties:
+ 
+   clocks:
+     minItems: 1
+-    maxItems: 3
++    maxItems: 4
+     description: |
+       In case the Renesas R-Car Gen3 SoCs:
+         - if a host only channel: first clock should be host.
+@@ -147,6 +148,20 @@ allOf:
+     then:
+       properties:
+         transceiver: false
++  - if:
++      properties:
++        compatible:
++          contains:
++            const: rockchip,rk3588-ohci
++    then:
++      properties:
++        clocks:
++          minItems: 4
++    else:
++      properties:
++        clocks:
++          minItems: 1
++          maxItems: 3
+ 
+ unevaluatedProperties: false
+ 
diff --git a/target/linux/rockchip/patches-6.1/253-dt-bindings-usb-Add-RK3588-EHCI.patch b/target/linux/rockchip/patches-6.1/253-dt-bindings-usb-Add-RK3588-EHCI.patch
new file mode 100644
index 0000000000..378aed7d82
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/253-dt-bindings-usb-Add-RK3588-EHCI.patch
@@ -0,0 +1,26 @@
+From 42fc4ed4b445af9300c8b96a20dcc3c39b347ce6 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 4 Apr 2023 15:32:54 +0200
+Subject: [PATCH 253/383] dt-bindings: usb: Add RK3588 EHCI
+
+Add compatible for RK3588 EHCI. As far as I know it's fully
+compatible with generic-ehci.
+
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/usb/generic-ehci.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/usb/generic-ehci.yaml
++++ b/Documentation/devicetree/bindings/usb/generic-ehci.yaml
+@@ -61,6 +61,7 @@ properties:
+               - ibm,476gtr-ehci
+               - nxp,lpc1850-ehci
+               - qca,ar7100-ehci
++              - rockchip,rk3588-ehci
+               - snps,hsdk-v1.0-ehci
+               - socionext,uniphier-ehci
+           - const: generic-ehci
diff --git a/target/linux/rockchip/patches-6.1/254-usb-host-ohci-platform-increase-max-clock-number-to-.patch b/target/linux/rockchip/patches-6.1/254-usb-host-ohci-platform-increase-max-clock-number-to-.patch
new file mode 100644
index 0000000000..a7d00f3ec0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/254-usb-host-ohci-platform-increase-max-clock-number-to-.patch
@@ -0,0 +1,26 @@
+From af8418372ced7a8362dd0770e662312f43581a07 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 29 Mar 2023 18:54:49 +0200
+Subject: [PATCH 254/383] usb: host: ohci-platform: increase max clock number
+ to 4
+
+Rockchip RK3588 OHCI requires 4 clocks to be enabled.
+
+Acked-by: Alan Stern <stern@rowland.harvard.edu>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/usb/host/ohci-platform.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/usb/host/ohci-platform.c
++++ b/drivers/usb/host/ohci-platform.c
+@@ -33,7 +33,7 @@
+ #include "ohci.h"
+ 
+ #define DRIVER_DESC "OHCI generic platform driver"
+-#define OHCI_MAX_CLKS 3
++#define OHCI_MAX_CLKS 4
+ #define hcd_to_ohci_priv(h) ((struct ohci_platform_priv *)hcd_to_ohci(h)->priv)
+ 
+ struct ohci_platform_priv {
diff --git a/target/linux/rockchip/patches-6.1/255-dt-bindings-phy-rockchip-inno-usb2phy-add-rk3588.patch b/target/linux/rockchip/patches-6.1/255-dt-bindings-phy-rockchip-inno-usb2phy-add-rk3588.patch
new file mode 100644
index 0000000000..ed6bcb3059
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/255-dt-bindings-phy-rockchip-inno-usb2phy-add-rk3588.patch
@@ -0,0 +1,64 @@
+From fe0ff33f83bc59d7e12efe997922e93fe2e25fae Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 30 Mar 2023 16:25:20 +0200
+Subject: [PATCH 255/383] dt-bindings: phy: rockchip,inno-usb2phy: add rk3588
+
+Add compatible for the USB2 phy in the Rockchip RK3588 SoC.
+
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/phy/rockchip,inno-usb2phy.yaml   | 21 ++++++++++++++++---
+ 1 file changed, 18 insertions(+), 3 deletions(-)
+
+--- a/Documentation/devicetree/bindings/phy/rockchip,inno-usb2phy.yaml
++++ b/Documentation/devicetree/bindings/phy/rockchip,inno-usb2phy.yaml
+@@ -20,6 +20,7 @@ properties:
+       - rockchip,rk3366-usb2phy
+       - rockchip,rk3399-usb2phy
+       - rockchip,rk3568-usb2phy
++      - rockchip,rk3588-usb2phy
+       - rockchip,rv1108-usb2phy
+ 
+   reg:
+@@ -56,6 +57,14 @@ properties:
+     description: Muxed interrupt for both ports
+     maxItems: 1
+ 
++  resets:
++    maxItems: 2
++
++  reset-names:
++    items:
++      - const: phy
++      - const: apb
++
+   rockchip,usbgrf:
+     $ref: /schemas/types.yaml#/definitions/phandle
+     description:
+@@ -120,15 +129,21 @@ required:
+   - reg
+   - clock-output-names
+   - "#clock-cells"
+-  - host-port
+-  - otg-port
++
++anyOf:
++  - required:
++      - otg-port
++  - required:
++      - host-port
+ 
+ allOf:
+   - if:
+       properties:
+         compatible:
+           contains:
+-            const: rockchip,rk3568-usb2phy
++            enum:
++              - rockchip,rk3568-usb2phy
++              - rockchip,rk3588-usb2phy
+ 
+     then:
+       properties:
diff --git a/target/linux/rockchip/patches-6.1/256-phy-phy-rockchip-inno-usb2-add-rk3588-support.patch b/target/linux/rockchip/patches-6.1/256-phy-phy-rockchip-inno-usb2-add-rk3588-support.patch
new file mode 100644
index 0000000000..22bde63f61
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/256-phy-phy-rockchip-inno-usb2-add-rk3588-support.patch
@@ -0,0 +1,350 @@
+From dffcf64f750d5853835324a6c122f1a5ccfe1db7 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 12 Jan 2023 19:15:52 +0100
+Subject: [PATCH 256/383] phy: phy-rockchip-inno-usb2: add rk3588 support
+
+Add basic support for the USB2 PHY found in the Rockchip RK3588.
+
+Co-developed-by: William Wu <william.wu@rock-chips.com>
+Signed-off-by: William Wu <william.wu@rock-chips.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/phy/rockchip/phy-rockchip-inno-usb2.c | 226 ++++++++++++++++--
+ 1 file changed, 211 insertions(+), 15 deletions(-)
+
+--- a/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
++++ b/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
+@@ -116,6 +116,12 @@ struct rockchip_chg_det_reg {
+  * @bvalid_det_en: vbus valid rise detection enable register.
+  * @bvalid_det_st: vbus valid rise detection status register.
+  * @bvalid_det_clr: vbus valid rise detection clear register.
++ * @disfall_en: host disconnect fall edge detection enable.
++ * @disfall_st: host disconnect fall edge detection state.
++ * @disfall_clr: host disconnect fall edge detection clear.
++ * @disrise_en: host disconnect rise edge detection enable.
++ * @disrise_st: host disconnect rise edge detection state.
++ * @disrise_clr: host disconnect rise edge detection clear.
+  * @id_det_en: id detection enable register.
+  * @id_det_st: id detection state register.
+  * @id_det_clr: id detection clear register.
+@@ -133,6 +139,12 @@ struct rockchip_usb2phy_port_cfg {
+ 	struct usb2phy_reg	bvalid_det_en;
+ 	struct usb2phy_reg	bvalid_det_st;
+ 	struct usb2phy_reg	bvalid_det_clr;
++	struct usb2phy_reg      disfall_en;
++	struct usb2phy_reg      disfall_st;
++	struct usb2phy_reg      disfall_clr;
++	struct usb2phy_reg      disrise_en;
++	struct usb2phy_reg      disrise_st;
++	struct usb2phy_reg      disrise_clr;
+ 	struct usb2phy_reg	id_det_en;
+ 	struct usb2phy_reg	id_det_st;
+ 	struct usb2phy_reg	id_det_clr;
+@@ -168,6 +180,7 @@ struct rockchip_usb2phy_cfg {
+  * @port_id: flag for otg port or host port.
+  * @suspended: phy suspended flag.
+  * @vbus_attached: otg device vbus status.
++ * @host_disconnect: usb host disconnect status.
+  * @bvalid_irq: IRQ number assigned for vbus valid rise detection.
+  * @id_irq: IRQ number assigned for ID pin detection.
+  * @ls_irq: IRQ number assigned for linestate detection.
+@@ -187,6 +200,7 @@ struct rockchip_usb2phy_port {
+ 	unsigned int	port_id;
+ 	bool		suspended;
+ 	bool		vbus_attached;
++	bool            host_disconnect;
+ 	int		bvalid_irq;
+ 	int		id_irq;
+ 	int		ls_irq;
+@@ -405,6 +419,27 @@ static int rockchip_usb2phy_extcon_regis
+ 	return 0;
+ }
+ 
++static int rockchip_usb2phy_enable_host_disc_irq(struct rockchip_usb2phy *rphy,
++						 struct rockchip_usb2phy_port *rport,
++						 bool en)
++{
++	int ret;
++
++	ret = property_enable(rphy->grf, &rport->port_cfg->disfall_clr, true);
++	if (ret)
++		return ret;
++
++	ret = property_enable(rphy->grf, &rport->port_cfg->disfall_en, en);
++	if (ret)
++		return ret;
++
++	ret = property_enable(rphy->grf, &rport->port_cfg->disrise_clr, true);
++	if (ret)
++		return ret;
++
++	return property_enable(rphy->grf, &rport->port_cfg->disrise_en, en);
++}
++
+ static int rockchip_usb2phy_init(struct phy *phy)
+ {
+ 	struct rockchip_usb2phy_port *rport = phy_get_drvdata(phy);
+@@ -449,6 +484,15 @@ static int rockchip_usb2phy_init(struct
+ 			dev_dbg(&rport->phy->dev, "mode %d\n", rport->mode);
+ 		}
+ 	} else if (rport->port_id == USB2PHY_PORT_HOST) {
++		if (rport->port_cfg->disfall_en.offset) {
++			rport->host_disconnect = true;
++			ret = rockchip_usb2phy_enable_host_disc_irq(rphy, rport, true);
++			if (ret) {
++				dev_err(rphy->dev, "failed to enable disconnect irq\n");
++				goto out;
++			}
++		}
++
+ 		/* clear linestate and enable linestate detect irq */
+ 		ret = property_enable(rphy->grf,
+ 				      &rport->port_cfg->ls_det_clr, true);
+@@ -810,9 +854,7 @@ static void rockchip_usb2phy_sm_work(str
+ 	struct rockchip_usb2phy_port *rport =
+ 		container_of(work, struct rockchip_usb2phy_port, sm_work.work);
+ 	struct rockchip_usb2phy *rphy = dev_get_drvdata(rport->phy->dev.parent);
+-	unsigned int sh = rport->port_cfg->utmi_hstdet.bitend -
+-			  rport->port_cfg->utmi_hstdet.bitstart + 1;
+-	unsigned int ul, uhd, state;
++	unsigned int sh, ul, uhd, state;
+ 	unsigned int ul_mask, uhd_mask;
+ 	int ret;
+ 
+@@ -822,18 +864,26 @@ static void rockchip_usb2phy_sm_work(str
+ 	if (ret < 0)
+ 		goto next_schedule;
+ 
+-	ret = regmap_read(rphy->grf, rport->port_cfg->utmi_hstdet.offset, &uhd);
+-	if (ret < 0)
+-		goto next_schedule;
+-
+-	uhd_mask = GENMASK(rport->port_cfg->utmi_hstdet.bitend,
+-			   rport->port_cfg->utmi_hstdet.bitstart);
+ 	ul_mask = GENMASK(rport->port_cfg->utmi_ls.bitend,
+ 			  rport->port_cfg->utmi_ls.bitstart);
+ 
+-	/* stitch on utmi_ls and utmi_hstdet as phy state */
+-	state = ((uhd & uhd_mask) >> rport->port_cfg->utmi_hstdet.bitstart) |
+-		(((ul & ul_mask) >> rport->port_cfg->utmi_ls.bitstart) << sh);
++	if (rport->port_cfg->utmi_hstdet.offset) {
++		ret = regmap_read(rphy->grf, rport->port_cfg->utmi_hstdet.offset, &uhd);
++		if (ret < 0)
++			goto next_schedule;
++
++		uhd_mask = GENMASK(rport->port_cfg->utmi_hstdet.bitend,
++				   rport->port_cfg->utmi_hstdet.bitstart);
++
++		sh = rport->port_cfg->utmi_hstdet.bitend -
++		     rport->port_cfg->utmi_hstdet.bitstart + 1;
++		/* stitch on utmi_ls and utmi_hstdet as phy state */
++		state = ((uhd & uhd_mask) >> rport->port_cfg->utmi_hstdet.bitstart) |
++			(((ul & ul_mask) >> rport->port_cfg->utmi_ls.bitstart) << sh);
++	} else {
++		state = ((ul & ul_mask) >> rport->port_cfg->utmi_ls.bitstart) << 1 |
++			rport->host_disconnect;
++	}
+ 
+ 	switch (state) {
+ 	case PHY_STATE_HS_ONLINE:
+@@ -966,6 +1016,31 @@ static irqreturn_t rockchip_usb2phy_otg_
+ 	return ret;
+ }
+ 
++static irqreturn_t rockchip_usb2phy_host_disc_irq(int irq, void *data)
++{
++	struct rockchip_usb2phy_port *rport = data;
++	struct rockchip_usb2phy *rphy = dev_get_drvdata(rport->phy->dev.parent);
++
++	if (!property_enabled(rphy->grf, &rport->port_cfg->disfall_st) &&
++	    !property_enabled(rphy->grf, &rport->port_cfg->disrise_st))
++		return IRQ_NONE;
++
++	mutex_lock(&rport->mutex);
++
++	/* clear disconnect fall or rise detect irq pending status */
++	if (property_enabled(rphy->grf, &rport->port_cfg->disfall_st)) {
++		property_enable(rphy->grf, &rport->port_cfg->disfall_clr, true);
++		rport->host_disconnect = false;
++	} else if (property_enabled(rphy->grf, &rport->port_cfg->disrise_st)) {
++		property_enable(rphy->grf, &rport->port_cfg->disrise_clr, true);
++		rport->host_disconnect = true;
++	}
++
++	mutex_unlock(&rport->mutex);
++
++	return IRQ_HANDLED;
++}
++
+ static irqreturn_t rockchip_usb2phy_irq(int irq, void *data)
+ {
+ 	struct rockchip_usb2phy *rphy = data;
+@@ -978,6 +1053,10 @@ static irqreturn_t rockchip_usb2phy_irq(
+ 		if (!rport->phy)
+ 			continue;
+ 
++		if (rport->port_id == USB2PHY_PORT_HOST &&
++		    rport->port_cfg->disfall_en.offset)
++			ret |= rockchip_usb2phy_host_disc_irq(irq, rport);
++
+ 		switch (rport->port_id) {
+ 		case USB2PHY_PORT_OTG:
+ 			if (rport->mode != USB_DR_MODE_HOST &&
+@@ -1233,7 +1312,7 @@ static int rockchip_usb2phy_probe(struct
+ 	}
+ 
+ 	/* support address_cells=2 */
+-	if (reg == 0) {
++	if (of_property_count_u32_elems(np, "reg") > 2 && reg == 0) {
+ 		if (of_property_read_u32_index(np, "reg", 1, &reg)) {
+ 			dev_err(dev, "the reg property is not assigned in %pOFn node\n",
+ 				np);
+@@ -1254,14 +1333,14 @@ static int rockchip_usb2phy_probe(struct
+ 
+ 	/* find out a proper config which can be matched with dt. */
+ 	index = 0;
+-	while (phy_cfgs[index].reg) {
++	do {
+ 		if (phy_cfgs[index].reg == reg) {
+ 			rphy->phy_cfg = &phy_cfgs[index];
+ 			break;
+ 		}
+ 
+ 		++index;
+-	}
++	} while (phy_cfgs[index].reg);
+ 
+ 	if (!rphy->phy_cfg) {
+ 		dev_err(dev, "no phy-config can be matched with %pOFn node\n",
+@@ -1664,6 +1743,122 @@ static const struct rockchip_usb2phy_cfg
+ 	{ /* sentinel */ }
+ };
+ 
++static const struct rockchip_usb2phy_cfg rk3588_phy_cfgs[] = {
++	{
++		.reg = 0x0000,
++		.num_ports	= 1,
++		.clkout_ctl	= { 0x0000, 0, 0, 1, 0 },
++		.port_cfgs	= {
++			[USB2PHY_PORT_OTG] = {
++				.phy_sus	= { 0x000c, 11, 11, 0, 1 },
++				.bvalid_det_en	= { 0x0080, 1, 1, 0, 1 },
++				.bvalid_det_st	= { 0x0084, 1, 1, 0, 1 },
++				.bvalid_det_clr = { 0x0088, 1, 1, 0, 1 },
++				.ls_det_en	= { 0x0080, 0, 0, 0, 1 },
++				.ls_det_st	= { 0x0084, 0, 0, 0, 1 },
++				.ls_det_clr	= { 0x0088, 0, 0, 0, 1 },
++				.disfall_en	= { 0x0080, 6, 6, 0, 1 },
++				.disfall_st	= { 0x0084, 6, 6, 0, 1 },
++				.disfall_clr	= { 0x0088, 6, 6, 0, 1 },
++				.disrise_en	= { 0x0080, 5, 5, 0, 1 },
++				.disrise_st	= { 0x0084, 5, 5, 0, 1 },
++				.disrise_clr	= { 0x0088, 5, 5, 0, 1 },
++				.utmi_avalid	= { 0x00c0, 7, 7, 0, 1 },
++				.utmi_bvalid	= { 0x00c0, 6, 6, 0, 1 },
++				.utmi_ls	= { 0x00c0, 10, 9, 0, 1 },
++			}
++		},
++		.chg_det = {
++			.cp_det		= { 0x00c0, 0, 0, 0, 1 },
++			.dcp_det	= { 0x00c0, 0, 0, 0, 1 },
++			.dp_det		= { 0x00c0, 1, 1, 1, 0 },
++			.idm_sink_en	= { 0x0008, 5, 5, 1, 0 },
++			.idp_sink_en	= { 0x0008, 5, 5, 0, 1 },
++			.idp_src_en	= { 0x0008, 14, 14, 0, 1 },
++			.rdm_pdwn_en	= { 0x0008, 14, 14, 0, 1 },
++			.vdm_src_en	= { 0x0008, 7, 6, 0, 3 },
++			.vdp_src_en	= { 0x0008, 7, 6, 0, 3 },
++		},
++	},
++	{
++		.reg = 0x4000,
++		.num_ports	= 1,
++		.clkout_ctl	= { 0x0000, 0, 0, 1, 0 },
++		.port_cfgs	= {
++			[USB2PHY_PORT_OTG] = {
++				.phy_sus	= { 0x000c, 11, 11, 0, 1 },
++				.bvalid_det_en	= { 0x0080, 1, 1, 0, 1 },
++				.bvalid_det_st	= { 0x0084, 1, 1, 0, 1 },
++				.bvalid_det_clr = { 0x0088, 1, 1, 0, 1 },
++				.ls_det_en	= { 0x0080, 0, 0, 0, 1 },
++				.ls_det_st	= { 0x0084, 0, 0, 0, 1 },
++				.ls_det_clr	= { 0x0088, 0, 0, 0, 1 },
++				.disfall_en	= { 0x0080, 6, 6, 0, 1 },
++				.disfall_st	= { 0x0084, 6, 6, 0, 1 },
++				.disfall_clr	= { 0x0088, 6, 6, 0, 1 },
++				.disrise_en	= { 0x0080, 5, 5, 0, 1 },
++				.disrise_st	= { 0x0084, 5, 5, 0, 1 },
++				.disrise_clr	= { 0x0088, 5, 5, 0, 1 },
++				.utmi_avalid	= { 0x00c0, 7, 7, 0, 1 },
++				.utmi_bvalid	= { 0x00c0, 6, 6, 0, 1 },
++				.utmi_ls	= { 0x00c0, 10, 9, 0, 1 },
++			}
++		},
++		.chg_det = {
++			.cp_det		= { 0x00c0, 0, 0, 0, 1 },
++			.dcp_det	= { 0x00c0, 0, 0, 0, 1 },
++			.dp_det		= { 0x00c0, 1, 1, 1, 0 },
++			.idm_sink_en	= { 0x0008, 5, 5, 1, 0 },
++			.idp_sink_en	= { 0x0008, 5, 5, 0, 1 },
++			.idp_src_en	= { 0x0008, 14, 14, 0, 1 },
++			.rdm_pdwn_en	= { 0x0008, 14, 14, 0, 1 },
++			.vdm_src_en	= { 0x0008, 7, 6, 0, 3 },
++			.vdp_src_en	= { 0x0008, 7, 6, 0, 3 },
++		},
++	},
++	{
++		.reg = 0x8000,
++		.num_ports	= 1,
++		.clkout_ctl	= { 0x0000, 0, 0, 1, 0 },
++		.port_cfgs	= {
++			[USB2PHY_PORT_HOST] = {
++				.phy_sus	= { 0x0008, 2, 2, 0, 1 },
++				.ls_det_en	= { 0x0080, 0, 0, 0, 1 },
++				.ls_det_st	= { 0x0084, 0, 0, 0, 1 },
++				.ls_det_clr	= { 0x0088, 0, 0, 0, 1 },
++				.disfall_en	= { 0x0080, 6, 6, 0, 1 },
++				.disfall_st	= { 0x0084, 6, 6, 0, 1 },
++				.disfall_clr	= { 0x0088, 6, 6, 0, 1 },
++				.disrise_en	= { 0x0080, 5, 5, 0, 1 },
++				.disrise_st	= { 0x0084, 5, 5, 0, 1 },
++				.disrise_clr	= { 0x0088, 5, 5, 0, 1 },
++				.utmi_ls	= { 0x00c0, 10, 9, 0, 1 },
++			}
++		},
++	},
++	{
++		.reg = 0xc000,
++		.num_ports	= 1,
++		.clkout_ctl	= { 0x0000, 0, 0, 1, 0 },
++		.port_cfgs	= {
++			[USB2PHY_PORT_HOST] = {
++				.phy_sus	= { 0x0008, 2, 2, 0, 1 },
++				.ls_det_en	= { 0x0080, 0, 0, 0, 1 },
++				.ls_det_st	= { 0x0084, 0, 0, 0, 1 },
++				.ls_det_clr	= { 0x0088, 0, 0, 0, 1 },
++				.disfall_en	= { 0x0080, 6, 6, 0, 1 },
++				.disfall_st	= { 0x0084, 6, 6, 0, 1 },
++				.disfall_clr	= { 0x0088, 6, 6, 0, 1 },
++				.disrise_en	= { 0x0080, 5, 5, 0, 1 },
++				.disrise_st	= { 0x0084, 5, 5, 0, 1 },
++				.disrise_clr	= { 0x0088, 5, 5, 0, 1 },
++				.utmi_ls	= { 0x00c0, 10, 9, 0, 1 },
++			}
++		},
++	},
++	{ /* sentinel */ }
++};
++
+ static const struct rockchip_usb2phy_cfg rv1108_phy_cfgs[] = {
+ 	{
+ 		.reg = 0x100,
+@@ -1714,6 +1909,7 @@ static const struct of_device_id rockchi
+ 	{ .compatible = "rockchip,rk3366-usb2phy", .data = &rk3366_phy_cfgs },
+ 	{ .compatible = "rockchip,rk3399-usb2phy", .data = &rk3399_phy_cfgs },
+ 	{ .compatible = "rockchip,rk3568-usb2phy", .data = &rk3568_phy_cfgs },
++	{ .compatible = "rockchip,rk3588-usb2phy", .data = &rk3588_phy_cfgs },
+ 	{ .compatible = "rockchip,rv1108-usb2phy", .data = &rv1108_phy_cfgs },
+ 	{}
+ };
diff --git a/target/linux/rockchip/patches-6.1/257-phy-phy-rockchip-inno-usb2-add-reset-support.patch b/target/linux/rockchip/patches-6.1/257-phy-phy-rockchip-inno-usb2-add-reset-support.patch
new file mode 100644
index 0000000000..6c6930070a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/257-phy-phy-rockchip-inno-usb2-add-reset-support.patch
@@ -0,0 +1,96 @@
+From 6a4a6ef3b1d5217de9d9b51ae92008b0f628f165 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 3 Apr 2023 20:23:14 +0200
+Subject: [PATCH 257/383] phy: phy-rockchip-inno-usb2: add reset support
+
+Add reset handling support, which is needed for proper
+operation with RK3588.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/phy/rockchip/phy-rockchip-inno-usb2.c | 38 +++++++++++++++++++
+ 1 file changed, 38 insertions(+)
+
+--- a/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
++++ b/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
+@@ -24,6 +24,7 @@
+ #include <linux/platform_device.h>
+ #include <linux/power_supply.h>
+ #include <linux/regmap.h>
++#include <linux/reset.h>
+ #include <linux/mfd/syscon.h>
+ #include <linux/usb/of.h>
+ #include <linux/usb/otg.h>
+@@ -223,6 +224,7 @@ struct rockchip_usb2phy_port {
+  * @clk: clock struct of phy input clk.
+  * @clk480m: clock struct of phy output clk.
+  * @clk480m_hw: clock struct of phy output clk management.
++ * @phy_reset: phy reset control.
+  * @chg_state: states involved in USB charger detection.
+  * @chg_type: USB charger types.
+  * @dcd_retries: The retry count used to track Data contact
+@@ -239,6 +241,7 @@ struct rockchip_usb2phy {
+ 	struct clk	*clk;
+ 	struct clk	*clk480m;
+ 	struct clk_hw	clk480m_hw;
++	struct reset_control	*phy_reset;
+ 	enum usb_chg_state	chg_state;
+ 	enum power_supply_type	chg_type;
+ 	u8			dcd_retries;
+@@ -280,6 +283,25 @@ static inline bool property_enabled(stru
+ 	return tmp != reg->disable;
+ }
+ 
++static int rockchip_usb2phy_reset(struct rockchip_usb2phy *rphy)
++{
++	int ret;
++
++	ret = reset_control_assert(rphy->phy_reset);
++	if (ret)
++		return ret;
++
++	udelay(10);
++
++	ret = reset_control_deassert(rphy->phy_reset);
++	if (ret)
++		return ret;
++
++	usleep_range(100, 200);
++
++	return 0;
++}
++
+ static int rockchip_usb2phy_clk480m_prepare(struct clk_hw *hw)
+ {
+ 	struct rockchip_usb2phy *rphy =
+@@ -534,6 +556,18 @@ static int rockchip_usb2phy_power_on(str
+ 		return ret;
+ 	}
+ 
++	/*
++	 * For rk3588, it needs to reset phy when exit from
++	 * suspend mode with common_on_n 1'b1(aka REFCLK_LOGIC,
++	 * Bias, and PLL blocks are powered down) for lower
++	 * power consumption. If you don't want to reset phy,
++	 * please keep the common_on_n 1'b0 to set these blocks
++	 * remain powered.
++	 */
++	ret = rockchip_usb2phy_reset(rphy);
++	if (ret)
++		return ret;
++
+ 	/* waiting for the utmi_clk to become stable */
+ 	usleep_range(1500, 2000);
+ 
+@@ -1348,6 +1382,10 @@ static int rockchip_usb2phy_probe(struct
+ 		return -EINVAL;
+ 	}
+ 
++	rphy->phy_reset = devm_reset_control_get_optional(dev, "phy");
++	if (IS_ERR(rphy->phy_reset))
++		return PTR_ERR(rphy->phy_reset);
++
+ 	rphy->clk = of_clk_get_by_name(np, "phyclk");
+ 	if (!IS_ERR(rphy->clk)) {
+ 		clk_prepare_enable(rphy->clk);
diff --git a/target/linux/rockchip/patches-6.1/258-phy-phy-rockchip-inno-usb2-add-rk3588-phy-tuning-sup.patch b/target/linux/rockchip/patches-6.1/258-phy-phy-rockchip-inno-usb2-add-rk3588-phy-tuning-sup.patch
new file mode 100644
index 0000000000..fb62ef2c9e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/258-phy-phy-rockchip-inno-usb2-add-rk3588-phy-tuning-sup.patch
@@ -0,0 +1,148 @@
+From 63b3d76a9aebdcb0b09a446f4cbb2606050e2ecf Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 3 Apr 2023 20:24:06 +0200
+Subject: [PATCH 258/383] phy: phy-rockchip-inno-usb2: add rk3588 phy tuning
+ support
+
+On RK3588 some registers need to be tweaked to support waking up from
+suspend when a USB device is plugged into a port from a suspended PHY.
+Without this change USB devices only work when they are plugged at
+boot time.
+
+Apart from that it optimizes settings to avoid devices toggling
+between fullspeed and highspeed mode.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/phy/rockchip/phy-rockchip-inno-usb2.c | 63 +++++++++++++++++++
+ 1 file changed, 63 insertions(+)
+
+--- a/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
++++ b/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
+@@ -33,6 +33,8 @@
+ #define SCHEDULE_DELAY		(60 * HZ)
+ #define OTG_SCHEDULE_DELAY	(2 * HZ)
+ 
++struct rockchip_usb2phy;
++
+ enum rockchip_usb2phy_port_id {
+ 	USB2PHY_PORT_OTG,
+ 	USB2PHY_PORT_HOST,
+@@ -163,6 +165,7 @@ struct rockchip_usb2phy_port_cfg {
+  * struct rockchip_usb2phy_cfg - usb-phy configuration.
+  * @reg: the address offset of grf for usb-phy config.
+  * @num_ports: specify how many ports that the phy has.
++ * @phy_tuning: phy default parameters tuning.
+  * @clkout_ctl: keep on/turn off output clk of phy.
+  * @port_cfgs: usb-phy port configurations.
+  * @chg_det: charger detection registers.
+@@ -170,6 +173,7 @@ struct rockchip_usb2phy_port_cfg {
+ struct rockchip_usb2phy_cfg {
+ 	unsigned int	reg;
+ 	unsigned int	num_ports;
++	int (*phy_tuning)(struct rockchip_usb2phy *rphy);
+ 	struct usb2phy_reg	clkout_ctl;
+ 	const struct rockchip_usb2phy_port_cfg	port_cfgs[USB2PHY_NUM_PORTS];
+ 	const struct rockchip_chg_det_reg	chg_det;
+@@ -1400,6 +1404,12 @@ static int rockchip_usb2phy_probe(struct
+ 		goto disable_clks;
+ 	}
+ 
++	if (rphy->phy_cfg->phy_tuning) {
++		ret = rphy->phy_cfg->phy_tuning(rphy);
++		if (ret)
++			goto disable_clks;
++	}
++
+ 	index = 0;
+ 	for_each_available_child_of_node(np, child_np) {
+ 		struct rockchip_usb2phy_port *rport = &rphy->ports[index];
+@@ -1468,6 +1478,55 @@ disable_clks:
+ 	return ret;
+ }
+ 
++static int rk3588_usb2phy_tuning(struct rockchip_usb2phy *rphy)
++{
++	int ret = 0;
++	bool usb3otg = false;
++	/*
++	 * utmi_termselect = 1'b1 (en FS terminations)
++	 * utmi_xcvrselect = 2'b01 (FS transceiver)
++	 */
++	int suspend_cfg = 0x14;
++
++	if (rphy->phy_cfg->reg == 0x0000 || rphy->phy_cfg->reg == 0x4000) {
++		/* USB2 config for USB3_0 and USB3_1 */
++		suspend_cfg |= 0x01; /* utmi_opmode = 2'b01 (no-driving) */
++		usb3otg = true;
++	} else if (rphy->phy_cfg->reg == 0x8000 || rphy->phy_cfg->reg == 0xc000) {
++		/* USB2 config for USB2_0 and USB2_1 */
++		suspend_cfg |= 0x00; /* utmi_opmode = 2'b00 (normal) */
++	} else {
++		return -EINVAL;
++	}
++
++	/* Deassert SIDDQ to power on analog block */
++	ret = regmap_write(rphy->grf, 0x0008, GENMASK(29, 29) | 0x0000);
++	if (ret)
++		return ret;
++
++	/* Do reset after exit IDDQ mode */
++	ret = rockchip_usb2phy_reset(rphy);
++	if (ret)
++		return ret;
++
++	/* suspend configuration */
++	ret |= regmap_write(rphy->grf, 0x000c, GENMASK(20, 16) | suspend_cfg);
++
++	/* HS DC Voltage Level Adjustment 4'b1001 : +5.89% */
++	ret |= regmap_write(rphy->grf, 0x0004, GENMASK(27, 24) | 0x0900);
++
++	/* HS Transmitter Pre-Emphasis Current Control 2'b10 : 2x */
++	ret |= regmap_write(rphy->grf, 0x0008, GENMASK(20, 19) | 0x0010);
++
++	if (!usb3otg)
++		return ret;
++
++	/* Pullup iddig pin for USB3_0 OTG mode */
++	ret |= regmap_write(rphy->grf, 0x0010, GENMASK(17, 16) | 0x0003);
++
++	return ret;
++}
++
+ static const struct rockchip_usb2phy_cfg rk3228_phy_cfgs[] = {
+ 	{
+ 		.reg = 0x760,
+@@ -1785,6 +1844,7 @@ static const struct rockchip_usb2phy_cfg
+ 	{
+ 		.reg = 0x0000,
+ 		.num_ports	= 1,
++		.phy_tuning	= rk3588_usb2phy_tuning,
+ 		.clkout_ctl	= { 0x0000, 0, 0, 1, 0 },
+ 		.port_cfgs	= {
+ 			[USB2PHY_PORT_OTG] = {
+@@ -1821,6 +1881,7 @@ static const struct rockchip_usb2phy_cfg
+ 	{
+ 		.reg = 0x4000,
+ 		.num_ports	= 1,
++		.phy_tuning	= rk3588_usb2phy_tuning,
+ 		.clkout_ctl	= { 0x0000, 0, 0, 1, 0 },
+ 		.port_cfgs	= {
+ 			[USB2PHY_PORT_OTG] = {
+@@ -1857,6 +1918,7 @@ static const struct rockchip_usb2phy_cfg
+ 	{
+ 		.reg = 0x8000,
+ 		.num_ports	= 1,
++		.phy_tuning	= rk3588_usb2phy_tuning,
+ 		.clkout_ctl	= { 0x0000, 0, 0, 1, 0 },
+ 		.port_cfgs	= {
+ 			[USB2PHY_PORT_HOST] = {
+@@ -1877,6 +1939,7 @@ static const struct rockchip_usb2phy_cfg
+ 	{
+ 		.reg = 0xc000,
+ 		.num_ports	= 1,
++		.phy_tuning	= rk3588_usb2phy_tuning,
+ 		.clkout_ctl	= { 0x0000, 0, 0, 1, 0 },
+ 		.port_cfgs	= {
+ 			[USB2PHY_PORT_HOST] = {
diff --git a/target/linux/rockchip/patches-6.1/259-phy-phy-rockchip-inno-usb2-simplify-phy-clock-handli.patch b/target/linux/rockchip/patches-6.1/259-phy-phy-rockchip-inno-usb2-simplify-phy-clock-handli.patch
new file mode 100644
index 0000000000..a51ff74aae
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/259-phy-phy-rockchip-inno-usb2-simplify-phy-clock-handli.patch
@@ -0,0 +1,61 @@
+From 8b4337415d34e2f6c46460b13bc38b97c09646fb Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 3 Apr 2023 21:49:58 +0200
+Subject: [PATCH 259/383] phy: phy-rockchip-inno-usb2: simplify phy clock
+ handling
+
+Simplify phyclk handling by using devm_clk_get_optional_enabled to
+acquire and enable the optional clock. This also fixes a resource
+leak in driver remove path and adds proper error handling.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/phy/rockchip/phy-rockchip-inno-usb2.c | 19 ++++++-------------
+ 1 file changed, 6 insertions(+), 13 deletions(-)
+
+--- a/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
++++ b/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
+@@ -1390,24 +1390,22 @@ static int rockchip_usb2phy_probe(struct
+ 	if (IS_ERR(rphy->phy_reset))
+ 		return PTR_ERR(rphy->phy_reset);
+ 
+-	rphy->clk = of_clk_get_by_name(np, "phyclk");
+-	if (!IS_ERR(rphy->clk)) {
+-		clk_prepare_enable(rphy->clk);
+-	} else {
+-		dev_info(&pdev->dev, "no phyclk specified\n");
+-		rphy->clk = NULL;
++	rphy->clk = devm_clk_get_optional_enabled(dev, "phyclk");
++	if (IS_ERR(rphy->clk)) {
++		return dev_err_probe(&pdev->dev, PTR_ERR(rphy->clk),
++				     "failed to get phyclk\n");
+ 	}
+ 
+ 	ret = rockchip_usb2phy_clk480m_register(rphy);
+ 	if (ret) {
+ 		dev_err(dev, "failed to register 480m output clock\n");
+-		goto disable_clks;
++		return ret;
+ 	}
+ 
+ 	if (rphy->phy_cfg->phy_tuning) {
+ 		ret = rphy->phy_cfg->phy_tuning(rphy);
+ 		if (ret)
+-			goto disable_clks;
++			return ret;
+ 	}
+ 
+ 	index = 0;
+@@ -1470,11 +1468,6 @@ next_child:
+ 
+ put_child:
+ 	of_node_put(child_np);
+-disable_clks:
+-	if (rphy->clk) {
+-		clk_disable_unprepare(rphy->clk);
+-		clk_put(rphy->clk);
+-	}
+ 	return ret;
+ }
+ 
diff --git a/target/linux/rockchip/patches-6.1/260-phy-phy-rockchip-inno-usb2-simplify-getting-match-da.patch b/target/linux/rockchip/patches-6.1/260-phy-phy-rockchip-inno-usb2-simplify-getting-match-da.patch
new file mode 100644
index 0000000000..3c8168ff0a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/260-phy-phy-rockchip-inno-usb2-simplify-getting-match-da.patch
@@ -0,0 +1,55 @@
+From 03ca99979b142af0dcfbe07437bef37a81aff554 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 3 Apr 2023 22:01:14 +0200
+Subject: [PATCH 260/383] phy: phy-rockchip-inno-usb2: simplify getting match
+ data
+
+Simplify the code by directly getting the match data via
+device_get_match_data() instead of open coding its functionality.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/phy/rockchip/phy-rockchip-inno-usb2.c | 12 ++++--------
+ 1 file changed, 4 insertions(+), 8 deletions(-)
+
+--- a/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
++++ b/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
+@@ -1305,7 +1305,6 @@ static int rockchip_usb2phy_probe(struct
+ 	struct phy_provider *provider;
+ 	struct rockchip_usb2phy *rphy;
+ 	const struct rockchip_usb2phy_cfg *phy_cfgs;
+-	const struct of_device_id *match;
+ 	unsigned int reg;
+ 	int index, ret;
+ 
+@@ -1313,12 +1312,6 @@ static int rockchip_usb2phy_probe(struct
+ 	if (!rphy)
+ 		return -ENOMEM;
+ 
+-	match = of_match_device(dev->driver->of_match_table, dev);
+-	if (!match || !match->data) {
+-		dev_err(dev, "phy configs are not assigned!\n");
+-		return -EINVAL;
+-	}
+-
+ 	if (!dev->parent || !dev->parent->of_node) {
+ 		rphy->grf = syscon_regmap_lookup_by_phandle(np, "rockchip,usbgrf");
+ 		if (IS_ERR(rphy->grf)) {
+@@ -1359,12 +1352,15 @@ static int rockchip_usb2phy_probe(struct
+ 	}
+ 
+ 	rphy->dev = dev;
+-	phy_cfgs = match->data;
++	phy_cfgs = device_get_match_data(dev);
+ 	rphy->chg_state = USB_CHG_STATE_UNDEFINED;
+ 	rphy->chg_type = POWER_SUPPLY_TYPE_UNKNOWN;
+ 	rphy->irq = platform_get_irq_optional(pdev, 0);
+ 	platform_set_drvdata(pdev, rphy);
+ 
++	if (!phy_cfgs)
++		return dev_err_probe(dev, -EINVAL, "phy configs are not assigned!\n");
++
+ 	ret = rockchip_usb2phy_extcon_register(rphy);
+ 	if (ret)
+ 		return ret;
diff --git a/target/linux/rockchip/patches-6.1/261-phy-phy-rockchip-inno-usb2-improve-error-message.patch b/target/linux/rockchip/patches-6.1/261-phy-phy-rockchip-inno-usb2-improve-error-message.patch
new file mode 100644
index 0000000000..97c8388f63
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/261-phy-phy-rockchip-inno-usb2-improve-error-message.patch
@@ -0,0 +1,27 @@
+From 664873357f522876d1f821309ea2685786cb9c07 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 15 May 2023 18:40:42 +0200
+Subject: [PATCH 261/383] phy: phy-rockchip-inno-usb2: improve error message
+
+Printing the OF node is not useful, since we get the same information
+from the device context. Instead print the reg address, that could
+not be found.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/phy/rockchip/phy-rockchip-inno-usb2.c | 3 +--
+ 1 file changed, 1 insertion(+), 2 deletions(-)
+
+--- a/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
++++ b/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
+@@ -1377,8 +1377,7 @@ static int rockchip_usb2phy_probe(struct
+ 	} while (phy_cfgs[index].reg);
+ 
+ 	if (!rphy->phy_cfg) {
+-		dev_err(dev, "no phy-config can be matched with %pOFn node\n",
+-			np);
++		dev_err(dev, "could not find phy config for reg=0x%08x\n", reg);
+ 		return -EINVAL;
+ 	}
+ 
diff --git a/target/linux/rockchip/patches-6.1/262-arm64-dts-rockchip-rk3588-add-USB2-support.patch b/target/linux/rockchip/patches-6.1/262-arm64-dts-rockchip-rk3588-add-USB2-support.patch
new file mode 100644
index 0000000000..a5184047ef
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/262-arm64-dts-rockchip-rk3588-add-USB2-support.patch
@@ -0,0 +1,122 @@
+From c60f1b73585df7675e85454e151cd356b21fbfb1 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 12 Jan 2023 19:20:37 +0100
+Subject: [PATCH 262/383] arm64: dts: rockchip: rk3588: add USB2 support
+
+This adds USB2 (EHCI & OHCI) ports including the related PHYs
+and GRF modules to the rk3588(s) device tree.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 94 +++++++++++++++++++++++
+ 1 file changed, 94 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -839,11 +839,105 @@
+ 		};
+ 	};
+ 
++	usb_host0_ehci: usb@fc800000 {
++		compatible = "rockchip,rk3588-ehci", "generic-ehci";
++		reg = <0x0 0xfc800000 0x0 0x40000>;
++		interrupts = <GIC_SPI 215 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru HCLK_HOST0>, <&cru HCLK_HOST_ARB0>, <&cru ACLK_USB>, <&u2phy2>;
++		phys = <&u2phy2_host>;
++		phy-names = "usb";
++		power-domains = <&power RK3588_PD_USB>;
++		status = "disabled";
++	};
++
++	usb_host0_ohci: usb@fc840000 {
++		compatible = "rockchip,rk3588-ohci", "generic-ohci";
++		reg = <0x0 0xfc840000 0x0 0x40000>;
++		interrupts = <GIC_SPI 216 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru HCLK_HOST0>, <&cru HCLK_HOST_ARB0>, <&cru ACLK_USB>, <&u2phy2>;
++		phys = <&u2phy2_host>;
++		phy-names = "usb";
++		power-domains = <&power RK3588_PD_USB>;
++		status = "disabled";
++	};
++
++	usb_host1_ehci: usb@fc880000 {
++		compatible = "rockchip,rk3588-ehci", "generic-ehci";
++		reg = <0x0 0xfc880000 0x0 0x40000>;
++		interrupts = <GIC_SPI 218 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru HCLK_HOST1>, <&cru HCLK_HOST_ARB1>, <&cru ACLK_USB>, <&u2phy3>;
++		phys = <&u2phy3_host>;
++		phy-names = "usb";
++		power-domains = <&power RK3588_PD_USB>;
++		status = "disabled";
++	};
++
++	usb_host1_ohci: usb@fc8c0000 {
++		compatible = "rockchip,rk3588-ohci", "generic-ohci";
++		reg = <0x0 0xfc8c0000 0x0 0x40000>;
++		interrupts = <GIC_SPI 219 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru HCLK_HOST1>, <&cru HCLK_HOST_ARB1>, <&cru ACLK_USB>, <&u2phy3>;
++		phys = <&u2phy3_host>;
++		phy-names = "usb";
++		power-domains = <&power RK3588_PD_USB>;
++		status = "disabled";
++	};
++
+ 	sys_grf: syscon@fd58c000 {
+ 		compatible = "rockchip,rk3588-sys-grf", "syscon";
+ 		reg = <0x0 0xfd58c000 0x0 0x1000>;
+ 	};
+ 
++	usb2phy2_grf: syscon@fd5d8000 {
++		compatible = "rockchip,rk3588-usb2phy-grf", "syscon", "simple-mfd";
++		reg = <0x0 0xfd5d8000 0x0 0x4000>;
++		#address-cells = <1>;
++		#size-cells = <1>;
++
++		u2phy2: usb2-phy@8000 {
++			compatible = "rockchip,rk3588-usb2phy";
++			reg = <0x8000 0x10>;
++			interrupts = <GIC_SPI 391 IRQ_TYPE_LEVEL_HIGH 0>;
++			resets = <&cru SRST_OTGPHY_U2_0>, <&cru SRST_P_USB2PHY_U2_0_GRF0>;
++			reset-names = "phy", "apb";
++			clocks = <&cru CLK_USB2PHY_HDPTXRXPHY_REF>;
++			clock-names = "phyclk";
++			clock-output-names = "usb480m_phy2";
++			#clock-cells = <0>;
++			status = "disabled";
++
++			u2phy2_host: host-port {
++				#phy-cells = <0>;
++				status = "disabled";
++			};
++		};
++	};
++
++	usb2phy3_grf: syscon@fd5dc000 {
++		compatible = "rockchip,rk3588-usb2phy-grf", "syscon", "simple-mfd";
++		reg = <0x0 0xfd5dc000 0x0 0x4000>;
++		#address-cells = <1>;
++		#size-cells = <1>;
++
++		u2phy3: usb2-phy@c000 {
++			compatible = "rockchip,rk3588-usb2phy";
++			reg = <0xc000 0x10>;
++			interrupts = <GIC_SPI 392 IRQ_TYPE_LEVEL_HIGH 0>;
++			resets = <&cru SRST_OTGPHY_U2_1>, <&cru SRST_P_USB2PHY_U2_1_GRF0>;
++			reset-names = "phy", "apb";
++			clocks = <&cru CLK_USB2PHY_HDPTXRXPHY_REF>;
++			clock-names = "phyclk";
++			clock-output-names = "usb480m_phy3";
++			#clock-cells = <0>;
++			status = "disabled";
++
++			u2phy3_host: host-port {
++				#phy-cells = <0>;
++				status = "disabled";
++			};
++		};
++	};
++
+ 	bigcore0_grf: syscon@fd590000 {
+ 		compatible = "rockchip,rk3588-bigcore0-grf", "syscon";
+ 		reg = <0x0 0xfd590000 0x0 0x100>;
diff --git a/target/linux/rockchip/patches-6.1/263-arm64-dts-rockchip-rk3588-evb1-add-USB2.patch b/target/linux/rockchip/patches-6.1/263-arm64-dts-rockchip-rk3588-evb1-add-USB2.patch
new file mode 100644
index 0000000000..8b6af30a48
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/263-arm64-dts-rockchip-rk3588-evb1-add-USB2.patch
@@ -0,0 +1,109 @@
+From dbb2f12cd75aaed870c4ba01b76e83bd3b9e992f Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 12 Jan 2023 19:23:27 +0100
+Subject: [PATCH 263/383] arm64: dts: rockchip: rk3588-evb1: add USB2
+
+Enable USB2 (EHCI and OCHI mode) support for the Rockchip RK3588 EVB1.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588-evb1-v10.dts     | 76 +++++++++++++++++++
+ 1 file changed, 76 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
+@@ -47,6 +47,40 @@
+ 		regulator-max-microvolt = <5000000>;
+ 		vin-supply = <&vcc12v_dcin>;
+ 	};
++
++	vcc5v0_usbdcin: vcc5v0-usbdcin {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usbdcin";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc12v_dcin>;
++	};
++
++	vcc5v0_usb: vcc5v0-usb {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usb";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_usbdcin>;
++	};
++
++	vcc5v0_host: vcc5v0-host {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_host";
++		regulator-boot-on;
++		regulator-always-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		enable-active-high;
++		gpio = <&gpio4 RK_PB0 GPIO_ACTIVE_HIGH>;
++		vin-supply = <&vcc5v0_usb>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_host_en>;
++	};
+ };
+ 
+ &cpu_l0 {
+@@ -64,6 +98,40 @@
+ 	mem-supply = <&vdd_cpu_big1_mem_s0>;
+ };
+ 
++&u2phy2 {
++	status = "okay";
++};
++
++&u2phy3 {
++	status = "okay";
++};
++
++&u2phy2_host {
++	phy-supply = <&vcc5v0_host>;
++	status = "okay";
++};
++
++&u2phy3_host {
++	phy-supply = <&vcc5v0_host>;
++	status = "okay";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++&usb_host1_ehci {
++	status = "okay";
++};
++
++&usb_host1_ohci {
++	status = "okay";
++};
++
+ &gmac0 {
+ 	clock_in_out = "output";
+ 	phy-handle = <&rgmii_phy>;
+@@ -886,3 +954,11 @@
+ 	pinctrl-0 = <&uart2m0_xfer>;
+ 	status = "okay";
+ };
++
++&pinctrl {
++	usb {
++		vcc5v0_host_en: vcc5v0-host-en {
++			rockchip,pins = <4 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/264-arm64-dts-rockchip-rk3588-rock5b-add-USB2.patch b/target/linux/rockchip/patches-6.1/264-arm64-dts-rockchip-rk3588-rock5b-add-USB2.patch
new file mode 100644
index 0000000000..55e42e975f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/264-arm64-dts-rockchip-rk3588-rock5b-add-USB2.patch
@@ -0,0 +1,96 @@
+From e8facd99ce2cbab3e91e236a662b567016630c28 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 30 Mar 2023 15:44:36 +0200
+Subject: [PATCH 264/383] arm64: dts: rockchip: rk3588-rock5b: add USB2
+
+Enable USB2 (EHCI and OCHI mode) support for the Radxa ROCK 5 Model B.
+This adds USB support on the M.2 Key E, both USB2 ports and USB2 mode
+for the upper USB3 port (the one further away from the PCB).
+
+The lower USB3 (closer to the PCB) and the USB-C ports use the RK3588
+USB TypeC host controller, which is not yet supported upstream.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588-rock-5b.dts      | 58 +++++++++++++++++++
+ 1 file changed, 58 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+@@ -3,6 +3,7 @@
+ /dts-v1/;
+ 
+ #include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/pinctrl/rockchip.h>
+ #include "rk3588.dtsi"
+ 
+ / {
+@@ -51,6 +52,20 @@
+ 		regulator-min-microvolt = <5000000>;
+ 		regulator-max-microvolt = <5000000>;
+ 	};
++
++	vcc5v0_host: vcc5v0-host-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_host";
++		regulator-boot-on;
++		regulator-always-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		enable-active-high;
++		gpio = <&gpio4 RK_PB0 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_host_en>;
++		vin-supply = <&vcc5v0_sys>;
++	};
+ };
+ 
+ &cpu_b0 {
+@@ -194,3 +209,46 @@
+ 	pinctrl-0 = <&uart2m0_xfer>;
+ 	status = "okay";
+ };
++
++&u2phy2_host {
++	/* connected to USB hub, which is powered by vcc5v0_sys */
++	phy-supply = <&vcc5v0_sys>;
++	status = "okay";
++};
++
++&u2phy3_host {
++	phy-supply = <&vcc5v0_host>;
++	status = "okay";
++};
++
++&u2phy2 {
++	status = "okay";
++};
++
++&u2phy3 {
++	status = "okay";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++&usb_host1_ehci {
++	status = "okay";
++};
++
++&usb_host1_ohci {
++	status = "okay";
++};
++
++&pinctrl {
++	usb {
++		vcc5v0_host_en: vcc5v0-host-en {
++			rockchip,pins = <4 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/265-dt-bindings-soc-rockchip-add-rk3588-pipe-phy-syscon.patch b/target/linux/rockchip/patches-6.1/265-dt-bindings-soc-rockchip-add-rk3588-pipe-phy-syscon.patch
new file mode 100644
index 0000000000..9649737ecc
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/265-dt-bindings-soc-rockchip-add-rk3588-pipe-phy-syscon.patch
@@ -0,0 +1,26 @@
+From 4223f34930303bdc69366e3d5eea19b1eafa92cb Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 6 Apr 2023 16:41:49 +0200
+Subject: [PATCH 265/383] dt-bindings: soc: rockchip: add rk3588 pipe-phy
+ syscon
+
+The pipe-phy syscon is used by rockchip,rk3588-naneng-combphy,
+which in turn is the PHY for USB3, PCIe and SATA.
+
+Acked-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/soc/rockchip/grf.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
++++ b/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
+@@ -24,6 +24,7 @@ properties:
+               - rockchip,rk3588-bigcore1-grf
+               - rockchip,rk3588-ioc
+               - rockchip,rk3588-php-grf
++              - rockchip,rk3588-pipe-phy-grf
+               - rockchip,rk3588-sys-grf
+               - rockchip,rk3588-pcie3-phy-grf
+               - rockchip,rk3588-pcie3-pipe-grf
diff --git a/target/linux/rockchip/patches-6.1/266-dt-bindings-ata-ahci-add-RK3588-AHCI-controller.patch b/target/linux/rockchip/patches-6.1/266-dt-bindings-ata-ahci-add-RK3588-AHCI-controller.patch
new file mode 100644
index 0000000000..8b169874dd
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/266-dt-bindings-ata-ahci-add-RK3588-AHCI-controller.patch
@@ -0,0 +1,57 @@
+From 05b552f4e516f259288f8948a7fe59c366cff95c Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 6 Apr 2023 17:13:12 +0200
+Subject: [PATCH 266/383] dt-bindings: ata: ahci: add RK3588 AHCI controller
+
+Just like RK3568, the RK3588 has a DWC based AHCI controller.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/ata/snps,dwc-ahci-common.yaml     | 8 ++++++--
+ Documentation/devicetree/bindings/ata/snps,dwc-ahci.yaml  | 6 ++++--
+ 2 files changed, 10 insertions(+), 4 deletions(-)
+
+--- a/Documentation/devicetree/bindings/ata/snps,dwc-ahci-common.yaml
++++ b/Documentation/devicetree/bindings/ata/snps,dwc-ahci-common.yaml
+@@ -31,11 +31,11 @@ properties:
+       PM-alive clock, RxOOB detection clock, embedded PHYs reference (Rx/Tx)
+       clock, etc.
+     minItems: 1
+-    maxItems: 4
++    maxItems: 6
+ 
+   clock-names:
+     minItems: 1
+-    maxItems: 4
++    maxItems: 6
+     items:
+       oneOf:
+         - description: Application APB/AHB/AXI BIU clock
+@@ -48,6 +48,10 @@ properties:
+           const: pmalive
+         - description: RxOOB detection clock
+           const: rxoob
++        - description: PHY Transmit Clock
++          const: asic
++        - description: PHY Receive Clock
++          const: rbc
+         - description: SATA Ports reference clock
+           const: ref
+ 
+--- a/Documentation/devicetree/bindings/ata/snps,dwc-ahci.yaml
++++ b/Documentation/devicetree/bindings/ata/snps,dwc-ahci.yaml
+@@ -23,9 +23,11 @@ properties:
+         const: snps,dwc-ahci
+       - description: SPEAr1340 AHCI SATA device
+         const: snps,spear-ahci
+-      - description: Rockhip RK3568 AHCI controller
++      - description: Rockhip AHCI controller
+         items:
+-          - const: rockchip,rk3568-dwc-ahci
++          - enum:
++              - rockchip,rk3568-dwc-ahci
++              - rockchip,rk3588-dwc-ahci
+           - const: snps,dwc-ahci
+ 
+ patternProperties:
diff --git a/target/linux/rockchip/patches-6.1/267-dt-bindings-phy-rockchip-rk3588-has-two-reset-lines.patch b/target/linux/rockchip/patches-6.1/267-dt-bindings-phy-rockchip-rk3588-has-two-reset-lines.patch
new file mode 100644
index 0000000000..0945fd041f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/267-dt-bindings-phy-rockchip-rk3588-has-two-reset-lines.patch
@@ -0,0 +1,33 @@
+From ab488b7528353b9ae68d3d8d15d9d25636db0c39 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 6 Apr 2023 19:09:53 +0200
+Subject: [PATCH 267/383] dt-bindings: phy: rockchip: rk3588 has two reset
+ lines
+
+The RK3588 has two reset lines for the combphy. One for the
+APB interface and one for the actual PHY.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/phy/phy-rockchip-naneng-combphy.yaml         | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/phy/phy-rockchip-naneng-combphy.yaml
++++ b/Documentation/devicetree/bindings/phy/phy-rockchip-naneng-combphy.yaml
+@@ -31,8 +31,14 @@ properties:
+       - const: pipe
+ 
+   resets:
++    minItems: 1
++    maxItems: 2
++
++  reset-names:
++    minItems: 1
+     items:
+-      - description: exclusive PHY reset line
++      - const: phy
++      - const: apb
+ 
+   rockchip,enable-ssc:
+     type: boolean
diff --git a/target/linux/rockchip/patches-6.1/268-arm64-dts-rockchip-rk3588-add-combo-PHYs.patch b/target/linux/rockchip/patches-6.1/268-arm64-dts-rockchip-rk3588-add-combo-PHYs.patch
new file mode 100644
index 0000000000..8ffc1d9d07
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/268-arm64-dts-rockchip-rk3588-add-combo-PHYs.patch
@@ -0,0 +1,108 @@
+From c61ff1ea4f7533d6cc14f62e71ac5d4c7105c879 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 6 Apr 2023 16:54:11 +0200
+Subject: [PATCH 268/383] arm64: dts: rockchip: rk3588: add combo PHYs
+
+Add all 3 combo PHYs that can be found in RK3588.
+They are used for SATA, PCIe or USB3.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi  | 21 ++++++++++++
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 42 +++++++++++++++++++++++
+ 2 files changed, 63 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -7,6 +7,11 @@
+ #include "rk3588-pinctrl.dtsi"
+ 
+ / {
++	pipe_phy1_grf: syscon@fd5c0000 {
++		compatible = "rockchip,rk3588-pipe-phy-grf", "syscon";
++		reg = <0x0 0xfd5c0000 0x0 0x100>;
++	};
++
+ 	i2s8_8ch: i2s@fddc8000 {
+ 		compatible = "rockchip,rk3588-i2s-tdm";
+ 		reg = <0x0 0xfddc8000 0x0 0x1000>;
+@@ -123,4 +128,20 @@
+ 			queue1 {};
+ 		};
+ 	};
++
++	combphy1_ps: phy@fee10000 {
++		compatible = "rockchip,rk3588-naneng-combphy";
++		reg = <0x0 0xfee10000 0x0 0x100>;
++		#phy-cells = <1>;
++		clocks = <&cru CLK_REF_PIPE_PHY1>, <&cru PCLK_PCIE_COMBO_PIPE_PHY1>,
++			 <&cru PCLK_PHP_ROOT>;
++		clock-names = "ref", "apb", "pipe";
++		assigned-clocks = <&cru CLK_REF_PIPE_PHY1>;
++		assigned-clock-rates = <100000000>;
++		resets = <&cru SRST_REF_PIPE_PHY1>, <&cru SRST_P_PCIE2_PHY1>;
++		reset-names = "phy", "apb";
++		rockchip,pipe-grf = <&php_grf>;
++		rockchip,pipe-phy-grf = <&pipe_phy1_grf>;
++		status = "disabled";
++	};
+ };
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -953,6 +953,16 @@
+ 		reg = <0x0 0xfd5b0000 0x0 0x1000>;
+ 	};
+ 
++	pipe_phy0_grf: syscon@fd5bc000 {
++		compatible = "rockchip,rk3588-pipe-phy-grf", "syscon";
++		reg = <0x0 0xfd5bc000 0x0 0x100>;
++	};
++
++	pipe_phy2_grf: syscon@fd5c4000 {
++		compatible = "rockchip,rk3588-pipe-phy-grf", "syscon";
++		reg = <0x0 0xfd5c4000 0x0 0x100>;
++	};
++
+ 	ioc: syscon@fd5f0000 {
+ 		compatible = "rockchip,rk3588-ioc", "syscon";
+ 		reg = <0x0 0xfd5f0000 0x0 0x10000>;
+@@ -2459,6 +2469,38 @@
+ 		#dma-cells = <1>;
+ 	};
+ 
++	combphy0_ps: phy@fee00000 {
++		compatible = "rockchip,rk3588-naneng-combphy";
++		reg = <0x0 0xfee00000 0x0 0x100>;
++		#phy-cells = <1>;
++		clocks = <&cru CLK_REF_PIPE_PHY0>, <&cru PCLK_PCIE_COMBO_PIPE_PHY0>,
++			 <&cru PCLK_PHP_ROOT>;
++		clock-names = "ref", "apb", "pipe";
++		assigned-clocks = <&cru CLK_REF_PIPE_PHY0>;
++		assigned-clock-rates = <100000000>;
++		resets = <&cru SRST_REF_PIPE_PHY0>, <&cru SRST_P_PCIE2_PHY0>;
++		reset-names = "phy", "apb";
++		rockchip,pipe-grf = <&php_grf>;
++		rockchip,pipe-phy-grf = <&pipe_phy0_grf>;
++		status = "disabled";
++	};
++
++	combphy2_psu: phy@fee20000 {
++		compatible = "rockchip,rk3588-naneng-combphy";
++		reg = <0x0 0xfee20000 0x0 0x100>;
++		#phy-cells = <1>;
++		clocks = <&cru CLK_REF_PIPE_PHY2>, <&cru PCLK_PCIE_COMBO_PIPE_PHY2>,
++			 <&cru PCLK_PHP_ROOT>;
++		clock-names = "ref", "apb", "pipe";
++		assigned-clocks = <&cru CLK_REF_PIPE_PHY2>;
++		assigned-clock-rates = <100000000>;
++		resets = <&cru SRST_REF_PIPE_PHY2>, <&cru SRST_P_PCIE2_PHY2>;
++		reset-names = "phy", "apb";
++		rockchip,pipe-grf = <&php_grf>;
++		rockchip,pipe-phy-grf = <&pipe_phy2_grf>;
++		status = "disabled";
++	};
++
+ 	system_sram2: sram@ff001000 {
+ 		compatible = "mmio-sram";
+ 		reg = <0x0 0xff001000 0x0 0xef000>;
diff --git a/target/linux/rockchip/patches-6.1/269-arm64-dts-rockchip-rk3588-add-SATA-support.patch b/target/linux/rockchip/patches-6.1/269-arm64-dts-rockchip-rk3588-add-SATA-support.patch
new file mode 100644
index 0000000000..dac991ac0f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/269-arm64-dts-rockchip-rk3588-add-SATA-support.patch
@@ -0,0 +1,110 @@
+From 9db7df910c791511e3f4f1dd3d484fef41bc1e9b Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 6 Apr 2023 17:14:19 +0200
+Subject: [PATCH 269/383] arm64: dts: rockchip: rk3588: add SATA support
+
+Add all three SATA IP blocks to the RK3588 DT.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi  | 23 +++++++++++
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 48 +++++++++++++++++++++++
+ 2 files changed, 71 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -129,6 +129,29 @@
+ 		};
+ 	};
+ 
++	sata1: sata@fe220000 {
++		compatible = "rockchip,rk3588-dwc-ahci", "snps,dwc-ahci";
++		reg = <0 0xfe220000 0 0x1000>;
++		clocks = <&cru ACLK_SATA1>, <&cru CLK_PMALIVE1>,
++			 <&cru CLK_RXOOB1>, <&cru CLK_PIPEPHY1_REF>,
++			 <&cru CLK_PIPEPHY1_PIPE_ASIC_G>;
++		clock-names = "sata", "pmalive", "rxoob", "ref", "asic";
++		interrupts = <GIC_SPI 274 IRQ_TYPE_LEVEL_HIGH 0>;
++		ports-implemented = <0x1>;
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++
++		sata-port@0 {
++			reg = <0>;
++			hba-port-cap = <HBA_PORT_FBSCP>;
++			phys = <&combphy1_ps PHY_TYPE_SATA>;
++			phy-names = "sata-phy";
++			snps,rx-ts-max = <32>;
++			snps,tx-ts-max = <32>;
++		};
++	};
++
+ 	combphy1_ps: phy@fee10000 {
+ 		compatible = "rockchip,rk3588-naneng-combphy";
+ 		reg = <0x0 0xfee10000 0x0 0x100>;
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -9,6 +9,8 @@
+ #include <dt-bindings/power/rk3588-power.h>
+ #include <dt-bindings/reset/rockchip,rk3588-cru.h>
+ #include <dt-bindings/thermal/thermal.h>
++#include <dt-bindings/phy/phy.h>
++#include <dt-bindings/ata/ahci.h>
+ 
+ / {
+ 	compatible = "rockchip,rk3588";
+@@ -1726,6 +1728,52 @@
+ 		};
+ 	};
+ 
++	sata0: sata@fe210000 {
++		compatible = "rockchip,rk3588-dwc-ahci", "snps,dwc-ahci";
++		reg = <0 0xfe210000 0 0x1000>;
++		clocks = <&cru ACLK_SATA0>, <&cru CLK_PMALIVE0>,
++			 <&cru CLK_RXOOB0>, <&cru CLK_PIPEPHY0_REF>,
++			 <&cru CLK_PIPEPHY0_PIPE_ASIC_G>;
++		clock-names = "sata", "pmalive", "rxoob", "ref", "asic";
++		interrupts = <GIC_SPI 273 IRQ_TYPE_LEVEL_HIGH 0>;
++		ports-implemented = <0x1>;
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++
++		sata-port@0 {
++			reg = <0>;
++			hba-port-cap = <HBA_PORT_FBSCP>;
++			phys = <&combphy0_ps PHY_TYPE_SATA>;
++			phy-names = "sata-phy";
++			snps,rx-ts-max = <32>;
++			snps,tx-ts-max = <32>;
++		};
++	};
++
++	sata2: sata@fe230000 {
++		compatible = "rockchip,rk3588-dwc-ahci", "snps,dwc-ahci";
++		reg = <0 0xfe230000 0 0x1000>;
++		clocks = <&cru ACLK_SATA2>, <&cru CLK_PMALIVE2>,
++			 <&cru CLK_RXOOB2>, <&cru CLK_PIPEPHY2_REF>,
++			 <&cru CLK_PIPEPHY2_PIPE_ASIC_G>;
++		clock-names = "sata", "pmalive", "rxoob", "ref", "asic";
++		interrupts = <GIC_SPI 275 IRQ_TYPE_LEVEL_HIGH 0>;
++		ports-implemented = <0x1>;
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++
++		sata-port@0 {
++			reg = <0>;
++			hba-port-cap = <HBA_PORT_FBSCP>;
++			phys = <&combphy2_psu PHY_TYPE_SATA>;
++			phy-names = "sata-phy";
++			snps,rx-ts-max = <32>;
++			snps,tx-ts-max = <32>;
++		};
++	};
++
+ 	sdmmc: mmc@fe2c0000 {
+ 		compatible = "rockchip,rk3588-dw-mshc", "rockchip,rk3288-dw-mshc";
+ 		reg = <0x0 0xfe2c0000 0x0 0x4000>;
diff --git a/target/linux/rockchip/patches-6.1/270-arm64-dts-rockchip-rk3588-evb1-add-SATA.patch b/target/linux/rockchip/patches-6.1/270-arm64-dts-rockchip-rk3588-evb1-add-SATA.patch
new file mode 100644
index 0000000000..fb14aed5fb
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/270-arm64-dts-rockchip-rk3588-evb1-add-SATA.patch
@@ -0,0 +1,32 @@
+From af5ae0a087642e245546854cafda974a546def92 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 6 Apr 2023 17:32:02 +0200
+Subject: [PATCH 270/383] arm64: dts: rockchip: rk3588-evb1: add SATA
+
+Add support for the SATA0_0 port found on the RK3588 EVB1. The
+second port (SATA0_1) does not work, which matches the downstream
+behaviour.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts | 8 ++++++++
+ 1 file changed, 8 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
+@@ -946,6 +946,14 @@
+ 	};
+ };
+ 
++&combphy0_ps {
++	status = "okay";
++};
++
++&sata0 {
++	status = "okay";
++};
++
+ &tsadc {
+ 	status = "okay";
+ };
diff --git a/target/linux/rockchip/patches-6.1/271-arm64-dts-rockchip-rk3588-add-PCIe2-support.patch b/target/linux/rockchip/patches-6.1/271-arm64-dts-rockchip-rk3588-add-PCIe2-support.patch
new file mode 100644
index 0000000000..238b9bfd1a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/271-arm64-dts-rockchip-rk3588-add-PCIe2-support.patch
@@ -0,0 +1,201 @@
+From 1d0351c583664fa2a4fa34077ccdf3aa74645762 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 17 Apr 2023 20:03:08 +0200
+Subject: [PATCH 271/383] arm64: dts: rockchip: rk3588: add PCIe2 support
+
+Add all three PCIe2 IP blocks to the RK3588 DT. Note, that RK3588
+also has two PCIe3 IP blocks, that will be handled separately.
+
+TODO: FIXME: this is not compliant with the DT binding. There is
+one additional clock ("pipe"), one additional reset line, the
+interrupt-names do not match
+
+Signed-off-by: Kever Yang <kever.yang@rock-chips.com>
+Co-developed-by: Kever Yang <kever.yang@rock-chips.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi  |  54 +++++++++++
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 108 ++++++++++++++++++++++
+ 2 files changed, 162 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -80,6 +80,60 @@
+ 		status = "disabled";
+ 	};
+ 
++	pcie2x1l0: pcie@fe170000 {
++		compatible = "rockchip,rk3588-pcie", "rockchip,rk3568-pcie";
++		#address-cells = <3>;
++		#size-cells = <2>;
++		bus-range = <0x20 0x2f>;
++		clocks = <&cru ACLK_PCIE_1L0_MSTR>, <&cru ACLK_PCIE_1L0_SLV>,
++			 <&cru ACLK_PCIE_1L0_DBI>, <&cru PCLK_PCIE_1L0>,
++			 <&cru CLK_PCIE_AUX2>, <&cru CLK_PCIE1L0_PIPE>;
++		clock-names = "aclk_mst", "aclk_slv",
++			      "aclk_dbi", "pclk",
++			      "aux", "pipe";
++		device_type = "pci";
++		interrupts = <GIC_SPI 243 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 242 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 241 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 240 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 239 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-names = "sys", "pmc", "msg", "legacy", "err";
++		#interrupt-cells = <1>;
++		interrupt-map-mask = <0 0 0 7>;
++		interrupt-map = <0 0 0 1 &pcie2x1l0_intc 0>,
++				<0 0 0 2 &pcie2x1l0_intc 1>,
++				<0 0 0 3 &pcie2x1l0_intc 2>,
++				<0 0 0 4 &pcie2x1l0_intc 3>;
++		linux,pci-domain = <2>;
++		num-ib-windows = <8>;
++		num-ob-windows = <8>;
++		num-viewport = <4>;
++		max-link-speed = <2>;
++		msi-map = <0x2000 &its0 0x2000 0x1000>;
++		num-lanes = <1>;
++		phys = <&combphy1_ps PHY_TYPE_PCIE>;
++		phy-names = "pcie-phy";
++		power-domains = <&power RK3588_PD_PCIE>;
++		ranges = <0x01000000 0x0 0xf2100000 0x0 0xf2100000 0x0 0x00100000>,
++			 <0x02000000 0x0 0xf2200000 0x0 0xf2200000 0x0 0x00e00000>,
++			 <0x03000000 0x9 0x80000000 0x9 0x80000000 0x0 0x40000000>;
++		reg = <0xa 0x40800000 0x0 0x00400000>,
++		      <0x0 0xfe170000 0x0 0x00010000>,
++		      <0x0 0xf2000000 0x0 0x00100000>;
++		reg-names = "dbi", "apb", "config";
++		resets = <&cru SRST_PCIE2_POWER_UP>, <&cru SRST_P_PCIE2>;
++		reset-names = "pwr", "pipe";
++		status = "disabled";
++
++		pcie2x1l0_intc: legacy-interrupt-controller {
++			interrupt-controller;
++			#address-cells = <0>;
++			#interrupt-cells = <1>;
++			interrupt-parent = <&gic>;
++			interrupts = <GIC_SPI 240 IRQ_TYPE_EDGE_RISING 0>;
++		};
++	};
++
+ 	gmac0: ethernet@fe1b0000 {
+ 		compatible = "rockchip,rk3588-gmac", "snps,dwmac-4.20a";
+ 		reg = <0x0 0xfe1b0000 0x0 0x10000>;
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -1679,6 +1679,114 @@
+ 		reg = <0x0 0xfdf82200 0x0 0x20>;
+ 	};
+ 
++	pcie2x1l1: pcie@fe180000 {
++		compatible = "rockchip,rk3588-pcie", "rockchip,rk3568-pcie";
++		#address-cells = <3>;
++		#size-cells = <2>;
++		bus-range = <0x30 0x3f>;
++		clocks = <&cru ACLK_PCIE_1L1_MSTR>, <&cru ACLK_PCIE_1L1_SLV>,
++			 <&cru ACLK_PCIE_1L1_DBI>, <&cru PCLK_PCIE_1L1>,
++			 <&cru CLK_PCIE_AUX3>, <&cru CLK_PCIE1L1_PIPE>;
++		clock-names = "aclk_mst", "aclk_slv",
++			      "aclk_dbi", "pclk",
++			      "aux", "pipe";
++		device_type = "pci";
++		interrupts = <GIC_SPI 248 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 247 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 246 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 245 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 244 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-names = "sys", "pmc", "msg", "legacy", "err";
++		#interrupt-cells = <1>;
++		interrupt-map-mask = <0 0 0 7>;
++		interrupt-map = <0 0 0 1 &pcie2x1l1_intc 0>,
++				<0 0 0 2 &pcie2x1l1_intc 1>,
++				<0 0 0 3 &pcie2x1l1_intc 2>,
++				<0 0 0 4 &pcie2x1l1_intc 3>;
++		linux,pci-domain = <3>;
++		num-ib-windows = <8>;
++		num-ob-windows = <8>;
++		num-viewport = <4>;
++		max-link-speed = <2>;
++		msi-map = <0x3000 &its0 0x3000 0x1000>;
++		num-lanes = <1>;
++		phys = <&combphy2_psu PHY_TYPE_PCIE>;
++		phy-names = "pcie-phy";
++		power-domains = <&power RK3588_PD_PCIE>;
++		ranges = <0x01000000 0x0 0xf3100000 0x0 0xf3100000 0x0 0x00100000>,
++			 <0x02000000 0x0 0xf3200000 0x0 0xf3200000 0x0 0x00e00000>,
++			 <0x03000000 0x9 0xc0000000 0x9 0xc0000000 0x0 0x40000000>;
++		reg = <0xa 0x40c00000 0x0 0x00400000>,
++		      <0x0 0xfe180000 0x0 0x00010000>,
++		      <0x0 0xf3000000 0x0 0x00100000>;
++		reg-names = "dbi", "apb", "config";
++		resets = <&cru SRST_PCIE3_POWER_UP>, <&cru SRST_P_PCIE3>;
++		reset-names = "pwr", "pipe";
++		status = "disabled";
++
++		pcie2x1l1_intc: legacy-interrupt-controller {
++			interrupt-controller;
++			#address-cells = <0>;
++			#interrupt-cells = <1>;
++			interrupt-parent = <&gic>;
++			interrupts = <GIC_SPI 245 IRQ_TYPE_EDGE_RISING 0>;
++		};
++	};
++
++	pcie2x1l2: pcie@fe190000 {
++		compatible = "rockchip,rk3588-pcie", "rockchip,rk3568-pcie";
++		#address-cells = <3>;
++		#size-cells = <2>;
++		bus-range = <0x40 0x4f>;
++		clocks = <&cru ACLK_PCIE_1L2_MSTR>, <&cru ACLK_PCIE_1L2_SLV>,
++			 <&cru ACLK_PCIE_1L2_DBI>, <&cru PCLK_PCIE_1L2>,
++			 <&cru CLK_PCIE_AUX4>, <&cru CLK_PCIE1L2_PIPE>;
++		clock-names = "aclk_mst", "aclk_slv",
++			      "aclk_dbi", "pclk",
++			      "aux", "pipe";
++		device_type = "pci";
++		interrupts = <GIC_SPI 253 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 252 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 251 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 250 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 249 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-names = "sys", "pmc", "msg", "legacy", "err";
++		#interrupt-cells = <1>;
++		interrupt-map-mask = <0 0 0 7>;
++		interrupt-map = <0 0 0 1 &pcie2x1l2_intc 0>,
++				<0 0 0 2 &pcie2x1l2_intc 1>,
++				<0 0 0 3 &pcie2x1l2_intc 2>,
++				<0 0 0 4 &pcie2x1l2_intc 3>;
++		linux,pci-domain = <4>;
++		num-ib-windows = <8>;
++		num-ob-windows = <8>;
++		num-viewport = <4>;
++		max-link-speed = <2>;
++		msi-map = <0x4000 &its0 0x4000 0x1000>;
++		num-lanes = <1>;
++		phys = <&combphy0_ps PHY_TYPE_PCIE>;
++		phy-names = "pcie-phy";
++		power-domains = <&power RK3588_PD_PCIE>;
++		ranges = <0x01000000 0x0 0xf4100000 0x0 0xf4100000 0x0 0x00100000>,
++			 <0x02000000 0x0 0xf4200000 0x0 0xf4200000 0x0 0x00e00000>,
++			 <0x03000000 0xa 0x00000000 0xa 0x00000000 0x0 0x40000000>;
++		reg = <0xa 0x41000000 0x0 0x00400000>,
++		      <0x0 0xfe190000 0x0 0x00010000>,
++		      <0x0 0xf4000000 0x0 0x00100000>;
++		reg-names = "dbi", "apb", "config";
++		resets = <&cru SRST_PCIE4_POWER_UP>, <&cru SRST_P_PCIE4>;
++		reset-names = "pwr", "pipe";
++		status = "disabled";
++
++		pcie2x1l2_intc: legacy-interrupt-controller {
++			interrupt-controller;
++			#address-cells = <0>;
++			#interrupt-cells = <1>;
++			interrupt-parent = <&gic>;
++			interrupts = <GIC_SPI 250 IRQ_TYPE_EDGE_RISING 0>;
++		};
++	};
++
+ 	gmac1: ethernet@fe1c0000 {
+ 		compatible = "rockchip,rk3588-gmac", "snps,dwmac-4.20a";
+ 		reg = <0x0 0xfe1c0000 0x0 0x10000>;
diff --git a/target/linux/rockchip/patches-6.1/272-arm64-dts-rockchip-rk3588-evb1-add-PCIe2-support.patch b/target/linux/rockchip/patches-6.1/272-arm64-dts-rockchip-rk3588-evb1-add-PCIe2-support.patch
new file mode 100644
index 0000000000..4333bf6f0d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/272-arm64-dts-rockchip-rk3588-evb1-add-PCIe2-support.patch
@@ -0,0 +1,74 @@
+From 97313a7cb397325c08f2a3f065094c7f84402084 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 17 Apr 2023 21:13:03 +0200
+Subject: [PATCH 272/383] arm64: dts: rockchip: rk3588-evb1: add PCIe2 support
+
+The RK3588 EVB1 has a second network card, which is connected
+via a PCIe2 block. This adds support for that.
+
+The patch also enables the first PCIe2 block. I did not test
+its functionality, but the board boots up properly.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588-evb1-v10.dts     | 37 +++++++++++++++++++
+ 1 file changed, 37 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-evb1-v10.dts
+@@ -81,6 +81,26 @@
+ 		pinctrl-names = "default";
+ 		pinctrl-0 = <&vcc5v0_host_en>;
+ 	};
++
++	pcie20_avdd0v85: pcie20-avdd0v85 {
++		compatible = "regulator-fixed";
++		regulator-name = "pcie20_avdd0v85";
++		regulator-boot-on;
++		regulator-always-on;
++		regulator-min-microvolt = <850000>;
++		regulator-max-microvolt = <850000>;
++		vin-supply = <&avdd_0v85_s0>;
++	};
++
++	pcie20_avdd1v8: pcie20-avdd1v8 {
++		compatible = "regulator-fixed";
++		regulator-name = "pcie20_avdd1v8";
++		regulator-boot-on;
++		regulator-always-on;
++		regulator-min-microvolt = <1800000>;
++		regulator-max-microvolt = <1800000>;
++		vin-supply = <&avcc_1v8_s0>;
++	};
+ };
+ 
+ &cpu_l0 {
+@@ -963,10 +983,27 @@
+ 	status = "okay";
+ };
+ 
++&pcie2x1l1 {
++	reset-gpios = <&gpio4 RK_PA2 GPIO_ACTIVE_HIGH>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&rtl8111_isolate>;
++	status = "okay";
++};
++
+ &pinctrl {
++	rtl8111 {
++		rtl8111_isolate: rtl8111-isolate {
++			rockchip,pins = <1 RK_PA4 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
+ 	usb {
+ 		vcc5v0_host_en: vcc5v0-host-en {
+ 			rockchip,pins = <4 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+ 	};
+ };
++
++&combphy2_psu {
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/273-arm64-dts-rockchip-Add-RK806-regulator-config.patch b/target/linux/rockchip/patches-6.1/273-arm64-dts-rockchip-Add-RK806-regulator-config.patch
new file mode 100644
index 0000000000..37c9c7ca6e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/273-arm64-dts-rockchip-Add-RK806-regulator-config.patch
@@ -0,0 +1,197 @@
+From 17e58cbb2ad5d95f5d4c060e3e248287ecf83180 Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Mon, 9 Jan 2023 16:37:23 +0000
+Subject: [PATCH 273/383] arm64: dts: rockchip: Add RK806 regulator config
+
+Add support for rk806 single configuration PMIC in Rock Pi 5A and 5B.
+
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3588-rk806-single.dtsi     | 179 ++++++++++++++++++
+ 1 file changed, 179 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588-rk806-single.dtsi
+
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rk806-single.dtsi
+@@ -0,0 +1,179 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ *
++ */
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++
++&spi2 {
++	status = "okay";
++	assigned-clocks = <&cru CLK_SPI2>;
++	assigned-clock-rates = <200000000>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&spi2m2_cs0 &spi2m2_pins>;
++	num-cs = <1>;
++
++	rk806single: rk806single@0 {
++		compatible = "rockchip,rk806";
++		spi-max-frequency = <1000000>;
++		reg = <0x0>;
++
++		interrupt-parent = <&gpio0>;
++		interrupts = <7 IRQ_TYPE_LEVEL_LOW>;
++
++		pinctrl-names = "default";
++		pinctrl-0 = <&pmic_pins>, <&rk806_dvs1_null>, <&rk806_dvs2_null>, <&rk806_dvs3_null>;
++
++		vcc1-supply = <&vcc5v0_sys>;
++		vcc2-supply = <&vcc5v0_sys>;
++		vcc3-supply = <&vcc5v0_sys>;
++		vcc4-supply = <&vcc5v0_sys>;
++		vcc5-supply = <&vcc5v0_sys>;
++		vcc6-supply = <&vcc5v0_sys>;
++		vcc7-supply = <&vcc5v0_sys>;
++		vcc8-supply = <&vcc5v0_sys>;
++		vcc9-supply = <&vcc5v0_sys>;
++		vcc10-supply = <&vcc5v0_sys>;
++		vcc11-supply = <&vcc_2v0_pldo_s3>;
++		vcc12-supply = <&vcc5v0_sys>;
++		vcc13-supply = <&vcc_1v1_nldo_s3>;
++		vcc14-supply = <&vcc_1v1_nldo_s3>;
++		vcca-supply = <&vcc5v0_sys>;
++
++		gpio-controller;
++		#gpio-cells = <2>;
++
++		rk806_dvs1_null: dvs1-null-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs1_slp: dvs1-slp-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun1";
++		};
++
++		rk806_dvs1_pwrdn: dvs1-pwrdn-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun2";
++		};
++
++		rk806_dvs1_rst: dvs1-rst-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun3";
++		};
++
++		rk806_dvs2_null: dvs2-null-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs2_slp: dvs2-slp-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun1";
++		};
++
++		rk806_dvs2_pwrdn: dvs2-pwrdn-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun2";
++		};
++
++		rk806_dvs2_rst: dvs2-rst-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun3";
++		};
++
++		rk806_dvs2_dvs: dvs2-dvs-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun4";
++		};
++
++		rk806_dvs2_gpio: dvs2-gpio-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun5";
++		};
++
++		rk806_dvs3_null: dvs3-null-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs3_slp: dvs3-slp-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun1";
++		};
++
++		rk806_dvs3_pwrdn: dvs3-pwrdn-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun2";
++		};
++
++		rk806_dvs3_rst: dvs3-rst-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun3";
++		};
++
++		rk806_dvs3_dvs: dvs3-dvs-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun4";
++		};
++
++		rk806_dvs3_gpio: dvs3-gpio-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun5";
++		};
++
++		regulators {
++			vcc_2v0_pldo_s3: dcdc-reg7 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <2000000>;
++				regulator-max-microvolt = <2000000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_2v0_pldo_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <2000000>;
++				};
++			};
++
++			vcc_3v3_s3: dcdc-reg8 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-name = "vcc_3v3_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcc_3v3_s0: pldo-reg4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vcc_3v3_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_sd_s0: pldo-reg5 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vccio_sd_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++		};
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/274-arm64-dts-rockchip-rock-5a-Add-SD-card-support.patch b/target/linux/rockchip/patches-6.1/274-arm64-dts-rockchip-rock-5a-Add-SD-card-support.patch
new file mode 100644
index 0000000000..6a930ac93b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/274-arm64-dts-rockchip-rock-5a-Add-SD-card-support.patch
@@ -0,0 +1,80 @@
+From 32abca3fb87cf855d924680093e263dd5f173a61 Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Tue, 13 Dec 2022 09:30:20 +0000
+Subject: [PATCH 274/383] arm64: dts: rockchip: rock-5a: Add SD card support
+
+Add sdmmc support for Rock Pi 5A board.
+
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588s-rock-5a.dts     | 46 +++++++++++++++++++
+ 1 file changed, 46 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-rock-5a.dts
+@@ -5,6 +5,7 @@
+ #include <dt-bindings/gpio/gpio.h>
+ #include <dt-bindings/pinctrl/rockchip.h>
+ #include "rk3588s.dtsi"
++#include "rk3588-rk806-single.dtsi"
+ 
+ / {
+ 	model = "Radxa ROCK 5 Model A";
+@@ -18,6 +19,35 @@
+ 	chosen {
+ 		stdout-path = "serial2:1500000n8";
+ 	};
++
++	vcc12v_dcin: vcc12v-dcin {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc12v_dcin";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <12000000>;
++		regulator-max-microvolt = <12000000>;
++	};
++
++	vcc5v0_sys: vcc5v0-sys {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc12v_dcin>;
++	};
++
++	vcc_1v1_nldo_s3: vcc-1v1-nldo-s3 {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_1v1_nldo_s3";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <1100000>;
++		regulator-max-microvolt = <1100000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
+ };
+ 
+ &gmac1 {
+@@ -71,3 +101,19 @@
+ 	pinctrl-0 = <&uart2m0_xfer>;
+ 	status = "okay";
+ };
++
++&sdmmc {
++	max-frequency = <150000000>;
++	no-sdio;
++	no-mmc;
++	bus-width = <4>;
++	cap-mmc-highspeed;
++	cap-sd-highspeed;
++	disable-wp;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc_3v3_s0>;
++	vqmmc-supply = <&vccio_sd_s0>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc_bus4 &sdmmc_clk &sdmmc_cmd &sdmmc_det>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/275-arm64-dts-rockchip-rock-5b-Add-SD-card-support.patch b/target/linux/rockchip/patches-6.1/275-arm64-dts-rockchip-rock-5b-Add-SD-card-support.patch
new file mode 100644
index 0000000000..f81956cc20
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/275-arm64-dts-rockchip-rock-5b-Add-SD-card-support.patch
@@ -0,0 +1,64 @@
+From 63b730d81733ad2643580ac1c2c7f238a53edf31 Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Tue, 21 Feb 2023 16:17:19 +0000
+Subject: [PATCH 275/383] arm64: dts: rockchip: rock-5b: Add SD card support
+
+Add sdmmc node and it's regulators for sd card support
+
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588-rock-5b.dts      | 27 +++++++++++++++++++
+ 1 file changed, 27 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+@@ -5,6 +5,7 @@
+ #include <dt-bindings/gpio/gpio.h>
+ #include <dt-bindings/pinctrl/rockchip.h>
+ #include "rk3588.dtsi"
++#include "rk3588-rk806-single.dtsi"
+ 
+ / {
+ 	model = "Radxa ROCK 5 Model B";
+@@ -66,6 +67,16 @@
+ 		pinctrl-0 = <&vcc5v0_host_en>;
+ 		vin-supply = <&vcc5v0_sys>;
+ 	};
++	
++	vcc_1v1_nldo_s3: vcc-1v1-nldo-s3 {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_1v1_nldo_s3";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <1100000>;
++		regulator-max-microvolt = <1100000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
+ };
+ 
+ &cpu_b0 {
+@@ -205,6 +216,22 @@
+ 	status = "okay";
+ };
+ 
++&sdmmc {
++	max-frequency = <200000000>;
++	no-sdio;
++	no-mmc;
++	bus-width = <4>;
++	cap-mmc-highspeed;
++	cap-sd-highspeed;
++	disable-wp;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc_3v3_s3>;
++	vqmmc-supply = <&vccio_sd_s0>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc_bus4 &sdmmc_clk &sdmmc_cmd &sdmmc_det>;
++	status = "okay";
++};
++
+ &uart2 {
+ 	pinctrl-0 = <&uart2m0_xfer>;
+ 	status = "okay";
diff --git a/target/linux/rockchip/patches-6.1/276-arm64-dts-rockchip-rk3588-Add-I2S-nodes.patch b/target/linux/rockchip/patches-6.1/276-arm64-dts-rockchip-rk3588-Add-I2S-nodes.patch
new file mode 100644
index 0000000000..1cc2c2d599
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/276-arm64-dts-rockchip-rk3588-Add-I2S-nodes.patch
@@ -0,0 +1,27 @@
+From a45f75760dff9339819078d32fd76bc091df0a24 Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Mon, 13 Mar 2023 11:53:05 +0200
+Subject: [PATCH 276/383] arm64: dts: rockchip: rk3588: Add I2S nodes
+
+In addition to the five I2S/PCM/TDM controllers and the two I2S/PCM
+controllers shared between the RK3588 and RK3588S SoCs, RK3588 contains
+another four I2S/PCM/TDM controllers.
+
+Add the DT nodes corresponding to the additional controllers.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -132,6 +132,7 @@
+ 			interrupt-parent = <&gic>;
+ 			interrupts = <GIC_SPI 240 IRQ_TYPE_EDGE_RISING 0>;
+ 		};
++
+ 	};
+ 
+ 	gmac0: ethernet@fe1b0000 {
diff --git a/target/linux/rockchip/patches-6.1/277-arm64-dts-rockchip-RK3588s-Enable-PCIE2.0x1-fe190000.patch b/target/linux/rockchip/patches-6.1/277-arm64-dts-rockchip-RK3588s-Enable-PCIE2.0x1-fe190000.patch
new file mode 100644
index 0000000000..ae109f3560
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/277-arm64-dts-rockchip-RK3588s-Enable-PCIE2.0x1-fe190000.patch
@@ -0,0 +1,48 @@
+From 2ac45c4f5a98cb76d6be3c8ddb872c99e4f5d4d9 Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Tue, 28 Feb 2023 14:40:59 +0000
+Subject: [PATCH 277/383] arm64: dts: rockchip: RK3588s: Enable PCIE2.0x1
+ @fe190000
+
+Enable PCIE2.0x1 @fe190000 for RTL8125 network controller in
+Rock 5B board.
+
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3588-rock-5b.dts      | 20 +++++++++++++++++++
+ 1 file changed, 20 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dts
+@@ -77,6 +77,15 @@
+ 		regulator-max-microvolt = <1100000>;
+ 		vin-supply = <&vcc5v0_sys>;
+ 	};
++
++	vcc3v3_pcie2x1l2: vcc3v3-pcie2x1l2 {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc3v3_pcie2x1l2";
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		startup-delay-us = <5000>;
++		vin-supply = <&vcc_3v3_s3>;
++	};
+ };
+ 
+ &cpu_b0 {
+@@ -279,3 +288,14 @@
+ 		};
+ 	};
+ };
++
++&combphy0_ps {
++	status = "okay";
++};
++
++&pcie2x1l2 {
++	reset-gpios = <&gpio3 RK_PB0 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_pcie2x1l2>;
++	status = "okay";
++
++};
diff --git a/target/linux/rockchip/patches-6.1/278-dt-bindings-PCI-tegra234-Add-ECAM-support.patch b/target/linux/rockchip/patches-6.1/278-dt-bindings-PCI-tegra234-Add-ECAM-support.patch
new file mode 100644
index 0000000000..9904dc9288
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/278-dt-bindings-PCI-tegra234-Add-ECAM-support.patch
@@ -0,0 +1,30 @@
+From f6147442e9cdd52d86a3d90ec22acc7b6ac45607 Mon Sep 17 00:00:00 2001
+From: Vidya Sagar <vidyas@nvidia.com>
+Date: Mon, 14 Nov 2022 15:53:32 +0000
+Subject: [PATCH 278/383] dt-bindings: PCI: tegra234: Add ECAM support
+
+Add support for ECAM aperture that is only supported for Tegra234
+devices.
+
+Signed-off-by: Vidya Sagar <vidyas@nvidia.com>
+Co-developed-by: Jon Hunter <jonathanh@nvidia.com>
+Signed-off-by: Jon Hunter <jonathanh@nvidia.com>
+Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Acked-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Thierry Reding <treding@nvidia.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
+@@ -35,7 +35,7 @@ properties:
+     maxItems: 5
+     items:
+       enum: [ dbi, dbi2, config, atu, atu_dma, app, appl, elbi, mgmt, ctrl,
+-              parf, cfg, link, ulreg, smu, mpu, apb, phy ]
++              parf, cfg, link, ulreg, smu, mpu, apb, phy, ecam ]
+ 
+   num-lanes:
+     description: |
diff --git a/target/linux/rockchip/patches-6.1/279-dt-bindings-PCI-dwc-Detach-common-RP-EP-DT-bindings.patch b/target/linux/rockchip/patches-6.1/279-dt-bindings-PCI-dwc-Detach-common-RP-EP-DT-bindings.patch
new file mode 100644
index 0000000000..410082c459
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/279-dt-bindings-PCI-dwc-Detach-common-RP-EP-DT-bindings.patch
@@ -0,0 +1,82 @@
+From faee1117423b08c5dd21b4c53240363633b3a6ea Mon Sep 17 00:00:00 2001
+From: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Date: Sun, 13 Nov 2022 22:12:44 +0300
+Subject: [PATCH 279/383] dt-bindings: PCI: dwc: Detach common RP/EP DT
+ bindings
+
+Currently both DW PCIe Root Port and End-point DT bindings are defined as
+separate schemas. Carefully looking at them, at the hardware reference
+manuals and seeing there is a generic part of the driver used by the both
+RP and EP drivers we can greatly simplify the DW PCIe controller bindings
+by moving some of the properties into the common DT schema. It concerns
+the PERST GPIO control, number of lanes, number of iATU windows and CDM
+check properties. They will be defined in the snps,dw-pcie-common.yaml
+schema which will be referenced in the DW PCIe Root Port and End-point DT
+bindings in order to evaluate the common for both of these controllers
+properties. The rest of properties like reg{,-names}, clock{s,-names},
+reset{s,-names}, etc will be consolidate there in one of the next commits.
+
+Link: https://lore.kernel.org/r/20221113191301.5526-4-Sergey.Semin@baikalelectronics.ru
+Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/pci/snps,dw-pcie.yaml | 33 +------------------
+ 1 file changed, 1 insertion(+), 32 deletions(-)
+
+--- a/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
+@@ -15,6 +15,7 @@ description: |
+ 
+ allOf:
+   - $ref: /schemas/pci/pci-bus.yaml#
++  - $ref: /schemas/pci/snps,dw-pcie-common.yaml#
+ 
+ properties:
+   compatible:
+@@ -37,44 +38,12 @@ properties:
+       enum: [ dbi, dbi2, config, atu, atu_dma, app, appl, elbi, mgmt, ctrl,
+               parf, cfg, link, ulreg, smu, mpu, apb, phy, ecam ]
+ 
+-  num-lanes:
+-    description: |
+-      number of lanes to use (this property should be specified unless
+-      the link is brought already up in firmware)
+-    maximum: 16
+-
+-  reset-gpio:
+-    description: GPIO pin number of PERST# signal
+-    maxItems: 1
+-    deprecated: true
+-
+-  reset-gpios:
+-    description: GPIO controlled connection to PERST# signal
+-    maxItems: 1
+-
+   interrupts: true
+ 
+   interrupt-names: true
+ 
+   clocks: true
+ 
+-  snps,enable-cdm-check:
+-    type: boolean
+-    description: |
+-      This is a boolean property and if present enables
+-      automatic checking of CDM (Configuration Dependent Module) registers
+-      for data corruption. CDM registers include standard PCIe configuration
+-      space registers, Port Logic registers, DMA and iATU (internal Address
+-      Translation Unit) registers.
+-
+-  num-viewport:
+-    $ref: /schemas/types.yaml#/definitions/uint32
+-    maximum: 256
+-    description: |
+-      number of view ports configured in hardware. If a platform
+-      does not specify it, the driver autodetects it.
+-    deprecated: true
+-
+ additionalProperties: true
+ 
+ required:
diff --git a/target/linux/rockchip/patches-6.1/280-dt-bindings-PCI-dwc-Remove-bus-node-from-the-example.patch b/target/linux/rockchip/patches-6.1/280-dt-bindings-PCI-dwc-Remove-bus-node-from-the-example.patch
new file mode 100644
index 0000000000..ee2eba5396
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/280-dt-bindings-PCI-dwc-Remove-bus-node-from-the-example.patch
@@ -0,0 +1,60 @@
+From af471adc15b9bbd98a0ed7e005c920f55681bb80 Mon Sep 17 00:00:00 2001
+From: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Date: Sun, 13 Nov 2022 22:12:45 +0300
+Subject: [PATCH 280/383] dt-bindings: PCI: dwc: Remove bus node from the
+ examples
+
+It's absolutely redundant seeing by default each node is embedded into its
+own example-X node with address and size cells set to 1.
+
+Link: https://lore.kernel.org/r/20221113191301.5526-5-Sergey.Semin@baikalelectronics.ru
+Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/pci/snps,dw-pcie.yaml | 35 ++++++++++---------
+ 1 file changed, 18 insertions(+), 17 deletions(-)
+
+--- a/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
+@@ -53,21 +53,22 @@ required:
+ 
+ examples:
+   - |
+-    bus {
+-      #address-cells = <1>;
+-      #size-cells = <1>;
+-      pcie@dfc00000 {
+-        device_type = "pci";
+-        compatible = "snps,dw-pcie";
+-        reg = <0xdfc00000 0x0001000>, /* IP registers */
+-              <0xd0000000 0x0002000>; /* Configuration space */
+-        reg-names = "dbi", "config";
+-        #address-cells = <3>;
+-        #size-cells = <2>;
+-        ranges = <0x81000000 0 0x00000000 0xde000000 0 0x00010000>,
+-                 <0x82000000 0 0xd0400000 0xd0400000 0 0x0d000000>;
+-        interrupts = <25>, <24>;
+-        #interrupt-cells = <1>;
+-        num-lanes = <1>;
+-      };
++    pcie@dfc00000 {
++      compatible = "snps,dw-pcie";
++      device_type = "pci";
++      reg = <0xdfc00000 0x0001000>, /* IP registers */
++            <0xd0000000 0x0002000>; /* Configuration space */
++      reg-names = "dbi", "config";
++      #address-cells = <3>;
++      #size-cells = <2>;
++      ranges = <0x81000000 0 0x00000000 0xde000000 0 0x00010000>,
++               <0x82000000 0 0xd0400000 0xd0400000 0 0x0d000000>;
++      bus-range = <0x0 0xff>;
++
++      interrupts = <25>, <24>;
++      #interrupt-cells = <1>;
++
++      reset-gpios = <&port0 0 1>;
++
++      num-lanes = <1>;
+     };
diff --git a/target/linux/rockchip/patches-6.1/281-dt-bindings-PCI-dwc-Add-phys-phy-names-common-proper.patch b/target/linux/rockchip/patches-6.1/281-dt-bindings-PCI-dwc-Add-phys-phy-names-common-proper.patch
new file mode 100644
index 0000000000..07229d4e81
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/281-dt-bindings-PCI-dwc-Add-phys-phy-names-common-proper.patch
@@ -0,0 +1,37 @@
+From 8a436f7c0b87149e9fe16a10c3f7362afe9fd9d7 Mon Sep 17 00:00:00 2001
+From: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Date: Sun, 13 Nov 2022 22:12:46 +0300
+Subject: [PATCH 281/383] dt-bindings: PCI: dwc: Add phys/phy-names common
+ properties
+
+It's normal to have the DW PCIe RP/EP DT-nodes equipped with the explicit
+PHY phandle references. There can be up to 16 PHYs attach in accordance
+with the maximum number of supported PCIe lanes. Let's extend the common
+DW PCIe controller schema with the 'phys' and 'phy-names' properties
+definition. There two types PHY names are defined: preferred generic names
+'^pcie[0-9]+$' and non-preferred vendor-specific names
+'^pcie([0-9]+|-?phy[0-9]*)?$' so to match the names currently supported by
+the DW PCIe platform drivers ("pcie": meson; "pciephy": qcom, imx6;
+"pcie-phy": uniphier, rockchip, spear13xx; "pcie": intel-gw; "pcie-phy%d":
+keystone, dra7xx; "pcie": histb, etc).
+
+Link: https://lore.kernel.org/r/20221113191301.5526-6-Sergey.Semin@baikalelectronics.ru
+Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml | 3 +++
+ 1 file changed, 3 insertions(+)
+
+--- a/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
+@@ -70,5 +70,8 @@ examples:
+ 
+       reset-gpios = <&port0 0 1>;
+ 
++      phys = <&pcie_phy>;
++      phy-names = "pcie";
++
+       num-lanes = <1>;
+     };
diff --git a/target/linux/rockchip/patches-6.1/282-dt-bindings-PCI-dwc-Add-max-link-speed-common-proper.patch b/target/linux/rockchip/patches-6.1/282-dt-bindings-PCI-dwc-Add-max-link-speed-common-proper.patch
new file mode 100644
index 0000000000..761b49957e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/282-dt-bindings-PCI-dwc-Add-max-link-speed-common-proper.patch
@@ -0,0 +1,31 @@
+From 13570bd7d59d75142960e6a6ded90f316e3ffd82 Mon Sep 17 00:00:00 2001
+From: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Date: Sun, 13 Nov 2022 22:12:47 +0300
+Subject: [PATCH 282/383] dt-bindings: PCI: dwc: Add max-link-speed common
+ property
+
+In accordance with [1] DW PCIe controllers support up to Gen5 link speed.
+Let's add the max-link-speed property upper bound to 5 then. The DT
+bindings of the particular devices are expected to setup more strict
+constraint on that parameter.
+
+[1] Synopsys DesignWare Cores PCI Express Controller Databook, Version
+5.40a, March 2019, p. 27
+
+Link: https://lore.kernel.org/r/20221113191301.5526-7-Sergey.Semin@baikalelectronics.ru
+Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
+@@ -74,4 +74,5 @@ examples:
+       phy-names = "pcie";
+ 
+       num-lanes = <1>;
++      max-link-speed = <3>;
+     };
diff --git a/target/linux/rockchip/patches-6.1/283-dt-bindings-PCI-dwc-Apply-generic-schema-for-generic.patch b/target/linux/rockchip/patches-6.1/283-dt-bindings-PCI-dwc-Apply-generic-schema-for-generic.patch
new file mode 100644
index 0000000000..7fc6597a48
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/283-dt-bindings-PCI-dwc-Apply-generic-schema-for-generic.patch
@@ -0,0 +1,67 @@
+From f57d13d916a8665f03c62d053292870734912317 Mon Sep 17 00:00:00 2001
+From: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Date: Sun, 13 Nov 2022 22:12:48 +0300
+Subject: [PATCH 283/383] dt-bindings: PCI: dwc: Apply generic schema for
+ generic device only
+
+Having the generic compatible strings constraints with the 'any'+'generic
+string' semantic implicitly encourages either to add new DW PCIe-based
+DT-bindings with the generic compatible string attached or just forget
+about adding new DT-bindings since the corresponding DT-node will be
+evaluated anyway. Moreover having that semantic implemented in the
+generic DT-schema causes the DT-validation tool to apply the schema twice:
+first by implicit compatible-string-based selection and second by means of
+the 'allOf: [ $ref ]' statement. Let's fix all of that by dropping the
+compatible property constraints and selecting the generic DT-schema only
+for the purely generic DW PCIe DT-nodes. The later is required since there
+is a driver for such devices. (Though there are no such DT-nodes currently
+defined in the kernel DT sources.)
+
+Link: https://lore.kernel.org/r/20221113191301.5526-8-Sergey.Semin@baikalelectronics.ru
+Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/pci/snps,dw-pcie.yaml    | 16 ++++++++++------
+ 1 file changed, 10 insertions(+), 6 deletions(-)
+
+--- a/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
+@@ -13,16 +13,20 @@ maintainers:
+ description: |
+   Synopsys DesignWare PCIe host controller
+ 
++# Please create a separate DT-schema for your DWC PCIe Root Port controller
++# and make sure it's assigned with the vendor-specific compatible string.
++select:
++  properties:
++    compatible:
++      const: snps,dw-pcie
++  required:
++    - compatible
++
+ allOf:
+   - $ref: /schemas/pci/pci-bus.yaml#
+   - $ref: /schemas/pci/snps,dw-pcie-common.yaml#
+ 
+ properties:
+-  compatible:
+-    anyOf:
+-      - {}
+-      - const: snps,dw-pcie
+-
+   reg:
+     description: |
+       It should contain Data Bus Interface (dbi) and config registers for all
+@@ -47,9 +51,9 @@ properties:
+ additionalProperties: true
+ 
+ required:
++  - compatible
+   - reg
+   - reg-names
+-  - compatible
+ 
+ examples:
+   - |
diff --git a/target/linux/rockchip/patches-6.1/284-dt-bindings-PCI-dwc-Add-interrupts-interrupt-names-c.patch b/target/linux/rockchip/patches-6.1/284-dt-bindings-PCI-dwc-Add-interrupts-interrupt-names-c.patch
new file mode 100644
index 0000000000..cadddc7495
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/284-dt-bindings-PCI-dwc-Add-interrupts-interrupt-names-c.patch
@@ -0,0 +1,138 @@
+From ccd02ddfabc49a9c2e4979235c63323d878a9a8b Mon Sep 17 00:00:00 2001
+From: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Date: Sun, 13 Nov 2022 22:12:50 +0300
+Subject: [PATCH 284/383] dt-bindings: PCI: dwc: Add interrupts/interrupt-names
+ common properties
+
+Currently the 'interrupts' and 'interrupt-names' properties are defined
+being too generic to really describe any actual IRQ interface. Moreover
+the DW PCIe End-point devices are left with no IRQ signals. All of that
+can be fixed by adding the IRQ-related properties to the common DW PCIe
+DT-schemas in accordance with the hardware reference manual. The DW PCIe
+common DT-schema will contain the generic properties definitions with just
+a number of entries per property, while the DW PCIe RP/EP-specific schemas
+will have the particular number of items and the generic resource names
+listed.
+
+Note since there are DW PCI-based vendor-specific DT-bindings with the
+custom names assigned to the same IRQ resources we have no much choice but
+to add them to the generic DT-schemas in order to have the schemas being
+applicable for such devices. These names are marked as vendor-specific and
+should be avoided being used in new bindings in favor of the generic
+names.
+
+Link: https://lore.kernel.org/r/20221113191301.5526-10-Sergey.Semin@baikalelectronics.ru
+Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/pci/snps,dw-pcie.yaml | 90 ++++++++++++++++++-
+ 1 file changed, 87 insertions(+), 3 deletions(-)
+
+--- a/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
+@@ -42,9 +42,92 @@ properties:
+       enum: [ dbi, dbi2, config, atu, atu_dma, app, appl, elbi, mgmt, ctrl,
+               parf, cfg, link, ulreg, smu, mpu, apb, phy, ecam ]
+ 
+-  interrupts: true
+-
+-  interrupt-names: true
++  interrupts:
++    description:
++      DWC PCIe Root Port/Complex specific IRQ signals. At least MSI interrupt
++      signal is supposed to be specified for the host controller.
++    minItems: 1
++    maxItems: 26
++
++  interrupt-names:
++    minItems: 1
++    maxItems: 26
++    items:
++      oneOf:
++        - description:
++            Controller request to read or write virtual product data
++            from/to the VPD capability registers.
++          const: vpd
++        - description:
++            Link Equalization Request flag is set in the Link Status 2
++            register (applicable if the corresponding IRQ is enabled in
++            the Link Control 3 register).
++          const: l_eq
++        - description:
++            Indicates that the eDMA Tx/Rx transfer is complete or that an
++            error has occurred on the corresponding channel. eDMA can have
++            eight Tx (Write) and Rx (Read) eDMA channels thus supporting up
++            to 16 IRQ signals all together. Write eDMA channels shall go
++            first in the ordered row as per default edma_int[*] bus setup.
++          pattern: '^dma([0-9]|1[0-5])?$'
++        - description:
++            PCIe protocol correctable error or a Data Path protection
++            correctable error is detected by the automotive/safety
++            feature.
++          const: sft_ce
++        - description:
++            Indicates that the internal safety mechanism has detected an
++            uncorrectable error.
++          const: sft_ue
++        - description:
++            Application-specific IRQ raised depending on the vendor-specific
++            events basis.
++          const: app
++        - description:
++            DSP AXI MSI Interrupt detected. It gets de-asserted when there is
++            no more MSI interrupt pending. The interrupt is relevant to the
++            iMSI-RX - Integrated MSI Receiver (AXI bridge).
++          const: msi
++        - description:
++            Legacy A/B/C/D interrupt signal. Basically it's triggered by
++            receiving a Assert_INT{A,B,C,D}/Desassert_INT{A,B,C,D} message
++            from the downstream device.
++          pattern: "^int(a|b|c|d)$"
++        - description:
++            Error condition detected and a flag is set in the Root Error Status
++            register of the AER capability. It's asserted when the RC
++            internally generated an error or an error message is received by
++            the RC.
++          const: aer
++        - description:
++            PME message is received by the port. That means having the PME
++            status bit set in the Root Status register (the event is
++            supposed to be unmasked in the Root Control register).
++          const: pme
++        - description:
++            Hot-plug event is detected. That is a bit has been set in the
++            Slot Status register and the corresponding event is enabled in
++            the Slot Control register.
++          const: hp
++        - description:
++            Link Autonomous Bandwidth Status flag has been set in the Link
++            Status register (the event is supposed to be unmasked in the
++            Link Control register).
++          const: bw_au
++        - description:
++            Bandwidth Management Status flag has been set in the Link
++            Status register (the event is supposed to be unmasked in the
++            Link Control register).
++          const: bw_mg
++        - description:
++            Vendor-specific IRQ names. Consider using the generic names above
++            for new bindings.
++          oneOf:
++            - description: See native "app" IRQ for details
++              enum: [ intr ]
++    allOf:
++      - contains:
++          const: msi
+ 
+   clocks: true
+ 
+@@ -70,6 +153,7 @@ examples:
+       bus-range = <0x0 0xff>;
+ 
+       interrupts = <25>, <24>;
++      interrupt-names = "msi", "hp";
+       #interrupt-cells = <1>;
+ 
+       reset-gpios = <&port0 0 1>;
diff --git a/target/linux/rockchip/patches-6.1/285-dt-bindings-PCI-dwc-Add-reg-reg-names-common-propert.patch b/target/linux/rockchip/patches-6.1/285-dt-bindings-PCI-dwc-Add-reg-reg-names-common-propert.patch
new file mode 100644
index 0000000000..0188eb7f3c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/285-dt-bindings-PCI-dwc-Add-reg-reg-names-common-propert.patch
@@ -0,0 +1,132 @@
+From 792f6eade6f3baa914cc3c4f0beccaff16cb6bb5 Mon Sep 17 00:00:00 2001
+From: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Date: Sun, 13 Nov 2022 22:12:51 +0300
+Subject: [PATCH 285/383] dt-bindings: PCI: dwc: Add reg/reg-names common
+ properties
+
+Even though there is a more-or-less limited set of the CSR spaces can be
+defined for each DW PCIe controller the generic DT-schema currently
+doesn't specify much limitations on the reg-space names used for one or
+another range. In order to prevent the vendor-specific controller schemas
+further deviation from the generic interface let's fix that by introducing
+the reg-names definition in the common DW PCIe DT-schemas and preserving
+the generic "reg" and "reg-names" properties in there. New DW PCIe device
+DT-bindings are encouraged to use the generic set of the CSR spaces
+defined in the generic DW PCIe RP/EP DT-bindings, while the already
+available vendor-specific DT-bindings can still apple the common
+DT-schemas.
+
+Note the number of reg/reg-names items need to be changed in the DW PCIe
+EP DT-schema since aside with the "dbi" CSRs space these arrays can have
+"dbi2", "addr_space", "atu", etc ranges.
+
+Also note since there are DW PCIe-based vendor-specific DT-bindings with
+the custom names assigned to the same CSR resources we have no much choice
+but to add them to the generic DT-schemas in order to have the schemas
+being applicable for such devices. These names are marked as
+vendor-specific and should be avoided being used in new bindings in favor
+of the generic names.
+
+Link: https://lore.kernel.org/r/20221113191301.5526-11-Sergey.Semin@baikalelectronics.ru
+Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../devicetree/bindings/pci/snps,dw-pcie.yaml | 78 +++++++++++++++++--
+ 1 file changed, 72 insertions(+), 6 deletions(-)
+
+--- a/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
+@@ -28,10 +28,10 @@ allOf:
+ 
+ properties:
+   reg:
+-    description: |
+-      It should contain Data Bus Interface (dbi) and config registers for all
+-      versions.
+-      For designware core version >= 4.80, it may contain ATU address space.
++    description:
++      At least DBI reg-space and peripheral devices CFG-space outbound window
++      are required for the normal controller work. iATU memory IO region is
++      also required if the space is unrolled (IP-core version >= 4.80a).
+     minItems: 2
+     maxItems: 5
+ 
+@@ -39,8 +39,74 @@ properties:
+     minItems: 2
+     maxItems: 5
+     items:
+-      enum: [ dbi, dbi2, config, atu, atu_dma, app, appl, elbi, mgmt, ctrl,
+-              parf, cfg, link, ulreg, smu, mpu, apb, phy, ecam ]
++      oneOf:
++        - description:
++            Basic DWC PCIe controller configuration-space accessible over
++            the DBI interface. This memory space is either activated with
++            CDM/ELBI = 0 and CS2 = 0 or is a contiguous memory region
++            with all spaces. Note iATU/eDMA CSRs are indirectly accessible
++            via the PL viewports on the DWC PCIe controllers older than
++            v4.80a.
++          const: dbi
++        - description:
++            Shadow DWC PCIe config-space registers. This space is selected
++            by setting CDM/ELBI = 0 and CS2 = 1. This is an intermix of
++            the PCI-SIG PCIe CFG-space with the shadow registers for some
++            PCI Header space, PCI Standard and Extended Structures. It's
++            mainly relevant for the end-point controller configuration,
++            but still there are some shadow registers available for the
++            Root Port mode too.
++          const: dbi2
++        - description:
++            External Local Bus registers. It's an application-dependent
++            registers normally defined by the platform engineers. The space
++            can be selected by setting CDM/ELBI = 1 and CS2 = 0 wires or can
++            be accessed over some platform-specific means (for instance
++            as a part of a system controller).
++          enum: [ elbi, app ]
++        - description:
++            iATU/eDMA registers common for all device functions. It's an
++            unrolled memory space with the internal Address Translation
++            Unit and Enhanced DMA, which is selected by setting CDM/ELBI = 1
++            and CS2 = 1. For IP-core releases prior v4.80a, these registers
++            have been programmed via an indirect addressing scheme using a
++            set of viewport CSRs mapped into the PL space. Note iATU is
++            normally mapped to the 0x0 address of this region, while eDMA
++            is available at 0x80000 base address.
++          const: atu
++        - description:
++            Platform-specific eDMA registers. Some platforms may have eDMA
++            CSRs mapped in a non-standard base address. The registers offset
++            can be changed or the MS/LS-bits of the address can be attached
++            in an additional RTL block before the MEM-IO transactions reach
++            the DW PCIe slave interface.
++          const: dma
++        - description:
++            PHY/PCS configuration registers. Some platforms can have the
++            PCS and PHY CSRs accessible over a dedicated memory mapped
++            region, but mainly these registers are indirectly accessible
++            either by means of the embedded PHY viewport schema or by some
++            platform-specific method.
++          const: phy
++        - description:
++            Outbound iATU-capable memory-region which will be used to access
++            the peripheral PCIe devices configuration space.
++          const: config
++        - description:
++            Vendor-specific CSR names. Consider using the generic names above
++            for new bindings.
++          oneOf:
++            - description: See native 'elbi/app' CSR region for details.
++              enum: [ apb, mgmt, link, ulreg, appl ]
++            - description: See native 'atu' CSR region for details.
++              enum: [ atu_dma ]
++            - description: Syscon-related CSR regions.
++              enum: [ smu, mpu ]
++    allOf:
++      - contains:
++          const: dbi
++      - contains:
++          const: config
+ 
+   interrupts:
+     description:
diff --git a/target/linux/rockchip/patches-6.1/286-dt-bindings-PCI-dwc-Add-clocks-resets-common-propert.patch b/target/linux/rockchip/patches-6.1/286-dt-bindings-PCI-dwc-Add-clocks-resets-common-propert.patch
new file mode 100644
index 0000000000..e1fd465584
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/286-dt-bindings-PCI-dwc-Add-clocks-resets-common-propert.patch
@@ -0,0 +1,44 @@
+From 20fe75b3d5c10e48181257b6d86506a375fce5dc Mon Sep 17 00:00:00 2001
+From: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Date: Sun, 13 Nov 2022 22:12:52 +0300
+Subject: [PATCH 286/383] dt-bindings: PCI: dwc: Add clocks/resets common
+ properties
+
+DW PCIe RP/EP reference manuals explicit define all the clocks and reset
+requirements in [1] and [2]. Seeing the DW PCIe vendor-specific
+DT-bindings have already started assigning random names to the same set of
+the clocks and resets lines, let's define a generic names sets and add
+them to the DW PCIe common DT-schema.
+
+Note since there are DW PCI-based vendor-specific DT-bindings with the
+custom names assigned to the same clocks and resets resources we have no
+much choice but to add them to the generic DT-schemas in order to have the
+schemas being applicable for such devices. These names are marked as
+vendor-specific and should be avoided being used in new bindings in favor
+of the generic names.
+
+[1] Synopsys DesignWare Cores PCI Express Controller Databook - DWC PCIe
+Root Port, Version 5.40a, March 2019, p.55 - 78.
+[2] Synopsys DesignWare Cores PCI Express Controller Databook - DWC PCIe
+Endpoint, Version 5.40a, March 2019, p.58 - 81.
+
+Link: https://lore.kernel.org/r/20221113191301.5526-12-Sergey.Semin@baikalelectronics.ru
+Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
+Signed-off-by: Lorenzo Pieralisi <lpieralisi@kernel.org>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml | 2 --
+ 1 file changed, 2 deletions(-)
+
+--- a/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
+@@ -195,8 +195,6 @@ properties:
+       - contains:
+           const: msi
+ 
+-  clocks: true
+-
+ additionalProperties: true
+ 
+ required:
diff --git a/target/linux/rockchip/patches-6.1/287-dt-bindings-PCI-dwc-rockchip-Fix-interrupt-names-iss.patch b/target/linux/rockchip/patches-6.1/287-dt-bindings-PCI-dwc-rockchip-Fix-interrupt-names-iss.patch
new file mode 100644
index 0000000000..25f0fd7354
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/287-dt-bindings-PCI-dwc-rockchip-Fix-interrupt-names-iss.patch
@@ -0,0 +1,90 @@
+From 0fd0248e890af947cc41be8e147278b28825014b Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 19 Apr 2023 14:57:14 +0200
+Subject: [PATCH 287/383] dt-bindings: PCI: dwc: rockchip: Fix interrupt-names
+ issue
+
+The RK356x (and RK3588) have 5 ganged interrupts. For example the
+"legacy" interrupt combines "inta/intb/intc/intd" with a register
+providing the details.
+
+Currently the binding is not specifying these interrupts resulting
+in a bunch of errors for all rk356x boards using PCIe.
+
+Fix this by specifying the interrupts and add them to the example
+to prevent regressions.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/pci/rockchip-dw-pcie.yaml         | 18 ++++++++++++++++++
+ .../devicetree/bindings/pci/snps,dw-pcie.yaml  | 15 ++++++++++++++-
+ 2 files changed, 32 insertions(+), 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
+@@ -56,6 +56,17 @@ properties:
+       - const: pclk
+       - const: aux
+ 
++  interrupts:
++    maxItems: 5
++
++  interrupt-names:
++    items:
++      - const: sys
++      - const: pmc
++      - const: msg
++      - const: legacy
++      - const: err
++
+   msi-map: true
+ 
+   num-lanes: true
+@@ -98,6 +109,7 @@ unevaluatedProperties: false
+ 
+ examples:
+   - |
++    #include <dt-bindings/interrupt-controller/arm-gic.h>
+ 
+     bus {
+         #address-cells = <2>;
+@@ -117,6 +129,12 @@ examples:
+                           "aclk_dbi", "pclk",
+                           "aux";
+             device_type = "pci";
++            interrupts = <GIC_SPI 160 IRQ_TYPE_LEVEL_HIGH>,
++                         <GIC_SPI 159 IRQ_TYPE_LEVEL_HIGH>,
++                         <GIC_SPI 158 IRQ_TYPE_LEVEL_HIGH>,
++                         <GIC_SPI 157 IRQ_TYPE_LEVEL_HIGH>,
++                         <GIC_SPI 156 IRQ_TYPE_LEVEL_HIGH>;
++            interrupt-names = "sys", "pmc", "msg", "legacy", "err";
+             linux,pci-domain = <2>;
+             max-link-speed = <2>;
+             msi-map = <0x2000 &its 0x2000 0x1000>;
+--- a/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
+@@ -191,9 +191,22 @@ properties:
+           oneOf:
+             - description: See native "app" IRQ for details
+               enum: [ intr ]
++        - description: Combined Legacy A/B/C/D interrupt signal.
++          const: legacy
++        - description: Combined System interrupt signal.
++          const: sys
++        - description: Combined Power Management interrupt signal.
++          const: pmc
++        - description: Combined Message Received interrupt signal.
++          const: msg
++        - description: Combined Error interrupt signal.
++          const: err
++
+     allOf:
+       - contains:
+-          const: msi
++          enum:
++            - msi
++            - msg
+ 
+ additionalProperties: true
+ 
diff --git a/target/linux/rockchip/patches-6.1/288-dt-bindings-PCI-dwc-rockchip-Add-missing-legacy-inte.patch b/target/linux/rockchip/patches-6.1/288-dt-bindings-PCI-dwc-rockchip-Add-missing-legacy-inte.patch
new file mode 100644
index 0000000000..4cb7aeff8d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/288-dt-bindings-PCI-dwc-rockchip-Add-missing-legacy-inte.patch
@@ -0,0 +1,58 @@
+From 167e9d4eb601b8e9423c505f23639e56098a329c Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 19 Apr 2023 18:27:12 +0200
+Subject: [PATCH 288/383] dt-bindings: PCI: dwc: rockchip: Add missing
+ legacy-interrupt-controller
+
+Rockchip RK356x and RK3588 handle legacy interrupts via a ganged
+interrupts. The RK356x DT implements this via a sub-node named
+"legacy-interrupt-controller", just like a couple of other PCIe
+implementations. This adds proper documentation for this and updates
+the example to avoid regressions.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/pci/rockchip-dw-pcie.yaml        | 24 +++++++++++++++++++
+ 1 file changed, 24 insertions(+)
+
+--- a/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
+@@ -67,6 +67,22 @@ properties:
+       - const: legacy
+       - const: err
+ 
++  legacy-interrupt-controller:
++    description: Interrupt controller node for handling legacy PCI interrupts.
++    type: object
++    properties:
++      "#address-cells":
++        const: 0
++
++      "#interrupt-cells":
++        const: 1
++
++      "interrupt-controller": true
++
++      interrupts:
++        items:
++          - description: combined legacy interrupt
++
+   msi-map: true
+ 
+   num-lanes: true
+@@ -148,6 +164,14 @@ examples:
+             reset-names = "pipe";
+             #address-cells = <3>;
+             #size-cells = <2>;
++
++            legacy-interrupt-controller {
++                interrupt-controller;
++                #address-cells = <0>;
++                #interrupt-cells = <1>;
++                interrupt-parent = <&gic>;
++                interrupts = <GIC_SPI 72 IRQ_TYPE_EDGE_RISING>;
++            };
+         };
+     };
+ ...
diff --git a/target/linux/rockchip/patches-6.1/289-dt-bindings-PCI-dwc-rockchip-Update-for-RK3588.patch b/target/linux/rockchip/patches-6.1/289-dt-bindings-PCI-dwc-rockchip-Update-for-RK3588.patch
new file mode 100644
index 0000000000..3cc7833eda
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/289-dt-bindings-PCI-dwc-rockchip-Update-for-RK3588.patch
@@ -0,0 +1,64 @@
+From c45b5461951611521cf20008d0ae57b4ece400c3 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 19 Apr 2023 20:49:46 +0200
+Subject: [PATCH 289/383] dt-bindings: PCI: dwc: rockchip: Update for RK3588
+
+The PCIe 2.0 controllers on RK3588 need one additional clock,
+one additional reset line and one for ranges entry.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/pci/rockchip-dw-pcie.yaml           | 16 +++++++++++++---
+ 1 file changed, 13 insertions(+), 3 deletions(-)
+
+--- a/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
+@@ -41,20 +41,24 @@ properties:
+       - const: config
+ 
+   clocks:
++    minItems: 5
+     items:
+       - description: AHB clock for PCIe master
+       - description: AHB clock for PCIe slave
+       - description: AHB clock for PCIe dbi
+       - description: APB clock for PCIe
+       - description: Auxiliary clock for PCIe
++      - description: PIPE clock
+ 
+   clock-names:
++    minItems: 5
+     items:
+       - const: aclk_mst
+       - const: aclk_slv
+       - const: aclk_dbi
+       - const: pclk
+       - const: aux
++      - const: pipe
+ 
+   interrupts:
+     maxItems: 5
+@@ -97,13 +101,19 @@ properties:
+     maxItems: 1
+ 
+   ranges:
+-    maxItems: 2
++    minItems: 2
++    maxItems: 3
+ 
+   resets:
+-    maxItems: 1
++    minItems: 1
++    maxItems: 2
+ 
+   reset-names:
+-    const: pipe
++    oneOf:
++      - const: pipe
++      - items:
++          - const: pwr
++          - const: pipe
+ 
+   vpcie3v3-supply: true
+ 
diff --git a/target/linux/rockchip/patches-6.1/290-arm64-defconfig-Enable-ethernet-for-Rock-5B.patch b/target/linux/rockchip/patches-6.1/290-arm64-defconfig-Enable-ethernet-for-Rock-5B.patch
new file mode 100644
index 0000000000..4154d6a64a
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/290-arm64-defconfig-Enable-ethernet-for-Rock-5B.patch
@@ -0,0 +1,29 @@
+From f00922dce0f289208c65e175c8c47e1ceb5b3216 Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Thu, 23 Mar 2023 12:27:19 +0000
+Subject: [PATCH 290/383] arm64: defconfig: Enable ethernet for Rock 5B
+
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/configs/defconfig | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/arch/arm64/configs/defconfig
++++ b/arch/arm64/configs/defconfig
+@@ -230,6 +230,7 @@ CONFIG_PCIE_ALTERA=y
+ CONFIG_PCIE_ALTERA_MSI=y
+ CONFIG_PCI_HOST_THUNDER_PEM=y
+ CONFIG_PCI_HOST_THUNDER_ECAM=y
++CONFIG_PCIE_ROCKCHIP_DW_HOST=y
+ CONFIG_PCIE_ROCKCHIP_HOST=m
+ CONFIG_PCIE_BRCMSTB=m
+ CONFIG_PCI_IMX6=y
+@@ -1243,6 +1244,7 @@ CONFIG_PHY_RCAR_GEN3_PCIE=y
+ CONFIG_PHY_RCAR_GEN3_USB2=y
+ CONFIG_PHY_RCAR_GEN3_USB3=m
+ CONFIG_PHY_ROCKCHIP_EMMC=y
++CONFIG_PHY_ROCKCHIP_NANENG_COMBO_PHY=y
+ CONFIG_PHY_ROCKCHIP_INNO_HDMI=m
+ CONFIG_PHY_ROCKCHIP_INNO_USB2=y
+ CONFIG_PHY_ROCKCHIP_INNO_DSIDPHY=m
diff --git a/target/linux/rockchip/patches-6.1/291-arm64-defconfig-Enable-Sound-Card-for-Rock-5B.patch b/target/linux/rockchip/patches-6.1/291-arm64-defconfig-Enable-Sound-Card-for-Rock-5B.patch
new file mode 100644
index 0000000000..180a6b2847
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/291-arm64-defconfig-Enable-Sound-Card-for-Rock-5B.patch
@@ -0,0 +1,29 @@
+From 55166fa47b3cc85efecbebe7b078eb4752467ad5 Mon Sep 17 00:00:00 2001
+From: Lucas Tanure <lucas.tanure@collabora.com>
+Date: Thu, 23 Mar 2023 12:37:12 +0000
+Subject: [PATCH 291/383] arm64: defconfig: Enable Sound Card for Rock 5B
+
+Signed-off-by: Lucas Tanure <lucas.tanure@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/configs/defconfig | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/arch/arm64/configs/defconfig
++++ b/arch/arm64/configs/defconfig
+@@ -813,6 +813,7 @@ CONFIG_SND_SOC_SM8250=m
+ CONFIG_SND_SOC_SC7180=m
+ CONFIG_SND_SOC_SC7280=m
+ CONFIG_SND_SOC_ROCKCHIP=m
++CONFIG_SND_SOC_ROCKCHIP_I2S_TDM=m
+ CONFIG_SND_SOC_ROCKCHIP_SPDIF=m
+ CONFIG_SND_SOC_ROCKCHIP_RT5645=m
+ CONFIG_SND_SOC_RK3399_GRU_SOUND=m
+@@ -841,6 +842,7 @@ CONFIG_SND_SOC_TEGRA_AUDIO_GRAPH_CARD=m
+ CONFIG_SND_SOC_AK4613=m
+ CONFIG_SND_SOC_ES7134=m
+ CONFIG_SND_SOC_ES7241=m
++CONFIG_SND_SOC_ES8316=m
+ CONFIG_SND_SOC_GTM601=m
+ CONFIG_SND_SOC_MSM8916_WCD_ANALOG=m
+ CONFIG_SND_SOC_MSM8916_WCD_DIGITAL=m
diff --git a/target/linux/rockchip/patches-6.1/292-arm64-dts-rockchip-rk3588s-Add-USBDP-phy-nodes.patch b/target/linux/rockchip/patches-6.1/292-arm64-dts-rockchip-rk3588s-Add-USBDP-phy-nodes.patch
new file mode 100644
index 0000000000..8d0d697347
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/292-arm64-dts-rockchip-rk3588s-Add-USBDP-phy-nodes.patch
@@ -0,0 +1,197 @@
+From 8c0b8cebeff2773880e5e5fae175ed300e7cc031 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 25 Apr 2023 17:49:04 +0200
+Subject: [PATCH 292/383] arm64: dts: rockchip: rk3588s: Add USBDP phy nodes
+
+Add both USB3-Displayport PHYs from RK3588.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi  | 63 +++++++++++++++++++
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 74 +++++++++++++++++++++++
+ 2 files changed, 137 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -12,6 +12,38 @@
+ 		reg = <0x0 0xfd5c0000 0x0 0x100>;
+ 	};
+ 
++	usbdpphy1_grf: syscon@fd5cc000 {
++		compatible = "rockchip,rk3588-usbdpphy-grf", "syscon";
++		reg = <0x0 0xfd5cc000 0x0 0x4000>;
++	};
++
++	usb2phy1_grf: syscon@fd5d4000 {
++		compatible = "rockchip,rk3588-usb2phy-grf", "syscon",
++			     "simple-mfd";
++		reg = <0x0 0xfd5d4000 0x0 0x4000>;
++		#address-cells = <1>;
++		#size-cells = <1>;
++
++		u2phy1: usb2-phy@4000 {
++			compatible = "rockchip,rk3588-usb2phy";
++			reg = <0x4000 0x10>;
++			interrupts = <GIC_SPI 394 IRQ_TYPE_LEVEL_HIGH 0>;
++			resets = <&cru SRST_OTGPHY_U3_1>, <&cru SRST_P_USB2PHY_U3_1_GRF0>;
++			reset-names = "phy", "apb";
++			clocks = <&cru CLK_USB2PHY_HDPTXRXPHY_REF>;
++			clock-names = "phyclk";
++			clock-output-names = "usb480m_phy1";
++			#clock-cells = <0>;
++			rockchip,usbctrl-grf = <&usb_grf>;
++			status = "disabled";
++
++			u2phy1_otg: otg-port {
++				#phy-cells = <0>;
++				status = "disabled";
++			};
++		};
++	};
++
+ 	i2s8_8ch: i2s@fddc8000 {
+ 		compatible = "rockchip,rk3588-i2s-tdm";
+ 		reg = <0x0 0xfddc8000 0x0 0x1000>;
+@@ -207,6 +239,37 @@
+ 		};
+ 	};
+ 
++	usbdp_phy1: phy@fed90000 {
++		compatible = "rockchip,rk3588-usbdp-phy";
++		reg = <0x0 0xfed90000 0x0 0x10000>;
++		rockchip,u2phy-grf = <&usb2phy1_grf>;
++		rockchip,usb-grf = <&usb_grf>;
++		rockchip,usbdpphy-grf = <&usbdpphy1_grf>;
++		rockchip,vo-grf = <&vo0_grf>;
++		clocks = <&cru CLK_USBDPPHY_MIPIDCPPHY_REF>,
++			 <&cru CLK_USBDP_PHY1_IMMORTAL>,
++			 <&cru PCLK_USBDPPHY1>,
++			 <&u2phy1>;
++		clock-names = "refclk", "immortal", "pclk", "utmi";
++		resets = <&cru SRST_USBDP_COMBO_PHY1_INIT>,
++			 <&cru SRST_USBDP_COMBO_PHY1_CMN>,
++			 <&cru SRST_USBDP_COMBO_PHY1_LANE>,
++			 <&cru SRST_USBDP_COMBO_PHY1_PCS>,
++			 <&cru SRST_P_USBDPPHY1>;
++		reset-names = "init", "cmn", "lane", "pcs_apb", "pma_apb";
++		status = "disabled";
++
++		usbdp_phy1_dp: dp-port {
++			#phy-cells = <0>;
++			status = "disabled";
++		};
++
++		usbdp_phy1_u3: usb3-port {
++			#phy-cells = <0>;
++			status = "disabled";
++		};
++	};
++
+ 	combphy1_ps: phy@fee10000 {
+ 		compatible = "rockchip,rk3588-naneng-combphy";
+ 		reg = <0x0 0xfee10000 0x0 0x100>;
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -890,6 +890,33 @@
+ 		reg = <0x0 0xfd58c000 0x0 0x1000>;
+ 	};
+ 
++	usb2phy0_grf: syscon@fd5d0000 {
++		compatible = "rockchip,rk3588-usb2phy-grf", "syscon",
++			     "simple-mfd";
++		reg = <0x0 0xfd5d0000 0x0 0x4000>;
++		#address-cells = <1>;
++		#size-cells = <1>;
++
++		u2phy0: usb2-phy@0 {
++			compatible = "rockchip,rk3588-usb2phy";
++			reg = <0x0 0x10>;
++			interrupts = <GIC_SPI 393 IRQ_TYPE_LEVEL_HIGH 0>;
++			resets = <&cru SRST_OTGPHY_U3_0>, <&cru SRST_P_USB2PHY_U3_0_GRF0>;
++			reset-names = "phy", "apb";
++			clocks = <&cru CLK_USB2PHY_HDPTXRXPHY_REF>;
++			clock-names = "phyclk";
++			clock-output-names = "usb480m_phy0";
++			#clock-cells = <0>;
++			rockchip,usbctrl-grf = <&usb_grf>;
++			status = "disabled";
++
++			u2phy0_otg: otg-port {
++				#phy-cells = <0>;
++				status = "disabled";
++			};
++		};
++	};
++
+ 	usb2phy2_grf: syscon@fd5d8000 {
+ 		compatible = "rockchip,rk3588-usb2phy-grf", "syscon", "simple-mfd";
+ 		reg = <0x0 0xfd5d8000 0x0 0x4000>;
+@@ -915,6 +942,17 @@
+ 		};
+ 	};
+ 
++	vo0_grf: syscon@fd5a6000 {
++		compatible = "rockchip,rk3588-vo-grf", "syscon";
++		reg = <0x0 0xfd5a6000 0x0 0x2000>;
++		clocks = <&cru PCLK_VO0GRF>;
++	};
++
++	usb_grf: syscon@fd5ac000 {
++		compatible = "rockchip,rk3588-usb-grf", "syscon";
++		reg = <0x0 0xfd5ac000 0x0 0x4000>;
++	};
++
+ 	usb2phy3_grf: syscon@fd5dc000 {
+ 		compatible = "rockchip,rk3588-usb2phy-grf", "syscon", "simple-mfd";
+ 		reg = <0x0 0xfd5dc000 0x0 0x4000>;
+@@ -965,6 +1003,11 @@
+ 		reg = <0x0 0xfd5c4000 0x0 0x100>;
+ 	};
+ 
++	usbdpphy0_grf: syscon@fd5c8000 {
++		compatible = "rockchip,rk3588-usbdpphy-grf", "syscon";
++		reg = <0x0 0xfd5c8000 0x0 0x4000>;
++	};
++
+ 	ioc: syscon@fd5f0000 {
+ 		compatible = "rockchip,rk3588-ioc", "syscon";
+ 		reg = <0x0 0xfd5f0000 0x0 0x10000>;
+@@ -2625,6 +2668,37 @@
+ 		#dma-cells = <1>;
+ 	};
+ 
++	usbdp_phy0: phy@fed80000 {
++		compatible = "rockchip,rk3588-usbdp-phy";
++		reg = <0x0 0xfed80000 0x0 0x10000>;
++		rockchip,u2phy-grf = <&usb2phy0_grf>;
++		rockchip,usb-grf = <&usb_grf>;
++		rockchip,usbdpphy-grf = <&usbdpphy0_grf>;
++		rockchip,vo-grf = <&vo0_grf>;
++		clocks = <&cru CLK_USBDPPHY_MIPIDCPPHY_REF>,
++			 <&cru CLK_USBDP_PHY0_IMMORTAL>,
++			 <&cru PCLK_USBDPPHY0>,
++			 <&u2phy0>;
++		clock-names = "refclk", "immortal", "pclk", "utmi";
++		resets = <&cru SRST_USBDP_COMBO_PHY0_INIT>,
++			 <&cru SRST_USBDP_COMBO_PHY0_CMN>,
++			 <&cru SRST_USBDP_COMBO_PHY0_LANE>,
++			 <&cru SRST_USBDP_COMBO_PHY0_PCS>,
++			 <&cru SRST_P_USBDPPHY0>;
++		reset-names = "init", "cmn", "lane", "pcs_apb", "pma_apb";
++		status = "disabled";
++
++		usbdp_phy0_dp: dp-port {
++			#phy-cells = <0>;
++			status = "disabled";
++		};
++
++		usbdp_phy0_u3: usb3-port {
++			#phy-cells = <0>;
++			status = "disabled";
++		};
++	};
++
+ 	combphy0_ps: phy@fee00000 {
+ 		compatible = "rockchip,rk3588-naneng-combphy";
+ 		reg = <0x0 0xfee00000 0x0 0x100>;
diff --git a/target/linux/rockchip/patches-6.1/293-arm64-dts-rockchip-rk3588s-Add-USB3-controllers.patch b/target/linux/rockchip/patches-6.1/293-arm64-dts-rockchip-rk3588s-Add-USB3-controllers.patch
new file mode 100644
index 0000000000..e33225d537
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/293-arm64-dts-rockchip-rk3588s-Add-USB3-controllers.patch
@@ -0,0 +1,130 @@
+From e80e8b243a895dee41b5159752c9e2a9d196247e Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 25 Apr 2023 18:17:19 +0200
+Subject: [PATCH 293/383] arm64: dts: rockchip: rk3588s: Add USB3 controllers
+
+Add all USB3 controllers.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi  | 29 +++++++++++
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 62 +++++++++++++++++++++++
+ 2 files changed, 91 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -7,6 +7,35 @@
+ #include "rk3588-pinctrl.dtsi"
+ 
+ / {
++	usbdrd3_1: usbdrd3_1 {
++		compatible = "rockchip,rk3588-dwc3", "rockchip,rk3399-dwc3";
++		clocks = <&cru REF_CLK_USB3OTG1>, <&cru SUSPEND_CLK_USB3OTG1>,
++			 <&cru ACLK_USB3OTG1>;
++		clock-names = "ref", "suspend", "bus";
++		#address-cells = <2>;
++		#size-cells = <2>;
++		ranges;
++		status = "disabled";
++
++		usbdrd_dwc3_1: usb@fc400000 {
++			compatible = "snps,dwc3";
++			reg = <0x0 0xfc400000 0x0 0x400000>;
++			interrupts = <GIC_SPI 221 IRQ_TYPE_LEVEL_HIGH 0>;
++			power-domains = <&power RK3588_PD_USB>;
++			resets = <&cru SRST_A_USB3OTG1>;
++			reset-names = "usb3-otg";
++			dr_mode = "host";
++			phys = <&u2phy1_otg>, <&usbdp_phy1_u3>;
++			phy-names = "usb2-phy", "usb3-phy";
++			phy_type = "utmi_wide";
++			snps,dis_enblslpm_quirk;
++			snps,dis-u2-freeclk-exists-quirk;
++			snps,dis-del-phy-power-chg-quirk;
++			snps,dis-tx-ipgap-linecheck-quirk;
++			status = "disabled";
++		};
++	};
++
+ 	pipe_phy1_grf: syscon@fd5c0000 {
+ 		compatible = "rockchip,rk3588-pipe-phy-grf", "syscon";
+ 		reg = <0x0 0xfd5c0000 0x0 0x100>;
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -841,6 +841,38 @@
+ 		};
+ 	};
+ 
++	usbdrd3_0: usbdrd3_0 {
++		compatible = "rockchip,rk3588-dwc3", "rockchip,rk3399-dwc3";
++		clocks = <&cru REF_CLK_USB3OTG0>, <&cru SUSPEND_CLK_USB3OTG0>,
++			 <&cru ACLK_USB3OTG0>;
++		clock-names = "ref", "suspend", "bus";
++		#address-cells = <2>;
++		#size-cells = <2>;
++		ranges;
++		status = "disabled";
++
++		usbdrd_dwc3_0: usb@fc000000 {
++			compatible = "snps,dwc3";
++			reg = <0x0 0xfc000000 0x0 0x400000>;
++			interrupts = <GIC_SPI 220 IRQ_TYPE_LEVEL_HIGH 0>;
++			power-domains = <&power RK3588_PD_USB>;
++			resets = <&cru SRST_A_USB3OTG0>;
++			reset-names = "usb3-otg";
++			dr_mode = "otg";
++			phys = <&u2phy0_otg>, <&usbdp_phy0_u3>;
++			phy-names = "usb2-phy", "usb3-phy";
++			phy_type = "utmi_wide";
++			snps,dis_enblslpm_quirk;
++			snps,dis-u1-entry-quirk;
++			snps,dis-u2-entry-quirk;
++			snps,dis-u2-freeclk-exists-quirk;
++			snps,dis-del-phy-power-chg-quirk;
++			snps,dis-tx-ipgap-linecheck-quirk;
++			quirk-skip-phy-init;
++			status = "disabled";
++		};
++	};
++
+ 	usb_host0_ehci: usb@fc800000 {
+ 		compatible = "rockchip,rk3588-ehci", "generic-ehci";
+ 		reg = <0x0 0xfc800000 0x0 0x40000>;
+@@ -885,6 +917,36 @@
+ 		status = "disabled";
+ 	};
+ 
++	usbhost3_0: usbhost3_0 {
++		compatible = "rockchip,rk3588-dwc3", "rockchip,rk3399-dwc3";
++		clocks = <&cru REF_CLK_USB3OTG2>, <&cru SUSPEND_CLK_USB3OTG2>,
++			 <&cru ACLK_USB3OTG2>, <&cru CLK_UTMI_OTG2>,
++			 <&cru PCLK_PHP_ROOT>, <&cru CLK_PIPEPHY2_PIPE_U3_G>;
++		clock-names = "ref", "suspend", "bus", "utmi", "php", "pipe";
++		#address-cells = <2>;
++		#size-cells = <2>;
++		ranges;
++		status = "disabled";
++
++		usbhost_dwc3_0: usb@fcd00000 {
++			compatible = "snps,dwc3";
++			reg = <0x0 0xfcd00000 0x0 0x400000>;
++			interrupts = <GIC_SPI 222 IRQ_TYPE_LEVEL_HIGH 0>;
++			resets = <&cru SRST_A_USB3OTG2>;
++			reset-names = "usb3-host";
++			dr_mode = "host";
++			phys = <&combphy2_psu PHY_TYPE_USB3>;
++			phy-names = "usb3-phy";
++			phy_type = "utmi_wide";
++			snps,dis_enblslpm_quirk;
++			snps,dis-u2-freeclk-exists-quirk;
++			snps,dis-del-phy-power-chg-quirk;
++			snps,dis-tx-ipgap-linecheck-quirk;
++			snps,dis_rxdet_inp3_quirk;
++			status = "disabled";
++		};
++	};
++
+ 	sys_grf: syscon@fd58c000 {
+ 		compatible = "rockchip,rk3588-sys-grf", "syscon";
+ 		reg = <0x0 0xfd58c000 0x0 0x1000>;
diff --git a/target/linux/rockchip/patches-6.1/294-fix-USB3-do-not-disable-sub-nodes.patch b/target/linux/rockchip/patches-6.1/294-fix-USB3-do-not-disable-sub-nodes.patch
new file mode 100644
index 0000000000..29656d1d9f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/294-fix-USB3-do-not-disable-sub-nodes.patch
@@ -0,0 +1,39 @@
+From ac17358d5ed73d379ce873a7fc3d35f92bdaad83 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 26 Apr 2023 15:01:10 +0200
+Subject: [PATCH 294/383] fix USB3: do not disable sub-nodes
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi  | 1 -
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 2 --
+ 2 files changed, 3 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -32,7 +32,6 @@
+ 			snps,dis-u2-freeclk-exists-quirk;
+ 			snps,dis-del-phy-power-chg-quirk;
+ 			snps,dis-tx-ipgap-linecheck-quirk;
+-			status = "disabled";
+ 		};
+ 	};
+ 
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -869,7 +869,6 @@
+ 			snps,dis-del-phy-power-chg-quirk;
+ 			snps,dis-tx-ipgap-linecheck-quirk;
+ 			quirk-skip-phy-init;
+-			status = "disabled";
+ 		};
+ 	};
+ 
+@@ -943,7 +942,6 @@
+ 			snps,dis-del-phy-power-chg-quirk;
+ 			snps,dis-tx-ipgap-linecheck-quirk;
+ 			snps,dis_rxdet_inp3_quirk;
+-			status = "disabled";
+ 		};
+ 	};
+ 
diff --git a/target/linux/rockchip/patches-6.1/295-phy-rockchip-add-usbdp-combo-phy-driver.patch b/target/linux/rockchip/patches-6.1/295-phy-rockchip-add-usbdp-combo-phy-driver.patch
new file mode 100644
index 0000000000..f6556cde65
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/295-phy-rockchip-add-usbdp-combo-phy-driver.patch
@@ -0,0 +1,1780 @@
+From b881d0c0e83b98ccdb7e091d16ab31c2495da721 Mon Sep 17 00:00:00 2001
+From: Frank Wang <frank.wang@rock-chips.com>
+Date: Tue, 25 Apr 2023 15:55:54 +0200
+Subject: [PATCH 295/383] phy: rockchip: add usbdp combo phy driver
+
+This adds a new USBDP combo PHY with Samsung IP block driver.
+
+The driver get lane mux and mapping info in 2 ways, supporting
+DisplayPort alternate mode or parsing from DT. When parsing from DT,
+the property "rockchip,dp-lane-mux" provide the DP mux and mapping info.
+
+When do DP link training, need to set lane number, link rate, swing, and
+pre-emphasis via PHY configure interface.
+
+Co-Developed-by: Zhang Yubing <yubing.zhang@rock-chips.com>
+Signed-off-by: Zhang Yubing <yubing.zhang@rock-chips.com>
+Co-Developed-by: Frank Wang <frank.wang@rock-chips.com>
+Signed-off-by: Frank Wang <frank.wang@rock-chips.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/phy/rockchip/Kconfig              |    9 +
+ drivers/phy/rockchip/Makefile             |    1 +
+ drivers/phy/rockchip/phy-rockchip-usbdp.c | 1728 +++++++++++++++++++++
+ 3 files changed, 1738 insertions(+)
+ create mode 100644 drivers/phy/rockchip/phy-rockchip-usbdp.c
+
+--- a/drivers/phy/rockchip/Kconfig
++++ b/drivers/phy/rockchip/Kconfig
+@@ -107,3 +107,12 @@ config PHY_ROCKCHIP_USB
+ 	select GENERIC_PHY
+ 	help
+ 	  Enable this to support the Rockchip USB 2.0 PHY.
++
++config PHY_ROCKCHIP_USBDP
++	tristate "Rockchip USBDP COMBO PHY Driver"
++	depends on ARCH_ROCKCHIP && OF
++	select GENERIC_PHY
++	select TYPEC
++	help
++	  Enable this to support the Rockchip USB3.0/DP
++	  combo PHY with Samsung IP block.
+--- a/drivers/phy/rockchip/Makefile
++++ b/drivers/phy/rockchip/Makefile
+@@ -11,3 +11,4 @@ obj-$(CONFIG_PHY_ROCKCHIP_PCIE)		+= phy-
+ obj-$(CONFIG_PHY_ROCKCHIP_SNPS_PCIE3)	+= phy-rockchip-snps-pcie3.o
+ obj-$(CONFIG_PHY_ROCKCHIP_TYPEC)	+= phy-rockchip-typec.o
+ obj-$(CONFIG_PHY_ROCKCHIP_USB)		+= phy-rockchip-usb.o
++obj-$(CONFIG_PHY_ROCKCHIP_USBDP)	+= phy-rockchip-usbdp.o
+--- /dev/null
++++ b/drivers/phy/rockchip/phy-rockchip-usbdp.c
+@@ -0,0 +1,1728 @@
++// SPDX-License-Identifier: GPL-2.0-or-later
++/*
++ * Rockchip USBDP Combo PHY with Samsung IP block driver
++ *
++ * Copyright (C) 2021 Rockchip Electronics Co., Ltd
++ */
++
++#include <linux/bitfield.h>
++#include <linux/bits.h>
++#include <linux/clk.h>
++#include <linux/clk-provider.h>
++#include <linux/delay.h>
++#include <linux/gpio.h>
++#include <linux/io.h>
++#include <linux/iopoll.h>
++#include <linux/kernel.h>
++#include <linux/mfd/syscon.h>
++#include <linux/module.h>
++#include <linux/mutex.h>
++#include <linux/of.h>
++#include <linux/of_address.h>
++#include <linux/of_platform.h>
++#include <linux/phy/phy.h>
++#include <linux/platform_device.h>
++#include <linux/regmap.h>
++#include <linux/reset.h>
++#include <linux/usb/ch9.h>
++#include <linux/usb/typec_dp.h>
++#include <linux/usb/typec_mux.h>
++
++/* RK3588 USBDP PHY Register Definitions */
++
++#define UDPHY_PCS				0x4000
++#define UDPHY_PMA				0x8000
++
++/* VO0 GRF Registers */
++#define RK3588_GRF_VO0_CON0			0x0000
++#define RK3588_GRF_VO0_CON2			0x0008
++#define DP_SINK_HPD_CFG				BIT(11)
++#define DP_SINK_HPD_SEL				BIT(10)
++#define DP_AUX_DIN_SEL				BIT(9)
++#define DP_AUX_DOUT_SEL				BIT(8)
++#define DP_LANE_SEL_N(n)			GENMASK(2 * (n) + 1, 2 * (n))
++#define DP_LANE_SEL_ALL				GENMASK(7, 0)
++#define PHY_AUX_DP_DATA_POL_NORMAL		0
++#define PHY_AUX_DP_DATA_POL_INVERT		1
++
++/* PMA CMN Registers */
++#define CMN_LANE_MUX_AND_EN_OFFSET		0x0288	/* cmn_reg00A2 */
++#define CMN_DP_LANE_MUX_N(n)			BIT((n) + 4)
++#define CMN_DP_LANE_EN_N(n)			BIT(n)
++#define CMN_DP_LANE_MUX_ALL			GENMASK(7, 4)
++#define CMN_DP_LANE_EN_ALL			GENMASK(3, 0)
++#define PHY_LANE_MUX_USB			0
++#define PHY_LANE_MUX_DP				1
++
++#define CMN_DP_LINK_OFFSET			0x28c	/*cmn_reg00A3 */
++#define CMN_DP_TX_LINK_BW			GENMASK(6, 5)
++#define CMN_DP_TX_LANE_SWAP_EN			BIT(2)
++
++#define CMN_SSC_EN_OFFSET			0x2d0	/* cmn_reg00B4 */
++#define CMN_ROPLL_SSC_EN			BIT(1)
++#define CMN_LCPLL_SSC_EN			BIT(0)
++
++#define CMN_ANA_LCPLL_DONE_OFFSET		0x0350	/* cmn_reg00D4 */
++#define CMN_ANA_LCPLL_LOCK_DONE			BIT(7)
++#define CMN_ANA_LCPLL_AFC_DONE			BIT(6)
++
++#define CMN_ANA_ROPLL_DONE_OFFSET		0x0354	/* cmn_reg00D5 */
++#define CMN_ANA_ROPLL_LOCK_DONE			BIT(1)
++#define CMN_ANA_ROPLL_AFC_DONE			BIT(0)
++
++#define CMN_DP_RSTN_OFFSET			0x038c	/* cmn_reg00E3 */
++#define CMN_DP_INIT_RSTN			BIT(3)
++#define CMN_DP_CMN_RSTN				BIT(2)
++#define CMN_CDR_WTCHDG_EN			BIT(1)
++#define CMN_CDR_WTCHDG_MSK_CDR_EN		BIT(0)
++
++#define TRSV_ANA_TX_CLK_OFFSET_N(n)		(0x854 + (n) * 0x800)	/* trsv_reg0215 */
++#define LN_ANA_TX_SER_TXCLK_INV			BIT(1)
++
++#define TRSV_LN0_MON_RX_CDR_DONE_OFFSET		0x0b84	/* trsv_reg02E1 */
++#define TRSV_LN0_MON_RX_CDR_LOCK_DONE		BIT(0)
++
++#define TRSV_LN2_MON_RX_CDR_DONE_OFFSET		0x1b84	/* trsv_reg06E1 */
++#define TRSV_LN2_MON_RX_CDR_LOCK_DONE		BIT(0)
++
++
++#define BIT_WRITEABLE_SHIFT	16
++
++enum {
++	DP_BW_RBR,
++	DP_BW_HBR,
++	DP_BW_HBR2,
++	DP_BW_HBR3,
++};
++
++enum {
++	UDPHY_MODE_NONE		= 0,
++	UDPHY_MODE_USB		= BIT(0),
++	UDPHY_MODE_DP		= BIT(1),
++	UDPHY_MODE_DP_USB	= BIT(1) | BIT(0),
++};
++
++struct udphy_grf_reg {
++	unsigned int	offset;
++	unsigned int	bitend;
++	unsigned int	bitstart;
++	unsigned int	disable;
++	unsigned int	enable;
++};
++
++struct udphy_grf_cfg {
++	/* u2phy-grf */
++	struct udphy_grf_reg	bvalid_phy_con;
++	struct udphy_grf_reg	bvalid_grf_con;
++
++	/* usb-grf */
++	struct udphy_grf_reg	usb3otg0_cfg;
++	struct udphy_grf_reg	usb3otg1_cfg;
++
++	/* usbdpphy-grf */
++	struct udphy_grf_reg	low_pwrn;
++	struct udphy_grf_reg	rx_lfps;
++};
++
++struct udphy_vogrf_cfg {
++	/* vo-grf */
++	struct udphy_grf_reg hpd_trigger;
++};
++
++struct dp_tx_drv_ctrl {
++	u32 trsv_reg0204;
++	u32 trsv_reg0205;
++	u32 trsv_reg0206;
++	u32 trsv_reg0207;
++};
++
++struct rockchip_udphy;
++
++struct rockchip_udphy_cfg {
++	/* resets to be requested */
++	const char * const *rst_list;
++	int num_rsts;
++
++	struct udphy_grf_cfg grfcfg;
++	struct udphy_vogrf_cfg vogrfcfg[2];
++	const struct dp_tx_drv_ctrl (*dp_tx_ctrl_cfg[4])[4];
++	const struct dp_tx_drv_ctrl (*dp_tx_ctrl_cfg_typec[4])[4];
++	int (*combophy_init)(struct rockchip_udphy *udphy);
++	int (*dp_phy_set_rate)(struct rockchip_udphy *udphy,
++			       struct phy_configure_opts_dp *dp);
++	int (*dp_phy_set_voltages)(struct rockchip_udphy *udphy,
++				   struct phy_configure_opts_dp *dp);
++	int (*hpd_event_trigger)(struct rockchip_udphy *udphy, bool hpd);
++	int (*dplane_enable)(struct rockchip_udphy *udphy, int dp_lanes);
++	int (*dplane_select)(struct rockchip_udphy *udphy);
++};
++
++struct rockchip_udphy {
++	struct device *dev;
++	struct regmap *pma_regmap;
++	struct regmap *u2phygrf;
++	struct regmap *udphygrf;
++	struct regmap *usbgrf;
++	struct regmap *vogrf;
++	struct typec_switch_dev *sw;
++	struct typec_mux_dev *mux;
++	struct mutex mutex; /* mutex to protect access to individual PHYs */
++
++	/* clocks and rests */
++	int num_clks;
++	struct clk_bulk_data *clks;
++	struct clk *refclk;
++	struct reset_control **rsts;
++
++	/* PHY status management */
++	bool flip;
++	bool mode_change;
++	u8 mode;
++	u8 status;
++
++	/* utilized for USB */
++	bool hs; /* flag for high-speed */
++
++	/* utilized for DP */
++	struct gpio_desc *sbu1_dc_gpio;
++	struct gpio_desc *sbu2_dc_gpio;
++	u32 lane_mux_sel[4];
++	u32 dp_lane_sel[4];
++	u32 dp_aux_dout_sel;
++	u32 dp_aux_din_sel;
++	bool dp_sink_hpd_sel;
++	bool dp_sink_hpd_cfg;
++	u8 bw;
++	int id;
++
++	/* PHY const config */
++	const struct rockchip_udphy_cfg *cfgs;
++};
++
++static const struct dp_tx_drv_ctrl rk3588_dp_tx_drv_ctrl_rbr_hbr[4][4] = {
++	/* voltage swing 0, pre-emphasis 0->3 */
++	{
++		{ 0x20, 0x10, 0x42, 0xe5 },
++		{ 0x26, 0x14, 0x42, 0xe5 },
++		{ 0x29, 0x18, 0x42, 0xe5 },
++		{ 0x2b, 0x1c, 0x43, 0xe7 },
++	},
++
++	/* voltage swing 1, pre-emphasis 0->2 */
++	{
++		{ 0x23, 0x10, 0x42, 0xe7 },
++		{ 0x2a, 0x17, 0x43, 0xe7 },
++		{ 0x2b, 0x1a, 0x43, 0xe7 },
++	},
++
++	/* voltage swing 2, pre-emphasis 0->1 */
++	{
++		{ 0x27, 0x10, 0x42, 0xe7 },
++		{ 0x2b, 0x17, 0x43, 0xe7 },
++	},
++
++	/* voltage swing 3, pre-emphasis 0 */
++	{
++		{ 0x29, 0x10, 0x43, 0xe7 },
++	},
++};
++
++static const struct dp_tx_drv_ctrl rk3588_dp_tx_drv_ctrl_rbr_hbr_typec[4][4] = {
++	/* voltage swing 0, pre-emphasis 0->3 */
++	{
++		{ 0x20, 0x10, 0x42, 0xe5 },
++		{ 0x26, 0x14, 0x42, 0xe5 },
++		{ 0x29, 0x18, 0x42, 0xe5 },
++		{ 0x2b, 0x1c, 0x43, 0xe7 },
++	},
++
++	/* voltage swing 1, pre-emphasis 0->2 */
++	{
++		{ 0x23, 0x10, 0x42, 0xe7 },
++		{ 0x2a, 0x17, 0x43, 0xe7 },
++		{ 0x2b, 0x1a, 0x43, 0xe7 },
++	},
++
++	/* voltage swing 2, pre-emphasis 0->1 */
++	{
++		{ 0x27, 0x10, 0x43, 0x67 },
++		{ 0x2b, 0x17, 0x43, 0xe7 },
++	},
++
++	/* voltage swing 3, pre-emphasis 0 */
++	{
++		{ 0x29, 0x10, 0x43, 0xe7 },
++	},
++};
++
++static const struct dp_tx_drv_ctrl rk3588_dp_tx_drv_ctrl_hbr2[4][4] = {
++	/* voltage swing 0, pre-emphasis 0->3 */
++	{
++		{ 0x21, 0x10, 0x42, 0xe5 },
++		{ 0x26, 0x14, 0x42, 0xe5 },
++		{ 0x26, 0x16, 0x43, 0xe5 },
++		{ 0x2a, 0x19, 0x43, 0xe7 },
++	},
++
++	/* voltage swing 1, pre-emphasis 0->2 */
++	{
++		{ 0x24, 0x10, 0x42, 0xe7 },
++		{ 0x2a, 0x17, 0x43, 0xe7 },
++		{ 0x2b, 0x1a, 0x43, 0xe7 },
++	},
++
++	/* voltage swing 2, pre-emphasis 0->1 */
++	{
++		{ 0x28, 0x10, 0x42, 0xe7 },
++		{ 0x2b, 0x17, 0x43, 0xe7 },
++	},
++
++	/* voltage swing 3, pre-emphasis 0 */
++	{
++		{ 0x28, 0x10, 0x43, 0xe7 },
++	},
++};
++
++static const struct dp_tx_drv_ctrl rk3588_dp_tx_drv_ctrl_hbr3[4][4] = {
++	/* voltage swing 0, pre-emphasis 0->3 */
++	{
++		{ 0x21, 0x10, 0x42, 0xe5 },
++		{ 0x26, 0x14, 0x42, 0xe5 },
++		{ 0x26, 0x16, 0x43, 0xe5 },
++		{ 0x29, 0x18, 0x43, 0xe7 },
++	},
++
++	/* voltage swing 1, pre-emphasis 0->2 */
++	{
++		{ 0x24, 0x10, 0x42, 0xe7 },
++		{ 0x2a, 0x18, 0x43, 0xe7 },
++		{ 0x2b, 0x1b, 0x43, 0xe7 }
++	},
++
++	/* voltage swing 2, pre-emphasis 0->1 */
++	{
++		{ 0x27, 0x10, 0x42, 0xe7 },
++		{ 0x2b, 0x18, 0x43, 0xe7 }
++	},
++
++	/* voltage swing 3, pre-emphasis 0 */
++	{
++		{ 0x28, 0x10, 0x43, 0xe7 },
++	},
++};
++
++static const struct reg_sequence rk3588_udphy_24m_refclk_cfg[] = {
++	{0x0090, 0x68}, {0x0094, 0x68},
++	{0x0128, 0x24}, {0x012c, 0x44},
++	{0x0130, 0x3f}, {0x0134, 0x44},
++	{0x015c, 0xa9}, {0x0160, 0x71},
++	{0x0164, 0x71}, {0x0168, 0xa9},
++	{0x0174, 0xa9}, {0x0178, 0x71},
++	{0x017c, 0x71}, {0x0180, 0xa9},
++	{0x018c, 0x41}, {0x0190, 0x00},
++	{0x0194, 0x05}, {0x01ac, 0x2a},
++	{0x01b0, 0x17}, {0x01b4, 0x17},
++	{0x01b8, 0x2a}, {0x01c8, 0x04},
++	{0x01cc, 0x08}, {0x01d0, 0x08},
++	{0x01d4, 0x04}, {0x01d8, 0x20},
++	{0x01dc, 0x01}, {0x01e0, 0x09},
++	{0x01e4, 0x03}, {0x01f0, 0x29},
++	{0x01f4, 0x02}, {0x01f8, 0x02},
++	{0x01fc, 0x29}, {0x0208, 0x2a},
++	{0x020c, 0x17}, {0x0210, 0x17},
++	{0x0214, 0x2a}, {0x0224, 0x20},
++	{0x03f0, 0x0a}, {0x03f4, 0x07},
++	{0x03f8, 0x07}, {0x03fc, 0x0c},
++	{0x0404, 0x12}, {0x0408, 0x1a},
++	{0x040c, 0x1a}, {0x0410, 0x3f},
++	{0x0ce0, 0x68}, {0x0ce8, 0xd0},
++	{0x0cf0, 0x87}, {0x0cf8, 0x70},
++	{0x0d00, 0x70}, {0x0d08, 0xa9},
++	{0x1ce0, 0x68}, {0x1ce8, 0xd0},
++	{0x1cf0, 0x87}, {0x1cf8, 0x70},
++	{0x1d00, 0x70}, {0x1d08, 0xa9},
++	{0x0a3c, 0xd0}, {0x0a44, 0xd0},
++	{0x0a48, 0x01}, {0x0a4c, 0x0d},
++	{0x0a54, 0xe0}, {0x0a5c, 0xe0},
++	{0x0a64, 0xa8}, {0x1a3c, 0xd0},
++	{0x1a44, 0xd0}, {0x1a48, 0x01},
++	{0x1a4c, 0x0d}, {0x1a54, 0xe0},
++	{0x1a5c, 0xe0}, {0x1a64, 0xa8}
++};
++
++static const struct reg_sequence rk3588_udphy_26m_refclk_cfg[] = {
++	{0x0830, 0x07}, {0x085c, 0x80},
++	{0x1030, 0x07}, {0x105c, 0x80},
++	{0x1830, 0x07}, {0x185c, 0x80},
++	{0x2030, 0x07}, {0x205c, 0x80},
++	{0x0228, 0x38}, {0x0104, 0x44},
++	{0x0248, 0x44}, {0x038C, 0x02},
++	{0x0878, 0x04}, {0x1878, 0x04},
++	{0x0898, 0x77}, {0x1898, 0x77},
++	{0x0054, 0x01}, {0x00e0, 0x38},
++	{0x0060, 0x24}, {0x0064, 0x77},
++	{0x0070, 0x76}, {0x0234, 0xE8},
++	{0x0AF4, 0x15}, {0x1AF4, 0x15},
++	{0x081C, 0xE5}, {0x181C, 0xE5},
++	{0x099C, 0x48}, {0x199C, 0x48},
++	{0x09A4, 0x07}, {0x09A8, 0x22},
++	{0x19A4, 0x07}, {0x19A8, 0x22},
++	{0x09B8, 0x3E}, {0x19B8, 0x3E},
++	{0x09E4, 0x02}, {0x19E4, 0x02},
++	{0x0A34, 0x1E}, {0x1A34, 0x1E},
++	{0x0A98, 0x2F}, {0x1A98, 0x2F},
++	{0x0c30, 0x0E}, {0x0C48, 0x06},
++	{0x1C30, 0x0E}, {0x1C48, 0x06},
++	{0x028C, 0x18}, {0x0AF0, 0x00},
++	{0x1AF0, 0x00}
++};
++
++static const struct reg_sequence rk3588_udphy_init_sequence[] = {
++	{0x0104, 0x44}, {0x0234, 0xE8},
++	{0x0248, 0x44}, {0x028C, 0x18},
++	{0x081C, 0xE5}, {0x0878, 0x00},
++	{0x0994, 0x1C}, {0x0AF0, 0x00},
++	{0x181C, 0xE5}, {0x1878, 0x00},
++	{0x1994, 0x1C}, {0x1AF0, 0x00},
++	{0x0428, 0x60}, {0x0D58, 0x33},
++	{0x1D58, 0x33}, {0x0990, 0x74},
++	{0x0D64, 0x17}, {0x08C8, 0x13},
++	{0x1990, 0x74}, {0x1D64, 0x17},
++	{0x18C8, 0x13}, {0x0D90, 0x40},
++	{0x0DA8, 0x40}, {0x0DC0, 0x40},
++	{0x0DD8, 0x40}, {0x1D90, 0x40},
++	{0x1DA8, 0x40}, {0x1DC0, 0x40},
++	{0x1DD8, 0x40}, {0x03C0, 0x30},
++	{0x03C4, 0x06}, {0x0E10, 0x00},
++	{0x1E10, 0x00}, {0x043C, 0x0F},
++	{0x0D2C, 0xFF}, {0x1D2C, 0xFF},
++	{0x0D34, 0x0F}, {0x1D34, 0x0F},
++	{0x08FC, 0x2A}, {0x0914, 0x28},
++	{0x0A30, 0x03}, {0x0E38, 0x05},
++	{0x0ECC, 0x27}, {0x0ED0, 0x22},
++	{0x0ED4, 0x26}, {0x18FC, 0x2A},
++	{0x1914, 0x28}, {0x1A30, 0x03},
++	{0x1E38, 0x05}, {0x1ECC, 0x27},
++	{0x1ED0, 0x22}, {0x1ED4, 0x26},
++	{0x0048, 0x0F}, {0x0060, 0x3C},
++	{0x0064, 0xF7}, {0x006C, 0x20},
++	{0x0070, 0x7D}, {0x0074, 0x68},
++	{0x0AF4, 0x1A}, {0x1AF4, 0x1A},
++	{0x0440, 0x3F}, {0x10D4, 0x08},
++	{0x20D4, 0x08}, {0x00D4, 0x30},
++	{0x0024, 0x6e},
++};
++
++static inline int grfreg_write(struct regmap *base,
++			       const struct udphy_grf_reg *reg, bool en)
++{
++	u32 val, mask, tmp;
++
++	tmp = en ? reg->enable : reg->disable;
++	mask = GENMASK(reg->bitend, reg->bitstart);
++	val = (tmp << reg->bitstart) | (mask << BIT_WRITEABLE_SHIFT);
++
++	return regmap_write(base, reg->offset, val);
++}
++
++static int udphy_clk_init(struct rockchip_udphy *udphy, struct device *dev)
++{
++	int i;
++
++	udphy->num_clks = devm_clk_bulk_get_all(dev, &udphy->clks);
++	if (udphy->num_clks < 1)
++		return -ENODEV;
++
++	/* used for configure phy reference clock frequency */
++	for (i = 0; i < udphy->num_clks; i++) {
++		if (!strncmp(udphy->clks[i].id, "refclk", 6)) {
++			udphy->refclk = udphy->clks[i].clk;
++			break;
++		}
++	}
++
++	if (!udphy->refclk)
++		dev_warn(udphy->dev, "no refclk found\n");
++
++	return 0;
++}
++
++static int udphy_reset_init(struct rockchip_udphy *udphy, struct device *dev)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	int idx;
++
++	udphy->rsts = devm_kcalloc(dev, cfg->num_rsts,
++				   sizeof(*udphy->rsts), GFP_KERNEL);
++	if (!udphy->rsts)
++		return -ENOMEM;
++
++	for (idx = 0; idx < cfg->num_rsts; idx++) {
++		struct reset_control *rst;
++		const char *name = cfg->rst_list[idx];
++
++		rst = devm_reset_control_get(dev, name);
++		if (IS_ERR(rst)) {
++			dev_err(dev, "failed to get %s reset\n", name);
++			devm_kfree(dev, (void *)udphy->rsts);
++			return PTR_ERR(rst);
++		}
++
++		udphy->rsts[idx] = rst;
++	}
++
++	return 0;
++}
++
++static int udphy_get_rst_idx(const char * const *list, int num, char *name)
++{
++	int idx;
++
++	for (idx = 0; idx < num; idx++) {
++		if (!strcmp(list[idx], name))
++			return idx;
++	}
++
++	return -EINVAL;
++}
++
++static int udphy_reset_assert(struct rockchip_udphy *udphy, char *name)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	int idx;
++
++	idx = udphy_get_rst_idx(cfg->rst_list, cfg->num_rsts, name);
++	if (idx < 0)
++		return idx;
++
++	return reset_control_assert(udphy->rsts[idx]);
++}
++
++static int udphy_reset_deassert(struct rockchip_udphy *udphy, char *name)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	int idx;
++
++	idx = udphy_get_rst_idx(cfg->rst_list, cfg->num_rsts, name);
++	if (idx < 0)
++		return idx;
++
++	return reset_control_deassert(udphy->rsts[idx]);
++}
++
++static void udphy_u3_port_disable(struct rockchip_udphy *udphy, u8 disable)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	const struct udphy_grf_reg *preg;
++
++	preg = udphy->id ? &cfg->grfcfg.usb3otg1_cfg : &cfg->grfcfg.usb3otg0_cfg;
++	grfreg_write(udphy->usbgrf, preg, disable);
++}
++
++static void udphy_usb_bvalid_enable(struct rockchip_udphy *udphy, u8 enable)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++
++	grfreg_write(udphy->u2phygrf, &cfg->grfcfg.bvalid_phy_con, enable);
++	grfreg_write(udphy->u2phygrf, &cfg->grfcfg.bvalid_grf_con, enable);
++}
++
++/*
++ * In usb/dp combo phy driver, here are 2 ways to mapping lanes.
++ *
++ * 1 Type-C Mapping table (DP_Alt_Mode V1.0b remove ABF pin mapping)
++ * ---------------------------------------------------------------------------
++ * Type-C Pin   B11-B10       A2-A3       A11-A10       B2-B3
++ * PHY Pad      ln0(tx/rx)    ln1(tx)     ln2(tx/rx)    ln3(tx)
++ * C/E(Normal)  dpln3         dpln2       dpln0         dpln1
++ * C/E(Flip  )  dpln0         dpln1       dpln3         dpln2
++ * D/F(Normal)  usbrx         usbtx       dpln0         dpln1
++ * D/F(Flip  )  dpln0         dpln1       usbrx         usbtx
++ * A(Normal  )  dpln3         dpln1       dpln2         dpln0
++ * A(Flip    )  dpln2         dpln0       dpln3         dpln1
++ * B(Normal  )  usbrx         usbtx       dpln1         dpln0
++ * B(Flip    )  dpln1         dpln0       usbrx         usbtx
++ * ---------------------------------------------------------------------------
++ *
++ * 2 Mapping the lanes in dtsi
++ * if all 4 lane assignment for dp function, define rockchip,dp-lane-mux = <x x x x>;
++ * sample as follow:
++ * ---------------------------------------------------------------------------
++ *                        B11-B10       A2-A3       A11-A10       B2-B3
++ * rockchip,dp-lane-mux   ln0(tx/rx)    ln1(tx)     ln2(tx/rx)    ln3(tx)
++ * <0 1 2 3>              dpln0         dpln1       dpln2         dpln3
++ * <2 3 0 1>              dpln2         dpln3       dpln0         dpln1
++ * ---------------------------------------------------------------------------
++ * if 2 lane for dp function, 2 lane for usb function, define rockchip,dp-lane-mux = <x x>;
++ * sample as follow:
++ * ---------------------------------------------------------------------------
++ *                        B11-B10       A2-A3       A11-A10       B2-B3
++ * rockchip,dp-lane-mux   ln0(tx/rx)    ln1(tx)     ln2(tx/rx)    ln3(tx)
++ * <0 1>                  dpln0         dpln1       usbrx         usbtx
++ * <2 3>                  usbrx         usbtx       dpln0         dpln1
++ * ---------------------------------------------------------------------------
++ */
++
++static int udphy_dplane_select(struct rockchip_udphy *udphy)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++
++	if (cfg->dplane_select)
++		return cfg->dplane_select(udphy);
++
++	return 0;
++}
++
++static int udphy_dplane_get(struct rockchip_udphy *udphy)
++{
++	int dp_lanes;
++
++	switch (udphy->mode) {
++	case UDPHY_MODE_DP:
++		dp_lanes = 4;
++		break;
++	case UDPHY_MODE_DP_USB:
++		dp_lanes = 2;
++		break;
++	case UDPHY_MODE_USB:
++		fallthrough;
++	default:
++		dp_lanes = 0;
++		break;
++	}
++
++	return dp_lanes;
++}
++
++static int udphy_dplane_enable(struct rockchip_udphy *udphy, int dp_lanes)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	int ret = 0;
++
++	if (cfg->dplane_enable)
++		ret = cfg->dplane_enable(udphy, dp_lanes);
++
++	return ret;
++}
++
++static int upphy_set_typec_default_mapping(struct rockchip_udphy *udphy)
++{
++	if (udphy->flip) {
++		udphy->dp_lane_sel[0] = 0;
++		udphy->dp_lane_sel[1] = 1;
++		udphy->dp_lane_sel[2] = 3;
++		udphy->dp_lane_sel[3] = 2;
++		udphy->lane_mux_sel[0] = PHY_LANE_MUX_DP;
++		udphy->lane_mux_sel[1] = PHY_LANE_MUX_DP;
++		udphy->lane_mux_sel[2] = PHY_LANE_MUX_USB;
++		udphy->lane_mux_sel[3] = PHY_LANE_MUX_USB;
++		udphy->dp_aux_dout_sel = PHY_AUX_DP_DATA_POL_INVERT;
++		udphy->dp_aux_din_sel = PHY_AUX_DP_DATA_POL_INVERT;
++		gpiod_set_value_cansleep(udphy->sbu1_dc_gpio, 1);
++		gpiod_set_value_cansleep(udphy->sbu2_dc_gpio, 0);
++	} else {
++		udphy->dp_lane_sel[0] = 2;
++		udphy->dp_lane_sel[1] = 3;
++		udphy->dp_lane_sel[2] = 1;
++		udphy->dp_lane_sel[3] = 0;
++		udphy->lane_mux_sel[0] = PHY_LANE_MUX_USB;
++		udphy->lane_mux_sel[1] = PHY_LANE_MUX_USB;
++		udphy->lane_mux_sel[2] = PHY_LANE_MUX_DP;
++		udphy->lane_mux_sel[3] = PHY_LANE_MUX_DP;
++		udphy->dp_aux_dout_sel = PHY_AUX_DP_DATA_POL_NORMAL;
++		udphy->dp_aux_din_sel = PHY_AUX_DP_DATA_POL_NORMAL;
++		gpiod_set_value_cansleep(udphy->sbu1_dc_gpio, 0);
++		gpiod_set_value_cansleep(udphy->sbu2_dc_gpio, 1);
++	}
++
++	udphy->mode = UDPHY_MODE_DP_USB;
++
++	return 0;
++}
++
++static int udphy_orien_sw_set(struct typec_switch_dev *sw,
++			      enum typec_orientation orien)
++{
++	struct rockchip_udphy *udphy = typec_switch_get_drvdata(sw);
++
++	mutex_lock(&udphy->mutex);
++
++	if (orien == TYPEC_ORIENTATION_NONE) {
++		gpiod_set_value_cansleep(udphy->sbu1_dc_gpio, 0);
++		gpiod_set_value_cansleep(udphy->sbu2_dc_gpio, 0);
++		/* unattached */
++		udphy_usb_bvalid_enable(udphy, false);
++		goto unlock_ret;
++	}
++
++	udphy->flip = (orien == TYPEC_ORIENTATION_REVERSE) ? true : false;
++	upphy_set_typec_default_mapping(udphy);
++	udphy_usb_bvalid_enable(udphy, true);
++
++unlock_ret:
++	mutex_unlock(&udphy->mutex);
++	return 0;
++}
++
++static int udphy_setup_orien_switch(struct rockchip_udphy *udphy)
++{
++	struct typec_switch_desc sw_desc = { };
++
++	sw_desc.drvdata = udphy;
++	sw_desc.fwnode = dev_fwnode(udphy->dev);
++	sw_desc.set = udphy_orien_sw_set;
++
++	udphy->sw = typec_switch_register(udphy->dev, &sw_desc);
++	if (IS_ERR(udphy->sw)) {
++		dev_err(udphy->dev, "Error register typec orientation switch: %ld\n",
++			PTR_ERR(udphy->sw));
++		return PTR_ERR(udphy->sw);
++	}
++
++	return 0;
++}
++
++static void udphy_orien_switch_unregister(void *data)
++{
++	struct rockchip_udphy *udphy = data;
++
++	typec_switch_unregister(udphy->sw);
++}
++
++static int udphy_setup(struct rockchip_udphy *udphy)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	int ret = 0;
++
++	ret = clk_bulk_prepare_enable(udphy->num_clks, udphy->clks);
++	if (ret) {
++		dev_err(udphy->dev, "failed to enable clk\n");
++		return ret;
++	}
++
++	if (cfg->combophy_init) {
++		ret = cfg->combophy_init(udphy);
++		if (ret) {
++			dev_err(udphy->dev, "failed to init combophy\n");
++			clk_bulk_disable_unprepare(udphy->num_clks, udphy->clks);
++			return ret;
++		}
++	}
++
++	return 0;
++}
++
++static int udphy_disable(struct rockchip_udphy *udphy)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	int i;
++
++	clk_bulk_disable_unprepare(udphy->num_clks, udphy->clks);
++
++	for (i = 0; i < cfg->num_rsts; i++)
++		reset_control_assert(udphy->rsts[i]);
++
++	return 0;
++}
++
++static int udphy_parse_lane_mux_data(struct rockchip_udphy *udphy, struct device_node *np)
++{
++	struct property *prop;
++	int ret, i, len, num_lanes;
++
++	prop = of_find_property(np, "rockchip,dp-lane-mux", &len);
++	if (!prop) {
++		dev_dbg(udphy->dev, "failed to find dp lane mux, following dp alt mode\n");
++		udphy->mode = UDPHY_MODE_USB;
++		return 0;
++	}
++
++	num_lanes = len / sizeof(u32);
++
++	if (num_lanes != 2 && num_lanes != 4) {
++		dev_err(udphy->dev, "invalid number of lane mux\n");
++		return -EINVAL;
++	}
++
++	ret = of_property_read_u32_array(np, "rockchip,dp-lane-mux", udphy->dp_lane_sel, num_lanes);
++	if (ret) {
++		dev_err(udphy->dev, "get dp lane mux failed\n");
++		return -EINVAL;
++	}
++
++	for (i = 0; i < num_lanes; i++) {
++		int j;
++
++		if (udphy->dp_lane_sel[i] > 3) {
++			dev_err(udphy->dev, "lane mux between 0 and 3, exceeding the range\n");
++			return -EINVAL;
++		}
++
++		udphy->lane_mux_sel[udphy->dp_lane_sel[i]] = PHY_LANE_MUX_DP;
++
++		for (j = i + 1; j < num_lanes; j++) {
++			if (udphy->dp_lane_sel[i] == udphy->dp_lane_sel[j]) {
++				dev_err(udphy->dev, "set repeat lane mux value\n");
++				return -EINVAL;
++			}
++		}
++	}
++
++	udphy->mode = UDPHY_MODE_DP;
++	if (num_lanes == 2)
++		udphy->mode |= UDPHY_MODE_USB;
++
++	return 0;
++}
++
++static int udphy_get_initial_status(struct rockchip_udphy *udphy)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	int ret, i;
++	u32 value;
++
++	ret = clk_bulk_prepare_enable(udphy->num_clks, udphy->clks);
++	if (ret) {
++		dev_err(udphy->dev, "failed to enable clk\n");
++		return ret;
++	}
++
++	for (i = 0; i < cfg->num_rsts; i++)
++		reset_control_deassert(udphy->rsts[i]);
++
++	regmap_read(udphy->pma_regmap, CMN_LANE_MUX_AND_EN_OFFSET, &value);
++	if (FIELD_GET(CMN_DP_LANE_MUX_ALL, value) && FIELD_GET(CMN_DP_LANE_EN_ALL, value))
++		udphy->status = UDPHY_MODE_DP;
++	else
++		udphy_disable(udphy);
++
++	return 0;
++}
++
++static int udphy_parse_dt(struct rockchip_udphy *udphy, struct device *dev)
++{
++	struct device_node *np = dev->of_node;
++	enum usb_device_speed maximum_speed;
++	int ret;
++
++	udphy->u2phygrf = syscon_regmap_lookup_by_phandle(np, "rockchip,u2phy-grf");
++	if (IS_ERR(udphy->u2phygrf)) {
++		if (PTR_ERR(udphy->u2phygrf) == -ENODEV) {
++			dev_warn(dev, "missing u2phy-grf dt node\n");
++			udphy->u2phygrf = NULL;
++		} else {
++			return PTR_ERR(udphy->u2phygrf);
++		}
++	}
++
++	udphy->udphygrf = syscon_regmap_lookup_by_phandle(np, "rockchip,usbdpphy-grf");
++	if (IS_ERR(udphy->udphygrf)) {
++		if (PTR_ERR(udphy->udphygrf) == -ENODEV) {
++			dev_warn(dev, "missing usbdpphy-grf dt node\n");
++			udphy->udphygrf = NULL;
++		} else {
++			return PTR_ERR(udphy->udphygrf);
++		}
++	}
++
++	udphy->usbgrf = syscon_regmap_lookup_by_phandle(np, "rockchip,usb-grf");
++	if (IS_ERR(udphy->usbgrf)) {
++		if (PTR_ERR(udphy->usbgrf) == -ENODEV) {
++			dev_warn(dev, "missing usb-grf dt node\n");
++			udphy->usbgrf = NULL;
++		} else {
++			return PTR_ERR(udphy->usbgrf);
++		}
++	}
++
++	udphy->vogrf = syscon_regmap_lookup_by_phandle(np, "rockchip,vo-grf");
++	if (IS_ERR(udphy->vogrf)) {
++		if (PTR_ERR(udphy->vogrf) == -ENODEV) {
++			dev_warn(dev, "missing vo-grf dt node\n");
++			udphy->vogrf = NULL;
++		} else {
++			return PTR_ERR(udphy->vogrf);
++		}
++	}
++
++	ret = udphy_parse_lane_mux_data(udphy, np);
++	if (ret)
++		return ret;
++
++	udphy->sbu1_dc_gpio = devm_gpiod_get_optional(dev, "sbu1-dc", GPIOD_OUT_LOW);
++	if (IS_ERR(udphy->sbu1_dc_gpio))
++		return PTR_ERR(udphy->sbu1_dc_gpio);
++
++	udphy->sbu2_dc_gpio = devm_gpiod_get_optional(dev, "sbu2-dc", GPIOD_OUT_LOW);
++	if (IS_ERR(udphy->sbu2_dc_gpio))
++		return PTR_ERR(udphy->sbu2_dc_gpio);
++
++	if (device_property_present(dev, "maximum-speed")) {
++		maximum_speed = usb_get_maximum_speed(dev);
++		udphy->hs = maximum_speed <= USB_SPEED_HIGH ? true : false;
++	}
++
++	ret = udphy_clk_init(udphy, dev);
++	if (ret)
++		return ret;
++
++	ret = udphy_reset_init(udphy, dev);
++	if (ret)
++		return ret;
++
++	return 0;
++}
++
++static int udphy_power_on(struct rockchip_udphy *udphy, u8 mode)
++{
++	int ret;
++
++	if (!(udphy->mode & mode)) {
++		dev_info(udphy->dev, "mode 0x%02x is not support\n", mode);
++		return 0;
++	}
++
++	if (udphy->status == UDPHY_MODE_NONE) {
++		udphy->mode_change = false;
++		ret = udphy_setup(udphy);
++		if (ret)
++			return ret;
++
++		if (udphy->mode & UDPHY_MODE_USB)
++			udphy_u3_port_disable(udphy, false);
++	} else if (udphy->mode_change) {
++		udphy->mode_change = false;
++		udphy->status = UDPHY_MODE_NONE;
++		if (udphy->mode == UDPHY_MODE_DP)
++			udphy_u3_port_disable(udphy, true);
++
++		ret = udphy_disable(udphy);
++		if (ret)
++			return ret;
++		ret = udphy_setup(udphy);
++		if (ret)
++			return ret;
++	}
++
++	udphy->status |= mode;
++
++	return 0;
++}
++
++static int udphy_power_off(struct rockchip_udphy *udphy, u8 mode)
++{
++	int ret;
++
++	if (!(udphy->mode & mode)) {
++		dev_info(udphy->dev, "mode 0x%02x is not support\n", mode);
++		return 0;
++	}
++
++	if (!udphy->status)
++		return 0;
++
++	udphy->status &= ~mode;
++
++	if (udphy->status == UDPHY_MODE_NONE) {
++		ret = udphy_disable(udphy);
++		if (ret)
++			return ret;
++	}
++
++	return 0;
++}
++
++static int rockchip_dp_phy_power_on(struct phy *phy)
++{
++	struct rockchip_udphy *udphy = phy_get_drvdata(phy);
++	int ret, dp_lanes;
++
++	mutex_lock(&udphy->mutex);
++
++	dp_lanes = udphy_dplane_get(udphy);
++	phy_set_bus_width(phy, dp_lanes);
++
++	ret = udphy_power_on(udphy, UDPHY_MODE_DP);
++	if (ret)
++		goto unlock;
++
++	ret = udphy_dplane_enable(udphy, dp_lanes);
++	if (ret)
++		goto unlock;
++
++	ret = udphy_dplane_select(udphy);
++
++unlock:
++	mutex_unlock(&udphy->mutex);
++	/*
++	 * If data send by aux channel too fast after phy power on,
++	 * the aux may be not ready which will cause aux error. Adding
++	 * delay to avoid this issue.
++	 */
++	usleep_range(10000, 11000);
++	return ret;
++}
++
++static int rockchip_dp_phy_power_off(struct phy *phy)
++{
++	struct rockchip_udphy *udphy = phy_get_drvdata(phy);
++	int ret;
++
++	mutex_lock(&udphy->mutex);
++	ret = udphy_dplane_enable(udphy, 0);
++	if (ret)
++		goto unlock;
++
++	ret = udphy_power_off(udphy, UDPHY_MODE_DP);
++
++unlock:
++	mutex_unlock(&udphy->mutex);
++	return ret;
++}
++
++static int rockchip_dp_phy_verify_link_rate(unsigned int link_rate)
++{
++	switch (link_rate) {
++	case 1620:
++	case 2700:
++	case 5400:
++	case 8100:
++		break;
++	default:
++		return -EINVAL;
++	}
++
++	return 0;
++}
++
++static int rockchip_dp_phy_verify_config(struct rockchip_udphy *udphy,
++					 struct phy_configure_opts_dp *dp)
++{
++	int i, ret;
++
++	/* If changing link rate was required, verify it's supported. */
++	ret = rockchip_dp_phy_verify_link_rate(dp->link_rate);
++	if (ret)
++		return ret;
++
++	/* Verify lane count. */
++	switch (dp->lanes) {
++	case 1:
++	case 2:
++	case 4:
++		/* valid lane count. */
++		break;
++	default:
++		return -EINVAL;
++	}
++
++	/*
++	 * If changing voltages is required, check swing and pre-emphasis
++	 * levels, per-lane.
++	 */
++	if (dp->set_voltages) {
++		/* Lane count verified previously. */
++		for (i = 0; i < dp->lanes; i++) {
++			if (dp->voltage[i] > 3 || dp->pre[i] > 3)
++				return -EINVAL;
++
++			/*
++			 * Sum of voltage swing and pre-emphasis levels cannot
++			 * exceed 3.
++			 */
++			if (dp->voltage[i] + dp->pre[i] > 3)
++				return -EINVAL;
++		}
++	}
++
++	return 0;
++}
++
++static int rockchip_dp_phy_configure(struct phy *phy,
++				     union phy_configure_opts *opts)
++{
++	struct rockchip_udphy *udphy = phy_get_drvdata(phy);
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	int ret;
++
++	ret = rockchip_dp_phy_verify_config(udphy, &opts->dp);
++	if (ret)
++		return ret;
++
++	if (opts->dp.set_rate && cfg->dp_phy_set_rate) {
++		ret = cfg->dp_phy_set_rate(udphy, &opts->dp);
++		if (ret) {
++			dev_err(udphy->dev,
++				"rockchip_hdptx_phy_set_rate failed\n");
++			return ret;
++		}
++	}
++
++	if (opts->dp.set_voltages && cfg->dp_phy_set_voltages) {
++		ret = cfg->dp_phy_set_voltages(udphy, &opts->dp);
++		if (ret) {
++			dev_err(udphy->dev,
++				"rockchip_dp_phy_set_voltages failed\n");
++			return ret;
++		}
++	}
++
++	return 0;
++}
++
++static const struct phy_ops rockchip_dp_phy_ops = {
++	.power_on	= rockchip_dp_phy_power_on,
++	.power_off	= rockchip_dp_phy_power_off,
++	.configure	= rockchip_dp_phy_configure,
++	.owner		= THIS_MODULE,
++};
++
++static int rockchip_u3phy_init(struct phy *phy)
++{
++	struct rockchip_udphy *udphy = phy_get_drvdata(phy);
++	int ret = 0;
++
++	mutex_lock(&udphy->mutex);
++	/* DP only or high-speed, disable U3 port */
++	if (!(udphy->mode & UDPHY_MODE_USB) || udphy->hs) {
++		udphy_u3_port_disable(udphy, true);
++		goto unlock;
++	}
++
++	ret = udphy_power_on(udphy, UDPHY_MODE_USB);
++
++unlock:
++	mutex_unlock(&udphy->mutex);
++	return ret;
++}
++
++static int rockchip_u3phy_exit(struct phy *phy)
++{
++	struct rockchip_udphy *udphy = phy_get_drvdata(phy);
++	int ret = 0;
++
++	mutex_lock(&udphy->mutex);
++	/* DP only or high-speed */
++	if (!(udphy->mode & UDPHY_MODE_USB) || udphy->hs)
++		goto unlock;
++
++	ret = udphy_power_off(udphy, UDPHY_MODE_USB);
++
++unlock:
++	mutex_unlock(&udphy->mutex);
++	return ret;
++}
++
++static const struct phy_ops rockchip_u3phy_ops = {
++	.init		= rockchip_u3phy_init,
++	.exit		= rockchip_u3phy_exit,
++	.owner		= THIS_MODULE,
++};
++
++static int usbdp_typec_mux_set(struct typec_mux_dev *mux,
++			       struct typec_mux_state *state)
++{
++	struct rockchip_udphy *udphy = typec_mux_get_drvdata(mux);
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	u8 mode;
++
++	mutex_lock(&udphy->mutex);
++
++	switch (state->mode) {
++	case TYPEC_DP_STATE_C:
++		fallthrough;
++	case TYPEC_DP_STATE_E:
++		udphy->lane_mux_sel[0] = PHY_LANE_MUX_DP;
++		udphy->lane_mux_sel[1] = PHY_LANE_MUX_DP;
++		udphy->lane_mux_sel[2] = PHY_LANE_MUX_DP;
++		udphy->lane_mux_sel[3] = PHY_LANE_MUX_DP;
++		mode = UDPHY_MODE_DP;
++		break;
++	case TYPEC_DP_STATE_D:
++		fallthrough;
++	default:
++		if (udphy->flip) {
++			udphy->lane_mux_sel[0] = PHY_LANE_MUX_DP;
++			udphy->lane_mux_sel[1] = PHY_LANE_MUX_DP;
++			udphy->lane_mux_sel[2] = PHY_LANE_MUX_USB;
++			udphy->lane_mux_sel[3] = PHY_LANE_MUX_USB;
++		} else {
++			udphy->lane_mux_sel[0] = PHY_LANE_MUX_USB;
++			udphy->lane_mux_sel[1] = PHY_LANE_MUX_USB;
++			udphy->lane_mux_sel[2] = PHY_LANE_MUX_DP;
++			udphy->lane_mux_sel[3] = PHY_LANE_MUX_DP;
++		}
++		mode = UDPHY_MODE_DP_USB;
++		break;
++	}
++
++	if (state->alt && state->alt->svid == USB_TYPEC_DP_SID) {
++		struct typec_displayport_data *data = state->data;
++
++		if (!data) {
++			if (cfg->hpd_event_trigger)
++				cfg->hpd_event_trigger(udphy, false);
++		} else if (data->status & DP_STATUS_IRQ_HPD) {
++			if (cfg->hpd_event_trigger) {
++				cfg->hpd_event_trigger(udphy, false);
++				usleep_range(750, 800);
++				cfg->hpd_event_trigger(udphy, true);
++			}
++		} else if (data->status & DP_STATUS_HPD_STATE) {
++			if (udphy->mode != mode) {
++				udphy->mode = mode;
++				udphy->mode_change = true;
++			}
++			if (cfg->hpd_event_trigger)
++				cfg->hpd_event_trigger(udphy, true);
++		} else {
++			if (cfg->hpd_event_trigger)
++				cfg->hpd_event_trigger(udphy, false);
++		}
++	}
++
++	mutex_unlock(&udphy->mutex);
++	return 0;
++}
++
++static int udphy_setup_typec_mux(struct rockchip_udphy *udphy)
++{
++	struct typec_mux_desc mux_desc = {};
++
++	mux_desc.drvdata = udphy;
++	mux_desc.fwnode = dev_fwnode(udphy->dev);
++	mux_desc.set = usbdp_typec_mux_set;
++
++	udphy->mux = typec_mux_register(udphy->dev, &mux_desc);
++	if (IS_ERR(udphy->mux)) {
++		dev_err(udphy->dev, "Error register typec mux: %ld\n",
++			PTR_ERR(udphy->mux));
++		return PTR_ERR(udphy->mux);
++	}
++
++	return 0;
++}
++
++static void udphy_typec_mux_unregister(void *data)
++{
++	struct rockchip_udphy *udphy = data;
++
++	typec_mux_unregister(udphy->mux);
++}
++
++static u32 udphy_dp_get_max_link_rate(struct rockchip_udphy *udphy, struct device_node *np)
++{
++	u32 max_link_rate;
++	int ret;
++
++	ret = of_property_read_u32(np, "max-link-rate", &max_link_rate);
++	if (ret)
++		return 8100;
++
++	ret = rockchip_dp_phy_verify_link_rate(max_link_rate);
++	if (ret) {
++		dev_warn(udphy->dev, "invalid max-link-rate value:%d\n", max_link_rate);
++		max_link_rate = 8100;
++	}
++
++	return max_link_rate;
++}
++
++static const struct regmap_config rockchip_udphy_pma_regmap_cfg = {
++	.reg_bits = 32,
++	.reg_stride = 4,
++	.val_bits = 32,
++	.fast_io = true,
++	.max_register = 0x20dc,
++};
++
++static int rockchip_udphy_probe(struct platform_device *pdev)
++{
++	struct device *dev = &pdev->dev;
++	struct device_node *np = dev->of_node;
++	struct device_node *child_np;
++	struct phy_provider *phy_provider;
++	struct resource *res;
++	struct rockchip_udphy *udphy;
++	const struct rockchip_udphy_cfg *phy_cfgs;
++	void __iomem *base;
++	int id, ret;
++
++	udphy = devm_kzalloc(dev, sizeof(*udphy), GFP_KERNEL);
++	if (!udphy)
++		return -ENOMEM;
++
++	id = of_alias_get_id(dev->of_node, "usbdp");
++	if (id < 0)
++		id = 0;
++	udphy->id = id;
++
++	phy_cfgs = of_device_get_match_data(dev);
++	if (!phy_cfgs) {
++		dev_err(dev, "no OF data can be matched with %p node\n", np);
++		return -EINVAL;
++	}
++
++	udphy->cfgs = phy_cfgs;
++
++	base = devm_platform_get_and_ioremap_resource(pdev, 0, &res);
++	if (IS_ERR(base))
++		return PTR_ERR(base);
++
++	udphy->pma_regmap = devm_regmap_init_mmio(dev, base + UDPHY_PMA,
++						  &rockchip_udphy_pma_regmap_cfg);
++	if (IS_ERR(udphy->pma_regmap))
++		return PTR_ERR(udphy->pma_regmap);
++
++	ret = udphy_parse_dt(udphy, dev);
++	if (ret)
++		return ret;
++
++	ret = udphy_get_initial_status(udphy);
++	if (ret)
++		return ret;
++
++	mutex_init(&udphy->mutex);
++	udphy->dev = dev;
++	platform_set_drvdata(pdev, udphy);
++
++	if (device_property_present(dev, "orientation-switch")) {
++		ret = udphy_setup_orien_switch(udphy);
++		if (ret)
++			return ret;
++
++		ret = devm_add_action_or_reset(dev, udphy_orien_switch_unregister, udphy);
++		if (ret)
++			return ret;
++	}
++
++	if (device_property_present(dev, "svid")) {
++		ret = udphy_setup_typec_mux(udphy);
++		if (ret)
++			return ret;
++
++		ret = devm_add_action_or_reset(dev, udphy_typec_mux_unregister, udphy);
++		if (ret)
++			return ret;
++	}
++
++	for_each_available_child_of_node(np, child_np) {
++		struct phy *phy;
++
++		if (of_node_name_eq(child_np, "dp-port")) {
++			phy = devm_phy_create(dev, child_np, &rockchip_dp_phy_ops);
++			if (IS_ERR(phy)) {
++				dev_err(dev, "failed to create dp phy: %pOFn\n", child_np);
++				goto put_child;
++			}
++
++			phy_set_bus_width(phy, udphy_dplane_get(udphy));
++			phy->attrs.max_link_rate = udphy_dp_get_max_link_rate(udphy, child_np);
++		} else if (of_node_name_eq(child_np, "usb3-port")) {
++			phy = devm_phy_create(dev, child_np, &rockchip_u3phy_ops);
++			if (IS_ERR(phy)) {
++				dev_err(dev, "failed to create usb phy: %pOFn\n", child_np);
++				goto put_child;
++			}
++		} else
++			continue;
++
++		phy_set_drvdata(phy, udphy);
++	}
++
++	phy_provider = devm_of_phy_provider_register(dev, of_phy_simple_xlate);
++	if (IS_ERR(phy_provider)) {
++		dev_err(dev, "failed to register phy provider\n");
++		goto put_child;
++	}
++
++	return 0;
++
++put_child:
++	of_node_put(child_np);
++	return ret;
++}
++
++static int rk3588_udphy_refclk_set(struct rockchip_udphy *udphy)
++{
++	unsigned long rate;
++	int ret;
++
++	/* configure phy reference clock */
++	rate = clk_get_rate(udphy->refclk);
++	dev_dbg(udphy->dev, "refclk freq %ld\n", rate);
++
++	switch (rate) {
++	case 24000000:
++		ret = regmap_multi_reg_write(udphy->pma_regmap, rk3588_udphy_24m_refclk_cfg,
++					     ARRAY_SIZE(rk3588_udphy_24m_refclk_cfg));
++		if (ret)
++			return ret;
++		break;
++	case 26000000:
++		/* register default is 26MHz */
++		ret = regmap_multi_reg_write(udphy->pma_regmap, rk3588_udphy_26m_refclk_cfg,
++					     ARRAY_SIZE(rk3588_udphy_26m_refclk_cfg));
++		if (ret)
++			return ret;
++		break;
++	default:
++		dev_err(udphy->dev, "unsupported refclk freq %ld\n", rate);
++		return -EINVAL;
++	}
++
++	return 0;
++}
++
++static int rk3588_udphy_status_check(struct rockchip_udphy *udphy)
++{
++	unsigned int val;
++	int ret;
++
++	/* LCPLL check */
++	if (udphy->mode & UDPHY_MODE_USB) {
++		ret = regmap_read_poll_timeout(udphy->pma_regmap, CMN_ANA_LCPLL_DONE_OFFSET,
++					       val, (val & CMN_ANA_LCPLL_AFC_DONE) &&
++					       (val & CMN_ANA_LCPLL_LOCK_DONE), 200, 100000);
++		if (ret) {
++			dev_err(udphy->dev, "cmn ana lcpll lock timeout\n");
++			return ret;
++		}
++	}
++
++	if (udphy->mode & UDPHY_MODE_USB) {
++		if (!udphy->flip) {
++			ret = regmap_read_poll_timeout(udphy->pma_regmap,
++						       TRSV_LN0_MON_RX_CDR_DONE_OFFSET, val,
++						       val & TRSV_LN0_MON_RX_CDR_LOCK_DONE,
++						       200, 100000);
++			if (ret)
++				dev_err(udphy->dev, "trsv ln0 mon rx cdr lock timeout\n");
++		} else {
++			ret = regmap_read_poll_timeout(udphy->pma_regmap,
++						       TRSV_LN2_MON_RX_CDR_DONE_OFFSET, val,
++						       val & TRSV_LN2_MON_RX_CDR_LOCK_DONE,
++						       200, 100000);
++			if (ret)
++				dev_err(udphy->dev, "trsv ln2 mon rx cdr lock timeout\n");
++		}
++	}
++
++	return 0;
++}
++
++static int rk3588_udphy_init(struct rockchip_udphy *udphy)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	int ret;
++
++	/* enable rx lfps for usb */
++	if (udphy->mode & UDPHY_MODE_USB)
++		grfreg_write(udphy->udphygrf, &cfg->grfcfg.rx_lfps, true);
++
++	/* Step 1: power on pma and deassert apb rstn */
++	grfreg_write(udphy->udphygrf, &cfg->grfcfg.low_pwrn, true);
++
++	udphy_reset_deassert(udphy, "pma_apb");
++	udphy_reset_deassert(udphy, "pcs_apb");
++
++	/* Step 2: set init sequence and phy refclk */
++	ret = regmap_multi_reg_write(udphy->pma_regmap, rk3588_udphy_init_sequence,
++				     ARRAY_SIZE(rk3588_udphy_init_sequence));
++	if (ret) {
++		dev_err(udphy->dev, "init sequence set error %d\n", ret);
++		goto assert_apb;
++	}
++
++	ret = rk3588_udphy_refclk_set(udphy);
++	if (ret) {
++		dev_err(udphy->dev, "refclk set error %d\n", ret);
++		goto assert_apb;
++	}
++
++	/* Step 3: configure lane mux */
++	regmap_update_bits(udphy->pma_regmap, CMN_LANE_MUX_AND_EN_OFFSET,
++			   CMN_DP_LANE_MUX_ALL | CMN_DP_LANE_EN_ALL,
++			   FIELD_PREP(CMN_DP_LANE_MUX_N(3), udphy->lane_mux_sel[3]) |
++			   FIELD_PREP(CMN_DP_LANE_MUX_N(2), udphy->lane_mux_sel[2]) |
++			   FIELD_PREP(CMN_DP_LANE_MUX_N(1), udphy->lane_mux_sel[1]) |
++			   FIELD_PREP(CMN_DP_LANE_MUX_N(0), udphy->lane_mux_sel[0]) |
++			   FIELD_PREP(CMN_DP_LANE_EN_ALL, 0));
++
++	/* Step 4: deassert init rstn and wait for 200ns from datasheet */
++	if (udphy->mode & UDPHY_MODE_USB)
++		udphy_reset_deassert(udphy, "init");
++
++	if (udphy->mode & UDPHY_MODE_DP) {
++		regmap_update_bits(udphy->pma_regmap, CMN_DP_RSTN_OFFSET,
++				   CMN_DP_INIT_RSTN,
++				   FIELD_PREP(CMN_DP_INIT_RSTN, 0x1));
++	}
++
++	udelay(1);
++
++	/*  Step 5: deassert cmn/lane rstn */
++	if (udphy->mode & UDPHY_MODE_USB) {
++		udphy_reset_deassert(udphy, "cmn");
++		udphy_reset_deassert(udphy, "lane");
++	}
++
++	/*  Step 6: wait for lock done of pll */
++	ret = rk3588_udphy_status_check(udphy);
++	if (ret)
++		goto assert_phy;
++
++	return 0;
++
++assert_phy:
++	udphy_reset_assert(udphy, "init");
++	udphy_reset_assert(udphy, "cmn");
++	udphy_reset_assert(udphy, "lane");
++
++assert_apb:
++	udphy_reset_assert(udphy, "pma_apb");
++	udphy_reset_assert(udphy, "pcs_apb");
++	return ret;
++}
++
++static int rk3588_udphy_hpd_event_trigger(struct rockchip_udphy *udphy, bool hpd)
++{
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++
++	udphy->dp_sink_hpd_sel = true;
++	udphy->dp_sink_hpd_cfg = hpd;
++
++	grfreg_write(udphy->vogrf, &cfg->vogrfcfg[udphy->id].hpd_trigger, hpd);
++
++	return 0;
++}
++
++static int rk3588_udphy_dplane_enable(struct rockchip_udphy *udphy, int dp_lanes)
++{
++	int i;
++	u32 val = 0;
++
++	for (i = 0; i < dp_lanes; i++)
++		val |= BIT(udphy->dp_lane_sel[i]);
++
++	regmap_update_bits(udphy->pma_regmap, CMN_LANE_MUX_AND_EN_OFFSET, CMN_DP_LANE_EN_ALL,
++			   FIELD_PREP(CMN_DP_LANE_EN_ALL, val));
++
++	if (!dp_lanes)
++		regmap_update_bits(udphy->pma_regmap, CMN_DP_RSTN_OFFSET,
++				   CMN_DP_CMN_RSTN, FIELD_PREP(CMN_DP_CMN_RSTN, 0x0));
++
++	return 0;
++}
++
++static int rk3588_udphy_dplane_select(struct rockchip_udphy *udphy)
++{
++	u32 value = 0;
++
++	switch (udphy->mode) {
++	case UDPHY_MODE_DP:
++		value |= 2 << udphy->dp_lane_sel[2] * 2;
++		value |= 3 << udphy->dp_lane_sel[3] * 2;
++		fallthrough;
++	case UDPHY_MODE_DP_USB:
++		value |= 0 << udphy->dp_lane_sel[0] * 2;
++		value |= 1 << udphy->dp_lane_sel[1] * 2;
++		break;
++	case UDPHY_MODE_USB:
++		break;
++	default:
++		break;
++	}
++
++	regmap_write(udphy->vogrf, udphy->id ? RK3588_GRF_VO0_CON2 : RK3588_GRF_VO0_CON0,
++		     ((DP_AUX_DIN_SEL | DP_AUX_DOUT_SEL | DP_LANE_SEL_ALL) << 16) |
++		     FIELD_PREP(DP_AUX_DIN_SEL, udphy->dp_aux_din_sel) |
++		     FIELD_PREP(DP_AUX_DOUT_SEL, udphy->dp_aux_dout_sel) | value);
++
++	return 0;
++}
++
++static int rk3588_dp_phy_set_rate(struct rockchip_udphy *udphy,
++				  struct phy_configure_opts_dp *dp)
++{
++	u32 val;
++	int ret;
++
++	regmap_update_bits(udphy->pma_regmap, CMN_DP_RSTN_OFFSET,
++			   CMN_DP_CMN_RSTN, FIELD_PREP(CMN_DP_CMN_RSTN, 0x0));
++
++	switch (dp->link_rate) {
++	case 1620:
++		udphy->bw = DP_BW_RBR;
++		break;
++	case 2700:
++		udphy->bw = DP_BW_HBR;
++		break;
++	case 5400:
++		udphy->bw = DP_BW_HBR2;
++		break;
++	case 8100:
++		udphy->bw = DP_BW_HBR3;
++		break;
++	default:
++		return -EINVAL;
++	}
++
++	regmap_update_bits(udphy->pma_regmap, CMN_DP_LINK_OFFSET, CMN_DP_TX_LINK_BW,
++			   FIELD_PREP(CMN_DP_TX_LINK_BW, udphy->bw));
++	regmap_update_bits(udphy->pma_regmap, CMN_SSC_EN_OFFSET, CMN_ROPLL_SSC_EN,
++			   FIELD_PREP(CMN_ROPLL_SSC_EN, dp->ssc));
++	regmap_update_bits(udphy->pma_regmap, CMN_DP_RSTN_OFFSET, CMN_DP_CMN_RSTN,
++			   FIELD_PREP(CMN_DP_CMN_RSTN, 0x1));
++
++	ret = regmap_read_poll_timeout(udphy->pma_regmap, CMN_ANA_ROPLL_DONE_OFFSET, val,
++				       FIELD_GET(CMN_ANA_ROPLL_LOCK_DONE, val) &&
++				       FIELD_GET(CMN_ANA_ROPLL_AFC_DONE, val),
++				       0, 1000);
++	if (ret) {
++		dev_err(udphy->dev, "ROPLL is not lock\n");
++		return ret;
++	}
++
++	return 0;
++}
++
++static void rk3588_dp_phy_set_voltage(struct rockchip_udphy *udphy, u8 bw,
++				      u32 voltage, u32 pre, u32 lane)
++{
++	u32 offset = 0x800 * lane;
++	u32 val;
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++	const struct dp_tx_drv_ctrl (*dp_ctrl)[4];
++
++	dp_ctrl = udphy->mux ? cfg->dp_tx_ctrl_cfg_typec[bw] : cfg->dp_tx_ctrl_cfg[bw];
++	val = dp_ctrl[voltage][pre].trsv_reg0204;
++	regmap_write(udphy->pma_regmap, 0x0810 + offset, val);
++
++	val = dp_ctrl[voltage][pre].trsv_reg0205;
++	regmap_write(udphy->pma_regmap, 0x0814 + offset, val);
++
++	val = dp_ctrl[voltage][pre].trsv_reg0206;
++	regmap_write(udphy->pma_regmap, 0x0818 + offset, val);
++
++	val = dp_ctrl[voltage][pre].trsv_reg0207;
++	regmap_write(udphy->pma_regmap, 0x081c + offset, val);
++}
++
++static int rk3588_dp_phy_set_voltages(struct rockchip_udphy *udphy,
++				      struct phy_configure_opts_dp *dp)
++{
++	u32 i, lane;
++
++	for (i = 0; i < dp->lanes; i++) {
++		lane = udphy->dp_lane_sel[i];
++		switch (dp->link_rate) {
++		case 1620:
++		case 2700:
++			regmap_update_bits(udphy->pma_regmap, TRSV_ANA_TX_CLK_OFFSET_N(lane),
++					   LN_ANA_TX_SER_TXCLK_INV,
++					   FIELD_PREP(LN_ANA_TX_SER_TXCLK_INV,
++					   udphy->lane_mux_sel[lane]));
++			break;
++		case 5400:
++		case 8100:
++			regmap_update_bits(udphy->pma_regmap, TRSV_ANA_TX_CLK_OFFSET_N(lane),
++					   LN_ANA_TX_SER_TXCLK_INV,
++					   FIELD_PREP(LN_ANA_TX_SER_TXCLK_INV, 0x0));
++			break;
++		}
++
++		rk3588_dp_phy_set_voltage(udphy, udphy->bw, dp->voltage[i], dp->pre[i], lane);
++	}
++
++	return 0;
++}
++
++static int __maybe_unused udphy_resume(struct device *dev)
++{
++	struct rockchip_udphy *udphy = dev_get_drvdata(dev);
++	const struct rockchip_udphy_cfg *cfg = udphy->cfgs;
++
++	if (udphy->dp_sink_hpd_sel)
++		cfg->hpd_event_trigger(udphy, udphy->dp_sink_hpd_cfg);
++
++	return 0;
++}
++
++static const struct dev_pm_ops udphy_pm_ops = {
++	SET_LATE_SYSTEM_SLEEP_PM_OPS(NULL, udphy_resume)
++};
++
++static const char * const rk3588_udphy_rst_l[] = {
++	"init", "cmn", "lane", "pcs_apb", "pma_apb"
++};
++
++static const struct rockchip_udphy_cfg rk3588_udphy_cfgs = {
++	.num_rsts = ARRAY_SIZE(rk3588_udphy_rst_l),
++	.rst_list = rk3588_udphy_rst_l,
++	.grfcfg	= {
++		/* u2phy-grf */
++		.bvalid_phy_con		= { 0x0008, 1, 0, 0x2, 0x3 },
++		.bvalid_grf_con		= { 0x0010, 3, 2, 0x2, 0x3 },
++
++		/* usb-grf */
++		.usb3otg0_cfg		= { 0x001c, 15, 0, 0x1100, 0x0188 },
++		.usb3otg1_cfg		= { 0x0034, 15, 0, 0x1100, 0x0188 },
++
++		/* usbdpphy-grf */
++		.low_pwrn		= { 0x0004, 13, 13, 0, 1 },
++		.rx_lfps		= { 0x0004, 14, 14, 0, 1 },
++	},
++	.vogrfcfg = {
++		{
++			.hpd_trigger	= { 0x0000, 11, 10, 1, 3 },
++		},
++		{
++			.hpd_trigger	= { 0x0008, 11, 10, 1, 3 },
++		},
++	},
++	.dp_tx_ctrl_cfg = {
++		rk3588_dp_tx_drv_ctrl_rbr_hbr,
++		rk3588_dp_tx_drv_ctrl_rbr_hbr,
++		rk3588_dp_tx_drv_ctrl_hbr2,
++		rk3588_dp_tx_drv_ctrl_hbr3,
++	},
++	.dp_tx_ctrl_cfg_typec = {
++		rk3588_dp_tx_drv_ctrl_rbr_hbr_typec,
++		rk3588_dp_tx_drv_ctrl_rbr_hbr_typec,
++		rk3588_dp_tx_drv_ctrl_hbr2,
++		rk3588_dp_tx_drv_ctrl_hbr3,
++	},
++	.combophy_init = rk3588_udphy_init,
++	.dp_phy_set_rate = rk3588_dp_phy_set_rate,
++	.dp_phy_set_voltages = rk3588_dp_phy_set_voltages,
++	.hpd_event_trigger = rk3588_udphy_hpd_event_trigger,
++	.dplane_enable = rk3588_udphy_dplane_enable,
++	.dplane_select = rk3588_udphy_dplane_select,
++};
++
++static const struct of_device_id rockchip_udphy_dt_match[] = {
++	{
++		.compatible = "rockchip,rk3588-usbdp-phy",
++		.data = &rk3588_udphy_cfgs
++	},
++	{ /* sentinel */ }
++};
++
++MODULE_DEVICE_TABLE(of, rockchip_udphy_dt_match);
++
++static struct platform_driver rockchip_udphy_driver = {
++	.probe		= rockchip_udphy_probe,
++	.driver		= {
++		.name	= "rockchip-usbdp-phy",
++		.of_match_table = rockchip_udphy_dt_match,
++		.pm = &udphy_pm_ops,
++	},
++};
++
++module_platform_driver(rockchip_udphy_driver);
++
++MODULE_AUTHOR("Frank Wang <frank.wang@rock-chips.com>");
++MODULE_AUTHOR("Zhang Yubing <yubing.zhang@rock-chips.com>");
++MODULE_DESCRIPTION("Rockchip USBDP Combo PHY driver");
++MODULE_LICENSE("GPL v2");
diff --git a/target/linux/rockchip/patches-6.1/296-dt-bindings-phy-add-rockchip-usbdp-combo-phy-documen.patch b/target/linux/rockchip/patches-6.1/296-dt-bindings-phy-add-rockchip-usbdp-combo-phy-documen.patch
new file mode 100644
index 0000000000..e21f899adf
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/296-dt-bindings-phy-add-rockchip-usbdp-combo-phy-documen.patch
@@ -0,0 +1,166 @@
+From 6a6b43f1246a756b6f6270e73f706c374a108e29 Mon Sep 17 00:00:00 2001
+From: Frank Wang <frank.wang@rock-chips.com>
+Date: Tue, 25 Apr 2023 17:38:57 +0200
+Subject: [PATCH 296/383] dt-bindings: phy: add rockchip usbdp combo phy
+ document
+
+Add device tree binding document for Rockchip USBDP Combo PHY
+with Samsung IP block.
+
+Signed-off-by: Frank Wang <frank.wang@rock-chips.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../bindings/phy/phy-rockchip-usbdp.yaml      | 146 ++++++++++++++++++
+ 1 file changed, 146 insertions(+)
+ create mode 100644 Documentation/devicetree/bindings/phy/phy-rockchip-usbdp.yaml
+
+--- /dev/null
++++ b/Documentation/devicetree/bindings/phy/phy-rockchip-usbdp.yaml
+@@ -0,0 +1,146 @@
++# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/phy/phy-rockchip-usbdp.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip USBDP Combo PHY with Samsung IP block
++
++maintainers:
++  - Frank Wang <frank.wang@rock-chips.com>
++  - Zhang Yubing <yubing.zhang@rock-chips.com>
++
++properties:
++  compatible:
++    enum:
++      - rockchip,rk3588-usbdp-phy
++
++  reg:
++    maxItems: 1
++
++  clocks:
++    items:
++      - description: phy ref clock.
++      - description: phy pcs immortal clock.
++      - description: phy peripheral clock.
++
++  clock-names:
++    items:
++      - const: refclk
++      - const: immortal
++      - const: pclk
++
++  resets:
++      - description: phy init reset.
++      - description: phy cmn reset.
++      - description: phy lane reset.
++      - description: phy pcs apb reset.
++      - description: phy pma apb reset.
++
++  reset-names:
++      - const: init
++      - const: cmn
++      - const: lane
++      - const: pcs_apb
++      - const: pma_apb
++
++  rockchip,dp-lane-mux:
++    minItems: 2
++    maxItems: 4
++    description:
++      An array of physical Tyep-C lanes indexes. Position of an entry determines
++      the dp lane index, while the value of an entry indicater physical Type-C lane.
++      The support dp lanes number are 2 or 4. e.g. for 2 lanes dp lanes map, we could
++      have "rockchip,dp-lane-mux = <2, 3>;", assuming dp lane0 on Type-C phy lane2,
++      dp lane1 on Type-C phy lane3. For 4 lanes dp lanes map, we could have
++      "rockchip,dp-lane-mux = <0, 1, 2, 3>;", assuming dp lane0 on Type-C phy lane0,
++      dp lane1 on Type-C phy lane1, dp lane2 on Type-C phy lane2, dp lane3 on Type-C
++      phy lane3. If dp lane map by DisplayPort Alt mode, this property is not need.
++
++  rockchip,u2phy-grf:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description:
++      Phandle to the syscon managing the 'usb2 phy general register files'.
++
++  rockchip,usb-grf:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description:
++      Phandle to the syscon managing the 'usb general register files'.
++
++  rockchip,usbdpphy-grf:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description:
++      Phandle to the syscon managing the 'usbdp phy general register files'.
++
++  rockchip,vo-grf:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description:
++      Phandle to the syscon managing the 'video output general register files'.
++      When select the dp lane mapping will request its phandle.
++
++  dp-port:
++    type: object
++    additionalProperties: false
++
++    properties:
++      "#phy-cells":
++        const: 0
++
++    required:
++      - "#phy-cells"
++
++  usb3-port:
++    type: object
++    additionalProperties: false
++
++    properties:
++      "#phy-cells":
++        const: 0
++
++    required:
++      - "#phy-cells"
++
++required:
++  - compatible
++  - reg
++  - clocks
++  - clock-names
++  - resets
++  - reset-names
++  - dp-port
++  - usb3-port
++
++additionalProperties: false
++
++examples:
++  - |
++    #include <dt-bindings/clock/rk3588-cru.h>
++
++    usbdp_phy0: phy@fed80000 {
++      compatible = "rockchip,rk3588-usbdp-phy";
++      reg = <0x0 0xfed80000 0x0 0x10000>;
++      rockchip,u2phy-grf = <&usb2phy0_grf>;
++      rockchip,usb-grf = <&usb_grf>;
++      rockchip,usbdpphy-grf = <&usbdpphy0_grf>;
++      rockchip,vo-grf = <&vo0_grf>;
++      clocks = <&cru CLK_USBDPPHY_MIPIDCPPHY_REF>,
++               <&cru CLK_USBDP_PHY0_IMMORTAL>,
++               <&cru PCLK_USBDPPHY0>;
++      clock-names = "refclk", "immortal", "pclk";
++      resets = <&cru SRST_USBDP_COMBO_PHY0_INIT>,
++               <&cru SRST_USBDP_COMBO_PHY0_CMN>,
++               <&cru SRST_USBDP_COMBO_PHY0_LANE>,
++               <&cru SRST_USBDP_COMBO_PHY0_PCS>,
++               <&cru SRST_P_USBDPPHY0>;
++      reset-names = "init", "cmn", "lane", "pcs_apb", "pma_apb";
++      status = "disabled";
++
++      usbdp_phy0_dp: dp-port {
++        #phy-cells = <0>;
++        status = "disabled";
++      };
++
++      usbdp_phy0_u3: usb3-port {
++        #phy-cells = <0>;
++        status = "disabled";
++    };
diff --git a/target/linux/rockchip/patches-6.1/297-crypto-rockchip-use-dev_err-for-error-message-about-.patch b/target/linux/rockchip/patches-6.1/297-crypto-rockchip-use-dev_err-for-error-message-about-.patch
new file mode 100644
index 0000000000..cf0ab14548
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/297-crypto-rockchip-use-dev_err-for-error-message-about-.patch
@@ -0,0 +1,27 @@
+From c0f99b22e8c9b5595650726747c76f2f692dba9e Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:39 +0000
+Subject: [PATCH 297/383] crypto: rockchip: use dev_err for error message about
+ interrupt
+
+Interrupt is mandatory so the message should be printed as error.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.c | 3 +--
+ 1 file changed, 1 insertion(+), 2 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -207,8 +207,7 @@ static int rk_crypto_probe(struct platfo
+ 
+ 	crypto_info->irq = platform_get_irq(pdev, 0);
+ 	if (crypto_info->irq < 0) {
+-		dev_warn(crypto_info->dev,
+-			 "control Interrupt is not available.\n");
++		dev_err(&pdev->dev, "control Interrupt is not available.\n");
+ 		err = crypto_info->irq;
+ 		goto err_crypto;
+ 	}
diff --git a/target/linux/rockchip/patches-6.1/298-crypto-rockchip-do-not-use-uninitialized-variable.patch b/target/linux/rockchip/patches-6.1/298-crypto-rockchip-do-not-use-uninitialized-variable.patch
new file mode 100644
index 0000000000..045c35cc3c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/298-crypto-rockchip-do-not-use-uninitialized-variable.patch
@@ -0,0 +1,25 @@
+From 122c64319bce419be4b041b2213995854669d3fc Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:40 +0000
+Subject: [PATCH 298/383] crypto: rockchip: do not use uninitialized variable
+
+crypto_info->dev is not yet set, so use pdev->dev instead.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -217,7 +217,7 @@ static int rk_crypto_probe(struct platfo
+ 			       "rk-crypto", pdev);
+ 
+ 	if (err) {
+-		dev_err(crypto_info->dev, "irq request failed.\n");
++		dev_err(&pdev->dev, "irq request failed.\n");
+ 		goto err_crypto;
+ 	}
+ 
diff --git a/target/linux/rockchip/patches-6.1/299-crypto-rockchip-fix-privete-private-typo.patch b/target/linux/rockchip/patches-6.1/299-crypto-rockchip-fix-privete-private-typo.patch
new file mode 100644
index 0000000000..67de6b7694
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/299-crypto-rockchip-fix-privete-private-typo.patch
@@ -0,0 +1,25 @@
+From 6cc93254c411d5c17f706f75a9f315d9bf76d30d Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:42 +0000
+Subject: [PATCH 299/383] crypto: rockchip: fix privete/private typo
+
+This fix a simple typo on private word.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.h | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.h
++++ b/drivers/crypto/rockchip/rk3288_crypto.h
+@@ -209,7 +209,7 @@ struct rk_ahash_ctx {
+ 	struct crypto_ahash		*fallback_tfm;
+ };
+ 
+-/* the privete variable of hash for fallback */
++/* the private variable of hash for fallback */
+ struct rk_ahash_rctx {
+ 	struct ahash_request		fallback_req;
+ 	u32				mode;
diff --git a/target/linux/rockchip/patches-6.1/300-crypto-rockchip-rewrite-type.patch b/target/linux/rockchip/patches-6.1/300-crypto-rockchip-rewrite-type.patch
new file mode 100644
index 0000000000..92f3451d73
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/300-crypto-rockchip-rewrite-type.patch
@@ -0,0 +1,175 @@
+From 7df633086eca7e9a080b3c31edca9c7485ef288a Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:49 +0000
+Subject: [PATCH 300/383] crypto: rockchip: rewrite type
+
+Instead of using a custom type for classify algorithms, let's just use
+already defined ones.
+And let's made a bit more verbose about what is registered.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.c       | 26 +++++++++++++------
+ drivers/crypto/rockchip/rk3288_crypto.h       |  7 +----
+ drivers/crypto/rockchip/rk3288_crypto_ahash.c |  6 ++---
+ .../crypto/rockchip/rk3288_crypto_skcipher.c  | 12 ++++-----
+ 4 files changed, 28 insertions(+), 23 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -102,12 +102,22 @@ static int rk_crypto_register(struct rk_
+ 
+ 	for (i = 0; i < ARRAY_SIZE(rk_cipher_algs); i++) {
+ 		rk_cipher_algs[i]->dev = crypto_info;
+-		if (rk_cipher_algs[i]->type == ALG_TYPE_CIPHER)
+-			err = crypto_register_skcipher(
+-					&rk_cipher_algs[i]->alg.skcipher);
+-		else
+-			err = crypto_register_ahash(
+-					&rk_cipher_algs[i]->alg.hash);
++		switch (rk_cipher_algs[i]->type) {
++		case CRYPTO_ALG_TYPE_SKCIPHER:
++			dev_info(crypto_info->dev, "Register %s as %s\n",
++				 rk_cipher_algs[i]->alg.skcipher.base.cra_name,
++				 rk_cipher_algs[i]->alg.skcipher.base.cra_driver_name);
++			err = crypto_register_skcipher(&rk_cipher_algs[i]->alg.skcipher);
++			break;
++		case CRYPTO_ALG_TYPE_AHASH:
++			dev_info(crypto_info->dev, "Register %s as %s\n",
++				 rk_cipher_algs[i]->alg.hash.halg.base.cra_name,
++				 rk_cipher_algs[i]->alg.hash.halg.base.cra_driver_name);
++			err = crypto_register_ahash(&rk_cipher_algs[i]->alg.hash);
++			break;
++		default:
++			dev_err(crypto_info->dev, "unknown algorithm\n");
++		}
+ 		if (err)
+ 			goto err_cipher_algs;
+ 	}
+@@ -115,7 +125,7 @@ static int rk_crypto_register(struct rk_
+ 
+ err_cipher_algs:
+ 	for (k = 0; k < i; k++) {
+-		if (rk_cipher_algs[i]->type == ALG_TYPE_CIPHER)
++		if (rk_cipher_algs[i]->type == CRYPTO_ALG_TYPE_SKCIPHER)
+ 			crypto_unregister_skcipher(&rk_cipher_algs[k]->alg.skcipher);
+ 		else
+ 			crypto_unregister_ahash(&rk_cipher_algs[i]->alg.hash);
+@@ -128,7 +138,7 @@ static void rk_crypto_unregister(void)
+ 	unsigned int i;
+ 
+ 	for (i = 0; i < ARRAY_SIZE(rk_cipher_algs); i++) {
+-		if (rk_cipher_algs[i]->type == ALG_TYPE_CIPHER)
++		if (rk_cipher_algs[i]->type == CRYPTO_ALG_TYPE_SKCIPHER)
+ 			crypto_unregister_skcipher(&rk_cipher_algs[i]->alg.skcipher);
+ 		else
+ 			crypto_unregister_ahash(&rk_cipher_algs[i]->alg.hash);
+--- a/drivers/crypto/rockchip/rk3288_crypto.h
++++ b/drivers/crypto/rockchip/rk3288_crypto.h
+@@ -232,18 +232,13 @@ struct rk_cipher_rctx {
+ 	struct skcipher_request fallback_req;   // keep at the end
+ };
+ 
+-enum alg_type {
+-	ALG_TYPE_HASH,
+-	ALG_TYPE_CIPHER,
+-};
+-
+ struct rk_crypto_tmp {
++	u32 type;
+ 	struct rk_crypto_info		*dev;
+ 	union {
+ 		struct skcipher_alg	skcipher;
+ 		struct ahash_alg	hash;
+ 	} alg;
+-	enum alg_type			type;
+ };
+ 
+ extern struct rk_crypto_tmp rk_ecb_aes_alg;
+--- a/drivers/crypto/rockchip/rk3288_crypto_ahash.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_ahash.c
+@@ -352,7 +352,7 @@ static void rk_cra_hash_exit(struct cryp
+ }
+ 
+ struct rk_crypto_tmp rk_ahash_sha1 = {
+-	.type = ALG_TYPE_HASH,
++	.type = CRYPTO_ALG_TYPE_AHASH,
+ 	.alg.hash = {
+ 		.init = rk_ahash_init,
+ 		.update = rk_ahash_update,
+@@ -382,7 +382,7 @@ struct rk_crypto_tmp rk_ahash_sha1 = {
+ };
+ 
+ struct rk_crypto_tmp rk_ahash_sha256 = {
+-	.type = ALG_TYPE_HASH,
++	.type = CRYPTO_ALG_TYPE_AHASH,
+ 	.alg.hash = {
+ 		.init = rk_ahash_init,
+ 		.update = rk_ahash_update,
+@@ -412,7 +412,7 @@ struct rk_crypto_tmp rk_ahash_sha256 = {
+ };
+ 
+ struct rk_crypto_tmp rk_ahash_md5 = {
+-	.type = ALG_TYPE_HASH,
++	.type = CRYPTO_ALG_TYPE_AHASH,
+ 	.alg.hash = {
+ 		.init = rk_ahash_init,
+ 		.update = rk_ahash_update,
+--- a/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
+@@ -468,7 +468,7 @@ static void rk_ablk_exit_tfm(struct cryp
+ }
+ 
+ struct rk_crypto_tmp rk_ecb_aes_alg = {
+-	.type = ALG_TYPE_CIPHER,
++	.type = CRYPTO_ALG_TYPE_SKCIPHER,
+ 	.alg.skcipher = {
+ 		.base.cra_name		= "ecb(aes)",
+ 		.base.cra_driver_name	= "ecb-aes-rk",
+@@ -490,7 +490,7 @@ struct rk_crypto_tmp rk_ecb_aes_alg = {
+ };
+ 
+ struct rk_crypto_tmp rk_cbc_aes_alg = {
+-	.type = ALG_TYPE_CIPHER,
++	.type = CRYPTO_ALG_TYPE_SKCIPHER,
+ 	.alg.skcipher = {
+ 		.base.cra_name		= "cbc(aes)",
+ 		.base.cra_driver_name	= "cbc-aes-rk",
+@@ -513,7 +513,7 @@ struct rk_crypto_tmp rk_cbc_aes_alg = {
+ };
+ 
+ struct rk_crypto_tmp rk_ecb_des_alg = {
+-	.type = ALG_TYPE_CIPHER,
++	.type = CRYPTO_ALG_TYPE_SKCIPHER,
+ 	.alg.skcipher = {
+ 		.base.cra_name		= "ecb(des)",
+ 		.base.cra_driver_name	= "ecb-des-rk",
+@@ -535,7 +535,7 @@ struct rk_crypto_tmp rk_ecb_des_alg = {
+ };
+ 
+ struct rk_crypto_tmp rk_cbc_des_alg = {
+-	.type = ALG_TYPE_CIPHER,
++	.type = CRYPTO_ALG_TYPE_SKCIPHER,
+ 	.alg.skcipher = {
+ 		.base.cra_name		= "cbc(des)",
+ 		.base.cra_driver_name	= "cbc-des-rk",
+@@ -558,7 +558,7 @@ struct rk_crypto_tmp rk_cbc_des_alg = {
+ };
+ 
+ struct rk_crypto_tmp rk_ecb_des3_ede_alg = {
+-	.type = ALG_TYPE_CIPHER,
++	.type = CRYPTO_ALG_TYPE_SKCIPHER,
+ 	.alg.skcipher = {
+ 		.base.cra_name		= "ecb(des3_ede)",
+ 		.base.cra_driver_name	= "ecb-des3-ede-rk",
+@@ -580,7 +580,7 @@ struct rk_crypto_tmp rk_ecb_des3_ede_alg
+ };
+ 
+ struct rk_crypto_tmp rk_cbc_des3_ede_alg = {
+-	.type = ALG_TYPE_CIPHER,
++	.type = CRYPTO_ALG_TYPE_SKCIPHER,
+ 	.alg.skcipher = {
+ 		.base.cra_name		= "cbc(des3_ede)",
+ 		.base.cra_driver_name	= "cbc-des3-ede-rk",
diff --git a/target/linux/rockchip/patches-6.1/301-crypto-rockchip-add-debugfs.patch b/target/linux/rockchip/patches-6.1/301-crypto-rockchip-add-debugfs.patch
new file mode 100644
index 0000000000..bade36d4d7
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/301-crypto-rockchip-add-debugfs.patch
@@ -0,0 +1,233 @@
+From cf79ab946d3cf92b907135d9651829bf6b99e2c3 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:50 +0000
+Subject: [PATCH 301/383] crypto: rockchip: add debugfs
+
+This patch enable to access usage stats for each algorithm.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/Kconfig                        | 10 ++++
+ drivers/crypto/rockchip/rk3288_crypto.c       | 47 +++++++++++++++++++
+ drivers/crypto/rockchip/rk3288_crypto.h       | 11 +++++
+ drivers/crypto/rockchip/rk3288_crypto_ahash.c |  8 ++++
+ .../crypto/rockchip/rk3288_crypto_skcipher.c  | 15 ++++++
+ 5 files changed, 91 insertions(+)
+
+--- a/drivers/crypto/Kconfig
++++ b/drivers/crypto/Kconfig
+@@ -686,6 +686,16 @@ config CRYPTO_DEV_ROCKCHIP
+ 	  This driver interfaces with the hardware crypto accelerator.
+ 	  Supporting cbc/ecb chainmode, and aes/des/des3_ede cipher mode.
+ 
++config CRYPTO_DEV_ROCKCHIP_DEBUG
++	bool "Enable Rockchip crypto stats"
++	depends on CRYPTO_DEV_ROCKCHIP
++	depends on DEBUG_FS
++	help
++	  Say y to enable Rockchip crypto debug stats.
++	  This will create /sys/kernel/debug/rk3288_crypto/stats for displaying
++	  the number of requests per algorithm and other internal stats.
++
++
+ config CRYPTO_DEV_ZYNQMP_AES
+ 	tristate "Support for Xilinx ZynqMP AES hw accelerator"
+ 	depends on ZYNQMP_FIRMWARE || COMPILE_TEST
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -95,6 +95,41 @@ static struct rk_crypto_tmp *rk_cipher_a
+ 	&rk_ahash_md5,
+ };
+ 
++#ifdef CONFIG_CRYPTO_DEV_ROCKCHIP_DEBUG
++static int rk_crypto_debugfs_show(struct seq_file *seq, void *v)
++{
++	unsigned int i;
++
++	for (i = 0; i < ARRAY_SIZE(rk_cipher_algs); i++) {
++		if (!rk_cipher_algs[i]->dev)
++			continue;
++		switch (rk_cipher_algs[i]->type) {
++		case CRYPTO_ALG_TYPE_SKCIPHER:
++			seq_printf(seq, "%s %s reqs=%lu fallback=%lu\n",
++				   rk_cipher_algs[i]->alg.skcipher.base.cra_driver_name,
++				   rk_cipher_algs[i]->alg.skcipher.base.cra_name,
++				   rk_cipher_algs[i]->stat_req, rk_cipher_algs[i]->stat_fb);
++			seq_printf(seq, "\tfallback due to length: %lu\n",
++				   rk_cipher_algs[i]->stat_fb_len);
++			seq_printf(seq, "\tfallback due to alignment: %lu\n",
++				   rk_cipher_algs[i]->stat_fb_align);
++			seq_printf(seq, "\tfallback due to SGs: %lu\n",
++				   rk_cipher_algs[i]->stat_fb_sgdiff);
++			break;
++		case CRYPTO_ALG_TYPE_AHASH:
++			seq_printf(seq, "%s %s reqs=%lu fallback=%lu\n",
++				   rk_cipher_algs[i]->alg.hash.halg.base.cra_driver_name,
++				   rk_cipher_algs[i]->alg.hash.halg.base.cra_name,
++				   rk_cipher_algs[i]->stat_req, rk_cipher_algs[i]->stat_fb);
++			break;
++		}
++	}
++	return 0;
++}
++
++DEFINE_SHOW_ATTRIBUTE(rk_crypto_debugfs);
++#endif
++
+ static int rk_crypto_register(struct rk_crypto_info *crypto_info)
+ {
+ 	unsigned int i, k;
+@@ -246,6 +281,15 @@ static int rk_crypto_probe(struct platfo
+ 		goto err_register_alg;
+ 	}
+ 
++#ifdef CONFIG_CRYPTO_DEV_ROCKCHIP_DEBUG
++	/* Ignore error of debugfs */
++	crypto_info->dbgfs_dir = debugfs_create_dir("rk3288_crypto", NULL);
++	crypto_info->dbgfs_stats = debugfs_create_file("stats", 0444,
++						       crypto_info->dbgfs_dir,
++						       crypto_info,
++						       &rk_crypto_debugfs_fops);
++#endif
++
+ 	dev_info(dev, "Crypto Accelerator successfully registered\n");
+ 	return 0;
+ 
+@@ -260,6 +304,9 @@ static int rk_crypto_remove(struct platf
+ {
+ 	struct rk_crypto_info *crypto_tmp = platform_get_drvdata(pdev);
+ 
++#ifdef CONFIG_CRYPTO_DEV_ROCKCHIP_DEBUG
++	debugfs_remove_recursive(crypto_tmp->dbgfs_dir);
++#endif
+ 	rk_crypto_unregister();
+ 	rk_crypto_disable_clk(crypto_tmp);
+ 	crypto_engine_exit(crypto_tmp->engine);
+--- a/drivers/crypto/rockchip/rk3288_crypto.h
++++ b/drivers/crypto/rockchip/rk3288_crypto.h
+@@ -7,6 +7,7 @@
+ #include <crypto/algapi.h>
+ #include <linux/dma-mapping.h>
+ #include <linux/interrupt.h>
++#include <linux/debugfs.h>
+ #include <linux/delay.h>
+ #include <linux/scatterlist.h>
+ #include <crypto/engine.h>
+@@ -199,6 +200,10 @@ struct rk_crypto_info {
+ 	struct crypto_engine *engine;
+ 	struct completion complete;
+ 	int status;
++#ifdef CONFIG_CRYPTO_DEV_ROCKCHIP_DEBUG
++	struct dentry *dbgfs_dir;
++	struct dentry *dbgfs_stats;
++#endif
+ };
+ 
+ /* the private variable of hash */
+@@ -239,6 +244,12 @@ struct rk_crypto_tmp {
+ 		struct skcipher_alg	skcipher;
+ 		struct ahash_alg	hash;
+ 	} alg;
++	unsigned long stat_req;
++	unsigned long stat_fb;
++	unsigned long stat_fb_len;
++	unsigned long stat_fb_sglen;
++	unsigned long stat_fb_align;
++	unsigned long stat_fb_sgdiff;
+ };
+ 
+ extern struct rk_crypto_tmp rk_ecb_aes_alg;
+--- a/drivers/crypto/rockchip/rk3288_crypto_ahash.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_ahash.c
+@@ -39,6 +39,10 @@ static int rk_ahash_digest_fb(struct aha
+ 	struct rk_ahash_rctx *rctx = ahash_request_ctx(areq);
+ 	struct crypto_ahash *tfm = crypto_ahash_reqtfm(areq);
+ 	struct rk_ahash_ctx *tfmctx = crypto_ahash_ctx(tfm);
++	struct ahash_alg *alg = __crypto_ahash_alg(tfm->base.__crt_alg);
++	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.hash);
++
++	algt->stat_fb++;
+ 
+ 	ahash_request_set_tfm(&rctx->fallback_req, tfmctx->fallback_tfm);
+ 	rctx->fallback_req.base.flags = areq->base.flags &
+@@ -249,6 +253,8 @@ static int rk_hash_run(struct crypto_eng
+ 	struct crypto_ahash *tfm = crypto_ahash_reqtfm(areq);
+ 	struct rk_ahash_rctx *rctx = ahash_request_ctx(areq);
+ 	struct rk_ahash_ctx *tctx = crypto_ahash_ctx(tfm);
++	struct ahash_alg *alg = __crypto_ahash_alg(tfm->base.__crt_alg);
++	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.hash);
+ 	struct scatterlist *sg = areq->src;
+ 	int err = 0;
+ 	int i;
+@@ -256,6 +262,8 @@ static int rk_hash_run(struct crypto_eng
+ 
+ 	rctx->mode = 0;
+ 
++	algt->stat_req++;
++
+ 	switch (crypto_ahash_digestsize(tfm)) {
+ 	case SHA1_DIGEST_SIZE:
+ 		rctx->mode = RK_CRYPTO_HASH_SHA1;
+--- a/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
+@@ -18,6 +18,8 @@ static int rk_cipher_need_fallback(struc
+ {
+ 	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+ 	unsigned int bs = crypto_skcipher_blocksize(tfm);
++	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
++	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.skcipher);
+ 	struct scatterlist *sgs, *sgd;
+ 	unsigned int stodo, dtodo, len;
+ 
+@@ -29,20 +31,25 @@ static int rk_cipher_need_fallback(struc
+ 	sgd = req->dst;
+ 	while (sgs && sgd) {
+ 		if (!IS_ALIGNED(sgs->offset, sizeof(u32))) {
++			algt->stat_fb_align++;
+ 			return true;
+ 		}
+ 		if (!IS_ALIGNED(sgd->offset, sizeof(u32))) {
++			algt->stat_fb_align++;
+ 			return true;
+ 		}
+ 		stodo = min(len, sgs->length);
+ 		if (stodo % bs) {
++			algt->stat_fb_len++;
+ 			return true;
+ 		}
+ 		dtodo = min(len, sgd->length);
+ 		if (dtodo % bs) {
++			algt->stat_fb_len++;
+ 			return true;
+ 		}
+ 		if (stodo != dtodo) {
++			algt->stat_fb_sgdiff++;
+ 			return true;
+ 		}
+ 		len -= stodo;
+@@ -57,8 +64,12 @@ static int rk_cipher_fallback(struct skc
+ 	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(areq);
+ 	struct rk_cipher_ctx *op = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(areq);
++	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
++	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.skcipher);
+ 	int err;
+ 
++	algt->stat_fb++;
++
+ 	skcipher_request_set_tfm(&rctx->fallback_req, op->fallback_tfm);
+ 	skcipher_request_set_callback(&rctx->fallback_req, areq->base.flags,
+ 				      areq->base.complete, areq->base.data);
+@@ -324,6 +335,10 @@ static int rk_cipher_run(struct crypto_e
+ 	u8 *ivtouse = areq->iv;
+ 	unsigned int len = areq->cryptlen;
+ 	unsigned int todo;
++	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
++	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.skcipher);
++
++	algt->stat_req++;
+ 
+ 	ivsize = crypto_skcipher_ivsize(tfm);
+ 	if (areq->iv && crypto_skcipher_ivsize(tfm) > 0) {
diff --git a/target/linux/rockchip/patches-6.1/302-crypto-rockchip-introduce-PM.patch b/target/linux/rockchip/patches-6.1/302-crypto-rockchip-introduce-PM.patch
new file mode 100644
index 0000000000..398cfaa1d3
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/302-crypto-rockchip-introduce-PM.patch
@@ -0,0 +1,182 @@
+From e99e91bc798c892fb202087a7667c6d4240306a4 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:51 +0000
+Subject: [PATCH 302/383] crypto: rockchip: introduce PM
+
+Add runtime PM support for rockchip crypto.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.c       | 51 ++++++++++++++++++-
+ drivers/crypto/rockchip/rk3288_crypto.h       |  1 +
+ drivers/crypto/rockchip/rk3288_crypto_ahash.c | 10 ++++
+ .../crypto/rockchip/rk3288_crypto_skcipher.c  |  9 ++++
+ 4 files changed, 69 insertions(+), 2 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -65,6 +65,48 @@ static void rk_crypto_disable_clk(struct
+ 	clk_disable_unprepare(dev->sclk);
+ }
+ 
++/*
++ * Power management strategy: The device is suspended unless a TFM exists for
++ * one of the algorithms proposed by this driver.
++ */
++static int rk_crypto_pm_suspend(struct device *dev)
++{
++	struct rk_crypto_info *rkdev = dev_get_drvdata(dev);
++
++	rk_crypto_disable_clk(rkdev);
++	return 0;
++}
++
++static int rk_crypto_pm_resume(struct device *dev)
++{
++	struct rk_crypto_info *rkdev = dev_get_drvdata(dev);
++
++	return rk_crypto_enable_clk(rkdev);
++}
++
++static const struct dev_pm_ops rk_crypto_pm_ops = {
++	SET_RUNTIME_PM_OPS(rk_crypto_pm_suspend, rk_crypto_pm_resume, NULL)
++};
++
++static int rk_crypto_pm_init(struct rk_crypto_info *rkdev)
++{
++	int err;
++
++	pm_runtime_use_autosuspend(rkdev->dev);
++	pm_runtime_set_autosuspend_delay(rkdev->dev, 2000);
++
++	err = pm_runtime_set_suspended(rkdev->dev);
++	if (err)
++		return err;
++	pm_runtime_enable(rkdev->dev);
++	return err;
++}
++
++static void rk_crypto_pm_exit(struct rk_crypto_info *rkdev)
++{
++	pm_runtime_disable(rkdev->dev);
++}
++
+ static irqreturn_t rk_crypto_irq_handle(int irq, void *dev_id)
+ {
+ 	struct rk_crypto_info *dev  = platform_get_drvdata(dev_id);
+@@ -273,7 +315,9 @@ static int rk_crypto_probe(struct platfo
+ 	crypto_engine_start(crypto_info->engine);
+ 	init_completion(&crypto_info->complete);
+ 
+-	rk_crypto_enable_clk(crypto_info);
++	err = rk_crypto_pm_init(crypto_info);
++	if (err)
++		goto err_pm;
+ 
+ 	err = rk_crypto_register(crypto_info);
+ 	if (err) {
+@@ -294,6 +338,8 @@ static int rk_crypto_probe(struct platfo
+ 	return 0;
+ 
+ err_register_alg:
++	rk_crypto_pm_exit(crypto_info);
++err_pm:
+ 	crypto_engine_exit(crypto_info->engine);
+ err_crypto:
+ 	dev_err(dev, "Crypto Accelerator not successfully registered\n");
+@@ -308,7 +354,7 @@ static int rk_crypto_remove(struct platf
+ 	debugfs_remove_recursive(crypto_tmp->dbgfs_dir);
+ #endif
+ 	rk_crypto_unregister();
+-	rk_crypto_disable_clk(crypto_tmp);
++	rk_crypto_pm_exit(crypto_tmp);
+ 	crypto_engine_exit(crypto_tmp->engine);
+ 	return 0;
+ }
+@@ -318,6 +364,7 @@ static struct platform_driver crypto_dri
+ 	.remove		= rk_crypto_remove,
+ 	.driver		= {
+ 		.name	= "rk3288-crypto",
++		.pm		= &rk_crypto_pm_ops,
+ 		.of_match_table	= crypto_of_id_table,
+ 	},
+ };
+--- a/drivers/crypto/rockchip/rk3288_crypto.h
++++ b/drivers/crypto/rockchip/rk3288_crypto.h
+@@ -9,6 +9,7 @@
+ #include <linux/interrupt.h>
+ #include <linux/debugfs.h>
+ #include <linux/delay.h>
++#include <linux/pm_runtime.h>
+ #include <linux/scatterlist.h>
+ #include <crypto/engine.h>
+ #include <crypto/internal/hash.h>
+--- a/drivers/crypto/rockchip/rk3288_crypto_ahash.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_ahash.c
+@@ -328,6 +328,7 @@ static int rk_cra_hash_init(struct crypt
+ 	struct ahash_alg *alg = __crypto_ahash_alg(tfm->__crt_alg);
+ 
+ 	const char *alg_name = crypto_tfm_alg_name(tfm);
++	int err;
+ 
+ 	algt = container_of(alg, struct rk_crypto_tmp, alg.hash);
+ 
+@@ -349,7 +350,15 @@ static int rk_cra_hash_init(struct crypt
+ 	tctx->enginectx.op.prepare_request = rk_hash_prepare;
+ 	tctx->enginectx.op.unprepare_request = rk_hash_unprepare;
+ 
++	err = pm_runtime_resume_and_get(tctx->dev->dev);
++	if (err < 0)
++		goto error_pm;
++
+ 	return 0;
++error_pm:
++	crypto_free_ahash(tctx->fallback_tfm);
++
++	return err;
+ }
+ 
+ static void rk_cra_hash_exit(struct crypto_tfm *tfm)
+@@ -357,6 +366,7 @@ static void rk_cra_hash_exit(struct cryp
+ 	struct rk_ahash_ctx *tctx = crypto_tfm_ctx(tfm);
+ 
+ 	crypto_free_ahash(tctx->fallback_tfm);
++	pm_runtime_put_autosuspend(tctx->dev->dev);
+ }
+ 
+ struct rk_crypto_tmp rk_ahash_sha1 = {
+--- a/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
+@@ -454,6 +454,7 @@ static int rk_ablk_init_tfm(struct crypt
+ 	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
+ 	const char *name = crypto_tfm_alg_name(&tfm->base);
+ 	struct rk_crypto_tmp *algt;
++	int err;
+ 
+ 	algt = container_of(alg, struct rk_crypto_tmp, alg.skcipher);
+ 
+@@ -471,7 +472,14 @@ static int rk_ablk_init_tfm(struct crypt
+ 
+ 	ctx->enginectx.op.do_one_request = rk_cipher_run;
+ 
++	err = pm_runtime_resume_and_get(ctx->dev->dev);
++	if (err < 0)
++		goto error_pm;
++
+ 	return 0;
++error_pm:
++	crypto_free_skcipher(ctx->fallback_tfm);
++	return err;
+ }
+ 
+ static void rk_ablk_exit_tfm(struct crypto_skcipher *tfm)
+@@ -480,6 +488,7 @@ static void rk_ablk_exit_tfm(struct cryp
+ 
+ 	memzero_explicit(ctx->key, ctx->keylen);
+ 	crypto_free_skcipher(ctx->fallback_tfm);
++	pm_runtime_put_autosuspend(ctx->dev->dev);
+ }
+ 
+ struct rk_crypto_tmp rk_ecb_aes_alg = {
diff --git a/target/linux/rockchip/patches-6.1/303-crypto-rockchip-handle-reset-also-in-PM.patch b/target/linux/rockchip/patches-6.1/303-crypto-rockchip-handle-reset-also-in-PM.patch
new file mode 100644
index 0000000000..ade056ee2d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/303-crypto-rockchip-handle-reset-also-in-PM.patch
@@ -0,0 +1,67 @@
+From 4f92fd4d67460f440bbace248c00edd5dc0fd580 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:52 +0000
+Subject: [PATCH 303/383] crypto: rockchip: handle reset also in PM
+
+reset could be handled by PM functions.
+We keep the initial reset pulse to be sure the hw is a know device state
+after probe.
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.c | 22 ++++++++++------------
+ 1 file changed, 10 insertions(+), 12 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -74,14 +74,23 @@ static int rk_crypto_pm_suspend(struct d
+ 	struct rk_crypto_info *rkdev = dev_get_drvdata(dev);
+ 
+ 	rk_crypto_disable_clk(rkdev);
++	reset_control_assert(rkdev->rst);
++
+ 	return 0;
+ }
+ 
+ static int rk_crypto_pm_resume(struct device *dev)
+ {
+ 	struct rk_crypto_info *rkdev = dev_get_drvdata(dev);
++	int ret;
++
++	ret = rk_crypto_enable_clk(rkdev);
++	if (ret)
++		return ret;
++
++	reset_control_deassert(rkdev->rst);
++	return 0;
+ 
+-	return rk_crypto_enable_clk(rkdev);
+ }
+ 
+ static const struct dev_pm_ops rk_crypto_pm_ops = {
+@@ -222,13 +231,6 @@ static void rk_crypto_unregister(void)
+ 	}
+ }
+ 
+-static void rk_crypto_action(void *data)
+-{
+-	struct rk_crypto_info *crypto_info = data;
+-
+-	reset_control_assert(crypto_info->rst);
+-}
+-
+ static const struct of_device_id crypto_of_id_table[] = {
+ 	{ .compatible = "rockchip,rk3288-crypto" },
+ 	{}
+@@ -258,10 +260,6 @@ static int rk_crypto_probe(struct platfo
+ 	usleep_range(10, 20);
+ 	reset_control_deassert(crypto_info->rst);
+ 
+-	err = devm_add_action_or_reset(dev, rk_crypto_action, crypto_info);
+-	if (err)
+-		goto err_crypto;
+-
+ 	crypto_info->reg = devm_platform_ioremap_resource(pdev, 0);
+ 	if (IS_ERR(crypto_info->reg)) {
+ 		err = PTR_ERR(crypto_info->reg);
diff --git a/target/linux/rockchip/patches-6.1/304-crypto-rockchip-use-clk_bulk-to-simplify-clock-manag.patch b/target/linux/rockchip/patches-6.1/304-crypto-rockchip-use-clk_bulk-to-simplify-clock-manag.patch
new file mode 100644
index 0000000000..c5b193b573
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/304-crypto-rockchip-use-clk_bulk-to-simplify-clock-manag.patch
@@ -0,0 +1,119 @@
+From 0a685107d61d6e4e2d5251f43a0a430bb75b00c3 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:53 +0000
+Subject: [PATCH 304/383] crypto: rockchip: use clk_bulk to simplify clock
+ management
+
+rk3328 does not have the same clock names than rk3288, instead of using a complex
+clock management, let's use clk_bulk to simplify their handling.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.c | 66 ++++---------------------
+ drivers/crypto/rockchip/rk3288_crypto.h |  6 +--
+ 2 files changed, 11 insertions(+), 61 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -22,47 +22,16 @@ static int rk_crypto_enable_clk(struct r
+ {
+ 	int err;
+ 
+-	err = clk_prepare_enable(dev->sclk);
+-	if (err) {
+-		dev_err(dev->dev, "[%s:%d], Couldn't enable clock sclk\n",
+-			__func__, __LINE__);
+-		goto err_return;
+-	}
+-	err = clk_prepare_enable(dev->aclk);
+-	if (err) {
+-		dev_err(dev->dev, "[%s:%d], Couldn't enable clock aclk\n",
+-			__func__, __LINE__);
+-		goto err_aclk;
+-	}
+-	err = clk_prepare_enable(dev->hclk);
+-	if (err) {
+-		dev_err(dev->dev, "[%s:%d], Couldn't enable clock hclk\n",
+-			__func__, __LINE__);
+-		goto err_hclk;
+-	}
+-	err = clk_prepare_enable(dev->dmaclk);
+-	if (err) {
+-		dev_err(dev->dev, "[%s:%d], Couldn't enable clock dmaclk\n",
+-			__func__, __LINE__);
+-		goto err_dmaclk;
+-	}
+-	return err;
+-err_dmaclk:
+-	clk_disable_unprepare(dev->hclk);
+-err_hclk:
+-	clk_disable_unprepare(dev->aclk);
+-err_aclk:
+-	clk_disable_unprepare(dev->sclk);
+-err_return:
++	err = clk_bulk_prepare_enable(dev->num_clks, dev->clks);
++	if (err)
++		dev_err(dev->dev, "Could not enable clock clks\n");
++
+ 	return err;
+ }
+ 
+ static void rk_crypto_disable_clk(struct rk_crypto_info *dev)
+ {
+-	clk_disable_unprepare(dev->dmaclk);
+-	clk_disable_unprepare(dev->hclk);
+-	clk_disable_unprepare(dev->aclk);
+-	clk_disable_unprepare(dev->sclk);
++	clk_bulk_disable_unprepare(dev->num_clks, dev->clks);
+ }
+ 
+ /*
+@@ -266,27 +235,10 @@ static int rk_crypto_probe(struct platfo
+ 		goto err_crypto;
+ 	}
+ 
+-	crypto_info->aclk = devm_clk_get(&pdev->dev, "aclk");
+-	if (IS_ERR(crypto_info->aclk)) {
+-		err = PTR_ERR(crypto_info->aclk);
+-		goto err_crypto;
+-	}
+-
+-	crypto_info->hclk = devm_clk_get(&pdev->dev, "hclk");
+-	if (IS_ERR(crypto_info->hclk)) {
+-		err = PTR_ERR(crypto_info->hclk);
+-		goto err_crypto;
+-	}
+-
+-	crypto_info->sclk = devm_clk_get(&pdev->dev, "sclk");
+-	if (IS_ERR(crypto_info->sclk)) {
+-		err = PTR_ERR(crypto_info->sclk);
+-		goto err_crypto;
+-	}
+-
+-	crypto_info->dmaclk = devm_clk_get(&pdev->dev, "apb_pclk");
+-	if (IS_ERR(crypto_info->dmaclk)) {
+-		err = PTR_ERR(crypto_info->dmaclk);
++	crypto_info->num_clks = devm_clk_bulk_get_all(&pdev->dev,
++						      &crypto_info->clks);
++	if (crypto_info->num_clks < 3) {
++		err = -EINVAL;
+ 		goto err_crypto;
+ 	}
+ 
+--- a/drivers/crypto/rockchip/rk3288_crypto.h
++++ b/drivers/crypto/rockchip/rk3288_crypto.h
+@@ -190,10 +190,8 @@
+ 
+ struct rk_crypto_info {
+ 	struct device			*dev;
+-	struct clk			*aclk;
+-	struct clk			*hclk;
+-	struct clk			*sclk;
+-	struct clk			*dmaclk;
++	struct clk_bulk_data		*clks;
++	int num_clks;
+ 	struct reset_control		*rst;
+ 	void __iomem			*reg;
+ 	int				irq;
diff --git a/target/linux/rockchip/patches-6.1/305-crypto-rockchip-add-myself-as-maintainer.patch b/target/linux/rockchip/patches-6.1/305-crypto-rockchip-add-myself-as-maintainer.patch
new file mode 100644
index 0000000000..e7eaf3529b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/305-crypto-rockchip-add-myself-as-maintainer.patch
@@ -0,0 +1,31 @@
+From 6d5b834b49c996c71bed2d005fefc48813931e75 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:54 +0000
+Subject: [PATCH 305/383] crypto: rockchip: add myself as maintainer
+
+Nobody is set as maintainer of rockchip crypto, I propose to do it as I
+have already reworked lot of this code.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ MAINTAINERS | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+--- a/MAINTAINERS
++++ b/MAINTAINERS
+@@ -17797,6 +17797,13 @@ F:	Documentation/ABI/*/sysfs-driver-hid-
+ F:	drivers/hid/hid-roccat*
+ F:	include/linux/hid-roccat*
+ 
++ROCKCHIP CRYPTO DRIVERS
++M:	Corentin Labbe <clabbe@baylibre.com>
++L:	linux-crypto@vger.kernel.org
++S:	Maintained
++F:	Documentation/devicetree/bindings/crypto/rockchip,rk3288-crypto.yaml
++F:	drivers/crypto/rockchip/
++
+ ROCKCHIP I2S TDM DRIVER
+ M:	Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+ L:	linux-rockchip@lists.infradead.org
diff --git a/target/linux/rockchip/patches-6.1/306-crypto-rockchip-use-read_poll_timeout.patch b/target/linux/rockchip/patches-6.1/306-crypto-rockchip-use-read_poll_timeout.patch
new file mode 100644
index 0000000000..42d8027b64
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/306-crypto-rockchip-use-read_poll_timeout.patch
@@ -0,0 +1,55 @@
+From 2ca8e662ea1e7dabc54fd143846024e095671f9e Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:55 +0000
+Subject: [PATCH 306/383] crypto: rockchip: use read_poll_timeout
+
+Use read_poll_timeout instead of open coding it.
+In the same time, fix indentation of related comment.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto_ahash.c | 24 +++++++++----------
+ 1 file changed, 12 insertions(+), 12 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto_ahash.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_ahash.c
+@@ -10,6 +10,7 @@
+  */
+ #include <linux/device.h>
+ #include <asm/unaligned.h>
++#include <linux/iopoll.h>
+ #include "rk3288_crypto.h"
+ 
+ /*
+@@ -295,18 +296,17 @@ static int rk_hash_run(struct crypto_eng
+ 		sg = sg_next(sg);
+ 	}
+ 
+-		/*
+-		 * it will take some time to process date after last dma
+-		 * transmission.
+-		 *
+-		 * waiting time is relative with the last date len,
+-		 * so cannot set a fixed time here.
+-		 * 10us makes system not call here frequently wasting
+-		 * efficiency, and make it response quickly when dma
+-		 * complete.
+-		 */
+-	while (!CRYPTO_READ(tctx->dev, RK_CRYPTO_HASH_STS))
+-		udelay(10);
++	/*
++	 * it will take some time to process date after last dma
++	 * transmission.
++	 *
++	 * waiting time is relative with the last date len,
++	 * so cannot set a fixed time here.
++	 * 10us makes system not call here frequently wasting
++	 * efficiency, and make it response quickly when dma
++	 * complete.
++	 */
++	readl_poll_timeout(tctx->dev->reg + RK_CRYPTO_HASH_STS, v, v == 0, 10, 1000);
+ 
+ 	for (i = 0; i < crypto_ahash_digestsize(tfm) / 4; i++) {
+ 		v = readl(tctx->dev->reg + RK_CRYPTO_HASH_DOUT_0 + i * 4);
diff --git a/target/linux/rockchip/patches-6.1/307-crypto-rockchip-fix-style-issue.patch b/target/linux/rockchip/patches-6.1/307-crypto-rockchip-fix-style-issue.patch
new file mode 100644
index 0000000000..edd7de69f0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/307-crypto-rockchip-fix-style-issue.patch
@@ -0,0 +1,56 @@
+From 73aba3ceda56054ee3570c4ad60ddf20c43392e2 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:56 +0000
+Subject: [PATCH 307/383] crypto: rockchip: fix style issue
+
+This patch fixes some warning reported by checkpatch
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto_ahash.c | 12 ++++++------
+ 1 file changed, 6 insertions(+), 6 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto_ahash.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_ahash.c
+@@ -336,7 +336,7 @@ static int rk_cra_hash_init(struct crypt
+ 
+ 	/* for fallback */
+ 	tctx->fallback_tfm = crypto_alloc_ahash(alg_name, 0,
+-					       CRYPTO_ALG_NEED_FALLBACK);
++						CRYPTO_ALG_NEED_FALLBACK);
+ 	if (IS_ERR(tctx->fallback_tfm)) {
+ 		dev_err(tctx->dev->dev, "Could not load fallback driver.\n");
+ 		return PTR_ERR(tctx->fallback_tfm);
+@@ -394,8 +394,8 @@ struct rk_crypto_tmp rk_ahash_sha1 = {
+ 				  .cra_init = rk_cra_hash_init,
+ 				  .cra_exit = rk_cra_hash_exit,
+ 				  .cra_module = THIS_MODULE,
+-				  }
+-			 }
++			}
++		}
+ 	}
+ };
+ 
+@@ -424,8 +424,8 @@ struct rk_crypto_tmp rk_ahash_sha256 = {
+ 				  .cra_init = rk_cra_hash_init,
+ 				  .cra_exit = rk_cra_hash_exit,
+ 				  .cra_module = THIS_MODULE,
+-				  }
+-			 }
++			}
++		}
+ 	}
+ };
+ 
+@@ -454,7 +454,7 @@ struct rk_crypto_tmp rk_ahash_md5 = {
+ 				  .cra_init = rk_cra_hash_init,
+ 				  .cra_exit = rk_cra_hash_exit,
+ 				  .cra_module = THIS_MODULE,
+-				  }
+ 			}
++		}
+ 	}
+ };
diff --git a/target/linux/rockchip/patches-6.1/308-crypto-rockchip-add-support-for-rk3328.patch b/target/linux/rockchip/patches-6.1/308-crypto-rockchip-add-support-for-rk3328.patch
new file mode 100644
index 0000000000..4f226720f6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/308-crypto-rockchip-add-support-for-rk3328.patch
@@ -0,0 +1,24 @@
+From 08598edd4feb6ae049077dc10d2e26cf570ce9f3 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:57 +0000
+Subject: [PATCH 308/383] crypto: rockchip: add support for rk3328
+
+The rk3328 could be used as-is by the rockchip driver.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -202,6 +202,7 @@ static void rk_crypto_unregister(void)
+ 
+ static const struct of_device_id crypto_of_id_table[] = {
+ 	{ .compatible = "rockchip,rk3288-crypto" },
++	{ .compatible = "rockchip,rk3328-crypto" },
+ 	{}
+ };
+ MODULE_DEVICE_TABLE(of, crypto_of_id_table);
diff --git a/target/linux/rockchip/patches-6.1/309-crypto-rockchip-rename-ablk-functions-to-cipher.patch b/target/linux/rockchip/patches-6.1/309-crypto-rockchip-rename-ablk-functions-to-cipher.patch
new file mode 100644
index 0000000000..30de2b61fc
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/309-crypto-rockchip-rename-ablk-functions-to-cipher.patch
@@ -0,0 +1,120 @@
+From 1db8d3dda917510fdda9c63b5c11a782994994b3 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:58 +0000
+Subject: [PATCH 309/383] crypto: rockchip: rename ablk functions to cipher
+
+Some functions have still ablk in their name even if there are
+not handling ablk_cipher anymore.
+So let's rename them.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../crypto/rockchip/rk3288_crypto_skcipher.c  | 32 +++++++++----------
+ 1 file changed, 16 insertions(+), 16 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
+@@ -273,7 +273,7 @@ static int rk_des3_ede_cbc_decrypt(struc
+ 	return rk_handle_req(dev, req);
+ }
+ 
+-static void rk_ablk_hw_init(struct rk_crypto_info *dev, struct skcipher_request *req)
++static void rk_cipher_hw_init(struct rk_crypto_info *dev, struct skcipher_request *req)
+ {
+ 	struct crypto_skcipher *cipher = crypto_skcipher_reqtfm(req);
+ 	struct crypto_tfm *tfm = crypto_skcipher_tfm(cipher);
+@@ -382,7 +382,7 @@ static int rk_cipher_run(struct crypto_e
+ 			}
+ 		}
+ 		err = 0;
+-		rk_ablk_hw_init(ctx->dev, areq);
++		rk_cipher_hw_init(ctx->dev, areq);
+ 		if (ivsize) {
+ 			if (ivsize == DES_BLOCK_SIZE)
+ 				memcpy_toio(ctx->dev->reg + RK_CRYPTO_TDES_IV_0, ivtouse, ivsize);
+@@ -448,7 +448,7 @@ theend_iv:
+ 	return err;
+ }
+ 
+-static int rk_ablk_init_tfm(struct crypto_skcipher *tfm)
++static int rk_cipher_tfm_init(struct crypto_skcipher *tfm)
+ {
+ 	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
+@@ -482,7 +482,7 @@ error_pm:
+ 	return err;
+ }
+ 
+-static void rk_ablk_exit_tfm(struct crypto_skcipher *tfm)
++static void rk_cipher_tfm_exit(struct crypto_skcipher *tfm)
+ {
+ 	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 
+@@ -503,8 +503,8 @@ struct rk_crypto_tmp rk_ecb_aes_alg = {
+ 		.base.cra_alignmask	= 0x0f,
+ 		.base.cra_module	= THIS_MODULE,
+ 
+-		.init			= rk_ablk_init_tfm,
+-		.exit			= rk_ablk_exit_tfm,
++		.init			= rk_cipher_tfm_init,
++		.exit			= rk_cipher_tfm_exit,
+ 		.min_keysize		= AES_MIN_KEY_SIZE,
+ 		.max_keysize		= AES_MAX_KEY_SIZE,
+ 		.setkey			= rk_aes_setkey,
+@@ -525,8 +525,8 @@ struct rk_crypto_tmp rk_cbc_aes_alg = {
+ 		.base.cra_alignmask	= 0x0f,
+ 		.base.cra_module	= THIS_MODULE,
+ 
+-		.init			= rk_ablk_init_tfm,
+-		.exit			= rk_ablk_exit_tfm,
++		.init			= rk_cipher_tfm_init,
++		.exit			= rk_cipher_tfm_exit,
+ 		.min_keysize		= AES_MIN_KEY_SIZE,
+ 		.max_keysize		= AES_MAX_KEY_SIZE,
+ 		.ivsize			= AES_BLOCK_SIZE,
+@@ -548,8 +548,8 @@ struct rk_crypto_tmp rk_ecb_des_alg = {
+ 		.base.cra_alignmask	= 0x07,
+ 		.base.cra_module	= THIS_MODULE,
+ 
+-		.init			= rk_ablk_init_tfm,
+-		.exit			= rk_ablk_exit_tfm,
++		.init			= rk_cipher_tfm_init,
++		.exit			= rk_cipher_tfm_exit,
+ 		.min_keysize		= DES_KEY_SIZE,
+ 		.max_keysize		= DES_KEY_SIZE,
+ 		.setkey			= rk_des_setkey,
+@@ -570,8 +570,8 @@ struct rk_crypto_tmp rk_cbc_des_alg = {
+ 		.base.cra_alignmask	= 0x07,
+ 		.base.cra_module	= THIS_MODULE,
+ 
+-		.init			= rk_ablk_init_tfm,
+-		.exit			= rk_ablk_exit_tfm,
++		.init			= rk_cipher_tfm_init,
++		.exit			= rk_cipher_tfm_exit,
+ 		.min_keysize		= DES_KEY_SIZE,
+ 		.max_keysize		= DES_KEY_SIZE,
+ 		.ivsize			= DES_BLOCK_SIZE,
+@@ -593,8 +593,8 @@ struct rk_crypto_tmp rk_ecb_des3_ede_alg
+ 		.base.cra_alignmask	= 0x07,
+ 		.base.cra_module	= THIS_MODULE,
+ 
+-		.init			= rk_ablk_init_tfm,
+-		.exit			= rk_ablk_exit_tfm,
++		.init			= rk_cipher_tfm_init,
++		.exit			= rk_cipher_tfm_exit,
+ 		.min_keysize		= DES3_EDE_KEY_SIZE,
+ 		.max_keysize		= DES3_EDE_KEY_SIZE,
+ 		.setkey			= rk_tdes_setkey,
+@@ -615,8 +615,8 @@ struct rk_crypto_tmp rk_cbc_des3_ede_alg
+ 		.base.cra_alignmask	= 0x07,
+ 		.base.cra_module	= THIS_MODULE,
+ 
+-		.init			= rk_ablk_init_tfm,
+-		.exit			= rk_ablk_exit_tfm,
++		.init			= rk_cipher_tfm_init,
++		.exit			= rk_cipher_tfm_exit,
+ 		.min_keysize		= DES3_EDE_KEY_SIZE,
+ 		.max_keysize		= DES3_EDE_KEY_SIZE,
+ 		.ivsize			= DES_BLOCK_SIZE,
diff --git a/target/linux/rockchip/patches-6.1/310-crypto-rockchip-rework-rk_handle_req-function.patch b/target/linux/rockchip/patches-6.1/310-crypto-rockchip-rework-rk_handle_req-function.patch
new file mode 100644
index 0000000000..2bd171d8e0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/310-crypto-rockchip-rework-rk_handle_req-function.patch
@@ -0,0 +1,181 @@
+From 92ec7b16d9ab4b37af4cccabb5278b7d307a20ad Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:54:59 +0000
+Subject: [PATCH 310/383] crypto: rockchip: rework rk_handle_req function
+
+This patch rework the rk_handle_req(), simply removing the
+rk_crypto_info parameter.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../crypto/rockchip/rk3288_crypto_skcipher.c  | 68 +++++--------------
+ 1 file changed, 17 insertions(+), 51 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
+@@ -82,10 +82,12 @@ static int rk_cipher_fallback(struct skc
+ 	return err;
+ }
+ 
+-static int rk_handle_req(struct rk_crypto_info *dev,
+-			 struct skcipher_request *req)
++static int rk_cipher_handle_req(struct skcipher_request *req)
+ {
+-	struct crypto_engine *engine = dev->engine;
++	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
++	struct rk_cipher_ctx *tctx = crypto_skcipher_ctx(tfm);
++	struct rk_crypto_info *rkc = tctx->dev;
++	struct crypto_engine *engine = rkc->engine;
+ 
+ 	if (rk_cipher_need_fallback(req))
+ 		return rk_cipher_fallback(req);
+@@ -142,135 +144,99 @@ static int rk_tdes_setkey(struct crypto_
+ 
+ static int rk_aes_ecb_encrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = RK_CRYPTO_AES_ECB_MODE;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static int rk_aes_ecb_decrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = RK_CRYPTO_AES_ECB_MODE | RK_CRYPTO_DEC;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static int rk_aes_cbc_encrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = RK_CRYPTO_AES_CBC_MODE;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static int rk_aes_cbc_decrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = RK_CRYPTO_AES_CBC_MODE | RK_CRYPTO_DEC;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static int rk_des_ecb_encrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = 0;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static int rk_des_ecb_decrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = RK_CRYPTO_DEC;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static int rk_des_cbc_encrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = RK_CRYPTO_TDES_CHAINMODE_CBC;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static int rk_des_cbc_decrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = RK_CRYPTO_TDES_CHAINMODE_CBC | RK_CRYPTO_DEC;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static int rk_des3_ede_ecb_encrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = RK_CRYPTO_TDES_SELECT;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static int rk_des3_ede_ecb_decrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = RK_CRYPTO_TDES_SELECT | RK_CRYPTO_DEC;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static int rk_des3_ede_cbc_encrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = RK_CRYPTO_TDES_SELECT | RK_CRYPTO_TDES_CHAINMODE_CBC;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static int rk_des3_ede_cbc_decrypt(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *dev = ctx->dev;
+ 
+ 	rctx->mode = RK_CRYPTO_TDES_SELECT | RK_CRYPTO_TDES_CHAINMODE_CBC |
+ 		    RK_CRYPTO_DEC;
+-	return rk_handle_req(dev, req);
++	return rk_cipher_handle_req(req);
+ }
+ 
+ static void rk_cipher_hw_init(struct rk_crypto_info *dev, struct skcipher_request *req)
diff --git a/target/linux/rockchip/patches-6.1/311-crypto-rockchip-use-a-rk_crypto_info-variable-instea.patch b/target/linux/rockchip/patches-6.1/311-crypto-rockchip-use-a-rk_crypto_info-variable-instea.patch
new file mode 100644
index 0000000000..c0b49c14f0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/311-crypto-rockchip-use-a-rk_crypto_info-variable-instea.patch
@@ -0,0 +1,173 @@
+From 251ef5a41fa0ff4d061ee7f1928a4c639a925e45 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:00 +0000
+Subject: [PATCH 311/383] crypto: rockchip: use a rk_crypto_info variable
+ instead of lot of indirection
+
+Instead of using lot of ctx->dev->xx indirections, use an intermediate
+variable for rk_crypto_info.
+This will help later, when 2 different rk_crypto_info would be used.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto_ahash.c | 23 +++++++-----
+ .../crypto/rockchip/rk3288_crypto_skcipher.c  | 37 ++++++++++---------
+ 2 files changed, 32 insertions(+), 28 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto_ahash.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_ahash.c
+@@ -226,9 +226,10 @@ static int rk_hash_prepare(struct crypto
+ 	struct crypto_ahash *tfm = crypto_ahash_reqtfm(areq);
+ 	struct rk_ahash_rctx *rctx = ahash_request_ctx(areq);
+ 	struct rk_ahash_ctx *tctx = crypto_ahash_ctx(tfm);
++	struct rk_crypto_info *rkc = tctx->dev;
+ 	int ret;
+ 
+-	ret = dma_map_sg(tctx->dev->dev, areq->src, sg_nents(areq->src), DMA_TO_DEVICE);
++	ret = dma_map_sg(rkc->dev, areq->src, sg_nents(areq->src), DMA_TO_DEVICE);
+ 	if (ret <= 0)
+ 		return -EINVAL;
+ 
+@@ -243,8 +244,9 @@ static int rk_hash_unprepare(struct cryp
+ 	struct crypto_ahash *tfm = crypto_ahash_reqtfm(areq);
+ 	struct rk_ahash_rctx *rctx = ahash_request_ctx(areq);
+ 	struct rk_ahash_ctx *tctx = crypto_ahash_ctx(tfm);
++	struct rk_crypto_info *rkc = tctx->dev;
+ 
+-	dma_unmap_sg(tctx->dev->dev, areq->src, rctx->nrsg, DMA_TO_DEVICE);
++	dma_unmap_sg(rkc->dev, areq->src, rctx->nrsg, DMA_TO_DEVICE);
+ 	return 0;
+ }
+ 
+@@ -257,6 +259,7 @@ static int rk_hash_run(struct crypto_eng
+ 	struct ahash_alg *alg = __crypto_ahash_alg(tfm->base.__crt_alg);
+ 	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.hash);
+ 	struct scatterlist *sg = areq->src;
++	struct rk_crypto_info *rkc = tctx->dev;
+ 	int err = 0;
+ 	int i;
+ 	u32 v;
+@@ -283,13 +286,13 @@ static int rk_hash_run(struct crypto_eng
+ 	rk_ahash_reg_init(areq);
+ 
+ 	while (sg) {
+-		reinit_completion(&tctx->dev->complete);
+-		tctx->dev->status = 0;
+-		crypto_ahash_dma_start(tctx->dev, sg);
+-		wait_for_completion_interruptible_timeout(&tctx->dev->complete,
++		reinit_completion(&rkc->complete);
++		rkc->status = 0;
++		crypto_ahash_dma_start(rkc, sg);
++		wait_for_completion_interruptible_timeout(&rkc->complete,
+ 							  msecs_to_jiffies(2000));
+-		if (!tctx->dev->status) {
+-			dev_err(tctx->dev->dev, "DMA timeout\n");
++		if (!rkc->status) {
++			dev_err(rkc->dev, "DMA timeout\n");
+ 			err = -EFAULT;
+ 			goto theend;
+ 		}
+@@ -306,10 +309,10 @@ static int rk_hash_run(struct crypto_eng
+ 	 * efficiency, and make it response quickly when dma
+ 	 * complete.
+ 	 */
+-	readl_poll_timeout(tctx->dev->reg + RK_CRYPTO_HASH_STS, v, v == 0, 10, 1000);
++	readl_poll_timeout(rkc->reg + RK_CRYPTO_HASH_STS, v, v == 0, 10, 1000);
+ 
+ 	for (i = 0; i < crypto_ahash_digestsize(tfm) / 4; i++) {
+-		v = readl(tctx->dev->reg + RK_CRYPTO_HASH_DOUT_0 + i * 4);
++		v = readl(rkc->reg + RK_CRYPTO_HASH_DOUT_0 + i * 4);
+ 		put_unaligned_le32(v, areq->result + i * 4);
+ 	}
+ 
+--- a/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
+@@ -303,6 +303,7 @@ static int rk_cipher_run(struct crypto_e
+ 	unsigned int todo;
+ 	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
+ 	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.skcipher);
++	struct rk_crypto_info *rkc = ctx->dev;
+ 
+ 	algt->stat_req++;
+ 
+@@ -330,49 +331,49 @@ static int rk_cipher_run(struct crypto_e
+ 			scatterwalk_map_and_copy(biv, sgs, offset, ivsize, 0);
+ 		}
+ 		if (sgs == sgd) {
+-			err = dma_map_sg(ctx->dev->dev, sgs, 1, DMA_BIDIRECTIONAL);
++			err = dma_map_sg(rkc->dev, sgs, 1, DMA_BIDIRECTIONAL);
+ 			if (err <= 0) {
+ 				err = -EINVAL;
+ 				goto theend_iv;
+ 			}
+ 		} else {
+-			err = dma_map_sg(ctx->dev->dev, sgs, 1, DMA_TO_DEVICE);
++			err = dma_map_sg(rkc->dev, sgs, 1, DMA_TO_DEVICE);
+ 			if (err <= 0) {
+ 				err = -EINVAL;
+ 				goto theend_iv;
+ 			}
+-			err = dma_map_sg(ctx->dev->dev, sgd, 1, DMA_FROM_DEVICE);
++			err = dma_map_sg(rkc->dev, sgd, 1, DMA_FROM_DEVICE);
+ 			if (err <= 0) {
+ 				err = -EINVAL;
+ 				goto theend_sgs;
+ 			}
+ 		}
+ 		err = 0;
+-		rk_cipher_hw_init(ctx->dev, areq);
++		rk_cipher_hw_init(rkc, areq);
+ 		if (ivsize) {
+ 			if (ivsize == DES_BLOCK_SIZE)
+-				memcpy_toio(ctx->dev->reg + RK_CRYPTO_TDES_IV_0, ivtouse, ivsize);
++				memcpy_toio(rkc->reg + RK_CRYPTO_TDES_IV_0, ivtouse, ivsize);
+ 			else
+-				memcpy_toio(ctx->dev->reg + RK_CRYPTO_AES_IV_0, ivtouse, ivsize);
++				memcpy_toio(rkc->reg + RK_CRYPTO_AES_IV_0, ivtouse, ivsize);
+ 		}
+-		reinit_completion(&ctx->dev->complete);
+-		ctx->dev->status = 0;
++		reinit_completion(&rkc->complete);
++		rkc->status = 0;
+ 
+ 		todo = min(sg_dma_len(sgs), len);
+ 		len -= todo;
+-		crypto_dma_start(ctx->dev, sgs, sgd, todo / 4);
+-		wait_for_completion_interruptible_timeout(&ctx->dev->complete,
++		crypto_dma_start(rkc, sgs, sgd, todo / 4);
++		wait_for_completion_interruptible_timeout(&rkc->complete,
+ 							  msecs_to_jiffies(2000));
+-		if (!ctx->dev->status) {
+-			dev_err(ctx->dev->dev, "DMA timeout\n");
++		if (!rkc->status) {
++			dev_err(rkc->dev, "DMA timeout\n");
+ 			err = -EFAULT;
+ 			goto theend;
+ 		}
+ 		if (sgs == sgd) {
+-			dma_unmap_sg(ctx->dev->dev, sgs, 1, DMA_BIDIRECTIONAL);
++			dma_unmap_sg(rkc->dev, sgs, 1, DMA_BIDIRECTIONAL);
+ 		} else {
+-			dma_unmap_sg(ctx->dev->dev, sgs, 1, DMA_TO_DEVICE);
+-			dma_unmap_sg(ctx->dev->dev, sgd, 1, DMA_FROM_DEVICE);
++			dma_unmap_sg(rkc->dev, sgs, 1, DMA_TO_DEVICE);
++			dma_unmap_sg(rkc->dev, sgd, 1, DMA_FROM_DEVICE);
+ 		}
+ 		if (rctx->mode & RK_CRYPTO_DEC) {
+ 			memcpy(iv, biv, ivsize);
+@@ -405,10 +406,10 @@ theend:
+ 
+ theend_sgs:
+ 	if (sgs == sgd) {
+-		dma_unmap_sg(ctx->dev->dev, sgs, 1, DMA_BIDIRECTIONAL);
++		dma_unmap_sg(rkc->dev, sgs, 1, DMA_BIDIRECTIONAL);
+ 	} else {
+-		dma_unmap_sg(ctx->dev->dev, sgs, 1, DMA_TO_DEVICE);
+-		dma_unmap_sg(ctx->dev->dev, sgd, 1, DMA_FROM_DEVICE);
++		dma_unmap_sg(rkc->dev, sgs, 1, DMA_TO_DEVICE);
++		dma_unmap_sg(rkc->dev, sgd, 1, DMA_FROM_DEVICE);
+ 	}
+ theend_iv:
+ 	return err;
diff --git a/target/linux/rockchip/patches-6.1/312-crypto-rockchip-use-the-rk_crypto_info-given-as-para.patch b/target/linux/rockchip/patches-6.1/312-crypto-rockchip-use-the-rk_crypto_info-given-as-para.patch
new file mode 100644
index 0000000000..4fc86a084d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/312-crypto-rockchip-use-the-rk_crypto_info-given-as-para.patch
@@ -0,0 +1,35 @@
+From 70e0fa5dc17aac682ebbfe293d15506e3d24f444 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:01 +0000
+Subject: [PATCH 312/383] crypto: rockchip: use the rk_crypto_info given as
+ parameter
+
+Instead of using the crypto_info from TFM ctx, use the one given as parameter.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto_skcipher.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
+@@ -254,7 +254,7 @@ static void rk_cipher_hw_init(struct rk_
+ 			     RK_CRYPTO_TDES_BYTESWAP_KEY |
+ 			     RK_CRYPTO_TDES_BYTESWAP_IV;
+ 		CRYPTO_WRITE(dev, RK_CRYPTO_TDES_CTRL, rctx->mode);
+-		memcpy_toio(ctx->dev->reg + RK_CRYPTO_TDES_KEY1_0, ctx->key, ctx->keylen);
++		memcpy_toio(dev->reg + RK_CRYPTO_TDES_KEY1_0, ctx->key, ctx->keylen);
+ 		conf_reg = RK_CRYPTO_DESSEL;
+ 	} else {
+ 		rctx->mode |= RK_CRYPTO_AES_FIFO_MODE |
+@@ -266,7 +266,7 @@ static void rk_cipher_hw_init(struct rk_
+ 		else if (ctx->keylen == AES_KEYSIZE_256)
+ 			rctx->mode |= RK_CRYPTO_AES_256BIT_key;
+ 		CRYPTO_WRITE(dev, RK_CRYPTO_AES_CTRL, rctx->mode);
+-		memcpy_toio(ctx->dev->reg + RK_CRYPTO_AES_KEY_0, ctx->key, ctx->keylen);
++		memcpy_toio(dev->reg + RK_CRYPTO_AES_KEY_0, ctx->key, ctx->keylen);
+ 	}
+ 	conf_reg |= RK_CRYPTO_BYTESWAP_BTFIFO |
+ 		    RK_CRYPTO_BYTESWAP_BRFIFO;
diff --git a/target/linux/rockchip/patches-6.1/313-dt-bindings-crypto-convert-rockchip-crypto-to-YAML.patch b/target/linux/rockchip/patches-6.1/313-dt-bindings-crypto-convert-rockchip-crypto-to-YAML.patch
new file mode 100644
index 0000000000..134b4889a0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/313-dt-bindings-crypto-convert-rockchip-crypto-to-YAML.patch
@@ -0,0 +1,116 @@
+From 7e66f7d31afe27c521b84bb88509dd1966a85a56 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:02 +0000
+Subject: [PATCH 313/383] dt-bindings: crypto: convert rockchip-crypto to YAML
+
+Convert rockchip-crypto to YAML.
+
+Reviewed-by: John Keeping <john@metanate.com>
+Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../crypto/rockchip,rk3288-crypto.yaml        | 64 +++++++++++++++++++
+ .../bindings/crypto/rockchip-crypto.txt       | 28 --------
+ 2 files changed, 64 insertions(+), 28 deletions(-)
+ create mode 100644 Documentation/devicetree/bindings/crypto/rockchip,rk3288-crypto.yaml
+ delete mode 100644 Documentation/devicetree/bindings/crypto/rockchip-crypto.txt
+
+--- /dev/null
++++ b/Documentation/devicetree/bindings/crypto/rockchip,rk3288-crypto.yaml
+@@ -0,0 +1,64 @@
++# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/crypto/rockchip,rk3288-crypto.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip Electronics Security Accelerator
++
++maintainers:
++  - Heiko Stuebner <heiko@sntech.de>
++
++properties:
++  compatible:
++    enum:
++      - rockchip,rk3288-crypto
++
++  reg:
++    maxItems: 1
++
++  interrupts:
++    maxItems: 1
++
++  clocks:
++    maxItems: 4
++
++  clock-names:
++    items:
++      - const: aclk
++      - const: hclk
++      - const: sclk
++      - const: apb_pclk
++
++  resets:
++    maxItems: 1
++
++  reset-names:
++    items:
++      - const: crypto-rst
++
++required:
++  - compatible
++  - reg
++  - interrupts
++  - clocks
++  - clock-names
++  - resets
++  - reset-names
++
++additionalProperties: false
++
++examples:
++  - |
++    #include <dt-bindings/interrupt-controller/arm-gic.h>
++    #include <dt-bindings/clock/rk3288-cru.h>
++    crypto@ff8a0000 {
++      compatible = "rockchip,rk3288-crypto";
++      reg = <0xff8a0000 0x4000>;
++      interrupts = <GIC_SPI 48 IRQ_TYPE_LEVEL_HIGH>;
++      clocks = <&cru ACLK_CRYPTO>, <&cru HCLK_CRYPTO>,
++               <&cru SCLK_CRYPTO>, <&cru ACLK_DMAC1>;
++      clock-names = "aclk", "hclk", "sclk", "apb_pclk";
++      resets = <&cru SRST_CRYPTO>;
++      reset-names = "crypto-rst";
++    };
+--- a/Documentation/devicetree/bindings/crypto/rockchip-crypto.txt
++++ /dev/null
+@@ -1,28 +0,0 @@
+-Rockchip Electronics And Security Accelerator
+-
+-Required properties:
+-- compatible: Should be "rockchip,rk3288-crypto"
+-- reg: Base physical address of the engine and length of memory mapped
+-       region
+-- interrupts: Interrupt number
+-- clocks: Reference to the clocks about crypto
+-- clock-names: "aclk" used to clock data
+-	       "hclk" used to clock data
+-	       "sclk" used to clock crypto accelerator
+-	       "apb_pclk" used to clock dma
+-- resets: Must contain an entry for each entry in reset-names.
+-	  See ../reset/reset.txt for details.
+-- reset-names: Must include the name "crypto-rst".
+-
+-Examples:
+-
+-	crypto: cypto-controller@ff8a0000 {
+-		compatible = "rockchip,rk3288-crypto";
+-		reg = <0xff8a0000 0x4000>;
+-		interrupts = <GIC_SPI 48 IRQ_TYPE_LEVEL_HIGH>;
+-		clocks = <&cru ACLK_CRYPTO>, <&cru HCLK_CRYPTO>,
+-			 <&cru SCLK_CRYPTO>, <&cru ACLK_DMAC1>;
+-		clock-names = "aclk", "hclk", "sclk", "apb_pclk";
+-		resets = <&cru SRST_CRYPTO>;
+-		reset-names = "crypto-rst";
+-	};
diff --git a/target/linux/rockchip/patches-6.1/314-dt-bindings-crypto-rockchip-add-new-compatible.patch b/target/linux/rockchip/patches-6.1/314-dt-bindings-crypto-rockchip-add-new-compatible.patch
new file mode 100644
index 0000000000..fa0fdc1c9f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/314-dt-bindings-crypto-rockchip-add-new-compatible.patch
@@ -0,0 +1,115 @@
+From 8d344cf7eeaf9f2a9efdabd16b4932e8a6f11adc Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:03 +0000
+Subject: [PATCH 314/383] dt-bindings: crypto: rockchip: add new compatible
+
+Since driver support new compatible, we need to update the driver bindings.
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../crypto/rockchip,rk3288-crypto.yaml        | 79 +++++++++++++++++--
+ 1 file changed, 71 insertions(+), 8 deletions(-)
+
+--- a/Documentation/devicetree/bindings/crypto/rockchip,rk3288-crypto.yaml
++++ b/Documentation/devicetree/bindings/crypto/rockchip,rk3288-crypto.yaml
+@@ -13,6 +13,8 @@ properties:
+   compatible:
+     enum:
+       - rockchip,rk3288-crypto
++      - rockchip,rk3328-crypto
++      - rockchip,rk3399-crypto
+ 
+   reg:
+     maxItems: 1
+@@ -21,21 +23,82 @@ properties:
+     maxItems: 1
+ 
+   clocks:
++    minItems: 3
+     maxItems: 4
+ 
+   clock-names:
+-    items:
+-      - const: aclk
+-      - const: hclk
+-      - const: sclk
+-      - const: apb_pclk
++    minItems: 3
++    maxItems: 4
+ 
+   resets:
+-    maxItems: 1
++    minItems: 1
++    maxItems: 3
+ 
+   reset-names:
+-    items:
+-      - const: crypto-rst
++    minItems: 1
++    maxItems: 3
++
++allOf:
++  - if:
++      properties:
++        compatible:
++          contains:
++            const: rockchip,rk3288-crypto
++    then:
++      properties:
++        clocks:
++          minItems: 4
++        clock-names:
++          items:
++            - const: aclk
++            - const: hclk
++            - const: sclk
++            - const: apb_pclk
++        resets:
++          maxItems: 1
++        reset-names:
++          items:
++            - const: crypto-rst
++  - if:
++      properties:
++        compatible:
++          contains:
++            const: rockchip,rk3328-crypto
++    then:
++      properties:
++        clocks:
++          maxItems: 3
++        clock-names:
++          items:
++            - const: hclk_master
++            - const: hclk_slave
++            - const: sclk
++        resets:
++          maxItems: 1
++        reset-names:
++          items:
++            - const: crypto-rst
++  - if:
++      properties:
++        compatible:
++          contains:
++            const: rockchip,rk3399-crypto
++    then:
++      properties:
++        clocks:
++          maxItems: 3
++        clock-names:
++          items:
++            - const: hclk_master
++            - const: hclk_slave
++            - const: sclk
++        resets:
++          minItems: 3
++        reset-names:
++          items:
++            - const: master
++            - const: slave
++            - const: crypto-rst
+ 
+ required:
+   - compatible
diff --git a/target/linux/rockchip/patches-6.1/315-clk-rk3399-use-proper-crypto0-name.patch b/target/linux/rockchip/patches-6.1/315-clk-rk3399-use-proper-crypto0-name.patch
new file mode 100644
index 0000000000..608c2d098c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/315-clk-rk3399-use-proper-crypto0-name.patch
@@ -0,0 +1,38 @@
+From 9ab9fe74997223d977e008e2426e3ba585586dcf Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:04 +0000
+Subject: [PATCH 315/383] clk: rk3399: use proper crypto0 name
+
+RK3399 has 2 crypto instance, named crypto0 and crypto1 in the TRM.
+Only reset for crypto1 is correctly named, but crypto0 is not.
+Since nobody use them , add a 0 to be consistent with the TRM and crypto1 entries.
+
+Acked-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ include/dt-bindings/clock/rk3399-cru.h | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+--- a/include/dt-bindings/clock/rk3399-cru.h
++++ b/include/dt-bindings/clock/rk3399-cru.h
+@@ -547,8 +547,8 @@
+ #define SRST_H_PERILP0			171
+ #define SRST_H_PERILP0_NOC		172
+ #define SRST_ROM			173
+-#define SRST_CRYPTO_S			174
+-#define SRST_CRYPTO_M			175
++#define SRST_CRYPTO0_S			174
++#define SRST_CRYPTO0_M			175
+ 
+ /* cru_softrst_con11 */
+ #define SRST_P_DCF			176
+@@ -556,7 +556,7 @@
+ #define SRST_CM0S			178
+ #define SRST_CM0S_DBG			179
+ #define SRST_CM0S_PO			180
+-#define SRST_CRYPTO			181
++#define SRST_CRYPTO0			181
+ #define SRST_P_PERILP1_SGRF		182
+ #define SRST_P_PERILP1_GRF		183
+ #define SRST_CRYPTO1_S			184
diff --git a/target/linux/rockchip/patches-6.1/316-crypto-rockchip-store-crypto_info-in-request-context.patch b/target/linux/rockchip/patches-6.1/316-crypto-rockchip-store-crypto_info-in-request-context.patch
new file mode 100644
index 0000000000..6634944f3b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/316-crypto-rockchip-store-crypto_info-in-request-context.patch
@@ -0,0 +1,126 @@
+From 773b418cb58372831f1fe508fea1308bf1e8c67f Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:07 +0000
+Subject: [PATCH 316/383] crypto: rockchip: store crypto_info in request
+ context
+
+The crypto_info to use must be stored in the request context.
+This will help when 2 crypto_info will be available on rk3399.
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.h          |  2 ++
+ drivers/crypto/rockchip/rk3288_crypto_ahash.c    | 14 ++++++--------
+ drivers/crypto/rockchip/rk3288_crypto_skcipher.c |  6 ++++--
+ 3 files changed, 12 insertions(+), 10 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.h
++++ b/drivers/crypto/rockchip/rk3288_crypto.h
+@@ -215,6 +215,7 @@ struct rk_ahash_ctx {
+ 
+ /* the private variable of hash for fallback */
+ struct rk_ahash_rctx {
++	struct rk_crypto_info		*dev;
+ 	struct ahash_request		fallback_req;
+ 	u32				mode;
+ 	int nrsg;
+@@ -231,6 +232,7 @@ struct rk_cipher_ctx {
+ };
+ 
+ struct rk_cipher_rctx {
++	struct rk_crypto_info		*dev;
+ 	u8 backup_iv[AES_BLOCK_SIZE];
+ 	u32				mode;
+ 	struct skcipher_request fallback_req;   // keep at the end
+--- a/drivers/crypto/rockchip/rk3288_crypto_ahash.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_ahash.c
+@@ -200,6 +200,7 @@ static int rk_ahash_export(struct ahash_
+ 
+ static int rk_ahash_digest(struct ahash_request *req)
+ {
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(req);
+ 	struct rk_ahash_ctx *tctx = crypto_tfm_ctx(req->base.tfm);
+ 	struct rk_crypto_info *dev = tctx->dev;
+ 
+@@ -209,6 +210,8 @@ static int rk_ahash_digest(struct ahash_
+ 	if (!req->nbytes)
+ 		return zero_message_process(req);
+ 
++	rctx->dev = dev;
++
+ 	return crypto_transfer_hash_request_to_engine(dev->engine, req);
+ }
+ 
+@@ -223,10 +226,8 @@ static void crypto_ahash_dma_start(struc
+ static int rk_hash_prepare(struct crypto_engine *engine, void *breq)
+ {
+ 	struct ahash_request *areq = container_of(breq, struct ahash_request, base);
+-	struct crypto_ahash *tfm = crypto_ahash_reqtfm(areq);
+ 	struct rk_ahash_rctx *rctx = ahash_request_ctx(areq);
+-	struct rk_ahash_ctx *tctx = crypto_ahash_ctx(tfm);
+-	struct rk_crypto_info *rkc = tctx->dev;
++	struct rk_crypto_info *rkc = rctx->dev;
+ 	int ret;
+ 
+ 	ret = dma_map_sg(rkc->dev, areq->src, sg_nents(areq->src), DMA_TO_DEVICE);
+@@ -241,10 +242,8 @@ static int rk_hash_prepare(struct crypto
+ static int rk_hash_unprepare(struct crypto_engine *engine, void *breq)
+ {
+ 	struct ahash_request *areq = container_of(breq, struct ahash_request, base);
+-	struct crypto_ahash *tfm = crypto_ahash_reqtfm(areq);
+ 	struct rk_ahash_rctx *rctx = ahash_request_ctx(areq);
+-	struct rk_ahash_ctx *tctx = crypto_ahash_ctx(tfm);
+-	struct rk_crypto_info *rkc = tctx->dev;
++	struct rk_crypto_info *rkc = rctx->dev;
+ 
+ 	dma_unmap_sg(rkc->dev, areq->src, rctx->nrsg, DMA_TO_DEVICE);
+ 	return 0;
+@@ -255,11 +254,10 @@ static int rk_hash_run(struct crypto_eng
+ 	struct ahash_request *areq = container_of(breq, struct ahash_request, base);
+ 	struct crypto_ahash *tfm = crypto_ahash_reqtfm(areq);
+ 	struct rk_ahash_rctx *rctx = ahash_request_ctx(areq);
+-	struct rk_ahash_ctx *tctx = crypto_ahash_ctx(tfm);
+ 	struct ahash_alg *alg = __crypto_ahash_alg(tfm->base.__crt_alg);
+ 	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.hash);
+ 	struct scatterlist *sg = areq->src;
+-	struct rk_crypto_info *rkc = tctx->dev;
++	struct rk_crypto_info *rkc = rctx->dev;
+ 	int err = 0;
+ 	int i;
+ 	u32 v;
+--- a/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
+@@ -86,12 +86,15 @@ static int rk_cipher_handle_req(struct s
+ {
+ 	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+ 	struct rk_cipher_ctx *tctx = crypto_skcipher_ctx(tfm);
++	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+ 	struct rk_crypto_info *rkc = tctx->dev;
+ 	struct crypto_engine *engine = rkc->engine;
+ 
+ 	if (rk_cipher_need_fallback(req))
+ 		return rk_cipher_fallback(req);
+ 
++	rctx->dev = rkc;
++
+ 	return crypto_transfer_skcipher_request_to_engine(engine, req);
+ }
+ 
+@@ -290,7 +293,6 @@ static int rk_cipher_run(struct crypto_e
+ {
+ 	struct skcipher_request *areq = container_of(async_req, struct skcipher_request, base);
+ 	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(areq);
+-	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(areq);
+ 	struct scatterlist *sgs, *sgd;
+ 	int err = 0;
+@@ -303,7 +305,7 @@ static int rk_cipher_run(struct crypto_e
+ 	unsigned int todo;
+ 	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
+ 	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.skcipher);
+-	struct rk_crypto_info *rkc = ctx->dev;
++	struct rk_crypto_info *rkc = rctx->dev;
+ 
+ 	algt->stat_req++;
+ 
diff --git a/target/linux/rockchip/patches-6.1/317-crypto-rockchip-Check-for-clocks-numbers-and-their-f.patch b/target/linux/rockchip/patches-6.1/317-crypto-rockchip-Check-for-clocks-numbers-and-their-f.patch
new file mode 100644
index 0000000000..aeb93cdfd2
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/317-crypto-rockchip-Check-for-clocks-numbers-and-their-f.patch
@@ -0,0 +1,166 @@
+From 9c918c5eec0f61f820d282b7d10c1cce585f5ad1 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:08 +0000
+Subject: [PATCH 317/383] crypto: rockchip: Check for clocks numbers and their
+ frequencies
+
+Add the number of clocks needed for each compatible.
+Rockchip's datasheet give maximum frequencies for some clocks, so add
+checks for verifying they are within limits. Let's start with rk3288 for
+clock frequency check, other will came later.
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.c | 75 +++++++++++++++++++++----
+ drivers/crypto/rockchip/rk3288_crypto.h | 16 +++++-
+ 2 files changed, 79 insertions(+), 12 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -14,10 +14,58 @@
+ #include <linux/module.h>
+ #include <linux/platform_device.h>
+ #include <linux/of.h>
++#include <linux/of_device.h>
+ #include <linux/clk.h>
+ #include <linux/crypto.h>
+ #include <linux/reset.h>
+ 
++static const struct rk_variant rk3288_variant = {
++	.num_clks = 4,
++	.rkclks = {
++		{ "sclk", 150000000},
++	}
++};
++
++static const struct rk_variant rk3328_variant = {
++	.num_clks = 3,
++};
++
++static int rk_crypto_get_clks(struct rk_crypto_info *dev)
++{
++	int i, j, err;
++	unsigned long cr;
++
++	dev->num_clks = devm_clk_bulk_get_all(dev->dev, &dev->clks);
++	if (dev->num_clks < dev->variant->num_clks) {
++		dev_err(dev->dev, "Missing clocks, got %d instead of %d\n",
++			dev->num_clks, dev->variant->num_clks);
++		return -EINVAL;
++	}
++
++	for (i = 0; i < dev->num_clks; i++) {
++		cr = clk_get_rate(dev->clks[i].clk);
++		for (j = 0; j < ARRAY_SIZE(dev->variant->rkclks); j++) {
++			if (dev->variant->rkclks[j].max == 0)
++				continue;
++			if (strcmp(dev->variant->rkclks[j].name, dev->clks[i].id))
++				continue;
++			if (cr > dev->variant->rkclks[j].max) {
++				err = clk_set_rate(dev->clks[i].clk,
++						   dev->variant->rkclks[j].max);
++				if (err)
++					dev_err(dev->dev, "Fail downclocking %s from %lu to %lu\n",
++						dev->variant->rkclks[j].name, cr,
++						dev->variant->rkclks[j].max);
++				else
++					dev_info(dev->dev, "Downclocking %s from %lu to %lu\n",
++						 dev->variant->rkclks[j].name, cr,
++						 dev->variant->rkclks[j].max);
++			}
++		}
++	}
++	return 0;
++}
++
+ static int rk_crypto_enable_clk(struct rk_crypto_info *dev)
+ {
+ 	int err;
+@@ -201,8 +249,12 @@ static void rk_crypto_unregister(void)
+ }
+ 
+ static const struct of_device_id crypto_of_id_table[] = {
+-	{ .compatible = "rockchip,rk3288-crypto" },
+-	{ .compatible = "rockchip,rk3328-crypto" },
++	{ .compatible = "rockchip,rk3288-crypto",
++	  .data = &rk3288_variant,
++	},
++	{ .compatible = "rockchip,rk3328-crypto",
++	  .data = &rk3328_variant,
++	},
+ 	{}
+ };
+ MODULE_DEVICE_TABLE(of, crypto_of_id_table);
+@@ -220,6 +272,15 @@ static int rk_crypto_probe(struct platfo
+ 		goto err_crypto;
+ 	}
+ 
++	crypto_info->dev = &pdev->dev;
++	platform_set_drvdata(pdev, crypto_info);
++
++	crypto_info->variant = of_device_get_match_data(&pdev->dev);
++	if (!crypto_info->variant) {
++		dev_err(&pdev->dev, "Missing variant\n");
++		return -EINVAL;
++	}
++
+ 	crypto_info->rst = devm_reset_control_get(dev, "crypto-rst");
+ 	if (IS_ERR(crypto_info->rst)) {
+ 		err = PTR_ERR(crypto_info->rst);
+@@ -236,12 +297,9 @@ static int rk_crypto_probe(struct platfo
+ 		goto err_crypto;
+ 	}
+ 
+-	crypto_info->num_clks = devm_clk_bulk_get_all(&pdev->dev,
+-						      &crypto_info->clks);
+-	if (crypto_info->num_clks < 3) {
+-		err = -EINVAL;
++	err = rk_crypto_get_clks(crypto_info);
++	if (err)
+ 		goto err_crypto;
+-	}
+ 
+ 	crypto_info->irq = platform_get_irq(pdev, 0);
+ 	if (crypto_info->irq < 0) {
+@@ -259,9 +317,6 @@ static int rk_crypto_probe(struct platfo
+ 		goto err_crypto;
+ 	}
+ 
+-	crypto_info->dev = &pdev->dev;
+-	platform_set_drvdata(pdev, crypto_info);
+-
+ 	crypto_info->engine = crypto_engine_alloc_init(&pdev->dev, true);
+ 	crypto_engine_start(crypto_info->engine);
+ 	init_completion(&crypto_info->complete);
+--- a/drivers/crypto/rockchip/rk3288_crypto.h
++++ b/drivers/crypto/rockchip/rk3288_crypto.h
+@@ -188,14 +188,26 @@
+ #define CRYPTO_WRITE(dev, offset, val)	  \
+ 		writel_relaxed((val), ((dev)->reg + (offset)))
+ 
++#define RK_MAX_CLKS 4
++
++struct rk_clks {
++	const char *name;
++	unsigned long max;
++};
++
++struct rk_variant {
++	int num_clks;
++	struct rk_clks rkclks[RK_MAX_CLKS];
++};
++
+ struct rk_crypto_info {
+ 	struct device			*dev;
+ 	struct clk_bulk_data		*clks;
+-	int num_clks;
++	int				num_clks;
+ 	struct reset_control		*rst;
+ 	void __iomem			*reg;
+ 	int				irq;
+-
++	const struct rk_variant *variant;
+ 	struct crypto_engine *engine;
+ 	struct completion complete;
+ 	int status;
diff --git a/target/linux/rockchip/patches-6.1/318-crypto-rockchip-rk_ahash_reg_init-use-crypto_info-fr.patch b/target/linux/rockchip/patches-6.1/318-crypto-rockchip-rk_ahash_reg_init-use-crypto_info-fr.patch
new file mode 100644
index 0000000000..8e591bb15b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/318-crypto-rockchip-rk_ahash_reg_init-use-crypto_info-fr.patch
@@ -0,0 +1,41 @@
+From f9354c6a535347932a8e15f30a40edc46e8f7b0e Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:09 +0000
+Subject: [PATCH 318/383] crypto: rockchip: rk_ahash_reg_init use crypto_info
+ from parameter
+
+rk_ahash_reg_init() use crypto_info from TFM context, since we will
+remove it, let's take if from parameters.
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto_ahash.c | 8 +++-----
+ 1 file changed, 3 insertions(+), 5 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto_ahash.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_ahash.c
+@@ -78,12 +78,10 @@ static int zero_message_process(struct a
+ 	return 0;
+ }
+ 
+-static void rk_ahash_reg_init(struct ahash_request *req)
++static void rk_ahash_reg_init(struct ahash_request *req,
++			      struct rk_crypto_info *dev)
+ {
+ 	struct rk_ahash_rctx *rctx = ahash_request_ctx(req);
+-	struct crypto_ahash *tfm = crypto_ahash_reqtfm(req);
+-	struct rk_ahash_ctx *tctx = crypto_ahash_ctx(tfm);
+-	struct rk_crypto_info *dev = tctx->dev;
+ 	int reg_status;
+ 
+ 	reg_status = CRYPTO_READ(dev, RK_CRYPTO_CTRL) |
+@@ -281,7 +279,7 @@ static int rk_hash_run(struct crypto_eng
+ 		goto theend;
+ 	}
+ 
+-	rk_ahash_reg_init(areq);
++	rk_ahash_reg_init(areq, rkc);
+ 
+ 	while (sg) {
+ 		reinit_completion(&rkc->complete);
diff --git a/target/linux/rockchip/patches-6.1/319-crypto-rockchip-permit-to-have-more-than-one-reset.patch b/target/linux/rockchip/patches-6.1/319-crypto-rockchip-permit-to-have-more-than-one-reset.patch
new file mode 100644
index 0000000000..b1e7c10742
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/319-crypto-rockchip-permit-to-have-more-than-one-reset.patch
@@ -0,0 +1,25 @@
+From bedc4f455e3049653fbf82fd557fd69ee1a6d560 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:10 +0000
+Subject: [PATCH 319/383] crypto: rockchip: permit to have more than one reset
+
+The RK3399 has 3 resets, so the driver to handle multiple resets.
+This is done by using devm_reset_control_array_get_exclusive().
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -281,7 +281,7 @@ static int rk_crypto_probe(struct platfo
+ 		return -EINVAL;
+ 	}
+ 
+-	crypto_info->rst = devm_reset_control_get(dev, "crypto-rst");
++	crypto_info->rst = devm_reset_control_array_get_exclusive(dev);
+ 	if (IS_ERR(crypto_info->rst)) {
+ 		err = PTR_ERR(crypto_info->rst);
+ 		goto err_crypto;
diff --git a/target/linux/rockchip/patches-6.1/320-crypto-rockchip-Add-support-for-RK3399.patch b/target/linux/rockchip/patches-6.1/320-crypto-rockchip-Add-support-for-RK3399.patch
new file mode 100644
index 0000000000..9ff1d41e7d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/320-crypto-rockchip-Add-support-for-RK3399.patch
@@ -0,0 +1,465 @@
+From 4d4aecbfbcf56cd82685593bb3e6abd6f49411d0 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 07:55:11 +0000
+Subject: [PATCH 320/383] crypto: rockchip: Add support for RK3399
+
+The RK3399 has 2 rk3288 compatible crypto device named crypto0 and
+crypto1. The only difference is lack of RSA in crypto1.
+
+We need to add driver support for 2 parallel instance as only one need
+to register crypto algorithms.
+Then the driver will round robin each request on each device.
+
+For avoiding complexity (device bringup after a TFM is created), PM is
+modified to be handled per request.
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.c       | 92 +++++++++++++++----
+ drivers/crypto/rockchip/rk3288_crypto.h       | 25 +++--
+ drivers/crypto/rockchip/rk3288_crypto_ahash.c | 37 ++++----
+ .../crypto/rockchip/rk3288_crypto_skcipher.c  | 37 ++++----
+ 4 files changed, 123 insertions(+), 68 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -19,6 +19,23 @@
+ #include <linux/crypto.h>
+ #include <linux/reset.h>
+ 
++static struct rockchip_ip rocklist = {
++	.dev_list = LIST_HEAD_INIT(rocklist.dev_list),
++	.lock = __SPIN_LOCK_UNLOCKED(rocklist.lock),
++};
++
++struct rk_crypto_info *get_rk_crypto(void)
++{
++	struct rk_crypto_info *first;
++
++	spin_lock(&rocklist.lock);
++	first = list_first_entry_or_null(&rocklist.dev_list,
++					 struct rk_crypto_info, list);
++	list_rotate_left(&rocklist.dev_list);
++	spin_unlock(&rocklist.lock);
++	return first;
++}
++
+ static const struct rk_variant rk3288_variant = {
+ 	.num_clks = 4,
+ 	.rkclks = {
+@@ -30,6 +47,10 @@ static const struct rk_variant rk3328_va
+ 	.num_clks = 3,
+ };
+ 
++static const struct rk_variant rk3399_variant = {
++	.num_clks = 3,
++};
++
+ static int rk_crypto_get_clks(struct rk_crypto_info *dev)
+ {
+ 	int i, j, err;
+@@ -83,8 +104,8 @@ static void rk_crypto_disable_clk(struct
+ }
+ 
+ /*
+- * Power management strategy: The device is suspended unless a TFM exists for
+- * one of the algorithms proposed by this driver.
++ * Power management strategy: The device is suspended until a request
++ * is handled. For avoiding suspend/resume yoyo, the autosuspend is set to 2s.
+  */
+ static int rk_crypto_pm_suspend(struct device *dev)
+ {
+@@ -166,8 +187,17 @@ static struct rk_crypto_tmp *rk_cipher_a
+ #ifdef CONFIG_CRYPTO_DEV_ROCKCHIP_DEBUG
+ static int rk_crypto_debugfs_show(struct seq_file *seq, void *v)
+ {
++	struct rk_crypto_info *dd;
+ 	unsigned int i;
+ 
++	spin_lock(&rocklist.lock);
++	list_for_each_entry(dd, &rocklist.dev_list, list) {
++		seq_printf(seq, "%s %s requests: %lu\n",
++			   dev_driver_string(dd->dev), dev_name(dd->dev),
++			   dd->nreq);
++	}
++	spin_unlock(&rocklist.lock);
++
+ 	for (i = 0; i < ARRAY_SIZE(rk_cipher_algs); i++) {
+ 		if (!rk_cipher_algs[i]->dev)
+ 			continue;
+@@ -198,6 +228,18 @@ static int rk_crypto_debugfs_show(struct
+ DEFINE_SHOW_ATTRIBUTE(rk_crypto_debugfs);
+ #endif
+ 
++static void register_debugfs(struct rk_crypto_info *crypto_info)
++{
++#ifdef CONFIG_CRYPTO_DEV_ROCKCHIP_DEBUG
++	/* Ignore error of debugfs */
++	rocklist.dbgfs_dir = debugfs_create_dir("rk3288_crypto", NULL);
++	rocklist.dbgfs_stats = debugfs_create_file("stats", 0444,
++						   rocklist.dbgfs_dir,
++						   &rocklist,
++						   &rk_crypto_debugfs_fops);
++#endif
++}
++
+ static int rk_crypto_register(struct rk_crypto_info *crypto_info)
+ {
+ 	unsigned int i, k;
+@@ -255,6 +297,9 @@ static const struct of_device_id crypto_
+ 	{ .compatible = "rockchip,rk3328-crypto",
+ 	  .data = &rk3328_variant,
+ 	},
++	{ .compatible = "rockchip,rk3399-crypto",
++	  .data = &rk3399_variant,
++	},
+ 	{}
+ };
+ MODULE_DEVICE_TABLE(of, crypto_of_id_table);
+@@ -262,7 +307,7 @@ MODULE_DEVICE_TABLE(of, crypto_of_id_tab
+ static int rk_crypto_probe(struct platform_device *pdev)
+ {
+ 	struct device *dev = &pdev->dev;
+-	struct rk_crypto_info *crypto_info;
++	struct rk_crypto_info *crypto_info, *first;
+ 	int err = 0;
+ 
+ 	crypto_info = devm_kzalloc(&pdev->dev,
+@@ -325,22 +370,22 @@ static int rk_crypto_probe(struct platfo
+ 	if (err)
+ 		goto err_pm;
+ 
+-	err = rk_crypto_register(crypto_info);
+-	if (err) {
+-		dev_err(dev, "err in register alg");
+-		goto err_register_alg;
+-	}
++	spin_lock(&rocklist.lock);
++	first = list_first_entry_or_null(&rocklist.dev_list,
++					 struct rk_crypto_info, list);
++	list_add_tail(&crypto_info->list, &rocklist.dev_list);
++	spin_unlock(&rocklist.lock);
++
++	if (!first) {
++		err = rk_crypto_register(crypto_info);
++		if (err) {
++			dev_err(dev, "Fail to register crypto algorithms");
++			goto err_register_alg;
++		}
+ 
+-#ifdef CONFIG_CRYPTO_DEV_ROCKCHIP_DEBUG
+-	/* Ignore error of debugfs */
+-	crypto_info->dbgfs_dir = debugfs_create_dir("rk3288_crypto", NULL);
+-	crypto_info->dbgfs_stats = debugfs_create_file("stats", 0444,
+-						       crypto_info->dbgfs_dir,
+-						       crypto_info,
+-						       &rk_crypto_debugfs_fops);
+-#endif
++		register_debugfs(crypto_info);
++	}
+ 
+-	dev_info(dev, "Crypto Accelerator successfully registered\n");
+ 	return 0;
+ 
+ err_register_alg:
+@@ -355,11 +400,20 @@ err_crypto:
+ static int rk_crypto_remove(struct platform_device *pdev)
+ {
+ 	struct rk_crypto_info *crypto_tmp = platform_get_drvdata(pdev);
++	struct rk_crypto_info *first;
++
++	spin_lock_bh(&rocklist.lock);
++	list_del(&crypto_tmp->list);
++	first = list_first_entry_or_null(&rocklist.dev_list,
++					 struct rk_crypto_info, list);
++	spin_unlock_bh(&rocklist.lock);
+ 
++	if (!first) {
+ #ifdef CONFIG_CRYPTO_DEV_ROCKCHIP_DEBUG
+-	debugfs_remove_recursive(crypto_tmp->dbgfs_dir);
++		debugfs_remove_recursive(rocklist.dbgfs_dir);
+ #endif
+-	rk_crypto_unregister();
++		rk_crypto_unregister();
++	}
+ 	rk_crypto_pm_exit(crypto_tmp);
+ 	crypto_engine_exit(crypto_tmp->engine);
+ 	return 0;
+--- a/drivers/crypto/rockchip/rk3288_crypto.h
++++ b/drivers/crypto/rockchip/rk3288_crypto.h
+@@ -190,6 +190,20 @@
+ 
+ #define RK_MAX_CLKS 4
+ 
++/*
++ * struct rockchip_ip - struct for managing a list of RK crypto instance
++ * @dev_list:		Used for doing a list of rk_crypto_info
++ * @lock:		Control access to dev_list
++ * @dbgfs_dir:		Debugfs dentry for statistic directory
++ * @dbgfs_stats:	Debugfs dentry for statistic counters
++ */
++struct rockchip_ip {
++	struct list_head	dev_list;
++	spinlock_t		lock; /* Control access to dev_list */
++	struct dentry		*dbgfs_dir;
++	struct dentry		*dbgfs_stats;
++};
++
+ struct rk_clks {
+ 	const char *name;
+ 	unsigned long max;
+@@ -201,6 +215,7 @@ struct rk_variant {
+ };
+ 
+ struct rk_crypto_info {
++	struct list_head		list;
+ 	struct device			*dev;
+ 	struct clk_bulk_data		*clks;
+ 	int				num_clks;
+@@ -208,19 +223,15 @@ struct rk_crypto_info {
+ 	void __iomem			*reg;
+ 	int				irq;
+ 	const struct rk_variant *variant;
++	unsigned long nreq;
+ 	struct crypto_engine *engine;
+ 	struct completion complete;
+ 	int status;
+-#ifdef CONFIG_CRYPTO_DEV_ROCKCHIP_DEBUG
+-	struct dentry *dbgfs_dir;
+-	struct dentry *dbgfs_stats;
+-#endif
+ };
+ 
+ /* the private variable of hash */
+ struct rk_ahash_ctx {
+ 	struct crypto_engine_ctx enginectx;
+-	struct rk_crypto_info		*dev;
+ 	/* for fallback */
+ 	struct crypto_ahash		*fallback_tfm;
+ };
+@@ -236,7 +247,6 @@ struct rk_ahash_rctx {
+ /* the private variable of cipher */
+ struct rk_cipher_ctx {
+ 	struct crypto_engine_ctx enginectx;
+-	struct rk_crypto_info		*dev;
+ 	unsigned int			keylen;
+ 	u8				key[AES_MAX_KEY_SIZE];
+ 	u8				iv[AES_BLOCK_SIZE];
+@@ -252,7 +262,7 @@ struct rk_cipher_rctx {
+ 
+ struct rk_crypto_tmp {
+ 	u32 type;
+-	struct rk_crypto_info		*dev;
++	struct rk_crypto_info           *dev;
+ 	union {
+ 		struct skcipher_alg	skcipher;
+ 		struct ahash_alg	hash;
+@@ -276,4 +286,5 @@ extern struct rk_crypto_tmp rk_ahash_sha
+ extern struct rk_crypto_tmp rk_ahash_sha256;
+ extern struct rk_crypto_tmp rk_ahash_md5;
+ 
++struct rk_crypto_info *get_rk_crypto(void);
+ #endif
+--- a/drivers/crypto/rockchip/rk3288_crypto_ahash.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_ahash.c
+@@ -199,8 +199,8 @@ static int rk_ahash_export(struct ahash_
+ static int rk_ahash_digest(struct ahash_request *req)
+ {
+ 	struct rk_ahash_rctx *rctx = ahash_request_ctx(req);
+-	struct rk_ahash_ctx *tctx = crypto_tfm_ctx(req->base.tfm);
+-	struct rk_crypto_info *dev = tctx->dev;
++	struct rk_crypto_info *dev;
++	struct crypto_engine *engine;
+ 
+ 	if (rk_ahash_need_fallback(req))
+ 		return rk_ahash_digest_fb(req);
+@@ -208,9 +208,12 @@ static int rk_ahash_digest(struct ahash_
+ 	if (!req->nbytes)
+ 		return zero_message_process(req);
+ 
++	dev = get_rk_crypto();
++
+ 	rctx->dev = dev;
++	engine = dev->engine;
+ 
+-	return crypto_transfer_hash_request_to_engine(dev->engine, req);
++	return crypto_transfer_hash_request_to_engine(engine, req);
+ }
+ 
+ static void crypto_ahash_dma_start(struct rk_crypto_info *dev, struct scatterlist *sg)
+@@ -260,9 +263,14 @@ static int rk_hash_run(struct crypto_eng
+ 	int i;
+ 	u32 v;
+ 
++	err = pm_runtime_resume_and_get(rkc->dev);
++	if (err)
++		return err;
++
+ 	rctx->mode = 0;
+ 
+ 	algt->stat_req++;
++	rkc->nreq++;
+ 
+ 	switch (crypto_ahash_digestsize(tfm)) {
+ 	case SHA1_DIGEST_SIZE:
+@@ -313,6 +321,8 @@ static int rk_hash_run(struct crypto_eng
+ 	}
+ 
+ theend:
++	pm_runtime_put_autosuspend(rkc->dev);
++
+ 	local_bh_disable();
+ 	crypto_finalize_hash_request(engine, breq, err);
+ 	local_bh_enable();
+@@ -323,21 +333,15 @@ theend:
+ static int rk_cra_hash_init(struct crypto_tfm *tfm)
+ {
+ 	struct rk_ahash_ctx *tctx = crypto_tfm_ctx(tfm);
+-	struct rk_crypto_tmp *algt;
+-	struct ahash_alg *alg = __crypto_ahash_alg(tfm->__crt_alg);
+-
+ 	const char *alg_name = crypto_tfm_alg_name(tfm);
+-	int err;
+-
+-	algt = container_of(alg, struct rk_crypto_tmp, alg.hash);
+-
+-	tctx->dev = algt->dev;
++	struct ahash_alg *alg = __crypto_ahash_alg(tfm->__crt_alg);
++	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.hash);
+ 
+ 	/* for fallback */
+ 	tctx->fallback_tfm = crypto_alloc_ahash(alg_name, 0,
+ 						CRYPTO_ALG_NEED_FALLBACK);
+ 	if (IS_ERR(tctx->fallback_tfm)) {
+-		dev_err(tctx->dev->dev, "Could not load fallback driver.\n");
++		dev_err(algt->dev->dev, "Could not load fallback driver.\n");
+ 		return PTR_ERR(tctx->fallback_tfm);
+ 	}
+ 
+@@ -349,15 +353,7 @@ static int rk_cra_hash_init(struct crypt
+ 	tctx->enginectx.op.prepare_request = rk_hash_prepare;
+ 	tctx->enginectx.op.unprepare_request = rk_hash_unprepare;
+ 
+-	err = pm_runtime_resume_and_get(tctx->dev->dev);
+-	if (err < 0)
+-		goto error_pm;
+-
+ 	return 0;
+-error_pm:
+-	crypto_free_ahash(tctx->fallback_tfm);
+-
+-	return err;
+ }
+ 
+ static void rk_cra_hash_exit(struct crypto_tfm *tfm)
+@@ -365,7 +361,6 @@ static void rk_cra_hash_exit(struct cryp
+ 	struct rk_ahash_ctx *tctx = crypto_tfm_ctx(tfm);
+ 
+ 	crypto_free_ahash(tctx->fallback_tfm);
+-	pm_runtime_put_autosuspend(tctx->dev->dev);
+ }
+ 
+ struct rk_crypto_tmp rk_ahash_sha1 = {
+--- a/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
++++ b/drivers/crypto/rockchip/rk3288_crypto_skcipher.c
+@@ -17,11 +17,11 @@
+ static int rk_cipher_need_fallback(struct skcipher_request *req)
+ {
+ 	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	unsigned int bs = crypto_skcipher_blocksize(tfm);
+ 	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
+ 	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.skcipher);
+ 	struct scatterlist *sgs, *sgd;
+ 	unsigned int stodo, dtodo, len;
++	unsigned int bs = crypto_skcipher_blocksize(tfm);
+ 
+ 	if (!req->cryptlen)
+ 		return true;
+@@ -84,15 +84,16 @@ static int rk_cipher_fallback(struct skc
+ 
+ static int rk_cipher_handle_req(struct skcipher_request *req)
+ {
+-	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
+-	struct rk_cipher_ctx *tctx = crypto_skcipher_ctx(tfm);
+ 	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
+-	struct rk_crypto_info *rkc = tctx->dev;
+-	struct crypto_engine *engine = rkc->engine;
++	struct rk_crypto_info *rkc;
++	struct crypto_engine *engine;
+ 
+ 	if (rk_cipher_need_fallback(req))
+ 		return rk_cipher_fallback(req);
+ 
++	rkc = get_rk_crypto();
++
++	engine = rkc->engine;
+ 	rctx->dev = rkc;
+ 
+ 	return crypto_transfer_skcipher_request_to_engine(engine, req);
+@@ -307,7 +308,12 @@ static int rk_cipher_run(struct crypto_e
+ 	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.skcipher);
+ 	struct rk_crypto_info *rkc = rctx->dev;
+ 
++	err = pm_runtime_resume_and_get(rkc->dev);
++	if (err)
++		return err;
++
+ 	algt->stat_req++;
++	rkc->nreq++;
+ 
+ 	ivsize = crypto_skcipher_ivsize(tfm);
+ 	if (areq->iv && crypto_skcipher_ivsize(tfm) > 0) {
+@@ -401,6 +407,8 @@ static int rk_cipher_run(struct crypto_e
+ 	}
+ 
+ theend:
++	pm_runtime_put_autosuspend(rkc->dev);
++
+ 	local_bh_disable();
+ 	crypto_finalize_skcipher_request(engine, areq, err);
+ 	local_bh_enable();
+@@ -420,18 +428,13 @@ theend_iv:
+ static int rk_cipher_tfm_init(struct crypto_skcipher *tfm)
+ {
+ 	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
+-	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
+ 	const char *name = crypto_tfm_alg_name(&tfm->base);
+-	struct rk_crypto_tmp *algt;
+-	int err;
+-
+-	algt = container_of(alg, struct rk_crypto_tmp, alg.skcipher);
+-
+-	ctx->dev = algt->dev;
++	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
++	struct rk_crypto_tmp *algt = container_of(alg, struct rk_crypto_tmp, alg.skcipher);
+ 
+ 	ctx->fallback_tfm = crypto_alloc_skcipher(name, 0, CRYPTO_ALG_NEED_FALLBACK);
+ 	if (IS_ERR(ctx->fallback_tfm)) {
+-		dev_err(ctx->dev->dev, "ERROR: Cannot allocate fallback for %s %ld\n",
++		dev_err(algt->dev->dev, "ERROR: Cannot allocate fallback for %s %ld\n",
+ 			name, PTR_ERR(ctx->fallback_tfm));
+ 		return PTR_ERR(ctx->fallback_tfm);
+ 	}
+@@ -441,14 +444,7 @@ static int rk_cipher_tfm_init(struct cry
+ 
+ 	ctx->enginectx.op.do_one_request = rk_cipher_run;
+ 
+-	err = pm_runtime_resume_and_get(ctx->dev->dev);
+-	if (err < 0)
+-		goto error_pm;
+-
+ 	return 0;
+-error_pm:
+-	crypto_free_skcipher(ctx->fallback_tfm);
+-	return err;
+ }
+ 
+ static void rk_cipher_tfm_exit(struct crypto_skcipher *tfm)
+@@ -457,7 +453,6 @@ static void rk_cipher_tfm_exit(struct cr
+ 
+ 	memzero_explicit(ctx->key, ctx->keylen);
+ 	crypto_free_skcipher(ctx->fallback_tfm);
+-	pm_runtime_put_autosuspend(ctx->dev->dev);
+ }
+ 
+ struct rk_crypto_tmp rk_ecb_aes_alg = {
diff --git a/target/linux/rockchip/patches-6.1/321-crypto-rockchip-move-kconfig-to-its-dedicated-direct.patch b/target/linux/rockchip/patches-6.1/321-crypto-rockchip-move-kconfig-to-its-dedicated-direct.patch
new file mode 100644
index 0000000000..848c77ebd6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/321-crypto-rockchip-move-kconfig-to-its-dedicated-direct.patch
@@ -0,0 +1,107 @@
+From b480879eeb810bed35d467f41650a90df83124c7 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 08:00:44 +0000
+Subject: [PATCH 321/383] crypto: rockchip: move kconfig to its dedicated
+ directory
+
+Move all rockchip kconfig in its own subdirectory.
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/Kconfig          | 32 ++------------------------------
+ drivers/crypto/Makefile         |  2 +-
+ drivers/crypto/rockchip/Kconfig | 28 ++++++++++++++++++++++++++++
+ 3 files changed, 31 insertions(+), 31 deletions(-)
+ create mode 100644 drivers/crypto/rockchip/Kconfig
+
+--- a/drivers/crypto/Kconfig
++++ b/drivers/crypto/Kconfig
+@@ -646,6 +646,8 @@ config CRYPTO_DEV_QCOM_RNG
+ 	  To compile this driver as a module, choose M here. The
+ 	  module will be called qcom-rng. If unsure, say N.
+ 
++source "drivers/crypto/rockchip/Kconfig"
++
+ config CRYPTO_DEV_VMX
+ 	bool "Support for VMX cryptographic acceleration instructions"
+ 	depends on PPC64 && VSX
+@@ -666,36 +668,6 @@ config CRYPTO_DEV_IMGTEC_HASH
+ 	  hardware hash accelerator. Supporting MD5/SHA1/SHA224/SHA256
+ 	  hashing algorithms.
+ 
+-config CRYPTO_DEV_ROCKCHIP
+-	tristate "Rockchip's Cryptographic Engine driver"
+-	depends on OF && ARCH_ROCKCHIP
+-	depends on PM
+-	select CRYPTO_ECB
+-	select CRYPTO_CBC
+-	select CRYPTO_DES
+-	select CRYPTO_AES
+-	select CRYPTO_ENGINE
+-	select CRYPTO_LIB_DES
+-	select CRYPTO_MD5
+-	select CRYPTO_SHA1
+-	select CRYPTO_SHA256
+-	select CRYPTO_HASH
+-	select CRYPTO_SKCIPHER
+-
+-	help
+-	  This driver interfaces with the hardware crypto accelerator.
+-	  Supporting cbc/ecb chainmode, and aes/des/des3_ede cipher mode.
+-
+-config CRYPTO_DEV_ROCKCHIP_DEBUG
+-	bool "Enable Rockchip crypto stats"
+-	depends on CRYPTO_DEV_ROCKCHIP
+-	depends on DEBUG_FS
+-	help
+-	  Say y to enable Rockchip crypto debug stats.
+-	  This will create /sys/kernel/debug/rk3288_crypto/stats for displaying
+-	  the number of requests per algorithm and other internal stats.
+-
+-
+ config CRYPTO_DEV_ZYNQMP_AES
+ 	tristate "Support for Xilinx ZynqMP AES hw accelerator"
+ 	depends on ZYNQMP_FIRMWARE || COMPILE_TEST
+--- a/drivers/crypto/Makefile
++++ b/drivers/crypto/Makefile
+@@ -36,7 +36,7 @@ obj-$(CONFIG_CRYPTO_DEV_PPC4XX) += amcc/
+ obj-$(CONFIG_CRYPTO_DEV_QAT) += qat/
+ obj-$(CONFIG_CRYPTO_DEV_QCE) += qce/
+ obj-$(CONFIG_CRYPTO_DEV_QCOM_RNG) += qcom-rng.o
+-obj-$(CONFIG_CRYPTO_DEV_ROCKCHIP) += rockchip/
++obj-y += rockchip/
+ obj-$(CONFIG_CRYPTO_DEV_S5P) += s5p-sss.o
+ obj-$(CONFIG_CRYPTO_DEV_SA2UL) += sa2ul.o
+ obj-$(CONFIG_CRYPTO_DEV_SAHARA) += sahara.o
+--- /dev/null
++++ b/drivers/crypto/rockchip/Kconfig
+@@ -0,0 +1,28 @@
++config CRYPTO_DEV_ROCKCHIP
++	tristate "Rockchip's Cryptographic Engine driver"
++	depends on OF && ARCH_ROCKCHIP
++	depends on PM
++	select CRYPTO_ECB
++	select CRYPTO_CBC
++	select CRYPTO_DES
++	select CRYPTO_AES
++	select CRYPTO_ENGINE
++	select CRYPTO_LIB_DES
++	select CRYPTO_MD5
++	select CRYPTO_SHA1
++	select CRYPTO_SHA256
++	select CRYPTO_HASH
++	select CRYPTO_SKCIPHER
++
++	help
++	  This driver interfaces with the hardware crypto accelerator.
++	  Supporting cbc/ecb chainmode, and aes/des/des3_ede cipher mode.
++
++config CRYPTO_DEV_ROCKCHIP_DEBUG
++	bool "Enable Rockchip crypto stats"
++	depends on CRYPTO_DEV_ROCKCHIP
++	depends on DEBUG_FS
++	help
++	  Say y to enable Rockchip crypto debug stats.
++	  This will create /sys/kernel/debug/rk3288_crypto/stats for displaying
++	  the number of requests per algorithm and other internal stats.
diff --git a/target/linux/rockchip/patches-6.1/322-dt-bindings-crypto-add-support-for-rockchip-crypto-r.patch b/target/linux/rockchip/patches-6.1/322-dt-bindings-crypto-add-support-for-rockchip-crypto-r.patch
new file mode 100644
index 0000000000..a72c220b61
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/322-dt-bindings-crypto-add-support-for-rockchip-crypto-r.patch
@@ -0,0 +1,90 @@
+From f17c012755ee45fd3657ed9f1103120bd18edad2 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 08:00:45 +0000
+Subject: [PATCH 322/383] dt-bindings: crypto: add support for
+ rockchip,crypto-rk3588
+
+Add device tree binding documentation for the Rockchip cryptographic
+offloader V2.
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../crypto/rockchip,rk3588-crypto.yaml        | 71 +++++++++++++++++++
+ 1 file changed, 71 insertions(+)
+ create mode 100644 Documentation/devicetree/bindings/crypto/rockchip,rk3588-crypto.yaml
+
+--- /dev/null
++++ b/Documentation/devicetree/bindings/crypto/rockchip,rk3588-crypto.yaml
+@@ -0,0 +1,71 @@
++# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/crypto/rockchip,rk3588-crypto.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip cryptographic offloader V2
++
++maintainers:
++  - Corentin Labbe <clabbe@baylibre.com>
++
++properties:
++  compatible:
++    enum:
++      - rockchip,rk3568-crypto
++      - rockchip,rk3588-crypto
++
++  reg:
++    maxItems: 1
++
++  interrupts:
++    maxItems: 1
++
++  clocks:
++    minItems: 4
++
++  clock-names:
++    items:
++      - const: aclk
++      - const: hclk
++      - const: sclk
++      - const: pka
++
++  resets:
++    minItems: 5
++
++  reset-names:
++    items:
++      - const: core
++      - const: a
++      - const: h
++      - const: rng
++      - const: pka
++
++required:
++  - compatible
++  - reg
++  - interrupts
++  - clocks
++  - clock-names
++  - resets
++  - reset-names
++
++additionalProperties: false
++
++examples:
++  - |
++    #include <dt-bindings/interrupt-controller/arm-gic.h>
++    #include <dt-bindings/clock/rk3568-cru.h>
++    crypto@fe380000 {
++      compatible = "rockchip,rk3588-crypto";
++      reg = <0xfe380000 0x4000>;
++      interrupts = <GIC_SPI 4 IRQ_TYPE_LEVEL_HIGH>;
++      clocks = <&cru ACLK_CRYPTO_NS>, <&cru HCLK_CRYPTO_NS>,
++               <&cru CLK_CRYPTO_NS_CORE>, <&cru CLK_CRYPTO_NS_PKA>;
++      clock-names = "aclk", "hclk", "sclk", "pka";
++      resets = <&cru SRST_CRYPTO_NS_CORE>, <&cru SRST_A_CRYPTO_NS>,
++               <&cru SRST_H_CRYPTO_NS>, <&cru SRST_CRYPTO_NS_RNG>,
++               <&cru SRST_CRYPTO_NS_PKA>;
++      reset-names = "core", "a", "h", "rng", "pka";
++    };
diff --git a/target/linux/rockchip/patches-6.1/323-MAINTAINERS-add-new-dt-binding-doc-to-the-right-entr.patch b/target/linux/rockchip/patches-6.1/323-MAINTAINERS-add-new-dt-binding-doc-to-the-right-entr.patch
new file mode 100644
index 0000000000..dfe21e4f9e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/323-MAINTAINERS-add-new-dt-binding-doc-to-the-right-entr.patch
@@ -0,0 +1,24 @@
+From 0f612f7920922d78f2e0aea6a8d0fe11bebf0653 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 08:00:46 +0000
+Subject: [PATCH 323/383] MAINTAINERS: add new dt-binding doc to the right
+ entry
+
+Rockchip crypto driver have a new file to be added.
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ MAINTAINERS | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/MAINTAINERS
++++ b/MAINTAINERS
+@@ -17802,6 +17802,7 @@ M:	Corentin Labbe <clabbe@baylibre.com>
+ L:	linux-crypto@vger.kernel.org
+ S:	Maintained
+ F:	Documentation/devicetree/bindings/crypto/rockchip,rk3288-crypto.yaml
++F:	Documentation/devicetree/bindings/crypto/rockchip,rk3588-crypto.yaml
+ F:	drivers/crypto/rockchip/
+ 
+ ROCKCHIP I2S TDM DRIVER
diff --git a/target/linux/rockchip/patches-6.1/324-crypto-rockchip-support-the-new-crypto-IP-for-rk3568.patch b/target/linux/rockchip/patches-6.1/324-crypto-rockchip-support-the-new-crypto-IP-for-rk3568.patch
new file mode 100644
index 0000000000..7fe0f331d9
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/324-crypto-rockchip-support-the-new-crypto-IP-for-rk3568.patch
@@ -0,0 +1,1634 @@
+From aaff60293f2a9456aa4a1ad195abf6038af61cdd Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 08:00:47 +0000
+Subject: [PATCH 324/383] crypto: rockchip: support the new crypto IP for
+ rk3568/rk3588
+
+Rockchip rk3568 and rk3588 have a common crypto offloader IP.
+This driver adds support for it.
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/Kconfig               |  28 +
+ drivers/crypto/rockchip/Makefile              |   5 +
+ drivers/crypto/rockchip/rk3588_crypto.c       | 646 ++++++++++++++++++
+ drivers/crypto/rockchip/rk3588_crypto.h       | 221 ++++++
+ drivers/crypto/rockchip/rk3588_crypto_ahash.c | 346 ++++++++++
+ .../crypto/rockchip/rk3588_crypto_skcipher.c  | 340 +++++++++
+ 6 files changed, 1586 insertions(+)
+ create mode 100644 drivers/crypto/rockchip/rk3588_crypto.c
+ create mode 100644 drivers/crypto/rockchip/rk3588_crypto.h
+ create mode 100644 drivers/crypto/rockchip/rk3588_crypto_ahash.c
+ create mode 100644 drivers/crypto/rockchip/rk3588_crypto_skcipher.c
+
+--- a/drivers/crypto/rockchip/Kconfig
++++ b/drivers/crypto/rockchip/Kconfig
+@@ -26,3 +26,31 @@ config CRYPTO_DEV_ROCKCHIP_DEBUG
+ 	  Say y to enable Rockchip crypto debug stats.
+ 	  This will create /sys/kernel/debug/rk3288_crypto/stats for displaying
+ 	  the number of requests per algorithm and other internal stats.
++
++config CRYPTO_DEV_ROCKCHIP2
++	tristate "Rockchip's cryptographic offloader V2"
++	depends on OF && ARCH_ROCKCHIP
++	depends on PM
++	select CRYPTO_ECB
++	select CRYPTO_CBC
++	select CRYPTO_AES
++	select CRYPTO_MD5
++	select CRYPTO_SHA1
++	select CRYPTO_SHA256
++	select CRYPTO_SM3
++	select CRYPTO_HASH
++	select CRYPTO_SKCIPHER
++	select CRYPTO_ENGINE
++
++	help
++	  This driver interfaces with the hardware crypto offloader present
++	  on RK3568 and RK3588.
++
++config CRYPTO_DEV_ROCKCHIP2_DEBUG
++	bool "Enable Rockchip V2 crypto stats"
++	depends on CRYPTO_DEV_ROCKCHIP2
++	depends on DEBUG_FS
++	help
++	  Say y to enable Rockchip crypto debug stats.
++	  This will create /sys/kernel/debug/rk3588_crypto/stats for displaying
++	  the number of requests per algorithm and other internal stats.
+--- a/drivers/crypto/rockchip/Makefile
++++ b/drivers/crypto/rockchip/Makefile
+@@ -3,3 +3,8 @@ obj-$(CONFIG_CRYPTO_DEV_ROCKCHIP) += rk_
+ rk_crypto-objs := rk3288_crypto.o \
+ 		  rk3288_crypto_skcipher.o \
+ 		  rk3288_crypto_ahash.o
++
++obj-$(CONFIG_CRYPTO_DEV_ROCKCHIP2) += rk_crypto2.o
++rk_crypto2-objs := rk3588_crypto.o \
++		  rk3588_crypto_skcipher.o \
++		  rk3588_crypto_ahash.o
+--- /dev/null
++++ b/drivers/crypto/rockchip/rk3588_crypto.c
+@@ -0,0 +1,646 @@
++// SPDX-License-Identifier: GPL-2.0
++/*
++ * hardware cryptographic offloader for rk3568/rk3588 SoC
++ *
++ * Copyright (c) 2022, Corentin Labbe <clabbe@baylibre.com>
++ */
++
++#include "rk3588_crypto.h"
++#include <linux/clk.h>
++#include <linux/crypto.h>
++#include <linux/dma-mapping.h>
++#include <linux/module.h>
++#include <linux/platform_device.h>
++#include <linux/of.h>
++#include <linux/of_device.h>
++#include <linux/reset.h>
++
++static struct rockchip_ip rocklist = {
++	.dev_list = LIST_HEAD_INIT(rocklist.dev_list),
++	.lock = __SPIN_LOCK_UNLOCKED(rocklist.lock),
++};
++
++struct rk_crypto_dev *get_rk_crypto(void)
++{
++	struct rk_crypto_dev *first;
++
++	spin_lock(&rocklist.lock);
++	first = list_first_entry_or_null(&rocklist.dev_list,
++					 struct rk_crypto_dev, list);
++	list_rotate_left(&rocklist.dev_list);
++	spin_unlock(&rocklist.lock);
++	return first;
++}
++
++static const struct rk_variant rk3568_variant = {
++	.num_clks = 4,
++};
++
++static const struct rk_variant rk3588_variant = {
++	.num_clks = 4,
++};
++
++static int rk_crypto_get_clks(struct rk_crypto_dev *dev)
++{
++	int i, j, err;
++	unsigned long cr;
++
++	dev->num_clks = devm_clk_bulk_get_all(dev->dev, &dev->clks);
++	if (dev->num_clks < dev->variant->num_clks) {
++		dev_err(dev->dev, "Missing clocks, got %d instead of %d\n",
++			dev->num_clks, dev->variant->num_clks);
++		return -EINVAL;
++	}
++
++	for (i = 0; i < dev->num_clks; i++) {
++		cr = clk_get_rate(dev->clks[i].clk);
++		for (j = 0; j < ARRAY_SIZE(dev->variant->rkclks); j++) {
++			if (dev->variant->rkclks[j].max == 0)
++				continue;
++			if (strcmp(dev->variant->rkclks[j].name, dev->clks[i].id))
++				continue;
++			if (cr > dev->variant->rkclks[j].max) {
++				err = clk_set_rate(dev->clks[i].clk,
++						   dev->variant->rkclks[j].max);
++				if (err)
++					dev_err(dev->dev, "Fail downclocking %s from %lu to %lu\n",
++						dev->variant->rkclks[j].name, cr,
++						dev->variant->rkclks[j].max);
++				else
++					dev_info(dev->dev, "Downclocking %s from %lu to %lu\n",
++						 dev->variant->rkclks[j].name, cr,
++						 dev->variant->rkclks[j].max);
++			}
++		}
++	}
++	return 0;
++}
++
++static int rk_crypto_enable_clk(struct rk_crypto_dev *dev)
++{
++	int err;
++
++	err = clk_bulk_prepare_enable(dev->num_clks, dev->clks);
++	if (err)
++		dev_err(dev->dev, "Could not enable clock clks\n");
++
++	return err;
++}
++
++static void rk_crypto_disable_clk(struct rk_crypto_dev *dev)
++{
++	clk_bulk_disable_unprepare(dev->num_clks, dev->clks);
++}
++
++/*
++ * Power management strategy: The device is suspended until a request
++ * is handled. For avoiding suspend/resume yoyo, the autosuspend is set to 2s.
++ */
++static int rk_crypto_pm_suspend(struct device *dev)
++{
++	struct rk_crypto_dev *rkdev = dev_get_drvdata(dev);
++
++	rk_crypto_disable_clk(rkdev);
++	reset_control_assert(rkdev->rst);
++
++	return 0;
++}
++
++static int rk_crypto_pm_resume(struct device *dev)
++{
++	struct rk_crypto_dev *rkdev = dev_get_drvdata(dev);
++	int ret;
++
++	ret = rk_crypto_enable_clk(rkdev);
++	if (ret)
++		return ret;
++
++	reset_control_deassert(rkdev->rst);
++	return 0;
++}
++
++static const struct dev_pm_ops rk_crypto_pm_ops = {
++	SET_RUNTIME_PM_OPS(rk_crypto_pm_suspend, rk_crypto_pm_resume, NULL)
++};
++
++static int rk_crypto_pm_init(struct rk_crypto_dev *rkdev)
++{
++	int err;
++
++	pm_runtime_use_autosuspend(rkdev->dev);
++	pm_runtime_set_autosuspend_delay(rkdev->dev, 2000);
++
++	err = pm_runtime_set_suspended(rkdev->dev);
++	if (err)
++		return err;
++	pm_runtime_enable(rkdev->dev);
++	return err;
++}
++
++static void rk_crypto_pm_exit(struct rk_crypto_dev *rkdev)
++{
++	pm_runtime_disable(rkdev->dev);
++}
++
++static irqreturn_t rk_crypto_irq_handle(int irq, void *dev_id)
++{
++	struct rk_crypto_dev *rkc  = platform_get_drvdata(dev_id);
++	u32 v;
++
++	v = readl(rkc->reg + RK_CRYPTO_DMA_INT_ST);
++	writel(v, rkc->reg + RK_CRYPTO_DMA_INT_ST);
++
++	rkc->status = 1;
++	if (v & 0xF8) {
++		dev_warn(rkc->dev, "DMA Error\n");
++		rkc->status = 0;
++	}
++	complete(&rkc->complete);
++
++	return IRQ_HANDLED;
++}
++
++static struct rk_crypto_template rk_cipher_algs[] = {
++	{
++		.type = CRYPTO_ALG_TYPE_SKCIPHER,
++		.alg.skcipher = {
++			.base.cra_name		= "ecb(aes)",
++			.base.cra_driver_name	= "ecb-aes-rk2",
++			.base.cra_priority	= 300,
++			.base.cra_flags		= CRYPTO_ALG_ASYNC | CRYPTO_ALG_NEED_FALLBACK,
++			.base.cra_blocksize	= AES_BLOCK_SIZE,
++			.base.cra_ctxsize	= sizeof(struct rk_cipher_ctx),
++			.base.cra_alignmask	= 0x0f,
++			.base.cra_module	= THIS_MODULE,
++
++			.init			= rk_cipher_tfm_init,
++			.exit			= rk_cipher_tfm_exit,
++			.min_keysize		= AES_MIN_KEY_SIZE,
++			.max_keysize		= AES_MAX_KEY_SIZE,
++			.setkey			= rk_aes_setkey,
++			.encrypt		= rk_aes_ecb_encrypt,
++			.decrypt		= rk_aes_ecb_decrypt,
++		}
++	},
++	{
++		.type = CRYPTO_ALG_TYPE_SKCIPHER,
++		.alg.skcipher = {
++			.base.cra_name		= "cbc(aes)",
++			.base.cra_driver_name	= "cbc-aes-rk2",
++			.base.cra_priority	= 300,
++			.base.cra_flags		= CRYPTO_ALG_ASYNC | CRYPTO_ALG_NEED_FALLBACK,
++			.base.cra_blocksize	= AES_BLOCK_SIZE,
++			.base.cra_ctxsize	= sizeof(struct rk_cipher_ctx),
++			.base.cra_alignmask	= 0x0f,
++			.base.cra_module	= THIS_MODULE,
++
++			.init			= rk_cipher_tfm_init,
++			.exit			= rk_cipher_tfm_exit,
++			.min_keysize		= AES_MIN_KEY_SIZE,
++			.max_keysize		= AES_MAX_KEY_SIZE,
++			.ivsize			= AES_BLOCK_SIZE,
++			.setkey			= rk_aes_setkey,
++			.encrypt		= rk_aes_cbc_encrypt,
++			.decrypt		= rk_aes_cbc_decrypt,
++		}
++	},
++	{
++		.type = CRYPTO_ALG_TYPE_AHASH,
++		.rk_mode = RK_CRYPTO_MD5,
++		.alg.hash = {
++			.init = rk_ahash_init,
++			.update = rk_ahash_update,
++			.final = rk_ahash_final,
++			.finup = rk_ahash_finup,
++			.export = rk_ahash_export,
++			.import = rk_ahash_import,
++			.digest = rk_ahash_digest,
++			.halg = {
++				.digestsize = MD5_DIGEST_SIZE,
++				.statesize = sizeof(struct md5_state),
++				.base = {
++					.cra_name = "md5",
++					.cra_driver_name = "rk2-md5",
++					.cra_priority = 300,
++					.cra_flags = CRYPTO_ALG_ASYNC |
++						CRYPTO_ALG_NEED_FALLBACK,
++					.cra_blocksize = SHA1_BLOCK_SIZE,
++					.cra_ctxsize = sizeof(struct rk_ahash_ctx),
++					.cra_alignmask = 3,
++					.cra_init = rk_cra_hash_init,
++					.cra_exit = rk_cra_hash_exit,
++					.cra_module = THIS_MODULE,
++				}
++			}
++		}
++	},
++	{
++		.type = CRYPTO_ALG_TYPE_AHASH,
++		.rk_mode = RK_CRYPTO_SHA1,
++		.alg.hash = {
++			.init = rk_ahash_init,
++			.update = rk_ahash_update,
++			.final = rk_ahash_final,
++			.finup = rk_ahash_finup,
++			.export = rk_ahash_export,
++			.import = rk_ahash_import,
++			.digest = rk_ahash_digest,
++			.halg = {
++				.digestsize = SHA1_DIGEST_SIZE,
++				.statesize = sizeof(struct sha1_state),
++				.base = {
++					.cra_name = "sha1",
++					.cra_driver_name = "rk2-sha1",
++					.cra_priority = 300,
++					.cra_flags = CRYPTO_ALG_ASYNC |
++						CRYPTO_ALG_NEED_FALLBACK,
++					.cra_blocksize = SHA1_BLOCK_SIZE,
++					.cra_ctxsize = sizeof(struct rk_ahash_ctx),
++					.cra_alignmask = 3,
++					.cra_init = rk_cra_hash_init,
++					.cra_exit = rk_cra_hash_exit,
++					.cra_module = THIS_MODULE,
++				}
++			}
++		}
++	},
++	{
++		.type = CRYPTO_ALG_TYPE_AHASH,
++		.rk_mode = RK_CRYPTO_SHA256,
++		.alg.hash = {
++			.init = rk_ahash_init,
++			.update = rk_ahash_update,
++			.final = rk_ahash_final,
++			.finup = rk_ahash_finup,
++			.export = rk_ahash_export,
++			.import = rk_ahash_import,
++			.digest = rk_ahash_digest,
++			.halg = {
++				.digestsize = SHA256_DIGEST_SIZE,
++				.statesize = sizeof(struct sha256_state),
++				.base = {
++					.cra_name = "sha256",
++					.cra_driver_name = "rk2-sha256",
++					.cra_priority = 300,
++					.cra_flags = CRYPTO_ALG_ASYNC |
++						CRYPTO_ALG_NEED_FALLBACK,
++					.cra_blocksize = SHA256_BLOCK_SIZE,
++					.cra_ctxsize = sizeof(struct rk_ahash_ctx),
++					.cra_alignmask = 3,
++					.cra_init = rk_cra_hash_init,
++					.cra_exit = rk_cra_hash_exit,
++					.cra_module = THIS_MODULE,
++				}
++			}
++		}
++	},
++	{
++		.type = CRYPTO_ALG_TYPE_AHASH,
++		.rk_mode = RK_CRYPTO_SHA384,
++		.alg.hash = {
++			.init = rk_ahash_init,
++			.update = rk_ahash_update,
++			.final = rk_ahash_final,
++			.finup = rk_ahash_finup,
++			.export = rk_ahash_export,
++			.import = rk_ahash_import,
++			.digest = rk_ahash_digest,
++			.halg = {
++				.digestsize = SHA384_DIGEST_SIZE,
++				.statesize = sizeof(struct sha512_state),
++				.base = {
++					.cra_name = "sha384",
++					.cra_driver_name = "rk2-sha384",
++					.cra_priority = 300,
++					.cra_flags = CRYPTO_ALG_ASYNC |
++						CRYPTO_ALG_NEED_FALLBACK,
++					.cra_blocksize = SHA384_BLOCK_SIZE,
++					.cra_ctxsize = sizeof(struct rk_ahash_ctx),
++					.cra_alignmask = 3,
++					.cra_init = rk_cra_hash_init,
++					.cra_exit = rk_cra_hash_exit,
++					.cra_module = THIS_MODULE,
++				}
++			}
++		}
++	},
++	{
++		.type = CRYPTO_ALG_TYPE_AHASH,
++		.rk_mode = RK_CRYPTO_SHA512,
++		.alg.hash = {
++			.init = rk_ahash_init,
++			.update = rk_ahash_update,
++			.final = rk_ahash_final,
++			.finup = rk_ahash_finup,
++			.export = rk_ahash_export,
++			.import = rk_ahash_import,
++			.digest = rk_ahash_digest,
++			.halg = {
++				.digestsize = SHA512_DIGEST_SIZE,
++				.statesize = sizeof(struct sha512_state),
++				.base = {
++					.cra_name = "sha512",
++					.cra_driver_name = "rk2-sha512",
++					.cra_priority = 300,
++					.cra_flags = CRYPTO_ALG_ASYNC |
++						CRYPTO_ALG_NEED_FALLBACK,
++					.cra_blocksize = SHA512_BLOCK_SIZE,
++					.cra_ctxsize = sizeof(struct rk_ahash_ctx),
++					.cra_alignmask = 3,
++					.cra_init = rk_cra_hash_init,
++					.cra_exit = rk_cra_hash_exit,
++					.cra_module = THIS_MODULE,
++				}
++			}
++		}
++	},
++	{
++		.type = CRYPTO_ALG_TYPE_AHASH,
++		.rk_mode = RK_CRYPTO_SM3,
++		.alg.hash = {
++			.init = rk_ahash_init,
++			.update = rk_ahash_update,
++			.final = rk_ahash_final,
++			.finup = rk_ahash_finup,
++			.export = rk_ahash_export,
++			.import = rk_ahash_import,
++			.digest = rk_ahash_digest,
++			.halg = {
++				.digestsize = SM3_DIGEST_SIZE,
++				.statesize = sizeof(struct sm3_state),
++				.base = {
++					.cra_name = "sm3",
++					.cra_driver_name = "rk2-sm3",
++					.cra_priority = 300,
++					.cra_flags = CRYPTO_ALG_ASYNC |
++						CRYPTO_ALG_NEED_FALLBACK,
++					.cra_blocksize = SM3_BLOCK_SIZE,
++					.cra_ctxsize = sizeof(struct rk_ahash_ctx),
++					.cra_alignmask = 3,
++					.cra_init = rk_cra_hash_init,
++					.cra_exit = rk_cra_hash_exit,
++					.cra_module = THIS_MODULE,
++				}
++			}
++		}
++	},
++};
++
++#ifdef CONFIG_CRYPTO_DEV_ROCKCHIP2_DEBUG
++static int rk_crypto_debugfs_show(struct seq_file *seq, void *v)
++{
++	struct rk_crypto_dev *dd;
++	unsigned int i;
++
++	spin_lock(&rocklist.lock);
++	list_for_each_entry(dd, &rocklist.dev_list, list) {
++		seq_printf(seq, "%s %s requests: %lu\n",
++			   dev_driver_string(dd->dev), dev_name(dd->dev),
++			   dd->nreq);
++	}
++	spin_unlock(&rocklist.lock);
++
++	for (i = 0; i < ARRAY_SIZE(rk_cipher_algs); i++) {
++		if (!rk_cipher_algs[i].dev)
++			continue;
++		switch (rk_cipher_algs[i].type) {
++		case CRYPTO_ALG_TYPE_SKCIPHER:
++			seq_printf(seq, "%s %s reqs=%lu fallback=%lu\n",
++				   rk_cipher_algs[i].alg.skcipher.base.cra_driver_name,
++				   rk_cipher_algs[i].alg.skcipher.base.cra_name,
++				   rk_cipher_algs[i].stat_req, rk_cipher_algs[i].stat_fb);
++			seq_printf(seq, "\tfallback due to length: %lu\n",
++				   rk_cipher_algs[i].stat_fb_len);
++			seq_printf(seq, "\tfallback due to alignment: %lu\n",
++				   rk_cipher_algs[i].stat_fb_align);
++			seq_printf(seq, "\tfallback due to SGs: %lu\n",
++				   rk_cipher_algs[i].stat_fb_sgdiff);
++			break;
++		case CRYPTO_ALG_TYPE_AHASH:
++			seq_printf(seq, "%s %s reqs=%lu fallback=%lu\n",
++				   rk_cipher_algs[i].alg.hash.halg.base.cra_driver_name,
++				   rk_cipher_algs[i].alg.hash.halg.base.cra_name,
++				   rk_cipher_algs[i].stat_req, rk_cipher_algs[i].stat_fb);
++			break;
++		}
++	}
++	return 0;
++}
++
++DEFINE_SHOW_ATTRIBUTE(rk_crypto_debugfs);
++#endif
++
++static void register_debugfs(struct rk_crypto_dev *crypto_dev)
++{
++#ifdef CONFIG_CRYPTO_DEV_ROCKCHIP2_DEBUG
++	/* Ignore error of debugfs */
++	rocklist.dbgfs_dir = debugfs_create_dir("rk3588_crypto", NULL);
++	rocklist.dbgfs_stats = debugfs_create_file("stats", 0444,
++						   rocklist.dbgfs_dir,
++						   &rocklist,
++						   &rk_crypto_debugfs_fops);
++#endif
++}
++
++static int rk_crypto_register(struct rk_crypto_dev *rkc)
++{
++	unsigned int i, k;
++	int err = 0;
++
++	for (i = 0; i < ARRAY_SIZE(rk_cipher_algs); i++) {
++		rk_cipher_algs[i].dev = rkc;
++		switch (rk_cipher_algs[i].type) {
++		case CRYPTO_ALG_TYPE_SKCIPHER:
++			dev_info(rkc->dev, "Register %s as %s\n",
++				 rk_cipher_algs[i].alg.skcipher.base.cra_name,
++				 rk_cipher_algs[i].alg.skcipher.base.cra_driver_name);
++			err = crypto_register_skcipher(&rk_cipher_algs[i].alg.skcipher);
++			break;
++		case CRYPTO_ALG_TYPE_AHASH:
++			dev_info(rkc->dev, "Register %s as %s\n",
++				 rk_cipher_algs[i].alg.hash.halg.base.cra_name,
++				 rk_cipher_algs[i].alg.hash.halg.base.cra_driver_name);
++			err = crypto_register_ahash(&rk_cipher_algs[i].alg.hash);
++			break;
++		default:
++			dev_err(rkc->dev, "unknown algorithm\n");
++		}
++		if (err)
++			goto err_cipher_algs;
++	}
++	return 0;
++
++err_cipher_algs:
++	for (k = 0; k < i; k++) {
++		if (rk_cipher_algs[i].type == CRYPTO_ALG_TYPE_SKCIPHER)
++			crypto_unregister_skcipher(&rk_cipher_algs[k].alg.skcipher);
++		else
++			crypto_unregister_ahash(&rk_cipher_algs[i].alg.hash);
++	}
++	return err;
++}
++
++static void rk_crypto_unregister(void)
++{
++	unsigned int i;
++
++	for (i = 0; i < ARRAY_SIZE(rk_cipher_algs); i++) {
++		if (rk_cipher_algs[i].type == CRYPTO_ALG_TYPE_SKCIPHER)
++			crypto_unregister_skcipher(&rk_cipher_algs[i].alg.skcipher);
++		else
++			crypto_unregister_ahash(&rk_cipher_algs[i].alg.hash);
++	}
++}
++
++static const struct of_device_id crypto_of_id_table[] = {
++	{ .compatible = "rockchip,rk3568-crypto",
++	  .data = &rk3568_variant,
++	},
++	{ .compatible = "rockchip,rk3588-crypto",
++	  .data = &rk3588_variant,
++	},
++	{}
++};
++MODULE_DEVICE_TABLE(of, crypto_of_id_table);
++
++static int rk_crypto_probe(struct platform_device *pdev)
++{
++	struct device *dev = &pdev->dev;
++	struct rk_crypto_dev *rkc, *first;
++	int err = 0;
++
++	rkc = devm_kzalloc(&pdev->dev, sizeof(*rkc), GFP_KERNEL);
++	if (!rkc) {
++		err = -ENOMEM;
++		goto err_crypto;
++	}
++
++	rkc->dev = &pdev->dev;
++	platform_set_drvdata(pdev, rkc);
++
++	rkc->variant = of_device_get_match_data(&pdev->dev);
++	if (!rkc->variant) {
++		dev_err(&pdev->dev, "Missing variant\n");
++		return -EINVAL;
++	}
++
++	rkc->rst = devm_reset_control_array_get_exclusive(dev);
++	if (IS_ERR(rkc->rst)) {
++		err = PTR_ERR(rkc->rst);
++		goto err_crypto;
++	}
++
++	rkc->tl = dma_alloc_coherent(rkc->dev,
++				     sizeof(struct rk_crypto_lli) * MAX_LLI,
++				     &rkc->t_phy, GFP_KERNEL);
++	if (!rkc->tl) {
++		dev_err(rkc->dev, "Cannot get DMA memory for task\n");
++		err = -ENOMEM;
++		goto err_crypto;
++	}
++
++	reset_control_assert(rkc->rst);
++	usleep_range(10, 20);
++	reset_control_deassert(rkc->rst);
++
++	rkc->reg = devm_platform_ioremap_resource(pdev, 0);
++	if (IS_ERR(rkc->reg)) {
++		err = PTR_ERR(rkc->reg);
++		goto err_crypto;
++	}
++
++	err = rk_crypto_get_clks(rkc);
++	if (err)
++		goto err_crypto;
++
++	rkc->irq = platform_get_irq(pdev, 0);
++	if (rkc->irq < 0) {
++		dev_err(&pdev->dev, "control Interrupt is not available.\n");
++		err = rkc->irq;
++		goto err_crypto;
++	}
++
++	err = devm_request_irq(&pdev->dev, rkc->irq,
++			       rk_crypto_irq_handle, IRQF_SHARED,
++			       "rk-crypto", pdev);
++
++	if (err) {
++		dev_err(&pdev->dev, "irq request failed.\n");
++		goto err_crypto;
++	}
++
++	rkc->engine = crypto_engine_alloc_init(&pdev->dev, true);
++	crypto_engine_start(rkc->engine);
++	init_completion(&rkc->complete);
++
++	err = rk_crypto_pm_init(rkc);
++	if (err)
++		goto err_pm;
++
++	err = pm_runtime_resume_and_get(&pdev->dev);
++
++	spin_lock(&rocklist.lock);
++	first = list_first_entry_or_null(&rocklist.dev_list,
++					 struct rk_crypto_dev, list);
++	list_add_tail(&rkc->list, &rocklist.dev_list);
++	spin_unlock(&rocklist.lock);
++
++	if (!first) {
++		dev_info(dev, "Registers crypto algos\n");
++		err = rk_crypto_register(rkc);
++		if (err) {
++			dev_err(dev, "Fail to register crypto algorithms");
++			goto err_register_alg;
++		}
++
++		register_debugfs(rkc);
++	}
++
++	return 0;
++
++err_register_alg:
++	rk_crypto_pm_exit(rkc);
++err_pm:
++	crypto_engine_exit(rkc->engine);
++err_crypto:
++	dev_err(dev, "Crypto Accelerator not successfully registered\n");
++	return err;
++}
++
++static int rk_crypto_remove(struct platform_device *pdev)
++{
++	struct rk_crypto_dev *crypto_tmp = platform_get_drvdata(pdev);
++	struct rk_crypto_dev *first;
++
++	spin_lock_bh(&rocklist.lock);
++	list_del(&crypto_tmp->list);
++	first = list_first_entry_or_null(&rocklist.dev_list,
++					 struct rk_crypto_dev, list);
++	spin_unlock_bh(&rocklist.lock);
++
++	if (!first) {
++#ifdef CONFIG_CRYPTO_DEV_ROCKCHIP2_DEBUG
++		debugfs_remove_recursive(rocklist.dbgfs_dir);
++#endif
++		rk_crypto_unregister();
++	}
++	rk_crypto_pm_exit(crypto_tmp);
++	crypto_engine_exit(crypto_tmp->engine);
++	return 0;
++}
++
++static struct platform_driver crypto_driver = {
++	.probe		= rk_crypto_probe,
++	.remove		= rk_crypto_remove,
++	.driver		= {
++		.name	= "rk3588-crypto",
++		.pm		= &rk_crypto_pm_ops,
++		.of_match_table	= crypto_of_id_table,
++	},
++};
++
++module_platform_driver(crypto_driver);
++
++MODULE_DESCRIPTION("Rockchip Crypto Engine cryptographic offloader");
++MODULE_LICENSE("GPL");
++MODULE_AUTHOR("Corentin Labbe <clabbe@baylibre.com>");
+--- /dev/null
++++ b/drivers/crypto/rockchip/rk3588_crypto.h
+@@ -0,0 +1,221 @@
++/* SPDX-License-Identifier: GPL-2.0 */
++
++#include <crypto/aes.h>
++#include <crypto/engine.h>
++#include <crypto/internal/des.h>
++#include <crypto/internal/hash.h>
++#include <crypto/internal/skcipher.h>
++#include <crypto/algapi.h>
++#include <crypto/md5.h>
++#include <crypto/sha1.h>
++#include <crypto/sha2.h>
++#include <crypto/sm3.h>
++#include <linux/dma-mapping.h>
++#include <linux/interrupt.h>
++#include <linux/debugfs.h>
++#include <linux/delay.h>
++#include <linux/pm_runtime.h>
++#include <linux/scatterlist.h>
++
++#define RK_CRYPTO_CLK_CTL	0x0000
++#define RK_CRYPTO_RST_CTL	0x0004
++
++#define RK_CRYPTO_DMA_INT_EN	0x0008
++/* values for RK_CRYPTO_DMA_INT_EN */
++#define RK_CRYPTO_DMA_INT_LISTDONE	BIT(0)
++
++#define RK_CRYPTO_DMA_INT_ST	0x000C
++/* values in RK_CRYPTO_DMA_INT_ST are the same than in RK_CRYPTO_DMA_INT_EN */
++
++#define RK_CRYPTO_DMA_CTL	0x0010
++#define RK_CRYPTO_DMA_CTL_START	BIT(0)
++
++#define RK_CRYPTO_DMA_LLI_ADDR	0x0014
++
++#define RK_CRYPTO_FIFO_CTL	0x0040
++
++#define RK_CRYPTO_BC_CTL	0x0044
++#define RK_CRYPTO_AES		(0 << 8)
++#define RK_CRYPTO_MODE_ECB	(0 << 4)
++#define RK_CRYPTO_MODE_CBC	(1 << 4)
++
++#define RK_CRYPTO_HASH_CTL	0x0048
++#define RK_CRYPTO_HW_PAD	BIT(2)
++#define RK_CRYPTO_SHA1		(0 << 4)
++#define RK_CRYPTO_MD5		(1 << 4)
++#define RK_CRYPTO_SHA224	(3 << 4)
++#define RK_CRYPTO_SHA256	(2 << 4)
++#define RK_CRYPTO_SHA384	(9 << 4)
++#define RK_CRYPTO_SHA512	(8 << 4)
++#define RK_CRYPTO_SM3		(4 << 4)
++
++#define RK_CRYPTO_AES_ECB_MODE		(RK_CRYPTO_AES | RK_CRYPTO_MODE_ECB)
++#define RK_CRYPTO_AES_CBC_MODE		(RK_CRYPTO_AES | RK_CRYPTO_MODE_CBC)
++#define RK_CRYPTO_AES_CTR_MODE		3
++#define RK_CRYPTO_AES_128BIT_key	(0 << 2)
++#define RK_CRYPTO_AES_192BIT_key	(1 << 2)
++#define RK_CRYPTO_AES_256BIT_key	(2 << 2)
++
++#define RK_CRYPTO_DEC			BIT(1)
++#define RK_CRYPTO_ENABLE		BIT(0)
++
++#define RK_CRYPTO_CH0_IV_0		0x0100
++
++#define RK_CRYPTO_KEY0			0x0180
++#define RK_CRYPTO_KEY1			0x0184
++#define RK_CRYPTO_KEY2			0x0188
++#define RK_CRYPTO_KEY3			0x018C
++#define RK_CRYPTO_KEY4			0x0190
++#define RK_CRYPTO_KEY5			0x0194
++#define RK_CRYPTO_KEY6			0x0198
++#define RK_CRYPTO_KEY7			0x019C
++
++#define RK_CRYPTO_CH0_PC_LEN_0		0x0280
++
++#define RK_CRYPTO_CH0_IV_LEN		0x0300
++
++#define RK_CRYPTO_HASH_DOUT_0	0x03A0
++#define RK_CRYPTO_HASH_VALID	0x03E4
++
++#define CRYPTO_AES_VERSION	0x0680
++#define CRYPTO_DES_VERSION	0x0684
++#define CRYPTO_SM4_VERSION	0x0688
++#define CRYPTO_HASH_VERSION	0x068C
++#define CRYPTO_HMAC_VERSION	0x0690
++#define CRYPTO_RNG_VERSION	0x0694
++#define CRYPTO_PKA_VERSION	0x0698
++#define CRYPTO_CRYPTO_VERSION	0x06F0
++
++#define RK_LLI_DMA_CTRL_SRC_INT		BIT(10)
++#define RK_LLI_DMA_CTRL_DST_INT		BIT(9)
++#define RK_LLI_DMA_CTRL_LIST_INT	BIT(8)
++#define RK_LLI_DMA_CTRL_LAST		BIT(0)
++
++#define RK_LLI_STRING_LAST		BIT(2)
++#define RK_LLI_STRING_FIRST		BIT(1)
++#define RK_LLI_CIPHER_START		BIT(0)
++
++#define RK_MAX_CLKS 4
++
++/* there are no hw limit, but we need to choose a maximum of descriptor to allocate */
++#define MAX_LLI 20
++
++struct rk_crypto_lli {
++	__le32 src_addr;
++	__le32 src_len;
++	__le32 dst_addr;
++	__le32 dst_len;
++	__le32 user;
++	__le32 iv;
++	__le32 dma_ctrl;
++	__le32 next;
++};
++
++/*
++ * struct rockchip_ip - struct for managing a list of RK crypto instance
++ * @dev_list:		Used for doing a list of rk_crypto_dev
++ * @lock:		Control access to dev_list
++ * @dbgfs_dir:		Debugfs dentry for statistic directory
++ * @dbgfs_stats:	Debugfs dentry for statistic counters
++ */
++struct rockchip_ip {
++	struct list_head	dev_list;
++	spinlock_t		lock; /* Control access to dev_list */
++	struct dentry		*dbgfs_dir;
++	struct dentry		*dbgfs_stats;
++};
++
++struct rk_clks {
++	const char *name;
++	unsigned long max;
++};
++
++struct rk_variant {
++	int num_clks;
++	struct rk_clks rkclks[RK_MAX_CLKS];
++};
++
++struct rk_crypto_dev {
++	struct list_head		list;
++	struct device			*dev;
++	struct clk_bulk_data		*clks;
++	int				num_clks;
++	struct reset_control		*rst;
++	void __iomem			*reg;
++	int				irq;
++	const struct rk_variant *variant;
++	unsigned long nreq;
++	struct crypto_engine *engine;
++	struct completion complete;
++	int status;
++	struct rk_crypto_lli *tl;
++	dma_addr_t t_phy;
++};
++
++/* the private variable of hash */
++struct rk_ahash_ctx {
++	struct crypto_engine_ctx enginectx;
++	/* for fallback */
++	struct crypto_ahash		*fallback_tfm;
++};
++
++/* the private variable of hash for fallback */
++struct rk_ahash_rctx {
++	struct rk_crypto_dev		*dev;
++	struct ahash_request		fallback_req;
++	u32				mode;
++	int nrsgs;
++};
++
++/* the private variable of cipher */
++struct rk_cipher_ctx {
++	struct crypto_engine_ctx enginectx;
++	unsigned int			keylen;
++	u8				key[AES_MAX_KEY_SIZE];
++	u8				iv[AES_BLOCK_SIZE];
++	struct crypto_skcipher *fallback_tfm;
++};
++
++struct rk_cipher_rctx {
++	struct rk_crypto_dev		*dev;
++	u8 backup_iv[AES_BLOCK_SIZE];
++	u32				mode;
++	struct skcipher_request fallback_req;   // keep at the end
++};
++
++struct rk_crypto_template {
++	u32 type;
++	u32 rk_mode;
++	struct rk_crypto_dev           *dev;
++	union {
++		struct skcipher_alg	skcipher;
++		struct ahash_alg	hash;
++	} alg;
++	unsigned long stat_req;
++	unsigned long stat_fb;
++	unsigned long stat_fb_len;
++	unsigned long stat_fb_sglen;
++	unsigned long stat_fb_align;
++	unsigned long stat_fb_sgdiff;
++};
++
++struct rk_crypto_dev *get_rk_crypto(void);
++
++int rk_cipher_tfm_init(struct crypto_skcipher *tfm);
++void rk_cipher_tfm_exit(struct crypto_skcipher *tfm);
++int rk_aes_setkey(struct crypto_skcipher *cipher, const u8 *key,
++		  unsigned int keylen);
++int rk_aes_ecb_encrypt(struct skcipher_request *req);
++int rk_aes_ecb_decrypt(struct skcipher_request *req);
++int rk_aes_cbc_encrypt(struct skcipher_request *req);
++int rk_aes_cbc_decrypt(struct skcipher_request *req);
++
++int rk_ahash_init(struct ahash_request *req);
++int rk_ahash_update(struct ahash_request *req);
++int rk_ahash_final(struct ahash_request *req);
++int rk_ahash_finup(struct ahash_request *req);
++int rk_ahash_import(struct ahash_request *req, const void *in);
++int rk_ahash_export(struct ahash_request *req, void *out);
++int rk_ahash_digest(struct ahash_request *req);
++int rk_cra_hash_init(struct crypto_tfm *tfm);
++void rk_cra_hash_exit(struct crypto_tfm *tfm);
+--- /dev/null
++++ b/drivers/crypto/rockchip/rk3588_crypto_ahash.c
+@@ -0,0 +1,346 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Crypto acceleration support for Rockchip RK3588
++ *
++ * Copyright (c) 2022 Corentin Labbe <clabbe@baylibre.com>
++ */
++#include <asm/unaligned.h>
++#include <linux/iopoll.h>
++#include "rk3588_crypto.h"
++
++static bool rk_ahash_need_fallback(struct ahash_request *areq)
++{
++	struct crypto_ahash *tfm = crypto_ahash_reqtfm(areq);
++	struct ahash_alg *alg = __crypto_ahash_alg(tfm->base.__crt_alg);
++	struct rk_crypto_template *algt = container_of(alg, struct rk_crypto_template, alg.hash);
++	struct scatterlist *sg;
++
++	sg = areq->src;
++	while (sg) {
++		if (!IS_ALIGNED(sg->offset, sizeof(u32))) {
++			algt->stat_fb_align++;
++			return true;
++		}
++		if (sg->length % 4) {
++			algt->stat_fb_sglen++;
++			return true;
++		}
++		sg = sg_next(sg);
++	}
++	return false;
++}
++
++static int rk_ahash_digest_fb(struct ahash_request *areq)
++{
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(areq);
++	struct crypto_ahash *tfm = crypto_ahash_reqtfm(areq);
++	struct rk_ahash_ctx *tfmctx = crypto_ahash_ctx(tfm);
++	struct ahash_alg *alg = __crypto_ahash_alg(tfm->base.__crt_alg);
++	struct rk_crypto_template *algt = container_of(alg, struct rk_crypto_template, alg.hash);
++
++	algt->stat_fb++;
++
++	ahash_request_set_tfm(&rctx->fallback_req, tfmctx->fallback_tfm);
++	rctx->fallback_req.base.flags = areq->base.flags &
++					CRYPTO_TFM_REQ_MAY_SLEEP;
++
++	rctx->fallback_req.nbytes = areq->nbytes;
++	rctx->fallback_req.src = areq->src;
++	rctx->fallback_req.result = areq->result;
++
++	return crypto_ahash_digest(&rctx->fallback_req);
++}
++
++static int zero_message_process(struct ahash_request *req)
++{
++	struct crypto_ahash *tfm = crypto_ahash_reqtfm(req);
++	struct ahash_alg *alg = __crypto_ahash_alg(tfm->base.__crt_alg);
++	struct rk_crypto_template *algt = container_of(alg, struct rk_crypto_template, alg.hash);
++	int digestsize = crypto_ahash_digestsize(tfm);
++
++	switch (algt->rk_mode) {
++	case RK_CRYPTO_SHA1:
++		memcpy(req->result, sha1_zero_message_hash, digestsize);
++		break;
++	case RK_CRYPTO_SHA256:
++		memcpy(req->result, sha256_zero_message_hash, digestsize);
++		break;
++	case RK_CRYPTO_SHA384:
++		memcpy(req->result, sha384_zero_message_hash, digestsize);
++		break;
++	case RK_CRYPTO_SHA512:
++		memcpy(req->result, sha512_zero_message_hash, digestsize);
++		break;
++	case RK_CRYPTO_MD5:
++		memcpy(req->result, md5_zero_message_hash, digestsize);
++		break;
++	case RK_CRYPTO_SM3:
++		memcpy(req->result, sm3_zero_message_hash, digestsize);
++		break;
++	default:
++		return -EINVAL;
++	}
++
++	return 0;
++}
++
++int rk_ahash_init(struct ahash_request *req)
++{
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(req);
++	struct crypto_ahash *tfm = crypto_ahash_reqtfm(req);
++	struct rk_ahash_ctx *ctx = crypto_ahash_ctx(tfm);
++
++	ahash_request_set_tfm(&rctx->fallback_req, ctx->fallback_tfm);
++	rctx->fallback_req.base.flags = req->base.flags &
++					CRYPTO_TFM_REQ_MAY_SLEEP;
++
++	return crypto_ahash_init(&rctx->fallback_req);
++}
++
++int rk_ahash_update(struct ahash_request *req)
++{
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(req);
++	struct crypto_ahash *tfm = crypto_ahash_reqtfm(req);
++	struct rk_ahash_ctx *ctx = crypto_ahash_ctx(tfm);
++
++	ahash_request_set_tfm(&rctx->fallback_req, ctx->fallback_tfm);
++	rctx->fallback_req.base.flags = req->base.flags &
++					CRYPTO_TFM_REQ_MAY_SLEEP;
++	rctx->fallback_req.nbytes = req->nbytes;
++	rctx->fallback_req.src = req->src;
++
++	return crypto_ahash_update(&rctx->fallback_req);
++}
++
++int rk_ahash_final(struct ahash_request *req)
++{
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(req);
++	struct crypto_ahash *tfm = crypto_ahash_reqtfm(req);
++	struct rk_ahash_ctx *ctx = crypto_ahash_ctx(tfm);
++
++	ahash_request_set_tfm(&rctx->fallback_req, ctx->fallback_tfm);
++	rctx->fallback_req.base.flags = req->base.flags &
++					CRYPTO_TFM_REQ_MAY_SLEEP;
++	rctx->fallback_req.result = req->result;
++
++	return crypto_ahash_final(&rctx->fallback_req);
++}
++
++int rk_ahash_finup(struct ahash_request *req)
++{
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(req);
++	struct crypto_ahash *tfm = crypto_ahash_reqtfm(req);
++	struct rk_ahash_ctx *ctx = crypto_ahash_ctx(tfm);
++
++	ahash_request_set_tfm(&rctx->fallback_req, ctx->fallback_tfm);
++	rctx->fallback_req.base.flags = req->base.flags &
++					CRYPTO_TFM_REQ_MAY_SLEEP;
++
++	rctx->fallback_req.nbytes = req->nbytes;
++	rctx->fallback_req.src = req->src;
++	rctx->fallback_req.result = req->result;
++
++	return crypto_ahash_finup(&rctx->fallback_req);
++}
++
++int rk_ahash_import(struct ahash_request *req, const void *in)
++{
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(req);
++	struct crypto_ahash *tfm = crypto_ahash_reqtfm(req);
++	struct rk_ahash_ctx *ctx = crypto_ahash_ctx(tfm);
++
++	ahash_request_set_tfm(&rctx->fallback_req, ctx->fallback_tfm);
++	rctx->fallback_req.base.flags = req->base.flags &
++					CRYPTO_TFM_REQ_MAY_SLEEP;
++
++	return crypto_ahash_import(&rctx->fallback_req, in);
++}
++
++int rk_ahash_export(struct ahash_request *req, void *out)
++{
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(req);
++	struct crypto_ahash *tfm = crypto_ahash_reqtfm(req);
++	struct rk_ahash_ctx *ctx = crypto_ahash_ctx(tfm);
++
++	ahash_request_set_tfm(&rctx->fallback_req, ctx->fallback_tfm);
++	rctx->fallback_req.base.flags = req->base.flags &
++					CRYPTO_TFM_REQ_MAY_SLEEP;
++
++	return crypto_ahash_export(&rctx->fallback_req, out);
++}
++
++int rk_ahash_digest(struct ahash_request *req)
++{
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(req);
++	struct rk_crypto_dev *dev;
++	struct crypto_engine *engine;
++
++	if (rk_ahash_need_fallback(req))
++		return rk_ahash_digest_fb(req);
++
++	if (!req->nbytes)
++		return zero_message_process(req);
++
++	dev = get_rk_crypto();
++
++	rctx->dev = dev;
++	engine = dev->engine;
++
++	return crypto_transfer_hash_request_to_engine(engine, req);
++}
++
++static int rk_hash_prepare(struct crypto_engine *engine, void *breq)
++{
++	struct ahash_request *areq = container_of(breq, struct ahash_request, base);
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(areq);
++	struct rk_crypto_dev *rkc = rctx->dev;
++	int ret;
++
++	ret = dma_map_sg(rkc->dev, areq->src, sg_nents(areq->src), DMA_TO_DEVICE);
++	if (ret <= 0)
++		return -EINVAL;
++
++	rctx->nrsgs = ret;
++
++	return 0;
++}
++
++static int rk_hash_unprepare(struct crypto_engine *engine, void *breq)
++{
++	struct ahash_request *areq = container_of(breq, struct ahash_request, base);
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(areq);
++	struct rk_crypto_dev *rkc = rctx->dev;
++
++	dma_unmap_sg(rkc->dev, areq->src, rctx->nrsgs, DMA_TO_DEVICE);
++	return 0;
++}
++
++static int rk_hash_run(struct crypto_engine *engine, void *breq)
++{
++	struct ahash_request *areq = container_of(breq, struct ahash_request, base);
++	struct crypto_ahash *tfm = crypto_ahash_reqtfm(areq);
++	struct rk_ahash_rctx *rctx = ahash_request_ctx(areq);
++	struct ahash_alg *alg = __crypto_ahash_alg(tfm->base.__crt_alg);
++	struct rk_crypto_template *algt = container_of(alg, struct rk_crypto_template, alg.hash);
++	struct scatterlist *sgs = areq->src;
++	struct rk_crypto_dev *rkc = rctx->dev;
++	struct rk_crypto_lli *dd = &rkc->tl[0];
++	int ddi = 0;
++	int err = 0;
++	unsigned int len = areq->nbytes;
++	unsigned int todo;
++	u32 v;
++	int i;
++
++	err = pm_runtime_resume_and_get(rkc->dev);
++	if (err)
++		return err;
++
++	dev_dbg(rkc->dev, "%s %s len=%d\n", __func__,
++		crypto_tfm_alg_name(areq->base.tfm), areq->nbytes);
++
++	algt->stat_req++;
++	rkc->nreq++;
++
++	rctx->mode = algt->rk_mode;
++	rctx->mode |= 0xffff0000;
++	rctx->mode |= RK_CRYPTO_ENABLE | RK_CRYPTO_HW_PAD;
++	writel(rctx->mode, rkc->reg + RK_CRYPTO_HASH_CTL);
++
++	while (sgs && len > 0) {
++		dd = &rkc->tl[ddi];
++
++		todo = min(sg_dma_len(sgs), len);
++		dd->src_addr = sg_dma_address(sgs);
++		dd->src_len = todo;
++		dd->dst_addr = 0;
++		dd->dst_len = 0;
++		dd->dma_ctrl = ddi << 24;
++		dd->iv = 0;
++		dd->next = rkc->t_phy + sizeof(struct rk_crypto_lli) * (ddi + 1);
++
++		if (ddi == 0)
++			dd->user = RK_LLI_CIPHER_START | RK_LLI_STRING_FIRST;
++		else
++			dd->user = 0;
++
++		len -= todo;
++		dd->dma_ctrl |= RK_LLI_DMA_CTRL_SRC_INT;
++		if (len == 0) {
++			dd->user |= RK_LLI_STRING_LAST;
++			dd->dma_ctrl |= RK_LLI_DMA_CTRL_LAST;
++		}
++		dev_dbg(rkc->dev, "HASH SG %d sglen=%d user=%x dma=%x mode=%x len=%d todo=%d phy=%llx\n",
++			ddi, sgs->length, dd->user, dd->dma_ctrl, rctx->mode, len, todo, rkc->t_phy);
++
++		sgs = sg_next(sgs);
++		ddi++;
++	}
++	dd->next = 1;
++	writel(RK_CRYPTO_DMA_INT_LISTDONE | 0x7F, rkc->reg + RK_CRYPTO_DMA_INT_EN);
++
++	writel(rkc->t_phy, rkc->reg + RK_CRYPTO_DMA_LLI_ADDR);
++
++	reinit_completion(&rkc->complete);
++	rkc->status = 0;
++
++	writel(RK_CRYPTO_DMA_CTL_START | 1 << 16, rkc->reg + RK_CRYPTO_DMA_CTL);
++
++	wait_for_completion_interruptible_timeout(&rkc->complete,
++						  msecs_to_jiffies(2000));
++	if (!rkc->status) {
++		dev_err(rkc->dev, "DMA timeout\n");
++		err = -EFAULT;
++		goto theend;
++	}
++
++	readl_poll_timeout_atomic(rkc->reg + RK_CRYPTO_HASH_VALID, v, v == 1,
++				  10, 1000);
++
++	for (i = 0; i < crypto_ahash_digestsize(tfm) / 4; i++) {
++		v = readl(rkc->reg + RK_CRYPTO_HASH_DOUT_0 + i * 4);
++		put_unaligned_le32(be32_to_cpu(v), areq->result + i * 4);
++	}
++
++theend:
++	pm_runtime_put_autosuspend(rkc->dev);
++
++	local_bh_disable();
++	crypto_finalize_hash_request(engine, breq, err);
++	local_bh_enable();
++
++	return 0;
++}
++
++int rk_cra_hash_init(struct crypto_tfm *tfm)
++{
++	struct rk_ahash_ctx *tctx = crypto_tfm_ctx(tfm);
++	const char *alg_name = crypto_tfm_alg_name(tfm);
++	struct ahash_alg *alg = __crypto_ahash_alg(tfm->__crt_alg);
++	struct rk_crypto_template *algt = container_of(alg, struct rk_crypto_template, alg.hash);
++
++	/* for fallback */
++	tctx->fallback_tfm = crypto_alloc_ahash(alg_name, 0,
++						CRYPTO_ALG_NEED_FALLBACK);
++	if (IS_ERR(tctx->fallback_tfm)) {
++		dev_err(algt->dev->dev, "Could not load fallback driver.\n");
++		return PTR_ERR(tctx->fallback_tfm);
++	}
++
++	crypto_ahash_set_reqsize(__crypto_ahash_cast(tfm),
++				 sizeof(struct rk_ahash_rctx) +
++				 crypto_ahash_reqsize(tctx->fallback_tfm));
++
++	tctx->enginectx.op.do_one_request = rk_hash_run;
++	tctx->enginectx.op.prepare_request = rk_hash_prepare;
++	tctx->enginectx.op.unprepare_request = rk_hash_unprepare;
++
++	return 0;
++}
++
++void rk_cra_hash_exit(struct crypto_tfm *tfm)
++{
++	struct rk_ahash_ctx *tctx = crypto_tfm_ctx(tfm);
++
++	crypto_free_ahash(tctx->fallback_tfm);
++}
+--- /dev/null
++++ b/drivers/crypto/rockchip/rk3588_crypto_skcipher.c
+@@ -0,0 +1,340 @@
++// SPDX-License-Identifier: GPL-2.0
++/*
++ * hardware cryptographic offloader for rk3568/rk3588 SoC
++ *
++ * Copyright (c) 2022 Corentin Labbe <clabbe@baylibre.com>
++ */
++#include <crypto/scatterwalk.h>
++#include "rk3588_crypto.h"
++
++static int rk_cipher_need_fallback(struct skcipher_request *req)
++{
++	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(req);
++	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
++	struct rk_crypto_template *algt = container_of(alg, struct rk_crypto_template, alg.skcipher);
++	struct scatterlist *sgs, *sgd;
++	unsigned int stodo, dtodo, len;
++	unsigned int bs = crypto_skcipher_blocksize(tfm);
++
++	if (!req->cryptlen)
++		return true;
++
++	len = req->cryptlen;
++	sgs = req->src;
++	sgd = req->dst;
++	while (sgs && sgd) {
++		if (!IS_ALIGNED(sgs->offset, sizeof(u32))) {
++			algt->stat_fb_align++;
++			return true;
++		}
++		if (!IS_ALIGNED(sgd->offset, sizeof(u32))) {
++			algt->stat_fb_align++;
++			return true;
++		}
++		stodo = min(len, sgs->length);
++		if (stodo % bs) {
++			algt->stat_fb_len++;
++			return true;
++		}
++		dtodo = min(len, sgd->length);
++		if (dtodo % bs) {
++			algt->stat_fb_len++;
++			return true;
++		}
++		if (stodo != dtodo) {
++			algt->stat_fb_sgdiff++;
++			return true;
++		}
++		len -= stodo;
++		sgs = sg_next(sgs);
++		sgd = sg_next(sgd);
++	}
++	return false;
++}
++
++static int rk_cipher_fallback(struct skcipher_request *areq)
++{
++	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(areq);
++	struct rk_cipher_ctx *op = crypto_skcipher_ctx(tfm);
++	struct rk_cipher_rctx *rctx = skcipher_request_ctx(areq);
++	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
++	struct rk_crypto_template *algt = container_of(alg, struct rk_crypto_template, alg.skcipher);
++	int err;
++
++	algt->stat_fb++;
++
++	skcipher_request_set_tfm(&rctx->fallback_req, op->fallback_tfm);
++	skcipher_request_set_callback(&rctx->fallback_req, areq->base.flags,
++				      areq->base.complete, areq->base.data);
++	skcipher_request_set_crypt(&rctx->fallback_req, areq->src, areq->dst,
++				   areq->cryptlen, areq->iv);
++	if (rctx->mode & RK_CRYPTO_DEC)
++		err = crypto_skcipher_decrypt(&rctx->fallback_req);
++	else
++		err = crypto_skcipher_encrypt(&rctx->fallback_req);
++	return err;
++}
++
++static int rk_cipher_handle_req(struct skcipher_request *req)
++{
++	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
++	struct rk_crypto_dev *rkc;
++	struct crypto_engine *engine;
++
++	if (rk_cipher_need_fallback(req))
++		return rk_cipher_fallback(req);
++
++	rkc = get_rk_crypto();
++
++	engine = rkc->engine;
++	rctx->dev = rkc;
++
++	return crypto_transfer_skcipher_request_to_engine(engine, req);
++}
++
++int rk_aes_setkey(struct crypto_skcipher *cipher, const u8 *key,
++		  unsigned int keylen)
++{
++	struct crypto_tfm *tfm = crypto_skcipher_tfm(cipher);
++	struct rk_cipher_ctx *ctx = crypto_tfm_ctx(tfm);
++
++	if (keylen != AES_KEYSIZE_128 && keylen != AES_KEYSIZE_192 &&
++	    keylen != AES_KEYSIZE_256)
++		return -EINVAL;
++	ctx->keylen = keylen;
++	memcpy(ctx->key, key, keylen);
++
++	return crypto_skcipher_setkey(ctx->fallback_tfm, key, keylen);
++}
++
++int rk_aes_ecb_encrypt(struct skcipher_request *req)
++{
++	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
++
++	rctx->mode = RK_CRYPTO_AES_ECB_MODE;
++	return rk_cipher_handle_req(req);
++}
++
++int rk_aes_ecb_decrypt(struct skcipher_request *req)
++{
++	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
++
++	rctx->mode = RK_CRYPTO_AES_ECB_MODE | RK_CRYPTO_DEC;
++	return rk_cipher_handle_req(req);
++}
++
++int rk_aes_cbc_encrypt(struct skcipher_request *req)
++{
++	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
++
++	rctx->mode = RK_CRYPTO_AES_CBC_MODE;
++	return rk_cipher_handle_req(req);
++}
++
++int rk_aes_cbc_decrypt(struct skcipher_request *req)
++{
++	struct rk_cipher_rctx *rctx = skcipher_request_ctx(req);
++
++	rctx->mode = RK_CRYPTO_AES_CBC_MODE | RK_CRYPTO_DEC;
++	return rk_cipher_handle_req(req);
++}
++
++static int rk_cipher_run(struct crypto_engine *engine, void *async_req)
++{
++	struct skcipher_request *areq = container_of(async_req, struct skcipher_request, base);
++	struct crypto_skcipher *tfm = crypto_skcipher_reqtfm(areq);
++	struct rk_cipher_rctx *rctx = skcipher_request_ctx(areq);
++	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
++	struct scatterlist *sgs, *sgd;
++	int err = 0;
++	int ivsize = crypto_skcipher_ivsize(tfm);
++	unsigned int len = areq->cryptlen;
++	unsigned int todo;
++	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
++	struct rk_crypto_template *algt = container_of(alg, struct rk_crypto_template, alg.skcipher);
++	struct rk_crypto_dev *rkc = rctx->dev;
++	struct rk_crypto_lli *dd = &rkc->tl[0];
++	u32 m, v;
++	u32 *rkey = (u32 *)ctx->key;
++	u32 *riv = (u32 *)areq->iv;
++	int i;
++	unsigned int offset;
++
++	err = pm_runtime_resume_and_get(rkc->dev);
++	if (err)
++		return err;
++
++	algt->stat_req++;
++	rkc->nreq++;
++
++	m = rctx->mode | RK_CRYPTO_ENABLE;
++	switch (ctx->keylen) {
++	case AES_KEYSIZE_128:
++		m |= RK_CRYPTO_AES_128BIT_key;
++		break;
++	case AES_KEYSIZE_192:
++		m |= RK_CRYPTO_AES_192BIT_key;
++		break;
++	case AES_KEYSIZE_256:
++		m |= RK_CRYPTO_AES_256BIT_key;
++		break;
++	}
++	/* the upper bits are a write enable mask, so we need to write 1 to all
++	 * upper 16 bits to allow write to the 16 lower bits
++	 */
++	m |= 0xffff0000;
++
++	dev_dbg(rkc->dev, "%s %s len=%u keylen=%u mode=%x\n", __func__,
++		crypto_tfm_alg_name(areq->base.tfm),
++		areq->cryptlen, ctx->keylen, m);
++	sgs = areq->src;
++	sgd = areq->dst;
++
++	while (sgs && sgd && len) {
++		ivsize = crypto_skcipher_ivsize(tfm);
++		if (areq->iv && crypto_skcipher_ivsize(tfm) > 0) {
++			if (rctx->mode & RK_CRYPTO_DEC) {
++				offset = sgs->length - ivsize;
++				scatterwalk_map_and_copy(rctx->backup_iv, sgs,
++							 offset, ivsize, 0);
++			}
++		}
++
++		if (sgs == sgd) {
++			err = dma_map_sg(rkc->dev, sgs, 1, DMA_BIDIRECTIONAL);
++			if (err != 1) {
++				dev_err(rkc->dev, "Invalid sg number %d\n", err);
++				err = -EINVAL;
++				goto theend;
++			}
++		} else {
++			err = dma_map_sg(rkc->dev, sgs, 1, DMA_TO_DEVICE);
++			if (err != 1) {
++				dev_err(rkc->dev, "Invalid sg number %d\n", err);
++				err = -EINVAL;
++				goto theend;
++			}
++			err = dma_map_sg(rkc->dev, sgd, 1, DMA_FROM_DEVICE);
++			if (err != 1) {
++				dev_err(rkc->dev, "Invalid sg number %d\n", err);
++				err = -EINVAL;
++				dma_unmap_sg(rkc->dev, sgs, 1, DMA_TO_DEVICE);
++				goto theend;
++			}
++		}
++		err = 0;
++		writel(m, rkc->reg + RK_CRYPTO_BC_CTL);
++
++		for (i = 0; i < ctx->keylen / 4; i++) {
++			v = cpu_to_be32(rkey[i]);
++			writel(v, rkc->reg + RK_CRYPTO_KEY0 + i * 4);
++		}
++
++		if (ivsize) {
++			for (i = 0; i < ivsize / 4; i++)
++				writel(cpu_to_be32(riv[i]),
++				       rkc->reg + RK_CRYPTO_CH0_IV_0 + i * 4);
++			writel(ivsize, rkc->reg + RK_CRYPTO_CH0_IV_LEN);
++		}
++		if (!sgs->length) {
++			sgs = sg_next(sgs);
++			sgd = sg_next(sgd);
++			continue;
++		}
++
++		/* The hw support multiple descriptor, so why this driver use
++		 * only one descritor ?
++		 * Using one descriptor per SG seems the way to do and it works
++		 * but only when doing encryption.
++		 * With decryption it always fail on second descriptor.
++		 * Probably the HW dont know how to use IV.
++		 */
++		todo = min(sg_dma_len(sgs), len);
++		len -= todo;
++		dd->src_addr = sg_dma_address(sgs);
++		dd->src_len = todo;
++		dd->dst_addr = sg_dma_address(sgd);
++		dd->dst_len = todo;
++		dd->iv = 0;
++		dd->next = 1;
++
++		dd->user = RK_LLI_CIPHER_START | RK_LLI_STRING_FIRST | RK_LLI_STRING_LAST;
++		dd->dma_ctrl |= RK_LLI_DMA_CTRL_DST_INT | RK_LLI_DMA_CTRL_LAST;
++
++		writel(RK_CRYPTO_DMA_INT_LISTDONE | 0x7F, rkc->reg + RK_CRYPTO_DMA_INT_EN);
++
++		writel(rkc->t_phy, rkc->reg + RK_CRYPTO_DMA_LLI_ADDR);
++
++		reinit_completion(&rkc->complete);
++		rkc->status = 0;
++
++		writel(RK_CRYPTO_DMA_CTL_START | 1 << 16, rkc->reg + RK_CRYPTO_DMA_CTL);
++
++		wait_for_completion_interruptible_timeout(&rkc->complete,
++							  msecs_to_jiffies(10000));
++		if (sgs == sgd) {
++			dma_unmap_sg(rkc->dev, sgs, 1, DMA_BIDIRECTIONAL);
++		} else {
++			dma_unmap_sg(rkc->dev, sgs, 1, DMA_TO_DEVICE);
++			dma_unmap_sg(rkc->dev, sgd, 1, DMA_FROM_DEVICE);
++		}
++
++		if (!rkc->status) {
++			dev_err(rkc->dev, "DMA timeout\n");
++			err = -EFAULT;
++			goto theend;
++		}
++		if (areq->iv && ivsize > 0) {
++			offset = sgd->length - ivsize;
++			if (rctx->mode & RK_CRYPTO_DEC) {
++				memcpy(areq->iv, rctx->backup_iv, ivsize);
++				memzero_explicit(rctx->backup_iv, ivsize);
++			} else {
++				scatterwalk_map_and_copy(areq->iv, sgd, offset,
++							 ivsize, 0);
++			}
++		}
++		sgs = sg_next(sgs);
++		sgd = sg_next(sgd);
++	}
++theend:
++	writel(0xffff0000, rkc->reg + RK_CRYPTO_BC_CTL);
++	pm_runtime_put_autosuspend(rkc->dev);
++
++	local_bh_disable();
++	crypto_finalize_skcipher_request(engine, areq, err);
++	local_bh_enable();
++	return 0;
++}
++
++int rk_cipher_tfm_init(struct crypto_skcipher *tfm)
++{
++	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
++	const char *name = crypto_tfm_alg_name(&tfm->base);
++	struct skcipher_alg *alg = crypto_skcipher_alg(tfm);
++	struct rk_crypto_template *algt = container_of(alg, struct rk_crypto_template, alg.skcipher);
++
++	ctx->fallback_tfm = crypto_alloc_skcipher(name, 0, CRYPTO_ALG_NEED_FALLBACK);
++	if (IS_ERR(ctx->fallback_tfm)) {
++		dev_err(algt->dev->dev, "ERROR: Cannot allocate fallback for %s %ld\n",
++			name, PTR_ERR(ctx->fallback_tfm));
++		return PTR_ERR(ctx->fallback_tfm);
++	}
++
++	tfm->reqsize = sizeof(struct rk_cipher_rctx) +
++		crypto_skcipher_reqsize(ctx->fallback_tfm);
++
++	ctx->enginectx.op.do_one_request = rk_cipher_run;
++	ctx->enginectx.op.prepare_request = NULL;
++	ctx->enginectx.op.unprepare_request = NULL;
++
++	return 0;
++}
++
++void rk_cipher_tfm_exit(struct crypto_skcipher *tfm)
++{
++	struct rk_cipher_ctx *ctx = crypto_skcipher_ctx(tfm);
++
++	memzero_explicit(ctx->key, ctx->keylen);
++	crypto_free_skcipher(ctx->fallback_tfm);
++}
diff --git a/target/linux/rockchip/patches-6.1/325-ARM64-dts-rk3568-add-crypto-node.patch b/target/linux/rockchip/patches-6.1/325-ARM64-dts-rk3568-add-crypto-node.patch
new file mode 100644
index 0000000000..0442240d30
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/325-ARM64-dts-rk3568-add-crypto-node.patch
@@ -0,0 +1,37 @@
+From 2bfe81b49f613340025a0f3a19a8989159923034 Mon Sep 17 00:00:00 2001
+From: Corentin Labbe <clabbe@baylibre.com>
+Date: Tue, 27 Sep 2022 08:00:48 +0000
+Subject: [PATCH 325/383] ARM64: dts: rk3568: add crypto node
+
+The rk3568 has a crypto IP handled by the rk3588 crypto driver so adds a
+node for it.
+
+Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3568.dtsi | 14 ++++++++++++++
+ 1 file changed, 14 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3568.dtsi
+@@ -213,6 +213,20 @@
+ 		};
+ 	};
+ 
++	crypto: crypto@fe380000 {
++		compatible = "rockchip,rk3568-crypto";
++		reg = <0x0 0xfe380000 0x0 0x2000>;
++		interrupts = <GIC_SPI 4 IRQ_TYPE_LEVEL_HIGH>;
++		clocks = <&cru ACLK_CRYPTO_NS>, <&cru HCLK_CRYPTO_NS>,
++			 <&cru CLK_CRYPTO_NS_CORE>, <&cru CLK_CRYPTO_NS_PKA>;
++		clock-names = "aclk", "hclk", "sclk", "pka";
++		resets = <&cru SRST_CRYPTO_NS_CORE>, <&cru SRST_A_CRYPTO_NS>,
++			<&cru SRST_H_CRYPTO_NS>, <&cru SRST_CRYPTO_NS_RNG>,
++			<&cru SRST_CRYPTO_NS_PKA>;
++		reset-names = "core", "a", "h", "rng,", "pka";
++		status = "okay";
++	};
++
+ 	combphy0: phy@fe820000 {
+ 		compatible = "rockchip,rk3568-naneng-combphy";
+ 		reg = <0x0 0xfe820000 0x0 0x100>;
diff --git a/target/linux/rockchip/patches-6.1/326-drivers-crypto-rockchip-fix-openwrt-build.patch b/target/linux/rockchip/patches-6.1/326-drivers-crypto-rockchip-fix-openwrt-build.patch
new file mode 100644
index 0000000000..4755a8c67c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/326-drivers-crypto-rockchip-fix-openwrt-build.patch
@@ -0,0 +1,31 @@
+From baba923180a89d14ed312642355c5328c21ad29e Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Thu, 29 Sep 2022 18:44:42 -0400
+Subject: [PATCH 326/383] drivers: crypto-rockchip fix openwrt build
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/crypto/rockchip/rk3288_crypto.c | 12 ------------
+ 1 file changed, 12 deletions(-)
+
+--- a/drivers/crypto/rockchip/rk3288_crypto.c
++++ b/drivers/crypto/rockchip/rk3288_crypto.c
+@@ -24,18 +24,6 @@ static struct rockchip_ip rocklist = {
+ 	.lock = __SPIN_LOCK_UNLOCKED(rocklist.lock),
+ };
+ 
+-struct rk_crypto_info *get_rk_crypto(void)
+-{
+-	struct rk_crypto_info *first;
+-
+-	spin_lock(&rocklist.lock);
+-	first = list_first_entry_or_null(&rocklist.dev_list,
+-					 struct rk_crypto_info, list);
+-	list_rotate_left(&rocklist.dev_list);
+-	spin_unlock(&rocklist.lock);
+-	return first;
+-}
+-
+ static const struct rk_variant rk3288_variant = {
+ 	.num_clks = 4,
+ 	.rkclks = {
diff --git a/target/linux/rockchip/patches-6.1/327-PCI-Add-ROCKCHIP-PCIe-ASPM-interface.patch b/target/linux/rockchip/patches-6.1/327-PCI-Add-ROCKCHIP-PCIe-ASPM-interface.patch
new file mode 100644
index 0000000000..cc9a0340a6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/327-PCI-Add-ROCKCHIP-PCIe-ASPM-interface.patch
@@ -0,0 +1,403 @@
+From 75d32727b1cbbeb33ecee0a8bd9fc1d484762717 Mon Sep 17 00:00:00 2001
+From: Jon Lin <jon.lin@rock-chips.com>
+Date: Fri, 17 Jun 2022 10:38:30 +0800
+Subject: [PATCH 327/383] PCI: Add ROCKCHIP PCIe ASPM interface
+
+Change-Id: I1156bd10e352145d745899067bf43afda92d5a30
+Signed-off-by: Jon Lin <jon.lin@rock-chips.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/pci/pcie/Kconfig    |   6 +
+ drivers/pci/pcie/Makefile   |   1 +
+ drivers/pci/pcie/aspm_ext.c | 339 ++++++++++++++++++++++++++++++++++++
+ include/linux/aspm_ext.h    |  16 ++
+ 4 files changed, 362 insertions(+)
+ create mode 100644 drivers/pci/pcie/aspm_ext.c
+ create mode 100644 include/linux/aspm_ext.h
+
+--- a/drivers/pci/pcie/Kconfig
++++ b/drivers/pci/pcie/Kconfig
+@@ -110,6 +110,12 @@ config PCIEASPM_PERFORMANCE
+ 	  Disable PCI Express ASPM L0s and L1, even if the BIOS enabled them.
+ endchoice
+ 
++config PCIEASPM_EXT
++	tristate "Extend ASPM function"
++	depends on PCIEASPM
++	help
++	  This enables the extensions APIs for ASPM control.
++
+ config PCIE_PME
+ 	def_bool y
+ 	depends on PCIEPORTBUS && PM
+--- a/drivers/pci/pcie/Makefile
++++ b/drivers/pci/pcie/Makefile
+@@ -7,6 +7,7 @@ pcieportdrv-y			:= portdrv_core.o portdr
+ obj-$(CONFIG_PCIEPORTBUS)	+= pcieportdrv.o
+ 
+ obj-$(CONFIG_PCIEASPM)		+= aspm.o
++obj-$(CONFIG_PCIEASPM_EXT)	+= aspm_ext.o
+ obj-$(CONFIG_PCIEAER)		+= aer.o err.o
+ obj-$(CONFIG_PCIEAER_INJECT)	+= aer_inject.o
+ obj-$(CONFIG_PCIE_PME)		+= pme.o
+--- /dev/null
++++ b/drivers/pci/pcie/aspm_ext.c
+@@ -0,0 +1,339 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Rockchip PCIe Apis For WIFI
++ *
++ * Copyright (c) 2022 Rockchip Electronics Co., Ltd.
++ */
++
++#include <linux/kernel.h>
++#include <linux/pci.h>
++#include <linux/aspm_ext.h>
++#include <linux/errno.h>
++
++
++static u32 rockchip_pcie_pcie_access_cap(struct pci_dev *pdev, int cap, uint offset,
++					 bool is_ext, bool is_write, u32 writeval)
++{
++	int cap_ptr = 0;
++	u32 ret = -1;
++	u32 readval;
++
++	if (!(pdev)) {
++		pci_err(pdev, "%s: pdev is NULL\n", __func__);
++		return ret;
++	}
++
++	/* Find Capability offset */
++	if (is_ext) {
++		/* removing max EXT_CAP_ID check as
++		 * linux kernel definition's max value is not updated yet as per spec
++		 */
++		cap_ptr = pci_find_ext_capability(pdev, cap);
++
++	} else {
++		/* removing max PCI_CAP_ID_MAX check as
++		 * previous kernel versions dont have this definition
++		 */
++		cap_ptr = pci_find_capability(pdev, cap);
++	}
++
++	/* Return if capability with given ID not found */
++	if (cap_ptr == 0) {
++		pci_err(pdev, "%s: PCI Cap(0x%02x) not supported.\n",
++		       __func__, cap);
++		return -EINVAL;
++	}
++
++	if (is_write) {
++		pci_write_config_dword(pdev, (cap_ptr + offset), writeval);
++		ret = 0;
++
++	} else {
++		pci_read_config_dword(pdev, (cap_ptr + offset), &readval);
++		ret = readval;
++	}
++
++	return ret;
++}
++
++static bool rockchip_pcie_bus_aspm_enable_dev(char *device, struct pci_dev *dev, bool enable)
++{
++	u32 linkctrl_before;
++	u32 linkctrl_after = 0;
++	u8 linkctrl_asm;
++
++	linkctrl_before = rockchip_pcie_pcie_access_cap(dev, PCI_CAP_ID_EXP, PCI_EXP_LNKCTL,
++							false, false, 0);
++	linkctrl_asm = (linkctrl_before & PCI_EXP_LNKCTL_ASPMC);
++
++	if (enable) {
++		if (linkctrl_asm == PCI_EXP_LNKCTL_ASPM_L1) {
++			pci_err(dev, "%s: %s already enabled  linkctrl: 0x%x\n",
++			       __func__, device, linkctrl_before);
++			return false;
++		}
++		/* Enable only L1 ASPM (bit 1) */
++		rockchip_pcie_pcie_access_cap(dev, PCI_CAP_ID_EXP, PCI_EXP_LNKCTL, false,
++					      true, (linkctrl_before | PCI_EXP_LNKCTL_ASPM_L1));
++	} else {
++		if (linkctrl_asm == 0) {
++			pci_err(dev, "%s: %s already disabled linkctrl: 0x%x\n",
++			       __func__, device, linkctrl_before);
++			return false;
++		}
++		/* Disable complete ASPM (bit 1 and bit 0) */
++		rockchip_pcie_pcie_access_cap(dev, PCI_CAP_ID_EXP, PCI_EXP_LNKCTL, false,
++					      true, (linkctrl_before & (~PCI_EXP_LNKCTL_ASPMC)));
++	}
++
++	linkctrl_after = rockchip_pcie_pcie_access_cap(dev, PCI_CAP_ID_EXP, PCI_EXP_LNKCTL,
++						       false, false, 0);
++	pci_err(dev, "%s: %s %s, linkctrl_before: 0x%x linkctrl_after: 0x%x\n",
++	       __func__, device, (enable ? "ENABLE " : "DISABLE"),
++		linkctrl_before, linkctrl_after);
++
++	return true;
++}
++
++bool rockchip_pcie_bus_aspm_enable_rc_ep(struct pci_dev *child, struct pci_dev *parent, bool enable)
++{
++	bool ret;
++
++	if (enable) {
++		/* Enable only L1 ASPM first RC then EP */
++		ret = rockchip_pcie_bus_aspm_enable_dev("RC", parent, enable);
++		ret = rockchip_pcie_bus_aspm_enable_dev("EP", child, enable);
++	} else {
++		/* Disable complete ASPM first EP then RC */
++		ret = rockchip_pcie_bus_aspm_enable_dev("EP", child, enable);
++		ret = rockchip_pcie_bus_aspm_enable_dev("RC", parent, enable);
++	}
++
++	return ret;
++}
++
++static void pci_clear_and_set_dword(struct pci_dev *pdev, int pos,
++				    u32 clear, u32 set)
++{
++	u32 val;
++
++	pci_read_config_dword(pdev, pos, &val);
++	val &= ~clear;
++	val |= set;
++	pci_write_config_dword(pdev, pos, val);
++}
++
++/* Convert L1SS T_pwr encoding to usec */
++static u32 calc_l1ss_pwron(struct pci_dev *pdev, u32 scale, u32 val)
++{
++	switch (scale) {
++	case 0:
++		return val * 2;
++	case 1:
++		return val * 10;
++	case 2:
++		return val * 100;
++	}
++
++	return 0;
++}
++
++static void encode_l12_threshold(u32 threshold_us, u32 *scale, u32 *value)
++{
++	u32 threshold_ns = threshold_us * 1000;
++
++	/* See PCIe r3.1, sec 7.33.3 and sec 6.18 */
++	if (threshold_ns < 32) {
++		*scale = 0;
++		*value = threshold_ns;
++	} else if (threshold_ns < 1024) {
++		*scale = 1;
++		*value = threshold_ns >> 5;
++	} else if (threshold_ns < 32768) {
++		*scale = 2;
++		*value = threshold_ns >> 10;
++	} else if (threshold_ns < 1048576) {
++		*scale = 3;
++		*value = threshold_ns >> 15;
++	} else if (threshold_ns < 33554432) {
++		*scale = 4;
++		*value = threshold_ns >> 20;
++	} else {
++		*scale = 5;
++		*value = threshold_ns >> 25;
++	}
++}
++
++/* Calculate L1.2 PM substate timing parameters */
++static void aspm_calc_l1ss_info(struct pci_dev *child, struct pci_dev *parent)
++{
++	u32 val1, val2, scale1, scale2;
++	u32 t_common_mode, t_power_on, l1_2_threshold, scale, value;
++	u32 ctl1 = 0, ctl2 = 0;
++	u32 pctl1, pctl2, cctl1, cctl2;
++	u32 pl1_2_enables, cl1_2_enables;
++	u32 parent_l1ss_cap, child_l1ss_cap;
++
++	/* Setup L1 substate */
++	pci_read_config_dword(parent, parent->l1ss + PCI_L1SS_CAP,
++			      &parent_l1ss_cap);
++	pci_read_config_dword(child, child->l1ss + PCI_L1SS_CAP,
++			      &child_l1ss_cap);
++
++	/* Choose the greater of the two Port Common_Mode_Restore_Times */
++	val1 = (parent_l1ss_cap & PCI_L1SS_CAP_CM_RESTORE_TIME) >> 8;
++	val2 = (child_l1ss_cap & PCI_L1SS_CAP_CM_RESTORE_TIME) >> 8;
++	t_common_mode = max(val1, val2);
++
++	/* Choose the greater of the two Port T_POWER_ON times */
++	val1   = (parent_l1ss_cap & PCI_L1SS_CAP_P_PWR_ON_VALUE) >> 19;
++	scale1 = (parent_l1ss_cap & PCI_L1SS_CAP_P_PWR_ON_SCALE) >> 16;
++	val2   = (child_l1ss_cap & PCI_L1SS_CAP_P_PWR_ON_VALUE) >> 19;
++	scale2 = (child_l1ss_cap & PCI_L1SS_CAP_P_PWR_ON_SCALE) >> 16;
++
++	if (calc_l1ss_pwron(parent, scale1, val1) >
++	    calc_l1ss_pwron(child, scale2, val2)) {
++		ctl2 |= scale1 | (val1 << 3);
++		t_power_on = calc_l1ss_pwron(parent, scale1, val1);
++	} else {
++		ctl2 |= scale2 | (val2 << 3);
++		t_power_on = calc_l1ss_pwron(child, scale2, val2);
++	}
++
++	/* Set LTR_L1.2_THRESHOLD to the time required to transition the
++	 * Link from L0 to L1.2 and back to L0 so we enter L1.2 only if
++	 * downstream devices report (via LTR) that they can tolerate at
++	 * least that much latency.
++	 *
++	 * Based on PCIe r3.1, sec 5.5.3.3.1, Figures 5-16 and 5-17, and
++	 * Table 5-11.  T(POWER_OFF) is at most 2us and T(L1.2) is at
++	 * least 4us.
++	 */
++	l1_2_threshold = 2 + 4 + t_common_mode + t_power_on;
++	encode_l12_threshold(l1_2_threshold, &scale, &value);
++	ctl1 |= t_common_mode << 8 | scale << 29 | value << 16;
++
++	pci_read_config_dword(parent, parent->l1ss + PCI_L1SS_CTL1, &pctl1);
++	pci_read_config_dword(parent, parent->l1ss + PCI_L1SS_CTL2, &pctl2);
++	pci_read_config_dword(child, child->l1ss + PCI_L1SS_CTL1, &cctl1);
++	pci_read_config_dword(child, child->l1ss + PCI_L1SS_CTL2, &cctl2);
++
++	if (ctl1 == pctl1 && ctl1 == cctl1 &&
++	    ctl2 == pctl2 && ctl2 == cctl2)
++		return;
++
++	/* Disable L1.2 while updating.  See PCIe r5.0, sec 5.5.4, 7.8.3.3 */
++	pl1_2_enables = pctl1 & PCI_L1SS_CTL1_L1_2_MASK;
++	cl1_2_enables = cctl1 & PCI_L1SS_CTL1_L1_2_MASK;
++
++	if (pl1_2_enables || cl1_2_enables) {
++		pci_clear_and_set_dword(child, child->l1ss + PCI_L1SS_CTL1,
++					PCI_L1SS_CTL1_L1_2_MASK, 0);
++		pci_clear_and_set_dword(parent, parent->l1ss + PCI_L1SS_CTL1,
++					PCI_L1SS_CTL1_L1_2_MASK, 0);
++	}
++
++	/* Program T_POWER_ON times in both ports */
++	pci_write_config_dword(parent, parent->l1ss + PCI_L1SS_CTL2, ctl2);
++	pci_write_config_dword(child, child->l1ss + PCI_L1SS_CTL2, ctl2);
++
++	/* Program Common_Mode_Restore_Time in upstream device */
++	pci_clear_and_set_dword(parent, parent->l1ss + PCI_L1SS_CTL1,
++				PCI_L1SS_CTL1_CM_RESTORE_TIME, ctl1);
++
++	/* Program LTR_L1.2_THRESHOLD time in both ports */
++	pci_clear_and_set_dword(parent,	parent->l1ss + PCI_L1SS_CTL1,
++				PCI_L1SS_CTL1_LTR_L12_TH_VALUE |
++				PCI_L1SS_CTL1_LTR_L12_TH_SCALE, ctl1);
++	pci_clear_and_set_dword(child, child->l1ss + PCI_L1SS_CTL1,
++				PCI_L1SS_CTL1_LTR_L12_TH_VALUE |
++				PCI_L1SS_CTL1_LTR_L12_TH_SCALE, ctl1);
++
++	if (pl1_2_enables || cl1_2_enables) {
++		pci_clear_and_set_dword(parent, parent->l1ss + PCI_L1SS_CTL1, 0,
++					pl1_2_enables);
++		pci_clear_and_set_dword(child, child->l1ss + PCI_L1SS_CTL1, 0,
++					cl1_2_enables);
++	}
++}
++
++static void rockchip_pcie_bus_l1ss_enable_dev(char *device, struct pci_dev *dev, bool enable)
++{
++	u32 l1ssctrl_before;
++	u32 l1ssctrl_after = 0;
++	u8 l1ss_ep;
++
++	/* Extendend Capacility Reg */
++	l1ssctrl_before = rockchip_pcie_pcie_access_cap(dev, PCI_EXT_CAP_ID_L1SS,
++							PCI_L1SS_CTL1, true, false, 0);
++	l1ss_ep = (l1ssctrl_before & PCI_L1SS_CTL1_L1SS_MASK);
++
++	if (enable) {
++		if (l1ss_ep == PCI_L1SS_CTL1_L1SS_MASK) {
++			pci_err(dev, "%s: %s already enabled,  l1ssctrl: 0x%x\n",
++			       __func__, device, l1ssctrl_before);
++			return;
++		}
++		rockchip_pcie_pcie_access_cap(dev, PCI_EXT_CAP_ID_L1SS, PCI_L1SS_CTL1,
++					      true, true, (l1ssctrl_before | PCI_L1SS_CTL1_L1SS_MASK));
++	} else {
++		if (l1ss_ep == 0) {
++			pci_err(dev, "%s: %s already disabled, l1ssctrl: 0x%x\n",
++			       __func__, device, l1ssctrl_before);
++			return;
++		}
++		rockchip_pcie_pcie_access_cap(dev, PCI_EXT_CAP_ID_L1SS, PCI_L1SS_CTL1,
++					      true, true, (l1ssctrl_before & (~PCI_L1SS_CTL1_L1SS_MASK)));
++	}
++	l1ssctrl_after = rockchip_pcie_pcie_access_cap(dev, PCI_EXT_CAP_ID_L1SS,
++						       PCI_L1SS_CTL1, true, false, 0);
++	pci_err(dev, "%s: %s %s, l1ssctrl_before: 0x%x l1ssctrl_after: 0x%x\n",
++	       __func__, device, (enable ? "ENABLE " : "DISABLE"),
++		l1ssctrl_before, l1ssctrl_after);
++}
++
++bool pcie_aspm_ext_is_rc_ep_l1ss_capable(struct pci_dev *child, struct pci_dev *parent)
++{
++	u32 parent_l1ss_cap, child_l1ss_cap;
++
++	/* Setup L1 substate */
++	pci_read_config_dword(parent, parent->l1ss + PCI_L1SS_CAP,
++			      &parent_l1ss_cap);
++	pci_read_config_dword(child, child->l1ss + PCI_L1SS_CAP,
++			      &child_l1ss_cap);
++
++	if (!(parent_l1ss_cap & PCI_L1SS_CAP_L1_PM_SS))
++		parent_l1ss_cap = 0;
++	if (!(child_l1ss_cap & PCI_L1SS_CAP_L1_PM_SS))
++		child_l1ss_cap = 0;
++
++	if (parent_l1ss_cap && child_l1ss_cap)
++		return true;
++	else
++		return false;
++}
++EXPORT_SYMBOL(pcie_aspm_ext_is_rc_ep_l1ss_capable);
++
++void pcie_aspm_ext_l1ss_enable(struct pci_dev *child, struct pci_dev *parent, bool enable)
++{
++	bool ret;
++
++	/* Disable ASPM of RC and EP */
++	ret = rockchip_pcie_bus_aspm_enable_rc_ep(child, parent, false);
++
++	if (enable) {
++		/* Enable RC then EP */
++		aspm_calc_l1ss_info(child, parent);
++		rockchip_pcie_bus_l1ss_enable_dev("RC", parent, enable);
++		rockchip_pcie_bus_l1ss_enable_dev("EP", child, enable);
++	} else {
++		/* Disable EP then RC */
++		rockchip_pcie_bus_l1ss_enable_dev("EP", child, enable);
++		rockchip_pcie_bus_l1ss_enable_dev("RC", parent, enable);
++	}
++
++	/* Enable ASPM of RC and EP only if this API disabled */
++	if (ret)
++		rockchip_pcie_bus_aspm_enable_rc_ep(child, parent, true);
++}
++EXPORT_SYMBOL(pcie_aspm_ext_l1ss_enable);
+--- /dev/null
++++ b/include/linux/aspm_ext.h
+@@ -0,0 +1,16 @@
++/* SPDX-License-Identifier: GPL-2.0 */
++
++/* Copyright (c) 2022 Rockchip Electronics Co., Ltd. */
++
++#ifndef _ASPM_EXT_H
++#define _ASPM_EXT_H
++
++#if IS_REACHABLE(CONFIG_PCIEASPM_EXT)
++bool pcie_aspm_ext_is_rc_ep_l1ss_capable(struct pci_dev *child, struct pci_dev *parent);
++void pcie_aspm_ext_l1ss_enable(struct pci_dev *child, struct pci_dev *parent, bool enable);
++#else
++static inline bool pcie_aspm_ext_is_rc_ep_l1ss_capable(struct pci_dev *child, struct pci_dev *parent) { return false; }
++static inline void pcie_aspm_ext_l1ss_enable(struct pci_dev *child, struct pci_dev *parent, bool enable) {}
++#endif
++
++#endif
diff --git a/target/linux/rockchip/patches-6.1/328-PCI-aspm_ext-Re-enable-LRT-for-L1SS-after-power-loss.patch b/target/linux/rockchip/patches-6.1/328-PCI-aspm_ext-Re-enable-LRT-for-L1SS-after-power-loss.patch
new file mode 100644
index 0000000000..84fd2b5166
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/328-PCI-aspm_ext-Re-enable-LRT-for-L1SS-after-power-loss.patch
@@ -0,0 +1,26 @@
+From 8233ef929824976915dd99328f1b0347ded24e45 Mon Sep 17 00:00:00 2001
+From: Jon Lin <jon.lin@rock-chips.com>
+Date: Fri, 24 Jun 2022 21:32:11 +0800
+Subject: [PATCH 328/383] PCI: aspm_ext: Re-enable LRT for L1SS after power
+ loss
+
+Change-Id: Iedb72ee74660a8f11f38895e06766c3b77728ba3
+Signed-off-by: Jon Lin <jon.lin@rock-chips.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/pci/pcie/aspm_ext.c | 4 ++++
+ 1 file changed, 4 insertions(+)
+
+--- a/drivers/pci/pcie/aspm_ext.c
++++ b/drivers/pci/pcie/aspm_ext.c
+@@ -322,6 +322,10 @@ void pcie_aspm_ext_l1ss_enable(struct pc
+ 	ret = rockchip_pcie_bus_aspm_enable_rc_ep(child, parent, false);
+ 
+ 	if (enable) {
++		/* LRT enable bits loss after wifi off, enable it after power on */
++		if (parent->ltr_path)
++			pcie_capability_set_word(parent, PCI_EXP_DEVCTL2, PCI_EXP_DEVCTL2_LTR_EN);
++
+ 		/* Enable RC then EP */
+ 		aspm_calc_l1ss_info(child, parent);
+ 		rockchip_pcie_bus_l1ss_enable_dev("RC", parent, enable);
diff --git a/target/linux/rockchip/patches-6.1/329-PCI-aspm_ext-Fix-Add-missing-MODULE_LICENSE.patch b/target/linux/rockchip/patches-6.1/329-PCI-aspm_ext-Fix-Add-missing-MODULE_LICENSE.patch
new file mode 100644
index 0000000000..651cc27968
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/329-PCI-aspm_ext-Fix-Add-missing-MODULE_LICENSE.patch
@@ -0,0 +1,39 @@
+From c5efbe8d0a1349f29668555019541c1b6d612d7a Mon Sep 17 00:00:00 2001
+From: Tao Huang <huangtao@rock-chips.com>
+Date: Fri, 15 Jul 2022 20:56:15 +0800
+Subject: [PATCH 329/383] PCI: aspm_ext: Fix Add missing MODULE_LICENSE()
+
+ERROR: modpost: missing MODULE_LICENSE() in drivers/pci/pcie/aspm_ext.o
+
+Signed-off-by: Tao Huang <huangtao@rock-chips.com>
+Change-Id: Id365aba7a73f02cc2c61882b46937250e64af01c
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/pci/pcie/aspm_ext.c | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
+
+--- a/drivers/pci/pcie/aspm_ext.c
++++ b/drivers/pci/pcie/aspm_ext.c
+@@ -6,6 +6,7 @@
+  */
+ 
+ #include <linux/kernel.h>
++#include <linux/module.h>
+ #include <linux/pci.h>
+ #include <linux/aspm_ext.h>
+ #include <linux/errno.h>
+@@ -95,7 +96,7 @@ static bool rockchip_pcie_bus_aspm_enabl
+ 	return true;
+ }
+ 
+-bool rockchip_pcie_bus_aspm_enable_rc_ep(struct pci_dev *child, struct pci_dev *parent, bool enable)
++static bool rockchip_pcie_bus_aspm_enable_rc_ep(struct pci_dev *child, struct pci_dev *parent, bool enable)
+ {
+ 	bool ret;
+ 
+@@ -341,3 +342,5 @@ void pcie_aspm_ext_l1ss_enable(struct pc
+ 		rockchip_pcie_bus_aspm_enable_rc_ep(child, parent, true);
+ }
+ EXPORT_SYMBOL(pcie_aspm_ext_l1ss_enable);
++
++MODULE_LICENSE("GPL");
diff --git a/target/linux/rockchip/patches-6.1/330-mmc-sdhci-of-dwcmshc-enable-host-V4-support-for-Blue.patch b/target/linux/rockchip/patches-6.1/330-mmc-sdhci-of-dwcmshc-enable-host-V4-support-for-Blue.patch
new file mode 100644
index 0000000000..9af3ba21f3
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/330-mmc-sdhci-of-dwcmshc-enable-host-V4-support-for-Blue.patch
@@ -0,0 +1,33 @@
+From fb85457dc9dc26083167e3e960a919559cee53de Mon Sep 17 00:00:00 2001
+From: Liming Sun <limings@nvidia.com>
+Date: Wed, 11 Jan 2023 13:14:58 -0500
+Subject: [PATCH 330/383] mmc: sdhci-of-dwcmshc: enable host V4 support for
+ BlueField-3 SoC
+
+This commit enables SDHCI Host V4 support on Bluefield-3 SoC to be
+consistent with the default setting in firmware(UEFI).
+
+Reviewed-by: David Woods <davwoods@nvidia.com>
+Signed-off-by: Liming Sun <limings@nvidia.com>
+Acked-by: Adrian Hunter <adrian.hunter@intel.com>
+Link: https://lore.kernel.org/r/990885f566c32ac8e6888ad6b434fb70d1a5d7af.1673460632.git.limings@nvidia.com
+Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mmc/host/sdhci-of-dwcmshc.c | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/drivers/mmc/host/sdhci-of-dwcmshc.c
++++ b/drivers/mmc/host/sdhci-of-dwcmshc.c
+@@ -528,6 +528,11 @@ static int dwcmshc_probe(struct platform
+ 			goto err_clk;
+ 	}
+ 
++#ifdef CONFIG_ACPI
++	if (pltfm_data == &sdhci_dwcmshc_bf3_pdata)
++		sdhci_enable_v4_mode(host);
++#endif
++
+ 	host->mmc->caps |= MMC_CAP_WAIT_WHILE_BUSY;
+ 
+ 	err = sdhci_setup_host(host);
diff --git a/target/linux/rockchip/patches-6.1/001-v6.3-mmc-sdhci-of-dwcmshc-Update-DLL-and-pre-change-delay-for.patch b/target/linux/rockchip/patches-6.1/331-mmc-sdhci-of-dwcmshc-Update-DLL-and-pre-change-delay.patch
similarity index 91%
rename from target/linux/rockchip/patches-6.1/001-v6.3-mmc-sdhci-of-dwcmshc-Update-DLL-and-pre-change-delay-for.patch
rename to target/linux/rockchip/patches-6.1/331-mmc-sdhci-of-dwcmshc-Update-DLL-and-pre-change-delay.patch
index 2bb542be36..173a6b60e4 100644
--- a/target/linux/rockchip/patches-6.1/001-v6.3-mmc-sdhci-of-dwcmshc-Update-DLL-and-pre-change-delay-for.patch
+++ b/target/linux/rockchip/patches-6.1/331-mmc-sdhci-of-dwcmshc-Update-DLL-and-pre-change-delay.patch
@@ -1,8 +1,8 @@
-From b75a52b0dda353aeefb4830a320589a363f49579 Mon Sep 17 00:00:00 2001
+From d6458f453d0f843ad03c6a674cc1ffa701b1d664 Mon Sep 17 00:00:00 2001
 From: Shawn Lin <shawn.lin@rock-chips.com>
 Date: Thu, 2 Feb 2023 08:35:16 +0800
-Subject: [PATCH] mmc: sdhci-of-dwcmshc: Update DLL and pre-change delay for
- rockchip platform
+Subject: [PATCH 331/383] mmc: sdhci-of-dwcmshc: Update DLL and pre-change
+ delay for rockchip platform
 
 For Rockchip platform, DLL bypass bit and start bit need to be set if
 DLL is not locked. And adjust pre-change delay to 0x3 for better signal
@@ -11,6 +11,7 @@ test result.
 Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
 Link: https://lore.kernel.org/r/1675298118-64243-2-git-send-email-shawn.lin@rock-chips.com
 Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  drivers/mmc/host/sdhci-of-dwcmshc.c | 13 +++++++++----
  1 file changed, 9 insertions(+), 4 deletions(-)
diff --git a/target/linux/rockchip/patches-6.1/332-mmc-sdhci-of-dwcmshc-add-the-missing-device-table-ID.patch b/target/linux/rockchip/patches-6.1/332-mmc-sdhci-of-dwcmshc-add-the-missing-device-table-ID.patch
new file mode 100644
index 0000000000..dc8088e811
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/332-mmc-sdhci-of-dwcmshc-add-the-missing-device-table-ID.patch
@@ -0,0 +1,28 @@
+From 8af7b973bbdd7fe934438914fc36d34c52885166 Mon Sep 17 00:00:00 2001
+From: Liming Sun <limings@nvidia.com>
+Date: Thu, 2 Feb 2023 10:29:15 -0500
+Subject: [PATCH 332/383] mmc: sdhci-of-dwcmshc: add the missing device table
+ IDs for acpi
+
+This commit adds the missing MODULE_DEVICE_TABLE for acpi, or else
+it won't be loaded automatically when compiled as a kernel module.
+
+Reviewed-by: David Thompson <davthompson@nvidia.com>
+Signed-off-by: Liming Sun <limings@nvidia.com>
+Link: https://lore.kernel.org/r/f57ad0f8fdf663465bca74467c344dfa305a3199.1675305696.git.limings@nvidia.com
+Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/mmc/host/sdhci-of-dwcmshc.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/drivers/mmc/host/sdhci-of-dwcmshc.c
++++ b/drivers/mmc/host/sdhci-of-dwcmshc.c
+@@ -451,6 +451,7 @@ static const struct acpi_device_id sdhci
+ 	},
+ 	{}
+ };
++MODULE_DEVICE_TABLE(acpi, sdhci_dwcmshc_acpi_ids);
+ #endif
+ 
+ static int dwcmshc_probe(struct platform_device *pdev)
diff --git a/target/linux/rockchip/patches-6.1/002-v6.4-mmc-sdhci-of-dwcmshc-properly-determine-max-clock-on.patch b/target/linux/rockchip/patches-6.1/333-mmc-sdhci-of-dwcmshc-properly-determine-max-clock-on.patch
similarity index 90%
rename from target/linux/rockchip/patches-6.1/002-v6.4-mmc-sdhci-of-dwcmshc-properly-determine-max-clock-on.patch
rename to target/linux/rockchip/patches-6.1/333-mmc-sdhci-of-dwcmshc-properly-determine-max-clock-on.patch
index 9d9c1b5c1c..f5f3a24e41 100644
--- a/target/linux/rockchip/patches-6.1/002-v6.4-mmc-sdhci-of-dwcmshc-properly-determine-max-clock-on.patch
+++ b/target/linux/rockchip/patches-6.1/333-mmc-sdhci-of-dwcmshc-properly-determine-max-clock-on.patch
@@ -1,8 +1,8 @@
-From 49502408007b77ff290ce62e6218cefaeedcb31a Mon Sep 17 00:00:00 2001
+From 4823aef067e0e33b0e9c5ee658d3e16e190fb462 Mon Sep 17 00:00:00 2001
 From: Vasily Khoruzhick <anarsoul@gmail.com>
 Date: Thu, 9 Mar 2023 17:03:49 -0800
-Subject: [PATCH] mmc: sdhci-of-dwcmshc: properly determine max clock on
- Rockchip
+Subject: [PATCH 333/383] mmc: sdhci-of-dwcmshc: properly determine max clock
+ on Rockchip
 
 Currently .get_max_clock returns the current clock rate for cclk_emmc
 on rk35xx, thus max clock gets set to whatever bootloader set it to.
@@ -21,6 +21,7 @@ Signed-off-by: Vasily Khoruzhick <anarsoul@gmail.com>
 Acked-by: Adrian Hunter <adrian.hunter@intel.com>
 Link: https://lore.kernel.org/r/20230310010349.509132-1-anarsoul@gmail.com
 Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  drivers/mmc/host/sdhci-of-dwcmshc.c | 9 ++++++++-
  1 file changed, 8 insertions(+), 1 deletion(-)
diff --git a/target/linux/rockchip/patches-6.1/334-dt-bindings-reset-add-rk3588-reset-definitions.patch b/target/linux/rockchip/patches-6.1/334-dt-bindings-reset-add-rk3588-reset-definitions.patch
new file mode 100644
index 0000000000..278428101d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/334-dt-bindings-reset-add-rk3588-reset-definitions.patch
@@ -0,0 +1,782 @@
+From 8812d1166868437b6d5161f3e97e139b78c139b6 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 18 Oct 2022 17:14:00 +0200
+Subject: [PATCH 334/383] dt-bindings: reset: add rk3588 reset definitions
+
+Add reset ID defines for rk3588.
+
+Compared to the downstream bindings and previous rockchip
+generations this uses continous gapless reset IDs starting
+at 0 instead of register offsets as IDs. Thus all numbers
+are different between upstream and downstream, but I kept
+the names exactly the same.
+
+Co-Developed-by: Elaine Zhang <zhangqing@rock-chips.com>
+Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>
+Acked-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221018151407.63395-3-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dt-bindings/reset/rockchip,rk3588-cru.h   | 754 ++++++++++++++++++
+ 1 file changed, 754 insertions(+)
+ create mode 100644 include/dt-bindings/reset/rockchip,rk3588-cru.h
+
+--- /dev/null
++++ b/include/dt-bindings/reset/rockchip,rk3588-cru.h
+@@ -0,0 +1,754 @@
++/* SPDX-License-Identifier: (GPL-2.0 or MIT) */
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co. Ltd.
++ * Copyright (c) 2022 Collabora Ltd.
++ *
++ * Author: Elaine Zhang <zhangqing@rock-chips.com>
++ * Author: Sebastian Reichel <sebastian.reichel@collabora.com>
++ */
++
++#ifndef _DT_BINDINGS_RESET_ROCKCHIP_RK3588_H
++#define _DT_BINDINGS_RESET_ROCKCHIP_RK3588_H
++
++#define SRST_A_TOP_BIU			0
++#define SRST_P_TOP_BIU			1
++#define SRST_P_CSIPHY0			2
++#define SRST_CSIPHY0			3
++#define SRST_P_CSIPHY1			4
++#define SRST_CSIPHY1			5
++#define SRST_A_TOP_M500_BIU		6
++
++#define SRST_A_TOP_M400_BIU		7
++#define SRST_A_TOP_S200_BIU		8
++#define SRST_A_TOP_S400_BIU		9
++#define SRST_A_TOP_M300_BIU		10
++#define SRST_USBDP_COMBO_PHY0_INIT	11
++#define SRST_USBDP_COMBO_PHY0_CMN	12
++#define SRST_USBDP_COMBO_PHY0_LANE	13
++#define SRST_USBDP_COMBO_PHY0_PCS	14
++#define SRST_USBDP_COMBO_PHY1_INIT	15
++
++#define SRST_USBDP_COMBO_PHY1_CMN	16
++#define SRST_USBDP_COMBO_PHY1_LANE	17
++#define SRST_USBDP_COMBO_PHY1_PCS	18
++#define SRST_DCPHY0			19
++#define SRST_P_MIPI_DCPHY0		20
++#define SRST_P_MIPI_DCPHY0_GRF		21
++
++#define SRST_DCPHY1			22
++#define SRST_P_MIPI_DCPHY1		23
++#define SRST_P_MIPI_DCPHY1_GRF		24
++#define SRST_P_APB2ASB_SLV_CDPHY	25
++#define SRST_P_APB2ASB_SLV_CSIPHY	26
++#define SRST_P_APB2ASB_SLV_VCCIO3_5	27
++#define SRST_P_APB2ASB_SLV_VCCIO6	28
++#define SRST_P_APB2ASB_SLV_EMMCIO	29
++#define SRST_P_APB2ASB_SLV_IOC_TOP	30
++#define SRST_P_APB2ASB_SLV_IOC_RIGHT	31
++
++#define SRST_P_CRU			32
++#define SRST_A_CHANNEL_SECURE2VO1USB	33
++#define SRST_A_CHANNEL_SECURE2CENTER	34
++#define SRST_H_CHANNEL_SECURE2VO1USB	35
++#define SRST_H_CHANNEL_SECURE2CENTER	36
++
++#define SRST_P_CHANNEL_SECURE2VO1USB	37
++#define SRST_P_CHANNEL_SECURE2CENTER	38
++
++#define SRST_H_AUDIO_BIU		39
++#define SRST_P_AUDIO_BIU		40
++#define SRST_H_I2S0_8CH			41
++#define SRST_M_I2S0_8CH_TX		42
++#define SRST_M_I2S0_8CH_RX		43
++#define SRST_P_ACDCDIG			44
++#define SRST_H_I2S2_2CH			45
++#define SRST_H_I2S3_2CH			46
++
++#define SRST_M_I2S2_2CH			47
++#define SRST_M_I2S3_2CH			48
++#define SRST_DAC_ACDCDIG		49
++#define SRST_H_SPDIF0			50
++
++#define SRST_M_SPDIF0			51
++#define SRST_H_SPDIF1			52
++#define SRST_M_SPDIF1			53
++#define SRST_H_PDM1			54
++#define SRST_PDM1			55
++
++#define SRST_A_BUS_BIU			56
++#define SRST_P_BUS_BIU			57
++#define SRST_A_GIC			58
++#define SRST_A_GIC_DBG			59
++#define SRST_A_DMAC0			60
++#define SRST_A_DMAC1			61
++#define SRST_A_DMAC2			62
++#define SRST_P_I2C1			63
++#define SRST_P_I2C2			64
++#define SRST_P_I2C3			65
++#define SRST_P_I2C4			66
++#define SRST_P_I2C5			67
++#define SRST_P_I2C6			68
++#define SRST_P_I2C7			69
++#define SRST_P_I2C8			70
++
++#define SRST_I2C1			71
++#define SRST_I2C2			72
++#define SRST_I2C3			73
++#define SRST_I2C4			74
++#define SRST_I2C5			75
++#define SRST_I2C6			76
++#define SRST_I2C7			77
++#define SRST_I2C8			78
++#define SRST_P_CAN0			79
++#define SRST_CAN0			80
++#define SRST_P_CAN1			81
++#define SRST_CAN1			82
++#define SRST_P_CAN2			83
++#define SRST_CAN2			84
++#define SRST_P_SARADC			85
++
++#define SRST_P_TSADC			86
++#define SRST_TSADC			87
++#define SRST_P_UART1			88
++#define SRST_P_UART2			89
++#define SRST_P_UART3			90
++#define SRST_P_UART4			91
++#define SRST_P_UART5			92
++#define SRST_P_UART6			93
++#define SRST_P_UART7			94
++#define SRST_P_UART8			95
++#define SRST_P_UART9			96
++#define SRST_S_UART1			97
++
++#define SRST_S_UART2			98
++#define SRST_S_UART3			99
++#define SRST_S_UART4			100
++#define SRST_S_UART5			101
++#define SRST_S_UART6			102
++#define SRST_S_UART7			103
++
++#define SRST_S_UART8			104
++#define SRST_S_UART9			105
++#define SRST_P_SPI0			106
++#define SRST_P_SPI1			107
++#define SRST_P_SPI2			108
++#define SRST_P_SPI3			109
++#define SRST_P_SPI4			110
++#define SRST_SPI0			111
++#define SRST_SPI1			112
++#define SRST_SPI2			113
++#define SRST_SPI3			114
++#define SRST_SPI4			115
++
++#define SRST_P_WDT0			116
++#define SRST_T_WDT0			117
++#define SRST_P_SYS_GRF			118
++#define SRST_P_PWM1			119
++#define SRST_PWM1			120
++#define SRST_P_PWM2			121
++#define SRST_PWM2			122
++#define SRST_P_PWM3			123
++#define SRST_PWM3			124
++#define SRST_P_BUSTIMER0		125
++#define SRST_P_BUSTIMER1		126
++#define SRST_BUSTIMER0			127
++
++#define SRST_BUSTIMER1			128
++#define SRST_BUSTIMER2			129
++#define SRST_BUSTIMER3			130
++#define SRST_BUSTIMER4			131
++#define SRST_BUSTIMER5			132
++#define SRST_BUSTIMER6			133
++#define SRST_BUSTIMER7			134
++#define SRST_BUSTIMER8			135
++#define SRST_BUSTIMER9			136
++#define SRST_BUSTIMER10			137
++#define SRST_BUSTIMER11			138
++#define SRST_P_MAILBOX0			139
++#define SRST_P_MAILBOX1			140
++#define SRST_P_MAILBOX2			141
++#define SRST_P_GPIO1			142
++#define SRST_GPIO1			143
++
++#define SRST_P_GPIO2			144
++#define SRST_GPIO2			145
++#define SRST_P_GPIO3			146
++#define SRST_GPIO3			147
++#define SRST_P_GPIO4			148
++#define SRST_GPIO4			149
++#define SRST_A_DECOM			150
++#define SRST_P_DECOM			151
++#define SRST_D_DECOM			152
++#define SRST_P_TOP			153
++#define SRST_A_GICADB_GIC2CORE_BUS	154
++#define SRST_P_DFT2APB			155
++#define SRST_P_APB2ASB_MST_TOP		156
++#define SRST_P_APB2ASB_MST_CDPHY	157
++#define SRST_P_APB2ASB_MST_BOT_RIGHT	158
++
++#define SRST_P_APB2ASB_MST_IOC_TOP	159
++#define SRST_P_APB2ASB_MST_IOC_RIGHT	160
++#define SRST_P_APB2ASB_MST_CSIPHY	161
++#define SRST_P_APB2ASB_MST_VCCIO3_5	162
++#define SRST_P_APB2ASB_MST_VCCIO6	163
++#define SRST_P_APB2ASB_MST_EMMCIO	164
++#define SRST_A_SPINLOCK			165
++#define SRST_P_OTPC_NS			166
++#define SRST_OTPC_NS			167
++#define SRST_OTPC_ARB			168
++
++#define SRST_P_BUSIOC			169
++#define SRST_P_PMUCM0_INTMUX		170
++#define SRST_P_DDRCM0_INTMUX		171
++
++#define SRST_P_DDR_DFICTL_CH0		172
++#define SRST_P_DDR_MON_CH0		173
++#define SRST_P_DDR_STANDBY_CH0		174
++#define SRST_P_DDR_UPCTL_CH0		175
++#define SRST_TM_DDR_MON_CH0		176
++#define SRST_P_DDR_GRF_CH01		177
++#define SRST_DFI_CH0			178
++#define SRST_SBR_CH0			179
++#define SRST_DDR_UPCTL_CH0		180
++#define SRST_DDR_DFICTL_CH0		181
++#define SRST_DDR_MON_CH0		182
++#define SRST_DDR_STANDBY_CH0		183
++#define SRST_A_DDR_UPCTL_CH0		184
++#define SRST_P_DDR_DFICTL_CH1		185
++#define SRST_P_DDR_MON_CH1		186
++#define SRST_P_DDR_STANDBY_CH1		187
++
++#define SRST_P_DDR_UPCTL_CH1		188
++#define SRST_TM_DDR_MON_CH1		189
++#define SRST_DFI_CH1			190
++#define SRST_SBR_CH1			191
++#define SRST_DDR_UPCTL_CH1		192
++#define SRST_DDR_DFICTL_CH1		193
++#define SRST_DDR_MON_CH1		194
++#define SRST_DDR_STANDBY_CH1		195
++#define SRST_A_DDR_UPCTL_CH1		196
++#define SRST_A_DDR01_MSCH0		197
++#define SRST_A_DDR01_RS_MSCH0		198
++#define SRST_A_DDR01_FRS_MSCH0		199
++
++#define SRST_A_DDR01_SCRAMBLE0		200
++#define SRST_A_DDR01_FRS_SCRAMBLE0	201
++#define SRST_A_DDR01_MSCH1		202
++#define SRST_A_DDR01_RS_MSCH1		203
++#define SRST_A_DDR01_FRS_MSCH1		204
++#define SRST_A_DDR01_SCRAMBLE1		205
++#define SRST_A_DDR01_FRS_SCRAMBLE1	206
++#define SRST_P_DDR01_MSCH0		207
++#define SRST_P_DDR01_MSCH1		208
++
++#define SRST_P_DDR_DFICTL_CH2		209
++#define SRST_P_DDR_MON_CH2		210
++#define SRST_P_DDR_STANDBY_CH2		211
++#define SRST_P_DDR_UPCTL_CH2		212
++#define SRST_TM_DDR_MON_CH2		213
++#define SRST_P_DDR_GRF_CH23		214
++#define SRST_DFI_CH2			215
++#define SRST_SBR_CH2			216
++#define SRST_DDR_UPCTL_CH2		217
++#define SRST_DDR_DFICTL_CH2		218
++#define SRST_DDR_MON_CH2		219
++#define SRST_DDR_STANDBY_CH2		220
++#define SRST_A_DDR_UPCTL_CH2		221
++#define SRST_P_DDR_DFICTL_CH3		222
++#define SRST_P_DDR_MON_CH3		223
++#define SRST_P_DDR_STANDBY_CH3		224
++
++#define SRST_P_DDR_UPCTL_CH3		225
++#define SRST_TM_DDR_MON_CH3		226
++#define SRST_DFI_CH3			227
++#define SRST_SBR_CH3			228
++#define SRST_DDR_UPCTL_CH3		229
++#define SRST_DDR_DFICTL_CH3		230
++#define SRST_DDR_MON_CH3		231
++#define SRST_DDR_STANDBY_CH3		232
++#define SRST_A_DDR_UPCTL_CH3		233
++#define SRST_A_DDR23_MSCH2		234
++#define SRST_A_DDR23_RS_MSCH2		235
++#define SRST_A_DDR23_FRS_MSCH2		236
++
++#define SRST_A_DDR23_SCRAMBLE2		237
++#define SRST_A_DDR23_FRS_SCRAMBLE2	238
++#define SRST_A_DDR23_MSCH3		239
++#define SRST_A_DDR23_RS_MSCH3		240
++#define SRST_A_DDR23_FRS_MSCH3		241
++#define SRST_A_DDR23_SCRAMBLE3		242
++#define SRST_A_DDR23_FRS_SCRAMBLE3	243
++#define SRST_P_DDR23_MSCH2		244
++#define SRST_P_DDR23_MSCH3		245
++
++#define SRST_ISP1			246
++#define SRST_ISP1_VICAP			247
++#define SRST_A_ISP1_BIU			248
++#define SRST_H_ISP1_BIU			249
++
++#define SRST_A_RKNN1			250
++#define SRST_A_RKNN1_BIU		251
++#define SRST_H_RKNN1			252
++#define SRST_H_RKNN1_BIU		253
++
++#define SRST_A_RKNN2			254
++#define SRST_A_RKNN2_BIU		255
++#define SRST_H_RKNN2			256
++#define SRST_H_RKNN2_BIU		257
++
++#define SRST_A_RKNN_DSU0		258
++#define SRST_P_NPUTOP_BIU		259
++#define SRST_P_NPU_TIMER		260
++#define SRST_NPUTIMER0			261
++#define SRST_NPUTIMER1			262
++#define SRST_P_NPU_WDT			263
++#define SRST_T_NPU_WDT			264
++#define SRST_P_NPU_PVTM			265
++#define SRST_P_NPU_GRF			266
++#define SRST_NPU_PVTM			267
++
++#define SRST_NPU_PVTPLL			268
++#define SRST_H_NPU_CM0_BIU		269
++#define SRST_F_NPU_CM0_CORE		270
++#define SRST_T_NPU_CM0_JTAG		271
++#define SRST_A_RKNN0			272
++#define SRST_A_RKNN0_BIU		273
++#define SRST_H_RKNN0			274
++#define SRST_H_RKNN0_BIU		275
++
++#define SRST_H_NVM_BIU			276
++#define SRST_A_NVM_BIU			277
++#define SRST_H_EMMC			278
++#define SRST_A_EMMC			279
++#define SRST_C_EMMC			280
++#define SRST_B_EMMC			281
++#define SRST_T_EMMC			282
++#define SRST_S_SFC			283
++#define SRST_H_SFC			284
++#define SRST_H_SFC_XIP			285
++
++#define SRST_P_GRF			286
++#define SRST_P_DEC_BIU			287
++#define SRST_P_PHP_BIU			288
++#define SRST_A_PCIE_GRIDGE		289
++#define SRST_A_PHP_BIU			290
++#define SRST_A_GMAC0			291
++#define SRST_A_GMAC1			292
++#define SRST_A_PCIE_BIU			293
++#define SRST_PCIE0_POWER_UP		294
++#define SRST_PCIE1_POWER_UP		295
++#define SRST_PCIE2_POWER_UP		296
++
++#define SRST_PCIE3_POWER_UP		297
++#define SRST_PCIE4_POWER_UP		298
++#define SRST_P_PCIE0			299
++#define SRST_P_PCIE1			300
++#define SRST_P_PCIE2			301
++#define SRST_P_PCIE3			302
++
++#define SRST_P_PCIE4			303
++#define SRST_A_PHP_GIC_ITS		304
++#define SRST_A_MMU_PCIE			305
++#define SRST_A_MMU_PHP			306
++#define SRST_A_MMU_BIU			307
++
++#define SRST_A_USB3OTG2			308
++
++#define SRST_PMALIVE0			309
++#define SRST_PMALIVE1			310
++#define SRST_PMALIVE2			311
++#define SRST_A_SATA0			312
++#define SRST_A_SATA1			313
++#define SRST_A_SATA2			314
++#define SRST_RXOOB0			315
++#define SRST_RXOOB1			316
++#define SRST_RXOOB2			317
++#define SRST_ASIC0			318
++#define SRST_ASIC1			319
++#define SRST_ASIC2			320
++
++#define SRST_A_RKVDEC_CCU		321
++#define SRST_H_RKVDEC0			322
++#define SRST_A_RKVDEC0			323
++#define SRST_H_RKVDEC0_BIU		324
++#define SRST_A_RKVDEC0_BIU		325
++#define SRST_RKVDEC0_CA			326
++#define SRST_RKVDEC0_HEVC_CA		327
++#define SRST_RKVDEC0_CORE		328
++
++#define SRST_H_RKVDEC1			329
++#define SRST_A_RKVDEC1			330
++#define SRST_H_RKVDEC1_BIU		331
++#define SRST_A_RKVDEC1_BIU		332
++#define SRST_RKVDEC1_CA			333
++#define SRST_RKVDEC1_HEVC_CA		334
++#define SRST_RKVDEC1_CORE		335
++
++#define SRST_A_USB_BIU			336
++#define SRST_H_USB_BIU			337
++#define SRST_A_USB3OTG0			338
++#define SRST_A_USB3OTG1			339
++#define SRST_H_HOST0			340
++#define SRST_H_HOST_ARB0		341
++#define SRST_H_HOST1			342
++#define SRST_H_HOST_ARB1		343
++#define SRST_A_USB_GRF			344
++#define SRST_C_USB2P0_HOST0		345
++
++#define SRST_C_USB2P0_HOST1		346
++#define SRST_HOST_UTMI0			347
++#define SRST_HOST_UTMI1			348
++
++#define SRST_A_VDPU_BIU			349
++#define SRST_A_VDPU_LOW_BIU		350
++#define SRST_H_VDPU_BIU			351
++#define SRST_A_JPEG_DECODER_BIU		352
++#define SRST_A_VPU			353
++#define SRST_H_VPU			354
++#define SRST_A_JPEG_ENCODER0		355
++#define SRST_H_JPEG_ENCODER0		356
++#define SRST_A_JPEG_ENCODER1		357
++#define SRST_H_JPEG_ENCODER1		358
++#define SRST_A_JPEG_ENCODER2		359
++#define SRST_H_JPEG_ENCODER2		360
++
++#define SRST_A_JPEG_ENCODER3		361
++#define SRST_H_JPEG_ENCODER3		362
++#define SRST_A_JPEG_DECODER		363
++#define SRST_H_JPEG_DECODER		364
++#define SRST_H_IEP2P0			365
++#define SRST_A_IEP2P0			366
++#define SRST_IEP2P0_CORE		367
++#define SRST_H_RGA2			368
++#define SRST_A_RGA2			369
++#define SRST_RGA2_CORE			370
++#define SRST_H_RGA3_0			371
++#define SRST_A_RGA3_0			372
++#define SRST_RGA3_0_CORE		373
++
++#define SRST_H_RKVENC0_BIU		374
++#define SRST_A_RKVENC0_BIU		375
++#define SRST_H_RKVENC0			376
++#define SRST_A_RKVENC0			377
++#define SRST_RKVENC0_CORE		378
++
++#define SRST_H_RKVENC1_BIU		379
++#define SRST_A_RKVENC1_BIU		380
++#define SRST_H_RKVENC1			381
++#define SRST_A_RKVENC1			382
++#define SRST_RKVENC1_CORE		383
++
++#define SRST_A_VI_BIU			384
++#define SRST_H_VI_BIU			385
++#define SRST_P_VI_BIU			386
++#define SRST_D_VICAP			387
++#define SRST_A_VICAP			388
++#define SRST_H_VICAP			389
++#define SRST_ISP0			390
++#define SRST_ISP0_VICAP			391
++
++#define SRST_FISHEYE0			392
++#define SRST_FISHEYE1			393
++#define SRST_P_CSI_HOST_0		394
++#define SRST_P_CSI_HOST_1		395
++#define SRST_P_CSI_HOST_2		396
++#define SRST_P_CSI_HOST_3		397
++#define SRST_P_CSI_HOST_4		398
++#define SRST_P_CSI_HOST_5		399
++
++#define SRST_CSIHOST0_VICAP		400
++#define SRST_CSIHOST1_VICAP		401
++#define SRST_CSIHOST2_VICAP		402
++#define SRST_CSIHOST3_VICAP		403
++#define SRST_CSIHOST4_VICAP		404
++#define SRST_CSIHOST5_VICAP		405
++#define SRST_CIFIN			406
++
++#define SRST_A_VOP_BIU			407
++#define SRST_A_VOP_LOW_BIU		408
++#define SRST_H_VOP_BIU			409
++#define SRST_P_VOP_BIU			410
++#define SRST_H_VOP			411
++#define SRST_A_VOP			412
++#define SRST_D_VOP0			413
++#define SRST_D_VOP2HDMI_BRIDGE0		414
++#define SRST_D_VOP2HDMI_BRIDGE1		415
++
++#define SRST_D_VOP1			416
++#define SRST_D_VOP2			417
++#define SRST_D_VOP3			418
++#define SRST_P_VOPGRF			419
++#define SRST_P_DSIHOST0			420
++#define SRST_P_DSIHOST1			421
++#define SRST_DSIHOST0			422
++#define SRST_DSIHOST1			423
++#define SRST_VOP_PMU			424
++#define SRST_P_VOP_CHANNEL_BIU		425
++
++#define SRST_H_VO0_BIU			426
++#define SRST_H_VO0_S_BIU		427
++#define SRST_P_VO0_BIU			428
++#define SRST_P_VO0_S_BIU		429
++#define SRST_A_HDCP0_BIU		430
++#define SRST_P_VO0GRF			431
++#define SRST_H_HDCP_KEY0		432
++#define SRST_A_HDCP0			433
++#define SRST_H_HDCP0			434
++#define SRST_HDCP0			435
++
++#define SRST_P_TRNG0			436
++#define SRST_DP0			437
++#define SRST_DP1			438
++#define SRST_H_I2S4_8CH			439
++#define SRST_M_I2S4_8CH_TX		440
++#define SRST_H_I2S8_8CH			441
++
++#define SRST_M_I2S8_8CH_TX		442
++#define SRST_H_SPDIF2_DP0		443
++#define SRST_M_SPDIF2_DP0		444
++#define SRST_H_SPDIF5_DP1		445
++#define SRST_M_SPDIF5_DP1		446
++
++#define SRST_A_HDCP1_BIU		447
++#define SRST_A_VO1_BIU			448
++#define SRST_H_VOP1_BIU			449
++#define SRST_H_VOP1_S_BIU		450
++#define SRST_P_VOP1_BIU			451
++#define SRST_P_VO1GRF			452
++#define SRST_P_VO1_S_BIU		453
++
++#define SRST_H_I2S7_8CH			454
++#define SRST_M_I2S7_8CH_RX		455
++#define SRST_H_HDCP_KEY1		456
++#define SRST_A_HDCP1			457
++#define SRST_H_HDCP1			458
++#define SRST_HDCP1			459
++#define SRST_P_TRNG1			460
++#define SRST_P_HDMITX0			461
++
++#define SRST_HDMITX0_REF		462
++#define SRST_P_HDMITX1			463
++#define SRST_HDMITX1_REF		464
++#define SRST_A_HDMIRX			465
++#define SRST_P_HDMIRX			466
++#define SRST_HDMIRX_REF			467
++
++#define SRST_P_EDP0			468
++#define SRST_EDP0_24M			469
++#define SRST_P_EDP1			470
++#define SRST_EDP1_24M			471
++#define SRST_M_I2S5_8CH_TX		472
++#define SRST_H_I2S5_8CH			473
++#define SRST_M_I2S6_8CH_TX		474
++
++#define SRST_M_I2S6_8CH_RX		475
++#define SRST_H_I2S6_8CH			476
++#define SRST_H_SPDIF3			477
++#define SRST_M_SPDIF3			478
++#define SRST_H_SPDIF4			479
++#define SRST_M_SPDIF4			480
++#define SRST_H_SPDIFRX0			481
++#define SRST_M_SPDIFRX0			482
++#define SRST_H_SPDIFRX1			483
++#define SRST_M_SPDIFRX1			484
++
++#define SRST_H_SPDIFRX2			485
++#define SRST_M_SPDIFRX2			486
++#define SRST_LINKSYM_HDMITXPHY0		487
++#define SRST_LINKSYM_HDMITXPHY1		488
++#define SRST_VO1_BRIDGE0		489
++#define SRST_VO1_BRIDGE1		490
++
++#define SRST_H_I2S9_8CH			491
++#define SRST_M_I2S9_8CH_RX		492
++#define SRST_H_I2S10_8CH		493
++#define SRST_M_I2S10_8CH_RX		494
++#define SRST_P_S_HDMIRX			495
++
++#define SRST_GPU			496
++#define SRST_SYS_GPU			497
++#define SRST_A_S_GPU_BIU		498
++#define SRST_A_M0_GPU_BIU		499
++#define SRST_A_M1_GPU_BIU		500
++#define SRST_A_M2_GPU_BIU		501
++#define SRST_A_M3_GPU_BIU		502
++#define SRST_P_GPU_BIU			503
++#define SRST_P_GPU_PVTM			504
++
++#define SRST_GPU_PVTM			505
++#define SRST_P_GPU_GRF			506
++#define SRST_GPU_PVTPLL			507
++#define SRST_GPU_JTAG			508
++
++#define SRST_A_AV1_BIU			509
++#define SRST_A_AV1			510
++#define SRST_P_AV1_BIU			511
++#define SRST_P_AV1			512
++
++#define SRST_A_DDR_BIU			513
++#define SRST_A_DMA2DDR			514
++#define SRST_A_DDR_SHAREMEM		515
++#define SRST_A_DDR_SHAREMEM_BIU		516
++#define SRST_A_CENTER_S200_BIU		517
++#define SRST_A_CENTER_S400_BIU		518
++#define SRST_H_AHB2APB			519
++#define SRST_H_CENTER_BIU		520
++#define SRST_F_DDR_CM0_CORE		521
++
++#define SRST_DDR_TIMER0			522
++#define SRST_DDR_TIMER1			523
++#define SRST_T_WDT_DDR			524
++#define SRST_T_DDR_CM0_JTAG		525
++#define SRST_P_CENTER_GRF		526
++#define SRST_P_AHB2APB			527
++#define SRST_P_WDT			528
++#define SRST_P_TIMER			529
++#define SRST_P_DMA2DDR			530
++#define SRST_P_SHAREMEM			531
++#define SRST_P_CENTER_BIU		532
++#define SRST_P_CENTER_CHANNEL_BIU	533
++
++#define SRST_P_USBDPGRF0		534
++#define SRST_P_USBDPPHY0		535
++#define SRST_P_USBDPGRF1		536
++#define SRST_P_USBDPPHY1		537
++#define SRST_P_HDPTX0			538
++#define SRST_P_HDPTX1			539
++#define SRST_P_APB2ASB_SLV_BOT_RIGHT	540
++#define SRST_P_USB2PHY_U3_0_GRF0	541
++#define SRST_P_USB2PHY_U3_1_GRF0	542
++#define SRST_P_USB2PHY_U2_0_GRF0	543
++#define SRST_P_USB2PHY_U2_1_GRF0	544
++#define SRST_HDPTX0_ROPLL		545
++#define SRST_HDPTX0_LCPLL		546
++#define SRST_HDPTX0			547
++#define SRST_HDPTX1_ROPLL		548
++
++#define SRST_HDPTX1_LCPLL		549
++#define SRST_HDPTX1			550
++#define SRST_HDPTX0_HDMIRXPHY_SET	551
++#define SRST_USBDP_COMBO_PHY0		552
++#define SRST_USBDP_COMBO_PHY0_LCPLL	553
++#define SRST_USBDP_COMBO_PHY0_ROPLL	554
++#define SRST_USBDP_COMBO_PHY0_PCS_HS	555
++#define SRST_USBDP_COMBO_PHY1		556
++#define SRST_USBDP_COMBO_PHY1_LCPLL	557
++#define SRST_USBDP_COMBO_PHY1_ROPLL	558
++#define SRST_USBDP_COMBO_PHY1_PCS_HS	559
++#define SRST_HDMIHDP0			560
++#define SRST_HDMIHDP1			561
++
++#define SRST_A_VO1USB_TOP_BIU		562
++#define SRST_H_VO1USB_TOP_BIU		563
++
++#define SRST_H_SDIO_BIU			564
++#define SRST_H_SDIO			565
++#define SRST_SDIO			566
++
++#define SRST_H_RGA3_BIU			567
++#define SRST_A_RGA3_BIU			568
++#define SRST_H_RGA3_1			569
++#define SRST_A_RGA3_1			570
++#define SRST_RGA3_1_CORE		571
++
++#define SRST_REF_PIPE_PHY0		572
++#define SRST_REF_PIPE_PHY1		573
++#define SRST_REF_PIPE_PHY2		574
++
++#define SRST_P_PHPTOP_CRU		575
++#define SRST_P_PCIE2_GRF0		576
++#define SRST_P_PCIE2_GRF1		577
++#define SRST_P_PCIE2_GRF2		578
++#define SRST_P_PCIE2_PHY0		579
++#define SRST_P_PCIE2_PHY1		580
++#define SRST_P_PCIE2_PHY2		581
++#define SRST_P_PCIE3_PHY		582
++#define SRST_P_APB2ASB_SLV_CHIP_TOP	583
++#define SRST_PCIE30_PHY			584
++
++#define SRST_H_PMU1_BIU			585
++#define SRST_P_PMU1_BIU			586
++#define SRST_H_PMU_CM0_BIU		587
++#define SRST_F_PMU_CM0_CORE		588
++#define SRST_T_PMU1_CM0_JTAG		589
++
++#define SRST_DDR_FAIL_SAFE		590
++#define SRST_P_CRU_PMU1			591
++#define SRST_P_PMU1_GRF			592
++#define SRST_P_PMU1_IOC			593
++#define SRST_P_PMU1WDT			594
++#define SRST_T_PMU1WDT			595
++#define SRST_P_PMU1TIMER		596
++#define SRST_PMU1TIMER0			597
++#define SRST_PMU1TIMER1			598
++#define SRST_P_PMU1PWM			599
++#define SRST_PMU1PWM			600
++
++#define SRST_P_I2C0			601
++#define SRST_I2C0			602
++#define SRST_S_UART0			603
++#define SRST_P_UART0			604
++#define SRST_H_I2S1_8CH			605
++#define SRST_M_I2S1_8CH_TX		606
++#define SRST_M_I2S1_8CH_RX		607
++#define SRST_H_PDM0			608
++#define SRST_PDM0			609
++
++#define SRST_H_VAD			610
++#define SRST_HDPTX0_INIT		611
++#define SRST_HDPTX0_CMN			612
++#define SRST_HDPTX0_LANE		613
++#define SRST_HDPTX1_INIT		614
++
++#define SRST_HDPTX1_CMN			615
++#define SRST_HDPTX1_LANE		616
++#define SRST_M_MIPI_DCPHY0		617
++#define SRST_S_MIPI_DCPHY0		618
++#define SRST_M_MIPI_DCPHY1		619
++#define SRST_S_MIPI_DCPHY1		620
++#define SRST_OTGPHY_U3_0		621
++#define SRST_OTGPHY_U3_1		622
++#define SRST_OTGPHY_U2_0		623
++#define SRST_OTGPHY_U2_1		624
++
++#define SRST_P_PMU0GRF			625
++#define SRST_P_PMU0IOC			626
++#define SRST_P_GPIO0			627
++#define SRST_GPIO0			628
++
++#define SRST_A_SECURE_NS_BIU		629
++#define SRST_H_SECURE_NS_BIU		630
++#define SRST_A_SECURE_S_BIU		631
++#define SRST_H_SECURE_S_BIU		632
++#define SRST_P_SECURE_S_BIU		633
++#define SRST_CRYPTO_CORE		634
++
++#define SRST_CRYPTO_PKA			635
++#define SRST_CRYPTO_RNG			636
++#define SRST_A_CRYPTO			637
++#define SRST_H_CRYPTO			638
++#define SRST_KEYLADDER_CORE		639
++#define SRST_KEYLADDER_RNG		640
++#define SRST_A_KEYLADDER		641
++#define SRST_H_KEYLADDER		642
++#define SRST_P_OTPC_S			643
++#define SRST_OTPC_S			644
++#define SRST_WDT_S			645
++
++#define SRST_T_WDT_S			646
++#define SRST_H_BOOTROM			647
++#define SRST_A_DCF			648
++#define SRST_P_DCF			649
++#define SRST_H_BOOTROM_NS		650
++#define SRST_P_KEYLADDER		651
++#define SRST_H_TRNG_S			652
++
++#define SRST_H_TRNG_NS			653
++#define SRST_D_SDMMC_BUFFER		654
++#define SRST_H_SDMMC			655
++#define SRST_H_SDMMC_BUFFER		656
++#define SRST_SDMMC			657
++#define SRST_P_TRNG_CHK			658
++#define SRST_TRNG_S			659
++
++#endif
diff --git a/target/linux/rockchip/patches-6.1/335-rtc-rk808-reduce-struct-rk808-usage.patch b/target/linux/rockchip/patches-6.1/335-rtc-rk808-reduce-struct-rk808-usage.patch
new file mode 100644
index 0000000000..21e6782826
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/335-rtc-rk808-reduce-struct-rk808-usage.patch
@@ -0,0 +1,216 @@
+From 65caf6731af81513a229157fa2fd6d469099375d Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 20 Oct 2022 22:42:41 +0200
+Subject: [PATCH 335/383] rtc: rk808: reduce 'struct rk808' usage
+
+Reduce usage of 'struct rk808' (driver data of the parent MFD), so
+that only the chip variant field is still being accessed directly.
+This allows restructuring the MFD driver to support SPI based
+PMICs.
+
+Acked-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221020204251.108565-4-sebastian.reichel@collabora.com
+Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/rtc/rtc-rk808.c | 47 ++++++++++++++++++-----------------------
+ 1 file changed, 20 insertions(+), 27 deletions(-)
+
+--- a/drivers/rtc/rtc-rk808.c
++++ b/drivers/rtc/rtc-rk808.c
+@@ -14,7 +14,6 @@
+ #include <linux/bcd.h>
+ #include <linux/mfd/rk808.h>
+ #include <linux/platform_device.h>
+-#include <linux/i2c.h>
+ 
+ /* RTC_CTRL_REG bitfields */
+ #define BIT_RTC_CTRL_REG_STOP_RTC_M		BIT(0)
+@@ -51,7 +50,7 @@ struct rk_rtc_compat_reg {
+ };
+ 
+ struct rk808_rtc {
+-	struct rk808 *rk808;
++	struct regmap *regmap;
+ 	struct rtc_device *rtc;
+ 	struct rk_rtc_compat_reg *creg;
+ 	int irq;
+@@ -97,12 +96,11 @@ static void gregorian_to_rockchip(struct
+ static int rk808_rtc_readtime(struct device *dev, struct rtc_time *tm)
+ {
+ 	struct rk808_rtc *rk808_rtc = dev_get_drvdata(dev);
+-	struct rk808 *rk808 = rk808_rtc->rk808;
+ 	u8 rtc_data[NUM_TIME_REGS];
+ 	int ret;
+ 
+ 	/* Force an update of the shadowed registers right now */
+-	ret = regmap_update_bits(rk808->regmap, rk808_rtc->creg->ctrl_reg,
++	ret = regmap_update_bits(rk808_rtc->regmap, rk808_rtc->creg->ctrl_reg,
+ 				 BIT_RTC_CTRL_REG_RTC_GET_TIME,
+ 				 BIT_RTC_CTRL_REG_RTC_GET_TIME);
+ 	if (ret) {
+@@ -116,7 +114,7 @@ static int rk808_rtc_readtime(struct dev
+ 	 * 32khz. If we clear the GET_TIME bit here, the time of i2c transfer
+ 	 * certainly more than 31.25us: 16 * 2.5us at 400kHz bus frequency.
+ 	 */
+-	ret = regmap_update_bits(rk808->regmap, rk808_rtc->creg->ctrl_reg,
++	ret = regmap_update_bits(rk808_rtc->regmap, rk808_rtc->creg->ctrl_reg,
+ 				 BIT_RTC_CTRL_REG_RTC_GET_TIME,
+ 				 0);
+ 	if (ret) {
+@@ -124,7 +122,7 @@ static int rk808_rtc_readtime(struct dev
+ 		return ret;
+ 	}
+ 
+-	ret = regmap_bulk_read(rk808->regmap, rk808_rtc->creg->seconds_reg,
++	ret = regmap_bulk_read(rk808_rtc->regmap, rk808_rtc->creg->seconds_reg,
+ 			       rtc_data, NUM_TIME_REGS);
+ 	if (ret) {
+ 		dev_err(dev, "Failed to bulk read rtc_data: %d\n", ret);
+@@ -148,7 +146,6 @@ static int rk808_rtc_readtime(struct dev
+ static int rk808_rtc_set_time(struct device *dev, struct rtc_time *tm)
+ {
+ 	struct rk808_rtc *rk808_rtc = dev_get_drvdata(dev);
+-	struct rk808 *rk808 = rk808_rtc->rk808;
+ 	u8 rtc_data[NUM_TIME_REGS];
+ 	int ret;
+ 
+@@ -163,7 +160,7 @@ static int rk808_rtc_set_time(struct dev
+ 	rtc_data[6] = bin2bcd(tm->tm_wday);
+ 
+ 	/* Stop RTC while updating the RTC registers */
+-	ret = regmap_update_bits(rk808->regmap, rk808_rtc->creg->ctrl_reg,
++	ret = regmap_update_bits(rk808_rtc->regmap, rk808_rtc->creg->ctrl_reg,
+ 				 BIT_RTC_CTRL_REG_STOP_RTC_M,
+ 				 BIT_RTC_CTRL_REG_STOP_RTC_M);
+ 	if (ret) {
+@@ -171,14 +168,14 @@ static int rk808_rtc_set_time(struct dev
+ 		return ret;
+ 	}
+ 
+-	ret = regmap_bulk_write(rk808->regmap, rk808_rtc->creg->seconds_reg,
++	ret = regmap_bulk_write(rk808_rtc->regmap, rk808_rtc->creg->seconds_reg,
+ 				rtc_data, NUM_TIME_REGS);
+ 	if (ret) {
+ 		dev_err(dev, "Failed to bull write rtc_data: %d\n", ret);
+ 		return ret;
+ 	}
+ 	/* Start RTC again */
+-	ret = regmap_update_bits(rk808->regmap, rk808_rtc->creg->ctrl_reg,
++	ret = regmap_update_bits(rk808_rtc->regmap, rk808_rtc->creg->ctrl_reg,
+ 				 BIT_RTC_CTRL_REG_STOP_RTC_M, 0);
+ 	if (ret) {
+ 		dev_err(dev, "Failed to update RTC control: %d\n", ret);
+@@ -191,12 +188,11 @@ static int rk808_rtc_set_time(struct dev
+ static int rk808_rtc_readalarm(struct device *dev, struct rtc_wkalrm *alrm)
+ {
+ 	struct rk808_rtc *rk808_rtc = dev_get_drvdata(dev);
+-	struct rk808 *rk808 = rk808_rtc->rk808;
+ 	u8 alrm_data[NUM_ALARM_REGS];
+ 	uint32_t int_reg;
+ 	int ret;
+ 
+-	ret = regmap_bulk_read(rk808->regmap,
++	ret = regmap_bulk_read(rk808_rtc->regmap,
+ 			       rk808_rtc->creg->alarm_seconds_reg,
+ 			       alrm_data, NUM_ALARM_REGS);
+ 	if (ret) {
+@@ -212,7 +208,7 @@ static int rk808_rtc_readalarm(struct de
+ 	alrm->time.tm_year = (bcd2bin(alrm_data[5] & YEARS_REG_MSK)) + 100;
+ 	rockchip_to_gregorian(&alrm->time);
+ 
+-	ret = regmap_read(rk808->regmap, rk808_rtc->creg->int_reg, &int_reg);
++	ret = regmap_read(rk808_rtc->regmap, rk808_rtc->creg->int_reg, &int_reg);
+ 	if (ret) {
+ 		dev_err(dev, "Failed to read RTC INT REG: %d\n", ret);
+ 		return ret;
+@@ -228,10 +224,9 @@ static int rk808_rtc_readalarm(struct de
+ 
+ static int rk808_rtc_stop_alarm(struct rk808_rtc *rk808_rtc)
+ {
+-	struct rk808 *rk808 = rk808_rtc->rk808;
+ 	int ret;
+ 
+-	ret = regmap_update_bits(rk808->regmap, rk808_rtc->creg->int_reg,
++	ret = regmap_update_bits(rk808_rtc->regmap, rk808_rtc->creg->int_reg,
+ 				 BIT_RTC_INTERRUPTS_REG_IT_ALARM_M, 0);
+ 
+ 	return ret;
+@@ -239,10 +234,9 @@ static int rk808_rtc_stop_alarm(struct r
+ 
+ static int rk808_rtc_start_alarm(struct rk808_rtc *rk808_rtc)
+ {
+-	struct rk808 *rk808 = rk808_rtc->rk808;
+ 	int ret;
+ 
+-	ret = regmap_update_bits(rk808->regmap, rk808_rtc->creg->int_reg,
++	ret = regmap_update_bits(rk808_rtc->regmap, rk808_rtc->creg->int_reg,
+ 				 BIT_RTC_INTERRUPTS_REG_IT_ALARM_M,
+ 				 BIT_RTC_INTERRUPTS_REG_IT_ALARM_M);
+ 
+@@ -252,7 +246,6 @@ static int rk808_rtc_start_alarm(struct
+ static int rk808_rtc_setalarm(struct device *dev, struct rtc_wkalrm *alrm)
+ {
+ 	struct rk808_rtc *rk808_rtc = dev_get_drvdata(dev);
+-	struct rk808 *rk808 = rk808_rtc->rk808;
+ 	u8 alrm_data[NUM_ALARM_REGS];
+ 	int ret;
+ 
+@@ -272,7 +265,7 @@ static int rk808_rtc_setalarm(struct dev
+ 	alrm_data[4] = bin2bcd(alrm->time.tm_mon + 1);
+ 	alrm_data[5] = bin2bcd(alrm->time.tm_year - 100);
+ 
+-	ret = regmap_bulk_write(rk808->regmap,
++	ret = regmap_bulk_write(rk808_rtc->regmap,
+ 				rk808_rtc->creg->alarm_seconds_reg,
+ 				alrm_data, NUM_ALARM_REGS);
+ 	if (ret) {
+@@ -313,20 +306,18 @@ static int rk808_rtc_alarm_irq_enable(st
+ static irqreturn_t rk808_alarm_irq(int irq, void *data)
+ {
+ 	struct rk808_rtc *rk808_rtc = data;
+-	struct rk808 *rk808 = rk808_rtc->rk808;
+-	struct i2c_client *client = rk808->i2c;
+ 	int ret;
+ 
+-	ret = regmap_write(rk808->regmap, rk808_rtc->creg->status_reg,
++	ret = regmap_write(rk808_rtc->regmap, rk808_rtc->creg->status_reg,
+ 			   RTC_STATUS_MASK);
+ 	if (ret) {
+-		dev_err(&client->dev,
++		dev_err(&rk808_rtc->rtc->dev,
+ 			"%s:Failed to update RTC status: %d\n", __func__, ret);
+ 		return ret;
+ 	}
+ 
+ 	rtc_update_irq(rk808_rtc->rtc, 1, RTC_IRQF | RTC_AF);
+-	dev_dbg(&client->dev,
++	dev_dbg(&rk808_rtc->rtc->dev,
+ 		 "%s:irq=%d\n", __func__, irq);
+ 	return IRQ_HANDLED;
+ }
+@@ -404,10 +395,12 @@ static int rk808_rtc_probe(struct platfo
+ 		break;
+ 	}
+ 	platform_set_drvdata(pdev, rk808_rtc);
+-	rk808_rtc->rk808 = rk808;
++	rk808_rtc->regmap = dev_get_regmap(pdev->dev.parent, NULL);
++	if (!rk808_rtc->regmap)
++		return -ENODEV;
+ 
+ 	/* start rtc running by default, and use shadowed timer. */
+-	ret = regmap_update_bits(rk808->regmap, rk808_rtc->creg->ctrl_reg,
++	ret = regmap_update_bits(rk808_rtc->regmap, rk808_rtc->creg->ctrl_reg,
+ 				 BIT_RTC_CTRL_REG_STOP_RTC_M |
+ 				 BIT_RTC_CTRL_REG_RTC_READSEL_M,
+ 				 BIT_RTC_CTRL_REG_RTC_READSEL_M);
+@@ -417,7 +410,7 @@ static int rk808_rtc_probe(struct platfo
+ 		return ret;
+ 	}
+ 
+-	ret = regmap_write(rk808->regmap, rk808_rtc->creg->status_reg,
++	ret = regmap_write(rk808_rtc->regmap, rk808_rtc->creg->status_reg,
+ 			   RTC_STATUS_MASK);
+ 	if (ret) {
+ 		dev_err(&pdev->dev,
diff --git a/target/linux/rockchip/patches-6.1/336-dt-bindings-clock-add-rk3588-clock-definitions.patch b/target/linux/rockchip/patches-6.1/336-dt-bindings-clock-add-rk3588-clock-definitions.patch
new file mode 100644
index 0000000000..11a16bb52d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/336-dt-bindings-clock-add-rk3588-clock-definitions.patch
@@ -0,0 +1,793 @@
+From 80be6056185f51cfa7092608e2176c72a4d1573e Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 18 Oct 2022 17:13:59 +0200
+Subject: [PATCH 336/383] dt-bindings: clock: add rk3588 clock definitions
+
+Add clock ID defines for rk3588.
+
+Compared to the downstream bindings written by Elaine, this uses
+continous gapless clock IDs starting at 0. Thus all numbers are
+different between downstream and upstream, but I kept exactly the
+same names.
+
+Co-Developed-by: Elaine Zhang <zhangqing@rock-chips.com>
+Signed-off-by: Elaine Zhang <zhangqing@rock-chips.com>
+Acked-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Link: https://lore.kernel.org/r/20221018151407.63395-2-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dt-bindings/clock/rockchip,rk3588-cru.h   | 766 ++++++++++++++++++
+ 1 file changed, 766 insertions(+)
+ create mode 100644 include/dt-bindings/clock/rockchip,rk3588-cru.h
+
+--- /dev/null
++++ b/include/dt-bindings/clock/rockchip,rk3588-cru.h
+@@ -0,0 +1,766 @@
++/* SPDX-License-Identifier: (GPL-2.0 or MIT) */
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co. Ltd.
++ * Copyright (c) 2022 Collabora Ltd.
++ *
++ * Author: Elaine Zhang <zhangqing@rock-chips.com>
++ * Author: Sebastian Reichel <sebastian.reichel@collabora.com>
++ */
++
++#ifndef _DT_BINDINGS_CLK_ROCKCHIP_RK3588_H
++#define _DT_BINDINGS_CLK_ROCKCHIP_RK3588_H
++
++/* cru-clocks indices */
++
++#define PLL_B0PLL			0
++#define PLL_B1PLL			1
++#define PLL_LPLL			2
++#define PLL_V0PLL			3
++#define PLL_AUPLL			4
++#define PLL_CPLL			5
++#define PLL_GPLL			6
++#define PLL_NPLL			7
++#define PLL_PPLL			8
++#define ARMCLK_L			9
++#define ARMCLK_B01			10
++#define ARMCLK_B23			11
++#define PCLK_BIGCORE0_ROOT		12
++#define PCLK_BIGCORE0_PVTM		13
++#define PCLK_BIGCORE1_ROOT		14
++#define PCLK_BIGCORE1_PVTM		15
++#define PCLK_DSU_S_ROOT			16
++#define PCLK_DSU_ROOT			17
++#define PCLK_DSU_NS_ROOT		18
++#define PCLK_LITCORE_PVTM		19
++#define PCLK_DBG			20
++#define PCLK_DSU			21
++#define PCLK_S_DAPLITE			22
++#define PCLK_M_DAPLITE			23
++#define MBIST_MCLK_PDM1			24
++#define MBIST_CLK_ACDCDIG		25
++#define HCLK_I2S2_2CH			26
++#define HCLK_I2S3_2CH			27
++#define CLK_I2S2_2CH_SRC		28
++#define CLK_I2S2_2CH_FRAC		29
++#define CLK_I2S2_2CH			30
++#define MCLK_I2S2_2CH			31
++#define I2S2_2CH_MCLKOUT		32
++#define CLK_DAC_ACDCDIG			33
++#define CLK_I2S3_2CH_SRC		34
++#define CLK_I2S3_2CH_FRAC		35
++#define CLK_I2S3_2CH			36
++#define MCLK_I2S3_2CH			37
++#define I2S3_2CH_MCLKOUT		38
++#define PCLK_ACDCDIG			39
++#define HCLK_I2S0_8CH			40
++#define CLK_I2S0_8CH_TX_SRC		41
++#define CLK_I2S0_8CH_TX_FRAC		42
++#define MCLK_I2S0_8CH_TX		43
++#define CLK_I2S0_8CH_TX			44
++#define CLK_I2S0_8CH_RX_SRC		45
++#define CLK_I2S0_8CH_RX_FRAC		46
++#define MCLK_I2S0_8CH_RX		47
++#define CLK_I2S0_8CH_RX			48
++#define I2S0_8CH_MCLKOUT		49
++#define HCLK_PDM1			50
++#define MCLK_PDM1			51
++#define HCLK_AUDIO_ROOT			52
++#define PCLK_AUDIO_ROOT			53
++#define HCLK_SPDIF0			54
++#define CLK_SPDIF0_SRC			55
++#define CLK_SPDIF0_FRAC			56
++#define MCLK_SPDIF0			57
++#define CLK_SPDIF0			58
++#define CLK_SPDIF1			59
++#define HCLK_SPDIF1			60
++#define CLK_SPDIF1_SRC			61
++#define CLK_SPDIF1_FRAC			62
++#define MCLK_SPDIF1			63
++#define ACLK_AV1_ROOT			64
++#define ACLK_AV1			65
++#define PCLK_AV1_ROOT			66
++#define PCLK_AV1			67
++#define PCLK_MAILBOX0			68
++#define PCLK_MAILBOX1			69
++#define PCLK_MAILBOX2			70
++#define PCLK_PMU2			71
++#define PCLK_PMUCM0_INTMUX		72
++#define PCLK_DDRCM0_INTMUX		73
++#define PCLK_TOP			74
++#define PCLK_PWM1			75
++#define CLK_PWM1			76
++#define CLK_PWM1_CAPTURE		77
++#define PCLK_PWM2			78
++#define CLK_PWM2			79
++#define CLK_PWM2_CAPTURE		80
++#define PCLK_PWM3			81
++#define CLK_PWM3			82
++#define CLK_PWM3_CAPTURE		83
++#define PCLK_BUSTIMER0			84
++#define PCLK_BUSTIMER1			85
++#define CLK_BUS_TIMER_ROOT		86
++#define CLK_BUSTIMER0			87
++#define CLK_BUSTIMER1			88
++#define CLK_BUSTIMER2			89
++#define CLK_BUSTIMER3			90
++#define CLK_BUSTIMER4			91
++#define CLK_BUSTIMER5			92
++#define CLK_BUSTIMER6			93
++#define CLK_BUSTIMER7			94
++#define CLK_BUSTIMER8			95
++#define CLK_BUSTIMER9			96
++#define CLK_BUSTIMER10			97
++#define CLK_BUSTIMER11			98
++#define PCLK_WDT0			99
++#define TCLK_WDT0			100
++#define PCLK_CAN0			101
++#define CLK_CAN0			102
++#define PCLK_CAN1			103
++#define CLK_CAN1			104
++#define PCLK_CAN2			105
++#define CLK_CAN2			106
++#define ACLK_DECOM			107
++#define PCLK_DECOM			108
++#define DCLK_DECOM			109
++#define ACLK_DMAC0			110
++#define ACLK_DMAC1			111
++#define ACLK_DMAC2			112
++#define ACLK_BUS_ROOT			113
++#define ACLK_GIC			114
++#define PCLK_GPIO1			115
++#define DBCLK_GPIO1			116
++#define PCLK_GPIO2			117
++#define DBCLK_GPIO2			118
++#define PCLK_GPIO3			119
++#define DBCLK_GPIO3			120
++#define PCLK_GPIO4			121
++#define DBCLK_GPIO4			122
++#define PCLK_I2C1			123
++#define PCLK_I2C2			124
++#define PCLK_I2C3			125
++#define PCLK_I2C4			126
++#define PCLK_I2C5			127
++#define PCLK_I2C6			128
++#define PCLK_I2C7			129
++#define PCLK_I2C8			130
++#define CLK_I2C1			131
++#define CLK_I2C2			132
++#define CLK_I2C3			133
++#define CLK_I2C4			134
++#define CLK_I2C5			135
++#define CLK_I2C6			136
++#define CLK_I2C7			137
++#define CLK_I2C8			138
++#define PCLK_OTPC_NS			139
++#define CLK_OTPC_NS			140
++#define CLK_OTPC_ARB			141
++#define CLK_OTPC_AUTO_RD_G		142
++#define CLK_OTP_PHY_G			143
++#define PCLK_SARADC			144
++#define CLK_SARADC			145
++#define PCLK_SPI0			146
++#define PCLK_SPI1			147
++#define PCLK_SPI2			148
++#define PCLK_SPI3			149
++#define PCLK_SPI4			150
++#define CLK_SPI0			151
++#define CLK_SPI1			152
++#define CLK_SPI2			153
++#define CLK_SPI3			154
++#define CLK_SPI4			155
++#define ACLK_SPINLOCK			156
++#define PCLK_TSADC			157
++#define CLK_TSADC			158
++#define PCLK_UART1			159
++#define PCLK_UART2			160
++#define PCLK_UART3			161
++#define PCLK_UART4			162
++#define PCLK_UART5			163
++#define PCLK_UART6			164
++#define PCLK_UART7			165
++#define PCLK_UART8			166
++#define PCLK_UART9			167
++#define CLK_UART1_SRC			168
++#define CLK_UART1_FRAC			169
++#define CLK_UART1			170
++#define SCLK_UART1			171
++#define CLK_UART2_SRC			172
++#define CLK_UART2_FRAC			173
++#define CLK_UART2			174
++#define SCLK_UART2			175
++#define CLK_UART3_SRC			176
++#define CLK_UART3_FRAC			177
++#define CLK_UART3			178
++#define SCLK_UART3			179
++#define CLK_UART4_SRC			180
++#define CLK_UART4_FRAC			181
++#define CLK_UART4			182
++#define SCLK_UART4			183
++#define CLK_UART5_SRC			184
++#define CLK_UART5_FRAC			185
++#define CLK_UART5			186
++#define SCLK_UART5			187
++#define CLK_UART6_SRC			188
++#define CLK_UART6_FRAC			189
++#define CLK_UART6			190
++#define SCLK_UART6			191
++#define CLK_UART7_SRC			192
++#define CLK_UART7_FRAC			193
++#define CLK_UART7			194
++#define SCLK_UART7			195
++#define CLK_UART8_SRC			196
++#define CLK_UART8_FRAC			197
++#define CLK_UART8			198
++#define SCLK_UART8			199
++#define CLK_UART9_SRC			200
++#define CLK_UART9_FRAC			201
++#define CLK_UART9			202
++#define SCLK_UART9			203
++#define ACLK_CENTER_ROOT		204
++#define ACLK_CENTER_LOW_ROOT		205
++#define HCLK_CENTER_ROOT		206
++#define PCLK_CENTER_ROOT		207
++#define ACLK_DMA2DDR			208
++#define ACLK_DDR_SHAREMEM		209
++#define ACLK_CENTER_S200_ROOT		210
++#define ACLK_CENTER_S400_ROOT		211
++#define FCLK_DDR_CM0_CORE		212
++#define CLK_DDR_TIMER_ROOT		213
++#define CLK_DDR_TIMER0			214
++#define CLK_DDR_TIMER1			215
++#define TCLK_WDT_DDR			216
++#define CLK_DDR_CM0_RTC			217
++#define PCLK_WDT			218
++#define PCLK_TIMER			219
++#define PCLK_DMA2DDR			220
++#define PCLK_SHAREMEM			221
++#define CLK_50M_SRC			222
++#define CLK_100M_SRC			223
++#define CLK_150M_SRC			224
++#define CLK_200M_SRC			225
++#define CLK_250M_SRC			226
++#define CLK_300M_SRC			227
++#define CLK_350M_SRC			228
++#define CLK_400M_SRC			229
++#define CLK_450M_SRC			230
++#define CLK_500M_SRC			231
++#define CLK_600M_SRC			232
++#define CLK_650M_SRC			233
++#define CLK_700M_SRC			234
++#define CLK_800M_SRC			235
++#define CLK_1000M_SRC			236
++#define CLK_1200M_SRC			237
++#define ACLK_TOP_M300_ROOT		238
++#define ACLK_TOP_M500_ROOT		239
++#define ACLK_TOP_M400_ROOT		240
++#define ACLK_TOP_S200_ROOT		241
++#define ACLK_TOP_S400_ROOT		242
++#define CLK_MIPI_CAMARAOUT_M0		243
++#define CLK_MIPI_CAMARAOUT_M1		244
++#define CLK_MIPI_CAMARAOUT_M2		245
++#define CLK_MIPI_CAMARAOUT_M3		246
++#define CLK_MIPI_CAMARAOUT_M4		247
++#define MCLK_GMAC0_OUT			248
++#define REFCLKO25M_ETH0_OUT		249
++#define REFCLKO25M_ETH1_OUT		250
++#define CLK_CIFOUT_OUT			251
++#define PCLK_MIPI_DCPHY0		252
++#define PCLK_MIPI_DCPHY1		253
++#define PCLK_CSIPHY0			254
++#define PCLK_CSIPHY1			255
++#define ACLK_TOP_ROOT			256
++#define PCLK_TOP_ROOT			257
++#define ACLK_LOW_TOP_ROOT		258
++#define PCLK_CRU			259
++#define PCLK_GPU_ROOT			260
++#define CLK_GPU_SRC			261
++#define CLK_GPU				262
++#define CLK_GPU_COREGROUP		263
++#define CLK_GPU_STACKS			264
++#define PCLK_GPU_PVTM			265
++#define CLK_GPU_PVTM			266
++#define CLK_CORE_GPU_PVTM		267
++#define PCLK_GPU_GRF			268
++#define ACLK_ISP1_ROOT			269
++#define HCLK_ISP1_ROOT			270
++#define CLK_ISP1_CORE			271
++#define CLK_ISP1_CORE_MARVIN		272
++#define CLK_ISP1_CORE_VICAP		273
++#define ACLK_ISP1			274
++#define HCLK_ISP1			275
++#define ACLK_NPU1			276
++#define HCLK_NPU1			277
++#define ACLK_NPU2			278
++#define HCLK_NPU2			279
++#define HCLK_NPU_CM0_ROOT		280
++#define FCLK_NPU_CM0_CORE		281
++#define CLK_NPU_CM0_RTC			282
++#define PCLK_NPU_PVTM			283
++#define PCLK_NPU_GRF			284
++#define CLK_NPU_PVTM			285
++#define CLK_CORE_NPU_PVTM		286
++#define ACLK_NPU0			287
++#define HCLK_NPU0			288
++#define HCLK_NPU_ROOT			289
++#define CLK_NPU_DSU0			290
++#define PCLK_NPU_ROOT			291
++#define PCLK_NPU_TIMER			292
++#define CLK_NPUTIMER_ROOT		293
++#define CLK_NPUTIMER0			294
++#define CLK_NPUTIMER1			295
++#define PCLK_NPU_WDT			296
++#define TCLK_NPU_WDT			297
++#define HCLK_EMMC			298
++#define ACLK_EMMC			299
++#define CCLK_EMMC			300
++#define BCLK_EMMC			301
++#define TMCLK_EMMC			302
++#define SCLK_SFC			303
++#define HCLK_SFC			304
++#define HCLK_SFC_XIP			305
++#define HCLK_NVM_ROOT			306
++#define ACLK_NVM_ROOT			307
++#define CLK_GMAC0_PTP_REF		308
++#define CLK_GMAC1_PTP_REF		309
++#define CLK_GMAC_125M			310
++#define CLK_GMAC_50M			311
++#define ACLK_PHP_GIC_ITS		312
++#define ACLK_MMU_PCIE			313
++#define ACLK_MMU_PHP			314
++#define ACLK_PCIE_4L_DBI		315
++#define ACLK_PCIE_2L_DBI		316
++#define ACLK_PCIE_1L0_DBI		317
++#define ACLK_PCIE_1L1_DBI		318
++#define ACLK_PCIE_1L2_DBI		319
++#define ACLK_PCIE_4L_MSTR		320
++#define ACLK_PCIE_2L_MSTR		321
++#define ACLK_PCIE_1L0_MSTR		322
++#define ACLK_PCIE_1L1_MSTR		323
++#define ACLK_PCIE_1L2_MSTR		324
++#define ACLK_PCIE_4L_SLV		325
++#define ACLK_PCIE_2L_SLV		326
++#define ACLK_PCIE_1L0_SLV		327
++#define ACLK_PCIE_1L1_SLV		328
++#define ACLK_PCIE_1L2_SLV		329
++#define PCLK_PCIE_4L			330
++#define PCLK_PCIE_2L			331
++#define PCLK_PCIE_1L0			332
++#define PCLK_PCIE_1L1			333
++#define PCLK_PCIE_1L2			334
++#define CLK_PCIE_AUX0			335
++#define CLK_PCIE_AUX1			336
++#define CLK_PCIE_AUX2			337
++#define CLK_PCIE_AUX3			338
++#define CLK_PCIE_AUX4			339
++#define CLK_PIPEPHY0_REF		340
++#define CLK_PIPEPHY1_REF		341
++#define CLK_PIPEPHY2_REF		342
++#define PCLK_PHP_ROOT			343
++#define PCLK_GMAC0			344
++#define PCLK_GMAC1			345
++#define ACLK_PCIE_ROOT			346
++#define ACLK_PHP_ROOT			347
++#define ACLK_PCIE_BRIDGE		348
++#define ACLK_GMAC0			349
++#define ACLK_GMAC1			350
++#define CLK_PMALIVE0			351
++#define CLK_PMALIVE1			352
++#define CLK_PMALIVE2			353
++#define ACLK_SATA0			354
++#define ACLK_SATA1			355
++#define ACLK_SATA2			356
++#define CLK_RXOOB0			357
++#define CLK_RXOOB1			358
++#define CLK_RXOOB2			359
++#define ACLK_USB3OTG2			360
++#define SUSPEND_CLK_USB3OTG2		361
++#define REF_CLK_USB3OTG2		362
++#define CLK_UTMI_OTG2			363
++#define CLK_PIPEPHY0_PIPE_G		364
++#define CLK_PIPEPHY1_PIPE_G		365
++#define CLK_PIPEPHY2_PIPE_G		366
++#define CLK_PIPEPHY0_PIPE_ASIC_G	367
++#define CLK_PIPEPHY1_PIPE_ASIC_G	368
++#define CLK_PIPEPHY2_PIPE_ASIC_G	369
++#define CLK_PIPEPHY2_PIPE_U3_G		370
++#define CLK_PCIE1L2_PIPE		371
++#define CLK_PCIE4L_PIPE			372
++#define CLK_PCIE2L_PIPE			373
++#define PCLK_PCIE_COMBO_PIPE_PHY0	374
++#define PCLK_PCIE_COMBO_PIPE_PHY1	375
++#define PCLK_PCIE_COMBO_PIPE_PHY2	376
++#define PCLK_PCIE_COMBO_PIPE_PHY	377
++#define HCLK_RGA3_1			378
++#define ACLK_RGA3_1			379
++#define CLK_RGA3_1_CORE			380
++#define ACLK_RGA3_ROOT			381
++#define HCLK_RGA3_ROOT			382
++#define ACLK_RKVDEC_CCU			383
++#define HCLK_RKVDEC0			384
++#define ACLK_RKVDEC0			385
++#define CLK_RKVDEC0_CA			386
++#define CLK_RKVDEC0_HEVC_CA		387
++#define CLK_RKVDEC0_CORE		388
++#define HCLK_RKVDEC1			389
++#define ACLK_RKVDEC1			390
++#define CLK_RKVDEC1_CA			391
++#define CLK_RKVDEC1_HEVC_CA		392
++#define CLK_RKVDEC1_CORE		393
++#define HCLK_SDIO			394
++#define CCLK_SRC_SDIO			395
++#define ACLK_USB_ROOT			396
++#define HCLK_USB_ROOT			397
++#define HCLK_HOST0			398
++#define HCLK_HOST_ARB0			399
++#define HCLK_HOST1			400
++#define HCLK_HOST_ARB1			401
++#define ACLK_USB3OTG0			402
++#define SUSPEND_CLK_USB3OTG0		403
++#define REF_CLK_USB3OTG0		404
++#define ACLK_USB3OTG1			405
++#define SUSPEND_CLK_USB3OTG1		406
++#define REF_CLK_USB3OTG1		407
++#define UTMI_OHCI_CLK48_HOST0		408
++#define UTMI_OHCI_CLK48_HOST1		409
++#define HCLK_IEP2P0			410
++#define ACLK_IEP2P0			411
++#define CLK_IEP2P0_CORE			412
++#define ACLK_JPEG_ENCODER0		413
++#define HCLK_JPEG_ENCODER0		414
++#define ACLK_JPEG_ENCODER1		415
++#define HCLK_JPEG_ENCODER1		416
++#define ACLK_JPEG_ENCODER2		417
++#define HCLK_JPEG_ENCODER2		418
++#define ACLK_JPEG_ENCODER3		419
++#define HCLK_JPEG_ENCODER3		420
++#define ACLK_JPEG_DECODER		421
++#define HCLK_JPEG_DECODER		422
++#define HCLK_RGA2			423
++#define ACLK_RGA2			424
++#define CLK_RGA2_CORE			425
++#define HCLK_RGA3_0			426
++#define ACLK_RGA3_0			427
++#define CLK_RGA3_0_CORE			428
++#define ACLK_VDPU_ROOT			429
++#define ACLK_VDPU_LOW_ROOT		430
++#define HCLK_VDPU_ROOT			431
++#define ACLK_JPEG_DECODER_ROOT		432
++#define ACLK_VPU			433
++#define HCLK_VPU			434
++#define HCLK_RKVENC0_ROOT		435
++#define ACLK_RKVENC0_ROOT		436
++#define HCLK_RKVENC0			437
++#define ACLK_RKVENC0			438
++#define CLK_RKVENC0_CORE		439
++#define HCLK_RKVENC1_ROOT		440
++#define ACLK_RKVENC1_ROOT		441
++#define HCLK_RKVENC1			442
++#define ACLK_RKVENC1			443
++#define CLK_RKVENC1_CORE		444
++#define ICLK_CSIHOST01			445
++#define ICLK_CSIHOST0			446
++#define ICLK_CSIHOST1			447
++#define PCLK_CSI_HOST_0			448
++#define PCLK_CSI_HOST_1			449
++#define PCLK_CSI_HOST_2			450
++#define PCLK_CSI_HOST_3			451
++#define PCLK_CSI_HOST_4			452
++#define PCLK_CSI_HOST_5			453
++#define ACLK_FISHEYE0			454
++#define HCLK_FISHEYE0			455
++#define CLK_FISHEYE0_CORE		456
++#define ACLK_FISHEYE1			457
++#define HCLK_FISHEYE1			458
++#define CLK_FISHEYE1_CORE		459
++#define CLK_ISP0_CORE			460
++#define CLK_ISP0_CORE_MARVIN		461
++#define CLK_ISP0_CORE_VICAP		462
++#define ACLK_ISP0			463
++#define HCLK_ISP0			464
++#define ACLK_VI_ROOT			465
++#define HCLK_VI_ROOT			466
++#define PCLK_VI_ROOT			467
++#define DCLK_VICAP			468
++#define ACLK_VICAP			469
++#define HCLK_VICAP			470
++#define PCLK_DP0			471
++#define PCLK_DP1			472
++#define PCLK_S_DP0			473
++#define PCLK_S_DP1			474
++#define CLK_DP0				475
++#define CLK_DP1				476
++#define HCLK_HDCP_KEY0			477
++#define ACLK_HDCP0			478
++#define HCLK_HDCP0			479
++#define PCLK_HDCP0			480
++#define HCLK_I2S4_8CH			481
++#define ACLK_TRNG0			482
++#define PCLK_TRNG0			483
++#define ACLK_VO0_ROOT			484
++#define HCLK_VO0_ROOT			485
++#define HCLK_VO0_S_ROOT			486
++#define PCLK_VO0_ROOT			487
++#define PCLK_VO0_S_ROOT			488
++#define PCLK_VO0GRF			489
++#define CLK_I2S4_8CH_TX_SRC		490
++#define CLK_I2S4_8CH_TX_FRAC		491
++#define MCLK_I2S4_8CH_TX		492
++#define CLK_I2S4_8CH_TX			493
++#define HCLK_I2S8_8CH			494
++#define CLK_I2S8_8CH_TX_SRC		495
++#define CLK_I2S8_8CH_TX_FRAC		496
++#define MCLK_I2S8_8CH_TX		497
++#define CLK_I2S8_8CH_TX			498
++#define HCLK_SPDIF2_DP0			499
++#define CLK_SPDIF2_DP0_SRC		500
++#define CLK_SPDIF2_DP0_FRAC		501
++#define MCLK_SPDIF2_DP0			502
++#define CLK_SPDIF2_DP0			503
++#define MCLK_SPDIF2			504
++#define HCLK_SPDIF5_DP1			505
++#define CLK_SPDIF5_DP1_SRC		506
++#define CLK_SPDIF5_DP1_FRAC		507
++#define MCLK_SPDIF5_DP1			508
++#define CLK_SPDIF5_DP1			509
++#define MCLK_SPDIF5			510
++#define PCLK_EDP0			511
++#define CLK_EDP0_24M			512
++#define CLK_EDP0_200M			513
++#define PCLK_EDP1			514
++#define CLK_EDP1_24M			515
++#define CLK_EDP1_200M			516
++#define HCLK_HDCP_KEY1			517
++#define ACLK_HDCP1			518
++#define HCLK_HDCP1			519
++#define PCLK_HDCP1			520
++#define ACLK_HDMIRX			521
++#define PCLK_HDMIRX			522
++#define CLK_HDMIRX_REF			523
++#define CLK_HDMIRX_AUD_SRC		524
++#define CLK_HDMIRX_AUD_FRAC		525
++#define CLK_HDMIRX_AUD			526
++#define CLK_HDMIRX_AUD_P_MUX		527
++#define PCLK_HDMITX0			528
++#define CLK_HDMITX0_EARC		529
++#define CLK_HDMITX0_REF			530
++#define PCLK_HDMITX1			531
++#define CLK_HDMITX1_EARC		532
++#define CLK_HDMITX1_REF			533
++#define CLK_HDMITRX_REFSRC		534
++#define ACLK_TRNG1			535
++#define PCLK_TRNG1			536
++#define ACLK_HDCP1_ROOT			537
++#define ACLK_HDMIRX_ROOT		538
++#define HCLK_VO1_ROOT			539
++#define HCLK_VO1_S_ROOT			540
++#define PCLK_VO1_ROOT			541
++#define PCLK_VO1_S_ROOT			542
++#define PCLK_S_EDP0			543
++#define PCLK_S_EDP1			544
++#define PCLK_S_HDMIRX			545
++#define HCLK_I2S10_8CH			546
++#define CLK_I2S10_8CH_RX_SRC		547
++#define CLK_I2S10_8CH_RX_FRAC		548
++#define CLK_I2S10_8CH_RX		549
++#define MCLK_I2S10_8CH_RX		550
++#define HCLK_I2S7_8CH			551
++#define CLK_I2S7_8CH_RX_SRC		552
++#define CLK_I2S7_8CH_RX_FRAC		553
++#define CLK_I2S7_8CH_RX			554
++#define MCLK_I2S7_8CH_RX		555
++#define HCLK_I2S9_8CH			556
++#define CLK_I2S9_8CH_RX_SRC		557
++#define CLK_I2S9_8CH_RX_FRAC		558
++#define CLK_I2S9_8CH_RX			559
++#define MCLK_I2S9_8CH_RX		560
++#define CLK_I2S5_8CH_TX_SRC		561
++#define CLK_I2S5_8CH_TX_FRAC		562
++#define CLK_I2S5_8CH_TX			563
++#define MCLK_I2S5_8CH_TX		564
++#define HCLK_I2S5_8CH			565
++#define CLK_I2S6_8CH_TX_SRC		566
++#define CLK_I2S6_8CH_TX_FRAC		567
++#define CLK_I2S6_8CH_TX			568
++#define MCLK_I2S6_8CH_TX		569
++#define CLK_I2S6_8CH_RX_SRC		570
++#define CLK_I2S6_8CH_RX_FRAC		571
++#define CLK_I2S6_8CH_RX			572
++#define MCLK_I2S6_8CH_RX		573
++#define I2S6_8CH_MCLKOUT		574
++#define HCLK_I2S6_8CH			575
++#define HCLK_SPDIF3			576
++#define CLK_SPDIF3_SRC			577
++#define CLK_SPDIF3_FRAC			578
++#define CLK_SPDIF3			579
++#define MCLK_SPDIF3			580
++#define HCLK_SPDIF4			581
++#define CLK_SPDIF4_SRC			582
++#define CLK_SPDIF4_FRAC			583
++#define CLK_SPDIF4			584
++#define MCLK_SPDIF4			585
++#define HCLK_SPDIFRX0			586
++#define MCLK_SPDIFRX0			587
++#define HCLK_SPDIFRX1			588
++#define MCLK_SPDIFRX1			589
++#define HCLK_SPDIFRX2			590
++#define MCLK_SPDIFRX2			591
++#define ACLK_VO1USB_TOP_ROOT		592
++#define HCLK_VO1USB_TOP_ROOT		593
++#define CLK_HDMIHDP0			594
++#define CLK_HDMIHDP1			595
++#define PCLK_HDPTX0			596
++#define PCLK_HDPTX1			597
++#define PCLK_USBDPPHY0			598
++#define PCLK_USBDPPHY1			599
++#define ACLK_VOP_ROOT			600
++#define ACLK_VOP_LOW_ROOT		601
++#define HCLK_VOP_ROOT			602
++#define PCLK_VOP_ROOT			603
++#define HCLK_VOP			604
++#define ACLK_VOP			605
++#define DCLK_VOP0_SRC			606
++#define DCLK_VOP1_SRC			607
++#define DCLK_VOP2_SRC			608
++#define DCLK_VOP0			609
++#define DCLK_VOP1			610
++#define DCLK_VOP2			611
++#define DCLK_VOP3			612
++#define PCLK_DSIHOST0			613
++#define PCLK_DSIHOST1			614
++#define CLK_DSIHOST0			615
++#define CLK_DSIHOST1			616
++#define CLK_VOP_PMU			617
++#define ACLK_VOP_DOBY			618
++#define ACLK_VOP_SUB_SRC		619
++#define CLK_USBDP_PHY0_IMMORTAL		620
++#define CLK_USBDP_PHY1_IMMORTAL		621
++#define CLK_PMU0			622
++#define PCLK_PMU0			623
++#define PCLK_PMU0IOC			624
++#define PCLK_GPIO0			625
++#define DBCLK_GPIO0			626
++#define PCLK_I2C0			627
++#define CLK_I2C0			628
++#define HCLK_I2S1_8CH			629
++#define CLK_I2S1_8CH_TX_SRC		630
++#define CLK_I2S1_8CH_TX_FRAC		631
++#define CLK_I2S1_8CH_TX			632
++#define MCLK_I2S1_8CH_TX		633
++#define CLK_I2S1_8CH_RX_SRC		634
++#define CLK_I2S1_8CH_RX_FRAC		635
++#define CLK_I2S1_8CH_RX			636
++#define MCLK_I2S1_8CH_RX		637
++#define I2S1_8CH_MCLKOUT		638
++#define CLK_PMU1_50M_SRC		639
++#define CLK_PMU1_100M_SRC		640
++#define CLK_PMU1_200M_SRC		641
++#define CLK_PMU1_300M_SRC		642
++#define CLK_PMU1_400M_SRC		643
++#define HCLK_PMU1_ROOT			644
++#define PCLK_PMU1_ROOT			645
++#define PCLK_PMU0_ROOT			646
++#define HCLK_PMU_CM0_ROOT		647
++#define PCLK_PMU1			648
++#define CLK_DDR_FAIL_SAFE		649
++#define CLK_PMU1			650
++#define HCLK_PDM0			651
++#define MCLK_PDM0			652
++#define HCLK_VAD			653
++#define FCLK_PMU_CM0_CORE		654
++#define CLK_PMU_CM0_RTC			655
++#define PCLK_PMU1_IOC			656
++#define PCLK_PMU1PWM			657
++#define CLK_PMU1PWM			658
++#define CLK_PMU1PWM_CAPTURE		659
++#define PCLK_PMU1TIMER			660
++#define CLK_PMU1TIMER_ROOT		661
++#define CLK_PMU1TIMER0			662
++#define CLK_PMU1TIMER1			663
++#define CLK_UART0_SRC			664
++#define CLK_UART0_FRAC			665
++#define CLK_UART0			666
++#define SCLK_UART0			667
++#define PCLK_UART0			668
++#define PCLK_PMU1WDT			669
++#define TCLK_PMU1WDT			670
++#define CLK_CR_PARA			671
++#define CLK_USB2PHY_HDPTXRXPHY_REF	672
++#define CLK_USBDPPHY_MIPIDCPPHY_REF	673
++#define CLK_REF_PIPE_PHY0_OSC_SRC	674
++#define CLK_REF_PIPE_PHY1_OSC_SRC	675
++#define CLK_REF_PIPE_PHY2_OSC_SRC	676
++#define CLK_REF_PIPE_PHY0_PLL_SRC	677
++#define CLK_REF_PIPE_PHY1_PLL_SRC	678
++#define CLK_REF_PIPE_PHY2_PLL_SRC	679
++#define CLK_REF_PIPE_PHY0		680
++#define CLK_REF_PIPE_PHY1		681
++#define CLK_REF_PIPE_PHY2		682
++#define SCLK_SDIO_DRV			683
++#define SCLK_SDIO_SAMPLE		684
++#define SCLK_SDMMC_DRV			685
++#define SCLK_SDMMC_SAMPLE		686
++#define CLK_PCIE1L0_PIPE		687
++#define CLK_PCIE1L1_PIPE		688
++#define CLK_BIGCORE0_PVTM		689
++#define CLK_CORE_BIGCORE0_PVTM		690
++#define CLK_BIGCORE1_PVTM		691
++#define CLK_CORE_BIGCORE1_PVTM		692
++#define CLK_LITCORE_PVTM		693
++#define CLK_CORE_LITCORE_PVTM		694
++#define CLK_AUX16M_0			695
++#define CLK_AUX16M_1			696
++#define CLK_PHY0_REF_ALT_P		697
++#define CLK_PHY0_REF_ALT_M		698
++#define CLK_PHY1_REF_ALT_P		699
++#define CLK_PHY1_REF_ALT_M		700
++#define ACLK_ISP1_PRE			701
++#define HCLK_ISP1_PRE			702
++#define HCLK_NVM			703
++#define ACLK_USB			704
++#define HCLK_USB			705
++#define ACLK_JPEG_DECODER_PRE		706
++#define ACLK_VDPU_LOW_PRE		707
++#define ACLK_RKVENC1_PRE		708
++#define HCLK_RKVENC1_PRE		709
++#define HCLK_RKVDEC0_PRE		710
++#define ACLK_RKVDEC0_PRE		711
++#define HCLK_RKVDEC1_PRE		712
++#define ACLK_RKVDEC1_PRE		713
++#define ACLK_HDCP0_PRE			714
++#define HCLK_VO0			715
++#define ACLK_HDCP1_PRE			716
++#define HCLK_VO1			717
++#define ACLK_AV1_PRE			718
++#define PCLK_AV1_PRE			719
++#define HCLK_SDIO_PRE			720
++
++#define CLK_NR_CLKS			(HCLK_SDIO_PRE + 1)
++
++/* scmi-clocks indices */
++
++#define SCMI_CLK_CPUL			0
++#define SCMI_CLK_DSU			1
++#define SCMI_CLK_CPUB01			2
++#define SCMI_CLK_CPUB23			3
++#define SCMI_CLK_DDR			4
++#define SCMI_CLK_GPU			5
++#define SCMI_CLK_NPU			6
++#define SCMI_CLK_SBUS			7
++#define SCMI_PCLK_SBUS			8
++#define SCMI_CCLK_SD			9
++#define SCMI_DCLK_SD			10
++#define SCMI_ACLK_SECURE_NS		11
++#define SCMI_HCLK_SECURE_NS		12
++#define SCMI_TCLK_WDT			13
++#define SCMI_KEYLADDER_CORE		14
++#define SCMI_KEYLADDER_RNG		15
++#define SCMI_ACLK_SECURE_S		16
++#define SCMI_HCLK_SECURE_S		17
++#define SCMI_PCLK_SECURE_S		18
++#define SCMI_CRYPTO_RNG			19
++#define SCMI_CRYPTO_CORE		20
++#define SCMI_CRYPTO_PKA			21
++#define SCMI_SPLL			22
++#define SCMI_HCLK_SD			23
++
++#endif
diff --git a/target/linux/rockchip/patches-6.1/337-thermal-drivers-rockchip-Fix-kernel-doc-warnings.patch b/target/linux/rockchip/patches-6.1/337-thermal-drivers-rockchip-Fix-kernel-doc-warnings.patch
new file mode 100644
index 0000000000..475b8595bb
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/337-thermal-drivers-rockchip-Fix-kernel-doc-warnings.patch
@@ -0,0 +1,60 @@
+From 318a88119531fb14c7a2cc8b263219130baf61f6 Mon Sep 17 00:00:00 2001
+From: Randy Dunlap <rdunlap@infradead.org>
+Date: Thu, 12 Jan 2023 22:45:00 -0800
+Subject: [PATCH 337/383] thermal/drivers/rockchip: Fix kernel-doc warnings
+
+Don't use "/**" to begin non-kernel-doc comments.
+Convert one function description to kernel-doc format.
+Prevents these kernel-doc warnings:
+
+drivers/thermal/rockchip_thermal.c:64: warning: This comment starts with '/**', but isn't a kernel-doc comment. Refer Documentation/doc-guide/kernel-doc.rst
+ * The max sensors is two in rockchip SoCs.
+drivers/thermal/rockchip_thermal.c:179: warning: expecting prototype for TSADC Sensor Register description(). Prototype was for TSADCV2_USER_CON() instead
+drivers/thermal/rockchip_thermal.c:1342: warning: This comment starts with '/**', but isn't a kernel-doc comment. Refer Documentation/doc-guide/kernel-doc.rst
+ * Reset TSADC Controller, reset all tsadc registers.
+
+Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
+Cc: "Rafael J. Wysocki" <rafael@kernel.org>
+Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
+Cc: Amit Kucheria <amitk@kernel.org>
+Cc: Zhang Rui <rui.zhang@intel.com>
+Cc: Heiko Stuebner <heiko@sntech.de>
+Cc: linux-pm@vger.kernel.org
+Cc: linux-arm-kernel@lists.infradead.org
+Cc: linux-rockchip@lists.infradead.org
+Link: https://lore.kernel.org/r/20230113064500.16103-1-rdunlap@infradead.org
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/thermal/rockchip_thermal.c | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+--- a/drivers/thermal/rockchip_thermal.c
++++ b/drivers/thermal/rockchip_thermal.c
+@@ -60,7 +60,7 @@ enum adc_sort_mode {
+ 
+ #include "thermal_hwmon.h"
+ 
+-/**
++/*
+  * The max sensors is two in rockchip SoCs.
+  * Two sensors: CPU and GPU sensor.
+  */
+@@ -169,7 +169,7 @@ struct rockchip_thermal_data {
+ 	enum tshut_polarity tshut_polarity;
+ };
+ 
+-/**
++/*
+  * TSADC Sensor Register description:
+  *
+  * TSADCV2_* are used for RK3288 SoCs, the other chips can reuse it.
+@@ -1339,7 +1339,7 @@ rockchip_thermal_register_sensor(struct
+ }
+ 
+ /**
+- * Reset TSADC Controller, reset all tsadc registers.
++ * rockchip_thermal_reset_controller - Reset TSADC Controller, reset all tsadc registers.
+  * @reset: the reset controller of tsadc
+  */
+ static void rockchip_thermal_reset_controller(struct reset_control *reset)
diff --git a/target/linux/rockchip/patches-6.1/338-thermal-drivers-rockchip-Use-devm_platform_get_and_i.patch b/target/linux/rockchip/patches-6.1/338-thermal-drivers-rockchip-Use-devm_platform_get_and_i.patch
new file mode 100644
index 0000000000..dcf9eeced6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/338-thermal-drivers-rockchip-Use-devm_platform_get_and_i.patch
@@ -0,0 +1,38 @@
+From d4d853398c3641c0e495f98fa9ff19a096905386 Mon Sep 17 00:00:00 2001
+From: ye xingchen <ye.xingchen@zte.com.cn>
+Date: Wed, 18 Jan 2023 16:39:30 +0800
+Subject: [PATCH 338/383] thermal/drivers/rockchip: Use
+ devm_platform_get_and_ioremap_resource()
+
+Convert platform_get_resource(), devm_ioremap_resource() to a single
+call to devm_platform_get_and_ioremap_resource(), as this is exactly
+what this function does.
+
+Signed-off-by: ye xingchen <ye.xingchen@zte.com.cn>
+Link: https://lore.kernel.org/r/202301181639300333679@zte.com.cn
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/thermal/rockchip_thermal.c | 4 +---
+ 1 file changed, 1 insertion(+), 3 deletions(-)
+
+--- a/drivers/thermal/rockchip_thermal.c
++++ b/drivers/thermal/rockchip_thermal.c
+@@ -1354,7 +1354,6 @@ static int rockchip_thermal_probe(struct
+ 	struct device_node *np = pdev->dev.of_node;
+ 	struct rockchip_thermal_data *thermal;
+ 	const struct of_device_id *match;
+-	struct resource *res;
+ 	int irq;
+ 	int i;
+ 	int error;
+@@ -1378,8 +1377,7 @@ static int rockchip_thermal_probe(struct
+ 	if (!thermal->chip)
+ 		return -EINVAL;
+ 
+-	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+-	thermal->regs = devm_ioremap_resource(&pdev->dev, res);
++	thermal->regs = devm_platform_get_and_ioremap_resource(pdev, 0, NULL);
+ 	if (IS_ERR(thermal->regs))
+ 		return PTR_ERR(thermal->regs);
+ 
diff --git a/target/linux/rockchip/patches-6.1/339-thermal-Remove-debug-or-error-messages-in-get_temp-o.patch b/target/linux/rockchip/patches-6.1/339-thermal-Remove-debug-or-error-messages-in-get_temp-o.patch
new file mode 100644
index 0000000000..8790814f01
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/339-thermal-Remove-debug-or-error-messages-in-get_temp-o.patch
@@ -0,0 +1,47 @@
+From 0070138200f16a0398aff9cb2e65808d7f0a575a Mon Sep 17 00:00:00 2001
+From: Daniel Lezcano <daniel.lezcano@linaro.org>
+Date: Wed, 1 Mar 2023 21:14:34 +0100
+Subject: [PATCH 339/383] thermal: Remove debug or error messages in get_temp()
+ ops
+
+Some get_temp() ops implementation are showing an error or a debug
+message if the reading of the sensor fails.
+
+The debug message is already displayed from the call site of this
+ops. So we can remove it.
+
+On the other side, the error should not be displayed because in
+production that can raise tons of messages.
+
+Finally, some drivers are showing a debug message with the
+temperature, this is also accessible through the trace from the core
+code in the temperature_update() function.
+
+Another benefit is the dev_* messages are accessing the thermal zone
+device field from the structure, so we encapsulate even more the code
+by preventing these accesses.
+
+Remove those messages.
+
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Reviewed-by: Miquel Raynal <miquel.raynal@bootlin.com> #Armada
+Acked-by: Florian Fainelli <f.fainelli@gmail.com> #brcmstb_thermal.c
+Acked-by: Heiko Stuebner <heiko@sntech.de> #rockchip
+Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/thermal/rockchip_thermal.c | 3 ---
+ 1 file changed, 3 deletions(-)
+
+--- a/drivers/thermal/rockchip_thermal.c
++++ b/drivers/thermal/rockchip_thermal.c
+@@ -1233,9 +1233,6 @@ static int rockchip_thermal_get_temp(str
+ 
+ 	retval = tsadc->get_temp(&tsadc->table,
+ 				 sensor->id, thermal->regs, out_temp);
+-	dev_dbg(&thermal->pdev->dev, "sensor %d - temp: %d, retval: %d\n",
+-		sensor->id, *out_temp, retval);
+-
+ 	return retval;
+ }
+ 
diff --git a/target/linux/rockchip/patches-6.1/340-thermal-hwmon-Do-not-set-no_hwmon-before-calling-the.patch b/target/linux/rockchip/patches-6.1/340-thermal-hwmon-Do-not-set-no_hwmon-before-calling-the.patch
new file mode 100644
index 0000000000..30a1e560ac
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/340-thermal-hwmon-Do-not-set-no_hwmon-before-calling-the.patch
@@ -0,0 +1,38 @@
+From 6f3245bb56af6ccc3d7c5b5a564bbacb8a277748 Mon Sep 17 00:00:00 2001
+From: Daniel Lezcano <daniel.lezcano@linaro.org>
+Date: Wed, 1 Mar 2023 21:14:35 +0100
+Subject: [PATCH 340/383] thermal/hwmon: Do not set no_hwmon before calling
+ thermal_add_hwmon_sysfs()
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+The thermal->tzp->no_hwmon parameter is only used when calling
+thermal_zone_device_register().
+
+Setting it to 'false' before calling thermal_add_hwmon_sysfs() has no
+effect.
+
+Remove the call and again prevent the drivers to access the thermal
+internals.
+
+Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se> #R-Car
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Acked-by: Florian Fainelli <f.fainelli@gmail.com> #Broadcom
+Acked-by: Heiko Stuebner <heiko@sntech.de> #rockchip
+Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/thermal/rockchip_thermal.c | 1 -
+ 1 file changed, 1 deletion(-)
+
+--- a/drivers/thermal/rockchip_thermal.c
++++ b/drivers/thermal/rockchip_thermal.c
+@@ -1451,7 +1451,6 @@ static int rockchip_thermal_probe(struct
+ 
+ 	for (i = 0; i < thermal->chip->chn_num; i++) {
+ 		rockchip_thermal_toggle_sensor(&thermal->sensors[i], true);
+-		thermal->sensors[i].tzd->tzp->no_hwmon = false;
+ 		error = thermal_add_hwmon_sysfs(thermal->sensors[i].tzd);
+ 		if (error)
+ 			dev_warn(&pdev->dev,
diff --git a/target/linux/rockchip/patches-6.1/341-thermal-drivers-rockchip-Simplify-getting-match-data.patch b/target/linux/rockchip/patches-6.1/341-thermal-drivers-rockchip-Simplify-getting-match-data.patch
new file mode 100644
index 0000000000..554f94a264
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/341-thermal-drivers-rockchip-Simplify-getting-match-data.patch
@@ -0,0 +1,44 @@
+From a5afd6d05baeabb9f9d18c2879edf030e91f3355 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 8 Mar 2023 12:22:47 +0100
+Subject: [PATCH 341/383] thermal/drivers/rockchip: Simplify getting match data
+
+It's possible to directly get the match data in a generic
+way nowadays.
+
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Link: https://lore.kernel.org/r/20230308112253.15659-2-sebastian.reichel@collabora.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/thermal/rockchip_thermal.c | 7 +------
+ 1 file changed, 1 insertion(+), 6 deletions(-)
+
+--- a/drivers/thermal/rockchip_thermal.c
++++ b/drivers/thermal/rockchip_thermal.c
+@@ -1350,15 +1350,10 @@ static int rockchip_thermal_probe(struct
+ {
+ 	struct device_node *np = pdev->dev.of_node;
+ 	struct rockchip_thermal_data *thermal;
+-	const struct of_device_id *match;
+ 	int irq;
+ 	int i;
+ 	int error;
+ 
+-	match = of_match_node(of_rockchip_thermal_match, np);
+-	if (!match)
+-		return -ENXIO;
+-
+ 	irq = platform_get_irq(pdev, 0);
+ 	if (irq < 0)
+ 		return -EINVAL;
+@@ -1370,7 +1365,7 @@ static int rockchip_thermal_probe(struct
+ 
+ 	thermal->pdev = pdev;
+ 
+-	thermal->chip = (const struct rockchip_tsadc_chip *)match->data;
++	thermal->chip = device_get_match_data(&pdev->dev);
+ 	if (!thermal->chip)
+ 		return -EINVAL;
+ 
diff --git a/target/linux/rockchip/patches-6.1/342-thermal-drivers-rockchip-Simplify-clock-logic.patch b/target/linux/rockchip/patches-6.1/342-thermal-drivers-rockchip-Simplify-clock-logic.patch
new file mode 100644
index 0000000000..b7a57b5af0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/342-thermal-drivers-rockchip-Simplify-clock-logic.patch
@@ -0,0 +1,107 @@
+From 3444c6d3676ab753d2b7f582a265321fafb0678a Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 8 Mar 2023 12:22:48 +0100
+Subject: [PATCH 342/383] thermal/drivers/rockchip: Simplify clock logic
+
+By using devm_clk_get_enabled() the clock acquisition and
+enabling can be done in one step with automatic error
+handling.
+
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Link: https://lore.kernel.org/r/20230308112253.15659-3-sebastian.reichel@collabora.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/thermal/rockchip_thermal.c | 33 +++++-------------------------
+ 1 file changed, 5 insertions(+), 28 deletions(-)
+
+--- a/drivers/thermal/rockchip_thermal.c
++++ b/drivers/thermal/rockchip_thermal.c
+@@ -1380,14 +1380,14 @@ static int rockchip_thermal_probe(struct
+ 		return error;
+ 	}
+ 
+-	thermal->clk = devm_clk_get(&pdev->dev, "tsadc");
++	thermal->clk = devm_clk_get_enabled(&pdev->dev, "tsadc");
+ 	if (IS_ERR(thermal->clk)) {
+ 		error = PTR_ERR(thermal->clk);
+ 		dev_err(&pdev->dev, "failed to get tsadc clock: %d\n", error);
+ 		return error;
+ 	}
+ 
+-	thermal->pclk = devm_clk_get(&pdev->dev, "apb_pclk");
++	thermal->pclk = devm_clk_get_enabled(&pdev->dev, "apb_pclk");
+ 	if (IS_ERR(thermal->pclk)) {
+ 		error = PTR_ERR(thermal->pclk);
+ 		dev_err(&pdev->dev, "failed to get apb_pclk clock: %d\n",
+@@ -1395,26 +1395,13 @@ static int rockchip_thermal_probe(struct
+ 		return error;
+ 	}
+ 
+-	error = clk_prepare_enable(thermal->clk);
+-	if (error) {
+-		dev_err(&pdev->dev, "failed to enable converter clock: %d\n",
+-			error);
+-		return error;
+-	}
+-
+-	error = clk_prepare_enable(thermal->pclk);
+-	if (error) {
+-		dev_err(&pdev->dev, "failed to enable pclk: %d\n", error);
+-		goto err_disable_clk;
+-	}
+-
+ 	rockchip_thermal_reset_controller(thermal->reset);
+ 
+ 	error = rockchip_configure_from_dt(&pdev->dev, np, thermal);
+ 	if (error) {
+ 		dev_err(&pdev->dev, "failed to parse device tree data: %d\n",
+ 			error);
+-		goto err_disable_pclk;
++		return error;
+ 	}
+ 
+ 	thermal->chip->initialize(thermal->grf, thermal->regs,
+@@ -1428,7 +1415,7 @@ static int rockchip_thermal_probe(struct
+ 			dev_err(&pdev->dev,
+ 				"failed to register sensor[%d] : error = %d\n",
+ 				i, error);
+-			goto err_disable_pclk;
++			return error;
+ 		}
+ 	}
+ 
+@@ -1439,7 +1426,7 @@ static int rockchip_thermal_probe(struct
+ 	if (error) {
+ 		dev_err(&pdev->dev,
+ 			"failed to request tsadc irq: %d\n", error);
+-		goto err_disable_pclk;
++		return error;
+ 	}
+ 
+ 	thermal->chip->control(thermal->regs, true);
+@@ -1456,13 +1443,6 @@ static int rockchip_thermal_probe(struct
+ 	platform_set_drvdata(pdev, thermal);
+ 
+ 	return 0;
+-
+-err_disable_pclk:
+-	clk_disable_unprepare(thermal->pclk);
+-err_disable_clk:
+-	clk_disable_unprepare(thermal->clk);
+-
+-	return error;
+ }
+ 
+ static int rockchip_thermal_remove(struct platform_device *pdev)
+@@ -1479,9 +1459,6 @@ static int rockchip_thermal_remove(struc
+ 
+ 	thermal->chip->control(thermal->regs, false);
+ 
+-	clk_disable_unprepare(thermal->pclk);
+-	clk_disable_unprepare(thermal->clk);
+-
+ 	return 0;
+ }
+ 
diff --git a/target/linux/rockchip/patches-6.1/343-thermal-drivers-rockchip-Use-dev_err_probe.patch b/target/linux/rockchip/patches-6.1/343-thermal-drivers-rockchip-Use-dev_err_probe.patch
new file mode 100644
index 0000000000..aa92d85680
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/343-thermal-drivers-rockchip-Use-dev_err_probe.patch
@@ -0,0 +1,97 @@
+From 1c35f48d619b204cd6b4c349495c977337940050 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 8 Mar 2023 12:22:49 +0100
+Subject: [PATCH 343/383] thermal/drivers/rockchip: Use dev_err_probe
+
+Use dev_err_probe to simplify error printing in the driver's probe
+routine.
+
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Link: https://lore.kernel.org/r/20230308112253.15659-4-sebastian.reichel@collabora.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/thermal/rockchip_thermal.c | 50 +++++++++++-------------------
+ 1 file changed, 18 insertions(+), 32 deletions(-)
+
+--- a/drivers/thermal/rockchip_thermal.c
++++ b/drivers/thermal/rockchip_thermal.c
+@@ -1374,35 +1374,26 @@ static int rockchip_thermal_probe(struct
+ 		return PTR_ERR(thermal->regs);
+ 
+ 	thermal->reset = devm_reset_control_array_get(&pdev->dev, false, false);
+-	if (IS_ERR(thermal->reset)) {
+-		error = PTR_ERR(thermal->reset);
+-		dev_err(&pdev->dev, "failed to get tsadc reset: %d\n", error);
+-		return error;
+-	}
++	if (IS_ERR(thermal->reset))
++		return dev_err_probe(&pdev->dev, PTR_ERR(thermal->reset),
++				     "failed to get tsadc reset.\n");
+ 
+ 	thermal->clk = devm_clk_get_enabled(&pdev->dev, "tsadc");
+-	if (IS_ERR(thermal->clk)) {
+-		error = PTR_ERR(thermal->clk);
+-		dev_err(&pdev->dev, "failed to get tsadc clock: %d\n", error);
+-		return error;
+-	}
++	if (IS_ERR(thermal->clk))
++		return dev_err_probe(&pdev->dev, PTR_ERR(thermal->clk),
++				     "failed to get tsadc clock.\n");
+ 
+ 	thermal->pclk = devm_clk_get_enabled(&pdev->dev, "apb_pclk");
+-	if (IS_ERR(thermal->pclk)) {
+-		error = PTR_ERR(thermal->pclk);
+-		dev_err(&pdev->dev, "failed to get apb_pclk clock: %d\n",
+-			error);
+-		return error;
+-	}
++	if (IS_ERR(thermal->pclk))
++		return dev_err_probe(&pdev->dev, PTR_ERR(thermal->pclk),
++				     "failed to get apb_pclk clock.\n");
+ 
+ 	rockchip_thermal_reset_controller(thermal->reset);
+ 
+ 	error = rockchip_configure_from_dt(&pdev->dev, np, thermal);
+-	if (error) {
+-		dev_err(&pdev->dev, "failed to parse device tree data: %d\n",
+-			error);
+-		return error;
+-	}
++	if (error)
++		return dev_err_probe(&pdev->dev, error,
++				"failed to parse device tree data\n");
+ 
+ 	thermal->chip->initialize(thermal->grf, thermal->regs,
+ 				  thermal->tshut_polarity);
+@@ -1411,23 +1402,18 @@ static int rockchip_thermal_probe(struct
+ 		error = rockchip_thermal_register_sensor(pdev, thermal,
+ 						&thermal->sensors[i],
+ 						thermal->chip->chn_id[i]);
+-		if (error) {
+-			dev_err(&pdev->dev,
+-				"failed to register sensor[%d] : error = %d\n",
+-				i, error);
+-			return error;
+-		}
++		if (error)
++			return dev_err_probe(&pdev->dev, error,
++				"failed to register sensor[%d].\n", i);
+ 	}
+ 
+ 	error = devm_request_threaded_irq(&pdev->dev, irq, NULL,
+ 					  &rockchip_thermal_alarm_irq_thread,
+ 					  IRQF_ONESHOT,
+ 					  "rockchip_thermal", thermal);
+-	if (error) {
+-		dev_err(&pdev->dev,
+-			"failed to request tsadc irq: %d\n", error);
+-		return error;
+-	}
++	if (error)
++		return dev_err_probe(&pdev->dev, error,
++				     "failed to request tsadc irq.\n");
+ 
+ 	thermal->chip->control(thermal->regs, true);
+ 
diff --git a/target/linux/rockchip/patches-6.1/344-thermal-drivers-rockchip-Simplify-channel-id-logic.patch b/target/linux/rockchip/patches-6.1/344-thermal-drivers-rockchip-Simplify-channel-id-logic.patch
new file mode 100644
index 0000000000..5becc7e79e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/344-thermal-drivers-rockchip-Simplify-channel-id-logic.patch
@@ -0,0 +1,158 @@
+From b8e26c8425b5344afa931658def050d42be30897 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 8 Mar 2023 12:22:50 +0100
+Subject: [PATCH 344/383] thermal/drivers/rockchip: Simplify channel id logic
+
+Replace the channel ID lookup table by a simple offset, since
+the channel IDs are consecutive.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://lore.kernel.org/r/20230308112253.15659-5-sebastian.reichel@collabora.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/thermal/rockchip_thermal.c | 48 +++++++++++++-----------------
+ 1 file changed, 21 insertions(+), 27 deletions(-)
+
+--- a/drivers/thermal/rockchip_thermal.c
++++ b/drivers/thermal/rockchip_thermal.c
+@@ -40,15 +40,6 @@ enum tshut_polarity {
+ };
+ 
+ /*
+- * The system has two Temperature Sensors.
+- * sensor0 is for CPU, and sensor1 is for GPU.
+- */
+-enum sensor_id {
+-	SENSOR_CPU = 0,
+-	SENSOR_GPU,
+-};
+-
+-/*
+  * The conversion table has the adc value and temperature.
+  * ADC_DECREMENT: the adc value is of diminishing.(e.g. rk3288_code_table)
+  * ADC_INCREMENT: the adc value is incremental.(e.g. rk3368_code_table)
+@@ -82,7 +73,7 @@ struct chip_tsadc_table {
+ 
+ /**
+  * struct rockchip_tsadc_chip - hold the private data of tsadc chip
+- * @chn_id: array of sensor ids of chip corresponding to the channel
++ * @chn_offset: the channel offset of the first channel
+  * @chn_num: the channel number of tsadc chip
+  * @tshut_temp: the hardware-controlled shutdown temperature value
+  * @tshut_mode: the hardware-controlled shutdown mode (0:CRU 1:GPIO)
+@@ -98,7 +89,7 @@ struct chip_tsadc_table {
+  */
+ struct rockchip_tsadc_chip {
+ 	/* The sensor id of chip correspond to the ADC channel */
+-	int chn_id[SOC_MAX_SENSORS];
++	int chn_offset;
+ 	int chn_num;
+ 
+ 	/* The hardware-controlled tshut property */
+@@ -925,8 +916,8 @@ static void rk_tsadcv2_tshut_mode(int ch
+ }
+ 
+ static const struct rockchip_tsadc_chip px30_tsadc_data = {
+-	.chn_id[SENSOR_CPU] = 0, /* cpu sensor is channel 0 */
+-	.chn_id[SENSOR_GPU] = 1, /* gpu sensor is channel 1 */
++	/* cpu, gpu */
++	.chn_offset = 0,
+ 	.chn_num = 2, /* 2 channels for tsadc */
+ 
+ 	.tshut_mode = TSHUT_MODE_CRU, /* default TSHUT via CRU */
+@@ -949,7 +940,8 @@ static const struct rockchip_tsadc_chip
+ };
+ 
+ static const struct rockchip_tsadc_chip rv1108_tsadc_data = {
+-	.chn_id[SENSOR_CPU] = 0, /* cpu sensor is channel 0 */
++	/* cpu */
++	.chn_offset = 0,
+ 	.chn_num = 1, /* one channel for tsadc */
+ 
+ 	.tshut_mode = TSHUT_MODE_GPIO, /* default TSHUT via GPIO give PMIC */
+@@ -973,7 +965,8 @@ static const struct rockchip_tsadc_chip
+ };
+ 
+ static const struct rockchip_tsadc_chip rk3228_tsadc_data = {
+-	.chn_id[SENSOR_CPU] = 0, /* cpu sensor is channel 0 */
++	/* cpu */
++	.chn_offset = 0,
+ 	.chn_num = 1, /* one channel for tsadc */
+ 
+ 	.tshut_mode = TSHUT_MODE_GPIO, /* default TSHUT via GPIO give PMIC */
+@@ -997,8 +990,8 @@ static const struct rockchip_tsadc_chip
+ };
+ 
+ static const struct rockchip_tsadc_chip rk3288_tsadc_data = {
+-	.chn_id[SENSOR_CPU] = 1, /* cpu sensor is channel 1 */
+-	.chn_id[SENSOR_GPU] = 2, /* gpu sensor is channel 2 */
++	/* cpu, gpu */
++	.chn_offset = 1,
+ 	.chn_num = 2, /* two channels for tsadc */
+ 
+ 	.tshut_mode = TSHUT_MODE_GPIO, /* default TSHUT via GPIO give PMIC */
+@@ -1022,7 +1015,8 @@ static const struct rockchip_tsadc_chip
+ };
+ 
+ static const struct rockchip_tsadc_chip rk3328_tsadc_data = {
+-	.chn_id[SENSOR_CPU] = 0, /* cpu sensor is channel 0 */
++	/* cpu */
++	.chn_offset = 0,
+ 	.chn_num = 1, /* one channels for tsadc */
+ 
+ 	.tshut_mode = TSHUT_MODE_CRU, /* default TSHUT via CRU */
+@@ -1045,8 +1039,8 @@ static const struct rockchip_tsadc_chip
+ };
+ 
+ static const struct rockchip_tsadc_chip rk3366_tsadc_data = {
+-	.chn_id[SENSOR_CPU] = 0, /* cpu sensor is channel 0 */
+-	.chn_id[SENSOR_GPU] = 1, /* gpu sensor is channel 1 */
++	/* cpu, gpu */
++	.chn_offset = 0,
+ 	.chn_num = 2, /* two channels for tsadc */
+ 
+ 	.tshut_mode = TSHUT_MODE_GPIO, /* default TSHUT via GPIO give PMIC */
+@@ -1070,8 +1064,8 @@ static const struct rockchip_tsadc_chip
+ };
+ 
+ static const struct rockchip_tsadc_chip rk3368_tsadc_data = {
+-	.chn_id[SENSOR_CPU] = 0, /* cpu sensor is channel 0 */
+-	.chn_id[SENSOR_GPU] = 1, /* gpu sensor is channel 1 */
++	/* cpu, gpu */
++	.chn_offset = 0,
+ 	.chn_num = 2, /* two channels for tsadc */
+ 
+ 	.tshut_mode = TSHUT_MODE_GPIO, /* default TSHUT via GPIO give PMIC */
+@@ -1095,8 +1089,8 @@ static const struct rockchip_tsadc_chip
+ };
+ 
+ static const struct rockchip_tsadc_chip rk3399_tsadc_data = {
+-	.chn_id[SENSOR_CPU] = 0, /* cpu sensor is channel 0 */
+-	.chn_id[SENSOR_GPU] = 1, /* gpu sensor is channel 1 */
++	/* cpu, gpu */
++	.chn_offset = 0,
+ 	.chn_num = 2, /* two channels for tsadc */
+ 
+ 	.tshut_mode = TSHUT_MODE_GPIO, /* default TSHUT via GPIO give PMIC */
+@@ -1120,8 +1114,8 @@ static const struct rockchip_tsadc_chip
+ };
+ 
+ static const struct rockchip_tsadc_chip rk3568_tsadc_data = {
+-	.chn_id[SENSOR_CPU] = 0, /* cpu sensor is channel 0 */
+-	.chn_id[SENSOR_GPU] = 1, /* gpu sensor is channel 1 */
++	/* cpu, gpu */
++	.chn_offset = 0,
+ 	.chn_num = 2, /* two channels for tsadc */
+ 
+ 	.tshut_mode = TSHUT_MODE_GPIO, /* default TSHUT via GPIO give PMIC */
+@@ -1401,7 +1395,7 @@ static int rockchip_thermal_probe(struct
+ 	for (i = 0; i < thermal->chip->chn_num; i++) {
+ 		error = rockchip_thermal_register_sensor(pdev, thermal,
+ 						&thermal->sensors[i],
+-						thermal->chip->chn_id[i]);
++						thermal->chip->chn_offset + i);
+ 		if (error)
+ 			return dev_err_probe(&pdev->dev, error,
+ 				"failed to register sensor[%d].\n", i);
diff --git a/target/linux/rockchip/patches-6.1/345-thermal-drivers-rockchip-Support-dynamic-sized-senso.patch b/target/linux/rockchip/patches-6.1/345-thermal-drivers-rockchip-Support-dynamic-sized-senso.patch
new file mode 100644
index 0000000000..c898bd8e37
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/345-thermal-drivers-rockchip-Support-dynamic-sized-senso.patch
@@ -0,0 +1,55 @@
+From 775d501bbd08d1a62d351f89bfa2ab0fd23b0bba Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Wed, 8 Mar 2023 12:22:51 +0100
+Subject: [PATCH 345/383] thermal/drivers/rockchip: Support dynamic sized
+ sensor array
+
+Dynamically allocate the sensors array based on the amount
+of platform sensors in preparation for rk3588 support, which
+needs 7 sensors.
+
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Link: https://lore.kernel.org/r/20230308112253.15659-6-sebastian.reichel@collabora.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/thermal/rockchip_thermal.c | 13 ++++++-------
+ 1 file changed, 6 insertions(+), 7 deletions(-)
+
+--- a/drivers/thermal/rockchip_thermal.c
++++ b/drivers/thermal/rockchip_thermal.c
+@@ -51,12 +51,6 @@ enum adc_sort_mode {
+ 
+ #include "thermal_hwmon.h"
+ 
+-/*
+- * The max sensors is two in rockchip SoCs.
+- * Two sensors: CPU and GPU sensor.
+- */
+-#define SOC_MAX_SENSORS	2
+-
+ /**
+  * struct chip_tsadc_table - hold information about chip-specific differences
+  * @id: conversion table
+@@ -147,7 +141,7 @@ struct rockchip_thermal_data {
+ 	struct platform_device *pdev;
+ 	struct reset_control *reset;
+ 
+-	struct rockchip_thermal_sensor sensors[SOC_MAX_SENSORS];
++	struct rockchip_thermal_sensor *sensors;
+ 
+ 	struct clk *clk;
+ 	struct clk *pclk;
+@@ -1363,6 +1357,11 @@ static int rockchip_thermal_probe(struct
+ 	if (!thermal->chip)
+ 		return -EINVAL;
+ 
++	thermal->sensors = devm_kcalloc(&pdev->dev, thermal->chip->chn_num,
++					sizeof(*thermal->sensors), GFP_KERNEL);
++	if (!thermal->sensors)
++		return -ENOMEM;
++
+ 	thermal->regs = devm_platform_get_and_ioremap_resource(pdev, 0, NULL);
+ 	if (IS_ERR(thermal->regs))
+ 		return PTR_ERR(thermal->regs);
diff --git a/target/linux/rockchip/patches-6.1/346-thermal-drivers-rockchip-Support-RK3588-SoC-in-the-t.patch b/target/linux/rockchip/patches-6.1/346-thermal-drivers-rockchip-Support-RK3588-SoC-in-the-t.patch
new file mode 100644
index 0000000000..717de4e126
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/346-thermal-drivers-rockchip-Support-RK3588-SoC-in-the-t.patch
@@ -0,0 +1,320 @@
+From fab29b4b14efc1ff3f6cb006f600e40ab2a988e0 Mon Sep 17 00:00:00 2001
+From: Finley Xiao <finley.xiao@rock-chips.com>
+Date: Wed, 8 Mar 2023 12:22:52 +0100
+Subject: [PATCH 346/383] thermal/drivers/rockchip: Support RK3588 SoC in the
+ thermal driver
+
+The RK3588 SoC has seven temperature sensor ADC channels:
+
+- Chip Center
+- CPU Cluster 1 (Dual A76 "Big" Cores)
+- CPU Cluster 2 (Dual A76 "Big" Cores)
+- CPU Cluster 0 (Quad A55 "Little" Cores)
+- Power Domain Center
+- Graphics Processing Unit
+- Neural Processing Unit
+
+Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
+[rebase, squash fixes]
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Link: https://lore.kernel.org/r/20230308112253.15659-7-sebastian.reichel@collabora.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/thermal/rockchip_thermal.c | 177 +++++++++++++++++++++++++++++
+ 1 file changed, 177 insertions(+)
+
+--- a/drivers/thermal/rockchip_thermal.c
++++ b/drivers/thermal/rockchip_thermal.c
+@@ -165,29 +165,49 @@ struct rockchip_thermal_data {
+ #define TSADCV2_AUTO_CON			0x04
+ #define TSADCV2_INT_EN				0x08
+ #define TSADCV2_INT_PD				0x0c
++#define TSADCV3_AUTO_SRC_CON			0x0c
++#define TSADCV3_HT_INT_EN			0x14
++#define TSADCV3_HSHUT_GPIO_INT_EN		0x18
++#define TSADCV3_HSHUT_CRU_INT_EN		0x1c
++#define TSADCV3_INT_PD				0x24
++#define TSADCV3_HSHUT_PD			0x28
+ #define TSADCV2_DATA(chn)			(0x20 + (chn) * 0x04)
+ #define TSADCV2_COMP_INT(chn)		        (0x30 + (chn) * 0x04)
+ #define TSADCV2_COMP_SHUT(chn)		        (0x40 + (chn) * 0x04)
++#define TSADCV3_DATA(chn)			(0x2c + (chn) * 0x04)
++#define TSADCV3_COMP_INT(chn)		        (0x6c + (chn) * 0x04)
++#define TSADCV3_COMP_SHUT(chn)		        (0x10c + (chn) * 0x04)
+ #define TSADCV2_HIGHT_INT_DEBOUNCE		0x60
+ #define TSADCV2_HIGHT_TSHUT_DEBOUNCE		0x64
++#define TSADCV3_HIGHT_INT_DEBOUNCE		0x14c
++#define TSADCV3_HIGHT_TSHUT_DEBOUNCE		0x150
+ #define TSADCV2_AUTO_PERIOD			0x68
+ #define TSADCV2_AUTO_PERIOD_HT			0x6c
++#define TSADCV3_AUTO_PERIOD			0x154
++#define TSADCV3_AUTO_PERIOD_HT			0x158
+ 
+ #define TSADCV2_AUTO_EN				BIT(0)
++#define TSADCV2_AUTO_EN_MASK			BIT(16)
+ #define TSADCV2_AUTO_SRC_EN(chn)		BIT(4 + (chn))
++#define TSADCV3_AUTO_SRC_EN(chn)		BIT(chn)
++#define TSADCV3_AUTO_SRC_EN_MASK(chn)		BIT(16 + chn)
+ #define TSADCV2_AUTO_TSHUT_POLARITY_HIGH	BIT(8)
++#define TSADCV2_AUTO_TSHUT_POLARITY_MASK	BIT(24)
+ 
+ #define TSADCV3_AUTO_Q_SEL_EN			BIT(1)
+ 
+ #define TSADCV2_INT_SRC_EN(chn)			BIT(chn)
++#define TSADCV2_INT_SRC_EN_MASK(chn)		BIT(16 + (chn))
+ #define TSADCV2_SHUT_2GPIO_SRC_EN(chn)		BIT(4 + (chn))
+ #define TSADCV2_SHUT_2CRU_SRC_EN(chn)		BIT(8 + (chn))
+ 
+ #define TSADCV2_INT_PD_CLEAR_MASK		~BIT(8)
+ #define TSADCV3_INT_PD_CLEAR_MASK		~BIT(16)
++#define TSADCV4_INT_PD_CLEAR_MASK		0xffffffff
+ 
+ #define TSADCV2_DATA_MASK			0xfff
+ #define TSADCV3_DATA_MASK			0x3ff
++#define TSADCV4_DATA_MASK			0x1ff
+ 
+ #define TSADCV2_HIGHT_INT_DEBOUNCE_COUNT	4
+ #define TSADCV2_HIGHT_TSHUT_DEBOUNCE_COUNT	4
+@@ -198,6 +218,8 @@ struct rockchip_thermal_data {
+ 
+ #define TSADCV5_AUTO_PERIOD_TIME		1622 /* 2.5ms */
+ #define TSADCV5_AUTO_PERIOD_HT_TIME		1622 /* 2.5ms */
++#define TSADCV6_AUTO_PERIOD_TIME		5000 /* 2.5ms */
++#define TSADCV6_AUTO_PERIOD_HT_TIME		5000 /* 2.5ms */
+ 
+ #define TSADCV2_USER_INTER_PD_SOC		0x340 /* 13 clocks */
+ #define TSADCV5_USER_INTER_PD_SOC		0xfc0 /* 97us, at least 90us */
+@@ -214,6 +236,12 @@ struct rockchip_thermal_data {
+ #define RK3568_GRF_TSADC_ANA_REG2		(0x10001 << 2)
+ #define RK3568_GRF_TSADC_TSEN			(0x10001 << 8)
+ 
++#define RK3588_GRF0_TSADC_CON			0x0100
++
++#define RK3588_GRF0_TSADC_TRM			(0xff0077 << 0)
++#define RK3588_GRF0_TSADC_SHUT_2CRU		(0x30003 << 10)
++#define RK3588_GRF0_TSADC_SHUT_2GPIO		(0x70007 << 12)
++
+ #define GRF_SARADC_TESTBIT_ON			(0x10001 << 2)
+ #define GRF_TSADC_TESTBIT_H_ON			(0x10001 << 2)
+ #define GRF_TSADC_VCM_EN_L			(0x10001 << 7)
+@@ -508,6 +536,15 @@ static const struct tsadc_table rk3568_c
+ 	{TSADCV2_DATA_MASK, 125000},
+ };
+ 
++static const struct tsadc_table rk3588_code_table[] = {
++	{0, -40000},
++	{215, -40000},
++	{285, 25000},
++	{350, 85000},
++	{395, 125000},
++	{TSADCV4_DATA_MASK, 125000},
++};
++
+ static u32 rk_tsadcv2_temp_to_code(const struct chip_tsadc_table *table,
+ 				   int temp)
+ {
+@@ -778,6 +815,25 @@ static void rk_tsadcv7_initialize(struct
+ 	}
+ }
+ 
++static void rk_tsadcv8_initialize(struct regmap *grf, void __iomem *regs,
++				  enum tshut_polarity tshut_polarity)
++{
++	writel_relaxed(TSADCV6_AUTO_PERIOD_TIME, regs + TSADCV3_AUTO_PERIOD);
++	writel_relaxed(TSADCV6_AUTO_PERIOD_HT_TIME,
++		       regs + TSADCV3_AUTO_PERIOD_HT);
++	writel_relaxed(TSADCV2_HIGHT_INT_DEBOUNCE_COUNT,
++		       regs + TSADCV3_HIGHT_INT_DEBOUNCE);
++	writel_relaxed(TSADCV2_HIGHT_TSHUT_DEBOUNCE_COUNT,
++		       regs + TSADCV3_HIGHT_TSHUT_DEBOUNCE);
++	if (tshut_polarity == TSHUT_HIGH_ACTIVE)
++		writel_relaxed(TSADCV2_AUTO_TSHUT_POLARITY_HIGH |
++			       TSADCV2_AUTO_TSHUT_POLARITY_MASK,
++			       regs + TSADCV2_AUTO_CON);
++	else
++		writel_relaxed(TSADCV2_AUTO_TSHUT_POLARITY_MASK,
++			       regs + TSADCV2_AUTO_CON);
++}
++
+ static void rk_tsadcv2_irq_ack(void __iomem *regs)
+ {
+ 	u32 val;
+@@ -794,6 +850,17 @@ static void rk_tsadcv3_irq_ack(void __io
+ 	writel_relaxed(val & TSADCV3_INT_PD_CLEAR_MASK, regs + TSADCV2_INT_PD);
+ }
+ 
++static void rk_tsadcv4_irq_ack(void __iomem *regs)
++{
++	u32 val;
++
++	val = readl_relaxed(regs + TSADCV3_INT_PD);
++	writel_relaxed(val & TSADCV4_INT_PD_CLEAR_MASK, regs + TSADCV3_INT_PD);
++	val = readl_relaxed(regs + TSADCV3_HSHUT_PD);
++	writel_relaxed(val & TSADCV3_INT_PD_CLEAR_MASK,
++		       regs + TSADCV3_HSHUT_PD);
++}
++
+ static void rk_tsadcv2_control(void __iomem *regs, bool enable)
+ {
+ 	u32 val;
+@@ -829,6 +896,18 @@ static void rk_tsadcv3_control(void __io
+ 	writel_relaxed(val, regs + TSADCV2_AUTO_CON);
+ }
+ 
++static void rk_tsadcv4_control(void __iomem *regs, bool enable)
++{
++	u32 val;
++
++	if (enable)
++		val = TSADCV2_AUTO_EN | TSADCV2_AUTO_EN_MASK;
++	else
++		val = TSADCV2_AUTO_EN_MASK;
++
++	writel_relaxed(val, regs + TSADCV2_AUTO_CON);
++}
++
+ static int rk_tsadcv2_get_temp(const struct chip_tsadc_table *table,
+ 			       int chn, void __iomem *regs, int *temp)
+ {
+@@ -839,6 +918,16 @@ static int rk_tsadcv2_get_temp(const str
+ 	return rk_tsadcv2_code_to_temp(table, val, temp);
+ }
+ 
++static int rk_tsadcv4_get_temp(const struct chip_tsadc_table *table,
++			       int chn, void __iomem *regs, int *temp)
++{
++	u32 val;
++
++	val = readl_relaxed(regs + TSADCV3_DATA(chn));
++
++	return rk_tsadcv2_code_to_temp(table, val, temp);
++}
++
+ static int rk_tsadcv2_alarm_temp(const struct chip_tsadc_table *table,
+ 				 int chn, void __iomem *regs, int temp)
+ {
+@@ -873,6 +962,33 @@ static int rk_tsadcv2_alarm_temp(const s
+ 	return 0;
+ }
+ 
++static int rk_tsadcv3_alarm_temp(const struct chip_tsadc_table *table,
++				 int chn, void __iomem *regs, int temp)
++{
++	u32 alarm_value;
++
++	/*
++	 * In some cases, some sensors didn't need the trip points, the
++	 * set_trips will pass {-INT_MAX, INT_MAX} to trigger tsadc alarm
++	 * in the end, ignore this case and disable the high temperature
++	 * interrupt.
++	 */
++	if (temp == INT_MAX) {
++		writel_relaxed(TSADCV2_INT_SRC_EN_MASK(chn),
++			       regs + TSADCV3_HT_INT_EN);
++		return 0;
++	}
++	/* Make sure the value is valid */
++	alarm_value = rk_tsadcv2_temp_to_code(table, temp);
++	if (alarm_value == table->data_mask)
++		return -ERANGE;
++	writel_relaxed(alarm_value & table->data_mask,
++		       regs + TSADCV3_COMP_INT(chn));
++	writel_relaxed(TSADCV2_INT_SRC_EN(chn) | TSADCV2_INT_SRC_EN_MASK(chn),
++		       regs + TSADCV3_HT_INT_EN);
++	return 0;
++}
++
+ static int rk_tsadcv2_tshut_temp(const struct chip_tsadc_table *table,
+ 				 int chn, void __iomem *regs, int temp)
+ {
+@@ -892,6 +1008,25 @@ static int rk_tsadcv2_tshut_temp(const s
+ 	return 0;
+ }
+ 
++static int rk_tsadcv3_tshut_temp(const struct chip_tsadc_table *table,
++				 int chn, void __iomem *regs, int temp)
++{
++	u32 tshut_value;
++
++	/* Make sure the value is valid */
++	tshut_value = rk_tsadcv2_temp_to_code(table, temp);
++	if (tshut_value == table->data_mask)
++		return -ERANGE;
++
++	writel_relaxed(tshut_value, regs + TSADCV3_COMP_SHUT(chn));
++
++	/* TSHUT will be valid */
++	writel_relaxed(TSADCV3_AUTO_SRC_EN(chn) | TSADCV3_AUTO_SRC_EN_MASK(chn),
++		       regs + TSADCV3_AUTO_SRC_CON);
++
++	return 0;
++}
++
+ static void rk_tsadcv2_tshut_mode(int chn, void __iomem *regs,
+ 				  enum tshut_mode mode)
+ {
+@@ -909,6 +1044,22 @@ static void rk_tsadcv2_tshut_mode(int ch
+ 	writel_relaxed(val, regs + TSADCV2_INT_EN);
+ }
+ 
++static void rk_tsadcv3_tshut_mode(int chn, void __iomem *regs,
++				  enum tshut_mode mode)
++{
++	u32 val_gpio, val_cru;
++
++	if (mode == TSHUT_MODE_GPIO) {
++		val_gpio = TSADCV2_INT_SRC_EN(chn) | TSADCV2_INT_SRC_EN_MASK(chn);
++		val_cru = TSADCV2_INT_SRC_EN_MASK(chn);
++	} else {
++		val_cru = TSADCV2_INT_SRC_EN(chn) | TSADCV2_INT_SRC_EN_MASK(chn);
++		val_gpio = TSADCV2_INT_SRC_EN_MASK(chn);
++	}
++	writel_relaxed(val_gpio, regs + TSADCV3_HSHUT_GPIO_INT_EN);
++	writel_relaxed(val_cru, regs + TSADCV3_HSHUT_CRU_INT_EN);
++}
++
+ static const struct rockchip_tsadc_chip px30_tsadc_data = {
+ 	/* cpu, gpu */
+ 	.chn_offset = 0,
+@@ -1132,6 +1283,28 @@ static const struct rockchip_tsadc_chip
+ 	},
+ };
+ 
++static const struct rockchip_tsadc_chip rk3588_tsadc_data = {
++	/* top, big_core0, big_core1, little_core, center, gpu, npu */
++	.chn_offset = 0,
++	.chn_num = 7, /* seven channels for tsadc */
++	.tshut_mode = TSHUT_MODE_GPIO, /* default TSHUT via GPIO give PMIC */
++	.tshut_polarity = TSHUT_LOW_ACTIVE, /* default TSHUT LOW ACTIVE */
++	.tshut_temp = 95000,
++	.initialize = rk_tsadcv8_initialize,
++	.irq_ack = rk_tsadcv4_irq_ack,
++	.control = rk_tsadcv4_control,
++	.get_temp = rk_tsadcv4_get_temp,
++	.set_alarm_temp = rk_tsadcv3_alarm_temp,
++	.set_tshut_temp = rk_tsadcv3_tshut_temp,
++	.set_tshut_mode = rk_tsadcv3_tshut_mode,
++	.table = {
++		.id = rk3588_code_table,
++		.length = ARRAY_SIZE(rk3588_code_table),
++		.data_mask = TSADCV4_DATA_MASK,
++		.mode = ADC_INCREMENT,
++	},
++};
++
+ static const struct of_device_id of_rockchip_thermal_match[] = {
+ 	{	.compatible = "rockchip,px30-tsadc",
+ 		.data = (void *)&px30_tsadc_data,
+@@ -1168,6 +1341,10 @@ static const struct of_device_id of_rock
+ 		.compatible = "rockchip,rk3568-tsadc",
+ 		.data = (void *)&rk3568_tsadc_data,
+ 	},
++	{
++		.compatible = "rockchip,rk3588-tsadc",
++		.data = (void *)&rk3588_tsadc_data,
++	},
+ 	{ /* end */ },
+ };
+ MODULE_DEVICE_TABLE(of, of_rockchip_thermal_match);
diff --git a/target/linux/rockchip/patches-6.1/347-thermal-drivers-rockchip-use-devm_reset_control_arra.patch b/target/linux/rockchip/patches-6.1/347-thermal-drivers-rockchip-use-devm_reset_control_arra.patch
new file mode 100644
index 0000000000..f6a25908af
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/347-thermal-drivers-rockchip-use-devm_reset_control_arra.patch
@@ -0,0 +1,29 @@
+From 4258ee4cf05c992b7e1abbaf294a2a9a90e1a6e5 Mon Sep 17 00:00:00 2001
+From: Ye Xingchen <ye.xingchen@zte.com.cn>
+Date: Fri, 24 Mar 2023 11:08:55 +0800
+Subject: [PATCH 347/383] thermal/drivers/rockchip: use
+ devm_reset_control_array_get_exclusive()
+
+Switch devm_reset_control_array_get() to
+devm_reset_control_array_get_exclusive().
+
+Signed-off-by: Ye Xingchen <ye.xingchen@zte.com.cn>
+Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
+Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
+Link: https://lore.kernel.org/r/202303241108553006227@zte.com.cn
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/thermal/rockchip_thermal.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/thermal/rockchip_thermal.c
++++ b/drivers/thermal/rockchip_thermal.c
+@@ -1543,7 +1543,7 @@ static int rockchip_thermal_probe(struct
+ 	if (IS_ERR(thermal->regs))
+ 		return PTR_ERR(thermal->regs);
+ 
+-	thermal->reset = devm_reset_control_array_get(&pdev->dev, false, false);
++	thermal->reset = devm_reset_control_array_get_exclusive(&pdev->dev);
+ 	if (IS_ERR(thermal->reset))
+ 		return dev_err_probe(&pdev->dev, PTR_ERR(thermal->reset),
+ 				     "failed to get tsadc reset.\n");
diff --git a/target/linux/rockchip/patches-6.1/348-iio-adc-rockchip_saradc-Add-support-for-RK3588.patch b/target/linux/rockchip/patches-6.1/348-iio-adc-rockchip_saradc-Add-support-for-RK3588.patch
new file mode 100644
index 0000000000..758e4dd229
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/348-iio-adc-rockchip_saradc-Add-support-for-RK3588.patch
@@ -0,0 +1,214 @@
+From 47148e1c3e8db2a8da6869a61f45ff7bc70b8186 Mon Sep 17 00:00:00 2001
+From: Shreeya Patel <shreeya.patel@collabora.com>
+Date: Wed, 17 May 2023 04:30:45 +0530
+Subject: [PATCH 348/383] iio: adc: rockchip_saradc: Add support for RK3588
+
+Refactor conversion operation to support rk3588 saradc and
+add separate start, read, powerdown in respective hooks.
+
+Signed-off-by: Simon Xue <xxm@rock-chips.com>
+Signed-off-by: Shreeya Patel <shreeya.patel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/iio/adc/rockchip_saradc.c | 127 +++++++++++++++++++++++++++---
+ 1 file changed, 115 insertions(+), 12 deletions(-)
+
+--- a/drivers/iio/adc/rockchip_saradc.c
++++ b/drivers/iio/adc/rockchip_saradc.c
+@@ -37,10 +37,29 @@
+ #define SARADC_TIMEOUT			msecs_to_jiffies(100)
+ #define SARADC_MAX_CHANNELS		8
+ 
++/* v2 registers */
++#define SARADC2_CONV_CON		0x0
++#define SARADC_T_PD_SOC			0x4
++#define SARADC_T_DAS_SOC		0xc
++#define SARADC2_END_INT_EN		0x104
++#define SARADC2_ST_CON			0x108
++#define SARADC2_STATUS			0x10c
++#define SARADC2_END_INT_ST		0x110
++#define SARADC2_DATA_BASE		0x120
++
++#define SARADC2_EN_END_INT		BIT(0)
++#define SARADC2_START			BIT(4)
++#define SARADC2_SINGLE_MODE		BIT(5)
++
++struct rockchip_saradc;
++
+ struct rockchip_saradc_data {
+ 	const struct iio_chan_spec	*channels;
+ 	int				num_channels;
+ 	unsigned long			clk_rate;
++	void (*start)(struct rockchip_saradc *info, int chn);
++	int (*read)(struct rockchip_saradc *info);
++	void (*power_down)(struct rockchip_saradc *info);
+ };
+ 
+ struct rockchip_saradc {
+@@ -57,27 +76,77 @@ struct rockchip_saradc {
+ 	struct notifier_block nb;
+ };
+ 
+-static void rockchip_saradc_power_down(struct rockchip_saradc *info)
++static void rockchip_saradc_reset_controller(struct reset_control *reset);
++
++static void rockchip_saradc_start_v1(struct rockchip_saradc *info, int chn)
++{
++	/* 8 clock periods as delay between power up and start cmd */
++	writel_relaxed(8, info->regs + SARADC_DLY_PU_SOC);
++	/* Select the channel to be used and trigger conversion */
++	writel(SARADC_CTRL_POWER_CTRL | (chn & SARADC_CTRL_CHN_MASK) |
++	       SARADC_CTRL_IRQ_ENABLE, info->regs + SARADC_CTRL);
++}
++
++static void rockchip_saradc_start_v2(struct rockchip_saradc *info, int chn)
++{
++	int val;
++
++	if (info->reset)
++		rockchip_saradc_reset_controller(info->reset);
++
++	writel_relaxed(0xc, info->regs + SARADC_T_DAS_SOC);
++	writel_relaxed(0x20, info->regs + SARADC_T_PD_SOC);
++	val = SARADC2_EN_END_INT << 16 | SARADC2_EN_END_INT;
++	writel_relaxed(val, info->regs + SARADC2_END_INT_EN);
++	val = SARADC2_START | SARADC2_SINGLE_MODE | chn;
++	writel(val << 16 | val, info->regs + SARADC2_CONV_CON);
++}
++
++static void rockchip_saradc_start(struct rockchip_saradc *info, int chn)
++{
++	info->data->start(info, chn);
++}
++
++static int rockchip_saradc_read_v1(struct rockchip_saradc *info)
++{
++	return readl_relaxed(info->regs + SARADC_DATA);
++}
++
++static int rockchip_saradc_read_v2(struct rockchip_saradc *info)
++{
++	int offset;
++
++	/* Clear irq */
++	writel_relaxed(0x1, info->regs + SARADC2_END_INT_ST);
++
++	offset = SARADC2_DATA_BASE + info->last_chan->channel * 0x4;
++
++	return readl_relaxed(info->regs + offset);
++}
++
++static int rockchip_saradc_read(struct rockchip_saradc *info)
++{
++	return info->data->read(info);
++}
++
++static void rockchip_saradc_power_down_v1(struct rockchip_saradc *info)
+ {
+-	/* Clear irq & power down adc */
+ 	writel_relaxed(0, info->regs + SARADC_CTRL);
+ }
+ 
++static void rockchip_saradc_power_down(struct rockchip_saradc *info)
++{
++	if (info->data->power_down)
++		info->data->power_down(info);
++}
++
+ static int rockchip_saradc_conversion(struct rockchip_saradc *info,
+ 				   struct iio_chan_spec const *chan)
+ {
+ 	reinit_completion(&info->completion);
+ 
+-	/* 8 clock periods as delay between power up and start cmd */
+-	writel_relaxed(8, info->regs + SARADC_DLY_PU_SOC);
+-
+ 	info->last_chan = chan;
+-
+-	/* Select the channel to be used and trigger conversion */
+-	writel(SARADC_CTRL_POWER_CTRL
+-			| (chan->channel & SARADC_CTRL_CHN_MASK)
+-			| SARADC_CTRL_IRQ_ENABLE,
+-		   info->regs + SARADC_CTRL);
++	rockchip_saradc_start(info, chan->channel);
+ 
+ 	if (!wait_for_completion_timeout(&info->completion, SARADC_TIMEOUT))
+ 		return -ETIMEDOUT;
+@@ -120,7 +189,7 @@ static irqreturn_t rockchip_saradc_isr(i
+ 	struct rockchip_saradc *info = dev_id;
+ 
+ 	/* Read value */
+-	info->last_val = readl_relaxed(info->regs + SARADC_DATA);
++	info->last_val = rockchip_saradc_read(info);
+ 	info->last_val &= GENMASK(info->last_chan->scan_type.realbits - 1, 0);
+ 
+ 	rockchip_saradc_power_down(info);
+@@ -160,6 +229,9 @@ static const struct rockchip_saradc_data
+ 	.channels = rockchip_saradc_iio_channels,
+ 	.num_channels = ARRAY_SIZE(rockchip_saradc_iio_channels),
+ 	.clk_rate = 1000000,
++	.start = rockchip_saradc_start_v1,
++	.read = rockchip_saradc_read_v1,
++	.power_down = rockchip_saradc_power_down_v1,
+ };
+ 
+ static const struct iio_chan_spec rockchip_rk3066_tsadc_iio_channels[] = {
+@@ -171,6 +243,9 @@ static const struct rockchip_saradc_data
+ 	.channels = rockchip_rk3066_tsadc_iio_channels,
+ 	.num_channels = ARRAY_SIZE(rockchip_rk3066_tsadc_iio_channels),
+ 	.clk_rate = 50000,
++	.start = rockchip_saradc_start_v1,
++	.read = rockchip_saradc_read_v1,
++	.power_down = rockchip_saradc_power_down_v1,
+ };
+ 
+ static const struct iio_chan_spec rockchip_rk3399_saradc_iio_channels[] = {
+@@ -186,6 +261,9 @@ static const struct rockchip_saradc_data
+ 	.channels = rockchip_rk3399_saradc_iio_channels,
+ 	.num_channels = ARRAY_SIZE(rockchip_rk3399_saradc_iio_channels),
+ 	.clk_rate = 1000000,
++	.start = rockchip_saradc_start_v1,
++	.read = rockchip_saradc_read_v1,
++	.power_down = rockchip_saradc_power_down_v1,
+ };
+ 
+ static const struct iio_chan_spec rockchip_rk3568_saradc_iio_channels[] = {
+@@ -203,6 +281,28 @@ static const struct rockchip_saradc_data
+ 	.channels = rockchip_rk3568_saradc_iio_channels,
+ 	.num_channels = ARRAY_SIZE(rockchip_rk3568_saradc_iio_channels),
+ 	.clk_rate = 1000000,
++	.start = rockchip_saradc_start_v1,
++	.read = rockchip_saradc_read_v1,
++	.power_down = rockchip_saradc_power_down_v1,
++};
++
++static const struct iio_chan_spec rockchip_rk3588_saradc_iio_channels[] = {
++	SARADC_CHANNEL(0, "adc0", 12),
++	SARADC_CHANNEL(1, "adc1", 12),
++	SARADC_CHANNEL(2, "adc2", 12),
++	SARADC_CHANNEL(3, "adc3", 12),
++	SARADC_CHANNEL(4, "adc4", 12),
++	SARADC_CHANNEL(5, "adc5", 12),
++	SARADC_CHANNEL(6, "adc6", 12),
++	SARADC_CHANNEL(7, "adc7", 12),
++};
++
++static const struct rockchip_saradc_data rk3588_saradc_data = {
++	.channels = rockchip_rk3588_saradc_iio_channels,
++	.num_channels = ARRAY_SIZE(rockchip_rk3588_saradc_iio_channels),
++	.clk_rate = 1000000,
++	.start = rockchip_saradc_start_v2,
++	.read = rockchip_saradc_read_v2,
+ };
+ 
+ static const struct of_device_id rockchip_saradc_match[] = {
+@@ -218,6 +318,9 @@ static const struct of_device_id rockchi
+ 	}, {
+ 		.compatible = "rockchip,rk3568-saradc",
+ 		.data = &rk3568_saradc_data,
++	}, {
++		.compatible = "rockchip,rk3588-saradc",
++		.data = &rk3588_saradc_data,
+ 	},
+ 	{},
+ };
diff --git a/target/linux/rockchip/patches-6.1/349-iio-adc-rockchip_saradc-Make-use-of-devm_clk_get_ena.patch b/target/linux/rockchip/patches-6.1/349-iio-adc-rockchip_saradc-Make-use-of-devm_clk_get_ena.patch
new file mode 100644
index 0000000000..6350440bb7
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/349-iio-adc-rockchip_saradc-Make-use-of-devm_clk_get_ena.patch
@@ -0,0 +1,137 @@
+From 76a183447cef744072efc3948720934566eec9be Mon Sep 17 00:00:00 2001
+From: Shreeya Patel <shreeya.patel@collabora.com>
+Date: Wed, 17 May 2023 04:30:46 +0530
+Subject: [PATCH 349/383] iio: adc: rockchip_saradc: Make use of
+ devm_clk_get_enabled
+
+Use devm_clk_get_enabled() to avoid manually disabling the
+clock.
+
+Signed-off-by: Shreeya Patel <shreeya.patel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/iio/adc/rockchip_saradc.c | 77 +++++--------------------------
+ 1 file changed, 11 insertions(+), 66 deletions(-)
+
+--- a/drivers/iio/adc/rockchip_saradc.c
++++ b/drivers/iio/adc/rockchip_saradc.c
+@@ -336,20 +336,6 @@ static void rockchip_saradc_reset_contro
+ 	reset_control_deassert(reset);
+ }
+ 
+-static void rockchip_saradc_clk_disable(void *data)
+-{
+-	struct rockchip_saradc *info = data;
+-
+-	clk_disable_unprepare(info->clk);
+-}
+-
+-static void rockchip_saradc_pclk_disable(void *data)
+-{
+-	struct rockchip_saradc *info = data;
+-
+-	clk_disable_unprepare(info->pclk);
+-}
+-
+ static void rockchip_saradc_regulator_disable(void *data)
+ {
+ 	struct rockchip_saradc *info = data;
+@@ -483,16 +469,6 @@ static int rockchip_saradc_probe(struct
+ 		return ret;
+ 	}
+ 
+-	info->pclk = devm_clk_get(&pdev->dev, "apb_pclk");
+-	if (IS_ERR(info->pclk))
+-		return dev_err_probe(&pdev->dev, PTR_ERR(info->pclk),
+-				     "failed to get pclk\n");
+-
+-	info->clk = devm_clk_get(&pdev->dev, "saradc");
+-	if (IS_ERR(info->clk))
+-		return dev_err_probe(&pdev->dev, PTR_ERR(info->clk),
+-				     "failed to get adc clock\n");
+-
+ 	info->vref = devm_regulator_get(&pdev->dev, "vref");
+ 	if (IS_ERR(info->vref))
+ 		return dev_err_probe(&pdev->dev, PTR_ERR(info->vref),
+@@ -501,6 +477,16 @@ static int rockchip_saradc_probe(struct
+ 	if (info->reset)
+ 		rockchip_saradc_reset_controller(info->reset);
+ 
++	info->pclk = devm_clk_get_enabled(&pdev->dev, "apb_pclk");
++	if (IS_ERR(info->pclk))
++		return dev_err_probe(&pdev->dev, PTR_ERR(info->pclk),
++				     "failed to get pclk\n");
++
++	info->clk = devm_clk_get_enabled(&pdev->dev, "saradc");
++	if (IS_ERR(info->clk))
++		return dev_err_probe(&pdev->dev, PTR_ERR(info->clk),
++				     "failed to get adc clock\n");
++
+ 	/*
+ 	 * Use a default value for the converter clock.
+ 	 * This may become user-configurable in the future.
+@@ -530,32 +516,6 @@ static int rockchip_saradc_probe(struct
+ 
+ 	info->uv_vref = ret;
+ 
+-	ret = clk_prepare_enable(info->pclk);
+-	if (ret < 0) {
+-		dev_err(&pdev->dev, "failed to enable pclk\n");
+-		return ret;
+-	}
+-	ret = devm_add_action_or_reset(&pdev->dev,
+-				       rockchip_saradc_pclk_disable, info);
+-	if (ret) {
+-		dev_err(&pdev->dev, "failed to register devm action, %d\n",
+-			ret);
+-		return ret;
+-	}
+-
+-	ret = clk_prepare_enable(info->clk);
+-	if (ret < 0) {
+-		dev_err(&pdev->dev, "failed to enable converter clock\n");
+-		return ret;
+-	}
+-	ret = devm_add_action_or_reset(&pdev->dev,
+-				       rockchip_saradc_clk_disable, info);
+-	if (ret) {
+-		dev_err(&pdev->dev, "failed to register devm action, %d\n",
+-			ret);
+-		return ret;
+-	}
+-
+ 	platform_set_drvdata(pdev, indio_dev);
+ 
+ 	indio_dev->name = dev_name(&pdev->dev);
+@@ -589,8 +549,6 @@ static int rockchip_saradc_suspend(struc
+ 	struct iio_dev *indio_dev = dev_get_drvdata(dev);
+ 	struct rockchip_saradc *info = iio_priv(indio_dev);
+ 
+-	clk_disable_unprepare(info->clk);
+-	clk_disable_unprepare(info->pclk);
+ 	regulator_disable(info->vref);
+ 
+ 	return 0;
+@@ -600,21 +558,8 @@ static int rockchip_saradc_resume(struct
+ {
+ 	struct iio_dev *indio_dev = dev_get_drvdata(dev);
+ 	struct rockchip_saradc *info = iio_priv(indio_dev);
+-	int ret;
+-
+-	ret = regulator_enable(info->vref);
+-	if (ret)
+-		return ret;
+-
+-	ret = clk_prepare_enable(info->pclk);
+-	if (ret)
+-		return ret;
+-
+-	ret = clk_prepare_enable(info->clk);
+-	if (ret)
+-		clk_disable_unprepare(info->pclk);
+ 
+-	return ret;
++	return regulator_enable(info->vref);
+ }
+ 
+ static DEFINE_SIMPLE_DEV_PM_OPS(rockchip_saradc_pm_ops,
diff --git a/target/linux/rockchip/patches-6.1/350-iio-adc-rockchip_saradc-Use-of_device_get_match_data.patch b/target/linux/rockchip/patches-6.1/350-iio-adc-rockchip_saradc-Use-of_device_get_match_data.patch
new file mode 100644
index 0000000000..e8c2cf658b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/350-iio-adc-rockchip_saradc-Use-of_device_get_match_data.patch
@@ -0,0 +1,46 @@
+From 3e7fa640c0b0d42dddd9d83696f320d36736772c Mon Sep 17 00:00:00 2001
+From: Shreeya Patel <shreeya.patel@collabora.com>
+Date: Wed, 17 May 2023 04:30:47 +0530
+Subject: [PATCH 350/383] iio: adc: rockchip_saradc: Use
+ of_device_get_match_data
+
+Use of_device_get_match_data() to simplify the code.
+
+Signed-off-by: Shreeya Patel <shreeya.patel@collabora.com>
+Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/iio/adc/rockchip_saradc.c | 8 ++++----
+ 1 file changed, 4 insertions(+), 4 deletions(-)
+
+--- a/drivers/iio/adc/rockchip_saradc.c
++++ b/drivers/iio/adc/rockchip_saradc.c
+@@ -405,10 +405,10 @@ static void rockchip_saradc_regulator_un
+ 
+ static int rockchip_saradc_probe(struct platform_device *pdev)
+ {
++	const struct rockchip_saradc_data *match_data;
+ 	struct rockchip_saradc *info = NULL;
+ 	struct device_node *np = pdev->dev.of_node;
+ 	struct iio_dev *indio_dev = NULL;
+-	const struct of_device_id *match;
+ 	int ret;
+ 	int irq;
+ 
+@@ -422,13 +422,13 @@ static int rockchip_saradc_probe(struct
+ 	}
+ 	info = iio_priv(indio_dev);
+ 
+-	match = of_match_device(rockchip_saradc_match, &pdev->dev);
+-	if (!match) {
++	match_data = of_device_get_match_data(&pdev->dev);
++	if (!match_data) {
+ 		dev_err(&pdev->dev, "failed to match device\n");
+ 		return -ENODEV;
+ 	}
+ 
+-	info->data = match->data;
++	info->data = match_data;
+ 
+ 	/* Sanity check for possible later IP variants with more channels */
+ 	if (info->data->num_channels > SARADC_MAX_CHANNELS) {
diff --git a/target/linux/rockchip/patches-6.1/351-iio-adc-rockchip_saradc-Match-alignment-with-open-pa.patch b/target/linux/rockchip/patches-6.1/351-iio-adc-rockchip_saradc-Match-alignment-with-open-pa.patch
new file mode 100644
index 0000000000..14deda1404
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/351-iio-adc-rockchip_saradc-Match-alignment-with-open-pa.patch
@@ -0,0 +1,37 @@
+From e6818f0bc824d568f2de549dff6074125315dde2 Mon Sep 17 00:00:00 2001
+From: Shreeya Patel <shreeya.patel@collabora.com>
+Date: Wed, 17 May 2023 04:30:48 +0530
+Subject: [PATCH 351/383] iio: adc: rockchip_saradc: Match alignment with open
+ parenthesis
+
+Match alignment with open parenthesis for improving the code
+readability.
+
+Signed-off-by: Shreeya Patel <shreeya.patel@collabora.com>
+Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/iio/adc/rockchip_saradc.c | 5 ++---
+ 1 file changed, 2 insertions(+), 3 deletions(-)
+
+--- a/drivers/iio/adc/rockchip_saradc.c
++++ b/drivers/iio/adc/rockchip_saradc.c
+@@ -141,7 +141,7 @@ static void rockchip_saradc_power_down(s
+ }
+ 
+ static int rockchip_saradc_conversion(struct rockchip_saradc *info,
+-				   struct iio_chan_spec const *chan)
++				      struct iio_chan_spec const *chan)
+ {
+ 	reinit_completion(&info->completion);
+ 
+@@ -384,8 +384,7 @@ out:
+ }
+ 
+ static int rockchip_saradc_volt_notify(struct notifier_block *nb,
+-						   unsigned long event,
+-						   void *data)
++				       unsigned long event, void *data)
+ {
+ 	struct rockchip_saradc *info =
+ 			container_of(nb, struct rockchip_saradc, nb);
diff --git a/target/linux/rockchip/patches-6.1/352-iio-adc-rockchip_saradc-Use-dev_err_probe.patch b/target/linux/rockchip/patches-6.1/352-iio-adc-rockchip_saradc-Use-dev_err_probe.patch
new file mode 100644
index 0000000000..0e481c21e1
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/352-iio-adc-rockchip_saradc-Use-dev_err_probe.patch
@@ -0,0 +1,87 @@
+From 3282a5fc907d785598107ceb558486eeddf22991 Mon Sep 17 00:00:00 2001
+From: Shreeya Patel <shreeya.patel@collabora.com>
+Date: Wed, 17 May 2023 04:30:49 +0530
+Subject: [PATCH 352/383] iio: adc: rockchip_saradc: Use dev_err_probe
+
+Use dev_err_probe instead of dev_err in probe function,
+which simplifies code a little bit and prints the error
+code.
+
+Signed-off-by: Shreeya Patel <shreeya.patel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/iio/adc/rockchip_saradc.c | 45 ++++++++++++++-----------------
+ 1 file changed, 20 insertions(+), 25 deletions(-)
+
+--- a/drivers/iio/adc/rockchip_saradc.c
++++ b/drivers/iio/adc/rockchip_saradc.c
+@@ -415,25 +415,23 @@ static int rockchip_saradc_probe(struct
+ 		return -ENODEV;
+ 
+ 	indio_dev = devm_iio_device_alloc(&pdev->dev, sizeof(*info));
+-	if (!indio_dev) {
+-		dev_err(&pdev->dev, "failed allocating iio device\n");
+-		return -ENOMEM;
+-	}
++	if (!indio_dev)
++		return dev_err_probe(&pdev->dev, -ENOMEM,
++				     "failed allocating iio device\n");
++
+ 	info = iio_priv(indio_dev);
+ 
+ 	match_data = of_device_get_match_data(&pdev->dev);
+-	if (!match_data) {
+-		dev_err(&pdev->dev, "failed to match device\n");
+-		return -ENODEV;
+-	}
++	if (!match_data)
++		return dev_err_probe(&pdev->dev, -ENODEV,
++				     "failed to match device\n");
+ 
+ 	info->data = match_data;
+ 
+ 	/* Sanity check for possible later IP variants with more channels */
+-	if (info->data->num_channels > SARADC_MAX_CHANNELS) {
+-		dev_err(&pdev->dev, "max channels exceeded");
+-		return -EINVAL;
+-	}
++	if (info->data->num_channels > SARADC_MAX_CHANNELS)
++		return dev_err_probe(&pdev->dev, -EINVAL,
++				     "max channels exceeded");
+ 
+ 	info->regs = devm_platform_ioremap_resource(pdev, 0);
+ 	if (IS_ERR(info->regs))
+@@ -491,23 +489,20 @@ static int rockchip_saradc_probe(struct
+ 	 * This may become user-configurable in the future.
+ 	 */
+ 	ret = clk_set_rate(info->clk, info->data->clk_rate);
+-	if (ret < 0) {
+-		dev_err(&pdev->dev, "failed to set adc clk rate, %d\n", ret);
+-		return ret;
+-	}
++	if (ret < 0)
++		return dev_err_probe(&pdev->dev, ret,
++				     "failed to set adc clk rate\n");
+ 
+ 	ret = regulator_enable(info->vref);
+-	if (ret < 0) {
+-		dev_err(&pdev->dev, "failed to enable vref regulator\n");
+-		return ret;
+-	}
++	if (ret < 0)
++		return dev_err_probe(&pdev->dev, ret,
++				     "failed to enable vref regulator\n");
++
+ 	ret = devm_add_action_or_reset(&pdev->dev,
+ 				       rockchip_saradc_regulator_disable, info);
+-	if (ret) {
+-		dev_err(&pdev->dev, "failed to register devm action, %d\n",
+-			ret);
+-		return ret;
+-	}
++	if (ret)
++		return dev_err_probe(&pdev->dev, ret,
++				     "failed to register devm action\n");
+ 
+ 	ret = regulator_get_voltage(info->vref);
+ 	if (ret < 0)
diff --git a/target/linux/rockchip/patches-6.1/353-arm64-dts-rockchip-Add-DT-node-for-ADC-support-in-RK.patch b/target/linux/rockchip/patches-6.1/353-arm64-dts-rockchip-Add-DT-node-for-ADC-support-in-RK.patch
new file mode 100644
index 0000000000..a7dac0c06e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/353-arm64-dts-rockchip-Add-DT-node-for-ADC-support-in-RK.patch
@@ -0,0 +1,36 @@
+From 8b429e32286bce5a132624ee2bab1a102ffff2a3 Mon Sep 17 00:00:00 2001
+From: Shreeya Patel <shreeya.patel@collabora.com>
+Date: Wed, 17 May 2023 04:30:50 +0530
+Subject: [PATCH 353/383] arm64: dts: rockchip: Add DT node for ADC support in
+ RK3588
+
+Add DT node for ADC support in RK3588.
+
+Signed-off-by: Shreeya Patel <shreeya.patel@collabora.com>
+Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -2791,6 +2791,18 @@
+ 		status = "disabled";
+ 	};
+ 
++	saradc: saradc@fec10000 {
++		compatible = "rockchip,rk3588-saradc";
++		reg = <0x0 0xfec10000 0x0 0x10000>;
++		interrupts = <GIC_SPI 398 IRQ_TYPE_LEVEL_HIGH 0>;
++		#io-channel-cells = <1>;
++		clocks = <&cru CLK_SARADC>, <&cru PCLK_SARADC>;
++		clock-names = "saradc", "apb_pclk";
++		resets = <&cru SRST_P_SARADC>;
++		reset-names = "saradc-apb";
++		status = "disabled";
++	};
++
+ 	system_sram2: sram@ff001000 {
+ 		compatible = "mmio-sram";
+ 		reg = <0x0 0xff001000 0x0 0xef000>;
diff --git a/target/linux/rockchip/patches-6.1/354-clk-divider-Fix-handling-of-rates-UINT_MAX.patch b/target/linux/rockchip/patches-6.1/354-clk-divider-Fix-handling-of-rates-UINT_MAX.patch
new file mode 100644
index 0000000000..d31836c148
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/354-clk-divider-Fix-handling-of-rates-UINT_MAX.patch
@@ -0,0 +1,44 @@
+From 62c5be96675c0c9407575910c4ecc9ab23223366 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 18 May 2023 05:19:48 +0200
+Subject: [PATCH 354/383] clk: divider: Fix handling of rates > UINT_MAX
+
+Fix handling of rates that exceed UINT_MAX (4.29 GHz) to do something
+reasonably sensible. Right now asking for UINT_MAX+1 will effectively
+return the smallest rate available instead of the biggest one.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/clk-divider.c | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+--- a/drivers/clk/clk-divider.c
++++ b/drivers/clk/clk-divider.c
+@@ -220,7 +220,7 @@ static int _div_round_up(const struct cl
+ 			 unsigned long parent_rate, unsigned long rate,
+ 			 unsigned long flags)
+ {
+-	int div = DIV_ROUND_UP_ULL((u64)parent_rate, rate);
++	int div = DIV_ROUND_UP_ULL((u64)parent_rate, rate > UINT_MAX ? UINT_MAX : rate);
+ 
+ 	if (flags & CLK_DIVIDER_POWER_OF_TWO)
+ 		div = __roundup_pow_of_two(div);
+@@ -237,7 +237,7 @@ static int _div_round_closest(const stru
+ 	int up, down;
+ 	unsigned long up_rate, down_rate;
+ 
+-	up = DIV_ROUND_UP_ULL((u64)parent_rate, rate);
++	up = DIV_ROUND_UP_ULL((u64)parent_rate, rate > UINT_MAX ? UINT_MAX : rate);
+ 	down = parent_rate / rate;
+ 
+ 	if (flags & CLK_DIVIDER_POWER_OF_TWO) {
+@@ -473,7 +473,7 @@ int divider_get_val(unsigned long rate,
+ {
+ 	unsigned int div, value;
+ 
+-	div = DIV_ROUND_UP_ULL((u64)parent_rate, rate);
++	div = DIV_ROUND_UP_ULL((u64)parent_rate, rate > UINT_MAX ? UINT_MAX : rate);
+ 
+ 	if (!_is_valid_div(table, div, flags))
+ 		return -EINVAL;
diff --git a/target/linux/rockchip/patches-6.1/355-clk-composite-Fix-handling-of-high-clock-rates.patch b/target/linux/rockchip/patches-6.1/355-clk-composite-Fix-handling-of-high-clock-rates.patch
new file mode 100644
index 0000000000..bbeabf2fde
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/355-clk-composite-Fix-handling-of-high-clock-rates.patch
@@ -0,0 +1,46 @@
+From 8c754b5fb21d7987f1ca55bcaecc506ef14b2f7d Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 18 May 2023 05:28:17 +0200
+Subject: [PATCH 355/383] clk: composite: Fix handling of high clock rates
+
+If clk_round_rate(clk, ULONG_MAX) is called to acquire the highest
+available clock rate and the highest available clock rate is smaller
+than ULONG_MAX/2, the result of "req->rate - tmp_req.rate" has the
+highest bit set. Since the input to abs() is signed, that means the
+number will be miss-interpreted.
+
+This results in the logic being reverted and the worst choice being
+selected as the best one. For example this has been observed on RK3588
+for the eMMC clock:
+
+GPLL:   abs(18446744073709551615 - 1188000000) = 1188000001
+CPLL:   abs(18446744073709551615 - 1500000000) = 1500000001
+XIN24M: abs(18446744073709551615 -   24000000) =   24000001
+
+With the updated logic any casting between signed and unsigned is
+avoided and the numbers look like this instead:
+
+GPLL:   18446744073709551615 - 1188000000 = 18446744072521551615
+CPLL:   18446744073709551615 - 1500000000 = 18446744072209551615
+XIN24M: 18446744073709551615 -   24000000 = 18446744073685551615
+
+As a result the parent with the highest acceptable rate is chosen
+instead of the parent clock with the lowest one.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ drivers/clk/clk-composite.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/clk/clk-composite.c
++++ b/drivers/clk/clk-composite.c
+@@ -119,7 +119,7 @@ static int clk_composite_determine_rate(
+ 			if (ret)
+ 				continue;
+ 
+-			rate_diff = abs(req->rate - tmp_req.rate);
++			rate_diff = req->rate > tmp_req.rate ? req->rate - tmp_req.rate : tmp_req.rate - req->rate;
+ 
+ 			if (!rate_diff || !req->best_parent_hw
+ 				       || best_rate_diff > rate_diff) {
diff --git a/target/linux/rockchip/patches-6.1/356-media-dt-bindings-media-rockchip-rga-add-rockchip-rk.patch b/target/linux/rockchip/patches-6.1/356-media-dt-bindings-media-rockchip-rga-add-rockchip-rk.patch
new file mode 100644
index 0000000000..eb22770465
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/356-media-dt-bindings-media-rockchip-rga-add-rockchip-rk.patch
@@ -0,0 +1,38 @@
+From 65ec9cb7675f429629ab444f68de1407d5e7874a Mon Sep 17 00:00:00 2001
+From: Michael Tretter <m.tretter@pengutronix.de>
+Date: Fri, 20 Jan 2023 10:14:21 +0100
+Subject: [PATCH 356/383] media: dt-bindings: media: rockchip-rga: add
+ rockchip,rk3568-rga
+
+Add a new compatible for the rk3568 Rockchip SoC, which also features an
+RGA, which is called RGA2 in the TRM Part2. It is the same core as used
+on the rk3288, which documents the same RGA2.
+
+Specify a new compatible for the rk3568 to be able to handle unknown
+SoC-specific differences in the driver.
+
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Michael Tretter <m.tretter@pengutronix.de>
+Reviewed-by: Ezequiel Garcia <ezequiel@vanguardiasur.com.ar>
+Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
+Acked-by: Nicolas Dufresne <nicolas.dufresne@collabora.com>
+Link: https://lore.kernel.org/r/20230119-rk3568-rga-v1-1-43d4d14365e6@pengutronix.de
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/media/rockchip-rga.yaml | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/media/rockchip-rga.yaml
++++ b/Documentation/devicetree/bindings/media/rockchip-rga.yaml
+@@ -21,7 +21,9 @@ properties:
+       - const: rockchip,rk3288-rga
+       - const: rockchip,rk3399-rga
+       - items:
+-          - const: rockchip,rk3228-rga
++          - enum:
++              - rockchip,rk3228-rga
++              - rockchip,rk3568-rga
+           - const: rockchip,rk3288-rga
+ 
+   reg:
diff --git a/target/linux/rockchip/patches-6.1/357-arm64-dts-rockchip-Add-RGA2-support-to-rk356x.patch b/target/linux/rockchip/patches-6.1/357-arm64-dts-rockchip-Add-RGA2-support-to-rk356x.patch
new file mode 100644
index 0000000000..e8d933b92b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/357-arm64-dts-rockchip-Add-RGA2-support-to-rk356x.patch
@@ -0,0 +1,38 @@
+From d521e2e3eaae676036d9d0d72166a54a89d837b8 Mon Sep 17 00:00:00 2001
+From: Michael Tretter <m.tretter@pengutronix.de>
+Date: Fri, 20 Jan 2023 10:14:22 +0100
+Subject: [PATCH 357/383] arm64: dts: rockchip: Add RGA2 support to rk356x
+
+The rk3568 also features a RGA2 block. Add the necessary device tree
+node.
+
+Acked-by: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Signed-off-by: Michael Tretter <m.tretter@pengutronix.de>
+Acked-by: Nicolas Dufresne <nicolas.dufresne@collabora.com>
+Link: https://lore.kernel.org/r/20230119-rk3568-rga-v1-2-43d4d14365e6@pengutronix.de
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk356x.dtsi | 11 +++++++++++
+ 1 file changed, 11 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk356x.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk356x.dtsi
+@@ -613,6 +613,17 @@
+ 		#iommu-cells = <0>;
+ 	};
+ 
++	rga: rga@fdeb0000 {
++		compatible = "rockchip,rk3568-rga", "rockchip,rk3288-rga";
++		reg = <0x0 0xfdeb0000 0x0 0x180>;
++		interrupts = <GIC_SPI 90 IRQ_TYPE_LEVEL_HIGH>;
++		clocks = <&cru ACLK_RGA>, <&cru HCLK_RGA>, <&cru CLK_RGA_CORE>;
++		clock-names = "aclk", "hclk", "sclk";
++		resets = <&cru SRST_RGA_CORE>, <&cru SRST_A_RGA>, <&cru SRST_H_RGA>;
++		reset-names = "core", "axi", "ahb";
++		power-domains = <&power RK3568_PD_RGA>;
++	};
++
+ 	vepu: video-codec@fdee0000 {
+ 		compatible = "rockchip,rk3568-vepu";
+ 		reg = <0x0 0xfdee0000 0x0 0x800>;
diff --git a/target/linux/rockchip/patches-6.1/358-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch b/target/linux/rockchip/patches-6.1/358-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch
new file mode 100644
index 0000000000..8b6d36497c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/358-dt-bindings-arm-rockchip-Add-Edgeble-Neural-Compute-.patch
@@ -0,0 +1,41 @@
+From d18b4cbe5f50da216461f74474344d7d4ae427fa Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@edgeble.ai>
+Date: Tue, 16 May 2023 22:04:51 +0530
+Subject: [PATCH 358/383] dt-bindings: arm: rockchip: Add Edgeble Neural
+ Compute Module 6B
+
+Neural Compute Module 6B(Neu6B) is a 96boards SoM-CB compute module
+based on Rockchip RK3588J from Edgeble AI.
+
+Edgeble Neural Compute Module 6B(Neu6B) IO board is an industrial
+form factor evaluation board from Edgeble AI.
+
+Neu6B needs to mount on top of this IO board in order to create complete
+Edgeble Neural Compute Module 6B(Neu6B) IO platform.
+
+This patch add dt-bindings for Edgeble Neu6 Model B SoM based IO board.
+
+Signed-off-by: Jagan Teki <jagan@edgeble.ai>
+Acked-by: Conor Dooley <conor.dooley@microchip.com>
+Link: https://lore.kernel.org/r/20230516163454.997736-1-jagan@edgeble.ai
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -107,6 +107,12 @@ properties:
+           - const: edgeble,neural-compute-module-6a     # Edgeble Neural Compute Module 6A SoM
+           - const: rockchip,rk3588
+ 
++      - description: Edgeble Neural Compute Module 6(Neu6) Model B SoM based boards
++        items:
++          - const: edgeble,neural-compute-module-6b-io  # Edgeble Neural Compute Module 6B IO Board
++          - const: edgeble,neural-compute-module-6b     # Edgeble Neural Compute Module 6B SoM
++          - const: rockchip,rk3588
++
+       - description: Elgin RV1108 R1
+         items:
+           - const: elgin,rv1108-r1
diff --git a/target/linux/rockchip/patches-6.1/359-arm64-dts-rockchip-Add-Rockchip-RK3588J.patch b/target/linux/rockchip/patches-6.1/359-arm64-dts-rockchip-Add-Rockchip-RK3588J.patch
new file mode 100644
index 0000000000..6eec2bf6ab
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/359-arm64-dts-rockchip-Add-Rockchip-RK3588J.patch
@@ -0,0 +1,33 @@
+From c1a47d26199aa55b018c5bd4c6544db8dfec03f2 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@edgeble.ai>
+Date: Tue, 16 May 2023 22:04:52 +0530
+Subject: [PATCH 359/383] arm64: dts: rockchip: Add Rockchip RK3588J
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+Rockchip RK3588J is the industrial-grade version of RK3588 SoC and
+is operated with -40 °C to +85 °C temparature.
+
+Add rk3588j specific dtsi for adding rk3588j specific operating points
+and other changes to be add in future.
+
+Signed-off-by: Jagan Teki <jagan@edgeble.ai>
+Link: https://lore.kernel.org/r/20230516163454.997736-2-jagan@edgeble.ai
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588j.dtsi | 7 +++++++
+ 1 file changed, 7 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588j.dtsi
+
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588j.dtsi
+@@ -0,0 +1,7 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2022 Rockchip Electronics Co., Ltd.
++ *
++ */
++
++#include "rk3588.dtsi"
diff --git a/target/linux/rockchip/patches-6.1/360-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-B-S.patch b/target/linux/rockchip/patches-6.1/360-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-B-S.patch
new file mode 100644
index 0000000000..85b94515e5
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/360-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-B-S.patch
@@ -0,0 +1,68 @@
+From f5fa895e94f65e5918f00122dbba3624e3ec86e8 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@edgeble.ai>
+Date: Tue, 16 May 2023 22:04:53 +0530
+Subject: [PATCH 360/383] arm64: dts: rockchip: rk3588: Add Edgeble Neu6 Model
+ B SoM
+
+Neural Compute Module 6B(Neu6B) is a 96boards SoM-CB compute module
+based on Rockchip RK3588J from Edgeble AI.
+
+General features:
+- Rockchip RK3588J
+- up to 32GB LPDDR4x
+- up to 128GB eMMC
+- 2x MIPI CSI2 FPC
+
+On module WiFi6/BT5 is available in the following Neu6 variants.
+
+Neu6B needs to mount on top of associated Edgeble Neu6B IO boards for
+creating complete platform solutions.
+
+Enable eMMC for now to boot Linux successfully.
+
+Add support for Edgeble Neu6 Model B SoM.
+
+Signed-off-by: Jagan Teki <jagan@edgeble.ai>
+Link: https://lore.kernel.org/r/20230516163454.997736-3-jagan@edgeble.ai
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../dts/rockchip/rk3588-edgeble-neu6b.dtsi    | 32 +++++++++++++++++++
+ 1 file changed, 32 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588-edgeble-neu6b.dtsi
+
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588-edgeble-neu6b.dtsi
+@@ -0,0 +1,32 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2023 Edgeble AI Technologies Pvt. Ltd.
++ */
++
++/ {
++	compatible = "edgeble,neural-compute-module-6b", "rockchip,rk3588";
++
++	aliases {
++		mmc0 = &sdhci;
++	};
++
++	vcc12v_dcin: vcc12v-dcin-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc12v_dcin";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <12000000>;
++		regulator-max-microvolt = <12000000>;
++	};
++};
++
++&sdhci {
++	bus-width = <8>;
++	no-sdio;
++	no-sd;
++	non-removable;
++	max-frequency = <200000000>;
++	mmc-hs400-1_8v;
++	mmc-hs400-enhanced-strobe;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/361-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-B-I.patch b/target/linux/rockchip/patches-6.1/361-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-B-I.patch
new file mode 100644
index 0000000000..6e787be5a0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/361-arm64-dts-rockchip-rk3588-Add-Edgeble-Neu6-Model-B-I.patch
@@ -0,0 +1,88 @@
+From 73aa3caa93f28147d9ac3217224279b60d988485 Mon Sep 17 00:00:00 2001
+From: Jagan Teki <jagan@edgeble.ai>
+Date: Tue, 16 May 2023 22:04:54 +0530
+Subject: [PATCH 361/383] arm64: dts: rockchip: rk3588: Add Edgeble Neu6 Model
+ B IO
+
+Neural Compute Module 6B(Neu6B) IO board is an industrial form factor
+ready-to-use IO board from Edgeble AI.
+
+IO board offers plenty of peripherals and connectivity options and
+this patch enables basic eMMC and UART which is enough to successfully
+boot Linux.
+
+General features:
+- microSD slot
+- 1x HDMI Out
+- 1x HDMI In
+- 2x DP
+- 1x eDP
+- 2x MIPI DSI connector
+- 4x MIPI CSI2 connector
+- 2x USB Host
+- 2x USB 3.0 OTG/Host
+- 1x SATA
+- 1x 2.5Gbps Ethernet
+- 1x 4G/5G mini PCIe
+- 1x M.2 E-Key slot
+- 1x Onboard PoE
+- 1x RS485, RS232, CAN
+- 1x Audio, MIC port
+- RTC battery slot
+- 40-pin GPIO expansion
+
+Neu6B needs to mount on top of this IO board in order to create a
+complete Edgeble Neural Compute Module 6B(Neu6B) IO platform.
+
+Add support for Edgeble Neu6 Model B IO Board.
+
+Signed-off-by: Jagan Teki <jagan@edgeble.ai>
+Link: https://lore.kernel.org/r/20230516163454.997736-4-jagan@edgeble.ai
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |  1 +
+ .../dts/rockchip/rk3588-edgeble-neu6b-io.dts  | 27 +++++++++++++++++++
+ 2 files changed, 28 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588-edgeble-neu6b-io.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -96,6 +96,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-od
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-radxa-e25.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-rock-3a.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-edgeble-neu6a-io.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-edgeble-neu6b-io.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-v10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-rock-5b.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-khadas-edge2.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588-edgeble-neu6b-io.dts
+@@ -0,0 +1,27 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2023 Edgeble AI Technologies Pvt. Ltd.
++ */
++
++/dts-v1/;
++#include "rk3588j.dtsi"
++#include "rk3588-edgeble-neu6b.dtsi"
++
++/ {
++	model = "Edgeble Neu6B IO Board";
++	compatible = "edgeble,neural-compute-module-6b-io",
++		     "edgeble,neural-compute-module-6b", "rockchip,rk3588";
++
++	aliases {
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++};
++
++&uart2 {
++	pinctrl-0 = <&uart2m0_xfer>;
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/005-arm64-dts-rockchip-add-EEPROM-node-for-NanoPi-R4S.patch b/target/linux/rockchip/patches-6.1/362-arm64-dts-rockchip-add-EEPROM-node-for-NanoPi-R4S.patch
similarity index 78%
rename from target/linux/rockchip/patches-6.1/005-arm64-dts-rockchip-add-EEPROM-node-for-NanoPi-R4S.patch
rename to target/linux/rockchip/patches-6.1/362-arm64-dts-rockchip-add-EEPROM-node-for-NanoPi-R4S.patch
index 792028b292..7c996c495a 100644
--- a/target/linux/rockchip/patches-6.1/005-arm64-dts-rockchip-add-EEPROM-node-for-NanoPi-R4S.patch
+++ b/target/linux/rockchip/patches-6.1/362-arm64-dts-rockchip-add-EEPROM-node-for-NanoPi-R4S.patch
@@ -1,12 +1,13 @@
-From af20b3384e8723077cc6484160b0cf4e9be321de Mon Sep 17 00:00:00 2001
+From cb86d7d0389543eb04f79887cfc9e14d7cd3d549 Mon Sep 17 00:00:00 2001
 From: Tianling Shen <cnsztl@gmail.com>
 Date: Mon, 7 Jun 2021 15:45:37 +0800
-Subject: [PATCH] arm64: dts: rockchip: add EEPROM node for NanoPi R4S
+Subject: [PATCH 362/383] arm64: dts: rockchip: add EEPROM node for NanoPi R4S
 
 NanoPi R4S has a EEPROM attached to the 2nd I2C bus (U92), which
 stores the MAC address.
 
 Signed-off-by: Tianling Shen <cnsztl@gmail.com>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
  arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dts | 9 +++++++++
  1 file changed, 9 insertions(+)
diff --git a/target/linux/rockchip/patches-6.1/100-rockchip-use-system-LED-for-OpenWrt.patch b/target/linux/rockchip/patches-6.1/363-rockchip-use-system-LED-for-OpenWrt.patch
similarity index 57%
rename from target/linux/rockchip/patches-6.1/100-rockchip-use-system-LED-for-OpenWrt.patch
rename to target/linux/rockchip/patches-6.1/363-rockchip-use-system-LED-for-OpenWrt.patch
index 01009c5eb8..50ad260e21 100644
--- a/target/linux/rockchip/patches-6.1/100-rockchip-use-system-LED-for-OpenWrt.patch
+++ b/target/linux/rockchip/patches-6.1/363-rockchip-use-system-LED-for-OpenWrt.patch
@@ -1,7 +1,7 @@
-From 6731d2c9039fbe1ecf21915eab3acee0a999508a Mon Sep 17 00:00:00 2001
+From dd1dfd48c44d5d6228d3a17a4a6c682c952dda15 Mon Sep 17 00:00:00 2001
 From: David Bauer <mail@david-bauer.net>
 Date: Fri, 10 Jul 2020 21:38:20 +0200
-Subject: [PATCH] rockchip: use system LED for OpenWrt
+Subject: [PATCH 363/383] rockchip: use system LED for OpenWrt
 
 Use the SYS LED on the casing for showing system status.
 
@@ -9,9 +9,11 @@ This patch is kept separate from the NanoPi R2S support patch, as i plan
 on submitting the device support upstream.
 
 Signed-off-by: David Bauer <mail@david-bauer.net>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
- arch/arm64/boot/dts/rockchip/rk3328-nanopi-r2s.dts | 9 ++++++++-
- 1 file changed, 8 insertions(+), 1 deletion(-)
+ arch/arm64/boot/dts/rockchip/rk3328-nanopi-r2s.dts | 5 +++++
+ arch/arm64/boot/dts/rockchip/rk3328-roc-cc.dts     | 5 +++++
+ 2 files changed, 10 insertions(+)
 
 --- a/arch/arm64/boot/dts/rockchip/rk3328-nanopi-r2s.dts
 +++ b/arch/arm64/boot/dts/rockchip/rk3328-nanopi-r2s.dts
@@ -27,28 +29,6 @@ Signed-off-by: David Bauer <mail@david-bauer.net>
  	};
  
  	chosen {
-@@ -49,18 +54,18 @@
- 
- 		lan_led: led-0 {
- 			gpios = <&gpio2 RK_PB7 GPIO_ACTIVE_HIGH>;
--			label = "nanopi-r2s:green:lan";
-+			label = "green:lan";
- 		};
- 
- 		sys_led: led-1 {
- 			gpios = <&gpio0 RK_PA2 GPIO_ACTIVE_HIGH>;
--			label = "nanopi-r2s:red:sys";
-+			label = "red:sys";
- 			default-state = "on";
- 		};
- 
- 		wan_led: led-2 {
- 			gpios = <&gpio2 RK_PC2 GPIO_ACTIVE_HIGH>;
--			label = "nanopi-r2s:green:wan";
-+			label = "green:wan";
- 		};
- 	};
- 
 --- a/arch/arm64/boot/dts/rockchip/rk3328-roc-cc.dts
 +++ b/arch/arm64/boot/dts/rockchip/rk3328-roc-cc.dts
 @@ -13,6 +13,11 @@
diff --git a/target/linux/rockchip/patches-6.1/103-arm64-rockchip-add-OF-node-for-USB-eth-on-NanoPi-R2S.patch b/target/linux/rockchip/patches-6.1/364-arm64-rockchip-add-OF-node-for-USB-eth-on-NanoPi-R2S.patch
similarity index 67%
rename from target/linux/rockchip/patches-6.1/103-arm64-rockchip-add-OF-node-for-USB-eth-on-NanoPi-R2S.patch
rename to target/linux/rockchip/patches-6.1/364-arm64-rockchip-add-OF-node-for-USB-eth-on-NanoPi-R2S.patch
index 2221077c97..07ae46c855 100644
--- a/target/linux/rockchip/patches-6.1/103-arm64-rockchip-add-OF-node-for-USB-eth-on-NanoPi-R2S.patch
+++ b/target/linux/rockchip/patches-6.1/364-arm64-rockchip-add-OF-node-for-USB-eth-on-NanoPi-R2S.patch
@@ -1,16 +1,18 @@
-From 2795c8b31a686bdb8338f9404d18ef7a154f0d75 Mon Sep 17 00:00:00 2001
+From c7e0d368500083cae1ec84039ceabd308929509a Mon Sep 17 00:00:00 2001
 From: David Bauer <mail@david-bauer.net>
 Date: Sun, 26 Jul 2020 13:32:59 +0200
-Subject: [PATCH] arm64: rockchip: add OF node for USB eth on NanoPi R2S
+Subject: [PATCH 364/383] arm64: rockchip: add OF node for USB eth on NanoPi
+ R2S
 
 This adds the OF node for the USB3 ethernet adapter on the FriendlyARM
 NanoPi R2S. Add the correct value for the RTL8153 LED configuration
 register to match the blink behavior of the other port on the device.
 
 Signed-off-by: David Bauer <mail@david-bauer.net>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
 ---
- arch/arm64/boot/dts/rockchip/rk3328-nanopi-r2s.dts | 7 +++++++
- 1 file changed, 1 insertions(+)
+ arch/arm64/boot/dts/rockchip/rk3328-nanopi-r2s.dts | 1 +
+ 1 file changed, 1 insertion(+)
 
 --- a/arch/arm64/boot/dts/rockchip/rk3328-nanopi-r2s.dts
 +++ b/arch/arm64/boot/dts/rockchip/rk3328-nanopi-r2s.dts
diff --git a/target/linux/rockchip/patches-6.1/105-nanopi-r4s-sd-signalling.patch b/target/linux/rockchip/patches-6.1/365-arm64-dts-rockchip-disable-UHS-modes-for-NanoPi-R4S.patch
similarity index 67%
rename from target/linux/rockchip/patches-6.1/105-nanopi-r4s-sd-signalling.patch
rename to target/linux/rockchip/patches-6.1/365-arm64-dts-rockchip-disable-UHS-modes-for-NanoPi-R4S.patch
index 856970738a..d80d0391ac 100644
--- a/target/linux/rockchip/patches-6.1/105-nanopi-r4s-sd-signalling.patch
+++ b/target/linux/rockchip/patches-6.1/365-arm64-dts-rockchip-disable-UHS-modes-for-NanoPi-R4S.patch
@@ -1,5 +1,8 @@
+From cc168436ddb0538102c153463130f65c42ff667a Mon Sep 17 00:00:00 2001
 From: David Bauer <mail@david-bauer.net>
-Subject: arm64: dts: rockchip: disable UHS modes for NanoPi R4S
+Date: Sat, 27 May 2023 18:35:14 -0400
+Subject: [PATCH 365/383] arm64: dts: rockchip: disable UHS modes for NanoPi
+ R4S
 
 The NanoPi R4S leaves the SD card in 1.8V signalling when rebooting
 while U-Boot requires the card to be in 3.3V mode.
@@ -9,17 +12,11 @@ mode. This reduces transfer speeds but ensures a reboot whether from
 userspace or following a kernel panic is always working.
 
 Signed-off-by: David Bauer <mail@david-bauer.net>
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dts | 5 +++++
+ 1 file changed, 5 insertions(+)
 
---- a/arch/arm64/boot/dts/rockchip/rk3328-roc-cc.dts
-+++ b/arch/arm64/boot/dts/rockchip/rk3328-roc-cc.dts
-@@ -335,7 +335,6 @@
- 	sd-uhs-sdr12;
- 	sd-uhs-sdr25;
- 	sd-uhs-sdr50;
--	sd-uhs-sdr104;
- 	vmmc-supply = <&vcc_sd>;
- 	vqmmc-supply = <&vcc_sdio>;
- 	status = "okay";
 --- a/arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dts
 +++ b/arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dts
 @@ -121,6 +121,11 @@
diff --git a/target/linux/rockchip/patches-6.1/366-rockchip-rk3328-add-support-for-FriendlyARM-NanoPi-N.patch b/target/linux/rockchip/patches-6.1/366-rockchip-rk3328-add-support-for-FriendlyARM-NanoPi-N.patch
new file mode 100644
index 0000000000..ad23d552f4
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/366-rockchip-rk3328-add-support-for-FriendlyARM-NanoPi-N.patch
@@ -0,0 +1,398 @@
+From a86cf14768f9cebd8cf4816d2fdbfcde2bc7a7cd Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Wed, 12 May 2021 13:04:20 -0400
+Subject: [PATCH 366/383] rockchip: rk3328: add support for FriendlyARM NanoPi
+ NEO3
+
+This patch adds support for FriendlyARM NanoPi NEO3
+
+Soc:      RockChip RK3328
+RAM:      1GB/2GB DDR4
+LAN:      10/100/1000M Ethernet with unique MAC
+USB Host: 1x USB3.0 Type A and 2x USB2.0 on 2.54mm pin header
+MicroSD:  x 1 for system boot and storage
+LED:      Power LED x 1, System LED x 1
+Key:      User Button x 1
+Fan:      2 Pin JST ZH 1.5mm Connector for 5V Fan
+GPIO:     26 pin-header, include I2C, UART, SPI, I2S, GPIO
+Power:    5V/1A, via Type-C or GPIO
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../boot/dts/rockchip/rk3328-nanopi-neo3.dts  | 359 ++++++++++++++++++
+ 2 files changed, 360 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3328-nanopi-neo3.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -16,6 +16,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-a1
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-evb.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2c.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2c-plus.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-neo3.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-nanopi-r2s.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-orangepi-r1-plus.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3328-orangepi-r1-plus-lts.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3328-nanopi-neo3.dts
+@@ -0,0 +1,359 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2020 David Bauer <mail@david-bauer.net>
++ */
++
++/dts-v1/;
++
++#include <dt-bindings/input/input.h>
++#include <dt-bindings/gpio/gpio.h>
++#include "rk3328.dtsi"
++
++/ {
++	model = "FriendlyElec NanoPi NEO3";
++	compatible = "friendlyarm,nanopi-neo3", "rockchip,rk3328";
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	gmac_clk: gmac-clock {
++		compatible = "fixed-clock";
++		clock-frequency = <125000000>;
++		clock-output-names = "gmac_clkin";
++		#clock-cells = <0>;
++	};
++
++	keys {
++		compatible = "gpio-keys";
++		pinctrl-0 = <&reset_button_pin>;
++		pinctrl-names = "default";
++
++		reset {
++			label = "reset";
++			gpios = <&gpio0 RK_PA0 GPIO_ACTIVE_LOW>;
++			linux,code = <KEY_RESTART>;
++			debounce-interval = <50>;
++		};
++	};
++
++	leds {
++		compatible = "gpio-leds";
++		pinctrl-0 = <&stat_led_pin>;
++		pinctrl-names = "default";
++
++		stat_led: led-1 {
++			gpios = <&gpio0 RK_PA2 GPIO_ACTIVE_HIGH>;
++			label = "nanopi-neo3:green:stat";
++		};
++	};
++
++	vcc_io_sdio: sdmmcio-regulator {
++		compatible = "regulator-gpio";
++		enable-active-high;
++		gpios = <&gpio1 RK_PD4 GPIO_ACTIVE_HIGH>;
++		pinctrl-0 = <&sdio_vcc_pin>;
++		pinctrl-names = "default";
++		regulator-name = "vcc_io_sdio";
++		regulator-always-on;
++		regulator-min-microvolt = <1800000>;
++		regulator-max-microvolt = <3300000>;
++		regulator-settling-time-us = <5000>;
++		regulator-type = "voltage";
++		startup-delay-us = <2000>;
++		states = <1800000 0x1>,
++			  <3300000 0x0>;
++		vin-supply = <&vcc_io_33>;
++	};
++
++	vcc_sd: sdmmc-regulator {
++		compatible = "regulator-fixed";
++		gpio = <&gpio0 RK_PD6 GPIO_ACTIVE_LOW>;
++		pinctrl-0 = <&sdmmc0m1_pin>;
++		pinctrl-names = "default";
++		regulator-name = "vcc_sd";
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc_io_33>;
++	};
++
++	vdd_5v: vdd-5v {
++		compatible = "regulator-fixed";
++		regulator-name = "vdd_5v";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++};
++
++&cpu0 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&cpu1 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&cpu2 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&cpu3 {
++	cpu-supply = <&vdd_arm>;
++};
++
++&display_subsystem {
++	status = "disabled";
++};
++
++&gmac2io {
++	assigned-clocks = <&cru SCLK_MAC2IO>, <&cru SCLK_MAC2IO_EXT>;
++	assigned-clock-parents = <&gmac_clk>, <&gmac_clk>;
++	clock_in_out = "input";
++	phy-handle = <&rtl8211e>;
++	phy-mode = "rgmii";
++	phy-supply = <&vcc_io_33>;
++	pinctrl-0 = <&rgmiim1_pins>;
++	pinctrl-names = "default";
++	rx_delay = <0x18>;
++	snps,aal;
++	tx_delay = <0x24>;
++	status = "okay";
++
++	mdio {
++		compatible = "snps,dwmac-mdio";
++		#address-cells = <1>;
++		#size-cells = <0>;
++
++		rtl8211e: ethernet-phy@1 {
++			reg = <1>;
++			pinctrl-0 = <&eth_phy_reset_pin>;
++			pinctrl-names = "default";
++			reset-assert-us = <10000>;
++			reset-deassert-us = <50000>;
++			reset-gpios = <&gpio1 RK_PC2 GPIO_ACTIVE_LOW>;
++		};
++	};
++};
++
++&i2c1 {
++	status = "okay";
++
++	rk805: pmic@18 {
++		compatible = "rockchip,rk805";
++		reg = <0x18>;
++		interrupt-parent = <&gpio1>;
++		interrupts = <24 IRQ_TYPE_LEVEL_LOW>;
++		#clock-cells = <1>;
++		clock-output-names = "xin32k", "rk805-clkout2";
++		gpio-controller;
++		#gpio-cells = <2>;
++		pinctrl-0 = <&pmic_int_l>;
++		pinctrl-names = "default";
++		rockchip,system-power-controller;
++		wakeup-source;
++
++		vcc1-supply = <&vdd_5v>;
++		vcc2-supply = <&vdd_5v>;
++		vcc3-supply = <&vdd_5v>;
++		vcc4-supply = <&vdd_5v>;
++		vcc5-supply = <&vcc_io_33>;
++		vcc6-supply = <&vdd_5v>;
++
++		regulators {
++			vdd_log: DCDC_REG1 {
++				regulator-name = "vdd_log";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <712500>;
++				regulator-max-microvolt = <1450000>;
++				regulator-ramp-delay = <12500>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1000000>;
++				};
++			};
++
++			vdd_arm: DCDC_REG2 {
++				regulator-name = "vdd_arm";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <712500>;
++				regulator-max-microvolt = <1450000>;
++				regulator-ramp-delay = <12500>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <950000>;
++				};
++			};
++
++			vcc_ddr: DCDC_REG3 {
++				regulator-name = "vcc_ddr";
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vcc_io_33: DCDC_REG4 {
++				regulator-name = "vcc_io_33";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcc_18: LDO_REG1 {
++				regulator-name = "vcc_18";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vcc18_emmc: LDO_REG2 {
++				regulator-name = "vcc18_emmc";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vdd_10: LDO_REG3 {
++				regulator-name = "vdd_10";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1000000>;
++				regulator-max-microvolt = <1000000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1000000>;
++				};
++			};
++		};
++	};
++};
++
++&io_domains {
++	pmuio-supply = <&vcc_io_33>;
++	vccio1-supply = <&vcc_io_33>;
++	vccio2-supply = <&vcc18_emmc>;
++	vccio3-supply = <&vcc_io_sdio>;
++	vccio4-supply = <&vcc_18>;
++	vccio5-supply = <&vcc_io_33>;
++	vccio6-supply = <&vcc_io_33>;
++	status = "okay";
++};
++
++&pinctrl {
++	button {
++		reset_button_pin: reset-button-pin {
++			rockchip,pins = <0 RK_PA0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	gmac2io {
++		eth_phy_reset_pin: eth-phy-reset-pin {
++			rockchip,pins = <1 RK_PC2 RK_FUNC_GPIO &pcfg_pull_down>;
++		};
++	};
++
++	leds {
++		stat_led_pin: stat-led-pin {
++			rockchip,pins = <0 RK_PA2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	pmic {
++		pmic_int_l: pmic-int-l {
++			rockchip,pins = <1 RK_PD0 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	sd {
++		sdio_vcc_pin: sdio-vcc-pin {
++			rockchip,pins = <1 RK_PD4 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++};
++
++&pwm2 {
++	status = "okay";
++};
++
++&sdmmc {
++	bus-width = <4>;
++	cap-sd-highspeed;
++	disable-wp;
++	pinctrl-0 = <&sdmmc0_clk>, <&sdmmc0_cmd>, <&sdmmc0_dectn>, <&sdmmc0_bus4>;
++	pinctrl-names = "default";
++	sd-uhs-sdr12;
++	sd-uhs-sdr25;
++	sd-uhs-sdr50;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc_sd>;
++	vqmmc-supply = <&vcc_io_sdio>;
++	status = "okay";
++};
++
++&tsadc {
++	rockchip,hw-tshut-mode = <0>;
++	rockchip,hw-tshut-polarity = <0>;
++	status = "okay";
++};
++
++&u2phy {
++	status = "okay";
++};
++
++&u2phy_host {
++	status = "okay";
++};
++
++&u2phy_otg {
++	status = "okay";
++};
++
++&uart2 {
++	status = "okay";
++};
++
++&usb20_otg {
++	status = "okay";
++	dr_mode = "host";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++&usbdrd3 {
++	dr_mode = "host";
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/367-dts-rockchip-fix-rock3-a.patch b/target/linux/rockchip/patches-6.1/367-dts-rockchip-fix-rock3-a.patch
new file mode 100644
index 0000000000..95660b5144
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/367-dts-rockchip-fix-rock3-a.patch
@@ -0,0 +1,110 @@
+From ca9300809c0bea2985dd18231b6882ef61929135 Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Sat, 27 May 2023 18:48:01 -0400
+Subject: [PATCH 367/383] dts: rockchip: fix rock3 a
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3568-rock-3a.dts      | 35 +++++++++----------
+ 1 file changed, 17 insertions(+), 18 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-rock-3a.dts
+@@ -32,13 +32,6 @@
+ 		};
+ 	};
+ 
+-	gmac1_clkin: external-gmac1-clock {
+-		compatible = "fixed-clock";
+-		clock-frequency = <125000000>;
+-		clock-output-names = "gmac1_clkin";
+-		#clock-cells = <0>;
+-	};
+-
+ 	leds {
+ 		compatible = "gpio-leds";
+ 
+@@ -256,18 +249,25 @@
+ 
+ &gmac1 {
+ 	assigned-clocks = <&cru SCLK_GMAC1_RX_TX>, <&cru SCLK_GMAC1>;
+-	assigned-clock-parents = <&cru SCLK_GMAC1_RGMII_SPEED>, <&gmac1_clkin>;
+-	clock_in_out = "input";
++	assigned-clock-parents = <&cru SCLK_GMAC1_RGMII_SPEED>, <&cru CLK_MAC1_2TOP>;
++	clock_in_out = "output";
+ 	phy-handle = <&rgmii_phy1>;
+-	phy-mode = "rgmii-id";
+-	phy-supply = <&vcc_3v3>;
++	phy-mode = "rgmii";
+ 	pinctrl-names = "default";
+ 	pinctrl-0 = <&gmac1m1_miim
+ 		     &gmac1m1_tx_bus2
+ 		     &gmac1m1_rx_bus2
+ 		     &gmac1m1_rgmii_clk
+-		     &gmac1m1_clkinout
+ 		     &gmac1m1_rgmii_bus>;
++
++	snps,reset-gpio = <&gpio3 RK_PB0 GPIO_ACTIVE_LOW>;
++	snps,reset-active-low;
++	/* Reset time is 20ms, 100ms for rtl8211f */
++	snps,reset-delays-us = <0 20000 100000>;
++
++	tx_delay = <0x3c>;
++	rx_delay = <0x2f>;
++
+ 	status = "okay";
+ };
+ 
+@@ -413,6 +413,7 @@
+ 
+ 			vdda0v9_image: LDO_REG1 {
+ 				regulator-name = "vdda0v9_image";
++				regulator-always-on;
+ 				regulator-min-microvolt = <900000>;
+ 				regulator-max-microvolt = <900000>;
+ 
+@@ -449,6 +450,7 @@
+ 			vccio_acodec: LDO_REG4 {
+ 				regulator-name = "vccio_acodec";
+ 				regulator-always-on;
++				regulator-boot-on;
+ 				regulator-min-microvolt = <3300000>;
+ 				regulator-max-microvolt = <3300000>;
+ 
+@@ -507,6 +509,7 @@
+ 
+ 			vcca1v8_image: LDO_REG9 {
+ 				regulator-name = "vcca1v8_image";
++				regulator-always-on;
+ 				regulator-min-microvolt = <1800000>;
+ 				regulator-max-microvolt = <1800000>;
+ 
+@@ -527,6 +530,7 @@
+ 
+ 			vcc3v3_sd: SWITCH_REG2 {
+ 				regulator-name = "vcc3v3_sd";
++				regulator-always-on;
+ 
+ 				regulator-state-mem {
+ 					regulator-off-in-suspend;
+@@ -588,11 +592,6 @@
+ 	rgmii_phy1: ethernet-phy@0 {
+ 		compatible = "ethernet-phy-ieee802.3-c22";
+ 		reg = <0x0>;
+-		pinctrl-names = "default";
+-		pinctrl-0 = <&eth_phy_rst>;
+-		reset-assert-us = <20000>;
+-		reset-deassert-us = <100000>;
+-		reset-gpios = <&gpio3 RK_PB0 GPIO_ACTIVE_LOW>;
+ 	};
+ };
+ 
+@@ -796,7 +795,7 @@
+ };
+ 
+ &usb_host0_xhci {
+-	extcon = <&usb2phy0>;
++	dr_mode = "host";
+ 	status = "okay";
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/368-dts-rockchip-fix-wifi-on-rock-pi-4b.patch b/target/linux/rockchip/patches-6.1/368-dts-rockchip-fix-wifi-on-rock-pi-4b.patch
new file mode 100644
index 0000000000..2915d548a3
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/368-dts-rockchip-fix-wifi-on-rock-pi-4b.patch
@@ -0,0 +1,21 @@
+From a86e557f9944b972b35329f2121277a2a6ef7dd3 Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Sat, 27 May 2023 18:49:41 -0400
+Subject: [PATCH 368/383] dts: rockchip: fix wifi on rock pi 4b
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3399-rock-pi-4b.dts | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-rock-pi-4b.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3399-rock-pi-4b.dts
+@@ -23,7 +23,7 @@
+ 		compatible = "brcm,bcm4329-fmac";
+ 		reg = <1>;
+ 		interrupt-parent = <&gpio0>;
+-		interrupts = <RK_PA3 IRQ_TYPE_LEVEL_HIGH>;
++		interrupts = <RK_PA3 IRQ_TYPE_LEVEL_LOW>;
+ 		interrupt-names = "host-wake";
+ 		pinctrl-names = "default";
+ 		pinctrl-0 = <&wifi_host_wake_l>;
diff --git a/target/linux/rockchip/patches-6.1/369-dts-rockchip-fix-nanopi-r5c-r5s.patch b/target/linux/rockchip/patches-6.1/369-dts-rockchip-fix-nanopi-r5c-r5s.patch
new file mode 100644
index 0000000000..26b45b4c1e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/369-dts-rockchip-fix-nanopi-r5c-r5s.patch
@@ -0,0 +1,233 @@
+From 72127f2c17ca963c368deabfa31261a5b6db9f2b Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Sat, 27 May 2023 18:51:15 -0400
+Subject: [PATCH 369/383] dts:rockchip: fix nanopi r5c/r5s
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ .../boot/dts/rockchip/rk3568-nanopi-r5c.dts   | 70 ++++++++++---------
+ .../boot/dts/rockchip/rk3568-nanopi-r5s.dts   | 17 ++---
+ 2 files changed, 41 insertions(+), 46 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5c.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5c.dts
+@@ -11,14 +11,14 @@
+ 
+ / {
+ 	model = "FriendlyElec NanoPi R5C";
+-	compatible = "friendlyarm,nanopi-r5c", "rockchip,rk3568";
++	compatible = "friendlyelec,nanopi-r5c", "rockchip,rk3568";
+ 
+-	gpio-keys {
++	gpio_keys: gpio-keys {
+ 		compatible = "gpio-keys";
+ 		pinctrl-names = "default";
+-		pinctrl-0 = <&reset_button_pin>;
++		pinctrl-0 = <&key1_pin>;
+ 
+-		button-reset {
++		key-reset {
+ 			debounce-interval = <50>;
+ 			gpios = <&gpio0 RK_PB7 GPIO_ACTIVE_LOW>;
+ 			label = "reset";
+@@ -28,39 +28,41 @@
+ 
+ 	gpio-leds {
+ 		compatible = "gpio-leds";
+-		pinctrl-names = "default";
+-		pinctrl-0 = <&lan_led_pin>, <&power_led_pin>, <&wan_led_pin>, <&wlan_led_pin>;
+-
+-		led-lan {
+-			color = <LED_COLOR_ID_GREEN>;
+-			function = LED_FUNCTION_LAN;
+-			gpios = <&gpio3 RK_PA3 GPIO_ACTIVE_HIGH>;
+-		};
+ 
+-		power_led: led-power {
+-			color = <LED_COLOR_ID_RED>;
+-			function = LED_FUNCTION_POWER;
++		sys_led: led-sys {
++			label = "red:sys";
+ 			linux,default-trigger = "heartbeat";
++			pinctrl-names = "default";
+ 			gpios = <&gpio3 RK_PA2 GPIO_ACTIVE_HIGH>;
++			pinctrl-0 = <&sys_led_pin>;
+ 		};
+ 
+-		led-wan {
+-			color = <LED_COLOR_ID_GREEN>;
+-			function = LED_FUNCTION_WAN;
++		lan-led {
++			label = "green:lan";
++			gpios = <&gpio3 RK_PA3 GPIO_ACTIVE_HIGH>;
++			pinctrl-names = "default";
++			pinctrl-0 = <&lan_led_pin>;
++		};
++
++		wan-led {
++			label = "green:wan";
+ 			gpios = <&gpio3 RK_PA4 GPIO_ACTIVE_HIGH>;
++			pinctrl-names = "default";
++			pinctrl-0 = <&wan_led_pin>;
+ 		};
+ 
+-		led-wlan {
+-			color = <LED_COLOR_ID_GREEN>;
+-			function = LED_FUNCTION_WLAN;
++		wlan-led {
++			label = "green:wlan";
+ 			gpios = <&gpio3 RK_PA5 GPIO_ACTIVE_HIGH>;
++			pinctrl-names = "default";
++			pinctrl-0 = <&wlan_led_pin>;
+ 		};
+ 	};
+ };
+ 
+ &pcie2x1 {
+ 	pinctrl-names = "default";
+-	pinctrl-0 = <&pcie20_reset_pin>;
++	pinctrl-0 = <&m2_w_disable_pin>;
+ 	reset-gpios = <&gpio3 RK_PC1 GPIO_ACTIVE_HIGH>;
+ 	status = "okay";
+ };
+@@ -80,15 +82,21 @@
+ };
+ 
+ &pinctrl {
+-	gpio-leds {
+-		lan_led_pin: lan-led-pin {
+-			rockchip,pins = <3 RK_PA3 RK_FUNC_GPIO &pcfg_pull_none>;
++	gpio-key {
++		key1_pin: key1-pin {
++			rockchip,pins = <0 RK_PB7 RK_FUNC_GPIO &pcfg_pull_up>;
+ 		};
++	};
+ 
+-		power_led_pin: power-led-pin {
++	gpio-leds {
++		sys_led_pin: power-led-pin {
+ 			rockchip,pins = <3 RK_PA2 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+ 
++		lan_led_pin: lan-led-pin {
++			rockchip,pins = <3 RK_PA3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
+ 		wan_led_pin: wan-led-pin {
+ 			rockchip,pins = <3 RK_PA4 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+@@ -98,15 +106,9 @@
+ 		};
+ 	};
+ 
+-	pcie {
+-		pcie20_reset_pin: pcie20-reset-pin {
++	m2-pins {
++		m2_w_disable_pin: m2-w-disable-pin {
+ 			rockchip,pins = <2 RK_PD2 RK_FUNC_GPIO &pcfg_pull_up>;
+ 		};
+ 	};
+-
+-	rockchip-key {
+-		reset_button_pin: reset-button-pin {
+-			rockchip,pins = <0 RK_PB7 RK_FUNC_GPIO &pcfg_pull_up>;
+-		};
+-	};
+ };
+--- a/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5s.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3568-nanopi-r5s.dts
+@@ -11,7 +11,7 @@
+ 
+ / {
+ 	model = "FriendlyElec NanoPi R5S";
+-	compatible = "friendlyarm,nanopi-r5s", "rockchip,rk3568";
++	compatible = "friendlyelec,nanopi-r5s", "rockchip,rk3568";
+ 
+ 	aliases {
+ 		ethernet0 = &gmac0;
+@@ -19,34 +19,34 @@
+ 
+ 	gpio-leds {
+ 		compatible = "gpio-leds";
+-		pinctrl-names = "default";
+-		pinctrl-0 = <&lan1_led_pin>, <&lan2_led_pin>, <&power_led_pin>, <&wan_led_pin>;
+ 
+-		led-lan1 {
+-			color = <LED_COLOR_ID_GREEN>;
+-			function = LED_FUNCTION_LAN;
+-			function-enumerator = <1>;
+-			gpios = <&gpio3 RK_PD6 GPIO_ACTIVE_HIGH>;
++		sys_led: led-sys {
++			gpios = <&gpio4 RK_PD2 GPIO_ACTIVE_HIGH>;
++			label = "red:power";
++			linux,default-trigger = "heartbeat";
++			pinctrl-names = "default";
++			pinctrl-0 = <&sys_led_pin>;
+ 		};
+ 
+-		led-lan2 {
+-			color = <LED_COLOR_ID_GREEN>;
+-			function = LED_FUNCTION_LAN;
+-			function-enumerator = <2>;
+-			gpios = <&gpio3 RK_PD7 GPIO_ACTIVE_HIGH>;
++		wan_led: led-wan {
++			gpios = <&gpio2 RK_PC1 GPIO_ACTIVE_HIGH>;
++			label = "green:wan";
++			pinctrl-names = "default";
++			pinctrl-0 = <&wan_led_pin>;
+ 		};
+ 
+-		power_led: led-power {
+-			color = <LED_COLOR_ID_RED>;
+-			function = LED_FUNCTION_POWER;
+-			linux,default-trigger = "heartbeat";
+-			gpios = <&gpio4 RK_PD2 GPIO_ACTIVE_HIGH>;
++		lan1_led: led-lan1 {
++			gpios = <&gpio3 RK_PD6 GPIO_ACTIVE_HIGH>;
++			label = "green:lan1";
++			pinctrl-names = "default";
++			pinctrl-0 = <&lan1_led_pin>;
+ 		};
+ 
+-		led-wan {
+-			color = <LED_COLOR_ID_GREEN>;
+-			function = LED_FUNCTION_WAN;
+-			gpios = <&gpio2 RK_PC1 GPIO_ACTIVE_HIGH>;
++		lan2_led: led-lan2 {
++			gpios = <&gpio3 RK_PD7 GPIO_ACTIVE_HIGH>;
++			label = "green:lan2";
++			pinctrl-names = "default";
++			pinctrl-0 = <&lan2_led_pin>;
+ 		};
+ 	};
+ };
+@@ -117,20 +117,21 @@
+ 	};
+ 
+ 	gpio-leds {
+-		lan1_led_pin: lan1-led-pin {
+-			rockchip,pins = <3 RK_PD6 RK_FUNC_GPIO &pcfg_pull_none>;
+-		};
+ 
+-		lan2_led_pin: lan2-led-pin {
+-			rockchip,pins = <3 RK_PD7 RK_FUNC_GPIO &pcfg_pull_none>;
+-		};
+-
+-		power_led_pin: power-led-pin {
++		sys_led_pin: sys-led-pin {
+ 			rockchip,pins = <4 RK_PD2 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
+ 
+ 		wan_led_pin: wan-led-pin {
+ 			rockchip,pins = <2 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
+ 		};
++
++		lan1_led_pin: lan1-led-pin {
++			rockchip,pins = <3 RK_PD6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		lan2_led_pin: lan2-led-pin {
++			rockchip,pins = <3 RK_PD7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
+ 	};
+ };
diff --git a/target/linux/rockchip/patches-6.1/370-arm64-dts-rockchip-add-FriendlyElec-NanoPi-R6C-R6S.patch b/target/linux/rockchip/patches-6.1/370-arm64-dts-rockchip-add-FriendlyElec-NanoPi-R6C-R6S.patch
new file mode 100644
index 0000000000..cc57077476
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/370-arm64-dts-rockchip-add-FriendlyElec-NanoPi-R6C-R6S.patch
@@ -0,0 +1,802 @@
+From 24fd0083dc2fd9841f850bdf8b4a699152c702ab Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Tue, 30 May 2023 03:36:19 -0400
+Subject: [PATCH 370/383] arm64: dts: rockchip: add FriendlyElec NanoPi R6C/R6S
+
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   2 +
+ .../dts/rockchip/rk3588-nanopi6-common.dtsi   | 527 ++++++++++++++++++
+ .../boot/dts/rockchip/rk3588s-nanopi-r6c.dts  | 121 ++++
+ .../boot/dts/rockchip/rk3588s-nanopi-r6s.dts  | 121 ++++
+ 4 files changed, 771 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588-nanopi6-common.dtsi
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588s-nanopi-r6c.dts
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588s-nanopi-r6s.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -101,4 +101,6 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-ed
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-v10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-rock-5b.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-khadas-edge2.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-nanopi-r6c.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-nanopi-r6s.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-rock-5a.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588-nanopi6-common.dtsi
+@@ -0,0 +1,527 @@
++// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
++/*
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ *
++ * Copyright (c) 2022 FriendlyElec Computer Tech. Co., Ltd.
++ * (http://www.friendlyelec.com)
++ *
++ */
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/input/input.h>
++#include <dt-bindings/leds/common.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include <dt-bindings/usb/pd.h>
++#include "rk3588s.dtsi"
++
++/ {
++	model = "FriendlyElec boards based on Rockchip RK3588";
++	compatible = "friendlyelec,nanopi6",
++		     "rockchip,rk3588";
++
++	vcc5v0_sys: vcc5v0-sys {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++
++	vcc5v0_usb: vcc5v0-usb {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usb";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc_1v1_nldo_s3: vcc-1v1-nldo-s3 {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_1v1_nldo_s3";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <1100000>;
++		regulator-max-microvolt = <1100000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc_3v3_sd_s0: vcc-3v3-sd-s0-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio4 RK_PB4 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&sd_s0_pwr>;
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-max-microvolt = <3000000>;
++		regulator-min-microvolt = <3000000>;
++		regulator-name = "vcc_3v3_sd_s0";
++		vin-supply = <&vcc_3v3_s3>;
++	};
++
++	vcc_3v3_pcie20: vcc3v3-pcie20 {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc_3v3_pcie20";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc_3v3_s3>;
++	};
++
++	vbus5v0_typec: vbus5v0-typec {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio1 RK_PD2 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&typec5v_pwren>;
++		regulator-name = "vbus5v0_typec";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_usb>;
++	};
++
++	vcc5v0_host_20: vcc5v0-host-20 {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio4 RK_PB5 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_host20_en>;
++		regulator-name = "vcc5v0_host_20";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_usb>;
++	};
++};
++
++&combphy0_ps {
++	status = "okay";
++};
++
++&combphy2_psu {
++	status = "okay";
++};
++
++&cpu_l0 {
++	cpu-supply = <&vdd_cpu_lit_s0>;
++	mem-supply = <&vdd_cpu_lit_mem_s0>;
++};
++
++&cpu_b0 {
++	cpu-supply = <&vdd_cpu_big0_s0>;
++	mem-supply = <&vdd_cpu_big0_mem_s0>;
++};
++
++&cpu_b2 {
++	cpu-supply = <&vdd_cpu_big1_s0>;
++	mem-supply = <&vdd_cpu_big1_mem_s0>;
++};
++
++&i2c0 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&i2c0m2_xfer>;
++	status = "okay";
++
++	vdd_cpu_big0_s0: vdd_cpu_big0_mem_s0: regulator@42 {
++		compatible = "rockchip,rk8602";
++		reg = <0x42>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu_big0_s0";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <550000>;
++		regulator-max-microvolt = <1050000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	vdd_cpu_big1_s0: vdd_cpu_big1_mem_s0: regulator@43 {
++		compatible = "rockchip,rk8603", "rockchip,rk8602";
++		reg = <0x43>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu_big1_s0";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <550000>;
++		regulator-max-microvolt = <1050000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++};
++
++&spi2 {
++	status = "okay";
++	assigned-clocks = <&cru CLK_SPI2>;
++	assigned-clock-rates = <200000000>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&spi2m2_cs0 &spi2m2_pins>;
++	num-cs = <1>;
++
++	rk806single: rk806single@0 {
++		compatible = "rockchip,rk806";
++		spi-max-frequency = <1000000>;
++		reg = <0x0>;
++
++		interrupt-parent = <&gpio0>;
++		interrupts = <7 IRQ_TYPE_LEVEL_LOW>;
++
++		pinctrl-names = "default";
++		pinctrl-0 = <&pmic_pins>, <&rk806_dvs1_null>, <&rk806_dvs2_null>, <&rk806_dvs3_null>;
++
++		vcc1-supply = <&vcc5v0_sys>;
++		vcc2-supply = <&vcc5v0_sys>;
++		vcc3-supply = <&vcc5v0_sys>;
++		vcc4-supply = <&vcc5v0_sys>;
++		vcc5-supply = <&vcc5v0_sys>;
++		vcc6-supply = <&vcc5v0_sys>;
++		vcc7-supply = <&vcc5v0_sys>;
++		vcc8-supply = <&vcc5v0_sys>;
++		vcc9-supply = <&vcc5v0_sys>;
++		vcc10-supply = <&vcc5v0_sys>;
++		vcc11-supply = <&vcc_2v0_pldo_s3>;
++		vcc12-supply = <&vcc5v0_sys>;
++		vcc13-supply = <&vcc_1v1_nldo_s3>;
++		vcc14-supply = <&vcc_1v1_nldo_s3>;
++		vcca-supply = <&vcc5v0_sys>;
++
++		gpio-controller;
++		#gpio-cells = <2>;
++
++		rk806_dvs1_null: dvs1-null-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs1_slp: dvs1-slp-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun1";
++		};
++
++		rk806_dvs1_pwrdn: dvs1-pwrdn-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun2";
++		};
++
++		rk806_dvs1_rst: dvs1-rst-pins {
++			pins = "gpio_pwrctrl1";
++			function = "pin_fun3";
++		};
++
++		rk806_dvs2_null: dvs2-null-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs2_slp: dvs2-slp-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun1";
++		};
++
++		rk806_dvs2_pwrdn: dvs2-pwrdn-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun2";
++		};
++
++		rk806_dvs2_rst: dvs2-rst-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun3";
++		};
++
++		rk806_dvs2_dvs: dvs2-dvs-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun4";
++		};
++
++		rk806_dvs2_gpio: dvs2-gpio-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun5";
++		};
++
++		rk806_dvs3_null: dvs3-null-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs3_slp: dvs3-slp-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun1";
++		};
++
++		rk806_dvs3_pwrdn: dvs3-pwrdn-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun2";
++		};
++
++		rk806_dvs3_rst: dvs3-rst-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun3";
++		};
++
++		rk806_dvs3_dvs: dvs3-dvs-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun4";
++		};
++
++		rk806_dvs3_gpio: dvs3-gpio-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun5";
++		};
++
++		regulators {
++			vdd_cpu_lit_s0: vdd_cpu_lit_mem_s0: dcdc-reg2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <550000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_cpu_lit_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_2v0_pldo_s3: dcdc-reg7 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <2000000>;
++				regulator-max-microvolt = <2000000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_2v0_pldo_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <2000000>;
++				};
++			};
++
++			vcc_3v3_s3: dcdc-reg8 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-name = "vcc_3v3_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vcc_3v3_s0: pldo-reg4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vcc_3v3_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_sd_s0: pldo-reg5 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vccio_sd_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++		};
++	};
++};
++
++&i2c6 {
++	status = "okay";
++
++	hym8563:hym8563@51 {
++		compatible = "haoyu,hym8563";
++		reg = <0x51>;
++		#clock-cells = <0>;
++		clock-frequency = <32768>;
++		clock-output-names = "hym8563";
++		pinctrl-names = "default";
++		pinctrl-0 = <&rtc_int>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PB0 IRQ_TYPE_LEVEL_LOW>;
++		wakeup-source;
++	};
++};
++
++&gmac1 {
++	/* Use rgmii-rxid mode to disable rx delay inside Soc */
++	phy-mode = "rgmii-rxid";
++	clock_in_out = "output";
++
++	snps,no-vlhash;
++	snps,reset-gpio = <&gpio3 RK_PB7 GPIO_ACTIVE_LOW>;
++	snps,reset-active-low;
++	/* Reset time is 20ms, 100ms for rtl8211f */
++	snps,reset-delays-us = <0 20000 100000>;
++
++	pinctrl-names = "default";
++	pinctrl-0 = <&gmac1_miim
++		     &gmac1_tx_bus2
++		     &gmac1_rx_bus2
++		     &gmac1_rgmii_clk
++		     &gmac1_rgmii_bus>;
++
++	tx_delay = <0x42>;
++	/* rx_delay = <0x4f>; */
++
++	phy-handle = <&rgmii_phy1>;
++	status = "okay";
++};
++
++&mdio1 {
++	rgmii_phy1: ethernet-phy@1 {
++		compatible = "ethernet-phy-ieee802.3-c22";
++		reg = <1>;
++	};
++};
++
++&pcie2x1l1 {
++	reset-gpios = <&gpio1 RK_PA7 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc_3v3_pcie20>;
++	status = "okay";
++};
++
++&pcie2x1l2 {
++	reset-gpios = <&gpio3 RK_PD1 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc_3v3_pcie20>;
++	status = "okay";
++};
++
++&pinctrl {
++	hym8563 {
++		rtc_int: rtc-int {
++			rockchip,pins = <0 RK_PB0 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	sdmmc {
++		sd_s0_pwr: sd-s0-pwr {
++			rockchip,pins = <4 RK_PB4 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	usb {
++		typec5v_pwren: typec5v-pwren {
++			rockchip,pins = <1 RK_PD2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		usbc0_int: usbc0-int {
++			rockchip,pins = <0 RK_PD3 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++};
++
++&saradc {
++	status = "okay";
++};
++
++&sdhci {
++	bus-width = <8>;
++	no-sdio;
++	no-sd;
++	non-removable;
++	cap-mmc-highspeed;
++	max-frequency = <200000000>;
++	mmc-hs200-1_8v;
++	status = "okay";
++};
++
++&sdmmc {
++	bus-width = <4>;
++	cap-mmc-highspeed;
++	cap-sd-highspeed;
++	disable-wp;
++	max-frequency = <150000000>;
++	no-sdio;
++	no-mmc;
++	pinctrl-names = "default";
++	pinctrl-0 = <&sdmmc_bus4 &sdmmc_clk &sdmmc_cmd &sdmmc_det>;
++	vmmc-supply = <&vcc_3v3_sd_s0>;
++	vqmmc-supply = <&vccio_sd_s0>;
++	status = "okay";
++};
++
++&tsadc {
++	status = "okay";
++};
++
++&uart2 {
++	pinctrl-0 = <&uart2m0_xfer>;
++	status = "okay";
++};
++
++&u2phy2 {
++	status = "okay";
++};
++
++&u2phy3 {
++	status = "okay";
++};
++
++&u2phy2_host {
++	phy-supply = <&vcc5v0_host_20>;
++	status = "okay";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++&usb_host1_ehci {
++	status = "okay";
++};
++
++&usb_host1_ohci {
++	status = "okay";
++};
++
++&u2phy0 {
++	status = "okay";
++};
++
++&usbdp_phy0 {
++	status = "okay";
++};
++
++&u2phy0_otg {
++	phy-supply = <&vbus5v0_typec>;
++	status = "okay";
++};
++
++&usbdp_phy0_u3 {
++	status = "okay";
++};
++
++&usbdrd3_0 {
++	status = "okay";
++};
++
++&usbdrd_dwc3_0 {
++	dr_mode = "otg";
++	extcon = <&u2phy0>;
++	status = "okay";
++};
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-nanopi-r6c.dts
+@@ -0,0 +1,121 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2022 FriendlyElec Computer Tech. Co., Ltd.
++ * (http://www.friendlyelec.com)
++ * Copyright (c) 2023, Marty Jones <mj8263788@gmail.com
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ */
++
++/dts-v1/;
++
++#include "rk3588-nanopi6-common.dtsi"
++
++/ {
++	model = "FriendlyElec NanoPi R6C";
++	compatible = "friendlyelec,nanopi-r6c", "rockchip,rk3588";
++
++	aliases {
++		mmc0 = &sdmmc;
++		mmc1 = &sdhci;
++		ethernet0 = &gmac1;
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	gpio_keys: gpio-keys {
++		compatible = "gpio-keys";
++		pinctrl-names = "default";
++		pinctrl-0 = <&key1_pin>;
++	};
++
++	gpio_leds: gpio-leds {
++		compatible = "gpio-leds";
++
++		sys_led: led-sys {
++			gpios = <&gpio1 RK_PC1 GPIO_ACTIVE_HIGH>;
++			label = "red:sys";
++			linux,default-trigger = "heartbeat";
++			pinctrl-names = "default";
++			pinctrl-0 = <&sys_led_pin>;
++		};
++
++		wan_led: led-wan {
++			gpios = <&gpio1 RK_PC2 GPIO_ACTIVE_HIGH>;
++			label = "green:wan";
++			pinctrl-names = "default";
++			pinctrl-0 = <&wan_led_pin>;
++		};
++
++		lan_led: led-lan {
++			gpios = <&gpio1 RK_PC3 GPIO_ACTIVE_HIGH>;
++			label = "green:lan";
++			pinctrl-names = "default";
++			pinctrl-0 = <&lan1_led_pin>;
++		};
++
++		led1_led: led-led1 {
++			gpios = <&gpio1 RK_PC4 GPIO_ACTIVE_HIGH>;
++			label = "green:led1";
++			pinctrl-names = "default";
++			pinctrl-0 = <&led1_led_pin>;
++		};
++	};
++};
++
++
++&pinctrl {
++	gpio-key {
++		key1_pin: key1-pin {
++			rockchip,pins = <1 RK_PC0 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	gpio-leds {
++		sys_led_pin: sys-led-pin {
++			rockchip,pins =
++				<1 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		wan_led_pin: wan-led-pin {
++			rockchip,pins =
++				<1 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		lan1_led_pin: lan1-led-pin {
++			rockchip,pins =
++				<1 RK_PC3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		led1_led_pin: led1-led-pin {
++			rockchip,pins =
++				<1 RK_PC4 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	usb {
++		vcc5v0_host20_en: vcc5v0-host20-en {
++			rockchip,pins = <4 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&i2c6 {
++	clock-frequency = <200000>;
++	status = "okay";
++
++	eeprom@53 {
++		compatible = "microchip,24c02", "atmel,24c02";
++		reg = <0x53>;
++		#address-cells = <2>;
++		#size-cells = <0>;
++		pagesize = <16>;
++		size = <256>;
++
++		eui_48: eui-48@fa {
++			reg = <0xfa 0x06>;
++		};
++	};
++};
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-nanopi-r6s.dts
+@@ -0,0 +1,121 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2022 FriendlyElec Computer Tech. Co., Ltd.
++ * (http://www.friendlyelec.com)
++ * Copyright (c) 2023, Marty Jones <mj8263788@gmail.com
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ */
++
++/dts-v1/;
++
++#include "rk3588-nanopi6-common.dtsi"
++
++/ {
++	model = "FriendlyElec NanoPi R6S";
++	compatible = "friendlyelec,nanopi-r6s", "rockchip,rk3588";
++
++	aliases {
++		mmc0 = &sdmmc;
++		mmc1 = &sdhci;
++		ethernet0 = &gmac1;
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	gpio_keys: gpio-keys {
++		compatible = "gpio-keys";
++		pinctrl-names = "default";
++		pinctrl-0 = <&key1_pin>;
++	};
++
++	gpio_leds: gpio-leds {
++		compatible = "gpio-leds";
++
++		sys_led: led-sys {
++			gpios = <&gpio1 RK_PC1 GPIO_ACTIVE_HIGH>;
++			label = "red:sys";
++			linux,default-trigger = "heartbeat";
++			pinctrl-names = "default";
++			pinctrl-0 = <&sys_led_pin>;
++		};
++
++		wan_led: led-wan {
++			gpios = <&gpio1 RK_PC2 GPIO_ACTIVE_HIGH>;
++			label = "green:wan";
++			pinctrl-names = "default";
++			pinctrl-0 = <&wan_led_pin>;
++		};
++
++		lan_led: led-lan {
++			gpios = <&gpio1 RK_PC3 GPIO_ACTIVE_HIGH>;
++			label = "green:lan";
++			pinctrl-names = "default";
++			pinctrl-0 = <&lan1_led_pin>;
++		};
++
++		lan2_led: led-lan2 {
++			gpios = <&gpio1 RK_PC4 GPIO_ACTIVE_HIGH>;
++			label = "green:lan1";
++			pinctrl-names = "default";
++			pinctrl-0 = <&lan2_led_pin>;
++		};
++	};
++};
++
++
++&pinctrl {
++	gpio-key {
++		key1_pin: key1-pin {
++			rockchip,pins = <1 RK_PC0 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	gpio-leds {
++		sys_led_pin: sys-led-pin {
++			rockchip,pins =
++				<1 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		wan_led_pin: wan-led-pin {
++			rockchip,pins =
++				<1 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		lan1_led_pin: lan1-led-pin {
++			rockchip,pins =
++				<1 RK_PC3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		lan2_led_pin: lan2-led-pin {
++			rockchip,pins =
++				<1 RK_PC4 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	usb {
++		vcc5v0_host20_en: vcc5v0-host20-en {
++			rockchip,pins = <4 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&i2c6 {
++	clock-frequency = <200000>;
++	status = "okay";
++
++	eeprom@53 {
++		compatible = "microchip,24c02", "atmel,24c02";
++		reg = <0x53>;
++		#address-cells = <2>;
++		#size-cells = <0>;
++		pagesize = <16>;
++		size = <256>;
++
++		eui_48: eui-48@fa {
++			reg = <0xfa 0x06>;
++		};
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/371-regulator-fan53555-Remove-unused-_SLEW_SHIFT-definit.patch b/target/linux/rockchip/patches-6.1/371-regulator-fan53555-Remove-unused-_SLEW_SHIFT-definit.patch
new file mode 100644
index 0000000000..95a097901b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/371-regulator-fan53555-Remove-unused-_SLEW_SHIFT-definit.patch
@@ -0,0 +1,36 @@
+From eb7c8791d5a3795e949b260243dfd83f0479a514 Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Thu, 6 Apr 2023 22:41:54 +0300
+Subject: [PATCH 371/383] regulator: fan53555: Remove unused *_SLEW_SHIFT
+ definitions
+
+Commit b61ac767db4d ("regulator: fan53555: Convert to use
+regulator_set_ramp_delay_regmap") removed the slew_shift member from
+struct fan53555_device_info, hence the {CTL,TCS}_SLEW_SHIFT definitions
+remained unused.  Drop them.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230406194158.963352-5-cristian.ciocaltea@collabora.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+---
+ drivers/regulator/fan53555.c | 2 --
+ 1 file changed, 2 deletions(-)
+
+--- a/drivers/regulator/fan53555.c
++++ b/drivers/regulator/fan53555.c
+@@ -49,7 +49,6 @@
+ /* Control bit definitions */
+ #define CTL_OUTPUT_DISCHG	(1 << 7)
+ #define CTL_SLEW_MASK		(0x7 << 4)
+-#define CTL_SLEW_SHIFT		4
+ #define CTL_RESET			(1 << 2)
+ #define CTL_MODE_VSEL0_MODE	BIT(0)
+ #define CTL_MODE_VSEL1_MODE	BIT(1)
+@@ -60,7 +59,6 @@
+ #define TCS_VSEL0_MODE		(1 << 7)
+ #define TCS_VSEL1_MODE		(1 << 6)
+ 
+-#define TCS_SLEW_SHIFT		3
+ #define TCS_SLEW_MASK		GENMASK(4, 3)
+ 
+ enum fan53555_vendor {
diff --git a/target/linux/rockchip/patches-6.1/372-regulator-fan53555-Make-use-of-the-bit-macros.patch b/target/linux/rockchip/patches-6.1/372-regulator-fan53555-Make-use-of-the-bit-macros.patch
new file mode 100644
index 0000000000..b350859653
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/372-regulator-fan53555-Make-use-of-the-bit-macros.patch
@@ -0,0 +1,53 @@
+From 01902ed242e817ab4a2ef9a56a632c3338c7c3ba Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Thu, 6 Apr 2023 22:41:55 +0300
+Subject: [PATCH 372/383] regulator: fan53555: Make use of the bit macros
+
+For consistency and improved clarity, use BIT() and GENMASK() macros for
+defining the bitfields inside the registers. No functional changes
+intended.
+
+While here, also fix DIE_{ID,REV} inconsistent indentation.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230406194158.963352-6-cristian.ciocaltea@collabora.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+---
+ drivers/regulator/fan53555.c | 18 +++++++++---------
+ 1 file changed, 9 insertions(+), 9 deletions(-)
+
+--- a/drivers/regulator/fan53555.c
++++ b/drivers/regulator/fan53555.c
+@@ -41,23 +41,23 @@
+ #define FAN53555_MONITOR	0x05
+ 
+ /* VSEL bit definitions */
+-#define VSEL_BUCK_EN	(1 << 7)
+-#define VSEL_MODE		(1 << 6)
++#define VSEL_BUCK_EN		BIT(7)
++#define VSEL_MODE		BIT(6)
+ /* Chip ID and Verison */
+-#define DIE_ID		0x0F	/* ID1 */
+-#define DIE_REV		0x0F	/* ID2 */
++#define DIE_ID			0x0F	/* ID1 */
++#define DIE_REV			0x0F	/* ID2 */
+ /* Control bit definitions */
+-#define CTL_OUTPUT_DISCHG	(1 << 7)
+-#define CTL_SLEW_MASK		(0x7 << 4)
+-#define CTL_RESET			(1 << 2)
++#define CTL_OUTPUT_DISCHG	BIT(7)
++#define CTL_SLEW_MASK		GENMASK(6, 4)
++#define CTL_RESET		BIT(2)
+ #define CTL_MODE_VSEL0_MODE	BIT(0)
+ #define CTL_MODE_VSEL1_MODE	BIT(1)
+ 
+ #define FAN53555_NVOLTAGES	64	/* Numbers of voltages */
+ #define FAN53526_NVOLTAGES	128
+ 
+-#define TCS_VSEL0_MODE		(1 << 7)
+-#define TCS_VSEL1_MODE		(1 << 6)
++#define TCS_VSEL0_MODE		BIT(7)
++#define TCS_VSEL1_MODE		BIT(6)
+ 
+ #define TCS_SLEW_MASK		GENMASK(4, 3)
+ 
diff --git a/target/linux/rockchip/patches-6.1/373-regulator-fan53555-Improve-vsel_mask-computation.patch b/target/linux/rockchip/patches-6.1/373-regulator-fan53555-Improve-vsel_mask-computation.patch
new file mode 100644
index 0000000000..84fbd9b047
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/373-regulator-fan53555-Improve-vsel_mask-computation.patch
@@ -0,0 +1,39 @@
+From 2ccdc4ccc73c99baa0d75b2ef83b204b4332d34d Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Thu, 6 Apr 2023 22:41:56 +0300
+Subject: [PATCH 373/383] regulator: fan53555: Improve vsel_mask computation
+
+In preparation for introducing support for additional regulators which
+do not use the maximum number of voltage selectors available for a given
+mask, improve the mask computation formula by using fls().
+
+Note fls() requires the bitops header, hence include it explicitly and
+drop bits.h which is already pulled by bitops.h.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230406194158.963352-7-cristian.ciocaltea@collabora.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+---
+ drivers/regulator/fan53555.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+--- a/drivers/regulator/fan53555.c
++++ b/drivers/regulator/fan53555.c
+@@ -8,7 +8,7 @@
+ // Copyright (c) 2012 Marvell Technology Ltd.
+ // Yunfan Zhang <yfzhang@marvell.com>
+ 
+-#include <linux/bits.h>
++#include <linux/bitops.h>
+ #include <linux/err.h>
+ #include <linux/i2c.h>
+ #include <linux/module.h>
+@@ -486,7 +486,7 @@ static int fan53555_regulator_register(s
+ 	rdesc->min_uV = di->vsel_min;
+ 	rdesc->uV_step = di->vsel_step;
+ 	rdesc->vsel_reg = di->vol_reg;
+-	rdesc->vsel_mask = di->vsel_count - 1;
++	rdesc->vsel_mask = BIT(fls(di->vsel_count - 1)) - 1;
+ 	rdesc->ramp_reg = di->slew_reg;
+ 	rdesc->ramp_mask = di->slew_mask;
+ 	rdesc->ramp_delay_table = di->ramp_delay_table;
diff --git a/target/linux/rockchip/patches-6.1/374-regulator-fan53555-Use-dev_err_probe.patch b/target/linux/rockchip/patches-6.1/374-regulator-fan53555-Use-dev_err_probe.patch
new file mode 100644
index 0000000000..6e523b6fa4
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/374-regulator-fan53555-Use-dev_err_probe.patch
@@ -0,0 +1,106 @@
+From 5eea6d90de5e639c35ac794859dbd8214e9b276d Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Thu, 6 Apr 2023 22:41:57 +0300
+Subject: [PATCH 374/383] regulator: fan53555: Use dev_err_probe
+
+Use dev_err_probe() instead of dev_err() in the probe function, which
+ensures the error code is always printed and, additionally, simplifies
+the code a bit.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230406194158.963352-8-cristian.ciocaltea@collabora.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+---
+ drivers/regulator/fan53555.c | 47 ++++++++++++++++--------------------
+ 1 file changed, 21 insertions(+), 26 deletions(-)
+
+--- a/drivers/regulator/fan53555.c
++++ b/drivers/regulator/fan53555.c
+@@ -568,10 +568,9 @@ static int fan53555_regulator_probe(stru
+ 	if (!pdata)
+ 		pdata = fan53555_parse_dt(&client->dev, np, &di->desc);
+ 
+-	if (!pdata || !pdata->regulator) {
+-		dev_err(&client->dev, "Platform data not found!\n");
+-		return -ENODEV;
+-	}
++	if (!pdata || !pdata->regulator)
++		return dev_err_probe(&client->dev, -ENODEV,
++				     "Platform data not found!\n");
+ 
+ 	di->regulator = pdata->regulator;
+ 	if (client->dev.of_node) {
+@@ -580,10 +579,9 @@ static int fan53555_regulator_probe(stru
+ 	} else {
+ 		/* if no ramp constraint set, get the pdata ramp_delay */
+ 		if (!di->regulator->constraints.ramp_delay) {
+-			if (pdata->slew_rate >= ARRAY_SIZE(slew_rates)) {
+-				dev_err(&client->dev, "Invalid slew_rate\n");
+-				return -EINVAL;
+-			}
++			if (pdata->slew_rate >= ARRAY_SIZE(slew_rates))
++				return dev_err_probe(&client->dev, -EINVAL,
++						     "Invalid slew_rate\n");
+ 
+ 			di->regulator->constraints.ramp_delay
+ 					= slew_rates[pdata->slew_rate];
+@@ -593,34 +591,31 @@ static int fan53555_regulator_probe(stru
+ 	}
+ 
+ 	regmap = devm_regmap_init_i2c(client, &fan53555_regmap_config);
+-	if (IS_ERR(regmap)) {
+-		dev_err(&client->dev, "Failed to allocate regmap!\n");
+-		return PTR_ERR(regmap);
+-	}
++	if (IS_ERR(regmap))
++		return dev_err_probe(&client->dev, PTR_ERR(regmap),
++				     "Failed to allocate regmap!\n");
++
+ 	di->dev = &client->dev;
+ 	i2c_set_clientdata(client, di);
+ 	/* Get chip ID */
+ 	ret = regmap_read(regmap, FAN53555_ID1, &val);
+-	if (ret < 0) {
+-		dev_err(&client->dev, "Failed to get chip ID!\n");
+-		return ret;
+-	}
++	if (ret < 0)
++		return dev_err_probe(&client->dev, ret, "Failed to get chip ID!\n");
++
+ 	di->chip_id = val & DIE_ID;
+ 	/* Get chip revision */
+ 	ret = regmap_read(regmap, FAN53555_ID2, &val);
+-	if (ret < 0) {
+-		dev_err(&client->dev, "Failed to get chip Rev!\n");
+-		return ret;
+-	}
++	if (ret < 0)
++		return dev_err_probe(&client->dev, ret, "Failed to get chip Rev!\n");
++
+ 	di->chip_rev = val & DIE_REV;
+ 	dev_info(&client->dev, "FAN53555 Option[%d] Rev[%d] Detected!\n",
+ 				di->chip_id, di->chip_rev);
+ 	/* Device init */
+ 	ret = fan53555_device_setup(di, pdata);
+-	if (ret < 0) {
+-		dev_err(&client->dev, "Failed to setup device!\n");
+-		return ret;
+-	}
++	if (ret < 0)
++		return dev_err_probe(&client->dev, ret, "Failed to setup device!\n");
++
+ 	/* Register regulator */
+ 	config.dev = di->dev;
+ 	config.init_data = di->regulator;
+@@ -630,9 +625,9 @@ static int fan53555_regulator_probe(stru
+ 
+ 	ret = fan53555_regulator_register(di, &config);
+ 	if (ret < 0)
+-		dev_err(&client->dev, "Failed to register regulator!\n");
+-	return ret;
++		dev_err_probe(&client->dev, ret, "Failed to register regulator!\n");
+ 
++	return ret;
+ }
+ 
+ static const struct i2c_device_id fan53555_id[] = {
diff --git a/target/linux/rockchip/patches-6.1/375-regulator-fan53555-Add-support-for-RK860X.patch b/target/linux/rockchip/patches-6.1/375-regulator-fan53555-Add-support-for-RK860X.patch
new file mode 100644
index 0000000000..b5358d482c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/375-regulator-fan53555-Add-support-for-RK860X.patch
@@ -0,0 +1,263 @@
+From 28972868fda7085871e2680f0a71325c8481f00a Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Thu, 6 Apr 2023 22:41:58 +0300
+Subject: [PATCH 375/383] regulator: fan53555: Add support for RK860X
+
+Extend the existing fan53555 driver to support the Rockchip RK860X
+regulators.
+
+RK8600/RK8601 are pretty similar to the FAN53555 regulators.
+
+RK8602/RK8603 are a bit different, having a wider output voltage
+selection range, from 0.5 V to 1.5 V in 6.25 mV steps. They also use
+additional VSEL0/VSEL1 registers for the voltage selector, but the
+enable and mode bits are still located in the original FAN53555 specific
+VSEL0/VSEL1 registers.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230406194158.963352-9-cristian.ciocaltea@collabora.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+---
+ drivers/regulator/fan53555.c | 121 ++++++++++++++++++++++++++++++++++-
+ 1 file changed, 118 insertions(+), 3 deletions(-)
+
+--- a/drivers/regulator/fan53555.c
++++ b/drivers/regulator/fan53555.c
+@@ -26,6 +26,9 @@
+ #define FAN53555_VSEL0		0x00
+ #define FAN53555_VSEL1		0x01
+ 
++#define RK8602_VSEL0		0x06
++#define RK8602_VSEL1		0x07
++
+ #define TCS4525_VSEL0		0x11
+ #define TCS4525_VSEL1		0x10
+ #define TCS4525_TIME		0x13
+@@ -55,6 +58,7 @@
+ 
+ #define FAN53555_NVOLTAGES	64	/* Numbers of voltages */
+ #define FAN53526_NVOLTAGES	128
++#define RK8602_NVOLTAGES	160
+ 
+ #define TCS_VSEL0_MODE		BIT(7)
+ #define TCS_VSEL1_MODE		BIT(6)
+@@ -64,6 +68,8 @@
+ enum fan53555_vendor {
+ 	FAN53526_VENDOR_FAIRCHILD = 0,
+ 	FAN53555_VENDOR_FAIRCHILD,
++	FAN53555_VENDOR_ROCKCHIP,	/* RK8600, RK8601 */
++	RK8602_VENDOR_ROCKCHIP,		/* RK8602, RK8603 */
+ 	FAN53555_VENDOR_SILERGY,
+ 	FAN53526_VENDOR_TCS,
+ };
+@@ -88,6 +94,14 @@ enum {
+ };
+ 
+ enum {
++	RK8600_CHIP_ID_08 = 8,		/* RK8600, RK8601 */
++};
++
++enum {
++	RK8602_CHIP_ID_10 = 10,		/* RK8602, RK8603 */
++};
++
++enum {
+ 	TCS4525_CHIP_ID_12 = 12,
+ };
+ 
+@@ -117,6 +131,8 @@ struct fan53555_device_info {
+ 	/* Voltage setting register */
+ 	unsigned int vol_reg;
+ 	unsigned int sleep_reg;
++	unsigned int en_reg;
++	unsigned int sleep_en_reg;
+ 	/* Voltage range and step(linear) */
+ 	unsigned int vsel_min;
+ 	unsigned int vsel_step;
+@@ -159,7 +175,7 @@ static int fan53555_set_suspend_enable(s
+ {
+ 	struct fan53555_device_info *di = rdev_get_drvdata(rdev);
+ 
+-	return regmap_update_bits(rdev->regmap, di->sleep_reg,
++	return regmap_update_bits(rdev->regmap, di->sleep_en_reg,
+ 				  VSEL_BUCK_EN, VSEL_BUCK_EN);
+ }
+ 
+@@ -167,7 +183,7 @@ static int fan53555_set_suspend_disable(
+ {
+ 	struct fan53555_device_info *di = rdev_get_drvdata(rdev);
+ 
+-	return regmap_update_bits(rdev->regmap, di->sleep_reg,
++	return regmap_update_bits(rdev->regmap, di->sleep_en_reg,
+ 				  VSEL_BUCK_EN, 0);
+ }
+ 
+@@ -317,6 +333,50 @@ static int fan53555_voltages_setup_fairc
+ 	return 0;
+ }
+ 
++static int fan53555_voltages_setup_rockchip(struct fan53555_device_info *di)
++{
++	/* Init voltage range and step */
++	switch (di->chip_id) {
++	case RK8600_CHIP_ID_08:
++		di->vsel_min = 712500;
++		di->vsel_step = 12500;
++		break;
++	default:
++		dev_err(di->dev,
++			"Chip ID %d not supported!\n", di->chip_id);
++		return -EINVAL;
++	}
++	di->slew_reg = FAN53555_CONTROL;
++	di->slew_mask = CTL_SLEW_MASK;
++	di->ramp_delay_table = slew_rates;
++	di->n_ramp_values = ARRAY_SIZE(slew_rates);
++	di->vsel_count = FAN53555_NVOLTAGES;
++
++	return 0;
++}
++
++static int rk8602_voltages_setup_rockchip(struct fan53555_device_info *di)
++{
++	/* Init voltage range and step */
++	switch (di->chip_id) {
++	case RK8602_CHIP_ID_10:
++		di->vsel_min = 500000;
++		di->vsel_step = 6250;
++		break;
++	default:
++		dev_err(di->dev,
++			"Chip ID %d not supported!\n", di->chip_id);
++		return -EINVAL;
++	}
++	di->slew_reg = FAN53555_CONTROL;
++	di->slew_mask = CTL_SLEW_MASK;
++	di->ramp_delay_table = slew_rates;
++	di->n_ramp_values = ARRAY_SIZE(slew_rates);
++	di->vsel_count = RK8602_NVOLTAGES;
++
++	return 0;
++}
++
+ static int fan53555_voltages_setup_silergy(struct fan53555_device_info *di)
+ {
+ 	/* Init voltage range and step */
+@@ -377,6 +437,7 @@ static int fan53555_device_setup(struct
+ 	switch (di->vendor) {
+ 	case FAN53526_VENDOR_FAIRCHILD:
+ 	case FAN53555_VENDOR_FAIRCHILD:
++	case FAN53555_VENDOR_ROCKCHIP:
+ 	case FAN53555_VENDOR_SILERGY:
+ 		switch (pdata->sleep_vsel_id) {
+ 		case FAN53555_VSEL_ID_0:
+@@ -391,6 +452,27 @@ static int fan53555_device_setup(struct
+ 			dev_err(di->dev, "Invalid VSEL ID!\n");
+ 			return -EINVAL;
+ 		}
++		di->sleep_en_reg = di->sleep_reg;
++		di->en_reg = di->vol_reg;
++		break;
++	case RK8602_VENDOR_ROCKCHIP:
++		switch (pdata->sleep_vsel_id) {
++		case FAN53555_VSEL_ID_0:
++			di->sleep_reg = RK8602_VSEL0;
++			di->vol_reg = RK8602_VSEL1;
++			di->sleep_en_reg = FAN53555_VSEL0;
++			di->en_reg = FAN53555_VSEL1;
++			break;
++		case FAN53555_VSEL_ID_1:
++			di->sleep_reg = RK8602_VSEL1;
++			di->vol_reg = RK8602_VSEL0;
++			di->sleep_en_reg = FAN53555_VSEL1;
++			di->en_reg = FAN53555_VSEL0;
++			break;
++		default:
++			dev_err(di->dev, "Invalid VSEL ID!\n");
++			return -EINVAL;
++		}
+ 		break;
+ 	case FAN53526_VENDOR_TCS:
+ 		switch (pdata->sleep_vsel_id) {
+@@ -406,6 +488,8 @@ static int fan53555_device_setup(struct
+ 			dev_err(di->dev, "Invalid VSEL ID!\n");
+ 			return -EINVAL;
+ 		}
++		di->sleep_en_reg = di->sleep_reg;
++		di->en_reg = di->vol_reg;
+ 		break;
+ 	default:
+ 		dev_err(di->dev, "vendor %d not supported!\n", di->vendor);
+@@ -427,10 +511,23 @@ static int fan53555_device_setup(struct
+ 		}
+ 		break;
+ 	case FAN53555_VENDOR_FAIRCHILD:
++	case FAN53555_VENDOR_ROCKCHIP:
+ 	case FAN53555_VENDOR_SILERGY:
+ 		di->mode_reg = di->vol_reg;
+ 		di->mode_mask = VSEL_MODE;
+ 		break;
++	case RK8602_VENDOR_ROCKCHIP:
++		di->mode_mask = VSEL_MODE;
++
++		switch (pdata->sleep_vsel_id) {
++		case FAN53555_VSEL_ID_0:
++			di->mode_reg = FAN53555_VSEL1;
++			break;
++		case FAN53555_VSEL_ID_1:
++			di->mode_reg = FAN53555_VSEL0;
++			break;
++		}
++		break;
+ 	case FAN53526_VENDOR_TCS:
+ 		di->mode_reg = TCS4525_COMMAND;
+ 
+@@ -456,6 +553,12 @@ static int fan53555_device_setup(struct
+ 	case FAN53555_VENDOR_FAIRCHILD:
+ 		ret = fan53555_voltages_setup_fairchild(di);
+ 		break;
++	case FAN53555_VENDOR_ROCKCHIP:
++		ret = fan53555_voltages_setup_rockchip(di);
++		break;
++	case RK8602_VENDOR_ROCKCHIP:
++		ret = rk8602_voltages_setup_rockchip(di);
++		break;
+ 	case FAN53555_VENDOR_SILERGY:
+ 		ret = fan53555_voltages_setup_silergy(di);
+ 		break;
+@@ -481,7 +584,7 @@ static int fan53555_regulator_register(s
+ 	rdesc->ops = &fan53555_regulator_ops;
+ 	rdesc->type = REGULATOR_VOLTAGE;
+ 	rdesc->n_voltages = di->vsel_count;
+-	rdesc->enable_reg = di->vol_reg;
++	rdesc->enable_reg = di->en_reg;
+ 	rdesc->enable_mask = VSEL_BUCK_EN;
+ 	rdesc->min_uV = di->vsel_min;
+ 	rdesc->uV_step = di->vsel_step;
+@@ -532,6 +635,12 @@ static const struct of_device_id __maybe
+ 		.compatible = "fcs,fan53555",
+ 		.data = (void *)FAN53555_VENDOR_FAIRCHILD
+ 	}, {
++		.compatible = "rockchip,rk8600",
++		.data = (void *)FAN53555_VENDOR_ROCKCHIP
++	}, {
++		.compatible = "rockchip,rk8602",
++		.data = (void *)RK8602_VENDOR_ROCKCHIP
++	}, {
+ 		.compatible = "silergy,syr827",
+ 		.data = (void *)FAN53555_VENDOR_SILERGY,
+ 	}, {
+@@ -638,6 +747,12 @@ static const struct i2c_device_id fan535
+ 		.name = "fan53555",
+ 		.driver_data = FAN53555_VENDOR_FAIRCHILD
+ 	}, {
++		.name = "rk8600",
++		.driver_data = FAN53555_VENDOR_ROCKCHIP
++	}, {
++		.name = "rk8602",
++		.driver_data = RK8602_VENDOR_ROCKCHIP
++	}, {
+ 		.name = "syr827",
+ 		.driver_data = FAN53555_VENDOR_SILERGY
+ 	}, {
diff --git a/target/linux/rockchip/patches-6.1/376-ASoC-rockchip-i2s_tdm-Make-the-grf-property-optional.patch b/target/linux/rockchip/patches-6.1/376-ASoC-rockchip-i2s_tdm-Make-the-grf-property-optional.patch
new file mode 100644
index 0000000000..2720cacac0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/376-ASoC-rockchip-i2s_tdm-Make-the-grf-property-optional.patch
@@ -0,0 +1,56 @@
+From 47569184277746f7770ef28a3e7af1995c33ec4c Mon Sep 17 00:00:00 2001
+From: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Date: Tue, 25 Oct 2022 14:41:30 +0200
+Subject: [PATCH 376/383] ASoC: rockchip: i2s_tdm: Make the grf property
+ optional
+
+Only IO Multiplex and two TRCM modes need access to the GRF, so
+making it a hard requirement is not a wise idea, as it complicates
+support for newer SoCs which do not do these things.
+
+Signed-off-by: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Link: https://lore.kernel.org/r/20221025124132.399729-3-frattaroli.nicolas@gmail.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+---
+ sound/soc/rockchip/rockchip_i2s_tdm.c | 16 ++++++++++++----
+ 1 file changed, 12 insertions(+), 4 deletions(-)
+
+--- a/sound/soc/rockchip/rockchip_i2s_tdm.c
++++ b/sound/soc/rockchip/rockchip_i2s_tdm.c
+@@ -756,6 +756,12 @@ static int rockchip_i2s_io_multiplex(str
+ 	if (!i2s_tdm->io_multiplex)
+ 		return 0;
+ 
++	if (IS_ERR_OR_NULL(i2s_tdm->grf)) {
++		dev_err(i2s_tdm->dev,
++			"io multiplex not supported for this device\n");
++		return -EINVAL;
++	}
++
+ 	if (substream->stream == SNDRV_PCM_STREAM_CAPTURE) {
+ 		struct snd_pcm_str *playback_str =
+ 			&substream->pcm->streams[SNDRV_PCM_STREAM_PLAYBACK];
+@@ -1222,6 +1228,12 @@ static int common_soc_init(struct device
+ 	if (trcm == TRCM_TXRX)
+ 		return 0;
+ 
++	if (IS_ERR_OR_NULL(i2s_tdm->grf)) {
++		dev_err(i2s_tdm->dev,
++			"no grf present but non-txrx TRCM specified\n");
++		return -EINVAL;
++	}
++
+ 	for (i = 0; i < i2s_tdm->soc_data->config_count; i++) {
+ 		if (addr != configs[i].addr)
+ 			continue;
+@@ -1568,10 +1580,6 @@ static int rockchip_i2s_tdm_probe(struct
+ 		return ret;
+ 
+ 	i2s_tdm->grf = syscon_regmap_lookup_by_phandle(node, "rockchip,grf");
+-	if (IS_ERR(i2s_tdm->grf))
+-		return dev_err_probe(i2s_tdm->dev, PTR_ERR(i2s_tdm->grf),
+-				     "Error in rockchip,grf\n");
+-
+ 	i2s_tdm->tx_reset = devm_reset_control_get_optional_exclusive(&pdev->dev,
+ 								      "tx-m");
+ 	if (IS_ERR(i2s_tdm->tx_reset)) {
diff --git a/target/linux/rockchip/patches-6.1/377-ASoC-rockchip-i2s_tdm-Add-support-for-RK3588.patch b/target/linux/rockchip/patches-6.1/377-ASoC-rockchip-i2s_tdm-Add-support-for-RK3588.patch
new file mode 100644
index 0000000000..b5d8198759
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/377-ASoC-rockchip-i2s_tdm-Add-support-for-RK3588.patch
@@ -0,0 +1,33 @@
+From 9f56deeeaef6355230dae01a8a05b060e6c40e01 Mon Sep 17 00:00:00 2001
+From: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Date: Tue, 25 Oct 2022 14:41:32 +0200
+Subject: [PATCH 377/383] ASoC: rockchip: i2s_tdm: Add support for RK3588
+
+This adds support for the RK3588 SoC to the I2S/TDM driver.
+
+Signed-off-by: Nicolas Frattaroli <frattaroli.nicolas@gmail.com>
+Link: https://lore.kernel.org/r/20221025124132.399729-5-frattaroli.nicolas@gmail.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+---
+ sound/soc/rockchip/rockchip_i2s_tdm.c | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+--- a/sound/soc/rockchip/rockchip_i2s_tdm.c
++++ b/sound/soc/rockchip/rockchip_i2s_tdm.c
+@@ -1318,6 +1318,7 @@ static const struct of_device_id rockchi
+ 	{ .compatible = "rockchip,rk1808-i2s-tdm", .data = &rk1808_i2s_soc_data },
+ 	{ .compatible = "rockchip,rk3308-i2s-tdm", .data = &rk3308_i2s_soc_data },
+ 	{ .compatible = "rockchip,rk3568-i2s-tdm", .data = &rk3568_i2s_soc_data },
++	{ .compatible = "rockchip,rk3588-i2s-tdm" },
+ 	{ .compatible = "rockchip,rv1126-i2s-tdm", .data = &rv1126_i2s_soc_data },
+ 	{},
+ };
+@@ -1556,7 +1557,7 @@ static int rockchip_i2s_tdm_probe(struct
+ 	i2s_tdm->dev = &pdev->dev;
+ 
+ 	of_id = of_match_device(rockchip_i2s_tdm_match, &pdev->dev);
+-	if (!of_id || !of_id->data)
++	if (!of_id)
+ 		return -EINVAL;
+ 
+ 	spin_lock_init(&i2s_tdm->lock);
diff --git a/target/linux/rockchip/patches-6.1/378-ASoC-rockchip-i2s-Add-compatible-for-RK3588.patch b/target/linux/rockchip/patches-6.1/378-ASoC-rockchip-i2s-Add-compatible-for-RK3588.patch
new file mode 100644
index 0000000000..29828bb24c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/378-ASoC-rockchip-i2s-Add-compatible-for-RK3588.patch
@@ -0,0 +1,25 @@
+From 1f3b752958b2ab117896205d080c0d574645b5cf Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Wed, 15 Mar 2023 13:48:03 +0200
+Subject: [PATCH 378/383] ASoC: rockchip: i2s: Add compatible for RK3588
+
+The Rockchip I2S driver supports the RK3588/RK3588S SoCs, hence add the
+corresponding compatible string.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Link: https://lore.kernel.org/r/20230315114806.3819515-9-cristian.ciocaltea@collabora.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+---
+ sound/soc/rockchip/rockchip_i2s.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/sound/soc/rockchip/rockchip_i2s.c
++++ b/sound/soc/rockchip/rockchip_i2s.c
+@@ -659,6 +659,7 @@ static const struct of_device_id rockchi
+ 	{ .compatible = "rockchip,rk3366-i2s", },
+ 	{ .compatible = "rockchip,rk3368-i2s", },
+ 	{ .compatible = "rockchip,rk3399-i2s", .data = &rk3399_i2s_pins },
++	{ .compatible = "rockchip,rk3588-i2s", },
+ 	{ .compatible = "rockchip,rv1126-i2s", },
+ 	{},
+ };
diff --git a/target/linux/rockchip/patches-6.1/384-arm64-dts-rockchip-add-default-pinctrl-for-rk3588-em.patch b/target/linux/rockchip/patches-6.1/384-arm64-dts-rockchip-add-default-pinctrl-for-rk3588-em.patch
new file mode 100644
index 0000000000..cbd5df1724
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/384-arm64-dts-rockchip-add-default-pinctrl-for-rk3588-em.patch
@@ -0,0 +1,26 @@
+From 9245f96ff6940e531c5e145b6b72db7be26fa8ec Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Wed, 31 May 2023 11:12:16 -0500
+Subject: [PATCH 384/414] arm64: dts: rockchip: add default pinctrl for rk3588
+ emmc
+
+Add a default pinctrl definition for the rk3588 emmc.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 3 +++
+ 1 file changed, 3 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -2011,6 +2011,9 @@
+ 			 <&cru TMCLK_EMMC>;
+ 		clock-names = "core", "bus", "axi", "block", "timer";
+ 		max-frequency = <200000000>;
++		pinctrl-0 = <&emmc_rstnout>, <&emmc_bus8>, <&emmc_clk>,
++			    <&emmc_cmd>, <&emmc_data_strobe>;
++		pinctrl-names = "default";
+ 		resets = <&cru SRST_C_EMMC>, <&cru SRST_H_EMMC>,
+ 			 <&cru SRST_A_EMMC>, <&cru SRST_B_EMMC>,
+ 			 <&cru SRST_T_EMMC>;
diff --git a/target/linux/rockchip/patches-6.1/385-arm64-dts-rockchip-Add-sdio-node-to-rk3588.patch b/target/linux/rockchip/patches-6.1/385-arm64-dts-rockchip-Add-sdio-node-to-rk3588.patch
new file mode 100644
index 0000000000..7f829d6571
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/385-arm64-dts-rockchip-Add-sdio-node-to-rk3588.patch
@@ -0,0 +1,37 @@
+From 58b9e2838dc57511c75fbe3d9759da082a63a6b3 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Wed, 31 May 2023 11:12:17 -0500
+Subject: [PATCH 385/414] arm64: dts: rockchip: Add sdio node to rk3588
+
+Add SDIO node for rk3588/rk3588s.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 15 +++++++++++++++
+ 1 file changed, 15 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -2000,6 +2000,21 @@
+ 		status = "disabled";
+ 	};
+ 
++	sdio: mmc@fe2d0000 {
++		compatible = "rockchip,rk3588-dw-mshc", "rockchip,rk3288-dw-mshc";
++		reg = <0x00 0xfe2d0000 0x00 0x4000>;
++		interrupts = <GIC_SPI 204 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru HCLK_SDIO>, <&cru CCLK_SRC_SDIO>,
++			 <&cru SCLK_SDIO_DRV>, <&cru SCLK_SDIO_SAMPLE>;
++		clock-names = "biu", "ciu", "ciu-drive", "ciu-sample";
++		fifo-depth = <0x100>;
++		max-frequency = <200000000>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&sdiom1_pins>;
++		power-domains = <&power RK3588_PD_SDIO>;
++		status = "disabled";
++	};
++
+ 	sdhci: mmc@fe2e0000 {
+ 		compatible = "rockchip,rk3588-dwcmshc";
+ 		reg = <0x0 0xfe2e0000 0x0 0x10000>;
diff --git a/target/linux/rockchip/patches-6.1/386-dt-bindings-vendor-prefixes-add-Indiedroid.patch b/target/linux/rockchip/patches-6.1/386-dt-bindings-vendor-prefixes-add-Indiedroid.patch
new file mode 100644
index 0000000000..67dc9b3d55
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/386-dt-bindings-vendor-prefixes-add-Indiedroid.patch
@@ -0,0 +1,25 @@
+From 64d7facfd7dab1204ecc7258262f403a3c547a0f Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Wed, 31 May 2023 11:12:18 -0500
+Subject: [PATCH 386/414] dt-bindings: vendor-prefixes: add Indiedroid
+
+Indiedroid is a sub-brand of Ameridroid for their line of single board
+computers.
+https://indiedroid.us/
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+---
+ Documentation/devicetree/bindings/vendor-prefixes.yaml | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/Documentation/devicetree/bindings/vendor-prefixes.yaml
++++ b/Documentation/devicetree/bindings/vendor-prefixes.yaml
+@@ -591,6 +591,8 @@ patternProperties:
+     description: Integrated Micro-Electronics Inc.
+   "^incircuit,.*":
+     description: In-Circuit GmbH
++  "^indiedroid,.*":
++    description: Indiedroid
+   "^inet-tek,.*":
+     description: Shenzhen iNet Mobile Internet Technology Co., Ltd
+   "^infineon,.*":
diff --git a/target/linux/rockchip/patches-6.1/387-dt-bindings-arm-rockchip-Add-Indiedroid-Nova.patch b/target/linux/rockchip/patches-6.1/387-dt-bindings-arm-rockchip-Add-Indiedroid-Nova.patch
new file mode 100644
index 0000000000..b532569ed0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/387-dt-bindings-arm-rockchip-Add-Indiedroid-Nova.patch
@@ -0,0 +1,27 @@
+From 9f29a9ac74d2c69a8b2a62abdc392f14a0e3488b Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Wed, 31 May 2023 11:12:19 -0500
+Subject: [PATCH 387/414] dt-bindings: arm: rockchip: Add Indiedroid Nova
+
+Add Indiedroid Nova, an rk3588s based single board computer.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Acked-by: Conor Dooley <conor.dooley@microchip.com>
+---
+ Documentation/devicetree/bindings/arm/rockchip.yaml | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/Documentation/devicetree/bindings/arm/rockchip.yaml
++++ b/Documentation/devicetree/bindings/arm/rockchip.yaml
+@@ -554,6 +554,11 @@ properties:
+               - khadas,edge-v
+           - const: rockchip,rk3399
+ 
++      - description: Indiedroid Nova SBC
++        items:
++          - const: indiedroid,nova
++          - const: rockchip,rk3588s
++
+       - description: Khadas Edge2 series boards
+         items:
+           - const: khadas,edge2
diff --git a/target/linux/rockchip/patches-6.1/388-arm64-dts-rockchip-Add-Indiedroid-Nova-board.patch b/target/linux/rockchip/patches-6.1/388-arm64-dts-rockchip-Add-Indiedroid-Nova-board.patch
new file mode 100644
index 0000000000..777203800d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/388-arm64-dts-rockchip-Add-Indiedroid-Nova-board.patch
@@ -0,0 +1,822 @@
+From 026f1bad4abdd244046af0a192cfcab6c5dcdb0a Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Wed, 31 May 2023 11:12:20 -0500
+Subject: [PATCH 388/414] arm64: dts: rockchip: Add Indiedroid Nova board
+
+The Indiedroid Nova is an SBC from a sub-brand of Ameridroid that
+includes the following hardware:
+
+ - A 40-pin GPIO header
+ - 2 USB-A 3.0 ports
+ - 2 USB-A 2.0 ports
+ - A USB-C 2.0 OTG port (used for USB power delivery)
+ - A USB-C 3.0 port that can do display port output.
+ - A Micro HDMI 2.1 port.
+ - A 1GB ethernet port.
+ - An RT8821CS based WiFi/Bluetooth module.
+ - A user replaceable eMMC module.
+ - An SDMMC card slot.
+ - A MIPI DSI connector.
+ - A MIPI CSI connector.
+ - A 3.5mm TRRS audio jack with microphone input.
+ - An 2 pin socket for an RTC battery.
+ - A 4 pin socket for a debug port.
+ - A power button (connected to PMIC), a reset button (connected to SoC
+   reset), a boot button, and a recovery button (both connected to the
+   ADC).
+ - 4GB, 8GB, or 16GB of system RAM.
+
+This initial devicetree includes support for the WiFi, bluetooth,
+analog audio out/in, SDMMC, eMMC, RTC, UART debugging, and has
+the regulator values from the schematics. ADC, graphics output, GPU,
+USB, and wired ethernet are still pending additional upstream changes.
+
+Analog audio will require changes to handle a difference between the
+requested clock frequency of 12288000 and the actual clock freqency
+of 12287999 before it will work properly. This will be done in a
+subsequent patch series.
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../dts/rockchip/rk3588s-indiedroid-nova.dts  | 764 ++++++++++++++++++
+ 2 files changed, 765 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588s-indiedroid-nova.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -100,6 +100,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-ed
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-edgeble-neu6b-io.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-v10.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-rock-5b.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-indiedroid-nova.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-khadas-edge2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-nanopi-r6c.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-nanopi-r6s.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-indiedroid-nova.dts
+@@ -0,0 +1,764 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include <dt-bindings/usb/pd.h>
++#include "rk3588s.dtsi"
++
++/ {
++	model = "Indiedroid Nova";
++	compatible = "indiedroid,nova", "rockchip,rk3588s";
++
++	aliases {
++		mmc0 = &sdhci;
++		mmc1 = &sdmmc;
++		mmc2 = &sdio;
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	sdio_pwrseq: sdio-pwrseq {
++		compatible = "mmc-pwrseq-simple";
++		clock-names = "ext_clock";
++		clocks = <&rtc_hym8563>;
++		pinctrl-0 = <&wifi_enable_h>;
++		pinctrl-names = "default";
++		post-power-on-delay-ms = <200>;
++		reset-gpios = <&gpio0 RK_PC7 GPIO_ACTIVE_LOW>;
++	};
++
++	sound {
++		compatible = "audio-graph-card";
++		label = "rockchip,es8388-codec";
++		widgets = "Microphone", "Mic Jack",
++			  "Headphone", "Headphones";
++		routing = "LINPUT2", "Mic Jack",
++			  "Headphones", "LOUT1",
++			  "Headphones", "ROUT1";
++		dais = <&i2s0_8ch_p0>;
++	};
++
++	vbus5v0_typec: vbus5v0-typec {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio4 RK_PA5 GPIO_ACTIVE_HIGH>;
++		pinctrl-0 = <&typec5v_pwren>;
++		pinctrl-names = "default";
++		regulator-name = "vbus5v0_typec";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_usb>;
++	};
++
++	vcc_1v1_nldo_s3: vcc-1v1-nldo-s3 {
++		compatible = "regulator-fixed";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-max-microvolt = <1100000>;
++		regulator-min-microvolt = <1100000>;
++		regulator-name = "vcc_1v1_nldo_s3";
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	/* Regulator is enabled whenever vcc_1v8_s0 is above 1.6v */
++	vcc_3v3_s0: vcc-3v3-s0 {
++		compatible = "regulator-fixed";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-max-microvolt = <3300000>;
++		regulator-min-microvolt = <3300000>;
++		regulator-name = "vcc_3v3_s0";
++		vin-supply = <&vcc_3v3_s3>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	vcc5v0_sys: vcc5v0-sys {
++		compatible = "regulator-fixed";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-max-microvolt = <5000000>;
++		regulator-min-microvolt = <5000000>;
++		regulator-name = "vcc5v0_sys";
++	};
++
++	vcc5v0_usb: vcc5v0-usb {
++		compatible = "regulator-fixed";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-max-microvolt = <5000000>;
++		regulator-min-microvolt = <5000000>;
++		regulator-name = "vcc5v0_usb";
++		vin-supply = <&vcc5v0_usbdcin>;
++	};
++
++	vcc5v0_usbdcin: vcc5v0-usbdcin {
++		compatible = "regulator-fixed";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-max-microvolt = <5000000>;
++		regulator-min-microvolt = <5000000>;
++		regulator-name = "vcc5v0_usbdcin";
++	};
++};
++
++&cpu_l0 {
++	cpu-supply = <&vdd_cpu_lit_s0>;
++};
++
++&cpu_l1 {
++	cpu-supply = <&vdd_cpu_lit_s0>;
++};
++
++&cpu_l2 {
++	cpu-supply = <&vdd_cpu_lit_s0>;
++};
++
++&cpu_l3 {
++	cpu-supply = <&vdd_cpu_lit_s0>;
++};
++
++&cpu_b0{
++	cpu-supply = <&vdd_cpu_big0_s0>;
++};
++
++&cpu_b1{
++	cpu-supply = <&vdd_cpu_big0_s0>;
++};
++
++&cpu_b2{
++	cpu-supply = <&vdd_cpu_big1_s0>;
++};
++
++&cpu_b3{
++	cpu-supply = <&vdd_cpu_big1_s0>;
++};
++
++/*
++ * Add labels for each GPIO pin exposed on the 40 pin header. Note that
++ * voltage of each GPIO pin could be either 3.3v or 1.8v (as noted by
++ * label).
++ */
++&gpio0 {
++	gpio-line-names = /* GPIO0 A0-A7 */
++			  "", "", "", "",
++			  "", "", "", "",
++			  /* GPIO0 B0-B7 */
++			  "", "", "", "",
++			  "", "", "", "",
++			  /* GPIO0 C0-C7 */
++			  "", "", "", "",
++			  "", "", "", "",
++			  /* GPIO0 D0-D7 */
++			  "HEADER_12_1v8", "", "", "HEADER_24_1v8",
++			  "", "", "", "";
++};
++
++&gpio1 {
++	gpio-line-names = /* GPIO1 A0-A7 */
++			  "HEADER_27_3v3", "HEADER_28_3v3", "", "",
++			  "HEADER_29_1v8", "", "HEADER_7_1v8", "",
++			  /* GPIO1 B0-B7 */
++			  "", "HEADER_31_1v8", "HEADER_33_1v8", "",
++			  "HEADER_11_1v8", "HEADER_13_1v8", "", "",
++			  /* GPIO1 C0-C7 */
++			  "", "", "", "",
++			  "", "", "", "",
++			  /* GPIO1 D0-D7 */
++			  "", "", "", "",
++			  "", "", "HEADER_5_3v3", "HEADER_3_3v3";
++};
++
++&gpio3 {
++	gpio-line-names = /* GPIO3 A0-A7 */
++			  "", "", "", "",
++			  "", "", "", "",
++			  /* GPIO3 B0-B7 */
++			  "HEADER_16_1v8", "HEADER_18_1v8", "", "",
++			  "", "", "", "HEADER_19_1v8",
++			  /* GPIO3 C0-C7 */
++			  "HEADER_21_1v8", "HEADER_23_1v8", "", "HEADER_26_1v8",
++			  "HEADER_15_1v8", "HEADER_22_1v8", "", "",
++			  /* GPIO3 D0-D7 */
++			  "", "", "", "",
++			  "", "", "", "";
++};
++
++&gpio4 {
++	gpio-line-names = /* GPIO4 A0-A7 */
++			  "", "", "HEADER_37_3v3", "HEADER_32_3v3",
++			  "HEADER_36_3v3", "", "HEADER_35_3v3", "HEADER_38_3v3",
++			  /* GPIO4 B0-B7 */
++			  "", "", "", "HEADER_40_3v3",
++			  "HEADER_8_3v3", "HEADER_10_3v3", "", "",
++			  /* GPIO4 C0-C7 */
++			  "", "", "", "",
++			  "", "", "", "",
++			  /* GPIO4 D0-D7 */
++			  "", "", "", "",
++			  "", "", "", "";
++};
++
++&i2c0 {
++	pinctrl-0 = <&i2c0m2_xfer>;
++	pinctrl-names = "default";
++	status = "okay";
++
++	vdd_cpu_big0_s0: regulator@42 {
++		compatible = "rockchip,rk8602";
++		reg = <0x42>;
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-max-microvolt = <1050000>;
++		regulator-min-microvolt = <550000>;
++		regulator-name = "vdd_cpu_big0_s0";
++		regulator-ramp-delay = <2300>;
++		fcs,suspend-voltage-selector = <1>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	vdd_cpu_big1_s0: regulator@43 {
++		compatible = "rockchip,rk8603", "rockchip,rk8602";
++		reg = <0x43>;
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-max-microvolt = <1050000>;
++		regulator-min-microvolt = <550000>;
++		regulator-name = "vdd_cpu_big1_s0";
++		regulator-ramp-delay = <2300>;
++		fcs,suspend-voltage-selector = <1>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++};
++
++&i2c2 {
++	status = "okay";
++
++	vdd_npu_s0: regulator@42 {
++		compatible = "rockchip,rk8602";
++		reg = <0x42>;
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-max-microvolt = <950000>;
++		regulator-min-microvolt = <550000>;
++		regulator-name = "vdd_npu_s0";
++		regulator-ramp-delay = <2300>;
++		fcs,suspend-voltage-selector = <1>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++};
++
++&i2c6 {
++	pinctrl-0 = <&i2c6m3_xfer>;
++	status = "okay";
++
++	fusb302: typec-portc@22 {
++		compatible = "fcs,fusb302";
++		reg = <0x22>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PC4 IRQ_TYPE_LEVEL_LOW>;
++		pinctrl-0 = <&usbc0_int>;
++		pinctrl-names = "default";
++		vbus-supply = <&vbus5v0_typec>;
++
++		connector {
++			compatible = "usb-c-connector";
++			data-role = "dual";
++			label = "USB-C";
++			power-role = "dual";
++			try-power-role = "sink";
++			source-pdos = <PDO_FIXED(5000, 3000, PDO_FIXED_USB_COMM)>;
++			sink-pdos = <PDO_FIXED(5000, 1000, PDO_FIXED_USB_COMM)>;
++			op-sink-microwatt = <1000000>;
++		};
++	};
++
++	rtc_hym8563: rtc@51 {
++		compatible = "haoyu,hym8563";
++		reg = <0x51>;
++		#clock-cells = <0>;
++		clock-output-names = "hym8563";
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PB0 IRQ_TYPE_LEVEL_LOW>;
++		pinctrl-0 = <&hym8563_int>;
++		pinctrl-names = "default";
++		wakeup-source;
++	};
++};
++
++&i2c7 {
++	pinctrl-0 = <&i2c7m0_xfer>;
++	status = "okay";
++
++	es8388: audio-codec@11 {
++		compatible = "everest,es8388";
++		reg = <0x11>;
++		assigned-clock-rates = <12288000>;
++		assigned-clocks = <&cru I2S0_8CH_MCLKOUT>;
++		AVDD-supply = <&vcc_3v3_s3>;
++		clock-names = "mclk";
++		clocks = <&cru I2S0_8CH_MCLKOUT>;
++		DVDD-supply = <&vcc_1v8_s3>;
++		HPVDD-supply = <&vcc_3v3_s3>;
++		PVDD-supply = <&vcc_1v8_s3>;
++		#sound-dai-cells = <0>;
++
++		port {
++			es8388_p0_0: endpoint {
++				remote-endpoint = <&i2s0_8ch_p0_0>;
++			};
++		};
++	};
++};
++
++&i2s0_8ch {
++	pinctrl-names = "default";
++	pinctrl-0 = <&i2s0_lrck
++		     &i2s0_mclk
++		     &i2s0_sclk
++		     &i2s0_sdi0
++		     &i2s0_sdo0>;
++	status = "okay";
++
++	i2s0_8ch_p0: port {
++		i2s0_8ch_p0_0: endpoint {
++			dai-format = "i2s";
++			mclk-fs = <256>;
++			remote-endpoint = <&es8388_p0_0>;
++		};
++	};
++};
++
++
++&pinctrl {
++	bluetooth-pins {
++		bt_reset: bt-reset {
++			rockchip,pins =
++				<0 RK_PD4 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		bt_wake_dev: bt-wake-dev {
++			rockchip,pins =
++				<0 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		bt_wake_host: bt-wake-host {
++			rockchip,pins =
++				<0 RK_PC5 RK_FUNC_GPIO &pcfg_pull_down>;
++		};
++	};
++
++	hym8563 {
++
++		hym8563_int: hym8563-int {
++			rockchip,pins =
++				<0 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	sdio-pwrseq {
++		wifi_enable_h: wifi-enable-h {
++			rockchip,pins =
++				<0 RK_PC7 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	usb-typec {
++		usbc0_int: usbc0-int {
++			rockchip,pins =
++				<0 RK_PC4 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++
++		typec5v_pwren: typec5v-pwren {
++			rockchip,pins =
++				<4 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++/* HS400 modes seemed to cause io errors. */
++&sdhci {
++	bus-width = <8>;
++	no-mmc-hs400;
++	no-sd;
++	no-sdio;
++	non-removable;
++	max-frequency = <200000000>;
++	vmmc-supply = <&vcc_3v3_s0>;
++	vqmmc-supply = <&vcc_1v8_s3>;
++	status = "okay";
++};
++
++&sdio {
++	bus-width = <4>;
++	cap-sd-highspeed;
++	cap-sdio-irq;
++	disable-wp;
++	keep-power-in-suspend;
++	max-frequency = <100000000>;
++	mmc-pwrseq = <&sdio_pwrseq>;
++	no-mmc;
++	no-sd;
++	non-removable;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc_3v3_s3>;
++	vqmmc-supply = <&vcc_1v8_s3>;
++	status = "okay";
++};
++
++&sdmmc {
++	bus-width = <4>;
++	cap-mmc-highspeed;
++	cap-sd-highspeed;
++	disable-wp;
++	max-frequency = <200000000>;
++	no-sdio;
++	no-mmc;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc_3v3_s3>;
++	vqmmc-supply = <&vccio_sd_s0>;
++	status = "okay";
++};
++
++&spi2 {
++	#address-cells = <1>;
++	assigned-clocks = <&cru CLK_SPI2>;
++	assigned-clock-rates = <200000000>;
++	num-cs = <1>;
++	pinctrl-0 = <&spi2m2_pins>, <&spi2m2_cs0>;
++	pinctrl-names = "default";
++	#size-cells = <0>;
++	status = "okay";
++
++	pmic@0 {
++		compatible = "rockchip,rk806";
++		reg = <0x0>;
++		#gpio-cells = <2>;
++		gpio-controller;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PA7 IRQ_TYPE_LEVEL_LOW>;
++		pinctrl-0 = <&pmic_pins>, <&rk806_dvs1_null>,
++			    <&rk806_dvs2_null>, <&rk806_dvs3_null>;
++		pinctrl-names = "default";
++		spi-max-frequency = <1000000>;
++
++		vcc1-supply = <&vcc5v0_sys>;
++		vcc2-supply = <&vcc5v0_sys>;
++		vcc3-supply = <&vcc5v0_sys>;
++		vcc4-supply = <&vcc5v0_sys>;
++		vcc5-supply = <&vcc5v0_sys>;
++		vcc6-supply = <&vcc5v0_sys>;
++		vcc7-supply = <&vcc5v0_sys>;
++		vcc8-supply = <&vcc5v0_sys>;
++		vcc9-supply = <&vcc5v0_sys>;
++		vcc10-supply = <&vcc5v0_sys>;
++		vcc11-supply = <&vcc_2v0_pldo_s3>;
++		vcc12-supply = <&vcc5v0_sys>;
++		vcc13-supply = <&vcc_1v1_nldo_s3>;
++		vcc14-supply = <&vcc_1v1_nldo_s3>;
++		vcca-supply = <&vcc5v0_sys>;
++
++		rk806_dvs1_null: dvs1-null-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs2_null: dvs2-null-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs3_null: dvs3-null-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun0";
++		};
++
++		regulators {
++			vdd_gpu_s0: dcdc-reg1 {
++				regulator-boot-on;
++				regulator-enable-ramp-delay = <400>;
++				regulator-max-microvolt = <950000>;
++				regulator-min-microvolt = <550000>;
++				regulator-name = "vdd_gpu_s0";
++				regulator-ramp-delay = <12500>;
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_cpu_lit_s0: dcdc-reg2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <950000>;
++				regulator-min-microvolt = <550000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_cpu_lit_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_logic_s0: dcdc-reg3 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <750000>;
++				regulator-min-microvolt = <675000>;
++				regulator-name = "vdd_logic_s0";
++				regulator-ramp-delay = <12500>;
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <750000>;
++				};
++			};
++
++			vdd_vdenc_s0: dcdc-reg4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <950000>;
++				regulator-min-microvolt = <550000>;
++				regulator-name = "vdd_vdenc_s0";
++				regulator-ramp-delay = <12500>;
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_ddr_s0: dcdc-reg5 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <750000>;
++				regulator-max-microvolt = <850000>;
++				regulator-ramp-delay = <12500>;
++				regulator-name = "vdd_ddr_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <850000>;
++				};
++			};
++
++			vdd2_ddr_s3: dcdc-reg6 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <1100000>;
++				regulator-min-microvolt = <1100000>;
++				regulator-name = "vdd2_ddr_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vcc_2v0_pldo_s3: dcdc-reg7 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <2000000>;
++				regulator-min-microvolt = <2000000>;
++				regulator-name = "vdd_2v0_pldo_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <2000000>;
++				};
++			};
++
++			vcc_3v3_s3: dcdc-reg8 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <3300000>;
++				regulator-min-microvolt = <3300000>;
++				regulator-name = "vcc_3v3_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vddq_ddr_s0: dcdc-reg9 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <600000>;
++				regulator-min-microvolt = <600000>;
++				regulator-name = "vddq_ddr_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_1v8_s3: dcdc-reg10 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <1800000>;
++				regulator-min-microvolt = <1800000>;
++				regulator-name = "vcc_1v8_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vcc_1v8_s0: pldo-reg1 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <1800000>;
++				regulator-min-microvolt = <1800000>;
++				regulator-name = "vcc_1v8_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcca_1v8_s0: pldo-reg2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <1800000>;
++				regulator-min-microvolt = <1800000>;
++				regulator-name = "vcca_1v8_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vdda_1v2_s0: pldo-reg3 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <1200000>;
++				regulator-min-microvolt = <1200000>;
++				regulator-name = "vdda_1v2_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcca_3v3_s0: pldo-reg4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <3300000>;
++				regulator-min-microvolt = <3300000>;
++				regulator-name = "vcca_3v3_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_sd_s0: pldo-reg5 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <3300000>;
++				regulator-min-microvolt = <1800000>;
++				regulator-name = "vccio_sd_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_1v8_s3_pldo6: pldo-reg6 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <1800000>;
++				regulator-min-microvolt = <1800000>;
++				regulator-name = "vcc_1v8_s3_pldo6";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vdd_0v75_s3: nldo-reg1 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <750000>;
++				regulator-min-microvolt = <750000>;
++				regulator-name = "vdd_0v75_s3";
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <750000>;
++				};
++			};
++
++			vdda_ddr_pll_s0: nldo-reg2 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <850000>;
++				regulator-min-microvolt = <850000>;
++				regulator-name = "vdda_ddr_pll_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <850000>;
++				};
++			};
++
++			avdd_0v75_s0: nldo-reg3 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <750000>;
++				regulator-min-microvolt = <750000>;
++				regulator-name = "avdd_0v75_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdda_0v85_s0: nldo-reg4 {
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <850000>;
++				regulator-max-microvolt = <850000>;
++				regulator-name = "vdda_0v85_s0";
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			/* Schematics show not in use */
++			nldo-reg5 {
++			};
++		};
++	};
++};
++
++&tsadc {
++	status = "okay";
++};
++
++&uart2 {
++	pinctrl-0 = <&uart2m0_xfer>;
++	status = "okay";
++};
++
++/* DMA seems to interfere with bluetooth device normal operation. */
++&uart9 {
++	pinctrl-0 = <&uart9m2_xfer>, <&uart9m2_ctsn>, <&uart9m2_rtsn>;
++	pinctrl-names = "default";
++	/delete-property/ dma-names;
++	/delete-property/ dmas;
++	uart-has-rtscts;
++	status = "okay";
++
++	bluetooth {
++		compatible = "realtek,rtl8821cs-bt",
++			     "realtek,rtl8723bs-bt";
++		device-wake-gpios = <&gpio0 RK_PC6 GPIO_ACTIVE_HIGH>;
++		enable-gpios = <&gpio0 RK_PD4 GPIO_ACTIVE_HIGH>;
++		host-wake-gpios = <&gpio0 RK_PC5 GPIO_ACTIVE_HIGH>;
++		pinctrl-0 = <&bt_reset>, <&bt_wake_dev>, <&bt_wake_host>;
++		pinctrl-names = "default";
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/390-PM-devfreq-rockchip-dfi-Embed-desc-into-private-data.patch b/target/linux/rockchip/patches-6.1/390-PM-devfreq-rockchip-dfi-Embed-desc-into-private-data.patch
new file mode 100644
index 0000000000..cb3b814be1
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/390-PM-devfreq-rockchip-dfi-Embed-desc-into-private-data.patch
@@ -0,0 +1,43 @@
+From daaf4f20581337c3635e74b3ef63dff4ef5a497c Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:30 +0200
+Subject: [PATCH 390/414] PM / devfreq: rockchip-dfi: Embed desc into private
+ data struct
+
+No need for an extra allocation, just embed the struct
+devfreq_event_desc into the private data struct.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 8 ++------
+ 1 file changed, 2 insertions(+), 6 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -49,7 +49,7 @@ struct dmc_usage {
+  */
+ struct rockchip_dfi {
+ 	struct devfreq_event_dev *edev;
+-	struct devfreq_event_desc *desc;
++	struct devfreq_event_desc desc;
+ 	struct dmc_usage ch_usage[RK3399_DMC_NUM_CH];
+ 	struct device *dev;
+ 	void __iomem *regs;
+@@ -204,14 +204,10 @@ static int rockchip_dfi_probe(struct pla
+ 
+ 	data->dev = dev;
+ 
+-	desc = devm_kzalloc(dev, sizeof(*desc), GFP_KERNEL);
+-	if (!desc)
+-		return -ENOMEM;
+-
++	desc = &data->desc;
+ 	desc->ops = &rockchip_dfi_ops;
+ 	desc->driver_data = data;
+ 	desc->name = np->name;
+-	data->desc = desc;
+ 
+ 	data->edev = devm_devfreq_event_add_edev(&pdev->dev, desc);
+ 	if (IS_ERR(data->edev)) {
diff --git a/target/linux/rockchip/patches-6.1/391-PM-devfreq-rockchip-dfi-use-consistent-name-for-priv.patch b/target/linux/rockchip/patches-6.1/391-PM-devfreq-rockchip-dfi-use-consistent-name-for-priv.patch
new file mode 100644
index 0000000000..46c6f07a3b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/391-PM-devfreq-rockchip-dfi-use-consistent-name-for-priv.patch
@@ -0,0 +1,182 @@
+From 6942ca2cdc0a11277b9329dc0cc4ebc26213a490 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:31 +0200
+Subject: [PATCH 391/414] PM / devfreq: rockchip-dfi: use consistent name for
+ private data struct
+
+The variable name for the private data struct is 'info' in some
+functions and 'data' in others. Both names do not give a clue what
+type the variable has, so consistently use 'dfi'.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 72 ++++++++++++++--------------
+ 1 file changed, 36 insertions(+), 36 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -59,13 +59,13 @@ struct rockchip_dfi {
+ 
+ static void rockchip_dfi_start_hardware_counter(struct devfreq_event_dev *edev)
+ {
+-	struct rockchip_dfi *info = devfreq_event_get_drvdata(edev);
+-	void __iomem *dfi_regs = info->regs;
++	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
++	void __iomem *dfi_regs = dfi->regs;
+ 	u32 val;
+ 	u32 ddr_type;
+ 
+ 	/* get ddr type */
+-	regmap_read(info->regmap_pmu, RK3399_PMUGRF_OS_REG2, &val);
++	regmap_read(dfi->regmap_pmu, RK3399_PMUGRF_OS_REG2, &val);
+ 	ddr_type = (val >> RK3399_PMUGRF_DDRTYPE_SHIFT) &
+ 		    RK3399_PMUGRF_DDRTYPE_MASK;
+ 
+@@ -84,28 +84,28 @@ static void rockchip_dfi_start_hardware_
+ 
+ static void rockchip_dfi_stop_hardware_counter(struct devfreq_event_dev *edev)
+ {
+-	struct rockchip_dfi *info = devfreq_event_get_drvdata(edev);
+-	void __iomem *dfi_regs = info->regs;
++	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
++	void __iomem *dfi_regs = dfi->regs;
+ 
+ 	writel_relaxed(SOFTWARE_DIS, dfi_regs + DDRMON_CTRL);
+ }
+ 
+ static int rockchip_dfi_get_busier_ch(struct devfreq_event_dev *edev)
+ {
+-	struct rockchip_dfi *info = devfreq_event_get_drvdata(edev);
++	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 	u32 tmp, max = 0;
+ 	u32 i, busier_ch = 0;
+-	void __iomem *dfi_regs = info->regs;
++	void __iomem *dfi_regs = dfi->regs;
+ 
+ 	rockchip_dfi_stop_hardware_counter(edev);
+ 
+ 	/* Find out which channel is busier */
+ 	for (i = 0; i < RK3399_DMC_NUM_CH; i++) {
+-		info->ch_usage[i].access = readl_relaxed(dfi_regs +
++		dfi->ch_usage[i].access = readl_relaxed(dfi_regs +
+ 				DDRMON_CH0_DFI_ACCESS_NUM + i * 20) * 4;
+-		info->ch_usage[i].total = readl_relaxed(dfi_regs +
++		dfi->ch_usage[i].total = readl_relaxed(dfi_regs +
+ 				DDRMON_CH0_COUNT_NUM + i * 20);
+-		tmp = info->ch_usage[i].access;
++		tmp = dfi->ch_usage[i].access;
+ 		if (tmp > max) {
+ 			busier_ch = i;
+ 			max = tmp;
+@@ -118,20 +118,20 @@ static int rockchip_dfi_get_busier_ch(st
+ 
+ static int rockchip_dfi_disable(struct devfreq_event_dev *edev)
+ {
+-	struct rockchip_dfi *info = devfreq_event_get_drvdata(edev);
++	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 
+ 	rockchip_dfi_stop_hardware_counter(edev);
+-	clk_disable_unprepare(info->clk);
++	clk_disable_unprepare(dfi->clk);
+ 
+ 	return 0;
+ }
+ 
+ static int rockchip_dfi_enable(struct devfreq_event_dev *edev)
+ {
+-	struct rockchip_dfi *info = devfreq_event_get_drvdata(edev);
++	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 	int ret;
+ 
+-	ret = clk_prepare_enable(info->clk);
++	ret = clk_prepare_enable(dfi->clk);
+ 	if (ret) {
+ 		dev_err(&edev->dev, "failed to enable dfi clk: %d\n", ret);
+ 		return ret;
+@@ -149,13 +149,13 @@ static int rockchip_dfi_set_event(struct
+ static int rockchip_dfi_get_event(struct devfreq_event_dev *edev,
+ 				  struct devfreq_event_data *edata)
+ {
+-	struct rockchip_dfi *info = devfreq_event_get_drvdata(edev);
++	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 	int busier_ch;
+ 
+ 	busier_ch = rockchip_dfi_get_busier_ch(edev);
+ 
+-	edata->load_count = info->ch_usage[busier_ch].access;
+-	edata->total_count = info->ch_usage[busier_ch].total;
++	edata->load_count = dfi->ch_usage[busier_ch].access;
++	edata->total_count = dfi->ch_usage[busier_ch].total;
+ 
+ 	return 0;
+ }
+@@ -176,47 +176,47 @@ MODULE_DEVICE_TABLE(of, rockchip_dfi_id_
+ static int rockchip_dfi_probe(struct platform_device *pdev)
+ {
+ 	struct device *dev = &pdev->dev;
+-	struct rockchip_dfi *data;
++	struct rockchip_dfi *dfi;
+ 	struct devfreq_event_desc *desc;
+ 	struct device_node *np = pdev->dev.of_node, *node;
+ 
+-	data = devm_kzalloc(dev, sizeof(struct rockchip_dfi), GFP_KERNEL);
+-	if (!data)
++	dfi = devm_kzalloc(dev, sizeof(*dfi), GFP_KERNEL);
++	if (!dfi)
+ 		return -ENOMEM;
+ 
+-	data->regs = devm_platform_ioremap_resource(pdev, 0);
+-	if (IS_ERR(data->regs))
+-		return PTR_ERR(data->regs);
+-
+-	data->clk = devm_clk_get(dev, "pclk_ddr_mon");
+-	if (IS_ERR(data->clk))
+-		return dev_err_probe(dev, PTR_ERR(data->clk),
++	dfi->regs = devm_platform_ioremap_resource(pdev, 0);
++	if (IS_ERR(dfi->regs))
++		return PTR_ERR(dfi->regs);
++
++	dfi->clk = devm_clk_get(dev, "pclk_ddr_mon");
++	if (IS_ERR(dfi->clk))
++		return dev_err_probe(dev, PTR_ERR(dfi->clk),
+ 				     "Cannot get the clk pclk_ddr_mon\n");
+ 
+ 	node = of_parse_phandle(np, "rockchip,pmu", 0);
+ 	if (!node)
+ 		return dev_err_probe(&pdev->dev, -ENODEV, "Can't find pmu_grf registers\n");
+ 
+-	data->regmap_pmu = syscon_node_to_regmap(node);
++	dfi->regmap_pmu = syscon_node_to_regmap(node);
+ 	of_node_put(node);
+-	if (IS_ERR(data->regmap_pmu))
+-		return PTR_ERR(data->regmap_pmu);
++	if (IS_ERR(dfi->regmap_pmu))
++		return PTR_ERR(dfi->regmap_pmu);
+ 
+-	data->dev = dev;
++	dfi->dev = dev;
+ 
+-	desc = &data->desc;
++	desc = &dfi->desc;
+ 	desc->ops = &rockchip_dfi_ops;
+-	desc->driver_data = data;
++	desc->driver_data = dfi;
+ 	desc->name = np->name;
+ 
+-	data->edev = devm_devfreq_event_add_edev(&pdev->dev, desc);
+-	if (IS_ERR(data->edev)) {
++	dfi->edev = devm_devfreq_event_add_edev(&pdev->dev, desc);
++	if (IS_ERR(dfi->edev)) {
+ 		dev_err(&pdev->dev,
+ 			"failed to add devfreq-event device\n");
+-		return PTR_ERR(data->edev);
++		return PTR_ERR(dfi->edev);
+ 	}
+ 
+-	platform_set_drvdata(pdev, data);
++	platform_set_drvdata(pdev, dfi);
+ 
+ 	return 0;
+ }
diff --git a/target/linux/rockchip/patches-6.1/392-PM-devfreq-rockchip-dfi-Add-SoC-specific-init-functi.patch b/target/linux/rockchip/patches-6.1/392-PM-devfreq-rockchip-dfi-Add-SoC-specific-init-functi.patch
new file mode 100644
index 0000000000..7aeeab9424
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/392-PM-devfreq-rockchip-dfi-Add-SoC-specific-init-functi.patch
@@ -0,0 +1,119 @@
+From 584df97ad3faf621edd820541b131d66a5cf5e83 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:32 +0200
+Subject: [PATCH 392/414] PM / devfreq: rockchip-dfi: Add SoC specific init
+ function
+
+Move the RK3399 specifics to a SoC specific init function to make
+the way free for supporting other SoCs later.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 48 +++++++++++++++++++---------
+ 1 file changed, 33 insertions(+), 15 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -17,6 +17,7 @@
+ #include <linux/slab.h>
+ #include <linux/list.h>
+ #include <linux/of.h>
++#include <linux/of_device.h>
+ 
+ #include <soc/rockchip/rk3399_grf.h>
+ 
+@@ -55,27 +56,21 @@ struct rockchip_dfi {
+ 	void __iomem *regs;
+ 	struct regmap *regmap_pmu;
+ 	struct clk *clk;
++	u32 ddr_type;
+ };
+ 
+ static void rockchip_dfi_start_hardware_counter(struct devfreq_event_dev *edev)
+ {
+ 	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 	void __iomem *dfi_regs = dfi->regs;
+-	u32 val;
+-	u32 ddr_type;
+-
+-	/* get ddr type */
+-	regmap_read(dfi->regmap_pmu, RK3399_PMUGRF_OS_REG2, &val);
+-	ddr_type = (val >> RK3399_PMUGRF_DDRTYPE_SHIFT) &
+-		    RK3399_PMUGRF_DDRTYPE_MASK;
+ 
+ 	/* clear DDRMON_CTRL setting */
+ 	writel_relaxed(CLR_DDRMON_CTRL, dfi_regs + DDRMON_CTRL);
+ 
+ 	/* set ddr type to dfi */
+-	if (ddr_type == RK3399_PMUGRF_DDRTYPE_LPDDR3)
++	if (dfi->ddr_type == RK3399_PMUGRF_DDRTYPE_LPDDR3)
+ 		writel_relaxed(LPDDR3_EN, dfi_regs + DDRMON_CTRL);
+-	else if (ddr_type == RK3399_PMUGRF_DDRTYPE_LPDDR4)
++	else if (dfi->ddr_type == RK3399_PMUGRF_DDRTYPE_LPDDR4)
+ 		writel_relaxed(LPDDR4_EN, dfi_regs + DDRMON_CTRL);
+ 
+ 	/* enable count, use software mode */
+@@ -167,8 +162,26 @@ static const struct devfreq_event_ops ro
+ 	.set_event = rockchip_dfi_set_event,
+ };
+ 
++static int rk3399_dfi_init(struct rockchip_dfi *dfi)
++{
++	struct regmap *regmap_pmu = dfi->regmap_pmu;
++	u32 val;
++
++	dfi->clk = devm_clk_get(dfi->dev, "pclk_ddr_mon");
++	if (IS_ERR(dfi->clk))
++		return dev_err_probe(dfi->dev, PTR_ERR(dfi->clk),
++				     "Cannot get the clk pclk_ddr_mon\n");
++
++	/* get ddr type */
++	regmap_read(regmap_pmu, RK3399_PMUGRF_OS_REG2, &val);
++	dfi->ddr_type = (val >> RK3399_PMUGRF_DDRTYPE_SHIFT) &
++			RK3399_PMUGRF_DDRTYPE_MASK;
++
++	return 0;
++};
++
+ static const struct of_device_id rockchip_dfi_id_match[] = {
+-	{ .compatible = "rockchip,rk3399-dfi" },
++	{ .compatible = "rockchip,rk3399-dfi", .data = rk3399_dfi_init },
+ 	{ },
+ };
+ MODULE_DEVICE_TABLE(of, rockchip_dfi_id_match);
+@@ -179,6 +192,12 @@ static int rockchip_dfi_probe(struct pla
+ 	struct rockchip_dfi *dfi;
+ 	struct devfreq_event_desc *desc;
+ 	struct device_node *np = pdev->dev.of_node, *node;
++	int (*soc_init)(struct rockchip_dfi *dfi);
++	int ret;
++
++	soc_init = of_device_get_match_data(&pdev->dev);
++	if (!soc_init)
++		return -EINVAL;
+ 
+ 	dfi = devm_kzalloc(dev, sizeof(*dfi), GFP_KERNEL);
+ 	if (!dfi)
+@@ -188,11 +207,6 @@ static int rockchip_dfi_probe(struct pla
+ 	if (IS_ERR(dfi->regs))
+ 		return PTR_ERR(dfi->regs);
+ 
+-	dfi->clk = devm_clk_get(dev, "pclk_ddr_mon");
+-	if (IS_ERR(dfi->clk))
+-		return dev_err_probe(dev, PTR_ERR(dfi->clk),
+-				     "Cannot get the clk pclk_ddr_mon\n");
+-
+ 	node = of_parse_phandle(np, "rockchip,pmu", 0);
+ 	if (!node)
+ 		return dev_err_probe(&pdev->dev, -ENODEV, "Can't find pmu_grf registers\n");
+@@ -209,6 +223,10 @@ static int rockchip_dfi_probe(struct pla
+ 	desc->driver_data = dfi;
+ 	desc->name = np->name;
+ 
++	ret = soc_init(dfi);
++	if (ret)
++		return ret;
++
+ 	dfi->edev = devm_devfreq_event_add_edev(&pdev->dev, desc);
+ 	if (IS_ERR(dfi->edev)) {
+ 		dev_err(&pdev->dev,
diff --git a/target/linux/rockchip/patches-6.1/393-PM-devfreq-rockchip-dfi-dfi-store-raw-values-in-coun.patch b/target/linux/rockchip/patches-6.1/393-PM-devfreq-rockchip-dfi-dfi-store-raw-values-in-coun.patch
new file mode 100644
index 0000000000..a6a152e51b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/393-PM-devfreq-rockchip-dfi-dfi-store-raw-values-in-coun.patch
@@ -0,0 +1,36 @@
+From d019e53c06c97c9dba462ad5ea691579c4a38c8a Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:33 +0200
+Subject: [PATCH 393/414] PM / devfreq: rockchip-dfi: dfi store raw values in
+ counter struct
+
+When adding perf support to the DFI driver the perf part will
+need the raw counter values, so move the fixed * 4 factor to
+rockchip_dfi_get_event().
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -97,7 +97,7 @@ static int rockchip_dfi_get_busier_ch(st
+ 	/* Find out which channel is busier */
+ 	for (i = 0; i < RK3399_DMC_NUM_CH; i++) {
+ 		dfi->ch_usage[i].access = readl_relaxed(dfi_regs +
+-				DDRMON_CH0_DFI_ACCESS_NUM + i * 20) * 4;
++				DDRMON_CH0_DFI_ACCESS_NUM + i * 20);
+ 		dfi->ch_usage[i].total = readl_relaxed(dfi_regs +
+ 				DDRMON_CH0_COUNT_NUM + i * 20);
+ 		tmp = dfi->ch_usage[i].access;
+@@ -149,7 +149,7 @@ static int rockchip_dfi_get_event(struct
+ 
+ 	busier_ch = rockchip_dfi_get_busier_ch(edev);
+ 
+-	edata->load_count = dfi->ch_usage[busier_ch].access;
++	edata->load_count = dfi->ch_usage[busier_ch].access * 4;
+ 	edata->total_count = dfi->ch_usage[busier_ch].total;
+ 
+ 	return 0;
diff --git a/target/linux/rockchip/patches-6.1/394-PM-devfreq-rockchip-dfi-Use-free-running-counter.patch b/target/linux/rockchip/patches-6.1/394-PM-devfreq-rockchip-dfi-Use-free-running-counter.patch
new file mode 100644
index 0000000000..c7a0b0f736
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/394-PM-devfreq-rockchip-dfi-Use-free-running-counter.patch
@@ -0,0 +1,122 @@
+From 28dc17d0ca6eab000fa477c7143fe5c65d2423e8 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:34 +0200
+Subject: [PATCH 394/414] PM / devfreq: rockchip-dfi: Use free running counter
+
+The DDR_MON counters are free running counters. These are resetted to 0
+when starting them over like currently done when reading the current
+counter values.
+
+Resetting the counters becomes a problem with perf support we want to
+add later, because perf needs counters that are not modified elsewhere.
+
+This patch removes resetting the counters and keeps them running
+instead. That means we no longer use the absolute counter values but
+instead compare them with the counter values we read last time. Not
+stopping the counters also has the impact that they are running while
+we are reading them. We cannot read multiple timers atomically, so
+the values do not exactly fit together. The effect should be negligible
+though as the time between two measurements is some orders of magnitude
+bigger than the time we need to read multiple registers.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 52 ++++++++++++++++------------
+ 1 file changed, 30 insertions(+), 22 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -38,11 +38,15 @@
+ #define DDRMON_CH1_COUNT_NUM		0x3c
+ #define DDRMON_CH1_DFI_ACCESS_NUM	0x40
+ 
+-struct dmc_usage {
++struct dmc_count_channel {
+ 	u32 access;
+ 	u32 total;
+ };
+ 
++struct dmc_count {
++	struct dmc_count_channel c[RK3399_DMC_NUM_CH];
++};
++
+ /*
+  * The dfi controller can monitor DDR load. It has an upper and lower threshold
+  * for the operating points. Whenever the usage leaves these bounds an event is
+@@ -51,7 +55,7 @@ struct dmc_usage {
+ struct rockchip_dfi {
+ 	struct devfreq_event_dev *edev;
+ 	struct devfreq_event_desc desc;
+-	struct dmc_usage ch_usage[RK3399_DMC_NUM_CH];
++	struct dmc_count last_event_count;
+ 	struct device *dev;
+ 	void __iomem *regs;
+ 	struct regmap *regmap_pmu;
+@@ -85,30 +89,18 @@ static void rockchip_dfi_stop_hardware_c
+ 	writel_relaxed(SOFTWARE_DIS, dfi_regs + DDRMON_CTRL);
+ }
+ 
+-static int rockchip_dfi_get_busier_ch(struct devfreq_event_dev *edev)
++static void rockchip_dfi_read_counters(struct devfreq_event_dev *edev, struct dmc_count *count)
+ {
+ 	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+-	u32 tmp, max = 0;
+-	u32 i, busier_ch = 0;
++	u32 i;
+ 	void __iomem *dfi_regs = dfi->regs;
+ 
+-	rockchip_dfi_stop_hardware_counter(edev);
+-
+-	/* Find out which channel is busier */
+ 	for (i = 0; i < RK3399_DMC_NUM_CH; i++) {
+-		dfi->ch_usage[i].access = readl_relaxed(dfi_regs +
++		count->c[i].access = readl_relaxed(dfi_regs +
+ 				DDRMON_CH0_DFI_ACCESS_NUM + i * 20);
+-		dfi->ch_usage[i].total = readl_relaxed(dfi_regs +
++		count->c[i].total = readl_relaxed(dfi_regs +
+ 				DDRMON_CH0_COUNT_NUM + i * 20);
+-		tmp = dfi->ch_usage[i].access;
+-		if (tmp > max) {
+-			busier_ch = i;
+-			max = tmp;
+-		}
+ 	}
+-	rockchip_dfi_start_hardware_counter(edev);
+-
+-	return busier_ch;
+ }
+ 
+ static int rockchip_dfi_disable(struct devfreq_event_dev *edev)
+@@ -145,12 +137,28 @@ static int rockchip_dfi_get_event(struct
+ 				  struct devfreq_event_data *edata)
+ {
+ 	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+-	int busier_ch;
++	struct dmc_count count;
++	struct dmc_count *last = &dfi->last_event_count;
++	u32 access = 0, total = 0;
++	int i;
++
++	rockchip_dfi_read_counters(edev, &count);
++
++	/* We can only report one channel, so find the busiest one */
++	for (i = 0; i < RK3399_DMC_NUM_CH; i++) {
++		u32 a = count.c[i].access - last->c[i].access;
++		u32 t = count.c[i].total - last->c[i].total;
++
++		if (a > access) {
++			access = a;
++			total = t;
++		}
++	}
+ 
+-	busier_ch = rockchip_dfi_get_busier_ch(edev);
++	edata->load_count = access * 4;
++	edata->total_count = total;
+ 
+-	edata->load_count = dfi->ch_usage[busier_ch].access * 4;
+-	edata->total_count = dfi->ch_usage[busier_ch].total;
++	dfi->last_event_count = count;
+ 
+ 	return 0;
+ }
diff --git a/target/linux/rockchip/patches-6.1/395-PM-devfreq-rockchip-dfi-introduce-channel-mask.patch b/target/linux/rockchip/patches-6.1/395-PM-devfreq-rockchip-dfi-introduce-channel-mask.patch
new file mode 100644
index 0000000000..d4a10d8ccb
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/395-PM-devfreq-rockchip-dfi-introduce-channel-mask.patch
@@ -0,0 +1,84 @@
+From b08008c9f4396787040a48561b908c8acc82c349 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:35 +0200
+Subject: [PATCH 395/414] PM / devfreq: rockchip-dfi: introduce channel mask
+
+Different Rockchip SoC variants have a different number of channels.
+Introduce a channel mask to make the number of channels configurable
+from SoC initialization code.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 23 +++++++++++++++++------
+ 1 file changed, 17 insertions(+), 6 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -18,10 +18,11 @@
+ #include <linux/list.h>
+ #include <linux/of.h>
+ #include <linux/of_device.h>
++#include <linux/bits.h>
+ 
+ #include <soc/rockchip/rk3399_grf.h>
+ 
+-#define RK3399_DMC_NUM_CH	2
++#define DMC_MAX_CHANNELS	2
+ 
+ /* DDRMON_CTRL */
+ #define DDRMON_CTRL	0x04
+@@ -44,7 +45,7 @@ struct dmc_count_channel {
+ };
+ 
+ struct dmc_count {
+-	struct dmc_count_channel c[RK3399_DMC_NUM_CH];
++	struct dmc_count_channel c[DMC_MAX_CHANNELS];
+ };
+ 
+ /*
+@@ -61,6 +62,7 @@ struct rockchip_dfi {
+ 	struct regmap *regmap_pmu;
+ 	struct clk *clk;
+ 	u32 ddr_type;
++	unsigned int channel_mask;
+ };
+ 
+ static void rockchip_dfi_start_hardware_counter(struct devfreq_event_dev *edev)
+@@ -95,7 +97,9 @@ static void rockchip_dfi_read_counters(s
+ 	u32 i;
+ 	void __iomem *dfi_regs = dfi->regs;
+ 
+-	for (i = 0; i < RK3399_DMC_NUM_CH; i++) {
++	for (i = 0; i < DMC_MAX_CHANNELS; i++) {
++		if (!(dfi->channel_mask & BIT(i)))
++			continue;
+ 		count->c[i].access = readl_relaxed(dfi_regs +
+ 				DDRMON_CH0_DFI_ACCESS_NUM + i * 20);
+ 		count->c[i].total = readl_relaxed(dfi_regs +
+@@ -145,9 +149,14 @@ static int rockchip_dfi_get_event(struct
+ 	rockchip_dfi_read_counters(edev, &count);
+ 
+ 	/* We can only report one channel, so find the busiest one */
+-	for (i = 0; i < RK3399_DMC_NUM_CH; i++) {
+-		u32 a = count.c[i].access - last->c[i].access;
+-		u32 t = count.c[i].total - last->c[i].total;
++	for (i = 0; i < DMC_MAX_CHANNELS; i++) {
++		u32 a, t;
++
++		if (!(dfi->channel_mask & BIT(i)))
++			continue;
++
++		a = count.c[i].access - last->c[i].access;
++		t = count.c[i].total - last->c[i].total;
+ 
+ 		if (a > access) {
+ 			access = a;
+@@ -185,6 +194,8 @@ static int rk3399_dfi_init(struct rockch
+ 	dfi->ddr_type = (val >> RK3399_PMUGRF_DDRTYPE_SHIFT) &
+ 			RK3399_PMUGRF_DDRTYPE_MASK;
+ 
++	dfi->channel_mask = GENMASK(1, 0);
++
+ 	return 0;
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/396-PM-devfreq-rk3399_dmc-dfi-generalize-DDRTYPE-defines.patch b/target/linux/rockchip/patches-6.1/396-PM-devfreq-rk3399_dmc-dfi-generalize-DDRTYPE-defines.patch
new file mode 100644
index 0000000000..48b298481d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/396-PM-devfreq-rk3399_dmc-dfi-generalize-DDRTYPE-defines.patch
@@ -0,0 +1,124 @@
+From 71dd420de9dd4ed9e1830a97d7d05b9d241b71fe Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:36 +0200
+Subject: [PATCH 396/414] PM / devfreq: rk3399_dmc,dfi: generalize DDRTYPE
+ defines
+
+The DDRTYPE defines are named to be RK3399 specific, but they can be
+used for other Rockchip SoCs as well, so replace the RK3399_PMUGRF_
+prefix with ROCKCHIP_. They are defined in a SoC specific header
+file, so when generalizing the prefix also move the new defines to
+a SoC agnostic header file. While at it use GENMASK to define the
+DDRTYPE bitfield and give it a name including the full register name.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ drivers/devfreq/event/rockchip-dfi.c |  9 +++++----
+ drivers/devfreq/rk3399_dmc.c         | 10 +++++-----
+ include/soc/rockchip/rk3399_grf.h    |  7 +------
+ include/soc/rockchip/rockchip_grf.h  | 17 +++++++++++++++++
+ 4 files changed, 28 insertions(+), 15 deletions(-)
+ create mode 100644 include/soc/rockchip/rockchip_grf.h
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -18,8 +18,10 @@
+ #include <linux/list.h>
+ #include <linux/of.h>
+ #include <linux/of_device.h>
++#include <linux/bitfield.h>
+ #include <linux/bits.h>
+ 
++#include <soc/rockchip/rockchip_grf.h>
+ #include <soc/rockchip/rk3399_grf.h>
+ 
+ #define DMC_MAX_CHANNELS	2
+@@ -74,9 +76,9 @@ static void rockchip_dfi_start_hardware_
+ 	writel_relaxed(CLR_DDRMON_CTRL, dfi_regs + DDRMON_CTRL);
+ 
+ 	/* set ddr type to dfi */
+-	if (dfi->ddr_type == RK3399_PMUGRF_DDRTYPE_LPDDR3)
++	if (dfi->ddr_type == ROCKCHIP_DDRTYPE_LPDDR3)
+ 		writel_relaxed(LPDDR3_EN, dfi_regs + DDRMON_CTRL);
+-	else if (dfi->ddr_type == RK3399_PMUGRF_DDRTYPE_LPDDR4)
++	else if (dfi->ddr_type == ROCKCHIP_DDRTYPE_LPDDR4)
+ 		writel_relaxed(LPDDR4_EN, dfi_regs + DDRMON_CTRL);
+ 
+ 	/* enable count, use software mode */
+@@ -191,8 +193,7 @@ static int rk3399_dfi_init(struct rockch
+ 
+ 	/* get ddr type */
+ 	regmap_read(regmap_pmu, RK3399_PMUGRF_OS_REG2, &val);
+-	dfi->ddr_type = (val >> RK3399_PMUGRF_DDRTYPE_SHIFT) &
+-			RK3399_PMUGRF_DDRTYPE_MASK;
++	dfi->ddr_type = FIELD_GET(RK3399_PMUGRF_OS_REG2_DDRTYPE, val);
+ 
+ 	dfi->channel_mask = GENMASK(1, 0);
+ 
+--- a/drivers/devfreq/rk3399_dmc.c
++++ b/drivers/devfreq/rk3399_dmc.c
+@@ -22,6 +22,7 @@
+ #include <linux/suspend.h>
+ 
+ #include <soc/rockchip/pm_domains.h>
++#include <soc/rockchip/rockchip_grf.h>
+ #include <soc/rockchip/rk3399_grf.h>
+ #include <soc/rockchip/rockchip_sip.h>
+ 
+@@ -381,17 +382,16 @@ static int rk3399_dmcfreq_probe(struct p
+ 	}
+ 
+ 	regmap_read(data->regmap_pmu, RK3399_PMUGRF_OS_REG2, &val);
+-	ddr_type = (val >> RK3399_PMUGRF_DDRTYPE_SHIFT) &
+-		    RK3399_PMUGRF_DDRTYPE_MASK;
++	ddr_type = FIELD_GET(RK3399_PMUGRF_OS_REG2_DDRTYPE, val);
+ 
+ 	switch (ddr_type) {
+-	case RK3399_PMUGRF_DDRTYPE_DDR3:
++	case ROCKCHIP_DDRTYPE_DDR3:
+ 		data->odt_dis_freq = data->ddr3_odt_dis_freq;
+ 		break;
+-	case RK3399_PMUGRF_DDRTYPE_LPDDR3:
++	case ROCKCHIP_DDRTYPE_LPDDR3:
+ 		data->odt_dis_freq = data->lpddr3_odt_dis_freq;
+ 		break;
+-	case RK3399_PMUGRF_DDRTYPE_LPDDR4:
++	case ROCKCHIP_DDRTYPE_LPDDR4:
+ 		data->odt_dis_freq = data->lpddr4_odt_dis_freq;
+ 		break;
+ 	default:
+--- a/include/soc/rockchip/rk3399_grf.h
++++ b/include/soc/rockchip/rk3399_grf.h
+@@ -11,11 +11,6 @@
+ 
+ /* PMU GRF Registers */
+ #define RK3399_PMUGRF_OS_REG2		0x308
+-#define RK3399_PMUGRF_DDRTYPE_SHIFT	13
+-#define RK3399_PMUGRF_DDRTYPE_MASK	7
+-#define RK3399_PMUGRF_DDRTYPE_DDR3	3
+-#define RK3399_PMUGRF_DDRTYPE_LPDDR2	5
+-#define RK3399_PMUGRF_DDRTYPE_LPDDR3	6
+-#define RK3399_PMUGRF_DDRTYPE_LPDDR4	7
++#define RK3399_PMUGRF_OS_REG2_DDRTYPE		GENMASK(15, 13)
+ 
+ #endif
+--- /dev/null
++++ b/include/soc/rockchip/rockchip_grf.h
+@@ -0,0 +1,17 @@
++/* SPDX-License-Identifier: GPL-2.0+ */
++/*
++ * Rockchip General Register Files definitions
++ */
++
++#ifndef __SOC_ROCKCHIP_GRF_H
++#define __SOC_ROCKCHIP_GRF_H
++
++/* Rockchip DDRTYPE defines */
++enum {
++	ROCKCHIP_DDRTYPE_DDR3	= 3,
++	ROCKCHIP_DDRTYPE_LPDDR2	= 5,
++	ROCKCHIP_DDRTYPE_LPDDR3	= 6,
++	ROCKCHIP_DDRTYPE_LPDDR4	= 7,
++};
++
++#endif /* __SOC_ROCKCHIP_GRF_H */
diff --git a/target/linux/rockchip/patches-6.1/397-PM-devfreq-rockchip-dfi-Clean-up-DDR-type-register-d.patch b/target/linux/rockchip/patches-6.1/397-PM-devfreq-rockchip-dfi-Clean-up-DDR-type-register-d.patch
new file mode 100644
index 0000000000..a277d0f8c4
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/397-PM-devfreq-rockchip-dfi-Clean-up-DDR-type-register-d.patch
@@ -0,0 +1,85 @@
+From 3787ec8983d7210be174eb0bc758029002c448e5 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:37 +0200
+Subject: [PATCH 397/414] PM / devfreq: rockchip-dfi: Clean up DDR type
+ register defines
+
+Use the HIWORD_UPDATE() define known from other rockchip drivers to
+make the defines look less odd to the readers who've seen other
+rockchip drivers.
+
+The HIWORD registers have their functional bits in the lower 16 bits
+whereas the upper 16 bits contain a mask. Only the functional bits that
+have the corresponding mask bit set are modified during a write. Although
+the register writes look different, the end result should be the same,
+at least there's no functional change intended with this patch.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 33 ++++++++++++++++++----------
+ 1 file changed, 21 insertions(+), 12 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -26,15 +26,19 @@
+ 
+ #define DMC_MAX_CHANNELS	2
+ 
++#define HIWORD_UPDATE(val, mask)	((val) | (mask) << 16)
++
+ /* DDRMON_CTRL */
+ #define DDRMON_CTRL	0x04
+-#define CLR_DDRMON_CTRL	(0x1f0000 << 0)
+-#define LPDDR4_EN	(0x10001 << 4)
+-#define HARDWARE_EN	(0x10001 << 3)
+-#define LPDDR3_EN	(0x10001 << 2)
+-#define SOFTWARE_EN	(0x10001 << 1)
+-#define SOFTWARE_DIS	(0x10000 << 1)
+-#define TIME_CNT_EN	(0x10001 << 0)
++#define DDRMON_CTRL_DDR4		BIT(5)
++#define DDRMON_CTRL_LPDDR4		BIT(4)
++#define DDRMON_CTRL_HARDWARE_EN		BIT(3)
++#define DDRMON_CTRL_LPDDR23		BIT(2)
++#define DDRMON_CTRL_SOFTWARE_EN		BIT(1)
++#define DDRMON_CTRL_TIMER_CNT_EN	BIT(0)
++#define DDRMON_CTRL_DDR_TYPE_MASK	(DDRMON_CTRL_DDR4 | \
++					 DDRMON_CTRL_LPDDR4 | \
++					 DDRMON_CTRL_LPDDR23)
+ 
+ #define DDRMON_CH0_COUNT_NUM		0x28
+ #define DDRMON_CH0_DFI_ACCESS_NUM	0x2c
+@@ -73,16 +77,20 @@ static void rockchip_dfi_start_hardware_
+ 	void __iomem *dfi_regs = dfi->regs;
+ 
+ 	/* clear DDRMON_CTRL setting */
+-	writel_relaxed(CLR_DDRMON_CTRL, dfi_regs + DDRMON_CTRL);
++	writel_relaxed(HIWORD_UPDATE(0, DDRMON_CTRL_TIMER_CNT_EN | DDRMON_CTRL_SOFTWARE_EN |
++		       DDRMON_CTRL_HARDWARE_EN), dfi_regs + DDRMON_CTRL);
+ 
+ 	/* set ddr type to dfi */
+ 	if (dfi->ddr_type == ROCKCHIP_DDRTYPE_LPDDR3)
+-		writel_relaxed(LPDDR3_EN, dfi_regs + DDRMON_CTRL);
++		writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_LPDDR23, DDRMON_CTRL_DDR_TYPE_MASK),
++			       dfi_regs + DDRMON_CTRL);
+ 	else if (dfi->ddr_type == ROCKCHIP_DDRTYPE_LPDDR4)
+-		writel_relaxed(LPDDR4_EN, dfi_regs + DDRMON_CTRL);
++		writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_LPDDR4, DDRMON_CTRL_DDR_TYPE_MASK),
++			       dfi_regs + DDRMON_CTRL);
+ 
+ 	/* enable count, use software mode */
+-	writel_relaxed(SOFTWARE_EN, dfi_regs + DDRMON_CTRL);
++	writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_SOFTWARE_EN, DDRMON_CTRL_SOFTWARE_EN),
++		       dfi_regs + DDRMON_CTRL);
+ }
+ 
+ static void rockchip_dfi_stop_hardware_counter(struct devfreq_event_dev *edev)
+@@ -90,7 +98,8 @@ static void rockchip_dfi_stop_hardware_c
+ 	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 	void __iomem *dfi_regs = dfi->regs;
+ 
+-	writel_relaxed(SOFTWARE_DIS, dfi_regs + DDRMON_CTRL);
++	writel_relaxed(HIWORD_UPDATE(0, DDRMON_CTRL_SOFTWARE_EN),
++		       dfi_regs + DDRMON_CTRL);
+ }
+ 
+ static void rockchip_dfi_read_counters(struct devfreq_event_dev *edev, struct dmc_count *count)
diff --git a/target/linux/rockchip/patches-6.1/398-PM-devfreq-rockchip-dfi-Add-RK3568-support.patch b/target/linux/rockchip/patches-6.1/398-PM-devfreq-rockchip-dfi-Add-RK3568-support.patch
new file mode 100644
index 0000000000..f106348a3d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/398-PM-devfreq-rockchip-dfi-Add-RK3568-support.patch
@@ -0,0 +1,71 @@
+From 871f38fefb7142038faa50292215d8e19e8366ca Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:38 +0200
+Subject: [PATCH 398/414] PM / devfreq: rockchip-dfi: Add RK3568 support
+
+This adds RK3568 support to the DFI driver.  Only iniitialization
+differs from the currently supported RK3399.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 21 +++++++++++++++++++++
+ include/soc/rockchip/rk3568_grf.h    | 12 ++++++++++++
+ 2 files changed, 33 insertions(+)
+ create mode 100644 include/soc/rockchip/rk3568_grf.h
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -23,6 +23,7 @@
+ 
+ #include <soc/rockchip/rockchip_grf.h>
+ #include <soc/rockchip/rk3399_grf.h>
++#include <soc/rockchip/rk3568_grf.h>
+ 
+ #define DMC_MAX_CHANNELS	2
+ 
+@@ -209,10 +210,30 @@ static int rk3399_dfi_init(struct rockch
+ 	return 0;
+ };
+ 
++static int rk3568_dfi_init(struct rockchip_dfi *dfi)
++{
++	struct regmap *regmap_pmu = dfi->regmap_pmu;
++	u32 reg2, reg3;
++
++	regmap_read(regmap_pmu, RK3568_PMUGRF_OS_REG2, &reg2);
++	regmap_read(regmap_pmu, RK3568_PMUGRF_OS_REG3, &reg3);
++
++	dfi->ddr_type = FIELD_GET(RK3568_PMUGRF_OS_REG2_DRAMTYPE_INFO, reg2);
++
++	if (FIELD_GET(RK3568_PMUGRF_OS_REG3_SYSREG_VERSION, reg3) >= 0x3)
++		dfi->ddr_type |= FIELD_GET(RK3568_PMUGRF_OS_REG3_DRAMTYPE_INFO_V3, reg3) << 3;
++
++	dfi->channel_mask = 1;
++
++	return 0;
++};
++
+ static const struct of_device_id rockchip_dfi_id_match[] = {
+ 	{ .compatible = "rockchip,rk3399-dfi", .data = rk3399_dfi_init },
++	{ .compatible = "rockchip,rk3568-dfi", .data = rk3568_dfi_init },
+ 	{ },
+ };
++
+ MODULE_DEVICE_TABLE(of, rockchip_dfi_id_match);
+ 
+ static int rockchip_dfi_probe(struct platform_device *pdev)
+--- /dev/null
++++ b/include/soc/rockchip/rk3568_grf.h
+@@ -0,0 +1,12 @@
++/* SPDX-License-Identifier: GPL-2.0+ */
++#ifndef __SOC_RK3568_GRF_H
++#define __SOC_RK3568_GRF_H
++
++#define RK3568_PMUGRF_OS_REG2		0x208
++#define RK3568_PMUGRF_OS_REG2_DRAMTYPE_INFO		GENMASK(15, 13)
++
++#define RK3568_PMUGRF_OS_REG3		0x20c
++#define RK3568_PMUGRF_OS_REG3_DRAMTYPE_INFO_V3		GENMASK(13, 12)
++#define RK3568_PMUGRF_OS_REG3_SYSREG_VERSION		GENMASK(31, 28)
++
++#endif /* __SOC_RK3568_GRF_H */
diff --git a/target/linux/rockchip/patches-6.1/399-PM-devfreq-rockchip-dfi-Handle-LPDDR2-correctly.patch b/target/linux/rockchip/patches-6.1/399-PM-devfreq-rockchip-dfi-Handle-LPDDR2-correctly.patch
new file mode 100644
index 0000000000..7c5e6c080b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/399-PM-devfreq-rockchip-dfi-Handle-LPDDR2-correctly.patch
@@ -0,0 +1,40 @@
+From e0606b7dac4764ef7d7cd07dbb127913a01cf0bb Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:39 +0200
+Subject: [PATCH 399/414] PM / devfreq: rockchip-dfi: Handle LPDDR2 correctly
+
+According to the downstream driver the DDRMON_CTRL_LPDDR23 bit must be
+set for both LPDDR2 and LPDDR3. Add the missing LPDDR2 case and while
+at it turn the if/else if/else into switch/case which makes it easier
+to read.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 11 +++++++++--
+ 1 file changed, 9 insertions(+), 2 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -82,12 +82,19 @@ static void rockchip_dfi_start_hardware_
+ 		       DDRMON_CTRL_HARDWARE_EN), dfi_regs + DDRMON_CTRL);
+ 
+ 	/* set ddr type to dfi */
+-	if (dfi->ddr_type == ROCKCHIP_DDRTYPE_LPDDR3)
++	switch (dfi->ddr_type) {
++	case ROCKCHIP_DDRTYPE_LPDDR2:
++	case ROCKCHIP_DDRTYPE_LPDDR3:
+ 		writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_LPDDR23, DDRMON_CTRL_DDR_TYPE_MASK),
+ 			       dfi_regs + DDRMON_CTRL);
+-	else if (dfi->ddr_type == ROCKCHIP_DDRTYPE_LPDDR4)
++		break;
++	case ROCKCHIP_DDRTYPE_LPDDR4:
+ 		writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_LPDDR4, DDRMON_CTRL_DDR_TYPE_MASK),
+ 			       dfi_regs + DDRMON_CTRL);
++		break;
++	default:
++		break;
++	}
+ 
+ 	/* enable count, use software mode */
+ 	writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_SOFTWARE_EN, DDRMON_CTRL_SOFTWARE_EN),
diff --git a/target/linux/rockchip/patches-6.1/400-PM-devfreq-rockchip-dfi-Handle-LPDDR4X.patch b/target/linux/rockchip/patches-6.1/400-PM-devfreq-rockchip-dfi-Handle-LPDDR4X.patch
new file mode 100644
index 0000000000..76fa42901d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/400-PM-devfreq-rockchip-dfi-Handle-LPDDR4X.patch
@@ -0,0 +1,35 @@
+From 192bbf5cd0c46e1abf02c629e2ea28739b039465 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:40 +0200
+Subject: [PATCH 400/414] PM / devfreq: rockchip-dfi: Handle LPDDR4X
+
+In the DFI driver LPDDR4X can be handled in the same way as LPDDR4. Add
+the missing case.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 1 +
+ include/soc/rockchip/rockchip_grf.h  | 1 +
+ 2 files changed, 2 insertions(+)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -89,6 +89,7 @@ static void rockchip_dfi_start_hardware_
+ 			       dfi_regs + DDRMON_CTRL);
+ 		break;
+ 	case ROCKCHIP_DDRTYPE_LPDDR4:
++	case ROCKCHIP_DDRTYPE_LPDDR4X:
+ 		writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_LPDDR4, DDRMON_CTRL_DDR_TYPE_MASK),
+ 			       dfi_regs + DDRMON_CTRL);
+ 		break;
+--- a/include/soc/rockchip/rockchip_grf.h
++++ b/include/soc/rockchip/rockchip_grf.h
+@@ -12,6 +12,7 @@ enum {
+ 	ROCKCHIP_DDRTYPE_LPDDR2	= 5,
+ 	ROCKCHIP_DDRTYPE_LPDDR3	= 6,
+ 	ROCKCHIP_DDRTYPE_LPDDR4	= 7,
++	ROCKCHIP_DDRTYPE_LPDDR4X = 8,
+ };
+ 
+ #endif /* __SOC_ROCKCHIP_GRF_H */
diff --git a/target/linux/rockchip/patches-6.1/401-PM-devfreq-rockchip-dfi-Pass-private-data-struct-to-.patch b/target/linux/rockchip/patches-6.1/401-PM-devfreq-rockchip-dfi-Pass-private-data-struct-to-.patch
new file mode 100644
index 0000000000..cd879c5979
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/401-PM-devfreq-rockchip-dfi-Pass-private-data-struct-to-.patch
@@ -0,0 +1,77 @@
+From b9b81d118d52e5e673b0fdecaf93adbde0beebd8 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:41 +0200
+Subject: [PATCH 401/414] PM / devfreq: rockchip-dfi: Pass private data struct
+ to internal functions
+
+The internal functions do not need the struct devfreq_event_dev *,
+so pass them the struct rockchip_dfi *. This is a preparation for
+adding perf support later which doesn't have a struct devfreq_event_dev *.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 15 ++++++---------
+ 1 file changed, 6 insertions(+), 9 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -72,9 +72,8 @@ struct rockchip_dfi {
+ 	unsigned int channel_mask;
+ };
+ 
+-static void rockchip_dfi_start_hardware_counter(struct devfreq_event_dev *edev)
++static void rockchip_dfi_start_hardware_counter(struct rockchip_dfi *dfi)
+ {
+-	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 	void __iomem *dfi_regs = dfi->regs;
+ 
+ 	/* clear DDRMON_CTRL setting */
+@@ -102,18 +101,16 @@ static void rockchip_dfi_start_hardware_
+ 		       dfi_regs + DDRMON_CTRL);
+ }
+ 
+-static void rockchip_dfi_stop_hardware_counter(struct devfreq_event_dev *edev)
++static void rockchip_dfi_stop_hardware_counter(struct rockchip_dfi *dfi)
+ {
+-	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 	void __iomem *dfi_regs = dfi->regs;
+ 
+ 	writel_relaxed(HIWORD_UPDATE(0, DDRMON_CTRL_SOFTWARE_EN),
+ 		       dfi_regs + DDRMON_CTRL);
+ }
+ 
+-static void rockchip_dfi_read_counters(struct devfreq_event_dev *edev, struct dmc_count *count)
++static void rockchip_dfi_read_counters(struct rockchip_dfi *dfi, struct dmc_count *count)
+ {
+-	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 	u32 i;
+ 	void __iomem *dfi_regs = dfi->regs;
+ 
+@@ -131,7 +128,7 @@ static int rockchip_dfi_disable(struct d
+ {
+ 	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 
+-	rockchip_dfi_stop_hardware_counter(edev);
++	rockchip_dfi_stop_hardware_counter(dfi);
+ 	clk_disable_unprepare(dfi->clk);
+ 
+ 	return 0;
+@@ -148,7 +145,7 @@ static int rockchip_dfi_enable(struct de
+ 		return ret;
+ 	}
+ 
+-	rockchip_dfi_start_hardware_counter(edev);
++	rockchip_dfi_start_hardware_counter(dfi);
+ 	return 0;
+ }
+ 
+@@ -166,7 +163,7 @@ static int rockchip_dfi_get_event(struct
+ 	u32 access = 0, total = 0;
+ 	int i;
+ 
+-	rockchip_dfi_read_counters(edev, &count);
++	rockchip_dfi_read_counters(dfi, &count);
+ 
+ 	/* We can only report one channel, so find the busiest one */
+ 	for (i = 0; i < DMC_MAX_CHANNELS; i++) {
diff --git a/target/linux/rockchip/patches-6.1/402-PM-devfreq-rockchip-dfi-Prepare-for-multiple-users.patch b/target/linux/rockchip/patches-6.1/402-PM-devfreq-rockchip-dfi-Prepare-for-multiple-users.patch
new file mode 100644
index 0000000000..ee5888811e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/402-PM-devfreq-rockchip-dfi-Prepare-for-multiple-users.patch
@@ -0,0 +1,135 @@
+From 520ab63511920ec641657f8cc6838cc8645b1f08 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:42 +0200
+Subject: [PATCH 402/414] PM / devfreq: rockchip-dfi: Prepare for multiple
+ users
+
+When adding perf support later the DFI must be enabled when
+either of devfreq-event or perf is active. Prepare for that
+by adding a usage counter for the DFI. Also move enabling
+and disabling of the clock away from the devfreq-event specific
+functions to which the perf specific part won't have access.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 57 +++++++++++++++++++---------
+ 1 file changed, 40 insertions(+), 17 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -68,13 +68,28 @@ struct rockchip_dfi {
+ 	void __iomem *regs;
+ 	struct regmap *regmap_pmu;
+ 	struct clk *clk;
++	int usecount;
++	struct mutex mutex;
+ 	u32 ddr_type;
+ 	unsigned int channel_mask;
+ };
+ 
+-static void rockchip_dfi_start_hardware_counter(struct rockchip_dfi *dfi)
++static int rockchip_dfi_enable(struct rockchip_dfi *dfi)
+ {
+ 	void __iomem *dfi_regs = dfi->regs;
++	int ret = 0;
++
++	mutex_lock(&dfi->mutex);
++
++	dfi->usecount++;
++	if (dfi->usecount > 1)
++		goto out;
++
++	ret = clk_prepare_enable(dfi->clk);
++	if (ret) {
++		dev_err(&dfi->edev->dev, "failed to enable dfi clk: %d\n", ret);
++		goto out;
++	}
+ 
+ 	/* clear DDRMON_CTRL setting */
+ 	writel_relaxed(HIWORD_UPDATE(0, DDRMON_CTRL_TIMER_CNT_EN | DDRMON_CTRL_SOFTWARE_EN |
+@@ -99,14 +114,30 @@ static void rockchip_dfi_start_hardware_
+ 	/* enable count, use software mode */
+ 	writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_SOFTWARE_EN, DDRMON_CTRL_SOFTWARE_EN),
+ 		       dfi_regs + DDRMON_CTRL);
++out:
++	mutex_unlock(&dfi->mutex);
++
++	return ret;
+ }
+ 
+-static void rockchip_dfi_stop_hardware_counter(struct rockchip_dfi *dfi)
++static void rockchip_dfi_disable(struct rockchip_dfi *dfi)
+ {
+ 	void __iomem *dfi_regs = dfi->regs;
+ 
++	mutex_lock(&dfi->mutex);
++
++	dfi->usecount--;
++
++	WARN_ON_ONCE(dfi->usecount < 0);
++
++	if (dfi->usecount > 0)
++		goto out;
++
+ 	writel_relaxed(HIWORD_UPDATE(0, DDRMON_CTRL_SOFTWARE_EN),
+ 		       dfi_regs + DDRMON_CTRL);
++	clk_disable_unprepare(dfi->clk);
++out:
++	mutex_unlock(&dfi->mutex);
+ }
+ 
+ static void rockchip_dfi_read_counters(struct rockchip_dfi *dfi, struct dmc_count *count)
+@@ -124,29 +155,20 @@ static void rockchip_dfi_read_counters(s
+ 	}
+ }
+ 
+-static int rockchip_dfi_disable(struct devfreq_event_dev *edev)
++static int rockchip_dfi_event_disable(struct devfreq_event_dev *edev)
+ {
+ 	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 
+-	rockchip_dfi_stop_hardware_counter(dfi);
+-	clk_disable_unprepare(dfi->clk);
++	rockchip_dfi_disable(dfi);
+ 
+ 	return 0;
+ }
+ 
+-static int rockchip_dfi_enable(struct devfreq_event_dev *edev)
++static int rockchip_dfi_event_enable(struct devfreq_event_dev *edev)
+ {
+ 	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+-	int ret;
+ 
+-	ret = clk_prepare_enable(dfi->clk);
+-	if (ret) {
+-		dev_err(&edev->dev, "failed to enable dfi clk: %d\n", ret);
+-		return ret;
+-	}
+-
+-	rockchip_dfi_start_hardware_counter(dfi);
+-	return 0;
++	return rockchip_dfi_enable(dfi);
+ }
+ 
+ static int rockchip_dfi_set_event(struct devfreq_event_dev *edev)
+@@ -190,8 +212,8 @@ static int rockchip_dfi_get_event(struct
+ }
+ 
+ static const struct devfreq_event_ops rockchip_dfi_ops = {
+-	.disable = rockchip_dfi_disable,
+-	.enable = rockchip_dfi_enable,
++	.disable = rockchip_dfi_event_disable,
++	.enable = rockchip_dfi_event_enable,
+ 	.get_event = rockchip_dfi_get_event,
+ 	.set_event = rockchip_dfi_set_event,
+ };
+@@ -272,6 +294,7 @@ static int rockchip_dfi_probe(struct pla
+ 		return PTR_ERR(dfi->regmap_pmu);
+ 
+ 	dfi->dev = dev;
++	mutex_init(&dfi->mutex);
+ 
+ 	desc = &dfi->desc;
+ 	desc->ops = &rockchip_dfi_ops;
diff --git a/target/linux/rockchip/patches-6.1/403-PM-devfreq-rockchip-dfi-give-variable-a-better-name.patch b/target/linux/rockchip/patches-6.1/403-PM-devfreq-rockchip-dfi-give-variable-a-better-name.patch
new file mode 100644
index 0000000000..73d23d16ed
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/403-PM-devfreq-rockchip-dfi-give-variable-a-better-name.patch
@@ -0,0 +1,78 @@
+From 86d650a48df6685ab1d5133a119e3c8cd2d620be Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:43 +0200
+Subject: [PATCH 403/414] PM / devfreq: rockchip-dfi: give variable a better
+ name
+
+struct dmc_count_channel::total counts the clock cycles of the DDR
+controller. Rename it accordingly to give the reader a better idea
+what this is about. While at it, at some documentation to struct
+dmc_count_channel.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 19 ++++++++++++-------
+ 1 file changed, 12 insertions(+), 7 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -46,9 +46,14 @@
+ #define DDRMON_CH1_COUNT_NUM		0x3c
+ #define DDRMON_CH1_DFI_ACCESS_NUM	0x40
+ 
++/**
++ * struct dmc_count_channel - structure to hold counter values from the DDR controller
++ * @access:       Number of read and write accesses
++ * @clock_cycles: DDR clock cycles
++ */
+ struct dmc_count_channel {
+ 	u32 access;
+-	u32 total;
++	u32 clock_cycles;
+ };
+ 
+ struct dmc_count {
+@@ -150,7 +155,7 @@ static void rockchip_dfi_read_counters(s
+ 			continue;
+ 		count->c[i].access = readl_relaxed(dfi_regs +
+ 				DDRMON_CH0_DFI_ACCESS_NUM + i * 20);
+-		count->c[i].total = readl_relaxed(dfi_regs +
++		count->c[i].clock_cycles = readl_relaxed(dfi_regs +
+ 				DDRMON_CH0_COUNT_NUM + i * 20);
+ 	}
+ }
+@@ -182,29 +187,29 @@ static int rockchip_dfi_get_event(struct
+ 	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+ 	struct dmc_count count;
+ 	struct dmc_count *last = &dfi->last_event_count;
+-	u32 access = 0, total = 0;
++	u32 access = 0, clock_cycles = 0;
+ 	int i;
+ 
+ 	rockchip_dfi_read_counters(dfi, &count);
+ 
+ 	/* We can only report one channel, so find the busiest one */
+ 	for (i = 0; i < DMC_MAX_CHANNELS; i++) {
+-		u32 a, t;
++		u32 a, c;
+ 
+ 		if (!(dfi->channel_mask & BIT(i)))
+ 			continue;
+ 
+ 		a = count.c[i].access - last->c[i].access;
+-		t = count.c[i].total - last->c[i].total;
++		c = count.c[i].clock_cycles - last->c[i].clock_cycles;
+ 
+ 		if (a > access) {
+ 			access = a;
+-			total = t;
++			clock_cycles = c;
+ 		}
+ 	}
+ 
+ 	edata->load_count = access * 4;
+-	edata->total_count = total;
++	edata->total_count = clock_cycles;
+ 
+ 	dfi->last_event_count = count;
+ 
diff --git a/target/linux/rockchip/patches-6.1/404-PM-devfreq-rockchip-dfi-Add-perf-support.patch b/target/linux/rockchip/patches-6.1/404-PM-devfreq-rockchip-dfi-Add-perf-support.patch
new file mode 100644
index 0000000000..23fc900430
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/404-PM-devfreq-rockchip-dfi-Add-perf-support.patch
@@ -0,0 +1,593 @@
+From 6c88de2b2d35f01b4f6fb7bcbce3f5c928292133 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:44 +0200
+Subject: [PATCH 404/414] PM / devfreq: rockchip-dfi: Add perf support
+
+The DFI is a unit which is suitable for measuring DDR utilization, but
+so far it could only be used as an event driver for the DDR frequency
+scaling driver. This adds perf support to the DFI driver.
+
+Usage with the 'perf' tool can look like:
+
+perf stat -a -e rockchip_ddr/cycles/,\
+		rockchip_ddr/read-bytes/,\
+		rockchip_ddr/write-bytes/,\
+		rockchip_ddr/bytes/ sleep 1
+
+ Performance counter stats for 'system wide':
+
+        1582524826      rockchip_ddr/cycles/
+           1802.25 MB   rockchip_ddr/read-bytes/
+           1793.72 MB   rockchip_ddr/write-bytes/
+           3595.90 MB   rockchip_ddr/bytes/
+
+       1.014369709 seconds time elapsed
+
+perf support has been tested on a RK3568 and a RK3399, the latter with
+dual channel DDR.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 439 ++++++++++++++++++++++++++-
+ include/soc/rockchip/rk3399_grf.h    |   2 +
+ include/soc/rockchip/rk3568_grf.h    |   1 +
+ 3 files changed, 437 insertions(+), 5 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -16,10 +16,12 @@
+ #include <linux/regmap.h>
+ #include <linux/slab.h>
+ #include <linux/list.h>
++#include <linux/seqlock.h>
+ #include <linux/of.h>
+ #include <linux/of_device.h>
+ #include <linux/bitfield.h>
+ #include <linux/bits.h>
++#include <linux/perf_event.h>
+ 
+ #include <soc/rockchip/rockchip_grf.h>
+ #include <soc/rockchip/rk3399_grf.h>
+@@ -41,19 +43,39 @@
+ 					 DDRMON_CTRL_LPDDR4 | \
+ 					 DDRMON_CTRL_LPDDR23)
+ 
++#define DDRMON_CH0_WR_NUM		0x20
++#define DDRMON_CH0_RD_NUM		0x24
+ #define DDRMON_CH0_COUNT_NUM		0x28
+ #define DDRMON_CH0_DFI_ACCESS_NUM	0x2c
+ #define DDRMON_CH1_COUNT_NUM		0x3c
+ #define DDRMON_CH1_DFI_ACCESS_NUM	0x40
+ 
++#define PERF_EVENT_CYCLES		0x0
++#define PERF_EVENT_READ_BYTES		0x1
++#define PERF_EVENT_WRITE_BYTES		0x2
++#define PERF_EVENT_READ_BYTES0		0x3
++#define PERF_EVENT_WRITE_BYTES0		0x4
++#define PERF_EVENT_READ_BYTES1		0x5
++#define PERF_EVENT_WRITE_BYTES1		0x6
++#define PERF_EVENT_READ_BYTES2		0x7
++#define PERF_EVENT_WRITE_BYTES2		0x8
++#define PERF_EVENT_READ_BYTES3		0x9
++#define PERF_EVENT_WRITE_BYTES3		0xa
++#define PERF_EVENT_BYTES		0xb
++#define PERF_ACCESS_TYPE_MAX		0xc
++
+ /**
+  * struct dmc_count_channel - structure to hold counter values from the DDR controller
+  * @access:       Number of read and write accesses
+  * @clock_cycles: DDR clock cycles
++ * @read_access:  number of read accesses
++ * @write_acccess: number of write accesses
+  */
+ struct dmc_count_channel {
+-	u32 access;
+-	u32 clock_cycles;
++	u64 access;
++	u64 clock_cycles;
++	u64 read_access;
++	u64 write_access;
+ };
+ 
+ struct dmc_count {
+@@ -69,6 +91,11 @@ struct rockchip_dfi {
+ 	struct devfreq_event_dev *edev;
+ 	struct devfreq_event_desc desc;
+ 	struct dmc_count last_event_count;
++
++	struct dmc_count last_perf_count;
++	struct dmc_count total_count;
++	seqlock_t count_seqlock; /* protects last_perf_count and total_count */
++
+ 	struct device *dev;
+ 	void __iomem *regs;
+ 	struct regmap *regmap_pmu;
+@@ -77,6 +104,14 @@ struct rockchip_dfi {
+ 	struct mutex mutex;
+ 	u32 ddr_type;
+ 	unsigned int channel_mask;
++	enum cpuhp_state cpuhp_state;
++	struct hlist_node node;
++	struct pmu pmu;
++	struct hrtimer timer;
++	unsigned int cpu;
++	int active_events;
++	int burst_len;
++	int buswidth[DMC_MAX_CHANNELS];
+ };
+ 
+ static int rockchip_dfi_enable(struct rockchip_dfi *dfi)
+@@ -145,7 +180,7 @@ out:
+ 	mutex_unlock(&dfi->mutex);
+ }
+ 
+-static void rockchip_dfi_read_counters(struct rockchip_dfi *dfi, struct dmc_count *count)
++static void rockchip_dfi_read_counters(struct rockchip_dfi *dfi, struct dmc_count *c)
+ {
+ 	u32 i;
+ 	void __iomem *dfi_regs = dfi->regs;
+@@ -153,13 +188,36 @@ static void rockchip_dfi_read_counters(s
+ 	for (i = 0; i < DMC_MAX_CHANNELS; i++) {
+ 		if (!(dfi->channel_mask & BIT(i)))
+ 			continue;
+-		count->c[i].access = readl_relaxed(dfi_regs +
++		c->c[i].read_access = readl_relaxed(dfi_regs +
++				DDRMON_CH0_RD_NUM + i * 20);
++		c->c[i].write_access = readl_relaxed(dfi_regs +
++				DDRMON_CH0_WR_NUM + i * 20);
++		c->c[i].access = readl_relaxed(dfi_regs +
+ 				DDRMON_CH0_DFI_ACCESS_NUM + i * 20);
+-		count->c[i].clock_cycles = readl_relaxed(dfi_regs +
++		c->c[i].clock_cycles = readl_relaxed(dfi_regs +
+ 				DDRMON_CH0_COUNT_NUM + i * 20);
+ 	}
+ }
+ 
++static void rockchip_ddr_perf_counters_add(struct rockchip_dfi *dfi,
++					   const struct dmc_count *now,
++					   struct dmc_count *res)
++{
++	const struct dmc_count *last = &dfi->last_perf_count;
++	int i;
++
++	for (i = 0; i < DMC_MAX_CHANNELS; i++) {
++		res->c[i].read_access = dfi->total_count.c[i].read_access +
++			(u32)(now->c[i].read_access - last->c[i].read_access);
++		res->c[i].write_access = dfi->total_count.c[i].write_access +
++			(u32)(now->c[i].write_access - last->c[i].write_access);
++		res->c[i].access = dfi->total_count.c[i].access +
++			(u32)(now->c[i].access - last->c[i].access);
++		res->c[i].clock_cycles = dfi->total_count.c[i].clock_cycles +
++			(u32)(now->c[i].clock_cycles - last->c[i].clock_cycles);
++	}
++}
++
+ static int rockchip_dfi_event_disable(struct devfreq_event_dev *edev)
+ {
+ 	struct rockchip_dfi *dfi = devfreq_event_get_drvdata(edev);
+@@ -223,6 +281,367 @@ static const struct devfreq_event_ops ro
+ 	.set_event = rockchip_dfi_set_event,
+ };
+ 
++#ifdef CONFIG_PERF_EVENTS
++
++static ssize_t ddr_perf_cpumask_show(struct device *dev,
++				struct device_attribute *attr, char *buf)
++{
++	struct pmu *pmu = dev_get_drvdata(dev);
++	struct rockchip_dfi *dfi = container_of(pmu, struct rockchip_dfi, pmu);
++
++	return cpumap_print_to_pagebuf(true, buf, cpumask_of(dfi->cpu));
++}
++
++static struct device_attribute ddr_perf_cpumask_attr =
++	__ATTR(cpumask, 0444, ddr_perf_cpumask_show, NULL);
++
++static struct attribute *ddr_perf_cpumask_attrs[] = {
++	&ddr_perf_cpumask_attr.attr,
++	NULL,
++};
++
++static const struct attribute_group ddr_perf_cpumask_attr_group = {
++	.attrs = ddr_perf_cpumask_attrs,
++};
++
++PMU_EVENT_ATTR_STRING(cycles, ddr_pmu_cycles, "event="__stringify(PERF_EVENT_CYCLES))
++
++#define DFI_PMU_EVENT_ATTR(_name, _var, _str) \
++	PMU_EVENT_ATTR_STRING(_name, _var, _str); \
++	PMU_EVENT_ATTR_STRING(_name.unit, _var##_unit, "MB"); \
++	PMU_EVENT_ATTR_STRING(_name.scale, _var##_scale, "9.536743164e-07")
++
++DFI_PMU_EVENT_ATTR(read-bytes0, ddr_pmu_read_bytes0, "event="__stringify(PERF_EVENT_READ_BYTES0));
++DFI_PMU_EVENT_ATTR(write-bytes0, ddr_pmu_write_bytes0, "event="__stringify(PERF_EVENT_WRITE_BYTES0));
++
++DFI_PMU_EVENT_ATTR(read-bytes1, ddr_pmu_read_bytes1, "event="__stringify(PERF_EVENT_READ_BYTES1));
++DFI_PMU_EVENT_ATTR(write-bytes1, ddr_pmu_write_bytes1, "event="__stringify(PERF_EVENT_WRITE_BYTES1));
++
++DFI_PMU_EVENT_ATTR(read-bytes2, ddr_pmu_read_bytes2, "event="__stringify(PERF_EVENT_READ_BYTES2));
++DFI_PMU_EVENT_ATTR(write-bytes2, ddr_pmu_write_bytes2, "event="__stringify(PERF_EVENT_WRITE_BYTES2));
++
++DFI_PMU_EVENT_ATTR(read-bytes3, ddr_pmu_read_bytes3, "event="__stringify(PERF_EVENT_READ_BYTES3));
++DFI_PMU_EVENT_ATTR(write-bytes3, ddr_pmu_write_bytes3, "event="__stringify(PERF_EVENT_WRITE_BYTES3));
++
++DFI_PMU_EVENT_ATTR(read-bytes, ddr_pmu_read_bytes, "event="__stringify(PERF_EVENT_READ_BYTES));
++DFI_PMU_EVENT_ATTR(write-bytes, ddr_pmu_write_bytes, "event="__stringify(PERF_EVENT_WRITE_BYTES));
++
++DFI_PMU_EVENT_ATTR(bytes, ddr_pmu_bytes, "event="__stringify(PERF_EVENT_BYTES));
++
++#define DFI_ATTR_MB(_name) 		\
++	&_name.attr.attr,		\
++	&_name##_unit.attr.attr,	\
++	&_name##_scale.attr.attr
++
++static struct attribute *ddr_perf_events_attrs[] = {
++	&ddr_pmu_cycles.attr.attr,
++	DFI_ATTR_MB(ddr_pmu_read_bytes),
++	DFI_ATTR_MB(ddr_pmu_write_bytes),
++	DFI_ATTR_MB(ddr_pmu_read_bytes0),
++	DFI_ATTR_MB(ddr_pmu_write_bytes0),
++	DFI_ATTR_MB(ddr_pmu_read_bytes1),
++	DFI_ATTR_MB(ddr_pmu_write_bytes1),
++	DFI_ATTR_MB(ddr_pmu_read_bytes2),
++	DFI_ATTR_MB(ddr_pmu_write_bytes2),
++	DFI_ATTR_MB(ddr_pmu_read_bytes3),
++	DFI_ATTR_MB(ddr_pmu_write_bytes3),
++	DFI_ATTR_MB(ddr_pmu_bytes),
++	NULL,
++};
++
++static const struct attribute_group ddr_perf_events_attr_group = {
++	.name = "events",
++	.attrs = ddr_perf_events_attrs,
++};
++
++PMU_FORMAT_ATTR(event, "config:0-7");
++
++static struct attribute *ddr_perf_format_attrs[] = {
++	&format_attr_event.attr,
++	NULL,
++};
++
++static const struct attribute_group ddr_perf_format_attr_group = {
++	.name = "format",
++	.attrs = ddr_perf_format_attrs,
++};
++
++static const struct attribute_group *attr_groups[] = {
++	&ddr_perf_events_attr_group,
++	&ddr_perf_cpumask_attr_group,
++	&ddr_perf_format_attr_group,
++	NULL,
++};
++
++static int rockchip_ddr_perf_event_init(struct perf_event *event)
++{
++	struct rockchip_dfi *dfi = container_of(event->pmu, struct rockchip_dfi, pmu);
++
++	if (event->attr.type != event->pmu->type)
++		return -ENOENT;
++
++	if (event->attach_state & PERF_ATTACH_TASK)
++		return -EINVAL;
++
++	if (event->cpu < 0) {
++		dev_warn(dfi->dev, "Can't provide per-task data!\n");
++		return -EINVAL;
++	}
++
++	return 0;
++}
++
++static u64 rockchip_ddr_perf_event_get_count(struct perf_event *event)
++{
++	struct rockchip_dfi *dfi = container_of(event->pmu, struct rockchip_dfi, pmu);
++	int blen = dfi->burst_len;
++	struct dmc_count total, now;
++	unsigned int seq;
++	u64 c = 0;
++	int i;
++
++	rockchip_dfi_read_counters(dfi, &now);
++
++	do {
++		seq = read_seqbegin(&dfi->count_seqlock);
++
++		rockchip_ddr_perf_counters_add(dfi, &now, &total);
++
++	} while (read_seqretry(&dfi->count_seqlock, seq));
++
++	switch (event->attr.config) {
++	case PERF_EVENT_CYCLES:
++		c = total.c[0].clock_cycles;
++		break;
++	case PERF_EVENT_READ_BYTES:
++		for (i = 0; i < DMC_MAX_CHANNELS; i++)
++			c += total.c[i].read_access * blen * dfi->buswidth[i];
++		break;
++	case PERF_EVENT_WRITE_BYTES:
++		for (i = 0; i < DMC_MAX_CHANNELS; i++)
++			c += total.c[i].write_access * blen * dfi->buswidth[i];
++		break;
++	case PERF_EVENT_READ_BYTES0:
++		c = total.c[0].read_access * blen * dfi->buswidth[0];
++		break;
++	case PERF_EVENT_WRITE_BYTES0:
++		c = total.c[0].write_access * blen * dfi->buswidth[0];
++		break;
++	case PERF_EVENT_READ_BYTES1:
++		c = total.c[1].read_access * blen * dfi->buswidth[1];
++		break;
++	case PERF_EVENT_WRITE_BYTES1:
++		c = total.c[1].write_access * blen * dfi->buswidth[1];
++		break;
++	case PERF_EVENT_READ_BYTES2:
++		c = total.c[2].read_access * blen * dfi->buswidth[2];
++		break;
++	case PERF_EVENT_WRITE_BYTES2:
++		c = total.c[2].write_access * blen * dfi->buswidth[2];
++		break;
++	case PERF_EVENT_READ_BYTES3:
++		c = total.c[3].read_access * blen * dfi->buswidth[3];
++		break;
++	case PERF_EVENT_WRITE_BYTES3:
++		c = total.c[3].write_access * blen * dfi->buswidth[3];
++		break;
++	case PERF_EVENT_BYTES:
++		for (i = 0; i < DMC_MAX_CHANNELS; i++)
++			c += total.c[i].access * blen * dfi->buswidth[i];
++		break;
++	}
++
++	return c;
++}
++
++static void rockchip_ddr_perf_event_update(struct perf_event *event)
++{
++	u64 now;
++	s64 prev;
++
++	if (event->attr.config >= PERF_ACCESS_TYPE_MAX)
++		return;
++
++	now = rockchip_ddr_perf_event_get_count(event);
++	prev = local64_xchg(&event->hw.prev_count, now);
++	local64_add(now - prev, &event->count);
++}
++
++static void rockchip_ddr_perf_event_start(struct perf_event *event, int flags)
++{
++	u64 now = rockchip_ddr_perf_event_get_count(event);
++
++	local64_set(&event->hw.prev_count, now);
++}
++
++static int rockchip_ddr_perf_event_add(struct perf_event *event, int flags)
++{
++	struct rockchip_dfi *dfi = container_of(event->pmu, struct rockchip_dfi, pmu);
++
++	dfi->active_events++;
++
++	if (dfi->active_events == 1)
++		hrtimer_start(&dfi->timer, ns_to_ktime(NSEC_PER_SEC), HRTIMER_MODE_REL);
++
++	if (flags & PERF_EF_START)
++		rockchip_ddr_perf_event_start(event, flags);
++
++	return 0;
++}
++
++static void rockchip_ddr_perf_event_stop(struct perf_event *event, int flags)
++{
++	rockchip_ddr_perf_event_update(event);
++}
++
++static void rockchip_ddr_perf_event_del(struct perf_event *event, int flags)
++{
++	struct rockchip_dfi *dfi = container_of(event->pmu, struct rockchip_dfi, pmu);
++
++	rockchip_ddr_perf_event_stop(event, PERF_EF_UPDATE);
++
++	dfi->active_events--;
++
++	if (dfi->active_events == 0)
++		hrtimer_cancel(&dfi->timer);
++}
++
++static enum hrtimer_restart rockchip_dfi_timer(struct hrtimer *timer)
++{
++	struct rockchip_dfi *dfi = container_of(timer, struct rockchip_dfi, timer);
++	struct dmc_count now, total;
++
++	rockchip_dfi_read_counters(dfi, &now);
++
++	write_seqlock(&dfi->count_seqlock);
++
++	rockchip_ddr_perf_counters_add(dfi, &now, &total);
++	dfi->total_count = total;
++	dfi->last_perf_count = now;
++
++	write_sequnlock(&dfi->count_seqlock);
++
++	hrtimer_forward_now(&dfi->timer, ns_to_ktime(NSEC_PER_SEC));
++
++	return HRTIMER_RESTART;
++};
++
++static int ddr_perf_offline_cpu(unsigned int cpu, struct hlist_node *node)
++{
++	struct rockchip_dfi *dfi = hlist_entry_safe(node, struct rockchip_dfi, node);
++	int target;
++
++	if (cpu != dfi->cpu)
++		return 0;
++
++	target = cpumask_any_but(cpu_online_mask, cpu);
++	if (target >= nr_cpu_ids)
++		return 0;
++
++	perf_pmu_migrate_context(&dfi->pmu, cpu, target);
++	dfi->cpu = target;
++
++	return 0;
++}
++
++static void rockchip_ddr_cpuhp_remove_state(void *data)
++{
++	struct rockchip_dfi *dfi = data;
++
++	cpuhp_remove_multi_state(dfi->cpuhp_state);
++
++	rockchip_dfi_disable(dfi);
++}
++
++static void rockchip_ddr_cpuhp_remove_instance(void *data)
++{
++	struct rockchip_dfi *dfi = data;
++
++	cpuhp_state_remove_instance_nocalls(dfi->cpuhp_state, &dfi->node);
++}
++
++static void rockchip_ddr_perf_remove(void *data)
++{
++	struct rockchip_dfi *dfi = data;
++
++	perf_pmu_unregister(&dfi->pmu);
++}
++
++static int rockchip_ddr_perf_init(struct rockchip_dfi *dfi)
++{
++	struct pmu *pmu = &dfi->pmu;
++	int ret;
++
++	seqlock_init(&dfi->count_seqlock);
++
++	pmu->module = THIS_MODULE;
++	pmu->capabilities = PERF_PMU_CAP_NO_EXCLUDE;
++	pmu->task_ctx_nr = perf_invalid_context;
++	pmu->attr_groups = attr_groups;
++	pmu->event_init  = rockchip_ddr_perf_event_init;
++	pmu->add = rockchip_ddr_perf_event_add;
++	pmu->del = rockchip_ddr_perf_event_del;
++	pmu->start = rockchip_ddr_perf_event_start;
++	pmu->stop = rockchip_ddr_perf_event_stop;
++	pmu->read = rockchip_ddr_perf_event_update;
++
++	dfi->cpu = raw_smp_processor_id();
++
++	ret = cpuhp_setup_state_multi(CPUHP_AP_ONLINE_DYN,
++				      "rockchip_ddr_perf_pmu",
++				      NULL,
++				      ddr_perf_offline_cpu);
++
++	if (ret < 0) {
++		dev_err(dfi->dev, "cpuhp_setup_state_multi failed: %d\n", ret);
++		return ret;
++	}
++
++	dfi->cpuhp_state = ret;
++
++	rockchip_dfi_enable(dfi);
++
++	ret = devm_add_action_or_reset(dfi->dev, rockchip_ddr_cpuhp_remove_state, dfi);
++	if (ret)
++		return ret;
++
++	ret = cpuhp_state_add_instance_nocalls(dfi->cpuhp_state, &dfi->node);
++	if (ret) {
++		dev_err(dfi->dev, "Error %d registering hotplug\n", ret);
++		return ret;
++	}
++
++	ret = devm_add_action_or_reset(dfi->dev, rockchip_ddr_cpuhp_remove_instance, dfi);
++	if (ret)
++		return ret;
++
++	hrtimer_init(&dfi->timer, CLOCK_MONOTONIC, HRTIMER_MODE_REL);
++	dfi->timer.function = rockchip_dfi_timer;
++
++	switch (dfi->ddr_type) {
++	case ROCKCHIP_DDRTYPE_LPDDR2:
++	case ROCKCHIP_DDRTYPE_LPDDR3:
++		dfi->burst_len = 8;
++		break;
++	case ROCKCHIP_DDRTYPE_LPDDR4:
++	case ROCKCHIP_DDRTYPE_LPDDR4X:
++		dfi->burst_len = 16;
++		break;
++	}
++
++	ret = perf_pmu_register(pmu, "rockchip_ddr", -1);
++	if (ret)
++		return ret;
++
++	return devm_add_action_or_reset(dfi->dev, rockchip_ddr_perf_remove, dfi);
++}
++#else
++static int rockchip_ddr_perf_init(struct rockchip_dfi *dfi)
++{
++	return 0;
++}
++#endif
++
+ static int rk3399_dfi_init(struct rockchip_dfi *dfi)
+ {
+ 	struct regmap *regmap_pmu = dfi->regmap_pmu;
+@@ -239,6 +658,9 @@ static int rk3399_dfi_init(struct rockch
+ 
+ 	dfi->channel_mask = GENMASK(1, 0);
+ 
++	dfi->buswidth[0] = FIELD_GET(RK3399_PMUGRF_OS_REG2_BW_CH0, val) == 0 ? 4 : 2;
++	dfi->buswidth[1] = FIELD_GET(RK3399_PMUGRF_OS_REG2_BW_CH1, val) == 0 ? 4 : 2;
++
+ 	return 0;
+ };
+ 
+@@ -255,6 +677,8 @@ static int rk3568_dfi_init(struct rockch
+ 	if (FIELD_GET(RK3568_PMUGRF_OS_REG3_SYSREG_VERSION, reg3) >= 0x3)
+ 		dfi->ddr_type |= FIELD_GET(RK3568_PMUGRF_OS_REG3_DRAMTYPE_INFO_V3, reg3) << 3;
+ 
++	dfi->buswidth[0] = FIELD_GET(RK3568_PMUGRF_OS_REG2_BW_CH0, reg2) == 0 ? 4 : 2;
++
+ 	dfi->channel_mask = 1;
+ 
+ 	return 0;
+@@ -317,6 +741,10 @@ static int rockchip_dfi_probe(struct pla
+ 		return PTR_ERR(dfi->edev);
+ 	}
+ 
++	ret = rockchip_ddr_perf_init(dfi);
++	if (ret)
++		return ret;
++
+ 	platform_set_drvdata(pdev, dfi);
+ 
+ 	return 0;
+@@ -327,6 +755,7 @@ static struct platform_driver rockchip_d
+ 	.driver = {
+ 		.name	= "rockchip-dfi",
+ 		.of_match_table = rockchip_dfi_id_match,
++		.suppress_bind_attrs = true,
+ 	},
+ };
+ module_platform_driver(rockchip_dfi_driver);
+--- a/include/soc/rockchip/rk3399_grf.h
++++ b/include/soc/rockchip/rk3399_grf.h
+@@ -12,5 +12,7 @@
+ /* PMU GRF Registers */
+ #define RK3399_PMUGRF_OS_REG2		0x308
+ #define RK3399_PMUGRF_OS_REG2_DDRTYPE		GENMASK(15, 13)
++#define RK3399_PMUGRF_OS_REG2_BW_CH0		GENMASK(3, 2)
++#define RK3399_PMUGRF_OS_REG2_BW_CH1		GENMASK(19, 18)
+ 
+ #endif
+--- a/include/soc/rockchip/rk3568_grf.h
++++ b/include/soc/rockchip/rk3568_grf.h
+@@ -4,6 +4,7 @@
+ 
+ #define RK3568_PMUGRF_OS_REG2		0x208
+ #define RK3568_PMUGRF_OS_REG2_DRAMTYPE_INFO		GENMASK(15, 13)
++#define RK3568_PMUGRF_OS_REG2_BW_CH0			GENMASK(3, 2)
+ 
+ #define RK3568_PMUGRF_OS_REG3		0x20c
+ #define RK3568_PMUGRF_OS_REG3_DRAMTYPE_INFO_V3		GENMASK(13, 12)
diff --git a/target/linux/rockchip/patches-6.1/405-PM-devfreq-rockchip-dfi-make-register-stride-SoC-spe.patch b/target/linux/rockchip/patches-6.1/405-PM-devfreq-rockchip-dfi-make-register-stride-SoC-spe.patch
new file mode 100644
index 0000000000..a9b515587d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/405-PM-devfreq-rockchip-dfi-make-register-stride-SoC-spe.patch
@@ -0,0 +1,56 @@
+From 1067b1854ad723a3cd57f76924fb3c7ddea6f22e Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:45 +0200
+Subject: [PATCH 405/414] PM / devfreq: rockchip-dfi: make register stride SoC
+ specific
+
+The currently supported RK3399 has a stride of 20 between the channel
+specific registers. Upcoming RK3588 has a different stride, so put
+the stride into driver data to make it configurable.
+While at it convert decimal 20 to hex 0x14 for consistency with RK3588
+which has a register stride 0x4000 and we want to write that in hex
+as well.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 11 +++++++----
+ 1 file changed, 7 insertions(+), 4 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -112,6 +112,7 @@ struct rockchip_dfi {
+ 	int active_events;
+ 	int burst_len;
+ 	int buswidth[DMC_MAX_CHANNELS];
++	int ddrmon_stride;
+ };
+ 
+ static int rockchip_dfi_enable(struct rockchip_dfi *dfi)
+@@ -189,13 +190,13 @@ static void rockchip_dfi_read_counters(s
+ 		if (!(dfi->channel_mask & BIT(i)))
+ 			continue;
+ 		c->c[i].read_access = readl_relaxed(dfi_regs +
+-				DDRMON_CH0_RD_NUM + i * 20);
++				DDRMON_CH0_RD_NUM + i * dfi->ddrmon_stride);
+ 		c->c[i].write_access = readl_relaxed(dfi_regs +
+-				DDRMON_CH0_WR_NUM + i * 20);
++				DDRMON_CH0_WR_NUM + i * dfi->ddrmon_stride);
+ 		c->c[i].access = readl_relaxed(dfi_regs +
+-				DDRMON_CH0_DFI_ACCESS_NUM + i * 20);
++				DDRMON_CH0_DFI_ACCESS_NUM + i * dfi->ddrmon_stride);
+ 		c->c[i].clock_cycles = readl_relaxed(dfi_regs +
+-				DDRMON_CH0_COUNT_NUM + i * 20);
++				DDRMON_CH0_COUNT_NUM + i * dfi->ddrmon_stride);
+ 	}
+ }
+ 
+@@ -661,6 +662,8 @@ static int rk3399_dfi_init(struct rockch
+ 	dfi->buswidth[0] = FIELD_GET(RK3399_PMUGRF_OS_REG2_BW_CH0, val) == 0 ? 4 : 2;
+ 	dfi->buswidth[1] = FIELD_GET(RK3399_PMUGRF_OS_REG2_BW_CH1, val) == 0 ? 4 : 2;
+ 
++	dfi->ddrmon_stride = 0x14;
++
+ 	return 0;
+ };
+ 
diff --git a/target/linux/rockchip/patches-6.1/406-PM-devfreq-rockchip-dfi-account-for-multiple-DDRMON_.patch b/target/linux/rockchip/patches-6.1/406-PM-devfreq-rockchip-dfi-account-for-multiple-DDRMON_.patch
new file mode 100644
index 0000000000..19128ce243
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/406-PM-devfreq-rockchip-dfi-account-for-multiple-DDRMON_.patch
@@ -0,0 +1,137 @@
+From 69dbc52aef08f566494ae5da340dc708c3f3e362 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:46 +0200
+Subject: [PATCH 406/414] PM / devfreq: rockchip-dfi: account for multiple
+ DDRMON_CTRL registers
+
+The currently supported RK3399 has a set of registers per channel, but
+it has only a single DDRMON_CTRL register. With upcoming RK3588 this
+will be different, the RK3588 has a DDRMON_CTRL register per channel.
+
+Instead of expecting a single DDRMON_CTRL register, loop over the
+channels and write the channel specific DDRMON_CTRL register. Break
+out early out of the loop when there is only a single DDRMON_CTRL
+register like on the RK3399.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 72 ++++++++++++++++++----------
+ 1 file changed, 48 insertions(+), 24 deletions(-)
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -113,12 +113,13 @@ struct rockchip_dfi {
+ 	int burst_len;
+ 	int buswidth[DMC_MAX_CHANNELS];
+ 	int ddrmon_stride;
++	bool ddrmon_ctrl_single;
+ };
+ 
+ static int rockchip_dfi_enable(struct rockchip_dfi *dfi)
+ {
+ 	void __iomem *dfi_regs = dfi->regs;
+-	int ret = 0;
++	int i, ret = 0;
+ 
+ 	mutex_lock(&dfi->mutex);
+ 
+@@ -132,29 +133,41 @@ static int rockchip_dfi_enable(struct ro
+ 		goto out;
+ 	}
+ 
+-	/* clear DDRMON_CTRL setting */
+-	writel_relaxed(HIWORD_UPDATE(0, DDRMON_CTRL_TIMER_CNT_EN | DDRMON_CTRL_SOFTWARE_EN |
+-		       DDRMON_CTRL_HARDWARE_EN), dfi_regs + DDRMON_CTRL);
++	for (i = 0; i < DMC_MAX_CHANNELS; i++) {
++		u32 ctrl = 0;
+ 
+-	/* set ddr type to dfi */
+-	switch (dfi->ddr_type) {
+-	case ROCKCHIP_DDRTYPE_LPDDR2:
+-	case ROCKCHIP_DDRTYPE_LPDDR3:
+-		writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_LPDDR23, DDRMON_CTRL_DDR_TYPE_MASK),
+-			       dfi_regs + DDRMON_CTRL);
+-		break;
+-	case ROCKCHIP_DDRTYPE_LPDDR4:
+-	case ROCKCHIP_DDRTYPE_LPDDR4X:
+-		writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_LPDDR4, DDRMON_CTRL_DDR_TYPE_MASK),
+-			       dfi_regs + DDRMON_CTRL);
+-		break;
+-	default:
+-		break;
+-	}
++		if (!(dfi->channel_mask & BIT(i)))
++			continue;
+ 
+-	/* enable count, use software mode */
+-	writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_SOFTWARE_EN, DDRMON_CTRL_SOFTWARE_EN),
+-		       dfi_regs + DDRMON_CTRL);
++		/* clear DDRMON_CTRL setting */
++		writel_relaxed(HIWORD_UPDATE(0, DDRMON_CTRL_TIMER_CNT_EN |
++			       DDRMON_CTRL_SOFTWARE_EN | DDRMON_CTRL_HARDWARE_EN),
++			       dfi_regs + i * dfi->ddrmon_stride + DDRMON_CTRL);
++
++		/* set ddr type to dfi */
++		switch (dfi->ddr_type) {
++		case ROCKCHIP_DDRTYPE_LPDDR2:
++		case ROCKCHIP_DDRTYPE_LPDDR3:
++			ctrl = DDRMON_CTRL_LPDDR23;
++			break;
++		case ROCKCHIP_DDRTYPE_LPDDR4:
++		case ROCKCHIP_DDRTYPE_LPDDR4X:
++			ctrl = DDRMON_CTRL_LPDDR4;
++			break;
++		default:
++			break;
++		}
++
++		writel_relaxed(HIWORD_UPDATE(ctrl, DDRMON_CTRL_DDR_TYPE_MASK),
++			       dfi_regs + i * dfi->ddrmon_stride + DDRMON_CTRL);
++
++		/* enable count, use software mode */
++		writel_relaxed(HIWORD_UPDATE(DDRMON_CTRL_SOFTWARE_EN, DDRMON_CTRL_SOFTWARE_EN),
++			       dfi_regs + i * dfi->ddrmon_stride + DDRMON_CTRL);
++
++		if (dfi->ddrmon_ctrl_single)
++			break;
++	}
+ out:
+ 	mutex_unlock(&dfi->mutex);
+ 
+@@ -164,6 +177,7 @@ out:
+ static void rockchip_dfi_disable(struct rockchip_dfi *dfi)
+ {
+ 	void __iomem *dfi_regs = dfi->regs;
++	int i;
+ 
+ 	mutex_lock(&dfi->mutex);
+ 
+@@ -174,8 +188,17 @@ static void rockchip_dfi_disable(struct
+ 	if (dfi->usecount > 0)
+ 		goto out;
+ 
+-	writel_relaxed(HIWORD_UPDATE(0, DDRMON_CTRL_SOFTWARE_EN),
+-		       dfi_regs + DDRMON_CTRL);
++	for (i = 0; i < DMC_MAX_CHANNELS; i++) {
++		if (!(dfi->channel_mask & BIT(i)))
++			continue;
++
++		writel_relaxed(HIWORD_UPDATE(0, DDRMON_CTRL_SOFTWARE_EN),
++			      dfi_regs + i * dfi->ddrmon_stride + DDRMON_CTRL);
++
++		if (dfi->ddrmon_ctrl_single)
++			break;
++	}
++
+ 	clk_disable_unprepare(dfi->clk);
+ out:
+ 	mutex_unlock(&dfi->mutex);
+@@ -663,6 +686,7 @@ static int rk3399_dfi_init(struct rockch
+ 	dfi->buswidth[1] = FIELD_GET(RK3399_PMUGRF_OS_REG2_BW_CH1, val) == 0 ? 4 : 2;
+ 
+ 	dfi->ddrmon_stride = 0x14;
++	dfi->ddrmon_ctrl_single = true;
+ 
+ 	return 0;
+ };
diff --git a/target/linux/rockchip/patches-6.1/407-PM-devfreq-rockchip-dfi-add-support-for-RK3588.patch b/target/linux/rockchip/patches-6.1/407-PM-devfreq-rockchip-dfi-add-support-for-RK3588.patch
new file mode 100644
index 0000000000..fe3e6a41be
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/407-PM-devfreq-rockchip-dfi-add-support-for-RK3588.patch
@@ -0,0 +1,88 @@
+From 8da074c57e10e444f8c21532eda1e6e72cba8e06 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:47 +0200
+Subject: [PATCH 407/414] PM / devfreq: rockchip-dfi: add support for RK3588
+
+Add support for the RK3588 to the driver. The RK3588 has four DDR
+channels with a register stride of 0x4000 between the channel
+registers, also it has a DDRMON_CTRL register per channel.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+---
+ drivers/devfreq/event/rockchip-dfi.c | 30 +++++++++++++++++++++++++++-
+ include/soc/rockchip/rk3588_grf.h    | 18 +++++++++++++++++
+ 2 files changed, 47 insertions(+), 1 deletion(-)
+ create mode 100644 include/soc/rockchip/rk3588_grf.h
+
+--- a/drivers/devfreq/event/rockchip-dfi.c
++++ b/drivers/devfreq/event/rockchip-dfi.c
+@@ -26,8 +26,9 @@
+ #include <soc/rockchip/rockchip_grf.h>
+ #include <soc/rockchip/rk3399_grf.h>
+ #include <soc/rockchip/rk3568_grf.h>
++#include <soc/rockchip/rk3588_grf.h>
+ 
+-#define DMC_MAX_CHANNELS	2
++#define DMC_MAX_CHANNELS	4
+ 
+ #define HIWORD_UPDATE(val, mask)	((val) | (mask) << 16)
+ 
+@@ -711,9 +712,36 @@ static int rk3568_dfi_init(struct rockch
+ 	return 0;
+ };
+ 
++static int rk3588_dfi_init(struct rockchip_dfi *dfi)
++{
++	struct regmap *regmap_pmu = dfi->regmap_pmu;
++	u32 reg2, reg3, reg4;
++
++	regmap_read(regmap_pmu, RK3588_PMUGRF_OS_REG2, &reg2);
++	regmap_read(regmap_pmu, RK3588_PMUGRF_OS_REG3, &reg3);
++	regmap_read(regmap_pmu, RK3588_PMUGRF_OS_REG4, &reg4);
++
++	dfi->ddr_type = FIELD_GET(RK3588_PMUGRF_OS_REG2_DRAMTYPE_INFO, reg2);
++
++	if (FIELD_GET(RK3588_PMUGRF_OS_REG3_SYSREG_VERSION, reg3) >= 0x3)
++		dfi->ddr_type |= FIELD_GET(RK3588_PMUGRF_OS_REG3_DRAMTYPE_INFO_V3, reg3) << 3;
++
++	dfi->buswidth[0] = FIELD_GET(RK3588_PMUGRF_OS_REG2_BW_CH0, reg2) == 0 ? 4 : 2;
++	dfi->buswidth[1] = FIELD_GET(RK3588_PMUGRF_OS_REG2_BW_CH1, reg2) == 0 ? 4 : 2;
++	dfi->buswidth[2] = FIELD_GET(RK3568_PMUGRF_OS_REG2_BW_CH0, reg4) == 0 ? 4 : 2;
++	dfi->buswidth[3] = FIELD_GET(RK3588_PMUGRF_OS_REG2_BW_CH1, reg4) == 0 ? 4 : 2;
++	dfi->channel_mask = FIELD_GET(RK3588_PMUGRF_OS_REG2_CH_INFO, reg2) |
++			    FIELD_GET(RK3588_PMUGRF_OS_REG2_CH_INFO, reg4) << 2;
++
++	dfi->ddrmon_stride = 0x4000;
++
++	return 0;
++};
++
+ static const struct of_device_id rockchip_dfi_id_match[] = {
+ 	{ .compatible = "rockchip,rk3399-dfi", .data = rk3399_dfi_init },
+ 	{ .compatible = "rockchip,rk3568-dfi", .data = rk3568_dfi_init },
++	{ .compatible = "rockchip,rk3588-dfi", .data = rk3588_dfi_init },
+ 	{ },
+ };
+ 
+--- /dev/null
++++ b/include/soc/rockchip/rk3588_grf.h
+@@ -0,0 +1,18 @@
++/* SPDX-License-Identifier: GPL-2.0+ */
++#ifndef __SOC_RK3588_GRF_H
++#define __SOC_RK3588_GRF_H
++
++#define RK3588_PMUGRF_OS_REG2		0x208
++#define RK3588_PMUGRF_OS_REG2_DRAMTYPE_INFO		GENMASK(15, 13)
++#define RK3588_PMUGRF_OS_REG2_BW_CH0			GENMASK(3, 2)
++#define RK3588_PMUGRF_OS_REG2_BW_CH1                    GENMASK(19, 18)
++#define RK3588_PMUGRF_OS_REG2_CH_INFO                   GENMASK(29, 28)
++
++#define RK3588_PMUGRF_OS_REG3		0x20c
++#define RK3588_PMUGRF_OS_REG3_DRAMTYPE_INFO_V3		GENMASK(13, 12)
++#define RK3588_PMUGRF_OS_REG3_SYSREG_VERSION		GENMASK(31, 28)
++
++#define RK3588_PMUGRF_OS_REG4           0x210
++#define RK3588_PMUGRF_OS_REG5           0x214
++
++#endif /* __SOC_RK3588_GRF_H */
diff --git a/target/linux/rockchip/patches-6.1/408-dt-bindings-devfreq-event-convert-Rockchip-DFI-bindi.patch b/target/linux/rockchip/patches-6.1/408-dt-bindings-devfreq-event-convert-Rockchip-DFI-bindi.patch
new file mode 100644
index 0000000000..465ea7c9f0
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/408-dt-bindings-devfreq-event-convert-Rockchip-DFI-bindi.patch
@@ -0,0 +1,114 @@
+From a2f12b66bfdb39992e3ada96bfb1e677a440fcce Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:48 +0200
+Subject: [PATCH 408/414] dt-bindings: devfreq: event: convert Rockchip DFI
+ binding to yaml
+
+Convert the Rockchip DFI binding to yaml.
+
+Reviewed-by: Rob Herring <robh@kernel.org>
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ .../bindings/devfreq/event/rockchip,dfi.yaml  | 61 +++++++++++++++++++
+ .../bindings/devfreq/event/rockchip-dfi.txt   | 18 ------
+ .../rockchip,rk3399-dmc.yaml                  |  2 +-
+ 3 files changed, 62 insertions(+), 19 deletions(-)
+ create mode 100644 Documentation/devicetree/bindings/devfreq/event/rockchip,dfi.yaml
+ delete mode 100644 Documentation/devicetree/bindings/devfreq/event/rockchip-dfi.txt
+
+--- /dev/null
++++ b/Documentation/devicetree/bindings/devfreq/event/rockchip,dfi.yaml
+@@ -0,0 +1,61 @@
++# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/devfreq/event/rockchip,dfi.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Rockchip DFI
++
++maintainers:
++  - Sascha Hauer <s.hauer@pengutronix.de>
++
++properties:
++  compatible:
++    enum:
++      - rockchip,rk3399-dfi
++
++  clocks:
++    maxItems: 1
++
++  clock-names:
++    items:
++      - const: pclk_ddr_mon
++
++  interrupts:
++    maxItems: 1
++
++  reg:
++    maxItems: 1
++
++  rockchip,pmu:
++    $ref: /schemas/types.yaml#/definitions/phandle
++    description:
++      Phandle to the syscon managing the "PMU general register files".
++
++required:
++  - compatible
++  - clocks
++  - clock-names
++  - interrupts
++  - reg
++
++additionalProperties: false
++
++examples:
++  - |
++    #include <dt-bindings/interrupt-controller/arm-gic.h>
++    #include <dt-bindings/clock/rk3308-cru.h>
++
++    bus {
++      #address-cells = <2>;
++      #size-cells = <2>;
++
++      dfi: dfi@ff630000 {
++        compatible = "rockchip,rk3399-dfi";
++        reg = <0x00 0xff630000 0x00 0x4000>;
++        interrupts = <GIC_SPI 131 IRQ_TYPE_LEVEL_HIGH 0>;
++        rockchip,pmu = <&pmugrf>;
++        clocks = <&cru PCLK_DDR_MON>;
++        clock-names = "pclk_ddr_mon";
++      };
++    };
+--- a/Documentation/devicetree/bindings/devfreq/event/rockchip-dfi.txt
++++ /dev/null
+@@ -1,18 +0,0 @@
+-
+-* Rockchip rk3399 DFI device
+-
+-Required properties:
+-- compatible: Must be "rockchip,rk3399-dfi".
+-- reg: physical base address of each DFI and length of memory mapped region
+-- rockchip,pmu: phandle to the syscon managing the "pmu general register files"
+-- clocks: phandles for clock specified in "clock-names" property
+-- clock-names : the name of clock used by the DFI, must be "pclk_ddr_mon";
+-
+-Example:
+-	dfi: dfi@ff630000 {
+-		compatible = "rockchip,rk3399-dfi";
+-		reg = <0x00 0xff630000 0x00 0x4000>;
+-		rockchip,pmu = <&pmugrf>;
+-		clocks = <&cru PCLK_DDR_MON>;
+-		clock-names = "pclk_ddr_mon";
+-	};
+--- a/Documentation/devicetree/bindings/memory-controllers/rockchip,rk3399-dmc.yaml
++++ b/Documentation/devicetree/bindings/memory-controllers/rockchip,rk3399-dmc.yaml
+@@ -18,7 +18,7 @@ properties:
+     $ref: /schemas/types.yaml#/definitions/phandle
+     description:
+       Node to get DDR loading. Refer to
+-      Documentation/devicetree/bindings/devfreq/event/rockchip-dfi.txt.
++      Documentation/devicetree/bindings/devfreq/event/rockchip,dfi.yaml.
+ 
+   clocks:
+     maxItems: 1
diff --git a/target/linux/rockchip/patches-6.1/409-dt-bindings-devfreq-event-rockchip-dfi-Add-rk3568-su.patch b/target/linux/rockchip/patches-6.1/409-dt-bindings-devfreq-event-rockchip-dfi-Add-rk3568-su.patch
new file mode 100644
index 0000000000..5a8e732e16
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/409-dt-bindings-devfreq-event-rockchip-dfi-Add-rk3568-su.patch
@@ -0,0 +1,50 @@
+From cac156a68588ae687fd0be8615fc9918e9b2fe86 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:49 +0200
+Subject: [PATCH 409/414] dt-bindings: devfreq: event: rockchip,dfi: Add rk3568
+ support
+
+This adds the rockchip,rk3568-dfi compatible to the binding. Make clocks
+optional for this SoC as the RK3568 doesn't have a kernel controllable
+PCLK.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+Reviewed-by: Conor Dooley <conor.dooley@microchip.com>
+---
+ .../bindings/devfreq/event/rockchip,dfi.yaml      | 15 +++++++++++++--
+ 1 file changed, 13 insertions(+), 2 deletions(-)
+
+--- a/Documentation/devicetree/bindings/devfreq/event/rockchip,dfi.yaml
++++ b/Documentation/devicetree/bindings/devfreq/event/rockchip,dfi.yaml
+@@ -13,6 +13,7 @@ properties:
+   compatible:
+     enum:
+       - rockchip,rk3399-dfi
++      - rockchip,rk3568-dfi
+ 
+   clocks:
+     maxItems: 1
+@@ -34,11 +35,21 @@ properties:
+ 
+ required:
+   - compatible
+-  - clocks
+-  - clock-names
+   - interrupts
+   - reg
+ 
++if:
++  properties:
++    compatible:
++      contains:
++        enum:
++          - rockchip,rk3399-dfi
++
++then:
++  required:
++    - clocks
++    - clock-names
++
+ additionalProperties: false
+ 
+ examples:
diff --git a/target/linux/rockchip/patches-6.1/410-dt-bindings-devfreq-event-rockchip-dfi-Add-rk3588-su.patch b/target/linux/rockchip/patches-6.1/410-dt-bindings-devfreq-event-rockchip-dfi-Add-rk3588-su.patch
new file mode 100644
index 0000000000..fb6353496e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/410-dt-bindings-devfreq-event-rockchip-dfi-Add-rk3588-su.patch
@@ -0,0 +1,46 @@
+From e56c1a25f8be8fef58e190674bcd099a0e466652 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:50 +0200
+Subject: [PATCH 410/414] dt-bindings: devfreq: event: rockchip,dfi: Add rk3588
+ support
+
+This adds rockchip,rk3588-dfi to the list of compatibles. Unlike ealier
+SoCs the rk3588 has four interrupts (one for each channel) instead of
+only one, so increase the number of allowed interrupts to four and also
+add interrupt-names.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ .../bindings/devfreq/event/rockchip,dfi.yaml       | 14 +++++++++++++-
+ 1 file changed, 13 insertions(+), 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/devfreq/event/rockchip,dfi.yaml
++++ b/Documentation/devicetree/bindings/devfreq/event/rockchip,dfi.yaml
+@@ -14,6 +14,7 @@ properties:
+     enum:
+       - rockchip,rk3399-dfi
+       - rockchip,rk3568-dfi
++      - rockchip,rk3588-dfi
+ 
+   clocks:
+     maxItems: 1
+@@ -23,7 +24,18 @@ properties:
+       - const: pclk_ddr_mon
+ 
+   interrupts:
+-    maxItems: 1
++    minItems: 1
++    maxItems: 4
++
++  interrupt-names:
++    oneOf:
++      - items:
++          - const: ch0
++      - items:
++          - const: ch0
++          - const: ch1
++          - const: ch2
++          - const: ch3
+ 
+   reg:
+     maxItems: 1
diff --git a/target/linux/rockchip/patches-6.1/411-arm64-dts-rockchip-rk3399-Enable-DFI.patch b/target/linux/rockchip/patches-6.1/411-arm64-dts-rockchip-rk3399-Enable-DFI.patch
new file mode 100644
index 0000000000..050eeb2602
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/411-arm64-dts-rockchip-rk3399-Enable-DFI.patch
@@ -0,0 +1,24 @@
+From 6bda3afaebc2e69491f09e469dd5d72b94547a09 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:51 +0200
+Subject: [PATCH 411/414] arm64: dts: rockchip: rk3399: Enable DFI
+
+the DFI unit can provide useful data for measuring DDR utilization
+and works without any configuration from the board, so enable it in the
+dtsi file directly.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ arch/arm64/boot/dts/rockchip/rk3399.dtsi | 1 -
+ 1 file changed, 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399.dtsi
+@@ -1333,7 +1333,6 @@
+ 		interrupts = <GIC_SPI 131 IRQ_TYPE_LEVEL_HIGH 0>;
+ 		clocks = <&cru PCLK_DDR_MON>;
+ 		clock-names = "pclk_ddr_mon";
+-		status = "disabled";
+ 	};
+ 
+ 	vpu: video-codec@ff650000 {
diff --git a/target/linux/rockchip/patches-6.1/412-arm64-dts-rockchip-rk356x-Add-DFI.patch b/target/linux/rockchip/patches-6.1/412-arm64-dts-rockchip-rk356x-Add-DFI.patch
new file mode 100644
index 0000000000..ce9dceb74f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/412-arm64-dts-rockchip-rk356x-Add-DFI.patch
@@ -0,0 +1,29 @@
+From 512c554e882c8e326bffb5d8ac1d5f22d5b85012 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:52 +0200
+Subject: [PATCH 412/414] arm64: dts: rockchip: rk356x: Add DFI
+
+The DFI unit can be used to measure DRAM utilization using perf. Add the
+node to the device tree.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ arch/arm64/boot/dts/rockchip/rk356x.dtsi | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk356x.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk356x.dtsi
+@@ -959,6 +959,13 @@
+ 		reg = <0x0 0xfe1a8100 0x0 0x20>;
+ 	};
+ 
++	dfi: dfi@fe230000 {
++		compatible = "rockchip,rk3568-dfi";
++		reg = <0x00 0xfe230000 0x00 0x400>;
++		interrupts = <GIC_SPI 11 IRQ_TYPE_LEVEL_HIGH>;
++		rockchip,pmu = <&pmugrf>;
++	};
++
+ 	pcie2x1: pcie@fe260000 {
+ 		compatible = "rockchip,rk3568-pcie";
+ 		reg = <0x3 0xc0000000 0x0 0x00400000>,
diff --git a/target/linux/rockchip/patches-6.1/413-arm64-dts-rockchip-rk3588s-Add-DFI.patch b/target/linux/rockchip/patches-6.1/413-arm64-dts-rockchip-rk3588s-Add-DFI.patch
new file mode 100644
index 0000000000..386356845b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/413-arm64-dts-rockchip-rk3588s-Add-DFI.patch
@@ -0,0 +1,47 @@
+From 2c76e96fe9d6237430b1cbe64907ab40bc09f315 Mon Sep 17 00:00:00 2001
+From: Sascha Hauer <s.hauer@pengutronix.de>
+Date: Wed, 24 May 2023 10:31:53 +0200
+Subject: [PATCH 413/414] arm64: dts: rockchip: rk3588s: Add DFI
+
+The DFI unit can be used to measure DRAM utilization using perf. Add the
+node to the device tree. The DFI needs a rockchip,pmu phandle to the pmu
+containing registers for SDRAM configuration details. This is added in
+this patch as well.
+
+Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 16 ++++++++++++++++
+ 1 file changed, 16 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -945,6 +945,11 @@
+ 		};
+ 	};
+ 
++	pmu1grf: syscon@fd58a000 {
++		compatible = "rockchip,rk3588-pmugrf", "syscon", "simple-mfd";
++		reg = <0x0 0xfd58a000 0x0 0x10000>;
++	};
++
+ 	sys_grf: syscon@fd58c000 {
+ 		compatible = "rockchip,rk3588-sys-grf", "syscon";
+ 		reg = <0x0 0xfd58c000 0x0 0x1000>;
+@@ -1890,6 +1895,17 @@
+ 		};
+ 	};
+ 
++	dfi: dfi@fe060000 {
++		reg = <0x00 0xfe060000 0x00 0x10000>;
++		compatible = "rockchip,rk3588-dfi";
++		interrupts = <GIC_SPI 28 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 38 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 48 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 58 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-names = "ch0", "ch1", "ch2", "ch3";
++		rockchip,pmu = <&pmu1grf>;
++	};
++
+ 	gmac1: ethernet@fe1c0000 {
+ 		compatible = "rockchip,rk3588-gmac", "snps,dwmac-4.20a";
+ 		reg = <0x0 0xfe1c0000 0x0 0x10000>;
diff --git a/target/linux/rockchip/patches-6.1/414-arm64-dts-rockchip-rk3588-add-cpu-2.4-GHz-operating-.patch b/target/linux/rockchip/patches-6.1/414-arm64-dts-rockchip-rk3588-add-cpu-2.4-GHz-operating-.patch
new file mode 100644
index 0000000000..2e5a3b3234
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/414-arm64-dts-rockchip-rk3588-add-cpu-2.4-GHz-operating-.patch
@@ -0,0 +1,39 @@
+From b47e957a3e8f2c70d1c265fb2334ab1de31c2aef Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Fri, 2 Jun 2023 02:56:41 -0400
+Subject: [PATCH 414/414] arm64: dts: rockchip: rk3588: add cpu 2.4 GHz
+ operating point
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -149,6 +149,12 @@
+ 					<925000 925000 1000000>;
+ 			clock-latency-ns = <40000>;
+ 		};
++		opp-2400000000 {
++			opp-hz = /bits/ 64 <2400000000>;
++			opp-microvolt = <1000000 1000000 1000000>,
++					<1000000 1000000 1000000>;
++			clock-latency-ns = <40000>;
++		};
+ 	};
+ 
+ 	cluster2_opp_table: opp-table-cluster2 {
+@@ -226,6 +232,12 @@
+ 					<925000 925000 1000000>;
+ 			clock-latency-ns = <40000>;
+ 		};
++		opp-2400000000 {
++			opp-hz = /bits/ 64 <2400000000>;
++			opp-microvolt = <1000000 1000000 1000000>,
++					<1000000 1000000 1000000>;
++			clock-latency-ns = <40000>;
++		};
+ 	};
+ 
+ 	cpus {
diff --git a/target/linux/rockchip/patches-6.1/416-dt-bindings-iio-rockchip-Fix-oneOf-condition-failed-.patch b/target/linux/rockchip/patches-6.1/416-dt-bindings-iio-rockchip-Fix-oneOf-condition-failed-.patch
new file mode 100644
index 0000000000..7b18cceec3
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/416-dt-bindings-iio-rockchip-Fix-oneOf-condition-failed-.patch
@@ -0,0 +1,37 @@
+From 3e3c84448422ec7c86db84a539ad9cfcc62dd4c2 Mon Sep 17 00:00:00 2001
+From: Shreeya Patel <shreeya.patel@collabora.com>
+Date: Sat, 10 Jun 2023 20:06:01 +0530
+Subject: [PATCH] dt-bindings: iio: rockchip: Fix 'oneOf' condition failed
+ warning
+
+rk3588-saradc isn't compatible with the rk3399-saradc variant,
+hence, fix the following dtbs_check warning for 'oneOf' condition
+failure.
+
+DTC_CHK arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dtb
+/home/shreeya/linux/arch/arm64/boot/dts/rockchip/rk3588-rock-5b.dtb:
+	saradc@fec10000: compatible: 'oneOf' conditional failed,
+	one must be fixed:
+	['rockchip,rk3588-saradc'] is too short
+	'rockchip,saradc' was expected
+	'rockchip,rk3066-tsadc' was expected
+	'rockchip,rk3399-saradc' was expected
+
+Fixes: 2daf2ae9793d ("dt-bindings: iio: adc: Add rockchip,rk3588-saradc string")
+Signed-off-by: Shreeya Patel <shreeya.patel@collabora.com>
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Acked-by: Conor Dooley <conor.dooley@microchip.com>
+---
+ Documentation/devicetree/bindings/iio/adc/rockchip-saradc.yaml | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/Documentation/devicetree/bindings/iio/adc/rockchip-saradc.yaml
++++ b/Documentation/devicetree/bindings/iio/adc/rockchip-saradc.yaml
+@@ -15,6 +15,7 @@ properties:
+       - const: rockchip,saradc
+       - const: rockchip,rk3066-tsadc
+       - const: rockchip,rk3399-saradc
++      - const: rockchip,rk3588-saradc
+       - items:
+           - enum:
+               - rockchip,px30-saradc
diff --git a/target/linux/rockchip/patches-6.1/417-rockchip-add-FriendlyElec-NanoPi-R6C-Plus.patch b/target/linux/rockchip/patches-6.1/417-rockchip-add-FriendlyElec-NanoPi-R6C-Plus.patch
new file mode 100644
index 0000000000..9862d4528e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/417-rockchip-add-FriendlyElec-NanoPi-R6C-Plus.patch
@@ -0,0 +1,144 @@
+From ba70dba1ea8347003c94f0fdad00ff6dd765408c Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Tue, 13 Jun 2023 02:40:07 -0400
+Subject: [PATCH] rockchip: add FriendlyElec NanoPi R6C Plus
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../dts/rockchip/rk3588s-nanopi-r6c-plus.dts  | 121 ++++++++++++++++++
+ 2 files changed, 122 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588s-nanopi-r6c-plus.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -104,4 +104,5 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-i
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-khadas-edge2.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-nanopi-r6c.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-nanopi-r6s.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-nanopi-r6c-plus.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-rock-5a.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-nanopi-r6c-plus.dts
+@@ -0,0 +1,121 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * Copyright (c) 2022 FriendlyElec Computer Tech. Co., Ltd.
++ * (http://www.friendlyelec.com)
++ * Copyright (c) 2023, Marty Jones <mj8263788@gmail.com
++ * Copyright (c) 2021 Rockchip Electronics Co., Ltd.
++ */
++
++/dts-v1/;
++
++#include "rk3588-nanopi6-common.dtsi"
++
++/ {
++	model = "FriendlyElec NanoPi R6C Plus";
++	compatible = "friendlyelec,nanopi-r6c-plus", "rockchip,rk3588";
++
++	aliases {
++		mmc0 = &sdmmc;
++		mmc1 = &sdhci;
++		ethernet0 = &gmac1;
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	gpio_keys: gpio-keys {
++		compatible = "gpio-keys";
++		pinctrl-names = "default";
++		pinctrl-0 = <&key1_pin>;
++	};
++
++	gpio_leds: gpio-leds {
++		compatible = "gpio-leds";
++
++		sys_led: led-sys {
++			gpios = <&gpio1 RK_PC1 GPIO_ACTIVE_HIGH>;
++			label = "red:sys";
++			linux,default-trigger = "heartbeat";
++			pinctrl-names = "default";
++			pinctrl-0 = <&sys_led_pin>;
++		};
++
++		wan_led: led-wan {
++			gpios = <&gpio1 RK_PC2 GPIO_ACTIVE_HIGH>;
++			label = "green:wan";
++			pinctrl-names = "default";
++			pinctrl-0 = <&wan_led_pin>;
++		};
++
++		lan_led: led-lan {
++			gpios = <&gpio1 RK_PC3 GPIO_ACTIVE_HIGH>;
++			label = "green:lan";
++			pinctrl-names = "default";
++			pinctrl-0 = <&lan1_led_pin>;
++		};
++
++		lan2_led: led-lan2 {
++			gpios = <&gpio1 RK_PC4 GPIO_ACTIVE_HIGH>;
++			label = "green:lan1";
++			pinctrl-names = "default";
++			pinctrl-0 = <&lan2_led_pin>;
++		};
++	};
++};
++
++
++&pinctrl {
++	gpio-key {
++		key1_pin: key1-pin {
++			rockchip,pins = <1 RK_PC0 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++	};
++
++	gpio-leds {
++		sys_led_pin: sys-led-pin {
++			rockchip,pins =
++				<1 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		wan_led_pin: wan-led-pin {
++			rockchip,pins =
++				<1 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		lan1_led_pin: lan1-led-pin {
++			rockchip,pins =
++				<1 RK_PC3 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		lan2_led_pin: lan2-led-pin {
++			rockchip,pins =
++				<1 RK_PC4 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	usb {
++		vcc5v0_host20_en: vcc5v0-host20-en {
++			rockchip,pins = <4 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&i2c6 {
++	clock-frequency = <200000>;
++	status = "okay";
++
++	eeprom@53 {
++		compatible = "microchip,24c02", "atmel,24c02";
++		reg = <0x53>;
++		#address-cells = <2>;
++		#size-cells = <0>;
++		pagesize = <16>;
++		size = <256>;
++
++		eui_48: eui-48@fa {
++			reg = <0xfa 0x06>;
++		};
++	};
++};
diff --git a/target/linux/rockchip/patches-6.1/418-irqchip-gic-v3-Enable-Rockchip-3588001-erratum-worka.patch b/target/linux/rockchip/patches-6.1/418-irqchip-gic-v3-Enable-Rockchip-3588001-erratum-worka.patch
new file mode 100644
index 0000000000..ab6d940558
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/418-irqchip-gic-v3-Enable-Rockchip-3588001-erratum-worka.patch
@@ -0,0 +1,33 @@
+From 567f67acac94e7bbc4cb4b71ff9773555d02609a Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 3 Jul 2023 18:41:29 +0200
+Subject: [PATCH] irqchip/gic-v3: Enable Rockchip 3588001 erratum workaround
+ for RK3588S
+
+Commit a8707f553884 ("irqchip/gic-v3: Add Rockchip 3588001 erratum
+workaround") mentioned RK3588S (the slimmed down variant of RK3588)
+being affected, but did not check for its compatible value. Thus the
+quirk is not applied on RK3588S. Since the GIC ITS node got added to the
+upstream DT, boards using RK3588S are no longer booting without this
+quirk being applied.
+
+Fixes: 06cdac8e8407 ("arm64: dts: rockchip: add GIC ITS support to rk3588")
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Marc Zyngier <maz@kernel.org>
+Link: https://lore.kernel.org/r/20230703164129.193991-1-sebastian.reichel@collabora.com
+---
+ drivers/irqchip/irq-gic-v3-its.c | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+--- a/drivers/irqchip/irq-gic-v3-its.c
++++ b/drivers/irqchip/irq-gic-v3-its.c
+@@ -4742,7 +4742,8 @@ static bool __maybe_unused its_enable_rk
+ {
+ 	struct its_node *its = data;
+ 
+-	if (!of_machine_is_compatible("rockchip,rk3588"))
++	if (!of_machine_is_compatible("rockchip,rk3588") &&
++	    !of_machine_is_compatible("rockchip,rk3588s"))
+ 		return false;
+ 
+ 	its->flags |= ITS_FLAGS_FORCE_NON_SHAREABLE;
diff --git a/target/linux/rockchip/patches-6.1/502-arm64-defconfig-Enable-Rockchip-OTP-memory-driver.patch b/target/linux/rockchip/patches-6.1/502-arm64-defconfig-Enable-Rockchip-OTP-memory-driver.patch
new file mode 100644
index 0000000000..2a128aff3e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/502-arm64-defconfig-Enable-Rockchip-OTP-memory-driver.patch
@@ -0,0 +1,27 @@
+From c31f91cb13a2e0f9f0b8048b5d9623e1a51ef4d3 Mon Sep 17 00:00:00 2001
+From: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+Date: Sat, 3 Jun 2023 00:00:50 +0300
+Subject: [PATCH 02/16] arm64: defconfig: Enable Rockchip OTP memory driver
+
+The Rockchip one-time programmable memory driver provides access to
+various SoC specific information, e.g. leakage currents of the
+CPU/GPU/NPU components found on a RK3588 SoC.
+
+Enable the driver as built-in to allow client device drivers (e.g.
+cpufreq) to access the required data for proper settings adjustment.
+
+Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@collabora.com>
+---
+ arch/arm64/configs/defconfig | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/arch/arm64/configs/defconfig
++++ b/arch/arm64/configs/defconfig
+@@ -1274,6 +1274,7 @@ CONFIG_NVMEM_IMX_OCOTP_SCU=y
+ CONFIG_NVMEM_MTK_EFUSE=y
+ CONFIG_NVMEM_QCOM_QFPROM=y
+ CONFIG_NVMEM_ROCKCHIP_EFUSE=y
++CONFIG_NVMEM_ROCKCHIP_OTP=y
+ CONFIG_NVMEM_SUNXI_SID=y
+ CONFIG_NVMEM_UNIPHIER_EFUSE=y
+ CONFIG_NVMEM_MESON_EFUSE=m
diff --git a/target/linux/rockchip/patches-6.1/503-mfd-rk808-Make-MFD_RK8XX-tristate.patch b/target/linux/rockchip/patches-6.1/503-mfd-rk808-Make-MFD_RK8XX-tristate.patch
new file mode 100644
index 0000000000..8354b91cb6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/503-mfd-rk808-Make-MFD_RK8XX-tristate.patch
@@ -0,0 +1,26 @@
+From 677a15a324a741649f7f72d57e899ace02901966 Mon Sep 17 00:00:00 2001
+From: Geert Uytterhoeven <geert+renesas@glider.be>
+Date: Tue, 4 Jul 2023 15:07:48 +0200
+Subject: [PATCH 03/16] mfd: rk808: Make MFD_RK8XX tristate
+
+There is no reason for MFD_RK8XX to be bool, all drivers that depend on
+it, or that select it, are tristate.
+
+Fixes: c20e8c5b1203af37 ("mfd: rk808: Split into core and i2c")
+Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ drivers/mfd/Kconfig | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/mfd/Kconfig
++++ b/drivers/mfd/Kconfig
+@@ -1203,7 +1203,7 @@ config MFD_RC5T583
+ 	  different functionality of the device.
+ 
+ config MFD_RK8XX
+-	bool
++	tristate
+ 	select MFD_CORE
+ 
+ config MFD_RK8XX_I2C
diff --git a/target/linux/rockchip/patches-6.1/504-dt-bindings-vendor-prefixes-Add-prefix-for-belling.patch b/target/linux/rockchip/patches-6.1/504-dt-bindings-vendor-prefixes-Add-prefix-for-belling.patch
new file mode 100644
index 0000000000..1bc12bd13e
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/504-dt-bindings-vendor-prefixes-Add-prefix-for-belling.patch
@@ -0,0 +1,26 @@
+From 80e2f784eaa8175644640ae20c3238534a0122fb Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 10 Jul 2023 18:52:16 +0200
+Subject: [PATCH 04/16] dt-bindings: vendor-prefixes: Add prefix for belling
+
+Add a vendor prefix entry for belling (https://www.belling.com.cn)
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Acked-by: Conor Dooley <conor.dooley@microchip.com>
+Link: https://lore.kernel.org/r/20230710165228.105983-2-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+---
+ Documentation/devicetree/bindings/vendor-prefixes.yaml | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/Documentation/devicetree/bindings/vendor-prefixes.yaml
++++ b/Documentation/devicetree/bindings/vendor-prefixes.yaml
+@@ -184,6 +184,8 @@ patternProperties:
+     description: Compass Electronics Group, LLC
+   "^beagle,.*":
+     description: BeagleBoard.org Foundation
++  "^belling,.*":
++    description: Shanghai Belling Co., Ltd.
+   "^bhf,.*":
+     description: Beckhoff Automation GmbH & Co. KG
+   "^bitmain,.*":
diff --git a/target/linux/rockchip/patches-6.1/505-dt-bindings-eeprom-at24-add-Belling-BL24C16A.patch b/target/linux/rockchip/patches-6.1/505-dt-bindings-eeprom-at24-add-Belling-BL24C16A.patch
new file mode 100644
index 0000000000..c49895a451
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/505-dt-bindings-eeprom-at24-add-Belling-BL24C16A.patch
@@ -0,0 +1,27 @@
+From f3c21b7bd54ae0c33f289879267d93b90b6fb5a8 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 10 Jul 2023 18:52:17 +0200
+Subject: [PATCH 05/16] dt-bindings: eeprom: at24: add Belling BL24C16A
+
+Add binding for Belling BL24C16A, which is compatible with Atmel 24C16.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Acked-by: Conor Dooley <conor.dooley@microchip.com>
+Link: https://lore.kernel.org/r/20230710165228.105983-3-sebastian.reichel@collabora.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+---
+ Documentation/devicetree/bindings/eeprom/at24.yaml | 3 +++
+ 1 file changed, 3 insertions(+)
+
+--- a/Documentation/devicetree/bindings/eeprom/at24.yaml
++++ b/Documentation/devicetree/bindings/eeprom/at24.yaml
+@@ -99,6 +99,9 @@ properties:
+       # These are special cases that don't conform to the above pattern.
+       # Each requires a standard at24 model as fallback.
+       - items:
++          - const: belling,bl24c16a
++          - const: atmel,24c16
++      - items:
+           - enum:
+               - rohm,br24g01
+               - rohm,br24t01
diff --git a/target/linux/rockchip/patches-6.1/506-dt-bindings-phy-rockchip-add-RK3588-PCIe-v3-phy.patch b/target/linux/rockchip/patches-6.1/506-dt-bindings-phy-rockchip-add-RK3588-PCIe-v3-phy.patch
new file mode 100644
index 0000000000..a4294c7b9c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/506-dt-bindings-phy-rockchip-add-RK3588-PCIe-v3-phy.patch
@@ -0,0 +1,72 @@
+From bd52e123d6a479ec3a82d10b689f9bfc15b3b471 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Mon, 10 Jul 2023 19:51:11 +0200
+Subject: [PATCH 06/16] dt-bindings: phy: rockchip: add RK3588 PCIe v3 phy
+
+When the RK3568 PCIe v3 PHY supported has been upstreamed, RK3588
+support was included, but the DT binding does not reflect this.
+This adds the missing bits.
+
+Reviewed-by: Conor Dooley <conor.dooley@microchip.com>
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ .../bindings/phy/rockchip,pcie3-phy.yaml      | 33 ++++++++++++++++---
+ 1 file changed, 28 insertions(+), 5 deletions(-)
+
+--- a/Documentation/devicetree/bindings/phy/rockchip,pcie3-phy.yaml
++++ b/Documentation/devicetree/bindings/phy/rockchip,pcie3-phy.yaml
+@@ -13,19 +13,18 @@ properties:
+   compatible:
+     enum:
+       - rockchip,rk3568-pcie3-phy
++      - rockchip,rk3588-pcie3-phy
+ 
+   reg:
+     maxItems: 1
+ 
+   clocks:
+-    minItems: 3
++    minItems: 1
+     maxItems: 3
+ 
+   clock-names:
+-    items:
+-      - const: refclk_m
+-      - const: refclk_n
+-      - const: pclk
++    minItems: 1
++    maxItems: 3
+ 
+   data-lanes:
+     description: which lanes (by position) should be mapped to which
+@@ -61,6 +60,30 @@ required:
+   - rockchip,phy-grf
+   - "#phy-cells"
+ 
++allOf:
++  - if:
++      properties:
++        compatible:
++          enum:
++            - rockchip,rk3588-pcie3-phy
++    then:
++      properties:
++        clocks:
++          maxItems: 1
++        clock-names:
++          items:
++            - const: pclk
++    else:
++      properties:
++        clocks:
++          minItems: 3
++
++        clock-names:
++          items:
++            - const: refclk_m
++            - const: refclk_n
++            - const: pclk
++
+ additionalProperties: false
+ 
+ examples:
diff --git a/target/linux/rockchip/patches-6.1/507-dt-bindings-PCI-dwc-improve-msi-handling.patch b/target/linux/rockchip/patches-6.1/507-dt-bindings-PCI-dwc-improve-msi-handling.patch
new file mode 100644
index 0000000000..deb200cfb1
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/507-dt-bindings-PCI-dwc-improve-msi-handling.patch
@@ -0,0 +1,43 @@
+From 872b174a8eb3e9471522622ffe4114985faeccf0 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Sat, 15 Jul 2023 00:37:44 +0200
+Subject: [PATCH 07/16] dt-bindings: PCI: dwc: improve msi handling
+
+Allow missing "msi" interrupt, iff the node has a "msi-map" property.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ .../devicetree/bindings/pci/snps,dw-pcie.yaml     | 15 +++++++++------
+ 1 file changed, 9 insertions(+), 6 deletions(-)
+
+--- a/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/snps,dw-pcie.yaml
+@@ -25,6 +25,15 @@ select:
+ allOf:
+   - $ref: /schemas/pci/pci-bus.yaml#
+   - $ref: /schemas/pci/snps,dw-pcie-common.yaml#
++  - if:
++      not:
++        required:
++          - msi-map
++    then:
++      properties:
++        interrupt-names:
++          contains:
++            const: msi
+ 
+ properties:
+   reg:
+@@ -202,12 +211,6 @@ properties:
+         - description: Combined Error interrupt signal.
+           const: err
+ 
+-    allOf:
+-      - contains:
+-          enum:
+-            - msi
+-            - msg
+-
+ additionalProperties: true
+ 
+ required:
diff --git a/target/linux/rockchip/patches-6.1/508-arm64-defconfig-enable-Synopsys-AHCI-SATA-support.patch b/target/linux/rockchip/patches-6.1/508-arm64-defconfig-enable-Synopsys-AHCI-SATA-support.patch
new file mode 100644
index 0000000000..1e204b204b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/508-arm64-defconfig-enable-Synopsys-AHCI-SATA-support.patch
@@ -0,0 +1,23 @@
+From 4e04a701a45e2155b979fd982a3447e9b84354d4 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 25 Jul 2023 15:47:18 +0200
+Subject: [PATCH 08/16] arm64: defconfig: enable Synopsys AHCI SATA support
+
+Enable support for the DesignWare AHCI Host Controller. It is used
+by recent Rockchip SoCs.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ arch/arm64/configs/defconfig | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/arch/arm64/configs/defconfig
++++ b/arch/arm64/configs/defconfig
+@@ -302,6 +302,7 @@ CONFIG_SATA_AHCI=y
+ CONFIG_SATA_AHCI_PLATFORM=y
+ CONFIG_AHCI_BRCM=m
+ CONFIG_AHCI_CEVA=y
++CONFIG_AHCI_DWC=m
+ CONFIG_AHCI_MVEBU=y
+ CONFIG_AHCI_XGENE=y
+ CONFIG_AHCI_QORIQ=y
diff --git a/target/linux/rockchip/patches-6.1/509-dt-bindings-usb-add-rk3588-compatible-to-rockchip-dw.patch b/target/linux/rockchip/patches-6.1/509-dt-bindings-usb-add-rk3588-compatible-to-rockchip-dw.patch
new file mode 100644
index 0000000000..bfbd84a1dc
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/509-dt-bindings-usb-add-rk3588-compatible-to-rockchip-dw.patch
@@ -0,0 +1,61 @@
+From ce7d7fe0542a0c4322bb36bcb4eb09c829840237 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Thu, 20 Jul 2023 18:05:56 +0200
+Subject: [PATCH 09/16] dt-bindings: usb: add rk3588 compatible to
+ rockchip,dwc3
+
+RK3588 has three DWC3 controllers. Two of them are fully functional in
+host, device and OTG mode including USB2 support. They are connected to
+dedicated PHYs, that also support USB-C's DisplayPort alternate mode.
+
+The third controller is connected to one of the combphy's shared
+with PCIe and SATA. It can only be used in host mode and does not
+support USB2. Compared to the other controllers this one needs
+some extra clocks.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ .../devicetree/bindings/usb/rockchip,dwc3.yaml        | 11 +++++++++--
+ 1 file changed, 9 insertions(+), 2 deletions(-)
+
+--- a/Documentation/devicetree/bindings/usb/rockchip,dwc3.yaml
++++ b/Documentation/devicetree/bindings/usb/rockchip,dwc3.yaml
+@@ -30,6 +30,7 @@ select:
+         enum:
+           - rockchip,rk3328-dwc3
+           - rockchip,rk3568-dwc3
++          - rockchip,rk3588-dwc3
+   required:
+     - compatible
+ 
+@@ -39,6 +40,7 @@ properties:
+       - enum:
+           - rockchip,rk3328-dwc3
+           - rockchip,rk3568-dwc3
++          - rockchip,rk3588-dwc3
+       - const: snps,dwc3
+ 
+   reg:
+@@ -58,7 +60,9 @@ properties:
+           Master/Core clock, must to be >= 62.5 MHz for SS
+           operation and >= 30MHz for HS operation
+       - description:
+-          Controller grf clock
++          Controller grf clock OR UTMI clock
++      - description:
++          PIPE clock
+ 
+   clock-names:
+     minItems: 3
+@@ -66,7 +70,10 @@ properties:
+       - const: ref_clk
+       - const: suspend_clk
+       - const: bus_clk
+-      - const: grf_clk
++      - enum:
++          - grf_clk
++          - utmi
++      - const: pipe
+ 
+   power-domains:
+     maxItems: 1
diff --git a/target/linux/rockchip/patches-6.1/510-dt-bindings-soc-rockchip-add-rk3588-USB3-syscon.patch b/target/linux/rockchip/patches-6.1/510-dt-bindings-soc-rockchip-add-rk3588-USB3-syscon.patch
new file mode 100644
index 0000000000..95329237bb
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/510-dt-bindings-soc-rockchip-add-rk3588-USB3-syscon.patch
@@ -0,0 +1,57 @@
+From 1009b78caa4c2ca434c98f22cd38873f0f6cd83d Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 30 May 2023 18:49:48 +0200
+Subject: [PATCH 10/16] dt-bindings: soc: rockchip: add rk3588 USB3 syscon
+
+RK3588 USB3 support requires the GRF for USB, USBDP PHY and VO.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ .../devicetree/bindings/soc/rockchip/grf.yaml | 22 +++++++++++++++++++
+ 1 file changed, 22 insertions(+)
+
+--- a/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
++++ b/Documentation/devicetree/bindings/soc/rockchip/grf.yaml
+@@ -28,6 +28,9 @@ properties:
+               - rockchip,rk3588-sys-grf
+               - rockchip,rk3588-pcie3-phy-grf
+               - rockchip,rk3588-pcie3-pipe-grf
++              - rockchip,rk3588-usb-grf
++              - rockchip,rk3588-usbdpphy-grf
++              - rockchip,rk3588-vo-grf
+               - rockchip,rv1108-usbgrf
+           - const: syscon
+       - items:
+@@ -64,6 +67,9 @@ properties:
+   reg:
+     maxItems: 1
+ 
++  clocks:
++    maxItems: 1
++
+   "#address-cells":
+     const: 1
+ 
+@@ -245,6 +251,22 @@ allOf:
+ 
+           unevaluatedProperties: false
+ 
++  - if:
++      properties:
++        compatible:
++          contains:
++            enum:
++              - rockchip,rk3588-vo-grf
++
++    then:
++      required:
++        - clocks
++
++    else:
++      properties:
++        clocks: false
++
++
+ examples:
+   - |
+     #include <dt-bindings/clock/rk3399-cru.h>
diff --git a/target/linux/rockchip/patches-6.1/511-dt-bindings-media-rockchip-Add-resets-property-into-.patch b/target/linux/rockchip/patches-6.1/511-dt-bindings-media-rockchip-Add-resets-property-into-.patch
new file mode 100644
index 0000000000..786b25e043
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/511-dt-bindings-media-rockchip-Add-resets-property-into-.patch
@@ -0,0 +1,27 @@
+From 86674aee98f7d04e56cccbb8f1f0f8ca42a2207e Mon Sep 17 00:00:00 2001
+From: Benjamin Gaignard <benjamin.gaignard@collabora.com>
+Date: Mon, 12 Jun 2023 14:57:58 +0200
+Subject: [PATCH 11/16] dt-bindings: media: rockchip: Add resets property into
+ decoder node
+
+RK3588 AV1 decoder hardware block have resets lines and driver code
+already suppport it.
+Update yaml file to be aligned with this feature.
+
+Signed-off-by: Benjamin Gaignard <benjamin.gaignard@collabora.com>
+---
+ Documentation/devicetree/bindings/media/rockchip-vpu.yaml | 3 +++
+ 1 file changed, 3 insertions(+)
+
+--- a/Documentation/devicetree/bindings/media/rockchip-vpu.yaml
++++ b/Documentation/devicetree/bindings/media/rockchip-vpu.yaml
+@@ -67,6 +67,9 @@ properties:
+   iommus:
+     maxItems: 1
+ 
++  resets:
++    maxItems: 4
++
+ required:
+   - compatible
+   - reg
diff --git a/target/linux/rockchip/patches-6.1/512-dt-bindings-es8328-convert-to-DT-schema-format.patch b/target/linux/rockchip/patches-6.1/512-dt-bindings-es8328-convert-to-DT-schema-format.patch
new file mode 100644
index 0000000000..4447da94ab
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/512-dt-bindings-es8328-convert-to-DT-schema-format.patch
@@ -0,0 +1,136 @@
+From 1fe90f727d4f8e3e5860d47c7a8cd3d356ca5620 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 25 Jul 2023 18:49:43 +0200
+Subject: [PATCH 12/16] dt-bindings: es8328: convert to DT schema format
+
+Convert the binding to DT schema format.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ .../devicetree/bindings/sound/es8328.txt      | 38 ---------
+ .../bindings/sound/everest,es8328.yaml        | 77 +++++++++++++++++++
+ 2 files changed, 77 insertions(+), 38 deletions(-)
+ delete mode 100644 Documentation/devicetree/bindings/sound/es8328.txt
+ create mode 100644 Documentation/devicetree/bindings/sound/everest,es8328.yaml
+
+--- a/Documentation/devicetree/bindings/sound/es8328.txt
++++ /dev/null
+@@ -1,38 +0,0 @@
+-Everest ES8328 audio CODEC
+-
+-This device supports both I2C and SPI.
+-
+-Required properties:
+-
+-  - compatible  : Should be "everest,es8328" or "everest,es8388"
+-  - DVDD-supply : Regulator providing digital core supply voltage 1.8 - 3.6V
+-  - AVDD-supply : Regulator providing analog supply voltage 3.3V
+-  - PVDD-supply : Regulator providing digital IO supply voltage 1.8 - 3.6V
+-  - IPVDD-supply : Regulator providing analog output voltage 3.3V
+-  - clocks : A 22.5792 or 11.2896 MHz clock
+-  - reg : the I2C address of the device for I2C, the chip select number for SPI
+-
+-Pins on the device (for linking into audio routes):
+-
+-  * LOUT1
+-  * LOUT2
+-  * ROUT1
+-  * ROUT2
+-  * LINPUT1
+-  * RINPUT1
+-  * LINPUT2
+-  * RINPUT2
+-  * Mic Bias
+-
+-
+-Example:
+-
+-codec: es8328@11 {
+-	compatible = "everest,es8328";
+-	DVDD-supply = <&reg_3p3v>;
+-	AVDD-supply = <&reg_3p3v>;
+-	PVDD-supply = <&reg_3p3v>;
+-	HPVDD-supply = <&reg_3p3v>;
+-	clocks = <&clks 169>;
+-	reg = <0x11>;
+-};
+--- /dev/null
++++ b/Documentation/devicetree/bindings/sound/everest,es8328.yaml
+@@ -0,0 +1,77 @@
++# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
++%YAML 1.2
++---
++$id: http://devicetree.org/schemas/sound/everest,es8328.yaml#
++$schema: http://devicetree.org/meta-schemas/core.yaml#
++
++title: Everest ES8328 audio CODEC
++
++description:
++  Everest Audio Codec, which can be connected via I2C or SPI.
++  Pins on the device (for linking into audio routes) are
++  * LOUT1
++  * LOUT2
++  * ROUT1
++  * ROUT2
++  * LINPUT1
++  * RINPUT1
++  * LINPUT2
++  * RINPUT2
++  * Mic Bias
++
++maintainers:
++  - David Yang <yangxiaohua@everest-semi.com>
++
++properties:
++  compatible:
++    enum:
++      - everest,es8328
++      - everest,es8388
++
++  reg:
++    maxItems: 1
++
++  "#sound-dai-cells":
++    const: 0
++
++  clocks:
++    items:
++      - description: A 22.5792 or 11.2896 MHz clock
++
++  DVDD-supply:
++    description: Regulator providing digital core supply voltage 1.8 - 3.6V
++
++  AVDD-supply:
++    description: Regulator providing analog supply voltage 3.3V
++
++  PVDD-supply:
++    description: Regulator providing digital IO supply voltage 1.8 - 3.6V
++
++  IPVDD-supply:
++    description: Regulator providing analog output voltage 3.3V
++
++required:
++  - compatible
++  - clocks
++  - DVDD-supply
++  - AVDD-supply
++  - PVDD-supply
++  - IPVDD-supply
++
++additionalProperties: false
++
++examples:
++  - |
++    i2c {
++      #address-cells = <1>;
++      #size-cells = <0>;
++      es8328: codec@11 {
++        compatible = "everest,es8328";
++        reg = <0x11>;
++        AVDD-supply = <&reg_3p3v>;
++        DVDD-supply = <&reg_3p3v>;
++        HPVDD-supply = <&reg_3p3v>;
++        PVDD-supply = <&reg_3p3v>;
++        clocks = <&clks 169>;
++      };
++    };
diff --git a/target/linux/rockchip/patches-6.1/513-clk-rockchip-rk3588-fix-pclk_vo0grf-and-pclk_vo1grf.patch b/target/linux/rockchip/patches-6.1/513-clk-rockchip-rk3588-fix-pclk_vo0grf-and-pclk_vo1grf.patch
new file mode 100644
index 0000000000..06033503bf
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/513-clk-rockchip-rk3588-fix-pclk_vo0grf-and-pclk_vo1grf.patch
@@ -0,0 +1,72 @@
+From fb03ca05f94ed0698cafa7135576e9a58ea75048 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Tue, 13 Jun 2023 16:45:05 +0200
+Subject: [PATCH 13/16] clk: rockchip: rk3588: fix pclk_vo0grf and pclk_vo1grf
+
+Currently pclk_vo1grf is not exposed, but it should be referenced
+from the vo1_grf syscon, which needs it enabled. That syscon will
+be required for HDMI-RX functionality among other things.
+
+Apart from that pclk_vo0grf and pclk_vo1grf are both linked gates
+and need the VO's hclk enabled in addition to their parent clock.
+
+No Fixes tag has been added, since the logic requiring these clocks
+is not yet upstream anyways.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ drivers/clk/rockchip/clk-rk3588.c               | 11 +++++------
+ include/dt-bindings/clock/rockchip,rk3588-cru.h |  3 ++-
+ 2 files changed, 7 insertions(+), 7 deletions(-)
+
+--- a/drivers/clk/rockchip/clk-rk3588.c
++++ b/drivers/clk/rockchip/clk-rk3588.c
+@@ -1851,8 +1851,6 @@ static struct rockchip_clk_branch rk3588
+ 			RK3588_CLKGATE_CON(56), 0, GFLAGS),
+ 	GATE(PCLK_TRNG0, "pclk_trng0", "pclk_vo0_root", 0,
+ 			RK3588_CLKGATE_CON(56), 1, GFLAGS),
+-	GATE(PCLK_VO0GRF, "pclk_vo0grf", "pclk_vo0_root", CLK_IGNORE_UNUSED,
+-			RK3588_CLKGATE_CON(55), 10, GFLAGS),
+ 	COMPOSITE(CLK_I2S4_8CH_TX_SRC, "clk_i2s4_8ch_tx_src", gpll_aupll_p, 0,
+ 			RK3588_CLKSEL_CON(118), 5, 1, MFLAGS, 0, 5, DFLAGS,
+ 			RK3588_CLKGATE_CON(56), 11, GFLAGS),
+@@ -1998,8 +1996,6 @@ static struct rockchip_clk_branch rk3588
+ 			RK3588_CLKGATE_CON(60), 9, GFLAGS),
+ 	GATE(PCLK_TRNG1, "pclk_trng1", "pclk_vo1_root", 0,
+ 			RK3588_CLKGATE_CON(60), 10, GFLAGS),
+-	GATE(0, "pclk_vo1grf", "pclk_vo1_root", CLK_IGNORE_UNUSED,
+-			RK3588_CLKGATE_CON(59), 12, GFLAGS),
+ 	GATE(PCLK_S_EDP0, "pclk_s_edp0", "pclk_vo1_s_root", 0,
+ 			RK3588_CLKGATE_CON(59), 14, GFLAGS),
+ 	GATE(PCLK_S_EDP1, "pclk_s_edp1", "pclk_vo1_s_root", 0,
+@@ -2447,12 +2443,15 @@ static struct rockchip_clk_branch rk3588
+ 	GATE_LINK(HCLK_RKVDEC1_PRE, "hclk_rkvdec1_pre", "hclk_rkvdec1_root", "hclk_vdpu_root", 0, RK3588_CLKGATE_CON(41), 4, GFLAGS),
+ 	GATE_LINK(ACLK_RKVDEC1_PRE, "aclk_rkvdec1_pre", "aclk_rkvdec1_root", "aclk_vdpu_root", 0, RK3588_CLKGATE_CON(41), 5, GFLAGS),
+ 	GATE_LINK(ACLK_HDCP0_PRE, "aclk_hdcp0_pre", "aclk_vo0_root", "aclk_vop_low_root", 0, RK3588_CLKGATE_CON(55), 9, GFLAGS),
+-	GATE_LINK(HCLK_VO0, "hclk_vo0", "hclk_vo0_root", "hclk_vop_root", 0, RK3588_CLKGATE_CON(55), 5, GFLAGS),
++	GATE_LINK(HCLK_VO0, "hclk_vo0", "hclk_vo0_root", "hclk_vop_root", RK3588_LINKED_CLK, RK3588_CLKGATE_CON(55), 5, GFLAGS),
+ 	GATE_LINK(ACLK_HDCP1_PRE, "aclk_hdcp1_pre", "aclk_hdcp1_root", "aclk_vo1usb_top_root", 0, RK3588_CLKGATE_CON(59), 6, GFLAGS),
+-	GATE_LINK(HCLK_VO1, "hclk_vo1", "hclk_vo1_root", "hclk_vo1usb_top_root", 0, RK3588_CLKGATE_CON(59), 9, GFLAGS),
++	GATE_LINK(HCLK_VO1, "hclk_vo1", "hclk_vo1_root", "hclk_vo1usb_top_root", RK3588_LINKED_CLK, RK3588_CLKGATE_CON(59), 9, GFLAGS),
+ 	GATE_LINK(ACLK_AV1_PRE, "aclk_av1_pre", "aclk_av1_root", "aclk_vdpu_root", 0, RK3588_CLKGATE_CON(68), 1, GFLAGS),
+ 	GATE_LINK(PCLK_AV1_PRE, "pclk_av1_pre", "pclk_av1_root", "hclk_vdpu_root", 0, RK3588_CLKGATE_CON(68), 4, GFLAGS),
+ 	GATE_LINK(HCLK_SDIO_PRE, "hclk_sdio_pre", "hclk_sdio_root", "hclk_nvm", 0, RK3588_CLKGATE_CON(75), 1, GFLAGS),
++	GATE_LINK(PCLK_VO0GRF, "pclk_vo0grf", "pclk_vo0_root", "hclk_vo0", CLK_IGNORE_UNUSED, RK3588_CLKGATE_CON(55), 10, GFLAGS),
++	GATE_LINK(PCLK_VO1GRF, "pclk_vo1grf", "pclk_vo1_root", "hclk_vo1", CLK_IGNORE_UNUSED, RK3588_CLKGATE_CON(59), 12, GFLAGS),
++
+ };
+ 
+ static void __init rk3588_clk_init(struct device_node *np)
+--- a/include/dt-bindings/clock/rockchip,rk3588-cru.h
++++ b/include/dt-bindings/clock/rockchip,rk3588-cru.h
+@@ -733,8 +733,9 @@
+ #define ACLK_AV1_PRE			718
+ #define PCLK_AV1_PRE			719
+ #define HCLK_SDIO_PRE			720
++#define PCLK_VO1GRF			721
+ 
+-#define CLK_NR_CLKS			(HCLK_SDIO_PRE + 1)
++#define CLK_NR_CLKS			(PCLK_VO1GRF + 1)
+ 
+ /* scmi-clocks indices */
+ 
diff --git a/target/linux/rockchip/patches-6.1/514-rockchip-add-orange-pi-5-plus.patch b/target/linux/rockchip/patches-6.1/514-rockchip-add-orange-pi-5-plus.patch
new file mode 100644
index 0000000000..db4bd9201d
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/514-rockchip-add-orange-pi-5-plus.patch
@@ -0,0 +1,20 @@
+From 8467ad95ecac14f74823881b7a74f036e9014af3 Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Fri, 18 Aug 2023 17:32:00 -0400
+Subject: [PATCH 14/16] rockchip: add orange pi 5 plus
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -99,6 +99,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-ro
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-edgeble-neu6a-io.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-edgeble-neu6b-io.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-v10.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-orangepi-5-plus.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-rock-5b.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-indiedroid-nova.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-khadas-edge2.dtb
diff --git a/target/linux/rockchip/patches-6.1/515-dt-bindings-PCI-dwc-rockchip-Fix-interrupt-names-iss.patch b/target/linux/rockchip/patches-6.1/515-dt-bindings-PCI-dwc-rockchip-Fix-interrupt-names-iss.patch
new file mode 100644
index 0000000000..4227ffae7c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/515-dt-bindings-PCI-dwc-rockchip-Fix-interrupt-names-iss.patch
@@ -0,0 +1,91 @@
+From 07329be104dc1ea8a2504222cacda20a997454f2 Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Sat, 15 Jul 2023 00:39:28 +0200
+Subject: [PATCH 15/16] dt-bindings: PCI: dwc: rockchip: Fix interrupt-names
+ issue
+
+The RK356x (and RK3588) have 5 ganged interrupts. For example the
+"legacy" interrupt combines "inta/intb/intc/intd" with a register
+providing the details, which specific interrupt triggered. The
+interrupts from the second level are part of the Synopsys DW PCIe
+System Information Interface (SII). Some of them are listed in the
+Interrupt Signals section, the others are mostly common SII output
+signals. The grouping and the ganged interrupt controllers are
+specific to the Rockchip implementation.
+
+Currently the binding is not specifying these interrupts resulting
+in a bunch of errors for all rk356x/rk3588 boards using PCIe.
+
+Fix this by specifying the interrupts and add them to the example
+to prevent regressions.
+
+This changes the reference from snps,dw-pcie.yaml to
+snps,dw-pcie-common.yaml, since the interrupts are vendor
+specific and should not be listed in the generic file. The
+only other bit from the generic binding are the reg-names,
+which are overwritten by this binding.
+
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ .../bindings/pci/rockchip-dw-pcie.yaml        | 32 +++++++++++++++++--
+ 1 file changed, 30 insertions(+), 2 deletions(-)
+
+--- a/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
+@@ -61,7 +61,29 @@ properties:
+       - const: pipe
+ 
+   interrupts:
+-    maxItems: 5
++    items:
++      - description:
++          Combined system interrupt, which is used to signal the following
++          interrupts - phy_link_up, dll_link_up, link_req_rst_not, hp_pme,
++          hp, hp_msi, link_auto_bw, link_auto_bw_msi, bw_mgt, bw_mgt_msi,
++          edma_wr, edma_rd, dpa_sub_upd, rbar_update, link_eq_req, ep_elbi_app
++      - description:
++          Combined PM interrupt, which is used to signal the following
++          interrupts - linkst_in_l1sub, linkst_in_l1, linkst_in_l2,
++          linkst_in_l0s, linkst_out_l1sub, linkst_out_l1, linkst_out_l2,
++          linkst_out_l0s, pm_dstate_update
++      - description:
++          Combined message interrupt, which is used to signal the following
++          interrupts - ven_msg, unlock_msg, ltr_msg, cfg_pme, cfg_pme_msi,
++          pm_pme, pm_to_ack, pm_turnoff, obff_idle, obff_obff, obff_cpu_active
++      - description:
++          Combined legacy interrupt, which is used to signal the following
++          interrupts - inta, intb, intc, intd
++      - description:
++          Combined error interrupt, which is used to signal the following
++          interrupts - aer_rc_err, aer_rc_err_msi, rx_cpl_timeout,
++          tx_cpl_timeout, cor_err_sent, nf_err_sent, f_err_sent, cor_err_rx,
++          nf_err_rx, f_err_rx, radm_qoverflow
+ 
+   interrupt-names:
+     items:
+@@ -74,6 +96,7 @@ properties:
+   legacy-interrupt-controller:
+     description: Interrupt controller node for handling legacy PCI interrupts.
+     type: object
++    additionalProperties: false
+     properties:
+       "#address-cells":
+         const: 0
+@@ -81,11 +104,16 @@ properties:
+       "#interrupt-cells":
+         const: 1
+ 
+-      "interrupt-controller": true
++      interrupt-controller: true
+ 
+       interrupts:
+         items:
+           - description: combined legacy interrupt
++    required:
++      - "#address-cells"
++      - "#interrupt-cells"
++      - interrupt-controller
++      - interrupts
+ 
+   msi-map: true
+ 
diff --git a/target/linux/rockchip/patches-6.1/516-rockchip-sync-rk3588.patch b/target/linux/rockchip/patches-6.1/516-rockchip-sync-rk3588.patch
new file mode 100644
index 0000000000..90511ad413
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/516-rockchip-sync-rk3588.patch
@@ -0,0 +1,588 @@
+From c54299eaa633b0aeaeb05a6e53cabd4e73ec09cd Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Mon, 21 Aug 2023 15:46:52 -0400
+Subject: [PATCH 16/16] rockchip: sync rk3588
+
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi  | 153 +++++++++++++++++--
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 171 ++++++++++++++--------
+ 2 files changed, 254 insertions(+), 70 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -35,6 +35,31 @@
+ 		};
+ 	};
+ 
++	usb_host1_xhci: usb@fc400000 {
++		compatible = "rockchip,rk3588-dwc3", "snps,dwc3";
++		reg = <0x0 0xfc400000 0x0 0x400000>;
++		interrupts = <GIC_SPI 221 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru REF_CLK_USB3OTG1>, <&cru SUSPEND_CLK_USB3OTG1>,
++			 <&cru ACLK_USB3OTG1>;
++		clock-names = "ref_clk", "suspend_clk", "bus_clk";
++		dr_mode = "host";
++		phys = <&u2phy1_otg>, <&usbdp_phy1_u3>;
++		phy-names = "usb2-phy", "usb3-phy";
++		phy_type = "utmi_wide";
++		power-domains = <&power RK3588_PD_USB>;
++		resets = <&cru SRST_A_USB3OTG1>;
++		snps,dis_enblslpm_quirk;
++		snps,dis-u2-freeclk-exists-quirk;
++		snps,dis-del-phy-power-chg-quirk;
++		snps,dis-tx-ipgap-linecheck-quirk;
++		status = "disabled";
++	};
++
++	pcie30_phy_grf: syscon@fd5b8000 {
++		compatible = "rockchip,rk3588-pcie3-phy-grf", "syscon";
++		reg = <0x0 0xfd5b8000 0x0 0x10000>;
++	};
++
+ 	pipe_phy1_grf: syscon@fd5c0000 {
+ 		compatible = "rockchip,rk3588-pipe-phy-grf", "syscon";
+ 		reg = <0x0 0xfd5c0000 0x0 0x100>;
+@@ -62,7 +87,6 @@
+ 			clock-names = "phyclk";
+ 			clock-output-names = "usb480m_phy1";
+ 			#clock-cells = <0>;
+-			rockchip,usbctrl-grf = <&usb_grf>;
+ 			status = "disabled";
+ 
+ 			u2phy1_otg: otg-port {
+@@ -140,10 +164,110 @@
+ 		status = "disabled";
+ 	};
+ 
+-	pcie2x1l0: pcie@fe170000 {
++	pcie3x4: pcie@fe150000 {
+ 		compatible = "rockchip,rk3588-pcie", "rockchip,rk3568-pcie";
+ 		#address-cells = <3>;
+ 		#size-cells = <2>;
++		bus-range = <0x00 0x0f>;
++		clocks = <&cru ACLK_PCIE_4L_MSTR>, <&cru ACLK_PCIE_4L_SLV>,
++			 <&cru ACLK_PCIE_4L_DBI>, <&cru PCLK_PCIE_4L>,
++			 <&cru CLK_PCIE_AUX0>, <&cru CLK_PCIE4L_PIPE>;
++		clock-names = "aclk_mst", "aclk_slv",
++			      "aclk_dbi", "pclk",
++			      "aux", "pipe";
++		device_type = "pci";
++		interrupts = <GIC_SPI 263 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 262 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 261 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 260 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 259 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-names = "sys", "pmc", "msg", "legacy", "err";
++		#interrupt-cells = <1>;
++		interrupt-map-mask = <0 0 0 7>;
++		interrupt-map = <0 0 0 1 &pcie3x4_intc 0>,
++				<0 0 0 2 &pcie3x4_intc 1>,
++				<0 0 0 3 &pcie3x4_intc 2>,
++				<0 0 0 4 &pcie3x4_intc 3>;
++		linux,pci-domain = <0>;
++		max-link-speed = <3>;
++		msi-map = <0x0000 &its1 0x0000 0x1000>;
++		num-lanes = <4>;
++		phys = <&pcie30phy>;
++		phy-names = "pcie-phy";
++		power-domains = <&power RK3588_PD_PCIE>;
++		ranges = <0x01000000 0x0 0xf0100000 0x0 0xf0100000 0x0 0x00100000>,
++			 <0x02000000 0x0 0xf0200000 0x0 0xf0200000 0x0 0x00e00000>,
++			 <0x03000000 0x0 0x40000000 0x9 0x00000000 0x0 0x40000000>;
++		reg = <0xa 0x40000000 0x0 0x00400000>,
++		      <0x0 0xfe150000 0x0 0x00010000>,
++		      <0x0 0xf0000000 0x0 0x00100000>;
++		reg-names = "dbi", "apb", "config";
++		resets = <&cru SRST_PCIE0_POWER_UP>, <&cru SRST_P_PCIE0>;
++		reset-names = "pwr", "pipe";
++		status = "disabled";
++
++		pcie3x4_intc: legacy-interrupt-controller {
++			interrupt-controller;
++			#address-cells = <0>;
++			#interrupt-cells = <1>;
++			interrupt-parent = <&gic>;
++			interrupts = <GIC_SPI 260 IRQ_TYPE_EDGE_RISING 0>;
++		};
++	};
++
++	pcie3x2: pcie@fe160000 {
++		compatible = "rockchip,rk3588-pcie", "rockchip,rk3568-pcie";
++		#address-cells = <3>;
++		#size-cells = <2>;
++		bus-range = <0x10 0x1f>;
++		clocks = <&cru ACLK_PCIE_2L_MSTR>, <&cru ACLK_PCIE_2L_SLV>,
++			 <&cru ACLK_PCIE_2L_DBI>, <&cru PCLK_PCIE_2L>,
++			 <&cru CLK_PCIE_AUX1>, <&cru CLK_PCIE2L_PIPE>;
++		clock-names = "aclk_mst", "aclk_slv",
++			      "aclk_dbi", "pclk",
++			      "aux", "pipe";
++		device_type = "pci";
++		interrupts = <GIC_SPI 258 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 257 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 256 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 255 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 254 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-names = "sys", "pmc", "msg", "legacy", "err";
++		#interrupt-cells = <1>;
++		interrupt-map-mask = <0 0 0 7>;
++		interrupt-map = <0 0 0 1 &pcie3x2_intc 0>,
++				<0 0 0 2 &pcie3x2_intc 1>,
++				<0 0 0 3 &pcie3x2_intc 2>,
++				<0 0 0 4 &pcie3x2_intc 3>;
++		linux,pci-domain = <1>;
++		max-link-speed = <3>;
++		msi-map = <0x1000 &its1 0x1000 0x1000>;
++		num-lanes = <2>;
++		phys = <&pcie30phy>;
++		phy-names = "pcie-phy";
++		power-domains = <&power RK3588_PD_PCIE>;
++		ranges = <0x01000000 0x0 0xf1100000 0x0 0xf1100000 0x0 0x00100000>,
++			 <0x02000000 0x0 0xf1200000 0x0 0xf1200000 0x0 0x00e00000>,
++			 <0x03000000 0x0 0x40000000 0x9 0x40000000 0x0 0x40000000>;
++		reg = <0xa 0x40400000 0x0 0x00400000>,
++		      <0x0 0xfe160000 0x0 0x00010000>,
++		      <0x0 0xf1000000 0x0 0x00100000>;
++		reg-names = "dbi", "apb", "config";
++		resets = <&cru SRST_PCIE1_POWER_UP>, <&cru SRST_P_PCIE1>;
++		reset-names = "pwr", "pipe";
++		status = "disabled";
++
++		pcie3x2_intc: legacy-interrupt-controller {
++			interrupt-controller;
++			#address-cells = <0>;
++			#interrupt-cells = <1>;
++			interrupt-parent = <&gic>;
++			interrupts = <GIC_SPI 255 IRQ_TYPE_EDGE_RISING 0>;
++		};
++	};
++
++	pcie2x1l0: pcie@fe170000 {
++		compatible = "rockchip,rk3588-pcie", "rockchip,rk3568-pcie";
+ 		bus-range = <0x20 0x2f>;
+ 		clocks = <&cru ACLK_PCIE_1L0_MSTR>, <&cru ACLK_PCIE_1L0_SLV>,
+ 			 <&cru ACLK_PCIE_1L0_DBI>, <&cru PCLK_PCIE_1L0>,
+@@ -165,9 +289,6 @@
+ 				<0 0 0 3 &pcie2x1l0_intc 2>,
+ 				<0 0 0 4 &pcie2x1l0_intc 3>;
+ 		linux,pci-domain = <2>;
+-		num-ib-windows = <8>;
+-		num-ob-windows = <8>;
+-		num-viewport = <4>;
+ 		max-link-speed = <2>;
+ 		msi-map = <0x2000 &its0 0x2000 0x1000>;
+ 		num-lanes = <1>;
+@@ -176,13 +297,15 @@
+ 		power-domains = <&power RK3588_PD_PCIE>;
+ 		ranges = <0x01000000 0x0 0xf2100000 0x0 0xf2100000 0x0 0x00100000>,
+ 			 <0x02000000 0x0 0xf2200000 0x0 0xf2200000 0x0 0x00e00000>,
+-			 <0x03000000 0x9 0x80000000 0x9 0x80000000 0x0 0x40000000>;
++			 <0x03000000 0x0 0x40000000 0x9 0x80000000 0x0 0x40000000>;
+ 		reg = <0xa 0x40800000 0x0 0x00400000>,
+ 		      <0x0 0xfe170000 0x0 0x00010000>,
+ 		      <0x0 0xf2000000 0x0 0x00100000>;
+ 		reg-names = "dbi", "apb", "config";
+ 		resets = <&cru SRST_PCIE2_POWER_UP>, <&cru SRST_P_PCIE2>;
+ 		reset-names = "pwr", "pipe";
++		#address-cells = <3>;
++		#size-cells = <2>;
+ 		status = "disabled";
+ 
+ 		pcie2x1l0_intc: legacy-interrupt-controller {
+@@ -192,7 +315,6 @@
+ 			interrupt-parent = <&gic>;
+ 			interrupts = <GIC_SPI 240 IRQ_TYPE_EDGE_RISING 0>;
+ 		};
+-
+ 	};
+ 
+ 	gmac0: ethernet@fe1b0000 {
+@@ -247,11 +369,11 @@
+ 	sata1: sata@fe220000 {
+ 		compatible = "rockchip,rk3588-dwc-ahci", "snps,dwc-ahci";
+ 		reg = <0 0xfe220000 0 0x1000>;
++		interrupts = <GIC_SPI 274 IRQ_TYPE_LEVEL_HIGH 0>;
+ 		clocks = <&cru ACLK_SATA1>, <&cru CLK_PMALIVE1>,
+ 			 <&cru CLK_RXOOB1>, <&cru CLK_PIPEPHY1_REF>,
+ 			 <&cru CLK_PIPEPHY1_PIPE_ASIC_G>;
+ 		clock-names = "sata", "pmalive", "rxoob", "ref", "asic";
+-		interrupts = <GIC_SPI 274 IRQ_TYPE_LEVEL_HIGH 0>;
+ 		ports-implemented = <0x1>;
+ 		#address-cells = <1>;
+ 		#size-cells = <0>;
+@@ -301,16 +423,29 @@
+ 	combphy1_ps: phy@fee10000 {
+ 		compatible = "rockchip,rk3588-naneng-combphy";
+ 		reg = <0x0 0xfee10000 0x0 0x100>;
+-		#phy-cells = <1>;
+ 		clocks = <&cru CLK_REF_PIPE_PHY1>, <&cru PCLK_PCIE_COMBO_PIPE_PHY1>,
+ 			 <&cru PCLK_PHP_ROOT>;
+ 		clock-names = "ref", "apb", "pipe";
+ 		assigned-clocks = <&cru CLK_REF_PIPE_PHY1>;
+ 		assigned-clock-rates = <100000000>;
++		#phy-cells = <1>;
+ 		resets = <&cru SRST_REF_PIPE_PHY1>, <&cru SRST_P_PCIE2_PHY1>;
+ 		reset-names = "phy", "apb";
+ 		rockchip,pipe-grf = <&php_grf>;
+ 		rockchip,pipe-phy-grf = <&pipe_phy1_grf>;
+ 		status = "disabled";
+ 	};
++
++	pcie30phy: phy@fee80000 {
++		compatible = "rockchip,rk3588-pcie3-phy";
++		reg = <0x0 0xfee80000 0x0 0x20000>;
++		#phy-cells = <0>;
++		clocks = <&cru PCLK_PCIE_COMBO_PIPE_PHY>;
++		clock-names = "pclk";
++		resets = <&cru SRST_PCIE30_PHY>;
++		reset-names = "phy";
++		rockchip,pipe-grf = <&php_grf>;
++		rockchip,phy-grf = <&pcie30_phy_grf>;
++		status = "disabled";
++	};
+ };
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -8,9 +8,9 @@
+ #include <dt-bindings/interrupt-controller/irq.h>
+ #include <dt-bindings/power/rk3588-power.h>
+ #include <dt-bindings/reset/rockchip,rk3588-cru.h>
+-#include <dt-bindings/thermal/thermal.h>
+ #include <dt-bindings/phy/phy.h>
+ #include <dt-bindings/ata/ahci.h>
++#include <dt-bindings/thermal/thermal.h>
+ 
+ / {
+ 	compatible = "rockchip,rk3588";
+@@ -149,7 +149,7 @@
+ 					<925000 925000 1000000>;
+ 			clock-latency-ns = <40000>;
+ 		};
+-		opp-2400000000 {
++		opp-2400000000  {
+ 			opp-hz = /bits/ 64 <2400000000>;
+ 			opp-microvolt = <1000000 1000000 1000000>,
+ 					<1000000 1000000 1000000>;
+@@ -884,6 +884,28 @@
+ 		};
+ 	};
+ 
++	usb_host0_xhci: usb@fc000000 {
++		compatible = "rockchip,rk3588-dwc3", "snps,dwc3";
++		reg = <0x0 0xfc000000 0x0 0x400000>;
++		interrupts = <GIC_SPI 220 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru REF_CLK_USB3OTG0>, <&cru SUSPEND_CLK_USB3OTG0>,
++			 <&cru ACLK_USB3OTG0>;
++		clock-names = "ref_clk", "suspend_clk", "bus_clk";
++		dr_mode = "otg";
++		phys = <&u2phy0_otg>, <&usbdp_phy0_u3>;
++		phy-names = "usb2-phy", "usb3-phy";
++		phy_type = "utmi_wide";
++		power-domains = <&power RK3588_PD_USB>;
++		resets = <&cru SRST_A_USB3OTG0>;
++		snps,dis_enblslpm_quirk;
++		snps,dis-u1-entry-quirk;
++		snps,dis-u2-entry-quirk;
++		snps,dis-u2-freeclk-exists-quirk;
++		snps,dis-del-phy-power-chg-quirk;
++		snps,dis-tx-ipgap-linecheck-quirk;
++		status = "disabled";
++	};
++
+ 	usb_host0_ehci: usb@fc800000 {
+ 		compatible = "rockchip,rk3588-ehci", "generic-ehci";
+ 		reg = <0x0 0xfc800000 0x0 0x40000>;
+@@ -928,6 +950,27 @@
+ 		status = "disabled";
+ 	};
+ 
++	usb_host2_xhci: usb@fcd00000 {
++		compatible = "rockchip,rk3588-dwc3", "snps,dwc3";
++		reg = <0x0 0xfcd00000 0x0 0x400000>;
++		interrupts = <GIC_SPI 222 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru REF_CLK_USB3OTG2>, <&cru SUSPEND_CLK_USB3OTG2>,
++			 <&cru ACLK_USB3OTG2>, <&cru CLK_UTMI_OTG2>,
++			 <&cru CLK_PIPEPHY2_PIPE_U3_G>;
++		clock-names = "ref_clk", "suspend_clk", "bus_clk", "utmi", "pipe";
++		dr_mode = "host";
++		phys = <&combphy2_psu PHY_TYPE_USB3>;
++		phy-names = "usb3-phy";
++		phy_type = "utmi_wide";
++		resets = <&cru SRST_A_USB3OTG2>;
++		snps,dis_enblslpm_quirk;
++		snps,dis-u2-freeclk-exists-quirk;
++		snps,dis-del-phy-power-chg-quirk;
++		snps,dis-tx-ipgap-linecheck-quirk;
++		snps,dis_rxdet_inp3_quirk;
++		status = "disabled";
++	};
++
+ 	usbhost3_0: usbhost3_0 {
+ 		compatible = "rockchip,rk3588-dwc3", "rockchip,rk3399-dwc3";
+ 		clocks = <&cru REF_CLK_USB3OTG2>, <&cru SUSPEND_CLK_USB3OTG2>,
+@@ -967,6 +1010,36 @@
+ 		reg = <0x0 0xfd58c000 0x0 0x1000>;
+ 	};
+ 
++	bigcore0_grf: syscon@fd590000 {
++		compatible = "rockchip,rk3588-bigcore0-grf", "syscon";
++		reg = <0x0 0xfd590000 0x0 0x100>;
++	};
++
++	bigcore1_grf: syscon@fd592000 {
++		compatible = "rockchip,rk3588-bigcore1-grf", "syscon";
++		reg = <0x0 0xfd592000 0x0 0x100>;
++	};
++
++	php_grf: syscon@fd5b0000 {
++		compatible = "rockchip,rk3588-php-grf", "syscon";
++		reg = <0x0 0xfd5b0000 0x0 0x1000>;
++	};
++
++	pipe_phy0_grf: syscon@fd5bc000 {
++		compatible = "rockchip,rk3588-pipe-phy-grf", "syscon";
++		reg = <0x0 0xfd5bc000 0x0 0x100>;
++	};
++
++	pipe_phy2_grf: syscon@fd5c4000 {
++		compatible = "rockchip,rk3588-pipe-phy-grf", "syscon";
++		reg = <0x0 0xfd5c4000 0x0 0x100>;
++	};
++
++	usbdpphy0_grf: syscon@fd5c8000 {
++		compatible = "rockchip,rk3588-usbdpphy-grf", "syscon";
++		reg = <0x0 0xfd5c8000 0x0 0x4000>;
++	};
++
+ 	usb2phy0_grf: syscon@fd5d0000 {
+ 		compatible = "rockchip,rk3588-usb2phy-grf", "syscon",
+ 			     "simple-mfd";
+@@ -984,7 +1057,6 @@
+ 			clock-names = "phyclk";
+ 			clock-output-names = "usb480m_phy0";
+ 			#clock-cells = <0>;
+-			rockchip,usbctrl-grf = <&usb_grf>;
+ 			status = "disabled";
+ 
+ 			u2phy0_otg: otg-port {
+@@ -1055,36 +1127,6 @@
+ 		};
+ 	};
+ 
+-	bigcore0_grf: syscon@fd590000 {
+-		compatible = "rockchip,rk3588-bigcore0-grf", "syscon";
+-		reg = <0x0 0xfd590000 0x0 0x100>;
+-	};
+-
+-	bigcore1_grf: syscon@fd592000 {
+-		compatible = "rockchip,rk3588-bigcore1-grf", "syscon";
+-		reg = <0x0 0xfd592000 0x0 0x100>;
+-	};
+-
+-	php_grf: syscon@fd5b0000 {
+-		compatible = "rockchip,rk3588-php-grf", "syscon";
+-		reg = <0x0 0xfd5b0000 0x0 0x1000>;
+-	};
+-
+-	pipe_phy0_grf: syscon@fd5bc000 {
+-		compatible = "rockchip,rk3588-pipe-phy-grf", "syscon";
+-		reg = <0x0 0xfd5bc000 0x0 0x100>;
+-	};
+-
+-	pipe_phy2_grf: syscon@fd5c4000 {
+-		compatible = "rockchip,rk3588-pipe-phy-grf", "syscon";
+-		reg = <0x0 0xfd5c4000 0x0 0x100>;
+-	};
+-
+-	usbdpphy0_grf: syscon@fd5c8000 {
+-		compatible = "rockchip,rk3588-usbdpphy-grf", "syscon";
+-		reg = <0x0 0xfd5c8000 0x0 0x4000>;
+-	};
+-
+ 	ioc: syscon@fd5f0000 {
+ 		compatible = "rockchip,rk3588-ioc", "syscon";
+ 		reg = <0x0 0xfd5f0000 0x0 0x10000>;
+@@ -1801,8 +1843,6 @@
+ 
+ 	pcie2x1l1: pcie@fe180000 {
+ 		compatible = "rockchip,rk3588-pcie", "rockchip,rk3568-pcie";
+-		#address-cells = <3>;
+-		#size-cells = <2>;
+ 		bus-range = <0x30 0x3f>;
+ 		clocks = <&cru ACLK_PCIE_1L1_MSTR>, <&cru ACLK_PCIE_1L1_SLV>,
+ 			 <&cru ACLK_PCIE_1L1_DBI>, <&cru PCLK_PCIE_1L1>,
+@@ -1824,9 +1864,6 @@
+ 				<0 0 0 3 &pcie2x1l1_intc 2>,
+ 				<0 0 0 4 &pcie2x1l1_intc 3>;
+ 		linux,pci-domain = <3>;
+-		num-ib-windows = <8>;
+-		num-ob-windows = <8>;
+-		num-viewport = <4>;
+ 		max-link-speed = <2>;
+ 		msi-map = <0x3000 &its0 0x3000 0x1000>;
+ 		num-lanes = <1>;
+@@ -1835,13 +1872,15 @@
+ 		power-domains = <&power RK3588_PD_PCIE>;
+ 		ranges = <0x01000000 0x0 0xf3100000 0x0 0xf3100000 0x0 0x00100000>,
+ 			 <0x02000000 0x0 0xf3200000 0x0 0xf3200000 0x0 0x00e00000>,
+-			 <0x03000000 0x9 0xc0000000 0x9 0xc0000000 0x0 0x40000000>;
++			 <0x03000000 0x0 0x40000000 0x9 0xc0000000 0x0 0x40000000>;
+ 		reg = <0xa 0x40c00000 0x0 0x00400000>,
+ 		      <0x0 0xfe180000 0x0 0x00010000>,
+ 		      <0x0 0xf3000000 0x0 0x00100000>;
+ 		reg-names = "dbi", "apb", "config";
+ 		resets = <&cru SRST_PCIE3_POWER_UP>, <&cru SRST_P_PCIE3>;
+ 		reset-names = "pwr", "pipe";
++		#address-cells = <3>;
++		#size-cells = <2>;
+ 		status = "disabled";
+ 
+ 		pcie2x1l1_intc: legacy-interrupt-controller {
+@@ -1855,8 +1894,6 @@
+ 
+ 	pcie2x1l2: pcie@fe190000 {
+ 		compatible = "rockchip,rk3588-pcie", "rockchip,rk3568-pcie";
+-		#address-cells = <3>;
+-		#size-cells = <2>;
+ 		bus-range = <0x40 0x4f>;
+ 		clocks = <&cru ACLK_PCIE_1L2_MSTR>, <&cru ACLK_PCIE_1L2_SLV>,
+ 			 <&cru ACLK_PCIE_1L2_DBI>, <&cru PCLK_PCIE_1L2>,
+@@ -1878,9 +1915,6 @@
+ 				<0 0 0 3 &pcie2x1l2_intc 2>,
+ 				<0 0 0 4 &pcie2x1l2_intc 3>;
+ 		linux,pci-domain = <4>;
+-		num-ib-windows = <8>;
+-		num-ob-windows = <8>;
+-		num-viewport = <4>;
+ 		max-link-speed = <2>;
+ 		msi-map = <0x4000 &its0 0x4000 0x1000>;
+ 		num-lanes = <1>;
+@@ -1889,13 +1923,15 @@
+ 		power-domains = <&power RK3588_PD_PCIE>;
+ 		ranges = <0x01000000 0x0 0xf4100000 0x0 0xf4100000 0x0 0x00100000>,
+ 			 <0x02000000 0x0 0xf4200000 0x0 0xf4200000 0x0 0x00e00000>,
+-			 <0x03000000 0xa 0x00000000 0xa 0x00000000 0x0 0x40000000>;
++			 <0x03000000 0x0 0x40000000 0xa 0x00000000 0x0 0x40000000>;
+ 		reg = <0xa 0x41000000 0x0 0x00400000>,
+ 		      <0x0 0xfe190000 0x0 0x00010000>,
+ 		      <0x0 0xf4000000 0x0 0x00100000>;
+ 		reg-names = "dbi", "apb", "config";
+ 		resets = <&cru SRST_PCIE4_POWER_UP>, <&cru SRST_P_PCIE4>;
+ 		reset-names = "pwr", "pipe";
++		#address-cells = <3>;
++		#size-cells = <2>;
+ 		status = "disabled";
+ 
+ 		pcie2x1l2_intc: legacy-interrupt-controller {
+@@ -1970,11 +2006,11 @@
+ 	sata0: sata@fe210000 {
+ 		compatible = "rockchip,rk3588-dwc-ahci", "snps,dwc-ahci";
+ 		reg = <0 0xfe210000 0 0x1000>;
++		interrupts = <GIC_SPI 273 IRQ_TYPE_LEVEL_HIGH 0>;
+ 		clocks = <&cru ACLK_SATA0>, <&cru CLK_PMALIVE0>,
+ 			 <&cru CLK_RXOOB0>, <&cru CLK_PIPEPHY0_REF>,
+ 			 <&cru CLK_PIPEPHY0_PIPE_ASIC_G>;
+ 		clock-names = "sata", "pmalive", "rxoob", "ref", "asic";
+-		interrupts = <GIC_SPI 273 IRQ_TYPE_LEVEL_HIGH 0>;
+ 		ports-implemented = <0x1>;
+ 		#address-cells = <1>;
+ 		#size-cells = <0>;
+@@ -1993,11 +2029,11 @@
+ 	sata2: sata@fe230000 {
+ 		compatible = "rockchip,rk3588-dwc-ahci", "snps,dwc-ahci";
+ 		reg = <0 0xfe230000 0 0x1000>;
++		interrupts = <GIC_SPI 275 IRQ_TYPE_LEVEL_HIGH 0>;
+ 		clocks = <&cru ACLK_SATA2>, <&cru CLK_PMALIVE2>,
+ 			 <&cru CLK_RXOOB2>, <&cru CLK_PIPEPHY2_REF>,
+ 			 <&cru CLK_PIPEPHY2_PIPE_ASIC_G>;
+ 		clock-names = "sata", "pmalive", "rxoob", "ref", "asic";
+-		interrupts = <GIC_SPI 275 IRQ_TYPE_LEVEL_HIGH 0>;
+ 		ports-implemented = <0x1>;
+ 		#address-cells = <1>;
+ 		#size-cells = <0>;
+@@ -2651,6 +2687,17 @@
+ 		pinctrl-1 = <&tsadc_shut>;
+ 		pinctrl-names = "gpio", "otpout";
+ 		#thermal-sensor-cells = <1>;
++	};
++
++	saradc: adc@fec10000 {
++		compatible = "rockchip,rk3588-saradc";
++		reg = <0x0 0xfec10000 0x0 0x10000>;
++		interrupts = <GIC_SPI 398 IRQ_TYPE_LEVEL_HIGH 0>;
++		#io-channel-cells = <1>;
++		clocks = <&cru CLK_SARADC>, <&cru PCLK_SARADC>;
++		clock-names = "saradc", "apb_pclk";
++		resets = <&cru SRST_P_SARADC>;
++		reset-names = "saradc-apb";
+ 		status = "disabled";
+ 	};
+ 
+@@ -2808,12 +2855,12 @@
+ 	combphy0_ps: phy@fee00000 {
+ 		compatible = "rockchip,rk3588-naneng-combphy";
+ 		reg = <0x0 0xfee00000 0x0 0x100>;
+-		#phy-cells = <1>;
+ 		clocks = <&cru CLK_REF_PIPE_PHY0>, <&cru PCLK_PCIE_COMBO_PIPE_PHY0>,
+ 			 <&cru PCLK_PHP_ROOT>;
+ 		clock-names = "ref", "apb", "pipe";
+ 		assigned-clocks = <&cru CLK_REF_PIPE_PHY0>;
+ 		assigned-clock-rates = <100000000>;
++		#phy-cells = <1>;
+ 		resets = <&cru SRST_REF_PIPE_PHY0>, <&cru SRST_P_PCIE2_PHY0>;
+ 		reset-names = "phy", "apb";
+ 		rockchip,pipe-grf = <&php_grf>;
+@@ -2824,12 +2871,12 @@
+ 	combphy2_psu: phy@fee20000 {
+ 		compatible = "rockchip,rk3588-naneng-combphy";
+ 		reg = <0x0 0xfee20000 0x0 0x100>;
+-		#phy-cells = <1>;
+ 		clocks = <&cru CLK_REF_PIPE_PHY2>, <&cru PCLK_PCIE_COMBO_PIPE_PHY2>,
+ 			 <&cru PCLK_PHP_ROOT>;
+ 		clock-names = "ref", "apb", "pipe";
+ 		assigned-clocks = <&cru CLK_REF_PIPE_PHY2>;
+ 		assigned-clock-rates = <100000000>;
++		#phy-cells = <1>;
+ 		resets = <&cru SRST_REF_PIPE_PHY2>, <&cru SRST_P_PCIE2_PHY2>;
+ 		reset-names = "phy", "apb";
+ 		rockchip,pipe-grf = <&php_grf>;
+@@ -2837,18 +2884,6 @@
+ 		status = "disabled";
+ 	};
+ 
+-	saradc: saradc@fec10000 {
+-		compatible = "rockchip,rk3588-saradc";
+-		reg = <0x0 0xfec10000 0x0 0x10000>;
+-		interrupts = <GIC_SPI 398 IRQ_TYPE_LEVEL_HIGH 0>;
+-		#io-channel-cells = <1>;
+-		clocks = <&cru CLK_SARADC>, <&cru PCLK_SARADC>;
+-		clock-names = "saradc", "apb_pclk";
+-		resets = <&cru SRST_P_SARADC>;
+-		reset-names = "saradc-apb";
+-		status = "disabled";
+-	};
+-
+ 	system_sram2: sram@ff001000 {
+ 		compatible = "mmio-sram";
+ 		reg = <0x0 0xff001000 0x0 0xef000>;
+@@ -2924,6 +2959,20 @@
+ 			#interrupt-cells = <2>;
+ 		};
+ 	};
++
++	av1d: av1d@fdc70000 {
++		compatible = "rockchip,rk3588-av1-vpu";
++		reg = <0x0 0xfdc70000 0x0 0x800>;
++		interrupts = <GIC_SPI 108 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-names = "vdpu";
++		clocks = <&cru ACLK_AV1>, <&cru PCLK_AV1>;
++		clock-names = "aclk", "hclk";
++		assigned-clocks = <&cru ACLK_AV1>, <&cru PCLK_AV1>;
++		assigned-clock-rates = <400000000>, <400000000>;
++		resets = <&cru SRST_A_AV1>, <&cru SRST_P_AV1>, <&cru SRST_A_AV1_BIU>, <&cru SRST_P_AV1_BIU>;
++		power-domains = <&power RK3588_PD_AV1>;
++		status = "okay";
++	};
+ };
+ 
+ #include "rk3588s-pinctrl.dtsi"
diff --git a/target/linux/rockchip/patches-6.1/517-usb-typec-tcpm:-try-to-get-role-switch-from-tcpc-fwnode.patch b/target/linux/rockchip/patches-6.1/517-usb-typec-tcpm:-try-to-get-role-switch-from-tcpc-fwnode.patch
new file mode 100644
index 0000000000..b083e8373b
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/517-usb-typec-tcpm:-try-to-get-role-switch-from-tcpc-fwnode.patch
@@ -0,0 +1,54 @@
+From d56de8c9a17d8f5202d0f37dd06ce186cc512586 Mon Sep 17 00:00:00 2001
+From: Li Jun <jun.li@nxp.com>
+Date: Tue, 28 Mar 2023 16:23:04 +0800
+Subject: [PATCH] usb: typec: tcpm: try to get role switch from tcpc fwnode
+
+Try to get usb role switch from tcpc fwnode if failed to
+get role switch from port dev, this is for case the port
+for role switch endpoint is located in connector node,
+as per connector binding doc, port@0 for HS is required.
+
+ptn5110: tcpc@50 {
+	compatible = "nxp,ptn5110";
+	...
+	status = "okay";
+
+	connector {
+		compatible = "usb-c-connector";
+		label = "USB-C";
+		...
+
+		ports {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			port@0 {
+				reg = <0>;
+
+				typec_conn: endpoint {
+					remote-endpoint = <&usb2_controller>;
+				};
+			};
+		};
+	};
+};
+
+Signed-off-by: Li Jun <jun.li@nxp.com>
+Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
+Link: https://lore.kernel.org/r/1679991784-25500-1-git-send-email-jun.li@nxp.com
+Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+---
+ drivers/usb/typec/tcpm/tcpm.c | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/drivers/usb/typec/tcpm/tcpm.c
++++ b/drivers/usb/typec/tcpm/tcpm.c
+@@ -6595,6 +6595,8 @@ struct tcpm_port *tcpm_register_port(str
+ 	port->port_type = port->typec_caps.type;
+ 
+ 	port->role_sw = usb_role_switch_get(port->dev);
++	if (!port->role_sw)
++		port->role_sw = fwnode_usb_role_switch_get(tcpc->fwnode);
+ 	if (IS_ERR(port->role_sw)) {
+ 		err = PTR_ERR(port->role_sw);
+ 		goto out_destroy_wq;
diff --git a/target/linux/rockchip/patches-6.1/518-usb-typec-tcpm-avoid-graph-warning.patch b/target/linux/rockchip/patches-6.1/518-usb-typec-tcpm-avoid-graph-warning.patch
new file mode 100644
index 0000000000..7f75bb6de2
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/518-usb-typec-tcpm-avoid-graph-warning.patch
@@ -0,0 +1,42 @@
+From 396d66b5fc156556b67eb05ef625128917f0610c Mon Sep 17 00:00:00 2001
+From: Sebastian Reichel <sebastian.reichel@collabora.com>
+Date: Fri, 28 Jul 2023 16:43:16 +0200
+Subject: [PATCH 86/98] usb: typec: tcpm: avoid graph warning
+
+When using a devicetree as described in commit d56de8c9a17d ("usb:
+typec: tcpm: try to get role switch from tcpc fwnode"), the kernel
+will print an error when probing the TCPM driver, which looks
+similar to this:
+
+OF: graph: no port node found in /i2c@feac0000/usb-typec@22
+
+This is a false positive, since the code first tries to find a ports
+node for the device and only then checks the fwnode. Fix this by
+swapping the order.
+
+Note, that this will now generate a error message for devicetrees with
+a role-switch ports node directly in the TCPM node instead of in the
+connectors sub-node, before falling back to the legacy behaviour. These
+devicetrees generate warnings when being checked against the bindings,
+and should be fixed.
+
+Fixes: d56de8c9a17d ("usb: typec: tcpm: try to get role switch from tcpc fwnode")
+Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ drivers/usb/typec/tcpm/tcpm.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+--- a/drivers/usb/typec/tcpm/tcpm.c
++++ b/drivers/usb/typec/tcpm/tcpm.c
+@@ -6594,9 +6594,9 @@ struct tcpm_port *tcpm_register_port(str
+ 	port->partner_desc.identity = &port->partner_ident;
+ 	port->port_type = port->typec_caps.type;
+ 
+-	port->role_sw = usb_role_switch_get(port->dev);
++	port->role_sw = fwnode_usb_role_switch_get(tcpc->fwnode);
+ 	if (!port->role_sw)
+-		port->role_sw = fwnode_usb_role_switch_get(tcpc->fwnode);
++		port->role_sw = usb_role_switch_get(port->dev);
+ 	if (IS_ERR(port->role_sw)) {
+ 		err = PTR_ERR(port->role_sw);
+ 		goto out_destroy_wq;
diff --git a/target/linux/rockchip/patches-6.1/519-irqchip-fix-its-timeout-issue.patch b/target/linux/rockchip/patches-6.1/519-irqchip-fix-its-timeout-issue.patch
new file mode 100644
index 0000000000..976658eded
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/519-irqchip-fix-its-timeout-issue.patch
@@ -0,0 +1,210 @@
+From d441305416aa91190df5865bbc0e3c684ec183b0 Mon Sep 17 00:00:00 2001
+From: Muhammed Efe Cetin <efectn@protonmail.com>
+Date: Fri, 11 Aug 2023 17:56:00 +0300
+Subject: [PATCH 1/1] irqchip/irq-gic-v3-its: fix its timeout issue for rk35xx
+ boards
+
+---
+ drivers/irqchip/irq-gic-v3-its.c | 79 +++++++++++++++++++++++++++++---
+ 1 file changed, 72 insertions(+), 7 deletions(-)
+
+--- a/drivers/irqchip/irq-gic-v3-its.c
++++ b/drivers/irqchip/irq-gic-v3-its.c
+@@ -167,6 +167,7 @@ struct its_device {
+ 	struct its_node		*its;
+ 	struct event_lpi_map	event_map;
+ 	void			*itt;
++	u32			itt_sz;
+ 	u32			nr_ites;
+ 	u32			device_id;
+ 	bool			shared;
+@@ -2204,6 +2205,9 @@ static void gic_reset_prop_table(void *v
+ static struct page *its_allocate_prop_table(gfp_t gfp_flags)
+ {
+ 	struct page *prop_page;
++	
++	if (of_machine_is_compatible("rockchip,rk3568") || of_machine_is_compatible("rockchip,rk3566") || of_machine_is_compatible("rockchip,rk3588"))
++		gfp_flags |= GFP_DMA32;
+ 
+ 	prop_page = alloc_pages(gfp_flags, get_order(LPI_PROPBASE_SZ));
+ 	if (!prop_page)
+@@ -2328,6 +2332,7 @@ static int its_setup_baser(struct its_no
+ 	u32 alloc_pages, psz;
+ 	struct page *page;
+ 	void *base;
++	gfp_t gfp_flags;
+ 
+ 	psz = baser->psz;
+ 	alloc_pages = (PAGE_ORDER_TO_SIZE(order) / psz);
+@@ -2339,7 +2344,11 @@ static int its_setup_baser(struct its_no
+ 		order = get_order(GITS_BASER_PAGES_MAX * psz);
+ 	}
+ 
+-	page = alloc_pages_node(its->numa_node, GFP_KERNEL | __GFP_ZERO, order);
++	gfp_flags = GFP_KERNEL | __GFP_ZERO;
++	if (of_machine_is_compatible("rockchip,rk3568") || of_machine_is_compatible("rockchip,rk3566") || of_machine_is_compatible("rockchip,rk3588"))
++		gfp_flags |= GFP_DMA32;
++	
++	page = alloc_pages_node(its->numa_node, gfp_flags, order);
+ 	if (!page)
+ 		return -ENOMEM;
+ 
+@@ -2389,6 +2398,15 @@ retry_baser:
+ 	if (its->flags & ITS_FLAGS_FORCE_NON_SHAREABLE)
+ 		tmp &= ~GITS_BASER_SHAREABILITY_MASK;
+ 
++	if (of_machine_is_compatible("rockchip,rk3568") ||
++	     of_machine_is_compatible("rockchip,rk3566") ||
++	     of_machine_is_compatible("rockchip,rk3588")) {
++		if (tmp & GITS_BASER_SHAREABILITY_MASK)
++			tmp &= ~GITS_BASER_SHAREABILITY_MASK;
++		else
++			gic_flush_dcache_to_poc(base, PAGE_ORDER_TO_SIZE(order));
++	}
++
+ 	if ((val ^ tmp) & GITS_BASER_SHAREABILITY_MASK) {
+ 		/*
+ 		 * Shareability didn't stick. Just use
+@@ -2970,7 +2988,9 @@ static int its_alloc_collections(struct
+ static struct page *its_allocate_pending_table(gfp_t gfp_flags)
+ {
+ 	struct page *pend_page;
+-
++	
++	if (of_machine_is_compatible("rockchip,rk3568") || of_machine_is_compatible("rockchip,rk3566") || of_machine_is_compatible("rockchip,rk3588"))
++		gfp_flags |= GFP_DMA32;
+ 	pend_page = alloc_pages(gfp_flags | __GFP_ZERO,
+ 				get_order(LPI_PENDBASE_SZ));
+ 	if (!pend_page)
+@@ -3129,6 +3149,11 @@ static void its_cpu_init_lpis(void)
+ 	if (gic_rdists->flags & RDIST_FLAGS_FORCE_NON_SHAREABLE)
+ 		tmp &= ~GICR_PROPBASER_SHAREABILITY_MASK;
+ 
++	if (of_machine_is_compatible("rockchip,rk3568") ||
++	     of_machine_is_compatible("rockchip,rk3566") ||
++	     of_machine_is_compatible("rockchip,rk3588"))
++		tmp &= ~GICR_PROPBASER_SHAREABILITY_MASK;
++
+ 	if ((tmp ^ val) & GICR_PROPBASER_SHAREABILITY_MASK) {
+ 		if (!(tmp & GICR_PROPBASER_SHAREABILITY_MASK)) {
+ 			/*
+@@ -3156,6 +3181,11 @@ static void its_cpu_init_lpis(void)
+ 	if (gic_rdists->flags & RDIST_FLAGS_FORCE_NON_SHAREABLE)
+ 		tmp &= ~GICR_PENDBASER_SHAREABILITY_MASK;
+ 
++	if (of_machine_is_compatible("rockchip,rk3568") ||
++	     of_machine_is_compatible("rockchip,rk3566") ||
++	     of_machine_is_compatible("rockchip,rk3588"))
++		tmp &= ~GICR_PENDBASER_SHAREABILITY_MASK;
++
+ 	if (!(tmp & GICR_PENDBASER_SHAREABILITY_MASK)) {
+ 		/*
+ 		 * The HW reports non-shareable, we must remove the
+@@ -3319,7 +3349,11 @@ static bool its_alloc_table_entry(struct
+ 
+ 	/* Allocate memory for 2nd level table */
+ 	if (!table[idx]) {
+-		page = alloc_pages_node(its->numa_node, GFP_KERNEL | __GFP_ZERO,
++		gfp_t gfp_flags = GFP_KERNEL | __GFP_ZERO;
++
++		if (of_machine_is_compatible("rockchip,rk3568") || of_machine_is_compatible("rockchip,rk3566") || of_machine_is_compatible("rockchip,rk3588"))
++			gfp_flags |= GFP_DMA32;
++		page = alloc_pages_node(its->numa_node, gfp_flags,
+ 					get_order(baser->psz));
+ 		if (!page)
+ 			return false;
+@@ -3408,6 +3442,7 @@ static struct its_device *its_create_dev
+ 	int nr_lpis;
+ 	int nr_ites;
+ 	int sz;
++	gfp_t gfp_flags;
+ 
+ 	if (!its_alloc_device_table(its, dev_id))
+ 		return NULL;
+@@ -3423,7 +3458,15 @@ static struct its_device *its_create_dev
+ 	nr_ites = max(2, nvecs);
+ 	sz = nr_ites * (FIELD_GET(GITS_TYPER_ITT_ENTRY_SIZE, its->typer) + 1);
+ 	sz = max(sz, ITS_ITT_ALIGN) + ITS_ITT_ALIGN - 1;
+-	itt = kzalloc_node(sz, GFP_KERNEL, its->numa_node);
++	gfp_flags = GFP_KERNEL;
++	
++	if (of_machine_is_compatible("rockchip,rk3568") || of_machine_is_compatible("rockchip,rk3566") || of_machine_is_compatible("rockchip,rk3588")) {
++		gfp_flags |= GFP_DMA32;
++		itt = (void *)__get_free_pages(gfp_flags, get_order(sz));
++	} else {
++		itt = kzalloc_node(sz, gfp_flags, its->numa_node);
++	}
++
+ 	if (alloc_lpis) {
+ 		lpi_map = its_lpi_alloc(nvecs, &lpi_base, &nr_lpis);
+ 		if (lpi_map)
+@@ -3437,7 +3480,13 @@ static struct its_device *its_create_dev
+ 
+ 	if (!dev || !itt ||  !col_map || (!lpi_map && alloc_lpis)) {
+ 		kfree(dev);
+-		kfree(itt);
++
++		if (of_machine_is_compatible("rockchip,rk3568") ||
++		    of_machine_is_compatible("rockchip,rk3566") || of_machine_is_compatible("rockchip,rk3588"))
++			free_pages((unsigned long)itt, get_order(sz));
++		else
++			kfree(itt);
++
+ 		bitmap_free(lpi_map);
+ 		kfree(col_map);
+ 		return NULL;
+@@ -3447,6 +3496,7 @@ static struct its_device *its_create_dev
+ 
+ 	dev->its = its;
+ 	dev->itt = itt;
++	dev->itt_sz = sz;
+ 	dev->nr_ites = nr_ites;
+ 	dev->event_map.lpi_map = lpi_map;
+ 	dev->event_map.col_map = col_map;
+@@ -3474,7 +3524,13 @@ static void its_free_device(struct its_d
+ 	list_del(&its_dev->entry);
+ 	raw_spin_unlock_irqrestore(&its_dev->its->lock, flags);
+ 	kfree(its_dev->event_map.col_map);
+-	kfree(its_dev->itt);
++	
++	if (of_machine_is_compatible("rockchip,rk3568") ||
++	    of_machine_is_compatible("rockchip,rk3566") || of_machine_is_compatible("rockchip,rk3588"))
++		free_pages((unsigned long)its_dev->itt, get_order(its_dev->itt_sz));
++	else
++		kfree(its_dev->itt);
++	
+ 	kfree(its_dev);
+ }
+ 
+@@ -5061,6 +5117,7 @@ static int __init its_probe_one(struct r
+ 	struct page *page;
+ 	u32 ctlr;
+ 	int err;
++	gfp_t gfp_flags;
+ 
+ 	its_base = its_map_one(res, &err);
+ 	if (!its_base)
+@@ -5114,7 +5171,10 @@ static int __init its_probe_one(struct r
+ 
+ 	its->numa_node = numa_node;
+ 
+-	page = alloc_pages_node(its->numa_node, GFP_KERNEL | __GFP_ZERO,
++	gfp_flags = GFP_KERNEL | __GFP_ZERO;
++	if (of_machine_is_compatible("rockchip,rk3568") || of_machine_is_compatible("rockchip,rk3566") || of_machine_is_compatible("rockchip,rk3588"))
++		gfp_flags |= GFP_DMA32;
++	page = alloc_pages_node(its->numa_node, gfp_flags,
+ 				get_order(ITS_CMD_QUEUE_SZ));
+ 	if (!page) {
+ 		err = -ENOMEM;
+@@ -5148,6 +5208,11 @@ static int __init its_probe_one(struct r
+ 	if (its->flags & ITS_FLAGS_FORCE_NON_SHAREABLE)
+ 		tmp &= ~GITS_CBASER_SHAREABILITY_MASK;
+ 
++	if (of_machine_is_compatible("rockchip,rk3568") ||
++	     of_machine_is_compatible("rockchip,rk3566") ||
++	     of_machine_is_compatible("rockchip,rk3588"))
++		tmp &= ~GITS_CBASER_SHAREABILITY_MASK;
++
+ 	if ((tmp ^ baser) & GITS_CBASER_SHAREABILITY_MASK) {
+ 		if (!(tmp & GITS_CBASER_SHAREABILITY_MASK)) {
+ 			/*
diff --git a/target/linux/rockchip/patches-6.1/520-arm64-dts-rockchip-Add-sfc-node-to-rk3588s.patch b/target/linux/rockchip/patches-6.1/520-arm64-dts-rockchip-Add-sfc-node-to-rk3588s.patch
new file mode 100644
index 0000000000..31882737ab
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/520-arm64-dts-rockchip-Add-sfc-node-to-rk3588s.patch
@@ -0,0 +1,35 @@
+From 3eaf2abd11aa7f3b2fb04d60c64b2c756fe030eb Mon Sep 17 00:00:00 2001
+From: Muhammed Efe Cetin <efectn@6tel.net>
+Date: Mon, 9 Oct 2023 22:27:26 +0300
+Subject: [PATCH] arm64: dts: rockchip: Add sfc node to rk3588s
+
+Add SFC (SPI Flash) to RK3588S SOC.
+
+Reviewed-by: Dhruva Gole <d-gole@ti.com>
+Signed-off-by: Muhammed Efe Cetin <efectn@6tel.net>
+Link: https://lore.kernel.org/r/d36a64edfaede92ce2e158b0d9dc4f5998e019e3.1696878787.git.efectn@6tel.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 11 +++++++++++
+ 1 file changed, 11 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -2049,6 +2049,17 @@
+ 		};
+ 	};
+ 
++	sfc: spi@fe2b0000 {
++		compatible = "rockchip,sfc";
++		reg = <0x0 0xfe2b0000 0x0 0x4000>;
++		interrupts = <GIC_SPI 206 IRQ_TYPE_LEVEL_HIGH 0>;
++		clocks = <&cru SCLK_SFC>, <&cru HCLK_SFC>;
++		clock-names = "clk_sfc", "hclk_sfc";
++		#address-cells = <1>;
++		#size-cells = <0>;
++		status = "disabled";
++	};
++
+ 	sdmmc: mmc@fe2c0000 {
+ 		compatible = "rockchip,rk3588-dw-mshc", "rockchip,rk3288-dw-mshc";
+ 		reg = <0x0 0xfe2c0000 0x0 0x4000>;
diff --git a/target/linux/rockchip/patches-6.1/521-arm64-dts-rockchip-Add-Orange-Pi-5.patch b/target/linux/rockchip/patches-6.1/521-arm64-dts-rockchip-Add-Orange-Pi-5.patch
new file mode 100644
index 0000000000..95425dd705
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/521-arm64-dts-rockchip-Add-Orange-Pi-5.patch
@@ -0,0 +1,693 @@
+From b6bc755d806eac3fbddb7ea278fc7d2eb57dba4a Mon Sep 17 00:00:00 2001
+From: Muhammed Efe Cetin <efectn@6tel.net>
+Date: Mon, 9 Oct 2023 22:27:27 +0300
+Subject: [PATCH] arm64: dts: rockchip: Add Orange Pi 5
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+Add initial support for OPi5 that includes support for USB2, PCIe2, Sata,
+Sdmmc, SPI Flash, PMIC.
+
+Signed-off-by: Muhammed Efe Cetin <efectn@6tel.net>
+Reviewed-by: Ondřej Jirman <megi@xff.cz>
+Link: https://lore.kernel.org/r/4212da199c9c532b60d380bf1dfa83490e16bc13.1696878787.git.efectn@6tel.net
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../boot/dts/rockchip/rk3588s-orangepi-5.dts  | 662 ++++++++++++++++++
+ 2 files changed, 663 insertions(+)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3588s-orangepi-5.dts
+
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -107,3 +107,4 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-n
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-nanopi-r6s.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-nanopi-r6c-plus.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-rock-5a.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588s-orangepi-5.dtb
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-orangepi-5.dts
+@@ -0,0 +1,662 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include <dt-bindings/gpio/gpio.h>
++#include <dt-bindings/leds/common.h>
++#include <dt-bindings/input/input.h>
++#include <dt-bindings/pinctrl/rockchip.h>
++#include "rk3588s.dtsi"
++
++/ {
++	model = "Xunlong Orange Pi 5";
++	compatible = "xunlong,orangepi-5", "rockchip,rk3588s";
++
++	aliases {
++		mmc0 = &sdmmc;
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	adc-keys {
++		compatible = "adc-keys";
++		io-channels = <&saradc 1>;
++		io-channel-names = "buttons";
++		keyup-threshold-microvolt = <1800000>;
++		poll-interval = <100>;
++
++		button-recovery {
++			label = "Recovery";
++			linux,code = <KEY_VENDOR>;
++			press-threshold-microvolt = <1800>;
++		};
++	};
++
++	leds {
++		compatible = "gpio-leds";
++		pinctrl-names = "default";
++		pinctrl-0 =<&leds_gpio>;
++
++		led-1 {
++			gpios = <&gpio1 RK_PA2 GPIO_ACTIVE_HIGH>;
++			label = "status_led";
++			linux,default-trigger = "heartbeat";
++		};
++	};
++
++	vbus_typec: vbus-typec-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpio = <&gpio3 RK_PC0 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&typec5v_pwren>;
++		regulator-name = "vbus_typec";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++
++	vcc5v0_sys: vcc5v0-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++
++	vcc_3v3_sd_s0: vcc-3v3-sd-s0-regulator {
++		compatible = "regulator-fixed";
++		enable-active-low;
++		gpios = <&gpio4 RK_PB5 GPIO_ACTIVE_LOW>;
++		regulator-name = "vcc_3v3_sd_s0";
++		regulator-boot-on;
++		regulator-min-microvolt = <3300000>;
++		regulator-max-microvolt = <3300000>;
++		vin-supply = <&vcc_3v3_s3>;
++	};
++
++	vcc3v3_pcie20: vcc3v3-pcie20-regulator {
++		compatible = "regulator-fixed";
++		enable-active-high;
++		gpios = <&gpio0 RK_PC5 GPIO_ACTIVE_HIGH>;
++		regulator-name = "vcc3v3_pcie20";
++		regulator-boot-on;
++		regulator-min-microvolt = <1800000>;
++		regulator-max-microvolt = <1800000>;
++		startup-delay-us = <50000>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++};
++
++&combphy0_ps {
++	status = "okay";
++};
++
++&combphy2_psu {
++	status = "okay";
++};
++
++&cpu_b0 {
++	cpu-supply = <&vdd_cpu_big0_s0>;
++};
++
++&cpu_b1 {
++	cpu-supply = <&vdd_cpu_big0_s0>;
++};
++
++&cpu_b2 {
++	cpu-supply = <&vdd_cpu_big1_s0>;
++};
++
++&cpu_b3 {
++	cpu-supply = <&vdd_cpu_big1_s0>;
++};
++
++&cpu_l0 {
++	cpu-supply = <&vdd_cpu_lit_s0>;
++};
++
++&cpu_l1 {
++	cpu-supply = <&vdd_cpu_lit_s0>;
++};
++
++&cpu_l2 {
++	cpu-supply = <&vdd_cpu_lit_s0>;
++};
++
++&cpu_l3 {
++	cpu-supply = <&vdd_cpu_lit_s0>;
++};
++
++&gmac1 {
++	clock_in_out = "output";
++	phy-handle = <&rgmii_phy1>;
++	phy-mode = "rgmii-rxid";
++	pinctrl-0 = <&gmac1_miim
++		     &gmac1_tx_bus2
++		     &gmac1_rx_bus2
++		     &gmac1_rgmii_clk
++		     &gmac1_rgmii_bus>;
++	pinctrl-names = "default";
++	tx_delay = <0x42>;
++	status = "okay";
++};
++
++&i2c0 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&i2c0m2_xfer>;
++	status = "okay";
++
++	vdd_cpu_big0_s0: regulator@42 {
++		compatible = "rockchip,rk8602";
++		reg = <0x42>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu_big0_s0";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <550000>;
++		regulator-max-microvolt = <1050000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++
++	vdd_cpu_big1_s0: regulator@43 {
++		compatible = "rockchip,rk8603", "rockchip,rk8602";
++		reg = <0x43>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_cpu_big1_s0";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <550000>;
++		regulator-max-microvolt = <1050000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++};
++
++&i2c2 {
++	status = "okay";
++
++	vdd_npu_s0: regulator@42 {
++		compatible = "rockchip,rk8602";
++		reg = <0x42>;
++		fcs,suspend-voltage-selector = <1>;
++		regulator-name = "vdd_npu_s0";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <550000>;
++		regulator-max-microvolt = <950000>;
++		regulator-ramp-delay = <2300>;
++		vin-supply = <&vcc5v0_sys>;
++
++		regulator-state-mem {
++			regulator-off-in-suspend;
++		};
++	};
++};
++
++&i2c6 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&i2c6m3_xfer>;
++	status = "okay";
++
++	hym8563: rtc@51 {
++		compatible = "haoyu,hym8563";
++		reg = <0x51>;
++		#clock-cells = <0>;
++		clock-output-names = "hym8563";
++		pinctrl-names = "default";
++		pinctrl-0 = <&hym8563_int>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <RK_PB0 IRQ_TYPE_LEVEL_LOW>;
++		wakeup-source;
++	};
++};
++
++&mdio1 {
++	rgmii_phy1: ethernet-phy@1 {
++		compatible = "ethernet-phy-ieee802.3-c22";
++		reg = <0x1>;
++		reset-assert-us = <20000>;
++		reset-deassert-us = <100000>;
++		reset-gpios = <&gpio3 RK_PB2 GPIO_ACTIVE_LOW>;
++	};
++};
++
++&pcie2x1l2 {
++	reset-gpios = <&gpio3 RK_PD1 GPIO_ACTIVE_HIGH>;
++	vpcie3v3-supply = <&vcc3v3_pcie20>;
++	status = "okay";
++};
++
++&pinctrl {
++	gpio-func {
++		leds_gpio: leds-gpio {
++			rockchip,pins = <0 RK_PA2 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	hym8563 {
++		hym8563_int: hym8563-int {
++			rockchip,pins = <0 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++
++	usb-typec {
++		usbc0_int: usbc0-int {
++			rockchip,pins = <0 RK_PD3 RK_FUNC_GPIO &pcfg_pull_up>;
++		};
++
++		typec5v_pwren: typec5v-pwren {
++			rockchip,pins = <3 RK_PC0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&saradc {
++	vref-supply = <&avcc_1v8_s0>;
++	status = "okay";
++};
++
++&sdmmc {
++	bus-width = <4>;
++	cap-sd-highspeed;
++	disable-wp;
++	max-frequency = <150000000>;
++	no-mmc;
++	no-sdio;
++	sd-uhs-sdr104;
++	vmmc-supply = <&vcc_3v3_sd_s0>;
++	vqmmc-supply = <&vccio_sd_s0>;
++	status = "okay";
++};
++
++&sfc {
++	pinctrl-names = "default";
++	pinctrl-0 = <&fspim0_pins>;
++	status = "okay";
++
++	flash@0 {
++		compatible = "jedec,spi-nor";
++		reg = <0x0>;
++		spi-max-frequency = <100000000>;
++		spi-rx-bus-width = <4>;
++		spi-tx-bus-width = <1>;
++	};
++};
++
++&spi2 {
++	status = "okay";
++	assigned-clocks = <&cru CLK_SPI2>;
++	assigned-clock-rates = <200000000>;
++	num-cs = <1>;
++	pinctrl-names = "default";
++	pinctrl-0 = <&spi2m2_cs0 &spi2m2_pins>;
++
++	pmic@0 {
++		compatible = "rockchip,rk806";
++		reg = <0x0>;
++		interrupt-parent = <&gpio0>;
++		interrupts = <7 IRQ_TYPE_LEVEL_LOW>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&pmic_pins>, <&rk806_dvs1_null>,
++				<&rk806_dvs2_null>, <&rk806_dvs3_null>;
++		spi-max-frequency = <1000000>;
++
++		vcc1-supply = <&vcc5v0_sys>;
++		vcc2-supply = <&vcc5v0_sys>;
++		vcc3-supply = <&vcc5v0_sys>;
++		vcc4-supply = <&vcc5v0_sys>;
++		vcc5-supply = <&vcc5v0_sys>;
++		vcc6-supply = <&vcc5v0_sys>;
++		vcc7-supply = <&vcc5v0_sys>;
++		vcc8-supply = <&vcc5v0_sys>;
++		vcc9-supply = <&vcc5v0_sys>;
++		vcc10-supply = <&vcc5v0_sys>;
++		vcc11-supply = <&vcc_2v0_pldo_s3>;
++		vcc12-supply = <&vcc5v0_sys>;
++		vcc13-supply = <&vcc_1v1_nldo_s3>;
++		vcc14-supply = <&vcc_1v1_nldo_s3>;
++		vcca-supply = <&vcc5v0_sys>;
++
++		gpio-controller;
++		#gpio-cells = <2>;
++
++		rk806_dvs1_null: dvs1-null-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs2_null: dvs2-null-pins {
++			pins = "gpio_pwrctrl2";
++			function = "pin_fun0";
++		};
++
++		rk806_dvs3_null: dvs3-null-pins {
++			pins = "gpio_pwrctrl3";
++			function = "pin_fun0";
++		};
++
++		regulators {
++			vdd_gpu_s0: dcdc-reg1 {
++				regulator-name = "vdd_gpu_s0";
++				regulator-boot-on;
++				regulator-min-microvolt = <550000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++				regulator-enable-ramp-delay = <400>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_cpu_lit_s0: dcdc-reg2 {
++				regulator-name = "vdd_cpu_lit_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <550000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_log_s0: dcdc-reg3 {
++				regulator-name = "vdd_log_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <675000>;
++				regulator-max-microvolt = <750000>;
++				regulator-ramp-delay = <12500>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <750000>;
++				};
++			};
++
++			vdd_vdenc_s0: dcdc-reg4 {
++				regulator-name = "vdd_vdenc_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <550000>;
++				regulator-max-microvolt = <950000>;
++				regulator-ramp-delay = <12500>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_ddr_s0: dcdc-reg5 {
++				regulator-name = "vdd_ddr_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <675000>;
++				regulator-max-microvolt = <900000>;
++				regulator-ramp-delay = <12500>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <850000>;
++				};
++			};
++
++			vcc_1v1_nldo_s3: vdd2_ddr_s3: dcdc-reg6 {
++				regulator-name = "vdd2_ddr_s3";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-max-microvolt = <1100000>;
++				regulator-min-microvolt = <1100000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++				};
++			};
++
++			vcc_2v0_pldo_s3: dcdc-reg7 {
++				regulator-name = "vdd_2v0_pldo_s3";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <2000000>;
++				regulator-max-microvolt = <2000000>;
++				regulator-ramp-delay = <12500>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <2000000>;
++				};
++			};
++
++			vcc_3v3_s3: dcdc-reg8 {
++				regulator-name = "vcc_3v3_s3";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <3300000>;
++				};
++			};
++
++			vddq_ddr_s0: dcdc-reg9 {
++				regulator-name = "vddq_ddr_s0";
++				regulator-always-on;
++				regulator-boot-on;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_1v8_s3: dcdc-reg10 {
++				regulator-name = "vcc_1v8_s3";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			avcc_1v8_s0: pldo-reg1 {
++				regulator-name = "avcc_1v8_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_1v8_s0: pldo-reg2 {
++				regulator-name = "vcc_1v8_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			avdd_1v2_s0: pldo-reg3 {
++				regulator-name = "avdd_1v2_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1200000>;
++				regulator-max-microvolt = <1200000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vcc_3v3_s0: pldo-reg4 {
++				regulator-name = "vcc_3v3_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <3300000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-ramp-delay = <12500>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vccio_sd_s0: pldo-reg5 {
++				regulator-name = "vccio_sd_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <3300000>;
++				regulator-ramp-delay = <12500>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			pldo6_s3: pldo-reg6 {
++				regulator-name = "pldo6_s3";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <1800000>;
++				regulator-max-microvolt = <1800000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <1800000>;
++				};
++			};
++
++			vdd_0v75_s3: nldo-reg1 {
++				regulator-name = "vdd_0v75_s3";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <750000>;
++				regulator-max-microvolt = <750000>;
++
++				regulator-state-mem {
++					regulator-on-in-suspend;
++					regulator-suspend-microvolt = <750000>;
++				};
++			};
++
++			vdd_ddr_pll_s0: nldo-reg2 {
++				regulator-name = "vdd_ddr_pll_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <850000>;
++				regulator-max-microvolt = <850000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++					regulator-suspend-microvolt = <850000>;
++				};
++			};
++
++			avdd_0v75_s0: nldo-reg3 {
++				regulator-name = "avdd_0v75_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <750000>;
++				regulator-max-microvolt = <750000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_0v85_s0: nldo-reg4 {
++				regulator-name = "vdd_0v85_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <850000>;
++				regulator-max-microvolt = <850000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++
++			vdd_0v75_s0: nldo-reg5 {
++				regulator-name = "vdd_0v75_s0";
++				regulator-always-on;
++				regulator-boot-on;
++				regulator-min-microvolt = <750000>;
++				regulator-max-microvolt = <750000>;
++
++				regulator-state-mem {
++					regulator-off-in-suspend;
++				};
++			};
++		};
++	};
++};
++
++&tsadc {
++	status = "okay";
++};
++
++&u2phy2 {
++	status = "okay";
++};
++
++&u2phy2_host {
++	status = "okay";
++};
++
++&u2phy3 {
++	status = "okay";
++};
++
++&u2phy3_host {
++	status = "okay";
++};
++
++&uart2 {
++	pinctrl-0 = <&uart2m0_xfer>;
++	status = "okay";
++};
++
++&usb_host0_ehci {
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	status = "okay";
++};
++
++&usb_host1_ehci {
++	status = "okay";
++};
++
++&usb_host1_ohci {
++	status = "okay";
++};
diff --git a/target/linux/rockchip/patches-6.1/522-arm64-dts-rockchip-Add-I2S2-M0-pin-definitions-to-rk.patch b/target/linux/rockchip/patches-6.1/522-arm64-dts-rockchip-Add-I2S2-M0-pin-definitions-to-rk.patch
new file mode 100644
index 0000000000..25526ba23c
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/522-arm64-dts-rockchip-Add-I2S2-M0-pin-definitions-to-rk.patch
@@ -0,0 +1,58 @@
+From bf012368bb0ab69167d49715789fac34dfcd457e Mon Sep 17 00:00:00 2001
+From: Ondrej Jirman <megi@xff.cz>
+Date: Sun, 8 Oct 2023 15:04:59 +0200
+Subject: [PATCH] arm64: dts: rockchip: Add I2S2 M0 pin definitions to rk3588s
+
+This is used on Orange Pi 5 Plus.
+
+Signed-off-by: Ondrej Jirman <megi@xff.cz>
+Link: https://lore.kernel.org/r/20231008130515.1155664-2-megi@xff.cz
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+---
+ .../boot/dts/rockchip/rk3588s-pinctrl.dtsi    | 35 +++++++++++++++++++
+ 1 file changed, 35 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s-pinctrl.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-pinctrl.dtsi
+@@ -1350,6 +1350,41 @@
+ 
+ 	i2s2 {
+ 		/omit-if-no-ref/
++		i2s2m0_lrck: i2s2m0-lrck {
++			rockchip,pins =
++				/* i2s2m0_lrck */
++				<2 RK_PC0 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m0_mclk: i2s2m0-mclk {
++			rockchip,pins =
++				/* i2s2m0_mclk */
++				<2 RK_PB6 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m0_sclk: i2s2m0-sclk {
++			rockchip,pins =
++				/* i2s2m0_sclk */
++				<2 RK_PB7 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m0_sdi: i2s2m0-sdi {
++			rockchip,pins =
++				/* i2s2m0_sdi */
++				<2 RK_PC3 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
++		i2s2m0_sdo: i2s2m0-sdo {
++			rockchip,pins =
++				/* i2s2m0_sdo */
++				<4 RK_PC3 2 &pcfg_pull_none>;
++		};
++
++		/omit-if-no-ref/
+ 		i2s2m1_lrck: i2s2m1-lrck {
+ 			rockchip,pins =
+ 				/* i2s2m1_lrck */
diff --git a/target/linux/rockchip/patches-6.1/523-arm64-dts-rockchip-Add-UART9-M0-pin-definitions-to-r.patch b/target/linux/rockchip/patches-6.1/523-arm64-dts-rockchip-Add-UART9-M0-pin-definitions-to-r.patch
new file mode 100644
index 0000000000..4a9cb6ea39
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/523-arm64-dts-rockchip-Add-UART9-M0-pin-definitions-to-r.patch
@@ -0,0 +1,32 @@
+From 3d77a3e51b0faed820a8db985dce5af1cc4eae32 Mon Sep 17 00:00:00 2001
+From: Ondrej Jirman <megi@xff.cz>
+Date: Sun, 8 Oct 2023 15:05:00 +0200
+Subject: [PATCH] arm64: dts: rockchip: Add UART9 M0 pin definitions to rk3588s
+
+This is used on Orange Pi 5 Plus.
+
+Signed-off-by: Ondrej Jirman <megi@xff.cz>
+Link: https://lore.kernel.org/r/20231008130515.1155664-3-megi@xff.cz
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s-pinctrl.dtsi | 9 +++++++++
+ 1 file changed, 9 insertions(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s-pinctrl.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s-pinctrl.dtsi
+@@ -3343,6 +3343,15 @@
+ 
+ 	uart9 {
+ 		/omit-if-no-ref/
++		uart9m0_xfer: uart9m0-xfer {
++			rockchip,pins =
++				/* uart9_rx_m0 */
++				<2 RK_PC4 10 &pcfg_pull_up>,
++				/* uart9_tx_m0 */
++				<2 RK_PC2 10 &pcfg_pull_up>;
++		};
++
++		/omit-if-no-ref/
+ 		uart9m1_xfer: uart9m1-xfer {
+ 			rockchip,pins =
+ 				/* uart9_rx_m1 */
diff --git a/target/linux/rockchip/patches-6.1/524-1-dt-bindings-PCI-dwc-rockchip-Add-atu-property.patch b/target/linux/rockchip/patches-6.1/524-1-dt-bindings-PCI-dwc-rockchip-Add-atu-property.patch
new file mode 100644
index 0000000000..8e7fac9d46
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/524-1-dt-bindings-PCI-dwc-rockchip-Add-atu-property.patch
@@ -0,0 +1,43 @@
+From a46b2e6952fb8a8165cffe06b3896cd755901856 Mon Sep 17 00:00:00 2001
+From: Niklas Cassel <niklas.cassel@wdc.com>
+Date: Tue, 24 Oct 2023 17:10:08 +0200
+Subject: [PATCH 1/4] dt-bindings: PCI: dwc: rockchip: Add atu property
+
+Even though rockchip-dw-pcie.yaml inherits snps,dw-pcie.yaml
+using:
+
+allOf:
+  - $ref: /schemas/pci/snps,dw-pcie.yaml#
+
+and snps,dw-pcie.yaml does have the atu property defined, in order to be
+able to use this property, while still making sure 'make CHECK_DTBS=y'
+pass, we need to add this property to rockchip-dw-pcie.yaml.
+
+Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
+---
+ Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml | 4 ++++
+ 1 file changed, 4 insertions(+)
+
+--- a/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
+@@ -29,16 +29,20 @@ properties:
+           - const: rockchip,rk3568-pcie
+ 
+   reg:
++    minItems: 3
+     items:
+       - description: Data Bus Interface (DBI) registers
+       - description: Rockchip designed configuration registers
+       - description: Config registers
++      - description: iATU registers
+ 
+   reg-names:
++    minItems: 3
+     items:
+       - const: dbi
+       - const: apb
+       - const: config
++      - const: atu
+ 
+   clocks:
+     minItems: 5
diff --git a/target/linux/rockchip/patches-6.1/524-2-arm64-dts-rockchip-add-missing-mandatory-rk3588-PCIe.patch b/target/linux/rockchip/patches-6.1/524-2-arm64-dts-rockchip-add-missing-mandatory-rk3588-PCIe.patch
new file mode 100644
index 0000000000..5eda78028f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/524-2-arm64-dts-rockchip-add-missing-mandatory-rk3588-PCIe.patch
@@ -0,0 +1,125 @@
+From cfe52e84e30b591175229a461f278f53266f2705 Mon Sep 17 00:00:00 2001
+From: Niklas Cassel <niklas.cassel@wdc.com>
+Date: Tue, 24 Oct 2023 17:10:09 +0200
+Subject: [PATCH 2/4] arm64: dts: rockchip: add missing mandatory rk3588 PCIe
+ atu property
+
+From the snps,dw-pcie.yaml devicetree binding:
+"At least DBI reg-space and peripheral devices CFG-space outbound window
+are required for the normal controller work. iATU memory IO region is
+also required if the space is unrolled (IP-core version >= 4.80a)."
+
+All the PCIe controllers in rk3588 are using the iATU unroll feature,
+and thus have to supply the atu property in the device tree node.
+
+The size of the iATU region equals to:
+MAX(num inbound ATU regions, num outbound ATU regions) * 0x200.
+
+Where for each 0x200 region, the registers controlling the
+IATU_REGION_OUTBOUND starts at offset 0x0, and the registers controlling
+IATU_REGION_INBOUND starts at offset 0x100.
+
+pcie3x4 and pcie3x2 have 16 ATU inbound regions, 16 ATU outbound regions,
+so they have size: max(16, 16) * 0x200 = 0x2000
+
+pcie2x1l0, pcie2x1l1, and pcie2x1l2 have 8 ATU inbound regions, 8 ATU
+outbound regions, so they have size: max(8, 8) * 0x200 = 0x1000
+
+On the rk3588 based rock-5b board:
+Before this patch, dw_pcie_iatu_detect() fails to detect all iATUs:
+rockchip-dw-pcie a40000000.pcie: iATU: unroll T, 8 ob, 8 ib, align 64K, limit 8G
+rockchip-dw-pcie a41000000.pcie: iATU: unroll T, 8 ob, 8 ib, align 64K, limit 8G
+rockchip-dw-pcie a40800000.pcie: iATU: unroll T, 8 ob, 8 ib, align 64K, limit 8G
+
+After this patch, dw_pcie_iatu_detect() succeeds to detect all iATUs:
+rockchip-dw-pcie a40000000.pcie: iATU: unroll T, 16 ob, 16 ib, align 64K, limit 8G
+rockchip-dw-pcie a41000000.pcie: iATU: unroll T, 8 ob, 8 ib, align 64K, limit 8G
+rockchip-dw-pcie a40800000.pcie: iATU: unroll T, 8 ob, 8 ib, align 64K, limit 8G
+
+Fixes: 8d81b77f4c49 ("arm64: dts: rockchip: add rk3588 PCIe2 support")
+Fixes: 0acf4fa7f187 ("arm64: dts: rockchip: add PCIe3 support for rk3588")
+Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi  | 21 ++++++++++++---------
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 14 ++++++++------
+ 2 files changed, 20 insertions(+), 15 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -198,10 +198,11 @@
+ 		ranges = <0x01000000 0x0 0xf0100000 0x0 0xf0100000 0x0 0x00100000>,
+ 			 <0x02000000 0x0 0xf0200000 0x0 0xf0200000 0x0 0x00e00000>,
+ 			 <0x03000000 0x0 0x40000000 0x9 0x00000000 0x0 0x40000000>;
+-		reg = <0xa 0x40000000 0x0 0x00400000>,
++		reg = <0xa 0x40000000 0x0 0x00300000>,
+ 		      <0x0 0xfe150000 0x0 0x00010000>,
+-		      <0x0 0xf0000000 0x0 0x00100000>;
+-		reg-names = "dbi", "apb", "config";
++		      <0x0 0xf0000000 0x0 0x00100000>,
++		      <0xa 0x40300000 0x0 0x00002000>;
++		reg-names = "dbi", "apb", "config", "atu";
+ 		resets = <&cru SRST_PCIE0_POWER_UP>, <&cru SRST_P_PCIE0>;
+ 		reset-names = "pwr", "pipe";
+ 		status = "disabled";
+@@ -249,10 +250,11 @@
+ 		ranges = <0x01000000 0x0 0xf1100000 0x0 0xf1100000 0x0 0x00100000>,
+ 			 <0x02000000 0x0 0xf1200000 0x0 0xf1200000 0x0 0x00e00000>,
+ 			 <0x03000000 0x0 0x40000000 0x9 0x40000000 0x0 0x40000000>;
+-		reg = <0xa 0x40400000 0x0 0x00400000>,
++		reg = <0xa 0x40400000 0x0 0x00300000>,
+ 		      <0x0 0xfe160000 0x0 0x00010000>,
+-		      <0x0 0xf1000000 0x0 0x00100000>;
+-		reg-names = "dbi", "apb", "config";
++		      <0x0 0xf1000000 0x0 0x00100000>,
++		      <0xa 0x40700000 0x0 0x00002000>;
++		reg-names = "dbi", "apb", "config", "atu";
+ 		resets = <&cru SRST_PCIE1_POWER_UP>, <&cru SRST_P_PCIE1>;
+ 		reset-names = "pwr", "pipe";
+ 		status = "disabled";
+@@ -298,10 +300,11 @@
+ 		ranges = <0x01000000 0x0 0xf2100000 0x0 0xf2100000 0x0 0x00100000>,
+ 			 <0x02000000 0x0 0xf2200000 0x0 0xf2200000 0x0 0x00e00000>,
+ 			 <0x03000000 0x0 0x40000000 0x9 0x80000000 0x0 0x40000000>;
+-		reg = <0xa 0x40800000 0x0 0x00400000>,
++		reg = <0xa 0x40800000 0x0 0x00300000>,
+ 		      <0x0 0xfe170000 0x0 0x00010000>,
+-		      <0x0 0xf2000000 0x0 0x00100000>;
+-		reg-names = "dbi", "apb", "config";
++		      <0x0 0xf2000000 0x0 0x00100000>,
++		      <0xa 0x40b00000 0x0 0x00001000>;
++		reg-names = "dbi", "apb", "config", "atu";
+ 		resets = <&cru SRST_PCIE2_POWER_UP>, <&cru SRST_P_PCIE2>;
+ 		reset-names = "pwr", "pipe";
+ 		#address-cells = <3>;
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -1873,10 +1873,11 @@
+ 		ranges = <0x01000000 0x0 0xf3100000 0x0 0xf3100000 0x0 0x00100000>,
+ 			 <0x02000000 0x0 0xf3200000 0x0 0xf3200000 0x0 0x00e00000>,
+ 			 <0x03000000 0x0 0x40000000 0x9 0xc0000000 0x0 0x40000000>;
+-		reg = <0xa 0x40c00000 0x0 0x00400000>,
++		reg = <0xa 0x40c00000 0x0 0x00300000>,
+ 		      <0x0 0xfe180000 0x0 0x00010000>,
+-		      <0x0 0xf3000000 0x0 0x00100000>;
+-		reg-names = "dbi", "apb", "config";
++		      <0x0 0xf3000000 0x0 0x00100000>,
++		      <0xa 0x40f00000 0x0 0x00001000>;
++		reg-names = "dbi", "apb", "config", "atu";
+ 		resets = <&cru SRST_PCIE3_POWER_UP>, <&cru SRST_P_PCIE3>;
+ 		reset-names = "pwr", "pipe";
+ 		#address-cells = <3>;
+@@ -1924,10 +1925,11 @@
+ 		ranges = <0x01000000 0x0 0xf4100000 0x0 0xf4100000 0x0 0x00100000>,
+ 			 <0x02000000 0x0 0xf4200000 0x0 0xf4200000 0x0 0x00e00000>,
+ 			 <0x03000000 0x0 0x40000000 0xa 0x00000000 0x0 0x40000000>;
+-		reg = <0xa 0x41000000 0x0 0x00400000>,
++		reg = <0xa 0x41000000 0x0 0x00300000>,
+ 		      <0x0 0xfe190000 0x0 0x00010000>,
+-		      <0x0 0xf4000000 0x0 0x00100000>;
+-		reg-names = "dbi", "apb", "config";
++		      <0x0 0xf4000000 0x0 0x00100000>,
++		      <0xa 0x41300000 0x0 0x00001000>;
++		reg-names = "dbi", "apb", "config", "atu";
+ 		resets = <&cru SRST_PCIE4_POWER_UP>, <&cru SRST_P_PCIE4>;
+ 		reset-names = "pwr", "pipe";
+ 		#address-cells = <3>;
diff --git a/target/linux/rockchip/patches-6.1/524-3-dt-bindings-PCI-dwc-rockchip-Add-dma-properties.patch b/target/linux/rockchip/patches-6.1/524-3-dt-bindings-PCI-dwc-rockchip-Add-dma-properties.patch
new file mode 100644
index 0000000000..c615142d33
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/524-3-dt-bindings-PCI-dwc-rockchip-Add-dma-properties.patch
@@ -0,0 +1,78 @@
+From 0dd352eeb32e4e729060361afc194eb4c7c24e16 Mon Sep 17 00:00:00 2001
+From: Niklas Cassel <niklas.cassel@wdc.com>
+Date: Tue, 24 Oct 2023 17:10:10 +0200
+Subject: [PATCH 3/4] dt-bindings: PCI: dwc: rockchip: Add dma properties
+
+Even though rockchip-dw-pcie.yaml inherits snps,dw-pcie.yaml
+using:
+
+allOf:
+  - $ref: /schemas/pci/snps,dw-pcie.yaml#
+
+and snps,dw-pcie.yaml does have the dma properties defined, in order to be
+able to use these properties, while still making sure 'make CHECK_DTBS=y'
+pass, we need to add these properties to rockchip-dw-pcie.yaml.
+
+Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
+---
+ .../bindings/pci/rockchip-dw-pcie.yaml        | 20 +++++++++++++++++++
+ 1 file changed, 20 insertions(+)
+
+--- a/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
++++ b/Documentation/devicetree/bindings/pci/rockchip-dw-pcie.yaml
+@@ -35,6 +35,7 @@ properties:
+       - description: Rockchip designed configuration registers
+       - description: Config registers
+       - description: iATU registers
++      - description: eDMA registers
+ 
+   reg-names:
+     minItems: 3
+@@ -43,6 +44,7 @@ properties:
+       - const: apb
+       - const: config
+       - const: atu
++      - const: dma
+ 
+   clocks:
+     minItems: 5
+@@ -65,6 +67,7 @@ properties:
+       - const: pipe
+ 
+   interrupts:
++    minItems: 5
+     items:
+       - description:
+           Combined system interrupt, which is used to signal the following
+@@ -88,14 +91,31 @@ properties:
+           interrupts - aer_rc_err, aer_rc_err_msi, rx_cpl_timeout,
+           tx_cpl_timeout, cor_err_sent, nf_err_sent, f_err_sent, cor_err_rx,
+           nf_err_rx, f_err_rx, radm_qoverflow
++      - description:
++          Indicates that the eDMA Tx/Rx transfer is complete or that an
++          error has occurred on the corresponding channel.
++      - description:
++          Indicates that the eDMA Tx/Rx transfer is complete or that an
++          error has occurred on the corresponding channel.
++      - description:
++          Indicates that the eDMA Tx/Rx transfer is complete or that an
++          error has occurred on the corresponding channel.
++      - description:
++          Indicates that the eDMA Tx/Rx transfer is complete or that an
++          error has occurred on the corresponding channel.
+ 
+   interrupt-names:
++    minItems: 5
+     items:
+       - const: sys
+       - const: pmc
+       - const: msg
+       - const: legacy
+       - const: err
++      - const: dma0
++      - const: dma1
++      - const: dma2
++      - const: dma3
+ 
+   legacy-interrupt-controller:
+     description: Interrupt controller node for handling legacy PCI interrupts.
diff --git a/target/linux/rockchip/patches-6.1/525-arm64-dts-rockchip-add-missing-rk3588-PCIe-dma-prope.patch b/target/linux/rockchip/patches-6.1/525-arm64-dts-rockchip-add-missing-rk3588-PCIe-dma-prope.patch
new file mode 100644
index 0000000000..cbf46c0184
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/525-arm64-dts-rockchip-add-missing-rk3588-PCIe-dma-prope.patch
@@ -0,0 +1,63 @@
+From dcf394c09e5d49f02a906e2113fb39e67ebe3d1f Mon Sep 17 00:00:00 2001
+From: Niklas Cassel <niklas.cassel@wdc.com>
+Date: Sat, 21 Oct 2023 00:44:11 +0200
+Subject: [PATCH 2/2] arm64: dts: rockchip: add missing rk3588 PCIe dma
+ properties
+
+The rk3588 has 5 PCIe controllers, however, according the the rk3588 TRM
+(Technical Reference Manual), only pcie3x4 supports the embedded DMA
+controller (eDMA) on the DWC PCIe controller.
+
+The size of the eDMA region equals to:
+0x200 + MAX(NUM_DMA_RD_CHAN, NUM_DMA_WR_CHAN) * 0x200.
+
+Where for each 0x200 region, the registers controlling the write channel
+starts at offset 0x0, and the registers controlling the read channel
+starts at offset 0x100.
+
+pcie3x4 has two DMA read channels and two DMA write channels,
+so it has size: 0x200 + max(2, 2) * 0x200 = 0x600
+
+On the rk3588 based rock-5b board, when building with CONFIG_DW_EDMA=y:
+Before this patch, only the iATUs are detected:
+rockchip-dw-pcie a40000000.pcie: iATU: unroll T, 16 ob, 16 ib, align 64K, limit 8G
+
+After this patch, both the iATUs and the eDMA channels are detected:
+rockchip-dw-pcie a40000000.pcie: iATU: unroll T, 16 ob, 16 ib, align 64K, limit 8G
+rockchip-dw-pcie a40000000.pcie: eDMA: unroll T, 2 wr, 2 rd
+
+Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
+---
+ arch/arm64/boot/dts/rockchip/rk3588.dtsi | 14 ++++++++++----
+ 1 file changed, 10 insertions(+), 4 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588.dtsi
+@@ -180,8 +180,13 @@
+ 			     <GIC_SPI 262 IRQ_TYPE_LEVEL_HIGH 0>,
+ 			     <GIC_SPI 261 IRQ_TYPE_LEVEL_HIGH 0>,
+ 			     <GIC_SPI 260 IRQ_TYPE_LEVEL_HIGH 0>,
+-			     <GIC_SPI 259 IRQ_TYPE_LEVEL_HIGH 0>;
+-		interrupt-names = "sys", "pmc", "msg", "legacy", "err";
++			     <GIC_SPI 259 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 271 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 272 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 269 IRQ_TYPE_LEVEL_HIGH 0>,
++			     <GIC_SPI 270 IRQ_TYPE_LEVEL_HIGH 0>;
++		interrupt-names = "sys", "pmc", "msg", "legacy", "err",
++				  "dma0", "dma1", "dma2", "dma3";
+ 		#interrupt-cells = <1>;
+ 		interrupt-map-mask = <0 0 0 7>;
+ 		interrupt-map = <0 0 0 1 &pcie3x4_intc 0>,
+@@ -201,8 +206,9 @@
+ 		reg = <0xa 0x40000000 0x0 0x00300000>,
+ 		      <0x0 0xfe150000 0x0 0x00010000>,
+ 		      <0x0 0xf0000000 0x0 0x00100000>,
+-		      <0xa 0x40300000 0x0 0x00002000>;
+-		reg-names = "dbi", "apb", "config", "atu";
++		      <0xa 0x40300000 0x0 0x00002000>,
++		      <0xa 0x40380000 0x0 0x00000600>;
++		reg-names = "dbi", "apb", "config", "atu", "dma";
+ 		resets = <&cru SRST_PCIE0_POWER_UP>, <&cru SRST_P_PCIE0>;
+ 		reset-names = "pwr", "pipe";
+ 		status = "disabled";
diff --git a/target/linux/rockchip/patches-6.1/526-dt-bindings-usb-rockchip-dwc3-fix-reference-to-nonex.patch b/target/linux/rockchip/patches-6.1/526-dt-bindings-usb-rockchip-dwc3-fix-reference-to-nonex.patch
new file mode 100644
index 0000000000..af993c1ee4
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/526-dt-bindings-usb-rockchip-dwc3-fix-reference-to-nonex.patch
@@ -0,0 +1,29 @@
+From e60a641980644156bc91f494b2764fe50d7185e8 Mon Sep 17 00:00:00 2001
+From: Vegard Nossum <vegard.nossum@oracle.com>
+Date: Sun, 22 Oct 2023 20:51:50 +0200
+Subject: [PATCH] dt-bindings: usb: rockchip,dwc3: fix reference to nonexistent
+ file
+
+This file was renamed but left a dangling reference. Fix it.
+
+Fixes: 0f48b0ed356d ("dt-bindings: phy: rename phy-rockchip-inno-usb2.yaml")
+Cc: Johan Jonker <jbx6244@gmail.com>
+Cc: Vinod Koul <vkoul@kernel.org>
+Cc: Rob Herring <robh@kernel.org>
+Cc: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
+---
+ Documentation/devicetree/bindings/usb/rockchip,dwc3.yaml | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/Documentation/devicetree/bindings/usb/rockchip,dwc3.yaml
++++ b/Documentation/devicetree/bindings/usb/rockchip,dwc3.yaml
+@@ -15,7 +15,7 @@ description:
+   Phy documentation is provided in the following places.
+ 
+   USB2.0 PHY
+-  Documentation/devicetree/bindings/phy/phy-rockchip-inno-usb2.yaml
++  Documentation/devicetree/bindings/phy/rockchip,inno-usb2phy.yaml
+ 
+   Type-C PHY
+   Documentation/devicetree/bindings/phy/phy-rockchip-typec.txt
diff --git a/target/linux/rockchip/patches-6.1/527-dt-bindings-mfd-rk8xx-Deprecate-rockchip-system-powe.patch b/target/linux/rockchip/patches-6.1/527-dt-bindings-mfd-rk8xx-Deprecate-rockchip-system-powe.patch
new file mode 100644
index 0000000000..9b43288dae
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/527-dt-bindings-mfd-rk8xx-Deprecate-rockchip-system-powe.patch
@@ -0,0 +1,95 @@
+From cead8c188a5d93385c587692ee9a572602c4d4cf Mon Sep 17 00:00:00 2001
+From: Ondrej Jirman <megi@xff.cz>
+Date: Thu, 19 Oct 2023 18:57:23 +0200
+Subject: [PATCH] dt-bindings: mfd: rk8xx: Deprecate
+ rockchip,system-power-controller
+
+Deprecate support for this property in favor of standard
+system-power-controller one.
+
+Signed-off-by: Ondrej Jirman <megi@xff.cz>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ Documentation/devicetree/bindings/mfd/rockchip,rk805.yaml | 3 +++
+ Documentation/devicetree/bindings/mfd/rockchip,rk808.yaml | 3 +++
+ Documentation/devicetree/bindings/mfd/rockchip,rk809.yaml | 3 +++
+ Documentation/devicetree/bindings/mfd/rockchip,rk817.yaml | 3 +++
+ Documentation/devicetree/bindings/mfd/rockchip,rk818.yaml | 3 +++
+ 5 files changed, 15 insertions(+)
+
+--- a/Documentation/devicetree/bindings/mfd/rockchip,rk805.yaml
++++ b/Documentation/devicetree/bindings/mfd/rockchip,rk805.yaml
+@@ -42,9 +42,12 @@ properties:
+ 
+   rockchip,system-power-controller:
+     type: boolean
++    deprecated: true
+     description:
+       Telling whether or not this PMIC is controlling the system power.
+ 
++  system-power-controller: true
++
+   wakeup-source:
+     type: boolean
+     description:
+--- a/Documentation/devicetree/bindings/mfd/rockchip,rk808.yaml
++++ b/Documentation/devicetree/bindings/mfd/rockchip,rk808.yaml
+@@ -37,9 +37,12 @@ properties:
+ 
+   rockchip,system-power-controller:
+     type: boolean
++    deprecated: true
+     description:
+       Telling whether or not this PMIC is controlling the system power.
+ 
++  system-power-controller: true
++
+   wakeup-source:
+     type: boolean
+     description:
+--- a/Documentation/devicetree/bindings/mfd/rockchip,rk809.yaml
++++ b/Documentation/devicetree/bindings/mfd/rockchip,rk809.yaml
+@@ -37,9 +37,12 @@ properties:
+ 
+   rockchip,system-power-controller:
+     type: boolean
++    deprecated: true
+     description:
+       Telling whether or not this PMIC is controlling the system power.
+ 
++  system-power-controller: true
++
+   wakeup-source:
+     type: boolean
+     description:
+--- a/Documentation/devicetree/bindings/mfd/rockchip,rk817.yaml
++++ b/Documentation/devicetree/bindings/mfd/rockchip,rk817.yaml
+@@ -38,9 +38,12 @@ properties:
+ 
+   rockchip,system-power-controller:
+     type: boolean
++    deprecated: true
+     description:
+       Telling whether or not this PMIC is controlling the system power.
+ 
++  system-power-controller: true
++
+   wakeup-source:
+     type: boolean
+     description:
+--- a/Documentation/devicetree/bindings/mfd/rockchip,rk818.yaml
++++ b/Documentation/devicetree/bindings/mfd/rockchip,rk818.yaml
+@@ -37,9 +37,12 @@ properties:
+ 
+   rockchip,system-power-controller:
+     type: boolean
++    deprecated: true
+     description:
+       Telling whether or not this PMIC is controlling the system power.
+ 
++  system-power-controller: true
++
+   wakeup-source:
+     type: boolean
+     description:
diff --git a/target/linux/rockchip/patches-6.1/528-dt-bindings-mfd-rk806-Allow-system-power-controller-.patch b/target/linux/rockchip/patches-6.1/528-dt-bindings-mfd-rk806-Allow-system-power-controller-.patch
new file mode 100644
index 0000000000..fd5fd9c824
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/528-dt-bindings-mfd-rk806-Allow-system-power-controller-.patch
@@ -0,0 +1,26 @@
+From 198dedeb1281ca377d9d4f657e25ebd7d4ae8c91 Mon Sep 17 00:00:00 2001
+From: Ondrej Jirman <megi@xff.cz>
+Date: Thu, 19 Oct 2023 18:57:24 +0200
+Subject: [PATCH] dt-bindings: mfd: rk806: Allow system-power-controller
+ property
+
+Declare support for this property.
+
+Signed-off-by: Ondrej Jirman <megi@xff.cz>
+Reviewed-by: Rob Herring <robh@kernel.org>
+Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ Documentation/devicetree/bindings/mfd/rockchip,rk806.yaml | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/Documentation/devicetree/bindings/mfd/rockchip,rk806.yaml
++++ b/Documentation/devicetree/bindings/mfd/rockchip,rk806.yaml
+@@ -29,6 +29,8 @@ properties:
+   '#gpio-cells':
+     const: 2
+ 
++  system-power-controller: true
++
+   vcc1-supply:
+     description:
+       The input supply for dcdc-reg1.
diff --git a/target/linux/rockchip/patches-6.1/529-mfd-rk8xx-Add-support-for-standard-system-power-cont.patch b/target/linux/rockchip/patches-6.1/529-mfd-rk8xx-Add-support-for-standard-system-power-cont.patch
new file mode 100644
index 0000000000..78d80bba0f
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/529-mfd-rk8xx-Add-support-for-standard-system-power-cont.patch
@@ -0,0 +1,26 @@
+From ae5180c9d0bc240f0656d36ec1eab9be37c1eb9f Mon Sep 17 00:00:00 2001
+From: Ondrej Jirman <megi@xff.cz>
+Date: Thu, 19 Oct 2023 18:57:25 +0200
+Subject: [PATCH] mfd: rk8xx: Add support for standard system-power-controller
+ property
+
+DT property rockchip,system-power-controller is now deprecated.
+
+Signed-off-by: Ondrej Jirman <megi@xff.cz>
+Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ drivers/mfd/rk8xx-core.c | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+--- a/drivers/mfd/rk8xx-core.c
++++ b/drivers/mfd/rk8xx-core.c
+@@ -685,7 +685,8 @@ int rk8xx_probe(struct device *dev, int
+ 	if (ret)
+ 		return dev_err_probe(dev, ret, "failed to add MFD devices\n");
+ 
+-	if (device_property_read_bool(dev, "rockchip,system-power-controller")) {
++	if (device_property_read_bool(dev, "rockchip,system-power-controller") ||
++	    device_property_read_bool(dev, "system-power-controller")) {
+ 		ret = devm_register_sys_off_handler(dev,
+ 				    SYS_OFF_MODE_POWER_OFF_PREPARE, SYS_OFF_PRIO_HIGH,
+ 				    &rk808_power_off, rk808);
diff --git a/target/linux/rockchip/patches-6.1/530-mfd-rk8xx-Add-support-for-RK806-power-off.patch b/target/linux/rockchip/patches-6.1/530-mfd-rk8xx-Add-support-for-RK806-power-off.patch
new file mode 100644
index 0000000000..f478a728c6
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/530-mfd-rk8xx-Add-support-for-RK806-power-off.patch
@@ -0,0 +1,27 @@
+From 4198e8898b71d0bee8dc9e49749a81fea45d2d5b Mon Sep 17 00:00:00 2001
+From: Ondrej Jirman <megi@xff.cz>
+Date: Thu, 19 Oct 2023 18:57:26 +0200
+Subject: [PATCH] mfd: rk8xx: Add support for RK806 power off
+
+Use DEV_OFF bit to power off the RK806 PMIC, when system-power-controller
+is used in DTS.
+
+Signed-off-by: Ondrej Jirman <megi@xff.cz>
+Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+---
+ drivers/mfd/rk8xx-core.c | 4 ++++
+ 1 file changed, 4 insertions(+)
+
+--- a/drivers/mfd/rk8xx-core.c
++++ b/drivers/mfd/rk8xx-core.c
+@@ -525,6 +525,10 @@ static int rk808_power_off(struct sys_of
+ 		reg = RK805_DEV_CTRL_REG;
+ 		bit = DEV_OFF;
+ 		break;
++	case RK806_ID:
++		reg = RK806_SYS_CFG3;
++		bit = DEV_OFF;
++		break;
+ 	case RK808_ID:
+ 		reg = RK808_DEVCTRL_REG,
+ 		bit = DEV_OFF_RST;
diff --git a/target/linux/rockchip/patches-6.1/531-arm64-dts-rockchip-Fix-rk3588-USB-power-domain-clocks.patch b/target/linux/rockchip/patches-6.1/531-arm64-dts-rockchip-Fix-rk3588-USB-power-domain-clocks.patch
new file mode 100644
index 0000000000..6b948a99fe
--- /dev/null
+++ b/target/linux/rockchip/patches-6.1/531-arm64-dts-rockchip-Fix-rk3588-USB-power-domain-clocks.patch
@@ -0,0 +1,44 @@
+From 44de8996ed5a10f08f2fe947182da6535edcfae5 Mon Sep 17 00:00:00 2001
+From: Sam Edwards <cfsworks@gmail.com>
+Date: Fri, 15 Dec 2023 19:10:19 -0700
+Subject: arm64: dts: rockchip: Fix rk3588 USB power-domain clocks
+
+The QoS blocks saved/restored when toggling the PD_USB power domain are
+clocked by ACLK_USB. Attempting to access these memory regions without
+that clock running will result in an indefinite CPU stall.
+
+The PD_USB node wasn't specifying this clock dependency, resulting in
+hangs when trying to toggle the power domain (either on or off), unless
+we get "lucky" and have ACLK_USB running for another reason at the time.
+This "luck" can result from the bootloader leaving USB powered/clocked,
+and if no built-in driver wants USB, Linux will disable the unused
+PD+CLK on boot when {pd,clk}_ignore_unused aren't given. This can also
+be unlucky because the two cleanup tasks run in parallel and race: if
+the CLK is disabled first, the PD deactivation stalls the boot. In any
+case, the PD cannot then be reenabled (if e.g. the driver loads later)
+once the clock has been stopped.
+
+Fix this by specifying a dependency on ACLK_USB, instead of only
+ACLK_USB_ROOT. The child-parent relationship means the former implies
+the latter anyway.
+
+Fixes: c9211fa2602b8 ("arm64: dts: rockchip: Add base DT for rk3588 SoC")
+Cc: stable@vger.kernel.org
+Signed-off-by: Sam Edwards <CFSworks@gmail.com>
+Link: https://lore.kernel.org/r/20231216021019.1543811-1-CFSworks@gmail.com
+[changed to only include the missing clock, not dropping the root-clocks]
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+---
+ arch/arm64/boot/dts/rockchip/rk3588s.dtsi | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3588s.dtsi
+@@ -1504,6 +1504,7 @@
+ 				reg = <RK3588_PD_USB>;
+ 				clocks = <&cru PCLK_PHP_ROOT>,
+ 					 <&cru ACLK_USB_ROOT>,
++					 <&cru ACLK_USB>,
+ 					 <&cru HCLK_USB_ROOT>,
+ 					 <&cru HCLK_HOST0>,
+ 					 <&cru HCLK_HOST_ARB0>,
-- 
2.40.1


From 3be53c940136e633c907afd97f2b8291dfa293ab Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Sun, 26 Nov 2023 17:36:26 -0500
Subject: [PATCH 06/38] uboot-rockchip: update to v2024.02-rc1

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 package/boot/uboot-rockchip/Makefile          | 231 +++--
 .../patches/100-force-build-dtc.patch         |  20 +
 ...28-Add-support-for-Orange-Pi-R1-Plus.patch | 594 ------------
 ...Add-support-for-Orange-Pi-R1-Plus-LT.patch | 257 -----
 ...Add-support-for-FriendlyARM-NanoPi-R.patch | 917 ------------------
 ...Add-support-for-FriendlyARM-NanoPi-R.patch | 269 -----
 ...105-nanopc-t4-fix-memory-unstability.patch |  24 -
 .../106-uboot-rockchip-add-nanopi-r6c.patch   | 442 +++++++++
 8 files changed, 601 insertions(+), 2153 deletions(-)
 create mode 100644 package/boot/uboot-rockchip/patches/100-force-build-dtc.patch
 delete mode 100644 package/boot/uboot-rockchip/patches/100-rockchip-rk3328-Add-support-for-Orange-Pi-R1-Plus.patch
 delete mode 100644 package/boot/uboot-rockchip/patches/101-rockchip-rk3328-Add-support-for-Orange-Pi-R1-Plus-LT.patch
 delete mode 100644 package/boot/uboot-rockchip/patches/103-rockchip-rk3568-Add-support-for-FriendlyARM-NanoPi-R.patch
 delete mode 100644 package/boot/uboot-rockchip/patches/104-rockchip-rk3568-Add-support-for-FriendlyARM-NanoPi-R.patch
 delete mode 100644 package/boot/uboot-rockchip/patches/105-nanopc-t4-fix-memory-unstability.patch
 create mode 100644 package/boot/uboot-rockchip/patches/106-uboot-rockchip-add-nanopi-r6c.patch

diff --git a/package/boot/uboot-rockchip/Makefile b/package/boot/uboot-rockchip/Makefile
index 1dad3c1e1c..ffc97f1c1f 100644
--- a/package/boot/uboot-rockchip/Makefile
+++ b/package/boot/uboot-rockchip/Makefile
@@ -5,14 +5,12 @@
 include $(TOPDIR)/rules.mk
 include $(INCLUDE_DIR)/kernel.mk
 
-PKG_VERSION:=2023.07.02
+PKG_VERSION:=2024.01-rc2
 PKG_RELEASE:=1
-PKG_HASH:=6b6a48581c14abb0f95bd87c1af4d740922406d7b801002a9f94727fdde021d5
 
-PKG_MAINTAINER:=Tobias Maedel <openwrt@tbspace.de>
+PKG_HASH:=7585328ee545bd0566a90965ef02c3a8d1c828f56a92548a03e88e7644dd76bd
 
-UBOOT_USE_BINMAN:=1
-UBOOT_USE_INTREE_DTC:=1
+PKG_MAINTAINER:=Tobias Maedel <openwrt@tbspace.de>
 
 include $(INCLUDE_DIR)/u-boot.mk
 include $(INCLUDE_DIR)/package.mk
@@ -26,147 +24,196 @@ endef
 
 # RK3328 boards
 
-define U-Boot/rk3328/Default
-  BUILD_SUBTARGET:=armv8
-  DEPENDS:=+PACKAGE_u-boot-$(1):trusted-firmware-a-rk3328
-  ATF:=rk3328_bl31.elf
-endef
-
-define U-Boot/nanopi-r2c-rk3328
-  $(U-Boot/rk3328/Default)
-  NAME:=NanoPi R2C
-  BUILD_DEVICES:= \
-    friendlyarm_nanopi-r2c
-endef
-
 define U-Boot/nanopi-r2s-rk3328
-  $(U-Boot/rk3328/Default)
+  BUILD_SUBTARGET:=armv8
   NAME:=NanoPi R2S
   BUILD_DEVICES:= \
     friendlyarm_nanopi-r2s
-endef
-
-define U-Boot/orangepi-r1-plus-rk3328
-  $(U-Boot/rk3328/Default)
-  NAME:=Orange Pi R1 Plus
-  BUILD_DEVICES:= \
-    xunlong_orangepi-r1-plus
-endef
-
-define U-Boot/orangepi-r1-plus-lts-rk3328
-  $(U-Boot/rk3328/Default)
-  NAME:=Orange Pi R1 Plus LTS
-  BUILD_DEVICES:= \
-    xunlong_orangepi-r1-plus-lts
+  DEPENDS:=+PACKAGE_u-boot-nanopi-r2s-rk3328:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3328_bl31.elf
 endef
 
 define U-Boot/roc-cc-rk3328
-  $(U-Boot/rk3328/Default)
+  BUILD_SUBTARGET:=armv8
   NAME:=ROC-RK3328-CC
   BUILD_DEVICES:= \
     firefly_roc-rk3328-cc
+  DEPENDS:=+PACKAGE_u-boot-roc-cc-rk3328:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3328_bl31.elf
 endef
 
-define U-Boot/rock64-rk3328
-  $(U-Boot/rk3328/Default)
-  NAME:=Rock64
+
+# RK3399 boards
+
+
+define U-Boot/rock-pi-4-rk3399
+  BUILD_SUBTARGET:=armv8
+  NAME:=Rock Pi 4
   BUILD_DEVICES:= \
-    pine64_rock64
+    radxa_rock-pi-4
+  DEPENDS:=+PACKAGE_u-boot-rock-pi-4-rk3399:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3399_bl31.elf
 endef
 
-define U-Boot/rock-pi-e-rk3328
-  $(U-Boot/rk3328/Default)
-  NAME:=ROCK Pi E
+define U-Boot/rockpro64-rk3399
+  BUILD_SUBTARGET:=armv8
+  NAME:=RockPro64
   BUILD_DEVICES:= \
-    radxa_rock-pi-e
+    pine64_rockpro64
+  DEPENDS:=+PACKAGE_u-boot-rockpro64-rk3399:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3399_bl31.elf
 endef
 
-# RK3399 boards
+# RK356x boards
 
-define U-Boot/rk3399/Default
+define U-Boot/bpi-r2-pro-rk3568
   BUILD_SUBTARGET:=armv8
-  DEPENDS:=+PACKAGE_u-boot-$(1):trusted-firmware-a-rk3399
-  ATF:=rk3399_bl31.elf
+  NAME:=BPI-R2-PRO
+  BUILD_DEVICES:= \
+    rockchip_bpi-r2-pro
+  DEPENDS:=+PACKAGE_u-boot-bpi-r2-pro-rk3568:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3568_bl31.elf
+  DDR_3568:=$(1)
 endef
 
-define U-Boot/nanopc-t4-rk3399
-  $(U-Boot/rk3399/Default)
-  NAME:=NanoPC T4
+define U-Boot/quartz64-a-rk3566
+  BUILD_SUBTARGET:=armv8
+  NAME:=QUARTZ64
   BUILD_DEVICES:= \
-    friendlyarm_nanopc-t4
+    pine64_quartz64-a
+  DEPENDS:=+PACKAGE_u-boot-quartz64-a-rk3566:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3568_bl31.elf
+  DDR_3568:=$(1)
 endef
 
-define U-Boot/nanopi-r4s-rk3399
-  $(U-Boot/rk3399/Default)
-  NAME:=NanoPi R4S
+define U-Boot/nanopi-r5c-rk3568
+  BUILD_SUBTARGET:=armv8
+  NAME:=NANOPI-R5C
   BUILD_DEVICES:= \
-    friendlyarm_nanopi-r4s
+    friendlyelec_nanopi-r5c
+  DEPENDS:=+PACKAGE_u-boot-nanopi-r5c-rk3568:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3568_bl31.elf
+  DDR_3568:=$(1)
 endef
 
-define U-Boot/rock-pi-4-rk3399
-  $(U-Boot/rk3399/Default)
-  NAME:=Rock Pi 4
+define U-Boot/nanopi-r5s-rk3568
+  BUILD_SUBTARGET:=armv8
+  NAME:=NANOPI-R5S
   BUILD_DEVICES:= \
-    radxa_rock-pi-4a
+    friendlyelec_nanopi-r5s
+  DEPENDS:=+PACKAGE_u-boot-nanopi-r5s-rk3568:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3568_bl31.elf
+  DDR_3568:=$(1)
 endef
 
-define U-Boot/rockpro64-rk3399
-  $(U-Boot/rk3399/Default)
-  NAME:=RockPro64
+define U-Boot/rock-3a-rk3568
+  BUILD_SUBTARGET:=armv8
+  NAME:=ROCK-3A
   BUILD_DEVICES:= \
-    pine64_rockpro64
+    radxa_rock-3a
+  DEPENDS:=+PACKAGE_u-boot-rock-3a-rk3568:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3568_bl31.elf
+  DDR_3568:=$(1)
 endef
 
+# RK3588 boards
+
+define U-Boot/nanopi-r6c-rk3588
+  BUILD_SUBTARGET:=armv8
+  NAME:=NANOPI-R6C
+  BUILD_DEVICES:= \
+    friendlyelec_nanopi-r6c
+  DEPENDS:=+PACKAGE_u-boot-nanopi-r6c-rk3588:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3588_bl31.elf
+  DDR_3588:=$(1)
 
-# RK3568 boards
+endef
 
-define U-Boot/rk3568/Default
+define U-Boot/nanopi-r6s-rk3588
   BUILD_SUBTARGET:=armv8
-  DEPENDS:=+PACKAGE_u-boot-$(1):trusted-firmware-a-rk3568
-  ATF:=rk3568_bl31_v1.43.elf
-  TPL:=rk3568_ddr_1560MHz_v1.18.bin
+  NAME:=NANOPI-R6C
+  BUILD_DEVICES:= \
+    friendlyelec_nanopi-r6s
+  DEPENDS:=+PACKAGE_u-boot-nanopi-r6c-rk3588:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  DEVICE_DTS := rk3588-nanopi-r6c.dts
+  UBOOT_CONFIG:= nanopi-r6c-rk3588
+  ATF:=rk3588_bl31.elf
+  DDR_3588:=$(1)
+
 endef
 
-define U-Boot/nanopi-r5c-rk3568
-  $(U-Boot/rk3568/Default)
-  NAME:=NanoPi R5C
+define U-Boot/orangepi-5-plus-rk3588
+  BUILD_SUBTARGET:=armv8
+  NAME:=ORANGEPI-5-PLUS
   BUILD_DEVICES:= \
-    friendlyarm_nanopi-r5c
+    xunlong_orangepi-5-plus
+  DEPENDS:=+PACKAGE_u-boot-orangepi-5-plus-rk3588:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3588_bl31.elf
+  DDR_3588:=$(1)
 endef
 
-define U-Boot/nanopi-r5s-rk3568
-  $(U-Boot/rk3568/Default)
-  NAME:=NanoPi R5S
+define U-Boot/rock-5b-rk3588
+  BUILD_SUBTARGET:=armv8
+  NAME:=ROCK-5B
   BUILD_DEVICES:= \
-    friendlyarm_nanopi-r5s
+    radxa_rock-5b
+  DEPENDS:=+PACKAGE_u-boot-rock-5b-rk3588:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  UBOOT_CONFIG:= rock5b-rk3588
+  ATF:=rk3588_bl31.elf
+  DDR_3588:=$(1)
+  DEFAULT := n
 endef
 
 UBOOT_TARGETS := \
-  nanopc-t4-rk3399 \
-  nanopi-r4s-rk3399 \
+  nanopi-r6c-rk3588 \
+  nanopi-r6s-rk3588 \
+  orangepi-5-plus-rk3588 \
+  rock-5b-rk3588 \
+  bpi-r2-pro-rk3568 \
+  nanopi-r5c-rk3568 \
+  nanopi-r5s-rk3568 \
+  quartz64-a-rk3566 \
+  rock-3a-rk3568 \
   rock-pi-4-rk3399 \
   rockpro64-rk3399 \
-  nanopi-r2c-rk3328 \
   nanopi-r2s-rk3328 \
-  orangepi-r1-plus-rk3328 \
-  orangepi-r1-plus-lts-rk3328 \
-  roc-cc-rk3328 \
-  rock64-rk3328 \
-  rock-pi-e-rk3328 \
-  nanopi-r5c-rk3568 \
-  nanopi-r5s-rk3568
+  roc-cc-rk3328
 
 UBOOT_CONFIGURE_VARS += USE_PRIVATE_LIBGCC=yes
 
-UBOOT_CUSTOMIZE_CONFIG := \
-	--disable SPL_FIT_SIGNATURE \
-	--disable TOOLS_MKEFICAPSULE \
-	--set-str MKIMAGE_DTC_PATH $(PKG_BUILD_DIR)/scripts/dtc/dtc
-
 UBOOT_MAKE_FLAGS += \
   PATH=$(STAGING_DIR_HOST)/bin:$(PATH) \
-  BL31=$(STAGING_DIR_IMAGE)/$(ATF) \
-  $(if $(TPL),ROCKCHIP_TPL=$(STAGING_DIR_IMAGE)/$(TPL))
+  BL31=$(STAGING_DIR_IMAGE)/$(ATF)
+export ROCKCHIP_TPL=./ddr.bin
+
+define Build/Configure
+	$(call Build/Configure/U-Boot)
+
+ifneq ($(DDR_3568),)
+	$(CP) $(STAGING_DIR_IMAGE)/rk3568_ddr.bin $(PKG_BUILD_DIR)/ddr.bin
+endif
+
+ifneq ($(DDR_3588),)
+	$(CP) $(STAGING_DIR_IMAGE)/rk3588_ddr.bin $(PKG_BUILD_DIR)/ddr.bin
+endif
+
+	$(SED) 's#CONFIG_MKIMAGE_DTC_PATH=.*#CONFIG_MKIMAGE_DTC_PATH="$(PKG_BUILD_DIR)/scripts/dtc/dtc"#g' $(PKG_BUILD_DIR)/.config
+	echo 'CONFIG_TOOLS_MKEFICAPSULE=n' >> $(PKG_BUILD_DIR)/.config
+	echo 'CONFIG_OF_LIBFDT_OVERLAY=n' >> $(PKG_BUILD_DIR)/.config
+endef
 
 define Build/InstallDev
 	$(INSTALL_DIR) $(STAGING_DIR_IMAGE)
diff --git a/package/boot/uboot-rockchip/patches/100-force-build-dtc.patch b/package/boot/uboot-rockchip/patches/100-force-build-dtc.patch
new file mode 100644
index 0000000000..ca93a20648
--- /dev/null
+++ b/package/boot/uboot-rockchip/patches/100-force-build-dtc.patch
@@ -0,0 +1,20 @@
+--- a/Makefile
++++ b/Makefile
+@@ -416,7 +416,7 @@ PYTHON3		?= python3
+ 
+ # The devicetree compiler and pylibfdt are automatically built unless DTC is
+ # provided. If DTC is provided, it is assumed the pylibfdt is available too.
+-DTC_INTREE	:= $(objtree)/scripts/dtc/dtc
++DTC	:= $(objtree)/scripts/dtc/dtc
+ DTC		?= $(DTC_INTREE)
+ DTC_MIN_VERSION	:= 010406
+ 
+@@ -2011,7 +2011,7 @@ endif
+ # Check dtc and pylibfdt, if DTC is provided, else build them
+ PHONY += scripts_dtc
+ scripts_dtc: scripts_basic
+-	$(Q)if test "$(DTC)" = "$(DTC_INTREE)"; then \
++	$(Q)if test "$(DTC)" = "$(DTC)"; then \
+ 		$(MAKE) $(build)=scripts/dtc; \
+ 	else \
+ 		if ! $(DTC) -v >/dev/null; then \
diff --git a/package/boot/uboot-rockchip/patches/100-rockchip-rk3328-Add-support-for-Orange-Pi-R1-Plus.patch b/package/boot/uboot-rockchip/patches/100-rockchip-rk3328-Add-support-for-Orange-Pi-R1-Plus.patch
deleted file mode 100644
index 487e6afda8..0000000000
--- a/package/boot/uboot-rockchip/patches/100-rockchip-rk3328-Add-support-for-Orange-Pi-R1-Plus.patch
+++ /dev/null
@@ -1,594 +0,0 @@
-From 89afb631d965292aaf433806d8224b53d9e74036 Mon Sep 17 00:00:00 2001
-From: Tianling Shen <cnsztl@gmail.com>
-Date: Sat, 20 May 2023 18:50:38 +0800
-Subject: [PATCH] rockchip: rk3328: Add support for Orange Pi R1 Plus
-
-Orange Pi R1 Plus is a Rockchip RK3328 based SBC by Xunlong.
-
-This device is similar to the NanoPi R2S, and has a 16MB
-SPI NOR (mx25l12805d). The reset button is changed to
-directly reset the power supply, another detail is that
-both network ports have independent MAC addresses.
-
-The device tree and description are taken from kernel v6.3-rc1.
-
-Reviewed-by: Kever Yang <kever.yang@rock-chips.com>
-Signed-off-by: Tianling Shen <cnsztl@gmail.com>
----
- arch/arm/dts/Makefile                         |   1 +
- .../dts/rk3328-orangepi-r1-plus-u-boot.dtsi   |  46 +++
- arch/arm/dts/rk3328-orangepi-r1-plus.dts      | 373 ++++++++++++++++++
- board/rockchip/evb_rk3328/MAINTAINERS         |   6 +
- configs/orangepi-r1-plus-rk3328_defconfig     | 114 ++++++
- 5 files changed, 540 insertions(+)
- create mode 100644 arch/arm/dts/rk3328-orangepi-r1-plus-u-boot.dtsi
- create mode 100644 arch/arm/dts/rk3328-orangepi-r1-plus.dts
- create mode 100644 configs/orangepi-r1-plus-rk3328_defconfig
-
---- a/arch/arm/dts/Makefile
-+++ b/arch/arm/dts/Makefile
-@@ -125,6 +125,7 @@ dtb-$(CONFIG_ROCKCHIP_RK3328) += \
- 	rk3328-evb.dtb \
- 	rk3328-nanopi-r2c.dtb \
- 	rk3328-nanopi-r2s.dtb \
-+	rk3328-orangepi-r1-plus.dtb \
- 	rk3328-roc-cc.dtb \
- 	rk3328-rock64.dtb \
- 	rk3328-rock-pi-e.dtb
---- /dev/null
-+++ b/arch/arm/dts/rk3328-orangepi-r1-plus-u-boot.dtsi
-@@ -0,0 +1,46 @@
-+// SPDX-License-Identifier: GPL-2.0-or-later
-+/*
-+ * (C) Copyright 2018-2019 Rockchip Electronics Co., Ltd
-+ * (C) Copyright 2020 David Bauer
-+ */
-+
-+#include "rk3328-u-boot.dtsi"
-+#include "rk3328-sdram-ddr4-666.dtsi"
-+/ {
-+	chosen {
-+		u-boot,spl-boot-order = "same-as-spl", &sdmmc, &emmc;
-+	};
-+};
-+
-+&gpio0 {
-+	bootph-pre-ram;
-+};
-+
-+&pinctrl {
-+	bootph-pre-ram;
-+};
-+
-+&sdmmc0m1_pin {
-+	bootph-pre-ram;
-+};
-+
-+&pcfg_pull_up_4ma {
-+	bootph-pre-ram;
-+};
-+
-+/* Need this and all the pinctrl/gpio stuff above to set pinmux */
-+&vcc_sd {
-+	bootph-pre-ram;
-+};
-+
-+&gmac2io {
-+	snps,reset-gpio = <&gpio1 RK_PC2 GPIO_ACTIVE_LOW>;
-+	snps,reset-active-low;
-+	snps,reset-delays-us = <0 10000 50000>;
-+};
-+
-+&spi0 {
-+	spi_flash: spiflash@0 {
-+		bootph-all;
-+	};
-+};
---- /dev/null
-+++ b/arch/arm/dts/rk3328-orangepi-r1-plus.dts
-@@ -0,0 +1,373 @@
-+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
-+/*
-+ * Based on rk3328-nanopi-r2s.dts, which is:
-+ *   Copyright (c) 2020 David Bauer <mail@david-bauer.net>
-+ */
-+
-+/dts-v1/;
-+
-+#include <dt-bindings/gpio/gpio.h>
-+#include <dt-bindings/leds/common.h>
-+#include "rk3328.dtsi"
-+
-+/ {
-+	model = "Xunlong Orange Pi R1 Plus";
-+	compatible = "xunlong,orangepi-r1-plus", "rockchip,rk3328";
-+
-+	aliases {
-+		ethernet1 = &rtl8153;
-+		mmc0 = &sdmmc;
-+	};
-+
-+	chosen {
-+		stdout-path = "serial2:1500000n8";
-+	};
-+
-+	gmac_clk: gmac-clock {
-+		compatible = "fixed-clock";
-+		clock-frequency = <125000000>;
-+		clock-output-names = "gmac_clkin";
-+		#clock-cells = <0>;
-+	};
-+
-+	leds {
-+		compatible = "gpio-leds";
-+		pinctrl-0 = <&lan_led_pin>, <&sys_led_pin>, <&wan_led_pin>;
-+		pinctrl-names = "default";
-+
-+		led-0 {
-+			function = LED_FUNCTION_LAN;
-+			color = <LED_COLOR_ID_GREEN>;
-+			gpios = <&gpio2 RK_PB7 GPIO_ACTIVE_HIGH>;
-+		};
-+
-+		led-1 {
-+			function = LED_FUNCTION_STATUS;
-+			color = <LED_COLOR_ID_RED>;
-+			gpios = <&gpio3 RK_PC5 GPIO_ACTIVE_HIGH>;
-+			linux,default-trigger = "heartbeat";
-+		};
-+
-+		led-2 {
-+			function = LED_FUNCTION_WAN;
-+			color = <LED_COLOR_ID_GREEN>;
-+			gpios = <&gpio2 RK_PC2 GPIO_ACTIVE_HIGH>;
-+		};
-+	};
-+
-+	vcc_sd: sdmmc-regulator {
-+		compatible = "regulator-fixed";
-+		gpio = <&gpio0 RK_PD6 GPIO_ACTIVE_LOW>;
-+		pinctrl-0 = <&sdmmc0m1_pin>;
-+		pinctrl-names = "default";
-+		regulator-name = "vcc_sd";
-+		regulator-boot-on;
-+		vin-supply = <&vcc_io>;
-+	};
-+
-+	vcc_sys: vcc-sys-regulator {
-+		compatible = "regulator-fixed";
-+		regulator-name = "vcc_sys";
-+		regulator-always-on;
-+		regulator-boot-on;
-+		regulator-min-microvolt = <5000000>;
-+		regulator-max-microvolt = <5000000>;
-+	};
-+
-+	vdd_5v_lan: vdd-5v-lan-regulator {
-+		compatible = "regulator-fixed";
-+		enable-active-high;
-+		gpio = <&gpio2 RK_PC6 GPIO_ACTIVE_HIGH>;
-+		pinctrl-0 = <&lan_vdd_pin>;
-+		pinctrl-names = "default";
-+		regulator-name = "vdd_5v_lan";
-+		regulator-always-on;
-+		regulator-boot-on;
-+		vin-supply = <&vcc_sys>;
-+	};
-+};
-+
-+&cpu0 {
-+	cpu-supply = <&vdd_arm>;
-+};
-+
-+&cpu1 {
-+	cpu-supply = <&vdd_arm>;
-+};
-+
-+&cpu2 {
-+	cpu-supply = <&vdd_arm>;
-+};
-+
-+&cpu3 {
-+	cpu-supply = <&vdd_arm>;
-+};
-+
-+&display_subsystem {
-+	status = "disabled";
-+};
-+
-+&gmac2io {
-+	assigned-clocks = <&cru SCLK_MAC2IO>, <&cru SCLK_MAC2IO_EXT>;
-+	assigned-clock-parents = <&gmac_clk>, <&gmac_clk>;
-+	clock_in_out = "input";
-+	phy-handle = <&rtl8211e>;
-+	phy-mode = "rgmii";
-+	phy-supply = <&vcc_io>;
-+	pinctrl-0 = <&rgmiim1_pins>;
-+	pinctrl-names = "default";
-+	snps,aal;
-+	rx_delay = <0x18>;
-+	tx_delay = <0x24>;
-+	status = "okay";
-+
-+	mdio {
-+		compatible = "snps,dwmac-mdio";
-+		#address-cells = <1>;
-+		#size-cells = <0>;
-+
-+		rtl8211e: ethernet-phy@1 {
-+			reg = <1>;
-+			pinctrl-0 = <&eth_phy_reset_pin>;
-+			pinctrl-names = "default";
-+			reset-assert-us = <10000>;
-+			reset-deassert-us = <50000>;
-+			reset-gpios = <&gpio1 RK_PC2 GPIO_ACTIVE_LOW>;
-+		};
-+	};
-+};
-+
-+&i2c1 {
-+	status = "okay";
-+
-+	rk805: pmic@18 {
-+		compatible = "rockchip,rk805";
-+		reg = <0x18>;
-+		interrupt-parent = <&gpio1>;
-+		interrupts = <24 IRQ_TYPE_LEVEL_LOW>;
-+		#clock-cells = <1>;
-+		clock-output-names = "xin32k", "rk805-clkout2";
-+		gpio-controller;
-+		#gpio-cells = <2>;
-+		pinctrl-0 = <&pmic_int_l>;
-+		pinctrl-names = "default";
-+		rockchip,system-power-controller;
-+		wakeup-source;
-+
-+		vcc1-supply = <&vcc_sys>;
-+		vcc2-supply = <&vcc_sys>;
-+		vcc3-supply = <&vcc_sys>;
-+		vcc4-supply = <&vcc_sys>;
-+		vcc5-supply = <&vcc_io>;
-+		vcc6-supply = <&vcc_sys>;
-+
-+		regulators {
-+			vdd_log: DCDC_REG1 {
-+				regulator-name = "vdd_log";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <712500>;
-+				regulator-max-microvolt = <1450000>;
-+				regulator-ramp-delay = <12500>;
-+
-+				regulator-state-mem {
-+					regulator-on-in-suspend;
-+					regulator-suspend-microvolt = <1000000>;
-+				};
-+			};
-+
-+			vdd_arm: DCDC_REG2 {
-+				regulator-name = "vdd_arm";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <712500>;
-+				regulator-max-microvolt = <1450000>;
-+				regulator-ramp-delay = <12500>;
-+
-+				regulator-state-mem {
-+					regulator-on-in-suspend;
-+					regulator-suspend-microvolt = <950000>;
-+				};
-+			};
-+
-+			vcc_ddr: DCDC_REG3 {
-+				regulator-name = "vcc_ddr";
-+				regulator-always-on;
-+				regulator-boot-on;
-+
-+				regulator-state-mem {
-+					regulator-on-in-suspend;
-+				};
-+			};
-+
-+			vcc_io: DCDC_REG4 {
-+				regulator-name = "vcc_io";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <3300000>;
-+				regulator-max-microvolt = <3300000>;
-+
-+				regulator-state-mem {
-+					regulator-on-in-suspend;
-+					regulator-suspend-microvolt = <3300000>;
-+				};
-+			};
-+
-+			vcc_18: LDO_REG1 {
-+				regulator-name = "vcc_18";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <1800000>;
-+				regulator-max-microvolt = <1800000>;
-+
-+				regulator-state-mem {
-+					regulator-on-in-suspend;
-+					regulator-suspend-microvolt = <1800000>;
-+				};
-+			};
-+
-+			vcc18_emmc: LDO_REG2 {
-+				regulator-name = "vcc18_emmc";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <1800000>;
-+				regulator-max-microvolt = <1800000>;
-+
-+				regulator-state-mem {
-+					regulator-on-in-suspend;
-+					regulator-suspend-microvolt = <1800000>;
-+				};
-+			};
-+
-+			vdd_10: LDO_REG3 {
-+				regulator-name = "vdd_10";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <1000000>;
-+				regulator-max-microvolt = <1000000>;
-+
-+				regulator-state-mem {
-+					regulator-on-in-suspend;
-+					regulator-suspend-microvolt = <1000000>;
-+				};
-+			};
-+		};
-+	};
-+};
-+
-+&io_domains {
-+	pmuio-supply = <&vcc_io>;
-+	vccio1-supply = <&vcc_io>;
-+	vccio2-supply = <&vcc18_emmc>;
-+	vccio3-supply = <&vcc_io>;
-+	vccio4-supply = <&vcc_io>;
-+	vccio5-supply = <&vcc_io>;
-+	vccio6-supply = <&vcc_io>;
-+	status = "okay";
-+};
-+
-+&pinctrl {
-+	gmac2io {
-+		eth_phy_reset_pin: eth-phy-reset-pin {
-+			rockchip,pins = <1 RK_PC2 RK_FUNC_GPIO &pcfg_pull_down>;
-+		};
-+	};
-+
-+	leds {
-+		lan_led_pin: lan-led-pin {
-+			rockchip,pins = <2 RK_PB7 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+
-+		sys_led_pin: sys-led-pin {
-+			rockchip,pins = <3 RK_PC5 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+
-+		wan_led_pin: wan-led-pin {
-+			rockchip,pins = <2 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+	};
-+
-+	lan {
-+		lan_vdd_pin: lan-vdd-pin {
-+			rockchip,pins = <2 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+	};
-+
-+	pmic {
-+		pmic_int_l: pmic-int-l {
-+			rockchip,pins = <1 RK_PD0 RK_FUNC_GPIO &pcfg_pull_up>;
-+		};
-+	};
-+};
-+
-+&pwm2 {
-+	status = "okay";
-+};
-+
-+&sdmmc {
-+	bus-width = <4>;
-+	cap-sd-highspeed;
-+	disable-wp;
-+	pinctrl-0 = <&sdmmc0_clk>, <&sdmmc0_cmd>, <&sdmmc0_dectn>, <&sdmmc0_bus4>;
-+	pinctrl-names = "default";
-+	vmmc-supply = <&vcc_sd>;
-+	status = "okay";
-+};
-+
-+&spi0 {
-+	status = "okay";
-+
-+	flash@0 {
-+		compatible = "jedec,spi-nor";
-+		reg = <0>;
-+		spi-max-frequency = <50000000>;
-+	};
-+};
-+
-+&tsadc {
-+	rockchip,hw-tshut-mode = <0>;
-+	rockchip,hw-tshut-polarity = <0>;
-+	status = "okay";
-+};
-+
-+&u2phy {
-+	status = "okay";
-+};
-+
-+&u2phy_host {
-+	status = "okay";
-+};
-+
-+&u2phy_otg {
-+	status = "okay";
-+};
-+
-+&uart2 {
-+	status = "okay";
-+};
-+
-+&usb20_otg {
-+	dr_mode = "host";
-+	status = "okay";
-+};
-+
-+&usbdrd3 {
-+	dr_mode = "host";
-+	status = "okay";
-+	#address-cells = <1>;
-+	#size-cells = <0>;
-+
-+	/* Second port is for USB 3.0 */
-+	rtl8153: device@2 {
-+		compatible = "usbbda,8153";
-+		reg = <2>;
-+	};
-+};
-+
-+&usb_host0_ehci {
-+	status = "okay";
-+};
-+
-+&usb_host0_ohci {
-+	status = "okay";
-+};
---- a/board/rockchip/evb_rk3328/MAINTAINERS
-+++ b/board/rockchip/evb_rk3328/MAINTAINERS
-@@ -18,6 +18,12 @@ F:      configs/nanopi-r2s-rk3328_defcon
- F:      arch/arm/dts/rk3328-nanopi-r2s-u-boot.dtsi
- F:      arch/arm/dts/rk3328-nanopi-r2s.dts
- 
-+ORANGEPI-R1-PLUS-RK3328
-+M:      Tianling Shen <cnsztl@gmail.com>
-+S:      Maintained
-+F:      configs/orangepi-r1-plus-rk3328_defconfig
-+F:      arch/arm/dts/rk3328-orangepi-r1-plus-u-boot.dtsi
-+
- ROC-RK3328-CC
- M:      Loic Devulder <ldevulder@suse.com>
- M:      Chen-Yu Tsai <wens@csie.org>
---- /dev/null
-+++ b/configs/orangepi-r1-plus-rk3328_defconfig
-@@ -0,0 +1,114 @@
-+CONFIG_ARM=y
-+CONFIG_SKIP_LOWLEVEL_INIT=y
-+CONFIG_COUNTER_FREQUENCY=24000000
-+CONFIG_ARCH_ROCKCHIP=y
-+CONFIG_TEXT_BASE=0x00200000
-+CONFIG_SPL_GPIO=y
-+CONFIG_NR_DRAM_BANKS=1
-+CONFIG_HAS_CUSTOM_SYS_INIT_SP_ADDR=y
-+CONFIG_CUSTOM_SYS_INIT_SP_ADDR=0x300000
-+CONFIG_ENV_OFFSET=0x3F8000
-+CONFIG_DEFAULT_DEVICE_TREE="rk3328-orangepi-r1-plus"
-+CONFIG_DM_RESET=y
-+CONFIG_ROCKCHIP_RK3328=y
-+CONFIG_TPL_ROCKCHIP_COMMON_BOARD=y
-+CONFIG_TPL_LIBCOMMON_SUPPORT=y
-+CONFIG_TPL_LIBGENERIC_SUPPORT=y
-+CONFIG_SPL_DRIVERS_MISC=y
-+CONFIG_SPL_STACK_R_ADDR=0x600000
-+CONFIG_SPL_STACK=0x400000
-+CONFIG_TPL_SYS_MALLOC_F_LEN=0x800
-+CONFIG_DEBUG_UART_BASE=0xFF130000
-+CONFIG_DEBUG_UART_CLOCK=24000000
-+CONFIG_SYS_LOAD_ADDR=0x800800
-+CONFIG_DEBUG_UART=y
-+# CONFIG_ANDROID_BOOT_IMAGE is not set
-+CONFIG_FIT=y
-+CONFIG_FIT_VERBOSE=y
-+CONFIG_SPL_LOAD_FIT=y
-+CONFIG_DEFAULT_FDT_FILE="rockchip/rk3328-orangepi-r1-plus.dtb"
-+# CONFIG_DISPLAY_CPUINFO is not set
-+CONFIG_DISPLAY_BOARDINFO_LATE=y
-+CONFIG_MISC_INIT_R=y
-+CONFIG_SPL_MAX_SIZE=0x40000
-+CONFIG_SPL_PAD_TO=0x7f8000
-+CONFIG_SPL_HAS_BSS_LINKER_SECTION=y
-+CONFIG_SPL_BSS_START_ADDR=0x2000000
-+CONFIG_SPL_BSS_MAX_SIZE=0x2000
-+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
-+# CONFIG_SPL_SHARES_INIT_SP_ADDR is not set
-+CONFIG_SPL_STACK_R=y
-+CONFIG_SPL_I2C=y
-+CONFIG_SPL_POWER=y
-+CONFIG_SPL_ATF=y
-+CONFIG_SPL_ATF_NO_PLATFORM_PARAM=y
-+CONFIG_TPL_SYS_MALLOC_SIMPLE=y
-+CONFIG_CMD_BOOTZ=y
-+CONFIG_CMD_GPT=y
-+CONFIG_CMD_MMC=y
-+CONFIG_CMD_USB=y
-+# CONFIG_CMD_SETEXPR is not set
-+CONFIG_CMD_TIME=y
-+CONFIG_SPL_OF_CONTROL=y
-+CONFIG_TPL_OF_CONTROL=y
-+CONFIG_OF_SPL_REMOVE_PROPS="clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
-+CONFIG_TPL_OF_PLATDATA=y
-+CONFIG_ENV_IS_IN_MMC=y
-+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
-+CONFIG_SYS_MMC_ENV_DEV=1
-+CONFIG_NET_RANDOM_ETHADDR=y
-+CONFIG_TPL_DM=y
-+CONFIG_REGMAP=y
-+CONFIG_SPL_REGMAP=y
-+CONFIG_TPL_REGMAP=y
-+CONFIG_SYSCON=y
-+CONFIG_SPL_SYSCON=y
-+CONFIG_TPL_SYSCON=y
-+CONFIG_CLK=y
-+CONFIG_SPL_CLK=y
-+CONFIG_FASTBOOT_BUF_ADDR=0x800800
-+CONFIG_FASTBOOT_CMD_OEM_FORMAT=y
-+CONFIG_ROCKCHIP_GPIO=y
-+CONFIG_SYS_I2C_ROCKCHIP=y
-+CONFIG_MMC_DW=y
-+CONFIG_MMC_DW_ROCKCHIP=y
-+CONFIG_SF_DEFAULT_SPEED=20000000
-+CONFIG_SPI_FLASH_GIGADEVICE=y
-+CONFIG_ETH_DESIGNWARE=y
-+CONFIG_GMAC_ROCKCHIP=y
-+CONFIG_PINCTRL=y
-+CONFIG_SPL_PINCTRL=y
-+CONFIG_DM_PMIC=y
-+CONFIG_PMIC_RK8XX=y
-+CONFIG_SPL_PMIC_RK8XX=y
-+CONFIG_SPL_DM_REGULATOR=y
-+CONFIG_REGULATOR_PWM=y
-+CONFIG_DM_REGULATOR_FIXED=y
-+CONFIG_SPL_DM_REGULATOR_FIXED=y
-+CONFIG_REGULATOR_RK8XX=y
-+CONFIG_PWM_ROCKCHIP=y
-+CONFIG_RAM=y
-+CONFIG_SPL_RAM=y
-+CONFIG_TPL_RAM=y
-+CONFIG_BAUDRATE=1500000
-+CONFIG_DEBUG_UART_SHIFT=2
-+CONFIG_SYS_NS16550_MEM32=y
-+CONFIG_ROCKCHIP_SPI=y
-+CONFIG_SYSINFO=y
-+CONFIG_SYSRESET=y
-+# CONFIG_TPL_SYSRESET is not set
-+CONFIG_USB=y
-+CONFIG_USB_XHCI_HCD=y
-+CONFIG_USB_XHCI_DWC3=y
-+CONFIG_USB_EHCI_HCD=y
-+CONFIG_USB_EHCI_GENERIC=y
-+CONFIG_USB_OHCI_HCD=y
-+CONFIG_USB_OHCI_GENERIC=y
-+CONFIG_USB_DWC2=y
-+CONFIG_USB_DWC3=y
-+# CONFIG_USB_DWC3_GADGET is not set
-+CONFIG_USB_GADGET=y
-+CONFIG_USB_GADGET_DWC2_OTG=y
-+CONFIG_SPL_TINY_MEMSET=y
-+CONFIG_TPL_TINY_MEMSET=y
-+CONFIG_ERRNO_STR=y
diff --git a/package/boot/uboot-rockchip/patches/101-rockchip-rk3328-Add-support-for-Orange-Pi-R1-Plus-LT.patch b/package/boot/uboot-rockchip/patches/101-rockchip-rk3328-Add-support-for-Orange-Pi-R1-Plus-LT.patch
deleted file mode 100644
index 56d36c74dc..0000000000
--- a/package/boot/uboot-rockchip/patches/101-rockchip-rk3328-Add-support-for-Orange-Pi-R1-Plus-LT.patch
+++ /dev/null
@@ -1,257 +0,0 @@
-From 408fd4570c0f1e6b1fe3722998394651144f2a29 Mon Sep 17 00:00:00 2001
-From: Tianling Shen <cnsztl@gmail.com>
-Date: Sat, 20 May 2023 18:52:14 +0800
-Subject: [PATCH] rockchip: rk3328: Add support for Orange Pi R1 Plus LTS
-
-The OrangePi R1 Plus LTS is a minor variant of OrangePi R1 Plus with
-the on-board NIC chip changed from rtl8211e to yt8531c, and RAM type
-changed from DDR4 to LPDDR3.
-
-The device tree is taken from kernel v6.4-rc1.
-
-Signed-off-by: Tianling Shen <cnsztl@gmail.com>
----
- arch/arm/dts/Makefile                         |   1 +
- .../rk3328-orangepi-r1-plus-lts-u-boot.dtsi   |  46 +++++++
- arch/arm/dts/rk3328-orangepi-r1-plus-lts.dts  |  40 ++++++
- board/rockchip/evb_rk3328/MAINTAINERS         |   6 +
- configs/orangepi-r1-plus-lts-rk3328_defconfig | 114 ++++++++++++++++++
- 5 files changed, 207 insertions(+)
- create mode 100644 arch/arm/dts/rk3328-orangepi-r1-plus-lts-u-boot.dtsi
- create mode 100644 arch/arm/dts/rk3328-orangepi-r1-plus-lts.dts
- create mode 100644 configs/orangepi-r1-plus-lts-rk3328_defconfig
-
---- a/arch/arm/dts/Makefile
-+++ b/arch/arm/dts/Makefile
-@@ -126,6 +126,7 @@ dtb-$(CONFIG_ROCKCHIP_RK3328) += \
- 	rk3328-nanopi-r2c.dtb \
- 	rk3328-nanopi-r2s.dtb \
- 	rk3328-orangepi-r1-plus.dtb \
-+	rk3328-orangepi-r1-plus-lts.dtb \
- 	rk3328-roc-cc.dtb \
- 	rk3328-rock64.dtb \
- 	rk3328-rock-pi-e.dtb
---- /dev/null
-+++ b/arch/arm/dts/rk3328-orangepi-r1-plus-lts-u-boot.dtsi
-@@ -0,0 +1,46 @@
-+// SPDX-License-Identifier: GPL-2.0-or-later
-+/*
-+ * (C) Copyright 2018-2019 Rockchip Electronics Co., Ltd
-+ * (C) Copyright 2020 David Bauer
-+ */
-+
-+#include "rk3328-u-boot.dtsi"
-+#include "rk3328-sdram-lpddr3-666.dtsi"
-+/ {
-+	chosen {
-+		u-boot,spl-boot-order = "same-as-spl", &sdmmc, &emmc;
-+	};
-+};
-+
-+&gpio0 {
-+	bootph-pre-ram;
-+};
-+
-+&pinctrl {
-+	bootph-pre-ram;
-+};
-+
-+&sdmmc0m1_pin {
-+	bootph-pre-ram;
-+};
-+
-+&pcfg_pull_up_4ma {
-+	bootph-pre-ram;
-+};
-+
-+/* Need this and all the pinctrl/gpio stuff above to set pinmux */
-+&vcc_sd {
-+	bootph-pre-ram;
-+};
-+
-+&gmac2io {
-+	snps,reset-gpio = <&gpio1 RK_PC2 GPIO_ACTIVE_LOW>;
-+	snps,reset-active-low;
-+	snps,reset-delays-us = <0 10000 50000>;
-+};
-+
-+&spi0 {
-+	spi_flash: spiflash@0 {
-+		bootph-all;
-+	};
-+};
---- /dev/null
-+++ b/arch/arm/dts/rk3328-orangepi-r1-plus-lts.dts
-@@ -0,0 +1,40 @@
-+// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
-+/*
-+ * Copyright (c) 2016 Xunlong Software. Co., Ltd.
-+ * (http://www.orangepi.org)
-+ *
-+ * Copyright (c) 2021-2023 Tianling Shen <cnsztl@gmail.com>
-+ */
-+
-+/dts-v1/;
-+#include "rk3328-orangepi-r1-plus.dts"
-+
-+/ {
-+	model = "Xunlong Orange Pi R1 Plus LTS";
-+	compatible = "xunlong,orangepi-r1-plus-lts", "rockchip,rk3328";
-+};
-+
-+&gmac2io {
-+	phy-handle = <&yt8531c>;
-+	tx_delay = <0x19>;
-+	rx_delay = <0x05>;
-+
-+	mdio {
-+		/delete-node/ ethernet-phy@1;
-+
-+		yt8531c: ethernet-phy@0 {
-+			compatible = "ethernet-phy-ieee802.3-c22";
-+			reg = <0>;
-+
-+			motorcomm,clk-out-frequency-hz = <125000000>;
-+			motorcomm,keep-pll-enabled;
-+			motorcomm,auto-sleep-disabled;
-+
-+			pinctrl-0 = <&eth_phy_reset_pin>;
-+			pinctrl-names = "default";
-+			reset-assert-us = <15000>;
-+			reset-deassert-us = <50000>;
-+			reset-gpios = <&gpio1 RK_PC2 GPIO_ACTIVE_LOW>;
-+		};
-+	};
-+};
---- a/board/rockchip/evb_rk3328/MAINTAINERS
-+++ b/board/rockchip/evb_rk3328/MAINTAINERS
-@@ -24,6 +24,12 @@ S:      Maintained
- F:      configs/orangepi-r1-plus-rk3328_defconfig
- F:      arch/arm/dts/rk3328-orangepi-r1-plus-u-boot.dtsi
- 
-+ORANGEPI-R1-PLUS-LTS-RK3328
-+M:      Tianling Shen <cnsztl@gmail.com>
-+S:      Maintained
-+F:      configs/orangepi-r1-plus-lts-rk3328_defconfig
-+F:      arch/arm/dts/rk3328-orangepi-r1-plus-lts-u-boot.dtsi
-+
- ROC-RK3328-CC
- M:      Loic Devulder <ldevulder@suse.com>
- M:      Chen-Yu Tsai <wens@csie.org>
---- /dev/null
-+++ b/configs/orangepi-r1-plus-lts-rk3328_defconfig
-@@ -0,0 +1,114 @@
-+CONFIG_ARM=y
-+CONFIG_SKIP_LOWLEVEL_INIT=y
-+CONFIG_COUNTER_FREQUENCY=24000000
-+CONFIG_ARCH_ROCKCHIP=y
-+CONFIG_TEXT_BASE=0x00200000
-+CONFIG_SPL_GPIO=y
-+CONFIG_NR_DRAM_BANKS=1
-+CONFIG_HAS_CUSTOM_SYS_INIT_SP_ADDR=y
-+CONFIG_CUSTOM_SYS_INIT_SP_ADDR=0x300000
-+CONFIG_ENV_OFFSET=0x3F8000
-+CONFIG_DEFAULT_DEVICE_TREE="rk3328-orangepi-r1-plus-lts"
-+CONFIG_DM_RESET=y
-+CONFIG_ROCKCHIP_RK3328=y
-+CONFIG_TPL_ROCKCHIP_COMMON_BOARD=y
-+CONFIG_TPL_LIBCOMMON_SUPPORT=y
-+CONFIG_TPL_LIBGENERIC_SUPPORT=y
-+CONFIG_SPL_DRIVERS_MISC=y
-+CONFIG_SPL_STACK_R_ADDR=0x600000
-+CONFIG_SPL_STACK=0x400000
-+CONFIG_TPL_SYS_MALLOC_F_LEN=0x800
-+CONFIG_DEBUG_UART_BASE=0xFF130000
-+CONFIG_DEBUG_UART_CLOCK=24000000
-+CONFIG_SYS_LOAD_ADDR=0x800800
-+CONFIG_DEBUG_UART=y
-+# CONFIG_ANDROID_BOOT_IMAGE is not set
-+CONFIG_FIT=y
-+CONFIG_FIT_VERBOSE=y
-+CONFIG_SPL_LOAD_FIT=y
-+CONFIG_DEFAULT_FDT_FILE="rockchip/rk3328-orangepi-r1-plus-lts.dtb"
-+# CONFIG_DISPLAY_CPUINFO is not set
-+CONFIG_DISPLAY_BOARDINFO_LATE=y
-+CONFIG_MISC_INIT_R=y
-+CONFIG_SPL_MAX_SIZE=0x40000
-+CONFIG_SPL_PAD_TO=0x7f8000
-+CONFIG_SPL_HAS_BSS_LINKER_SECTION=y
-+CONFIG_SPL_BSS_START_ADDR=0x2000000
-+CONFIG_SPL_BSS_MAX_SIZE=0x2000
-+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
-+# CONFIG_SPL_SHARES_INIT_SP_ADDR is not set
-+CONFIG_SPL_STACK_R=y
-+CONFIG_SPL_I2C=y
-+CONFIG_SPL_POWER=y
-+CONFIG_SPL_ATF=y
-+CONFIG_SPL_ATF_NO_PLATFORM_PARAM=y
-+CONFIG_TPL_SYS_MALLOC_SIMPLE=y
-+CONFIG_CMD_BOOTZ=y
-+CONFIG_CMD_GPT=y
-+CONFIG_CMD_MMC=y
-+CONFIG_CMD_USB=y
-+# CONFIG_CMD_SETEXPR is not set
-+CONFIG_CMD_TIME=y
-+CONFIG_SPL_OF_CONTROL=y
-+CONFIG_TPL_OF_CONTROL=y
-+CONFIG_OF_SPL_REMOVE_PROPS="clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
-+CONFIG_TPL_OF_PLATDATA=y
-+CONFIG_ENV_IS_IN_MMC=y
-+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
-+CONFIG_SYS_MMC_ENV_DEV=1
-+CONFIG_NET_RANDOM_ETHADDR=y
-+CONFIG_TPL_DM=y
-+CONFIG_REGMAP=y
-+CONFIG_SPL_REGMAP=y
-+CONFIG_TPL_REGMAP=y
-+CONFIG_SYSCON=y
-+CONFIG_SPL_SYSCON=y
-+CONFIG_TPL_SYSCON=y
-+CONFIG_CLK=y
-+CONFIG_SPL_CLK=y
-+CONFIG_FASTBOOT_BUF_ADDR=0x800800
-+CONFIG_FASTBOOT_CMD_OEM_FORMAT=y
-+CONFIG_ROCKCHIP_GPIO=y
-+CONFIG_SYS_I2C_ROCKCHIP=y
-+CONFIG_MMC_DW=y
-+CONFIG_MMC_DW_ROCKCHIP=y
-+CONFIG_SF_DEFAULT_SPEED=20000000
-+CONFIG_SPI_FLASH_GIGADEVICE=y
-+CONFIG_ETH_DESIGNWARE=y
-+CONFIG_GMAC_ROCKCHIP=y
-+CONFIG_PINCTRL=y
-+CONFIG_SPL_PINCTRL=y
-+CONFIG_DM_PMIC=y
-+CONFIG_PMIC_RK8XX=y
-+CONFIG_SPL_PMIC_RK8XX=y
-+CONFIG_SPL_DM_REGULATOR=y
-+CONFIG_REGULATOR_PWM=y
-+CONFIG_DM_REGULATOR_FIXED=y
-+CONFIG_SPL_DM_REGULATOR_FIXED=y
-+CONFIG_REGULATOR_RK8XX=y
-+CONFIG_PWM_ROCKCHIP=y
-+CONFIG_RAM=y
-+CONFIG_SPL_RAM=y
-+CONFIG_TPL_RAM=y
-+CONFIG_BAUDRATE=1500000
-+CONFIG_DEBUG_UART_SHIFT=2
-+CONFIG_SYS_NS16550_MEM32=y
-+CONFIG_ROCKCHIP_SPI=y
-+CONFIG_SYSINFO=y
-+CONFIG_SYSRESET=y
-+# CONFIG_TPL_SYSRESET is not set
-+CONFIG_USB=y
-+CONFIG_USB_XHCI_HCD=y
-+CONFIG_USB_XHCI_DWC3=y
-+CONFIG_USB_EHCI_HCD=y
-+CONFIG_USB_EHCI_GENERIC=y
-+CONFIG_USB_OHCI_HCD=y
-+CONFIG_USB_OHCI_GENERIC=y
-+CONFIG_USB_DWC2=y
-+CONFIG_USB_DWC3=y
-+# CONFIG_USB_DWC3_GADGET is not set
-+CONFIG_USB_GADGET=y
-+CONFIG_USB_GADGET_DWC2_OTG=y
-+CONFIG_SPL_TINY_MEMSET=y
-+CONFIG_TPL_TINY_MEMSET=y
-+CONFIG_ERRNO_STR=y
diff --git a/package/boot/uboot-rockchip/patches/103-rockchip-rk3568-Add-support-for-FriendlyARM-NanoPi-R.patch b/package/boot/uboot-rockchip/patches/103-rockchip-rk3568-Add-support-for-FriendlyARM-NanoPi-R.patch
deleted file mode 100644
index 09cafb3227..0000000000
--- a/package/boot/uboot-rockchip/patches/103-rockchip-rk3568-Add-support-for-FriendlyARM-NanoPi-R.patch
+++ /dev/null
@@ -1,917 +0,0 @@
-From c84214aab0e4c5b2f619dd89655f27b3ae40e82b Mon Sep 17 00:00:00 2001
-From: Tianling Shen <cnsztl@gmail.com>
-Date: Tue, 30 May 2023 15:00:33 +0800
-Subject: [PATCH] rockchip: rk3568: Add support for FriendlyARM NanoPi R5S
-
-FriendlyARM NanoPi R5S is an open-sourced mini IoT gateway device.
-
-Board Specifications
-- Rockchip RK3568
-- 2 or 4GB LPDDR4X
-- 8GB or 16GB eMMC, SD card slot
-- GbE LAN (Native)
-- 2x 2.5G LAN (PCIe)
-- M.2 Connector
-- HDMI 2.0, MIPI DSI/CSI
-- 2xUSB 3.0 Host
-- USB Type C PD, 5V/9V/12V
-- GPIO: 12-pin 0.5mm FPC connector
-
-The device tree is taken from kernel v6.4-rc1.
-
-Reviewed-by: Kever Yang <kever.yang@rock-chips.com>
-Signed-off-by: Tianling Shen <cnsztl@gmail.com>
----
- arch/arm/dts/Makefile                      |   1 +
- arch/arm/dts/rk3568-nanopi-r5s-u-boot.dtsi |  31 ++
- arch/arm/dts/rk3568-nanopi-r5s.dts         | 136 +++++
- arch/arm/dts/rk3568-nanopi-r5s.dtsi        | 590 +++++++++++++++++++++
- board/rockchip/evb_rk3568/MAINTAINERS      |   8 +
- configs/nanopi-r5s-rk3568_defconfig        |  85 +++
- 6 files changed, 851 insertions(+)
- create mode 100644 arch/arm/dts/rk3568-nanopi-r5s-u-boot.dtsi
- create mode 100644 arch/arm/dts/rk3568-nanopi-r5s.dts
- create mode 100644 arch/arm/dts/rk3568-nanopi-r5s.dtsi
- create mode 100644 configs/nanopi-r5s-rk3568_defconfig
-
---- a/arch/arm/dts/Makefile
-+++ b/arch/arm/dts/Makefile
-@@ -171,6 +171,7 @@ dtb-$(CONFIG_ROCKCHIP_RK3568) += \
- 	rk3566-anbernic-rgxx3.dtb \
- 	rk3566-radxa-cm3-io.dtb \
- 	rk3568-evb.dtb \
-+	rk3568-nanopi-r5s.dtb \
- 	rk3568-rock-3a.dtb
- 
- dtb-$(CONFIG_ROCKCHIP_RK3588) += \
---- /dev/null
-+++ b/arch/arm/dts/rk3568-nanopi-r5s-u-boot.dtsi
-@@ -0,0 +1,31 @@
-+// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
-+/*
-+ * Copyright (c) 2022 FriendlyElec Computer Tech. Co., Ltd.
-+ * (http://www.friendlyelec.com)
-+ *
-+ * Copyright (c) 2023 Tianling Shen <cnsztl@gmail.com>
-+ */
-+
-+#include "rk356x-u-boot.dtsi"
-+
-+/ {
-+	chosen {
-+		stdout-path = &uart2;
-+		u-boot,spl-boot-order = "same-as-spl", &sdmmc0, &sdhci;
-+	};
-+};
-+
-+&sdhci {
-+	cap-mmc-highspeed;
-+	mmc-ddr-1_8v;
-+	mmc-hs200-1_8v;
-+	mmc-hs400-1_8v;
-+	mmc-hs400-enhanced-strobe;
-+	pinctrl-0 = <&emmc_bus8 &emmc_clk &emmc_cmd &emmc_datastrobe>;
-+};
-+
-+&uart2 {
-+	clock-frequency = <24000000>;
-+	bootph-all;
-+	status = "okay";
-+};
---- /dev/null
-+++ b/arch/arm/dts/rk3568-nanopi-r5s.dts
-@@ -0,0 +1,136 @@
-+// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
-+/*
-+ * Copyright (c) 2022 FriendlyElec Computer Tech. Co., Ltd.
-+ * (http://www.friendlyelec.com)
-+ *
-+ * Copyright (c) 2023 Tianling Shen <cnsztl@gmail.com>
-+ */
-+
-+/dts-v1/;
-+#include "rk3568-nanopi-r5s.dtsi"
-+
-+/ {
-+	model = "FriendlyElec NanoPi R5S";
-+	compatible = "friendlyarm,nanopi-r5s", "rockchip,rk3568";
-+
-+	aliases {
-+		ethernet0 = &gmac0;
-+	};
-+
-+	gpio-leds {
-+		compatible = "gpio-leds";
-+		pinctrl-names = "default";
-+		pinctrl-0 = <&lan1_led_pin>, <&lan2_led_pin>, <&power_led_pin>, <&wan_led_pin>;
-+
-+		led-lan1 {
-+			color = <LED_COLOR_ID_GREEN>;
-+			function = LED_FUNCTION_LAN;
-+			function-enumerator = <1>;
-+			gpios = <&gpio3 RK_PD6 GPIO_ACTIVE_HIGH>;
-+		};
-+
-+		led-lan2 {
-+			color = <LED_COLOR_ID_GREEN>;
-+			function = LED_FUNCTION_LAN;
-+			function-enumerator = <2>;
-+			gpios = <&gpio3 RK_PD7 GPIO_ACTIVE_HIGH>;
-+		};
-+
-+		power_led: led-power {
-+			color = <LED_COLOR_ID_RED>;
-+			function = LED_FUNCTION_POWER;
-+			linux,default-trigger = "heartbeat";
-+			gpios = <&gpio4 RK_PD2 GPIO_ACTIVE_HIGH>;
-+		};
-+
-+		led-wan {
-+			color = <LED_COLOR_ID_GREEN>;
-+			function = LED_FUNCTION_WAN;
-+			gpios = <&gpio2 RK_PC1 GPIO_ACTIVE_HIGH>;
-+		};
-+	};
-+};
-+
-+&gmac0 {
-+	assigned-clocks = <&cru SCLK_GMAC0_RX_TX>, <&cru SCLK_GMAC0>;
-+	assigned-clock-parents = <&cru SCLK_GMAC0_RGMII_SPEED>, <&cru CLK_MAC0_2TOP>;
-+	assigned-clock-rates = <0>, <125000000>;
-+	clock_in_out = "output";
-+	phy-handle = <&rgmii_phy0>;
-+	phy-mode = "rgmii";
-+	pinctrl-names = "default";
-+	pinctrl-0 = <&gmac0_miim
-+		     &gmac0_tx_bus2
-+		     &gmac0_rx_bus2
-+		     &gmac0_rgmii_clk
-+		     &gmac0_rgmii_bus>;
-+	snps,reset-gpio = <&gpio0 RK_PC5 GPIO_ACTIVE_LOW>;
-+	snps,reset-active-low;
-+	/* Reset time is 15ms, 50ms for rtl8211f */
-+	snps,reset-delays-us = <0 15000 50000>;
-+	tx_delay = <0x3c>;
-+	rx_delay = <0x2f>;
-+	status = "okay";
-+};
-+
-+&mdio0 {
-+	rgmii_phy0: ethernet-phy@1 {
-+		compatible = "ethernet-phy-ieee802.3-c22";
-+		reg = <1>;
-+		pinctrl-0 = <&eth_phy0_reset_pin>;
-+		pinctrl-names = "default";
-+	};
-+};
-+
-+&pcie2x1 {
-+	num-lanes = <1>;
-+	reset-gpios = <&gpio0 RK_PB6 GPIO_ACTIVE_HIGH>;
-+	status = "okay";
-+};
-+
-+&pcie30phy {
-+	data-lanes = <1 2>;
-+	status = "okay";
-+};
-+
-+&pcie3x1 {
-+	num-lanes = <1>;
-+	reset-gpios = <&gpio0 RK_PA0 GPIO_ACTIVE_HIGH>;
-+	vpcie3v3-supply = <&vcc3v3_pcie>;
-+	status = "okay";
-+};
-+
-+&pcie3x2 {
-+	num-lanes = <1>;
-+	num-ib-windows = <8>;
-+	num-ob-windows = <8>;
-+	reset-gpios = <&gpio2 RK_PD6 GPIO_ACTIVE_HIGH>;
-+	vpcie3v3-supply = <&vcc3v3_pcie>;
-+	status = "okay";
-+};
-+
-+&pinctrl {
-+	gmac0 {
-+		eth_phy0_reset_pin: eth-phy0-reset-pin {
-+			rockchip,pins = <0 RK_PC4 RK_FUNC_GPIO &pcfg_pull_up>;
-+		};
-+	};
-+
-+	gpio-leds {
-+		lan1_led_pin: lan1-led-pin {
-+			rockchip,pins = <3 RK_PD6 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+
-+		lan2_led_pin: lan2-led-pin {
-+			rockchip,pins = <3 RK_PD7 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+
-+		power_led_pin: power-led-pin {
-+			rockchip,pins = <4 RK_PD2 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+
-+		wan_led_pin: wan-led-pin {
-+			rockchip,pins = <2 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+	};
-+};
---- /dev/null
-+++ b/arch/arm/dts/rk3568-nanopi-r5s.dtsi
-@@ -0,0 +1,590 @@
-+// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
-+/*
-+ * Copyright (c) 2022 FriendlyElec Computer Tech. Co., Ltd.
-+ * (http://www.friendlyelec.com)
-+ *
-+ * Copyright (c) 2023 Tianling Shen <cnsztl@gmail.com>
-+ */
-+
-+/dts-v1/;
-+#include <dt-bindings/gpio/gpio.h>
-+#include <dt-bindings/input/input.h>
-+#include <dt-bindings/leds/common.h>
-+#include <dt-bindings/pinctrl/rockchip.h>
-+#include <dt-bindings/soc/rockchip,vop2.h>
-+#include "rk3568.dtsi"
-+
-+/ {
-+	aliases {
-+		mmc0 = &sdmmc0;
-+		mmc1 = &sdhci;
-+	};
-+
-+	chosen: chosen {
-+		stdout-path = "serial2:1500000n8";
-+	};
-+
-+	hdmi-con {
-+		compatible = "hdmi-connector";
-+		type = "a";
-+
-+		port {
-+			hdmi_con_in: endpoint {
-+				remote-endpoint = <&hdmi_out_con>;
-+			};
-+		};
-+	};
-+
-+	vdd_usbc: vdd-usbc-regulator {
-+		compatible = "regulator-fixed";
-+		regulator-name = "vdd_usbc";
-+		regulator-always-on;
-+		regulator-boot-on;
-+		regulator-min-microvolt = <5000000>;
-+		regulator-max-microvolt = <5000000>;
-+	};
-+
-+	vcc3v3_sys: vcc3v3-sys-regulator {
-+		compatible = "regulator-fixed";
-+		regulator-name = "vcc3v3_sys";
-+		regulator-always-on;
-+		regulator-boot-on;
-+		regulator-min-microvolt = <3300000>;
-+		regulator-max-microvolt = <3300000>;
-+		vin-supply = <&vdd_usbc>;
-+	};
-+
-+	vcc5v0_sys: vcc5v0-sys-regulator {
-+		compatible = "regulator-fixed";
-+		regulator-name = "vcc5v0_sys";
-+		regulator-always-on;
-+		regulator-boot-on;
-+		regulator-min-microvolt = <5000000>;
-+		regulator-max-microvolt = <5000000>;
-+		vin-supply = <&vdd_usbc>;
-+	};
-+
-+	vcc3v3_pcie: vcc3v3-pcie-regulator {
-+		compatible = "regulator-fixed";
-+		regulator-name = "vcc3v3_pcie";
-+		regulator-min-microvolt = <3300000>;
-+		regulator-max-microvolt = <3300000>;
-+		enable-active-high;
-+		gpios = <&gpio0 RK_PD4 GPIO_ACTIVE_HIGH>;
-+		startup-delay-us = <200000>;
-+		vin-supply = <&vcc5v0_sys>;
-+	};
-+
-+	vcc5v0_usb: vcc5v0-usb-regulator {
-+		compatible = "regulator-fixed";
-+		regulator-name = "vcc5v0_usb";
-+		regulator-always-on;
-+		regulator-boot-on;
-+		regulator-min-microvolt = <5000000>;
-+		regulator-max-microvolt = <5000000>;
-+		vin-supply = <&vdd_usbc>;
-+	};
-+
-+	vcc5v0_usb_host: vcc5v0-usb-host-regulator {
-+		compatible = "regulator-fixed";
-+		enable-active-high;
-+		gpio = <&gpio0 RK_PA6 GPIO_ACTIVE_HIGH>;
-+		pinctrl-names = "default";
-+		pinctrl-0 = <&vcc5v0_usb_host_en>;
-+		regulator-name = "vcc5v0_usb_host";
-+		regulator-always-on;
-+		regulator-boot-on;
-+		regulator-min-microvolt = <5000000>;
-+		regulator-max-microvolt = <5000000>;
-+		vin-supply = <&vcc5v0_usb>;
-+	};
-+
-+	vcc5v0_usb_otg: vcc5v0-usb-otg-regulator {
-+		compatible = "regulator-fixed";
-+		enable-active-high;
-+		gpio = <&gpio0 RK_PA5 GPIO_ACTIVE_HIGH>;
-+		pinctrl-names = "default";
-+		pinctrl-0 = <&vcc5v0_usb_otg_en>;
-+		regulator-name = "vcc5v0_usb_otg";
-+		regulator-min-microvolt = <5000000>;
-+		regulator-max-microvolt = <5000000>;
-+		vin-supply = <&vcc5v0_usb>;
-+	};
-+
-+	pcie30_avdd0v9: pcie30-avdd0v9-regulator {
-+		compatible = "regulator-fixed";
-+		regulator-name = "pcie30_avdd0v9";
-+		regulator-always-on;
-+		regulator-boot-on;
-+		regulator-min-microvolt = <900000>;
-+		regulator-max-microvolt = <900000>;
-+		vin-supply = <&vcc3v3_sys>;
-+	};
-+
-+	pcie30_avdd1v8: pcie30-avdd1v8-regulator {
-+		compatible = "regulator-fixed";
-+		regulator-name = "pcie30_avdd1v8";
-+		regulator-always-on;
-+		regulator-boot-on;
-+		regulator-min-microvolt = <1800000>;
-+		regulator-max-microvolt = <1800000>;
-+		vin-supply = <&vcc3v3_sys>;
-+	};
-+};
-+
-+&combphy0 {
-+	status = "okay";
-+};
-+
-+&combphy1 {
-+	status = "okay";
-+};
-+
-+&combphy2 {
-+	status = "okay";
-+};
-+
-+&cpu0 {
-+	cpu-supply = <&vdd_cpu>;
-+};
-+
-+&cpu1 {
-+	cpu-supply = <&vdd_cpu>;
-+};
-+
-+&cpu2 {
-+	cpu-supply = <&vdd_cpu>;
-+};
-+
-+&cpu3 {
-+	cpu-supply = <&vdd_cpu>;
-+};
-+
-+&gpu {
-+	mali-supply = <&vdd_gpu>;
-+	status = "okay";
-+};
-+
-+&hdmi {
-+	avdd-0v9-supply = <&vdda0v9_image>;
-+	avdd-1v8-supply = <&vcca1v8_image>;
-+	status = "okay";
-+};
-+
-+&hdmi_in {
-+	hdmi_in_vp0: endpoint {
-+		remote-endpoint = <&vp0_out_hdmi>;
-+	};
-+};
-+
-+&hdmi_out {
-+	hdmi_out_con: endpoint {
-+		remote-endpoint = <&hdmi_con_in>;
-+	};
-+};
-+
-+&hdmi_sound {
-+	status = "okay";
-+};
-+
-+&i2c0 {
-+	status = "okay";
-+
-+	vdd_cpu: regulator@1c {
-+		compatible = "tcs,tcs4525";
-+		reg = <0x1c>;
-+		fcs,suspend-voltage-selector = <1>;
-+		regulator-name = "vdd_cpu";
-+		regulator-always-on;
-+		regulator-boot-on;
-+		regulator-min-microvolt = <800000>;
-+		regulator-max-microvolt = <1150000>;
-+		regulator-ramp-delay = <2300>;
-+		vin-supply = <&vcc5v0_sys>;
-+
-+		regulator-state-mem {
-+			regulator-off-in-suspend;
-+		};
-+	};
-+
-+	rk809: pmic@20 {
-+		compatible = "rockchip,rk809";
-+		reg = <0x20>;
-+		interrupt-parent = <&gpio0>;
-+		interrupts = <RK_PA3 IRQ_TYPE_LEVEL_LOW>;
-+		#clock-cells = <1>;
-+		pinctrl-names = "default";
-+		pinctrl-0 = <&pmic_int>;
-+		rockchip,system-power-controller;
-+		vcc1-supply = <&vcc3v3_sys>;
-+		vcc2-supply = <&vcc3v3_sys>;
-+		vcc3-supply = <&vcc3v3_sys>;
-+		vcc4-supply = <&vcc3v3_sys>;
-+		vcc5-supply = <&vcc3v3_sys>;
-+		vcc6-supply = <&vcc3v3_sys>;
-+		vcc7-supply = <&vcc3v3_sys>;
-+		vcc8-supply = <&vcc3v3_sys>;
-+		vcc9-supply = <&vcc3v3_sys>;
-+		wakeup-source;
-+
-+		regulators {
-+			vdd_logic: DCDC_REG1 {
-+				regulator-name = "vdd_logic";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-init-microvolt = <900000>;
-+				regulator-initial-mode = <0x2>;
-+				regulator-min-microvolt = <500000>;
-+				regulator-max-microvolt = <1350000>;
-+				regulator-ramp-delay = <6001>;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+
-+			vdd_gpu: DCDC_REG2 {
-+				regulator-name = "vdd_gpu";
-+				regulator-always-on;
-+				regulator-init-microvolt = <900000>;
-+				regulator-initial-mode = <0x2>;
-+				regulator-min-microvolt = <500000>;
-+				regulator-max-microvolt = <1350000>;
-+				regulator-ramp-delay = <6001>;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+
-+			vcc_ddr: DCDC_REG3 {
-+				regulator-name = "vcc_ddr";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-initial-mode = <0x2>;
-+
-+				regulator-state-mem {
-+					regulator-on-in-suspend;
-+				};
-+			};
-+
-+			vdd_npu: DCDC_REG4 {
-+				regulator-name = "vdd_npu";
-+				regulator-init-microvolt = <900000>;
-+				regulator-initial-mode = <0x2>;
-+				regulator-min-microvolt = <500000>;
-+				regulator-max-microvolt = <1350000>;
-+				regulator-ramp-delay = <6001>;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+
-+			vcc_1v8: DCDC_REG5 {
-+				regulator-name = "vcc_1v8";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <1800000>;
-+				regulator-max-microvolt = <1800000>;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+
-+			vdda0v9_image: LDO_REG1 {
-+				regulator-name = "vdda0v9_image";
-+				regulator-min-microvolt = <950000>;
-+				regulator-max-microvolt = <950000>;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+
-+			vdda_0v9: LDO_REG2 {
-+				regulator-name = "vdda_0v9";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <900000>;
-+				regulator-max-microvolt = <900000>;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+
-+			vdda0v9_pmu: LDO_REG3 {
-+				regulator-name = "vdda0v9_pmu";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <900000>;
-+				regulator-max-microvolt = <900000>;
-+
-+				regulator-state-mem {
-+					regulator-on-in-suspend;
-+					regulator-suspend-microvolt = <900000>;
-+				};
-+			};
-+
-+			vccio_acodec: LDO_REG4 {
-+				regulator-name = "vccio_acodec";
-+				regulator-min-microvolt = <3300000>;
-+				regulator-max-microvolt = <3300000>;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+
-+			vccio_sd: LDO_REG5 {
-+				regulator-name = "vccio_sd";
-+				regulator-min-microvolt = <1800000>;
-+				regulator-max-microvolt = <3300000>;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+
-+			vcc3v3_pmu: LDO_REG6 {
-+				regulator-name = "vcc3v3_pmu";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <3300000>;
-+				regulator-max-microvolt = <3300000>;
-+
-+				regulator-state-mem {
-+					regulator-on-in-suspend;
-+					regulator-suspend-microvolt = <3300000>;
-+				};
-+			};
-+
-+			vcca_1v8: LDO_REG7 {
-+				regulator-name = "vcca_1v8";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <1800000>;
-+				regulator-max-microvolt = <1800000>;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+
-+			vcca1v8_pmu: LDO_REG8 {
-+				regulator-name = "vcca1v8_pmu";
-+				regulator-always-on;
-+				regulator-boot-on;
-+				regulator-min-microvolt = <1800000>;
-+				regulator-max-microvolt = <1800000>;
-+
-+				regulator-state-mem {
-+					regulator-on-in-suspend;
-+					regulator-suspend-microvolt = <1800000>;
-+				};
-+			};
-+
-+			vcca1v8_image: LDO_REG9 {
-+				regulator-name = "vcca1v8_image";
-+				regulator-min-microvolt = <1800000>;
-+				regulator-max-microvolt = <1800000>;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+
-+			vcc_3v3: SWITCH_REG1 {
-+				regulator-name = "vcc_3v3";
-+				regulator-always-on;
-+				regulator-boot-on;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+
-+			vcc3v3_sd: SWITCH_REG2 {
-+				regulator-name = "vcc3v3_sd";
-+				regulator-always-on;
-+				regulator-boot-on;
-+
-+				regulator-state-mem {
-+					regulator-off-in-suspend;
-+				};
-+			};
-+		};
-+
-+	};
-+};
-+
-+&i2c5 {
-+	status = "okay";
-+
-+	hym8563: rtc@51 {
-+		compatible = "haoyu,hym8563";
-+		reg = <0x51>;
-+		interrupt-parent = <&gpio0>;
-+		interrupts = <RK_PD3 IRQ_TYPE_LEVEL_LOW>;
-+		#clock-cells = <0>;
-+		clock-output-names = "rtcic_32kout";
-+		pinctrl-names = "default";
-+		pinctrl-0 = <&hym8563_int>;
-+		wakeup-source;
-+	};
-+};
-+
-+&i2s0_8ch {
-+	status = "okay";
-+};
-+
-+&pcie30phy {
-+	data-lanes = <1 2>;
-+	status = "okay";
-+};
-+
-+&pinctrl {
-+	hym8563 {
-+		hym8563_int: hym8563-int {
-+			rockchip,pins = <0 RK_PD3 RK_FUNC_GPIO &pcfg_pull_up>;
-+		};
-+	};
-+
-+	pmic {
-+		pmic_int: pmic-int {
-+			rockchip,pins = <0 RK_PA3 RK_FUNC_GPIO &pcfg_pull_up>;
-+		};
-+	};
-+
-+	usb {
-+		vcc5v0_usb_host_en: vcc5v0-usb-host-en {
-+			rockchip,pins = <0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+
-+		vcc5v0_usb_otg_en: vcc5v0-usb-otg-en {
-+			rockchip,pins = <0 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+	};
-+};
-+
-+&pmu_io_domains {
-+	pmuio1-supply = <&vcc3v3_pmu>;
-+	pmuio2-supply = <&vcc3v3_pmu>;
-+	vccio1-supply = <&vccio_acodec>;
-+	vccio3-supply = <&vccio_sd>;
-+	vccio4-supply = <&vcc_1v8>;
-+	vccio5-supply = <&vcc_3v3>;
-+	vccio6-supply = <&vcc_1v8>;
-+	vccio7-supply = <&vcc_3v3>;
-+	status = "okay";
-+};
-+
-+&saradc {
-+	vref-supply = <&vcca_1v8>;
-+	status = "okay";
-+};
-+
-+&sdhci {
-+	bus-width = <8>;
-+	max-frequency = <200000000>;
-+	non-removable;
-+	pinctrl-names = "default";
-+	pinctrl-0 = <&emmc_bus8 &emmc_clk &emmc_cmd>;
-+	status = "okay";
-+};
-+
-+&sdmmc0 {
-+	max-frequency = <150000000>;
-+	no-sdio;
-+	no-mmc;
-+	bus-width = <4>;
-+	cap-mmc-highspeed;
-+	cap-sd-highspeed;
-+	disable-wp;
-+	vmmc-supply = <&vcc3v3_sd>;
-+	vqmmc-supply = <&vccio_sd>;
-+	pinctrl-names = "default";
-+	pinctrl-0 = <&sdmmc0_bus4 &sdmmc0_clk &sdmmc0_cmd &sdmmc0_det>;
-+	status = "okay";
-+};
-+
-+&tsadc {
-+	rockchip,hw-tshut-mode = <1>;
-+	rockchip,hw-tshut-polarity = <0>;
-+	status = "okay";
-+};
-+
-+&uart2 {
-+	status = "okay";
-+};
-+
-+&usb_host0_ehci {
-+	status = "okay";
-+};
-+
-+&usb_host0_ohci {
-+	status = "okay";
-+};
-+
-+&usb_host0_xhci {
-+	extcon = <&usb2phy0>;
-+	dr_mode = "host";
-+	status = "okay";
-+};
-+
-+&usb_host1_ehci {
-+	status = "okay";
-+};
-+
-+&usb_host1_ohci {
-+	status = "okay";
-+};
-+
-+&usb_host1_xhci {
-+	status = "okay";
-+};
-+
-+&usb2phy0 {
-+	status = "okay";
-+};
-+
-+&usb2phy0_host {
-+	phy-supply = <&vcc5v0_usb_host>;
-+	status = "okay";
-+};
-+
-+&usb2phy0_otg {
-+	status = "okay";
-+};
-+
-+&usb2phy1 {
-+	status = "okay";
-+};
-+
-+&usb2phy1_host {
-+	phy-supply = <&vcc5v0_usb_otg>;
-+	status = "okay";
-+};
-+
-+&usb2phy1_otg {
-+	status = "okay";
-+};
-+
-+&vop {
-+	assigned-clocks = <&cru DCLK_VOP0>, <&cru DCLK_VOP1>;
-+	assigned-clock-parents = <&pmucru PLL_HPLL>, <&cru PLL_VPLL>;
-+	status = "okay";
-+};
-+
-+&vop_mmu {
-+	status = "okay";
-+};
-+
-+&vp0 {
-+	vp0_out_hdmi: endpoint@ROCKCHIP_VOP2_EP_HDMI0 {
-+		reg = <ROCKCHIP_VOP2_EP_HDMI0>;
-+		remote-endpoint = <&hdmi_in_vp0>;
-+	};
-+};
---- a/board/rockchip/evb_rk3568/MAINTAINERS
-+++ b/board/rockchip/evb_rk3568/MAINTAINERS
-@@ -7,6 +7,14 @@ F:      configs/evb-rk3568_defconfig
- F:	arch/arm/dts/rk3568-evb-boot.dtsi
- F:	arch/arm/dts/rk3568-evb.dts
- 
-+NANOPI-R5S
-+M:      Tianling Shen <cnsztl@gmail.com>
-+S:      Maintained
-+F:      configs/nanopi-r5s-rk3568_defconfig
-+F:      arch/arm/dts/rk3568-nanopi-r5s.dts
-+F:      arch/arm/dts/rk3568-nanopi-r5s.dtsi
-+F:      arch/arm/dts/rk3568-nanopi-r5s-u-boot.dtsi
-+
- RADXA-CM3
- M:	Jagan Teki <jagan@amarulasolutions.com>
- S:	Maintained
---- /dev/null
-+++ b/configs/nanopi-r5s-rk3568_defconfig
-@@ -0,0 +1,85 @@
-+CONFIG_ARM=y
-+CONFIG_SKIP_LOWLEVEL_INIT=y
-+CONFIG_COUNTER_FREQUENCY=24000000
-+CONFIG_ARCH_ROCKCHIP=y
-+CONFIG_TEXT_BASE=0x00a00000
-+CONFIG_SPL_LIBCOMMON_SUPPORT=y
-+CONFIG_SPL_LIBGENERIC_SUPPORT=y
-+CONFIG_NR_DRAM_BANKS=2
-+CONFIG_HAS_CUSTOM_SYS_INIT_SP_ADDR=y
-+CONFIG_CUSTOM_SYS_INIT_SP_ADDR=0xc00000
-+CONFIG_DEFAULT_DEVICE_TREE="rk3568-nanopi-r5s"
-+CONFIG_ROCKCHIP_RK3568=y
-+CONFIG_SPL_ROCKCHIP_COMMON_BOARD=y
-+CONFIG_SPL_SERIAL=y
-+CONFIG_SPL_STACK_R_ADDR=0x600000
-+CONFIG_TARGET_EVB_RK3568=y
-+CONFIG_SPL_STACK=0x400000
-+CONFIG_DEBUG_UART_BASE=0xFE660000
-+CONFIG_DEBUG_UART_CLOCK=24000000
-+CONFIG_SYS_LOAD_ADDR=0xc00800
-+CONFIG_DEBUG_UART=y
-+CONFIG_FIT=y
-+CONFIG_FIT_VERBOSE=y
-+CONFIG_SPL_LOAD_FIT=y
-+CONFIG_DEFAULT_FDT_FILE="rockchip/rk3568-nanopi-r5s.dtb"
-+# CONFIG_DISPLAY_CPUINFO is not set
-+CONFIG_DISPLAY_BOARDINFO_LATE=y
-+CONFIG_SPL_MAX_SIZE=0x40000
-+CONFIG_SPL_PAD_TO=0x7f8000
-+CONFIG_SPL_HAS_BSS_LINKER_SECTION=y
-+CONFIG_SPL_BSS_START_ADDR=0x4000000
-+CONFIG_SPL_BSS_MAX_SIZE=0x4000
-+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
-+# CONFIG_SPL_SHARES_INIT_SP_ADDR is not set
-+CONFIG_SPL_STACK_R=y
-+CONFIG_SPL_ATF=y
-+CONFIG_CMD_GPIO=y
-+CONFIG_CMD_GPT=y
-+CONFIG_CMD_I2C=y
-+CONFIG_CMD_MMC=y
-+CONFIG_CMD_USB=y
-+CONFIG_CMD_PMIC=y
-+CONFIG_CMD_REGULATOR=y
-+# CONFIG_SPL_DOS_PARTITION is not set
-+CONFIG_SPL_OF_CONTROL=y
-+CONFIG_OF_LIVE=y
-+CONFIG_OF_SPL_REMOVE_PROPS="pinctrl-0 pinctrl-names clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
-+CONFIG_SPL_DM_WARN=y
-+CONFIG_SPL_REGMAP=y
-+CONFIG_SPL_SYSCON=y
-+CONFIG_SPL_CLK=y
-+CONFIG_ROCKCHIP_GPIO=y
-+CONFIG_SYS_I2C_ROCKCHIP=y
-+CONFIG_MISC=y
-+CONFIG_SUPPORT_EMMC_RPMB=y
-+CONFIG_MMC_DW=y
-+CONFIG_MMC_DW_ROCKCHIP=y
-+CONFIG_MMC_SDHCI=y
-+CONFIG_MMC_SDHCI_SDMA=y
-+CONFIG_MMC_SDHCI_ROCKCHIP=y
-+CONFIG_ETH_DESIGNWARE=y
-+CONFIG_GMAC_ROCKCHIP=y
-+CONFIG_PHY_ROCKCHIP_INNO_USB2=y
-+CONFIG_PHY_ROCKCHIP_NANENG_COMBOPHY=y
-+CONFIG_POWER_DOMAIN=y
-+CONFIG_DM_PMIC=y
-+CONFIG_PMIC_RK8XX=y
-+CONFIG_SPL_DM_REGULATOR_FIXED=y
-+CONFIG_REGULATOR_RK8XX=y
-+CONFIG_PWM_ROCKCHIP=y
-+CONFIG_SPL_RAM=y
-+CONFIG_BAUDRATE=1500000
-+CONFIG_DEBUG_UART_SHIFT=2
-+CONFIG_SYS_NS16550_MEM32=y
-+CONFIG_SYSRESET=y
-+CONFIG_SYSRESET_PSCI=y
-+CONFIG_USB=y
-+CONFIG_USB_XHCI_HCD=y
-+CONFIG_USB_XHCI_DWC3=y
-+CONFIG_USB_EHCI_HCD=y
-+CONFIG_USB_EHCI_GENERIC=y
-+CONFIG_USB_OHCI_HCD=y
-+CONFIG_USB_OHCI_GENERIC=y
-+CONFIG_USB_DWC3=y
-+CONFIG_ERRNO_STR=y
diff --git a/package/boot/uboot-rockchip/patches/104-rockchip-rk3568-Add-support-for-FriendlyARM-NanoPi-R.patch b/package/boot/uboot-rockchip/patches/104-rockchip-rk3568-Add-support-for-FriendlyARM-NanoPi-R.patch
deleted file mode 100644
index d1a5197e7d..0000000000
--- a/package/boot/uboot-rockchip/patches/104-rockchip-rk3568-Add-support-for-FriendlyARM-NanoPi-R.patch
+++ /dev/null
@@ -1,269 +0,0 @@
-From 41538742491c46100f570680c02fbdd0d2b6b880 Mon Sep 17 00:00:00 2001
-From: Tianling Shen <cnsztl@gmail.com>
-Date: Tue, 30 May 2023 15:00:33 +0800
-Subject: [PATCH] rockchip: rk3568: Add support for FriendlyARM NanoPi R5C
-
-FriendlyARM NanoPi R5C is an open-sourced mini IoT gateway device.
-
-Specification:
-- Rockchip RK3568
-- 1/4GB LPDDR4X RAM
-- 8/32GB eMMC
-- SD card slot
-- M.2 Connector
-- 2x USB 3.0 Port
-- 2x 2500 Base-T (PCIe, r8125)
-- HDMI 2.0
-- MIPI DSI/CSI
-- USB Type C 5V
-
-The device tree is taken from kernel v6.4-rc1.
-
-Reviewed-by: Kever Yang <kever.yang@rock-chips.com>
-Signed-off-by: Tianling Shen <cnsztl@gmail.com>
----
- arch/arm/dts/Makefile                      |   1 +
- arch/arm/dts/rk3568-nanopi-r5c-u-boot.dtsi |   3 +
- arch/arm/dts/rk3568-nanopi-r5c.dts         | 112 +++++++++++++++++++++
- board/rockchip/evb_rk3568/MAINTAINERS      |   7 ++
- configs/nanopi-r5c-rk3568_defconfig        |  85 ++++++++++++++++
- 5 files changed, 208 insertions(+)
- create mode 100644 arch/arm/dts/rk3568-nanopi-r5c-u-boot.dtsi
- create mode 100644 arch/arm/dts/rk3568-nanopi-r5c.dts
- create mode 100644 configs/nanopi-r5c-rk3568_defconfig
-
---- a/arch/arm/dts/Makefile
-+++ b/arch/arm/dts/Makefile
-@@ -171,6 +171,7 @@ dtb-$(CONFIG_ROCKCHIP_RK3568) += \
- 	rk3566-anbernic-rgxx3.dtb \
- 	rk3566-radxa-cm3-io.dtb \
- 	rk3568-evb.dtb \
-+	rk3568-nanopi-r5c.dtb \
- 	rk3568-nanopi-r5s.dtb \
- 	rk3568-rock-3a.dtb
- 
---- /dev/null
-+++ b/arch/arm/dts/rk3568-nanopi-r5c-u-boot.dtsi
-@@ -0,0 +1,3 @@
-+// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
-+
-+#include "rk3568-nanopi-r5s-u-boot.dtsi"
---- /dev/null
-+++ b/arch/arm/dts/rk3568-nanopi-r5c.dts
-@@ -0,0 +1,112 @@
-+// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
-+/*
-+ * Copyright (c) 2022 FriendlyElec Computer Tech. Co., Ltd.
-+ * (http://www.friendlyelec.com)
-+ *
-+ * Copyright (c) 2023 Tianling Shen <cnsztl@gmail.com>
-+ */
-+
-+/dts-v1/;
-+#include "rk3568-nanopi-r5s.dtsi"
-+
-+/ {
-+	model = "FriendlyElec NanoPi R5C";
-+	compatible = "friendlyarm,nanopi-r5c", "rockchip,rk3568";
-+
-+	gpio-keys {
-+		compatible = "gpio-keys";
-+		pinctrl-names = "default";
-+		pinctrl-0 = <&reset_button_pin>;
-+
-+		button-reset {
-+			debounce-interval = <50>;
-+			gpios = <&gpio0 RK_PB7 GPIO_ACTIVE_LOW>;
-+			label = "reset";
-+			linux,code = <KEY_RESTART>;
-+		};
-+	};
-+
-+	gpio-leds {
-+		compatible = "gpio-leds";
-+		pinctrl-names = "default";
-+		pinctrl-0 = <&lan_led_pin>, <&power_led_pin>, <&wan_led_pin>, <&wlan_led_pin>;
-+
-+		led-lan {
-+			color = <LED_COLOR_ID_GREEN>;
-+			function = LED_FUNCTION_LAN;
-+			gpios = <&gpio3 RK_PA3 GPIO_ACTIVE_HIGH>;
-+		};
-+
-+		power_led: led-power {
-+			color = <LED_COLOR_ID_RED>;
-+			function = LED_FUNCTION_POWER;
-+			linux,default-trigger = "heartbeat";
-+			gpios = <&gpio3 RK_PA2 GPIO_ACTIVE_HIGH>;
-+		};
-+
-+		led-wan {
-+			color = <LED_COLOR_ID_GREEN>;
-+			function = LED_FUNCTION_WAN;
-+			gpios = <&gpio3 RK_PA4 GPIO_ACTIVE_HIGH>;
-+		};
-+
-+		led-wlan {
-+			color = <LED_COLOR_ID_GREEN>;
-+			function = LED_FUNCTION_WLAN;
-+			gpios = <&gpio3 RK_PA5 GPIO_ACTIVE_HIGH>;
-+		};
-+	};
-+};
-+
-+&pcie2x1 {
-+	pinctrl-names = "default";
-+	pinctrl-0 = <&pcie20_reset_pin>;
-+	reset-gpios = <&gpio3 RK_PC1 GPIO_ACTIVE_HIGH>;
-+	status = "okay";
-+};
-+
-+&pcie3x1 {
-+	num-lanes = <1>;
-+	reset-gpios = <&gpio0 RK_PA0 GPIO_ACTIVE_HIGH>;
-+	vpcie3v3-supply = <&vcc3v3_pcie>;
-+	status = "okay";
-+};
-+
-+&pcie3x2 {
-+	num-lanes = <1>;
-+	reset-gpios = <&gpio0 RK_PB6 GPIO_ACTIVE_HIGH>;
-+	vpcie3v3-supply = <&vcc3v3_pcie>;
-+	status = "okay";
-+};
-+
-+&pinctrl {
-+	gpio-leds {
-+		lan_led_pin: lan-led-pin {
-+			rockchip,pins = <3 RK_PA3 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+
-+		power_led_pin: power-led-pin {
-+			rockchip,pins = <3 RK_PA2 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+
-+		wan_led_pin: wan-led-pin {
-+			rockchip,pins = <3 RK_PA4 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+
-+		wlan_led_pin: wlan-led-pin {
-+			rockchip,pins = <3 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>;
-+		};
-+	};
-+
-+	pcie {
-+		pcie20_reset_pin: pcie20-reset-pin {
-+			rockchip,pins = <2 RK_PD2 RK_FUNC_GPIO &pcfg_pull_up>;
-+		};
-+	};
-+
-+	rockchip-key {
-+		reset_button_pin: reset-button-pin {
-+			rockchip,pins = <4 RK_PA0 RK_FUNC_GPIO &pcfg_pull_up>;
-+		};
-+	};
-+};
---- a/board/rockchip/evb_rk3568/MAINTAINERS
-+++ b/board/rockchip/evb_rk3568/MAINTAINERS
-@@ -7,6 +7,13 @@ F:      configs/evb-rk3568_defconfig
- F:	arch/arm/dts/rk3568-evb-boot.dtsi
- F:	arch/arm/dts/rk3568-evb.dts
- 
-+NANOPI-R5C
-+M:      Tianling Shen <cnsztl@gmail.com>
-+S:      Maintained
-+F:      configs/nanopi-r5c-rk3568_defconfig
-+F:      arch/arm/dts/rk3568-nanopi-r5c.dts
-+F:      arch/arm/dts/rk3568-nanopi-r5c-u-boot.dtsi
-+
- NANOPI-R5S
- M:      Tianling Shen <cnsztl@gmail.com>
- S:      Maintained
---- /dev/null
-+++ b/configs/nanopi-r5c-rk3568_defconfig
-@@ -0,0 +1,85 @@
-+CONFIG_ARM=y
-+CONFIG_SKIP_LOWLEVEL_INIT=y
-+CONFIG_COUNTER_FREQUENCY=24000000
-+CONFIG_ARCH_ROCKCHIP=y
-+CONFIG_TEXT_BASE=0x00a00000
-+CONFIG_SPL_LIBCOMMON_SUPPORT=y
-+CONFIG_SPL_LIBGENERIC_SUPPORT=y
-+CONFIG_NR_DRAM_BANKS=2
-+CONFIG_HAS_CUSTOM_SYS_INIT_SP_ADDR=y
-+CONFIG_CUSTOM_SYS_INIT_SP_ADDR=0xc00000
-+CONFIG_DEFAULT_DEVICE_TREE="rk3568-nanopi-r5c"
-+CONFIG_ROCKCHIP_RK3568=y
-+CONFIG_SPL_ROCKCHIP_COMMON_BOARD=y
-+CONFIG_SPL_SERIAL=y
-+CONFIG_SPL_STACK_R_ADDR=0x600000
-+CONFIG_TARGET_EVB_RK3568=y
-+CONFIG_SPL_STACK=0x400000
-+CONFIG_DEBUG_UART_BASE=0xFE660000
-+CONFIG_DEBUG_UART_CLOCK=24000000
-+CONFIG_SYS_LOAD_ADDR=0xc00800
-+CONFIG_DEBUG_UART=y
-+CONFIG_FIT=y
-+CONFIG_FIT_VERBOSE=y
-+CONFIG_SPL_LOAD_FIT=y
-+CONFIG_DEFAULT_FDT_FILE="rockchip/rk3568-nanopi-r5c.dtb"
-+# CONFIG_DISPLAY_CPUINFO is not set
-+CONFIG_DISPLAY_BOARDINFO_LATE=y
-+CONFIG_SPL_MAX_SIZE=0x40000
-+CONFIG_SPL_PAD_TO=0x7f8000
-+CONFIG_SPL_HAS_BSS_LINKER_SECTION=y
-+CONFIG_SPL_BSS_START_ADDR=0x4000000
-+CONFIG_SPL_BSS_MAX_SIZE=0x4000
-+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
-+# CONFIG_SPL_SHARES_INIT_SP_ADDR is not set
-+CONFIG_SPL_STACK_R=y
-+CONFIG_SPL_ATF=y
-+CONFIG_CMD_GPIO=y
-+CONFIG_CMD_GPT=y
-+CONFIG_CMD_I2C=y
-+CONFIG_CMD_MMC=y
-+CONFIG_CMD_USB=y
-+CONFIG_CMD_PMIC=y
-+CONFIG_CMD_REGULATOR=y
-+# CONFIG_SPL_DOS_PARTITION is not set
-+CONFIG_SPL_OF_CONTROL=y
-+CONFIG_OF_LIVE=y
-+CONFIG_OF_SPL_REMOVE_PROPS="pinctrl-0 pinctrl-names clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
-+CONFIG_SPL_DM_WARN=y
-+CONFIG_SPL_REGMAP=y
-+CONFIG_SPL_SYSCON=y
-+CONFIG_SPL_CLK=y
-+CONFIG_ROCKCHIP_GPIO=y
-+CONFIG_SYS_I2C_ROCKCHIP=y
-+CONFIG_MISC=y
-+CONFIG_SUPPORT_EMMC_RPMB=y
-+CONFIG_MMC_DW=y
-+CONFIG_MMC_DW_ROCKCHIP=y
-+CONFIG_MMC_SDHCI=y
-+CONFIG_MMC_SDHCI_SDMA=y
-+CONFIG_MMC_SDHCI_ROCKCHIP=y
-+CONFIG_ETH_DESIGNWARE=y
-+CONFIG_GMAC_ROCKCHIP=y
-+CONFIG_PHY_ROCKCHIP_INNO_USB2=y
-+CONFIG_PHY_ROCKCHIP_NANENG_COMBOPHY=y
-+CONFIG_POWER_DOMAIN=y
-+CONFIG_DM_PMIC=y
-+CONFIG_PMIC_RK8XX=y
-+CONFIG_SPL_DM_REGULATOR_FIXED=y
-+CONFIG_REGULATOR_RK8XX=y
-+CONFIG_PWM_ROCKCHIP=y
-+CONFIG_SPL_RAM=y
-+CONFIG_BAUDRATE=1500000
-+CONFIG_DEBUG_UART_SHIFT=2
-+CONFIG_SYS_NS16550_MEM32=y
-+CONFIG_SYSRESET=y
-+CONFIG_SYSRESET_PSCI=y
-+CONFIG_USB=y
-+CONFIG_USB_XHCI_HCD=y
-+CONFIG_USB_XHCI_DWC3=y
-+CONFIG_USB_EHCI_HCD=y
-+CONFIG_USB_EHCI_GENERIC=y
-+CONFIG_USB_OHCI_HCD=y
-+CONFIG_USB_OHCI_GENERIC=y
-+CONFIG_USB_DWC3=y
-+CONFIG_ERRNO_STR=y
diff --git a/package/boot/uboot-rockchip/patches/105-nanopc-t4-fix-memory-unstability.patch b/package/boot/uboot-rockchip/patches/105-nanopc-t4-fix-memory-unstability.patch
deleted file mode 100644
index 7d2161ae42..0000000000
--- a/package/boot/uboot-rockchip/patches/105-nanopc-t4-fix-memory-unstability.patch
+++ /dev/null
@@ -1,24 +0,0 @@
-From 445502bc21ecf1b5120faee785cea578b810c759 Mon Sep 17 00:00:00 2001
-From: Lu jicong <jiconglu58@gmail.com>
-Date: Wed, 5 Jul 2023 17:13:55 +0800
-Subject: [PATCH] rockchip: rk3399: nanopc-t4: use 1600MHz sdram config
-
-Current 1866MHz sdram config is too high for NanoPC-T4.
-On this frequency, its lpddr3 sdram becomes unstable,
-causing memtest failures and random kernel crashes.
-
-Signed-off-by: Lu jicong <jiconglu58@gmail.com>
----
- arch/arm/dts/rk3399-nanopc-t4-u-boot.dtsi | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-diff --git a/arch/arm/dts/rk3399-nanopc-t4-u-boot.dtsi b/arch/arm/dts/rk3399-nanopc-t4-u-boot.dtsi
-index 17201bcf41..8b6c9059ab 100644
---- a/arch/arm/dts/rk3399-nanopc-t4-u-boot.dtsi
-+++ b/arch/arm/dts/rk3399-nanopc-t4-u-boot.dtsi
-@@ -4,4 +4,4 @@
-  */
- 
- #include "rk3399-nanopi4-u-boot.dtsi"
--#include "rk3399-sdram-lpddr3-samsung-4GB-1866.dtsi"
-+#include "rk3399-sdram-lpddr3-4GB-1600.dtsi"
diff --git a/package/boot/uboot-rockchip/patches/106-uboot-rockchip-add-nanopi-r6c.patch b/package/boot/uboot-rockchip/patches/106-uboot-rockchip-add-nanopi-r6c.patch
new file mode 100644
index 0000000000..e54b88848c
--- /dev/null
+++ b/package/boot/uboot-rockchip/patches/106-uboot-rockchip-add-nanopi-r6c.patch
@@ -0,0 +1,442 @@
+From 64e26c0cf06fa59285fdd4593ef01d3294506170 Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Thu, 20 Apr 2023 14:24:36 -0400
+Subject: [PATCH] uboot: rockchip: add nanopi r6c
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ arch/arm/dts/Makefile                         |  1 +
+ arch/arm/dts/rk3588-nanopi-r6c-u-boot.dtsi    | 22 ++++++
+ arch/arm/dts/rk3588-nanopi-r6c.dts            | 45 ++++++++++++
+ arch/arm/mach-rockchip/rk3588/Kconfig         |  7 ++
+ board/friendlyelec/nanopi-r6c-rk3588/Kconfig  | 15 ++++
+ board/friendlyelec/nanopi-r6c-rk3588/Makefile |  4 ++
+ .../nanopi-r6c-rk3588/nanopi-r6c-rk3588.c     |  4 ++
+ configs/nanopi-r5c-rk3588_defconfig           | 72 +++++++++++++++++++
+ include/configs/nanopi-r6c-rk3588.h           | 15 ++++
+ 9 files changed, 185 insertions(+)
+ create mode 100644 arch/arm/dts/rk3588-nanopi-r6c-u-boot.dtsi
+ create mode 100644 arch/arm/dts/rk3588-nanopi-r6c.dts
+ create mode 100644 board/friendlyelec/nanopi-r6c-rk3588/Kconfig
+ create mode 100644 board/friendlyelec/nanopi-r6c-rk3588/Makefile
+ create mode 100644 board/friendlyelec/nanopi-r6c-rk3588/nanopi-r6c-rk3588.c
+ create mode 100644 configs/nanopi-r6c-rk3588_defconfig
+ create mode 100644 include/configs/nanopi-r6c-rk3588.h
+
+--- a/arch/arm/dts/Makefile
++++ b/arch/arm/dts/Makefile
+@@ -196,6 +196,7 @@ dtb-$(CONFIG_ROCKCHIP_RK3588) += \
+ 	rk3588s-orangepi-5.dtb \
+ 	rk3588-orangepi-5-plus.dtb \
+ 	rk3588s-rock-5a.dtb \
++	rk3588-nanopi-r6c.dtb \
+ 	rk3588-rock-5b.dtb
+ 
+ dtb-$(CONFIG_ROCKCHIP_RV1108) += \
+--- /dev/null
++++ b/arch/arm/dts/rk3588-nanopi-r6c-u-boot.dtsi
+@@ -0,0 +1,178 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++#include "rk3588-u-boot.dtsi"
++#include <dt-bindings/pinctrl/rockchip.h>
++#include <dt-bindings/input/input.h>
++#include <dt-bindings/gpio/gpio.h>
++
++/ {
++	aliases {
++		mmc0 = &sdhci;
++		mmc1 = &sdmmc;
++	};
++
++	chosen {
++		u-boot,spl-boot-order = "same-as-spl", &sdmmc, &sdhci;
++	};
++
++	vcc5v0_host: vcc5v0-host-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_host";
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++		enable-active-high;
++		gpio = <&gpio4 RK_PB5 GPIO_ACTIVE_HIGH>;
++		pinctrl-names = "default";
++		pinctrl-0 = <&vcc5v0_host_en>;
++		vin-supply = <&vcc5v0_sys>;
++	};
++};
++
++&combphy0_ps {
++	status = "okay";
++};
++
++&emmc_bus8 {
++	bootph-all;
++};
++
++&emmc_clk {
++	bootph-all;
++};
++
++&emmc_cmd {
++	bootph-all;
++};
++
++&emmc_data_strobe {
++	bootph-all;
++};
++
++&emmc_rstnout {
++	bootph-all;
++};
++
++&fspim2_pins {
++	bootph-all;
++};
++
++&pcie2x1l2 {
++	pinctrl-names = "default";
++	pinctrl-0 = <&pcie2x1l2_pins &pcie_reset_h>;
++	reset-gpios = <&gpio3 RK_PD1 GPIO_ACTIVE_HIGH>;
++	status = "okay";
++};
++
++&pinctrl {
++	bootph-all;
++
++	pcie {
++		pcie_reset_h: pcie-reset-h {
++			rockchip,pins = <3 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++
++		pcie2x1l2_pins: pcie2x1l2-pins {
++			rockchip,pins = <3 RK_PC7 4 &pcfg_pull_none>,
++					<3 RK_PD0 4 &pcfg_pull_none>;
++		};
++	};
++
++	usb {
++		vcc5v0_host_en: vcc5v0-host-en {
++			rockchip,pins = <4 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
++		};
++	};
++};
++
++&pcfg_pull_none {
++	bootph-all;
++};
++
++&pcfg_pull_up_drv_level_2 {
++	bootph-all;
++};
++
++&pcfg_pull_up {
++	bootph-all;
++};
++
++&sdmmc {
++	bus-width = <4>;
++	status = "okay";
++};
++
++&sdmmc_bus4 {
++	bootph-all;
++};
++
++&sdmmc_clk {
++	bootph-all;
++};
++
++&sdmmc_cmd {
++	bootph-all;
++};
++
++&sdmmc_det {
++	bootph-all;
++};
++
++&sdhci {
++	cap-mmc-highspeed;
++	mmc-ddr-1_8v;
++	mmc-hs200-1_8v;
++	pinctrl-names = "default";
++	pinctrl-0 = <&emmc_bus8 &emmc_clk &emmc_cmd &emmc_data_strobe &emmc_rstnout>;
++};
++
++&usb_host0_ehci {
++	companion = <&usb_host0_ohci>;
++	phys = <&u2phy2_host>;
++	phy-names = "usb2-phy";
++	status = "okay";
++};
++
++&usb_host0_ohci {
++	phys = <&u2phy2_host>;
++	phy-names = "usb2-phy";
++	status = "okay";
++};
++
++&usb2phy2_grf {
++	status = "okay";
++};
++
++&u2phy2 {
++	status = "okay";
++};
++
++&u2phy2_host {
++	phy-supply = <&vcc5v0_host>;
++	status = "okay";
++};
++
++&usb_host1_ehci {
++	companion = <&usb_host1_ohci>;
++	phys = <&u2phy3_host>;
++	phy-names = "usb2-phy";
++	status = "okay";
++};
++
++&usb_host1_ohci {
++	phys = <&u2phy3_host>;
++	phy-names = "usb2-phy";
++	status = "okay";
++};
++
++&usb2phy3_grf {
++	status = "okay";
++};
++
++&u2phy3 {
++	status = "okay";
++};
++
++&u2phy3_host {
++	phy-supply = <&vcc5v0_host>;
++	status = "okay";
++};
+--- /dev/null
++++ b/arch/arm/dts/rk3588-nanopi-r6c.dts
+@@ -0,0 +1,45 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++
++/dts-v1/;
++
++#include "rk3588.dtsi"
++
++/ {
++	model = "FriendlyElec NanoPi R6C";
++	compatible = "friendlyelec,nanopi-r6c", "rockchip,rk3588";
++
++	aliases {
++		mmc0 = &sdhci;
++		mmc1 = &sdmmc;
++		serial2 = &uart2;
++	};
++
++	chosen {
++		stdout-path = "serial2:1500000n8";
++	};
++
++	vcc5v0_sys: vcc5v0-sys-regulator {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_sys";
++		regulator-always-on;
++		regulator-boot-on;
++		regulator-min-microvolt = <5000000>;
++		regulator-max-microvolt = <5000000>;
++	};
++};
++
++&sdhci {
++	bus-width = <8>;
++	no-sdio;
++	no-sd;
++	non-removable;
++	max-frequency = <200000000>;
++	mmc-hs400-1_8v;
++	mmc-hs400-enhanced-strobe;
++	status = "okay";
++};
++
++&uart2 {
++	pinctrl-0 = <&uart2m0_xfer>;
++	status = "okay";
++};
+--- a/arch/arm/mach-rockchip/rk3588/Kconfig
++++ b/arch/arm/mach-rockchip/rk3588/Kconfig
+@@ -100,6 +100,12 @@ config TARGET_ROCK5A_RK3588
+ 	  USB PD over USB Type-C
+ 	  Size: 85mm x 56mm (Raspberry Pi 4 form factor)
+ 
++config TARGET_NANOPI_R6C_RK3588
++	bool "NanoPi R6C board"
++	select BOARD_LATE_INIT
++	help
++	  FriendlyElec NANOPI-R6C is a Rockchip RK3588 based SBC (Single Board Computer)
++
+ config TARGET_ROCK5B_RK3588
+ 	bool "Radxa ROCK5B RK3588 board"
+ 	select BOARD_LATE_INIT
+@@ -140,6 +146,7 @@ config SYS_MALLOC_F_LEN
+ source board/edgeble/neural-compute-module-6/Kconfig
+ source board/friendlyelec/nanopc-t6-rk3588/Kconfig
+ source board/rockchip/evb_rk3588/Kconfig
++source board/friendlyelec/nanopi-r6c-rk3588/Kconfig
+ source board/radxa/rock5a-rk3588s/Kconfig
+ source board/radxa/rock5b-rk3588/Kconfig
+ 
+--- /dev/null
++++ b/board/friendlyelec/nanopi-r6c-rk3588/Kconfig
+@@ -0,0 +1,15 @@
++if TARGET_NANOPI_R6C_RK3588
++
++config SYS_BOARD
++	default "nanopi-r6c-rk3588"
++
++config SYS_VENDOR
++	default "friendlyelec"
++
++config SYS_CONFIG_NAME
++	default "nanopi-r6c-rk3588"
++
++config BOARD_SPECIFIC_OPTIONS # dummy
++	def_bool y
++
++endif
+--- /dev/null
++++ b/board/friendlyelec/nanopi-r6c-rk3588/Makefile
+@@ -0,0 +1,4 @@
++# SPDX-License-Identifier:     GPL-2.0+
++#
++
++obj-y	+= nanopi-r6c-rk3588.o
+--- /dev/null
++++ b/board/friendlyelec/nanopi-r6c-rk3588/nanopi-r6c-rk3588.c
+@@ -0,0 +1,4 @@
++ // SPDX-License-Identifier: GPL-2.0+
++/*
++ *
++ */
+--- /dev/null
++++ b/configs/nanopi-r6c-rk3588_defconfig
+@@ -0,0 +1,102 @@
++CONFIG_ARM=y
++CONFIG_SKIP_LOWLEVEL_INIT=y
++CONFIG_SYS_HAS_NONCACHED_MEMORY=y
++CONFIG_COUNTER_FREQUENCY=24000000
++CONFIG_ARCH_ROCKCHIP=y
++CONFIG_TEXT_BASE=0x00a00000
++CONFIG_SPL_LIBCOMMON_SUPPORT=y
++CONFIG_SPL_LIBGENERIC_SUPPORT=y
++CONFIG_NR_DRAM_BANKS=2
++CONFIG_HAS_CUSTOM_SYS_INIT_SP_ADDR=y
++CONFIG_CUSTOM_SYS_INIT_SP_ADDR=0xc00000
++CONFIG_DEFAULT_DEVICE_TREE="rk3588-nanopi-r6c"
++CONFIG_DM_RESET=y
++CONFIG_ROCKCHIP_RK3588=y
++CONFIG_SPL_ROCKCHIP_BACK_TO_BROM=y
++CONFIG_SPL_ROCKCHIP_COMMON_BOARD=y
++CONFIG_SPL_MMC=y
++CONFIG_ROCKCHIP_SPI_IMAGE=y
++CONFIG_SPL_SERIAL=y
++CONFIG_SPL_STACK_R_ADDR=0x600000
++CONFIG_TARGET_NANOPI_R6C_RK3588=y
++CONFIG_SPL_STACK=0x400000
++CONFIG_DEBUG_UART_BASE=0xFEB50000
++CONFIG_DEBUG_UART_CLOCK=24000000
++CONFIG_SPL_SPI_FLASH_SUPPORT=y
++CONFIG_SPL_SPI=y
++CONFIG_SYS_LOAD_ADDR=0xc00800
++CONFIG_DEBUG_UART=y
++CONFIG_FIT=y
++CONFIG_FIT_VERBOSE=y
++CONFIG_SPL_LOAD_FIT=y
++CONFIG_DEFAULT_FDT_FILE="rockchip/rk3588-nanopi-r6c.dtb"
++# CONFIG_DISPLAY_CPUINFO is not set
++CONFIG_DISPLAY_BOARDINFO_LATE=y
++CONFIG_SPL_MAX_SIZE=0x20000
++CONFIG_SPL_PAD_TO=0x7f8000
++CONFIG_SPL_HAS_BSS_LINKER_SECTION=y
++CONFIG_SPL_BSS_START_ADDR=0x4000000
++CONFIG_SPL_BSS_MAX_SIZE=0x4000
++# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
++# CONFIG_SPL_SHARES_INIT_SP_ADDR is not set
++CONFIG_SPL_STACK_R=y
++CONFIG_SPL_SPI_LOAD=y
++CONFIG_SYS_SPI_U_BOOT_OFFS=0x80000
++CONFIG_SPL_ATF=y
++CONFIG_CMD_GPIO=y
++CONFIG_CMD_GPT=y
++CONFIG_CMD_MMC=y
++CONFIG_CMD_PCI=y
++CONFIG_CMD_SPI=y
++CONFIG_CMD_USB=y
++# CONFIG_CMD_SETEXPR is not set
++CONFIG_CMD_REGULATOR=y
++# CONFIG_SPL_DOS_PARTITION is not set
++CONFIG_SPL_OF_CONTROL=y
++CONFIG_OF_LIVE=y
++CONFIG_NET_RANDOM_ETHADDR=y
++CONFIG_SPL_REGMAP=y
++CONFIG_SPL_SYSCON=y
++CONFIG_SPL_CLK=y
++CONFIG_ROCKCHIP_GPIO=y
++CONFIG_SYS_I2C_ROCKCHIP=y
++CONFIG_MISC=y
++CONFIG_SUPPORT_EMMC_RPMB=y
++CONFIG_MMC_DW=y
++CONFIG_MMC_DW_ROCKCHIP=y
++CONFIG_MMC_SDHCI=y
++CONFIG_MMC_SDHCI_SDMA=y
++# CONFIG_SPL_MMC_SDHCI_SDMA is not set
++CONFIG_MMC_SDHCI_ROCKCHIP=y
++CONFIG_SPI_FLASH_MACRONIX=y
++CONFIG_ETH_DESIGNWARE=y
++CONFIG_RTL8169=y
++CONFIG_GMAC_ROCKCHIP=y
++CONFIG_PCI=y
++CONFIG_PCIE_DW_ROCKCHIP=y
++CONFIG_PHY_ROCKCHIP_INNO_USB2=y
++CONFIG_PHY_ROCKCHIP_NANENG_COMBOPHY=y
++CONFIG_SPL_PINCTRL=y
++CONFIG_REGULATOR_PWM=y
++CONFIG_DM_REGULATOR_FIXED=y
++CONFIG_PWM_ROCKCHIP=y
++CONFIG_SPL_RAM=y
++CONFIG_BAUDRATE=1500000
++CONFIG_DEBUG_UART_SHIFT=2
++CONFIG_ROCKCHIP_SFC=y
++CONFIG_SYSRESET=y
++CONFIG_USB=y
++CONFIG_USB_EHCI_HCD=y
++CONFIG_USB_EHCI_GENERIC=y
++CONFIG_USB_OHCI_HCD=y
++CONFIG_USB_OHCI_GENERIC=y
++CONFIG_USB_HOST_ETHER=y
++CONFIG_USB_ETHER_ASIX=y
++CONFIG_USB_ETHER_ASIX88179=y
++CONFIG_USB_ETHER_LAN75XX=y
++CONFIG_USB_ETHER_LAN78XX=y
++CONFIG_USB_ETHER_MCS7830=y
++CONFIG_USB_ETHER_RTL8152=y
++CONFIG_USB_ETHER_SMSC95XX=y
++# CONFIG_BINMAN_FDT is not set
++CONFIG_ERRNO_STR=y
+--- /dev/null
++++ b/include/configs/nanopi-r6c-rk3588.h
+@@ -0,0 +1,15 @@
++/* SPDX-License-Identifier: GPL-2.0+ */
++/*
++ * Copyright (c) 2023
++ */
++
++#ifndef __NANOPI_R6C_RK3588_H
++#define __NANOPI_R6C_RK3588_H
++
++#define ROCKCHIP_DEVICE_SETTINGS \
++		"stdout=serial,vidconsole\0" \
++		"stderr=serial,vidconsole\0"
++
++#include <configs/rk3588_common.h>
++
++#endif /* __NANOPI_R6C_RK3588_H */
-- 
2.40.1


From a745f955d6c4fb0d0a3f255dbdf4d157de0235e1 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Mon, 14 Jun 2021 02:47:59 -0400
Subject: [PATCH 07/38] package: boot: uboot-friendlyarm

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 package/boot/uboot-friendlyarm/Makefile | 61 +++++++++++++++++++++++++
 1 file changed, 61 insertions(+)
 create mode 100644 package/boot/uboot-friendlyarm/Makefile

diff --git a/package/boot/uboot-friendlyarm/Makefile b/package/boot/uboot-friendlyarm/Makefile
new file mode 100644
index 0000000000..a49f4343f6
--- /dev/null
+++ b/package/boot/uboot-friendlyarm/Makefile
@@ -0,0 +1,61 @@
+#
+# Copyright (C) 2021 OpenWrt.org
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=uboot-friendlyarm
+PKG_SOURCE_DATE:=2021-01-05
+PKG_SOURCE_VERSION:=c5a1b04b8f35489fa3b0524996e65fd863cf9d79
+PKG_MIRROR_HASH:=18efb819e9333f691dfea41317ca36b2f530b1e587084d73eee6288af5a7a83b
+PKG_RELEASE:=1
+PKG_SOURCE_PROTO:=git
+PKG_SOURCE_URL:=https://github.com/friendlyarm/uboot-rockchip.git
+
+include $(INCLUDE_DIR)/u-boot.mk
+include $(INCLUDE_DIR)/package.mk
+
+
+define U-Boot/Default
+  BUILD_TARGET:=rockchip
+  UENV:=default
+  HIDDEN:=1
+endef
+
+define U-Boot/nanopi-r4s-rk3399
+  BUILD_SUBTARGET:=armv8
+  NAME:=NanoPi R4S
+  BUILD_DEVICES:= \
+    friendlyarm_nanopi-r4s
+  DEPENDS:=+PACKAGE_u-boot-nanopi-r4s-rk3399:arm-trusted-firmware-rockchip
+  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
+  ATF:=rk3399_bl31.elf
+endef
+
+UBOOT_TARGETS :=nanopi-r4s-rk3399
+
+UBOOT_CONFIGURE_VARS += USE_PRIVATE_LIBGCC=yes
+
+UBOOT_MAKE_FLAGS += \
+  BL31=$(STAGING_DIR_IMAGE)/$(ATF)
+
+define Build/Configure
+	$(call Build/Configure/U-Boot)
+
+	$(SED) 's#CONFIG_MKIMAGE_DTC_PATH=.*#CONFIG_MKIMAGE_DTC_PATH="$(PKG_BUILD_DIR)/scripts/dtc/dtc"#g' $(PKG_BUILD_DIR)/.config
+	echo 'CONFIG_IDENT_STRING=" OpenWrt"' >> $(PKG_BUILD_DIR)/.config
+endef
+
+define Build/InstallDev
+	$(INSTALL_DIR) $(STAGING_DIR_IMAGE)
+	$(CP) $(PKG_BUILD_DIR)/idbloader.img $(STAGING_DIR_IMAGE)/$(BUILD_VARIANT)-idbloader.img
+	$(CP) $(PKG_BUILD_DIR)/u-boot.itb $(STAGING_DIR_IMAGE)/$(BUILD_VARIANT)-u-boot.itb
+endef
+
+define Package/u-boot/install/default
+endef
+
+$(eval $(call BuildPackage/U-Boot))
-- 
2.40.1


From b10ee8c344da6a8f13220a43e999429a9b03e8bf Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Tue, 12 Oct 2021 11:03:59 -0400
Subject: [PATCH 08/38] rockchip: ROCK Pi 4 switchover ROCK Pi 4B DTS

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 target/linux/rockchip/image/armv8.mk | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index 86e7cec979..d184292e87 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -45,12 +45,13 @@ define Device/pine64_rockpro64
 endef
 TARGET_DEVICES += pine64_rockpro64
 
-define Device/radxa_rock-pi-4a
+define Device/radxa_rock-pi-4
   DEVICE_VENDOR := Radxa
-  DEVICE_MODEL := ROCK Pi 4A
+  DEVICE_MODEL := ROCK Pi 4
+  DEVICE_DTS := rockchip/rk3399-rock-pi-4b
   SOC := rk3399
-  SUPPORTED_DEVICES := radxa,rockpi4a radxa,rockpi4
+  SUPPORTED_DEVICES := radxa,rockpi4b
   UBOOT_DEVICE_NAME := rock-pi-4-rk3399
   IMAGE/sysupgrade.img.gz := boot-common | boot-script | pine64-img | gzip | append-metadata
 endef
-TARGET_DEVICES += radxa_rock-pi-4a
+TARGET_DEVICES += radxa_rock-pi-4
-- 
2.40.1


From 2327a480d6ec41e9c9670a1f66d10e320b3ee897 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Fri, 15 Apr 2022 17:02:33 -0400
Subject: [PATCH 09/38] package:firmware: add RPi-Distro firmware-nonfree

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 package/firmware/firmware-nonfree/Makefile | 78 ++++++++++++++++++++++
 1 file changed, 78 insertions(+)
 create mode 100644 package/firmware/firmware-nonfree/Makefile

diff --git a/package/firmware/firmware-nonfree/Makefile b/package/firmware/firmware-nonfree/Makefile
new file mode 100644
index 0000000000..6eb04e4af5
--- /dev/null
+++ b/package/firmware/firmware-nonfree/Makefile
@@ -0,0 +1,78 @@
+#
+#
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=firmware-nonfree
+PKG_SOURCE_DATE:=2022-04-11
+PKG_SOURCE_VERSION:=fdaf74c780ca7a29b12d62e5b0d37c38c2321e20
+PKG_MIRROR_HASH:=ad249767689f83e5b04559c65e5f6043b96a0ae470beee3c20f7ca25918fcc4a
+PKG_RELEASE:=1
+PKG_SOURCE_PROTO:=git
+PKG_SOURCE_URL:=https://github.com/RPi-Distro/firmware-nonfree.git
+
+PKG_MAINTAINER:=
+
+include $(INCLUDE_DIR)/package.mk
+
+define Package/firmware-nonfree-default
+  SECTION:=firmware
+  CATEGORY:=Firmware
+  URL:=https://github.com/RPi-Distro
+endef
+
+define Build/Compile
+	true
+endef
+
+# brcmfmac-firmware-43456-sdio
+define Package/brcmfmac-firmware-43456-sdio
+  $(Package/firmware-nonfree-default)
+  TITLE:=BCM43456 FullMac SDIO firmware
+endef
+
+define Package/brcmfmac-firmware-43456-sdio/install
+	$(INSTALL_DIR) $(1)/lib/firmware/brcm
+	$(INSTALL_DATA) \
+		$(PKG_BUILD_DIR)/debian/config/brcm80211/brcm/brcmfmac43456-sdio.bin \
+		$(1)/lib/firmware/brcm/brcmfmac43456-sdio.bin
+	$(INSTALL_DATA) \
+		$(PKG_BUILD_DIR)/debian/config/brcm80211/brcm/brcmfmac43456-sdio.clm_blob \
+		$(1)/lib/firmware/brcm/brcmfmac43456-sdio.clm_blob
+endef
+
+$(eval $(call BuildPackage,brcmfmac-firmware-43456-sdio))
+
+# brcmfmac-firmware-43456-sdio-rockpi-4
+define Package/brcmfmac-firmware-43456-sdio-rockpi-4
+  $(Package/firmware-nonfree-default)
+  TITLE:=BCM43456 NVRAM for rockpi-4
+endef
+
+define Package/brcmfmac-firmware-43456-sdio-rockpi-4/install
+	$(INSTALL_DIR) $(1)/lib/firmware/brcm
+	$(INSTALL_DATA) \
+		$(PKG_BUILD_DIR)/debian/config/brcm80211/brcm/brcmfmac43456-sdio.txt \
+		$(1)/lib/firmware/brcm/brcmfmac43456-sdio.radxa,rockpi4b.txt
+endef
+
+$(eval $(call BuildPackage,brcmfmac-firmware-43456-sdio-rockpi-4))
+
+# brcmfmac-firmware-43456-sdio-rpi-400
+define Package/brcmfmac-firmware-43456-sdio-rpi-400
+  $(Package/firmware-nonfree-default)
+  TITLE:=BCM43456 NVRAM for rpi 400
+endef
+
+define Package/brcmfmac-firmware-43456-sdio-rpi-400/install
+	$(INSTALL_DIR) $(1)/lib/firmware/brcm
+	$(INSTALL_DATA) \
+		$(PKG_BUILD_DIR)/debian/config/brcm80211/brcm/brcmfmac43456-sdio.txt \
+		$(1)/lib/firmware/brcm/brcmfmac43456-sdio.raspberrypi,400.txt
+endef
+
+$(eval $(call BuildPackage,brcmfmac-firmware-43456-sdio-rpi-400))
-- 
2.40.1


From 5090546fe4b7671cfc16c537648b385dc118d256 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Sun, 31 Jan 2021 14:38:59 -0500
Subject: [PATCH 10/38] rockchip: enable WiFi on Rock pi 4

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 target/linux/rockchip/image/armv8.mk | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index d184292e87..5818cf9947 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -53,5 +53,9 @@ define Device/radxa_rock-pi-4
   SUPPORTED_DEVICES := radxa,rockpi4b
   UBOOT_DEVICE_NAME := rock-pi-4-rk3399
   IMAGE/sysupgrade.img.gz := boot-common | boot-script | pine64-img | gzip | append-metadata
+  DEVICE_PACKAGES := \
+	brcmfmac-firmware-43456-sdio \
+	brcmfmac-firmware-43456-sdio-rockpi-4 \
+	kmod-brcmfmac wpad-openssl
 endef
 TARGET_DEVICES += radxa_rock-pi-4
-- 
2.40.1


From 71f7aeb811220ad646cb5bd133d1eb6517e913d1 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Thu, 23 Dec 2021 20:53:14 -0500
Subject: [PATCH 11/38] rockchip:rk3328: add support for FriendlyARM NanoPi
 NEO3

This patch adds support for FriendlyARM NanoPi NEO3

Specification
-------------
Soc:      RockChip RK3328
RAM:      1GB/2GB DDR4
LAN:      10/100/1000M Ethernet with unique MAC
USB Host: 1x USB3.0 Type A and 2x USB2.0 on 2.54mm pin header
MicroSD:  x 1 for system boot and storage
LED:      Power LED x 1, System LED x 1
Key:      User Button x 1
Fan:      2 Pin JST ZH 1.5mm Connector for 5V Fan
GPIO:     26 pin-header, include I2C, UART, SPI, I2S, GPIO
Power:    5V/1A, via Type-C or GPIO

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../linux/rockchip/armv8/base-files/etc/board.d/01_leds  | 3 +++
 target/linux/rockchip/image/armv8.mk                     | 9 +++++++++
 2 files changed, 12 insertions(+)

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index b10c43ba60..845c7b326d 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -8,6 +8,9 @@ boardname="${board##*,}"
 board_config_update
 
 case $board in
+friendlyarm,nanopi-neo3)
+	ucidef_set_led_netdev "stat" "STAT" "$boardname:green:stat" "eth0"
+	;;
 friendlyarm,nanopi-r2s)
 	ucidef_set_led_netdev "wan" "WAN" "$boardname:green:wan" "eth0"
 	ucidef_set_led_netdev "lan" "LAN" "$boardname:green:lan" "eth1"
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index 5818cf9947..a3c927bb36 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -5,6 +5,15 @@
 # FIT will be loaded at 0x02080000. Leave 16M for that, align it to 2M and load the kernel after it.
 KERNEL_LOADADDR := 0x03200000
 
+define Device/friendlyarm_nanopi-neo3
+  DEVICE_VENDOR := FriendlyARM
+  DEVICE_MODEL := NanoPi NEO3
+  SOC := rk3328
+  UBOOT_DEVICE_NAME := nanopi-r2s-rk3328
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r2s | pine64-img | gzip | append-metadata
+endef
+TARGET_DEVICES += friendlyarm_nanopi-neo3
+
 define Device/firefly_roc-rk3328-cc
   DEVICE_VENDOR := Firefly
   DEVICE_MODEL := ROC-RK3328-CC
-- 
2.40.1


From f1b19d919e2e6fec07473f645f1ffb1e22bdf872 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Mon, 9 May 2022 23:52:50 -0400
Subject: [PATCH 12/38] rockchip: add support for Pine64 QUARTZ64 RK3566

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../rockchip/armv8/base-files/etc/board.d/01_leds      |  3 +++
 .../rockchip/armv8/base-files/etc/board.d/02_network   |  5 +++++
 target/linux/rockchip/image/armv8.mk                   | 10 ++++++++++
 target/linux/rockchip/image/quartz64-a.bootscript      |  8 ++++++++
 4 files changed, 26 insertions(+)
 create mode 100644 target/linux/rockchip/image/quartz64-a.bootscript

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index 845c7b326d..7c28ace79d 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -19,6 +19,9 @@ friendlyarm,nanopi-r4s)
 	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth0"
 	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth1"
 	;;
+pine64,quartz64-a)
+	ucidef_set_led_netdev "lan" "LAN" "work-led" "br-lan"
+	;;
 esac
 
 board_config_flush
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index 816045a480..d15d9708ca 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -11,6 +11,11 @@ rockchip_setup_interfaces()
 	friendlyarm,nanopi-r4s)
 		ucidef_set_interfaces_lan_wan 'eth1' 'eth0'
 		;;
+	pine64,rockpro64|\
+	pine64,rockpro64-v2.1|\
+	pine64,quartz64-a)
+		ucidef_set_interfaces_lan_wan 'eth0' 'eth1'
+		;;
 	*)
 		ucidef_set_interface_lan 'eth0'
 		;;
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index a3c927bb36..c0f8420956 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -54,6 +54,16 @@ define Device/pine64_rockpro64
 endef
 TARGET_DEVICES += pine64_rockpro64
 
+define Device/pine64_quartz64-a
+  DEVICE_VENDOR := Pine64
+  DEVICE_MODEL := QUARTZ64
+  SOC := rk3566
+  SUPPORTED_DEVICES := pine64,quartz64-a
+  UBOOT_DEVICE_NAME := quartz64-a-rk3566
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script quartz64-a | pine64-img | gzip | append-metadata
+endef
+TARGET_DEVICES += pine64_quartz64-a
+
 define Device/radxa_rock-pi-4
   DEVICE_VENDOR := Radxa
   DEVICE_MODEL := ROCK Pi 4
diff --git a/target/linux/rockchip/image/quartz64-a.bootscript b/target/linux/rockchip/image/quartz64-a.bootscript
new file mode 100644
index 0000000000..6deafd70c1
--- /dev/null
+++ b/target/linux/rockchip/image/quartz64-a.bootscript
@@ -0,0 +1,8 @@
+part uuid mmc ${devnum}:2 uuid
+
+setenv bootargs "console=ttyS2,1500000 earlycon=uart8250,mmio32,0xfe660000 root=PARTUUID=${uuid} rw rootwait"
+
+
+load mmc ${devnum}:1 ${kernel_addr_r} kernel.img
+
+bootm ${kernel_addr_r}
-- 
2.40.1


From 23f3c32980673191382a02b9b6eff3e4482e0f76 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Tue, 21 Jun 2022 13:32:29 -0400
Subject: [PATCH 13/38] rockchip: add Banana Pi BPI-R2 Pro support

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../rockchip/armv8/base-files/etc/board.d/02_network   |  3 +++
 target/linux/rockchip/image/armv8.mk                   | 10 ++++++++++
 2 files changed, 13 insertions(+)

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index d15d9708ca..8d9ce9285a 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -16,6 +16,9 @@ rockchip_setup_interfaces()
 	pine64,quartz64-a)
 		ucidef_set_interfaces_lan_wan 'eth0' 'eth1'
 		;;
+	rockchip,rk3568-bpi-r2pro)
+		ucidef_set_interfaces_lan_wan 'lan1 lan2 lan3 lan4' 'cpu'
+		;;
 	*)
 		ucidef_set_interface_lan 'eth0'
 		;;
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index c0f8420956..0805d4d4fa 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -78,3 +78,13 @@ define Device/radxa_rock-pi-4
 	kmod-brcmfmac wpad-openssl
 endef
 TARGET_DEVICES += radxa_rock-pi-4
+
+define Device/rockchip_bpi-r2-pro
+  DEVICE_VENDOR := Rockchip
+  DEVICE_MODEL := Bananapi-R2 Pro
+  SOC := rk3568
+  SUPPORTED_DEVICES := rockchip,rk3568-bpi-r2pro
+  UBOOT_DEVICE_NAME := bpi-r2-pro-rk3568
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script quartz64-a | pine64-img | gzip | append-metadata
+endef
+TARGET_DEVICES += rockchip_bpi-r2-pro
-- 
2.40.1


From e16c5a0b8ded375e543844c746eadd8ad18c2c26 Mon Sep 17 00:00:00 2001
From: Malcolm Morris-Pence <malcolmmp@gmail.com>
Date: Thu, 4 Aug 2022 16:01:43 -0700
Subject: [PATCH 14/38] Update r2pro network

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 target/linux/rockchip/armv8/base-files/etc/board.d/02_network | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index 8d9ce9285a..3156842081 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -17,7 +17,7 @@ rockchip_setup_interfaces()
 		ucidef_set_interfaces_lan_wan 'eth0' 'eth1'
 		;;
 	rockchip,rk3568-bpi-r2pro)
-		ucidef_set_interfaces_lan_wan 'lan1 lan2 lan3 lan4' 'cpu'
+		ucidef_set_interfaces_lan_wan 'lan0 lan1 lan2 lan3' 'eth0'
 		;;
 	*)
 		ucidef_set_interface_lan 'eth0'
-- 
2.40.1


From 318db5c9015948c45f193ef7c346ca46ba0c25cc Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Tue, 21 Jun 2022 17:27:17 -0400
Subject: [PATCH 15/38] rockchip: add Radxa ROCK3 Model A board.

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../rockchip/armv8/base-files/etc/board.d/01_leds      |  3 +++
 .../rockchip/armv8/base-files/etc/board.d/02_network   |  3 ++-
 target/linux/rockchip/image/armv8.mk                   | 10 ++++++++++
 target/linux/rockchip/image/rock-3a.bootscript         |  8 ++++++++
 4 files changed, 23 insertions(+), 1 deletion(-)
 create mode 100644 target/linux/rockchip/image/rock-3a.bootscript

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index 7c28ace79d..3bacafd5e0 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -22,6 +22,9 @@ friendlyarm,nanopi-r4s)
 pine64,quartz64-a)
 	ucidef_set_led_netdev "lan" "LAN" "work-led" "br-lan"
 	;;
+radxa,rock3a)
+	ucidef_set_led_netdev "lan" "LAN" "user-led" "br-lan"
+	;;
 esac
 
 board_config_flush
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index 3156842081..b822232e40 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -13,7 +13,8 @@ rockchip_setup_interfaces()
 		;;
 	pine64,rockpro64|\
 	pine64,rockpro64-v2.1|\
-	pine64,quartz64-a)
+	pine64,quartz64-a|\
+	radxa,rock3a)
 		ucidef_set_interfaces_lan_wan 'eth0' 'eth1'
 		;;
 	rockchip,rk3568-bpi-r2pro)
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index 0805d4d4fa..b91c1c8a6d 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -64,6 +64,16 @@ define Device/pine64_quartz64-a
 endef
 TARGET_DEVICES += pine64_quartz64-a
 
+define Device/radxa_rock-3a
+  DEVICE_VENDOR := Radxa
+  DEVICE_MODEL := ROCK3 Model A
+  SOC := rk3568
+  SUPPORTED_DEVICES := radxa,rock3a
+  UBOOT_DEVICE_NAME := rock-3a-rk3568
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script rock-3a | pine64-img | gzip | append-metadata
+endef
+TARGET_DEVICES += radxa_rock-3a
+
 define Device/radxa_rock-pi-4
   DEVICE_VENDOR := Radxa
   DEVICE_MODEL := ROCK Pi 4
diff --git a/target/linux/rockchip/image/rock-3a.bootscript b/target/linux/rockchip/image/rock-3a.bootscript
new file mode 100644
index 0000000000..6deafd70c1
--- /dev/null
+++ b/target/linux/rockchip/image/rock-3a.bootscript
@@ -0,0 +1,8 @@
+part uuid mmc ${devnum}:2 uuid
+
+setenv bootargs "console=ttyS2,1500000 earlycon=uart8250,mmio32,0xfe660000 root=PARTUUID=${uuid} rw rootwait"
+
+
+load mmc ${devnum}:1 ${kernel_addr_r} kernel.img
+
+bootm ${kernel_addr_r}
-- 
2.40.1


From 09e89c4ac205fe2f1c7ff9d2a57969866a35a692 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Sun, 31 Jul 2022 02:49:49 -0400
Subject: [PATCH 16/38] rockchip: add FriendlyElec NanoPi R5S

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../rockchip/armv8/base-files/etc/board.d/01_leds      |  5 +++++
 .../rockchip/armv8/base-files/etc/board.d/02_network   |  3 +++
 .../base-files/etc/hotplug.d/net/40-net-smp-affinity   |  5 +++++
 target/linux/rockchip/image/armv8.mk                   | 10 ++++++++++
 target/linux/rockchip/image/nanopi-r5s.bootscript      |  8 ++++++++
 5 files changed, 31 insertions(+)
 create mode 100644 target/linux/rockchip/image/nanopi-r5s.bootscript

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index 3bacafd5e0..e31e56200f 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -19,6 +19,11 @@ friendlyarm,nanopi-r4s)
 	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth0"
 	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth1"
 	;;
+friendlyelec,nanopi-r5s)
+	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth0"
+	ucidef_set_led_netdev "lan1" "LAN1" "green:lan1" "eth1"
+	ucidef_set_led_netdev "lan2" "LAN2" "green:lan2" "eth2"
+	;;
 pine64,quartz64-a)
 	ucidef_set_led_netdev "lan" "LAN" "work-led" "br-lan"
 	;;
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index b822232e40..6b8ab50e03 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -11,6 +11,9 @@ rockchip_setup_interfaces()
 	friendlyarm,nanopi-r4s)
 		ucidef_set_interfaces_lan_wan 'eth1' 'eth0'
 		;;
+	friendlyelec,nanopi-r5s)
+		ucidef_set_interfaces_lan_wan 'eth1 eth2' 'eth0'
+		;;
 	pine64,rockpro64|\
 	pine64,rockpro64-v2.1|\
 	pine64,quartz64-a|\
diff --git a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
index d8385b3c69..7b78c899a0 100644
--- a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
+++ b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
@@ -37,5 +37,10 @@ friendlyarm,nanopi-r4s)
 	set_interface_core 10 "eth0"
 	set_interface_core 20 "eth1"
 	;;
+friendlyelec,nanopi-r5s)
+	set_interface_core 2 "eth0"
+	set_interface_core 4 "eth1"
+	set_interface_core 8 "eth2"
+	;;
 esac
 
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index b91c1c8a6d..140511f078 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -45,6 +45,16 @@ define Device/friendlyarm_nanopi-r4s
 endef
 TARGET_DEVICES += friendlyarm_nanopi-r4s
 
+define Device/friendlyelec_nanopi-r5s
+  DEVICE_VENDOR := Friendlyelec
+  DEVICE_MODEL := NanoPi R5S
+  SOC := rk3568
+  UBOOT_DEVICE_NAME := nanopi-r5s-rk3568
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r5s | pine64-img | gzip | append-metadata
+  DEVICE_PACKAGES := kmod-r8169
+endef
+TARGET_DEVICES += friendlyelec_nanopi-r5s
+
 define Device/pine64_rockpro64
   DEVICE_VENDOR := Pine64
   DEVICE_MODEL := RockPro64
diff --git a/target/linux/rockchip/image/nanopi-r5s.bootscript b/target/linux/rockchip/image/nanopi-r5s.bootscript
new file mode 100644
index 0000000000..6deafd70c1
--- /dev/null
+++ b/target/linux/rockchip/image/nanopi-r5s.bootscript
@@ -0,0 +1,8 @@
+part uuid mmc ${devnum}:2 uuid
+
+setenv bootargs "console=ttyS2,1500000 earlycon=uart8250,mmio32,0xfe660000 root=PARTUUID=${uuid} rw rootwait"
+
+
+load mmc ${devnum}:1 ${kernel_addr_r} kernel.img
+
+bootm ${kernel_addr_r}
-- 
2.40.1


From 065eafe3efc215a8567efc8f8325aa75694b1379 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Sun, 21 Aug 2022 04:34:20 -0400
Subject: [PATCH 17/38] rockchip: bpi r2 pro enable board leds

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 target/linux/rockchip/armv8/base-files/etc/board.d/01_leds | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index e31e56200f..a0e25079be 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -30,6 +30,10 @@ pine64,quartz64-a)
 radxa,rock3a)
 	ucidef_set_led_netdev "lan" "LAN" "user-led" "br-lan"
 	;;
+rockchip,rk3568-bpi-r2pro)
+	ucidef_set_led_netdev "wan" "WAN" "blue:status" "eth0"
+	ucidef_set_led_netdev "lan" "LAN" "green:power" "eth1"
+	;;
 esac
 
 board_config_flush
-- 
2.40.1


From 2870433ee82899105a9d51823595f57037a2b921 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Sat, 10 Sep 2022 11:45:10 -0400
Subject: [PATCH 18/38] rockchip: generate MAC address for bpi r2 pro nanopi
 r5s

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../rockchip/armv8/base-files/etc/board.d/02_network | 12 ++++++++++++
 .../base-files/etc/hotplug.d/net/40-net-smp-affinity |  4 ++++
 2 files changed, 16 insertions(+)

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index 6b8ab50e03..7260c994e1 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -29,6 +29,13 @@ rockchip_setup_interfaces()
 	esac
 }
 
+bpi_r2pro_generate_mac()
+{
+	local emmc_hash=$(sha256sum /sys/class/block/mmcblk*/device/cid)
+	local mac_base=$(macaddr_canonicalize "$(echo "${emmc_hash}" | dd bs=1 count=12 2>/dev/null)")
+	echo "$(macaddr_unsetbit_mc "$(macaddr_setbit_la "${mac_base}")")"
+}
+
 nanopi_r4s_get_mac()
 {
 	local interface=$1
@@ -66,6 +73,11 @@ rockchip_setup_macs()
 		wan_mac=$(nanopi_r4s_get_mac wan)
 		lan_mac=$(nanopi_r4s_get_mac lan)
 		;;
+	friendlyelec,nanopi-r5s|\
+	rockchip,rk3568-bpi-r2pro)
+		wan_mac=$(bpi_r2pro_generate_mac)
+		lan_mac=$(macaddr_add "$wan_mac" 1)
+		;;
 	esac
 
 	[ -n "$lan_mac" ] && ucidef_set_interface_macaddr "lan" $lan_mac
diff --git a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
index 7b78c899a0..a9f5b6fa8d 100644
--- a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
+++ b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
@@ -42,5 +42,9 @@ friendlyelec,nanopi-r5s)
 	set_interface_core 4 "eth1"
 	set_interface_core 8 "eth2"
 	;;
+rockchip,rk3568-bpi-r2pro)
+	set_interface_core 1 "eth0"
+	set_interface_core 3 "eth1"
+	;;
 esac
 
-- 
2.40.1


From 201d7c696f29f9a6b8f9c3163ee5348aa2ed378a Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Wed, 19 Apr 2023 20:38:06 -0400
Subject: [PATCH 19/38] rockchip: add nanopi r5c

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../rockchip/armv8/base-files/etc/board.d/01_leds      |  5 +++++
 .../rockchip/armv8/base-files/etc/board.d/02_network   |  4 ++++
 .../base-files/etc/hotplug.d/net/40-net-smp-affinity   |  4 ++++
 target/linux/rockchip/image/armv8.mk                   | 10 ++++++++++
 4 files changed, 23 insertions(+)

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index a0e25079be..dd6836435b 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -19,6 +19,11 @@ friendlyarm,nanopi-r4s)
 	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth0"
 	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth1"
 	;;
+friendlyelec,nanopi-r5c)
+	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth1"
+	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth0"
+	ucidef_set_led_netdev "wlan" "WL" "green:wlan" "phy0-ap0"
+	;;
 friendlyelec,nanopi-r5s)
 	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth0"
 	ucidef_set_led_netdev "lan1" "LAN1" "green:lan1" "eth1"
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index 7260c994e1..b88eeaf026 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -11,6 +11,9 @@ rockchip_setup_interfaces()
 	friendlyarm,nanopi-r4s)
 		ucidef_set_interfaces_lan_wan 'eth1' 'eth0'
 		;;
+	friendlyelec,nanopi-r5c)
+		ucidef_set_interfaces_lan_wan 'eth0' 'eth1'
+		;;
 	friendlyelec,nanopi-r5s)
 		ucidef_set_interfaces_lan_wan 'eth1 eth2' 'eth0'
 		;;
@@ -73,6 +76,7 @@ rockchip_setup_macs()
 		wan_mac=$(nanopi_r4s_get_mac wan)
 		lan_mac=$(nanopi_r4s_get_mac lan)
 		;;
+	friendlyelec,nanopi-r5c|\
 	friendlyelec,nanopi-r5s|\
 	rockchip,rk3568-bpi-r2pro)
 		wan_mac=$(bpi_r2pro_generate_mac)
diff --git a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
index a9f5b6fa8d..08736c99b0 100644
--- a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
+++ b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
@@ -37,6 +37,10 @@ friendlyarm,nanopi-r4s)
 	set_interface_core 10 "eth0"
 	set_interface_core 20 "eth1"
 	;;
+friendlyelec,nanopi-r5c)
+	set_interface_core 2 "eth0"
+	set_interface_core 4 "eth1"
+	;;
 friendlyelec,nanopi-r5s)
 	set_interface_core 2 "eth0"
 	set_interface_core 4 "eth1"
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index 140511f078..e7fdeb0ed3 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -45,6 +45,16 @@ define Device/friendlyarm_nanopi-r4s
 endef
 TARGET_DEVICES += friendlyarm_nanopi-r4s
 
+define Device/friendlyelec_nanopi-r5c
+  DEVICE_VENDOR := Friendlyelec
+  DEVICE_MODEL := NanoPi R5C
+  SOC := rk3568
+  UBOOT_DEVICE_NAME := nanopi-r5c-rk3568
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r5s | pine64-img | gzip | append-metadata
+  DEVICE_PACKAGES := kmod-r8169
+endef
+TARGET_DEVICES += friendlyelec_nanopi-r5c
+
 define Device/friendlyelec_nanopi-r5s
   DEVICE_VENDOR := Friendlyelec
   DEVICE_MODEL := NanoPi R5S
-- 
2.40.1


From bc78e949ee5c4bbe51ca45dc0c5013db6d493660 Mon Sep 17 00:00:00 2001
From: User Github <974715732+user@users.noreply.github.com>
Date: Fri, 16 Sep 2022 02:44:11 -0400
Subject: [PATCH 20/38] wireless-regdb: update

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../patches/500-world-regd-5GHz.patch         | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/package/firmware/wireless-regdb/patches/500-world-regd-5GHz.patch b/package/firmware/wireless-regdb/patches/500-world-regd-5GHz.patch
index 3f6d4c7e8d..8270ebc909 100644
--- a/package/firmware/wireless-regdb/patches/500-world-regd-5GHz.patch
+++ b/package/firmware/wireless-regdb/patches/500-world-regd-5GHz.patch
@@ -5,7 +5,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
 ---
 --- a/db.txt
 +++ b/db.txt
-@@ -19,7 +19,7 @@ country 00:
+@@ -19,13 +19,15 @@ country 00:
  	# Channel 14. Only JP enables this and for 802.11b only
  	(2474 - 2494 @ 20), (20), NO-IR, NO-OFDM
  	# Channel 36 - 48
@@ -14,3 +14,20 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  	# Channel 52 - 64
  	(5250 - 5330 @ 80), (20), NO-IR, DFS, AUTO-BW
  	# Channel 100 - 144
+ 	(5490 - 5730 @ 160), (20), NO-IR, DFS
+ 	# Channel 149 - 165
+ 	(5735 - 5835 @ 80), (20), NO-IR
++	# Channel 1 - 223
++	(5925 - 7125 @ 320), (12), AUTO-BW
+ 	# IEEE 802.11ad (60GHz), channels 1..3
+ 	(57240 - 63720 @ 2160), (0)
+
+@@ -1736,7 +1736,7 @@ country US: DFS-FCC
+ 	(5850 - 5895 @ 40), (27), NO-OUTDOOR, AUTO-BW, NO-IR
+ 	# 6g band
+ 	# https://www.federalregister.gov/documents/2020/05/26/2020-11236/unlicensed-use-of-the-6ghz-band
+-	(5925 - 7125 @ 320), (12), NO-OUTDOOR, NO-IR
++	(5925 - 7125 @ 320), (12), AUTO-BW
+ 	# 60g band
+ 	# reference: section IV-D https://docs.fcc.gov/public/attachments/FCC-16-89A1.pdf
+ 	# channels 1-6 EIRP=40dBm(43dBm peak)
-- 
2.40.1


From a71ca7281ee06cfec7449bab7479ff1bafb1b0cc Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Fri, 20 Jan 2023 20:57:00 -0500
Subject: [PATCH 21/38] iwinfo: add hardware id for MT7922 devices

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 ...evices-add-MediaTek-MT7922-device-id.patch | 25 +++++++++++++++++++
 1 file changed, 25 insertions(+)
 create mode 100644 package/network/utils/iwinfo/patches/0001-devices-add-MediaTek-MT7922-device-id.patch

diff --git a/package/network/utils/iwinfo/patches/0001-devices-add-MediaTek-MT7922-device-id.patch b/package/network/utils/iwinfo/patches/0001-devices-add-MediaTek-MT7922-device-id.patch
new file mode 100644
index 0000000000..56cfedfef2
--- /dev/null
+++ b/package/network/utils/iwinfo/patches/0001-devices-add-MediaTek-MT7922-device-id.patch
@@ -0,0 +1,25 @@
+From 0a38971e811573c65ab586aff19a5129b0d74479 Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Fri, 18 Nov 2022 14:50:16 -0500
+Subject: [PATCH 46/52] iwinfo: add hardware id for MT7922 devices
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ devices.txt | 1 +
+ 1 file changed, 1 insertion(+)
+
+diff --git a/devices.txt b/devices.txt
+index 82d8421..04b21e7 100644
+--- a/devices.txt
++++ b/devices.txt
+@@ -189,6 +189,7 @@
+ 0x14c3 0x7650 0x14c3 0x7650    0      0  "MediaTek" "MT7610E"
+ 0x14c3 0x7662 0x14c3 0x7662    0      0  "MediaTek" "MT76x2E"
+ 0x14c3 0x7915 0x14c3 0x7915    0      0  "MediaTek" "MT7915E"
++0x14c3 0x7922 0x1A3B 0x5300    0      0  "MediaTek" "MT7922"
+ 0x14e4 0xaa52 0x14e4 0xaa52    0      0  "Broadcom" "BCM43602"
+ 0x02d0 0xa9a6 0x0000 0x0000    0      0  "Cypress"  "CYW43455"
+ 0x1ae9 0x0310 0x1ae9 0x0000    0      0  "Wilocity" "Wil6210"
+-- 
+2.38.1
+
-- 
2.40.1


From 640f7df49a46f13a00c352236797ada554db4494 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Fri, 15 Sep 2023 01:24:29 -0400
Subject: [PATCH 22/38] kernel: add rtl8812au-ac driver

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 package/kernel/rtl8812au-ac/Makefile         |  64 ++++++++
 package/kernel/rtl8812au-ac/patches/01.patch | 145 +++++++++++++++++++
 2 files changed, 209 insertions(+)
 create mode 100644 package/kernel/rtl8812au-ac/Makefile
 create mode 100644 package/kernel/rtl8812au-ac/patches/01.patch

diff --git a/package/kernel/rtl8812au-ac/Makefile b/package/kernel/rtl8812au-ac/Makefile
new file mode 100644
index 0000000000..3faa423a5d
--- /dev/null
+++ b/package/kernel/rtl8812au-ac/Makefile
@@ -0,0 +1,64 @@
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=rtl8812au-ac
+PKG_RELEASE:=1
+
+PKG_LICENSE:=GPLv2
+PKG_LICENSE_FILES:=
+
+PKG_SOURCE_URL:=https://github.com/aircrack-ng/rtl8812au.git
+PKG_SOURCE_PROTO:=git
+PKG_SOURCE_DATE:=2023-07-23
+PKG_SOURCE_VERSION:=04f600ee54a414b871aea509fcd4709838c8c522
+PKG_MIRROR_HASH:=df8aa45fb2bc2bc706b8fe49b4b7c4216b64232286845bb7dc231d0be309ccac
+
+# PKG_MAINTAINER:=
+PKG_BUILD_PARALLEL:=1
+
+STAMP_CONFIGURED_DEPENDS := $(STAGING_DIR)/usr/include/mac80211-backport/backport/autoconf.h
+
+include $(INCLUDE_DIR)/kernel.mk
+include $(INCLUDE_DIR)/package.mk
+
+define KernelPackage/rtl8812au-ac
+  SUBMENU:=Wireless Drivers
+  TITLE:=Realtek RTL8812AU/21AU wireless drivers
+  DEPENDS:=+kmod-cfg80211 +kmod-usb-core +@DRIVER_11AC_SUPPORT
+  FILES:=$(PKG_BUILD_DIR)/rtl8812au.ko
+  AUTOLOAD:=$(call AutoProbe,rtl8812au)
+  CONFLICTS:=kmod-rtl8812au-ct
+endef
+
+NOSTDINC_FLAGS:= \
+	$(KERNEL_NOSTDINC_FLAGS) \
+	-I$(PKG_BUILD_DIR) \
+	-I$(PKG_BUILD_DIR)/include \
+	-I$(STAGING_DIR)/usr/include/mac80211-backport \
+	-I$(STAGING_DIR)/usr/include/mac80211-backport/uapi \
+	-I$(STAGING_DIR)/usr/include/mac80211 \
+	-I$(STAGING_DIR)/usr/include/mac80211/uapi \
+	-include backport/autoconf.h \
+	-include backport/backport.h
+
+NOSTDINC_FLAGS+= \
+	-DRTW_SINGLE_WIPHY \
+	-DRTW_USE_CFG80211_STA_EVENT \
+	-DCONFIG_IOCTL_CFG80211 \
+	-DBUILD_OPENWRT
+
+ifeq ($(CONFIG_BIG_ENDIAN),y)
+NOSTDINC_FLAGS+= -DCONFIG_BIG_ENDIAN
+else
+NOSTDINC_FLAGS+= -DCONFIG_LITTLE_ENDIAN
+endif
+
+define Build/Compile
+	+$(KERNEL_MAKE) $(PKG_JOBS) \
+		M="$(PKG_BUILD_DIR)" \
+		NOSTDINC_FLAGS="$(NOSTDINC_FLAGS)" \
+		CONFIG_88XXAU=m \
+		USER_MODULE_NAME=rtl8812au \
+		modules
+endef
+
+$(eval $(call KernelPackage,rtl8812au-ac))
diff --git a/package/kernel/rtl8812au-ac/patches/01.patch b/package/kernel/rtl8812au-ac/patches/01.patch
new file mode 100644
index 0000000000..9cd30a061e
--- /dev/null
+++ b/package/kernel/rtl8812au-ac/patches/01.patch
@@ -0,0 +1,145 @@
+--- a/include/drv_types.h
++++ b/include/drv_types.h
+@@ -24,7 +24,7 @@
+ #include <drv_conf.h>
+ #include <basic_types.h>
+ #include <osdep_service.h>
+-#include <rtw_byteorder.h>
++#include <asm/byteorder.h>
+ #include <wlan_bssdef.h>
+ #include <wifi.h>
+ #include <ieee80211.h>
+--- a/os_dep/linux/os_intfs.c
++++ b/os_dep/linux/os_intfs.c
+@@ -1737,7 +1737,7 @@ int rtw_os_ndev_register(_adapter *adapt
+ #if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
+ 	netif_napi_add_weight(ndev, &adapter->napi, rtw_recv_napi_poll, RTL_NAPI_WEIGHT);
+ #else
+-	netif_napi_add(ndev, &adapter->napi, rtw_recv_napi_poll, RTL_NAPI_WEIGHT);
++	netif_napi_add(ndev, &adapter->napi, rtw_recv_napi_poll);
+ #endif
+ #endif /* CONFIG_RTW_NAPI */
+ 
+@@ -2778,6 +2778,7 @@ static int netdev_vir_if_close(struct ne
+ {
+ 	_adapter *padapter = (_adapter *)rtw_netdev_priv(pnetdev);
+ 	struct mlme_priv	*pmlmepriv = &padapter->mlmepriv;
++	struct wireless_dev *wdev = padapter->rtw_wdev;
+ 
+ 	RTW_INFO(FUNC_NDEV_FMT" , bup=%d\n", FUNC_NDEV_ARG(pnetdev), padapter->bup);
+ 	padapter->net_closed = _TRUE;
+@@ -2793,7 +2794,13 @@ static int netdev_vir_if_close(struct ne
+ 
+ #ifdef CONFIG_IOCTL_CFG80211
+ 	wdev->iftype = NL80211_IFTYPE_MONITOR;
++	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0) || defined(BUILD_OPENWRT))
++	wdev->links[0].client.current_bss = NULL;
++	#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5,19, 2))
++	wdev->connected = NULL;
++	#else
+ 	wdev->current_bss = NULL;
++	#endif
+ 	rtw_scan_abort(padapter);
+ 	rtw_cfg80211_wait_scan_req_empty(padapter, 200);
+ 	adapter_wdev_data(padapter)->bandroid_scan = _FALSE;
+--- a/os_dep/linux/ioctl_cfg80211.c
++++ b/os_dep/linux/ioctl_cfg80211.c
+@@ -460,11 +460,11 @@ u8 rtw_cfg80211_ch_switch_notify(_adapte
+ 
+ #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 19, 0))
+ 	if (started) {
+-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0))
++#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0) || defined(BUILD_OPENWRT))
+ 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, 0, 0, false, 0);
+-#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
++#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || defined(BUILD_OPENWRT))
+ 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, 0, 0, false);
+-#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)) || (RHEL_RELEASE_CODE >= RHEL_RELEASE_VERSION(8,0))
++#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0) || defined(BUILD_OPENWRT))
+ 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, 0, false);
+ #else
+ 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, 0);
+@@ -476,7 +476,7 @@ u8 rtw_cfg80211_ch_switch_notify(_adapte
+ 	if (!rtw_cfg80211_allow_ch_switch_notify(adapter))
+ 		goto exit;
+ 
+-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0))
++#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0) || defined(BUILD_OPENWRT))
+ 	cfg80211_ch_switch_notify(adapter->pnetdev, &chdef, 0, 0);
+ #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5,19, 2))
+ 	cfg80211_ch_switch_notify(adapter->pnetdev, &chdef, 0);
+@@ -1738,7 +1738,7 @@ exit:
+ }
+ 
+ static int cfg80211_rtw_add_key(struct wiphy *wiphy, struct net_device *ndev
+-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
++#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || defined(BUILD_OPENWRT))
+ 	, int link_id
+ #endif
+ 	, u8 key_index
+@@ -1885,7 +1885,7 @@ addkey_end:
+ }
+ 
+ static int cfg80211_rtw_get_key(struct wiphy *wiphy, struct net_device *ndev
+-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
++#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || defined(BUILD_OPENWRT))
+ 	, int link_id
+ #endif
+ 	, u8 keyid
+@@ -2053,7 +2053,7 @@ exit:
+ }
+ 
+ static int cfg80211_rtw_del_key(struct wiphy *wiphy, struct net_device *ndev,
+-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
++#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || defined(BUILD_OPENWRT))
+ 	int link_id,
+ #endif
+ #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 37)) || defined(COMPAT_KERNEL_RELEASE)
+@@ -2077,7 +2077,7 @@ static int cfg80211_rtw_del_key(struct w
+ 
+ static int cfg80211_rtw_set_default_key(struct wiphy *wiphy,
+ 	struct net_device *ndev,
+-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
++#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || defined(BUILD_OPENWRT))
+ 	int link_id,
+ #endif
+ 	u8 key_index
+@@ -2129,7 +2129,7 @@ static int cfg80211_rtw_set_default_key(
+ #if (LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 30))
+ int cfg80211_rtw_set_default_mgmt_key(struct wiphy *wiphy,
+ 	struct net_device *ndev,
+-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
++#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0) || defined(BUILD_OPENWRT))
+ 	int link_id,
+ #endif
+ 	u8 key_index)
+@@ -5267,7 +5267,7 @@ static int cfg80211_rtw_change_beacon(st
+ 	return ret;
+ }
+ 
+-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2))
++#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2) || defined(BUILD_OPENWRT))
+ static int cfg80211_rtw_stop_ap(struct wiphy *wiphy, struct net_device *ndev, unsigned int link_id)
+ #else
+ static int cfg80211_rtw_stop_ap(struct wiphy *wiphy, struct net_device *ndev)
+@@ -6143,7 +6143,7 @@ static int	cfg80211_rtw_set_channel(stru
+ 	return 0;
+ }
+ 
+-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2))
++#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2) || defined(BUILD_OPENWRT))
+ static int cfg80211_rtw_get_channel(struct wiphy *wiphy, struct wireless_dev *wdev, unsigned int link_id, struct cfg80211_chan_def *chandef){
+ #else
+ static int cfg80211_rtw_get_channel(struct wiphy *wiphy, struct wireless_dev *wdev, struct cfg80211_chan_def *chandef){
+@@ -10432,9 +10432,9 @@ void rtw_wdev_unregister(struct wireless
+ 	rtw_cfg80211_indicate_scan_done(adapter, _TRUE);
+ 
+ 	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 11, 0)) || defined(COMPAT_KERNEL_RELEASE)
+-	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
++	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0) || defined(BUILD_OPENWRT))
+ 	if (wdev->links[0].client.current_bss) {
+-	#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2))
++	#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2) || defined(BUILD_OPENWRT))
+ 	if (wdev->connected) {
+ 	#else
+ 	if (wdev->current_bss) {
-- 
2.40.1


From a4b122642765e27c258ac041e7f9f62a03dbe9f7 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Sat, 28 Jan 2023 23:41:44 -0500
Subject: [PATCH 23/38] iwinfo: add rtl8812/14/21au devices

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../patches/0004-add-rtl8812au-devices.patch  | 86 +++++++++++++++++++
 1 file changed, 86 insertions(+)
 create mode 100644 package/network/utils/iwinfo/patches/0004-add-rtl8812au-devices.patch

diff --git a/package/network/utils/iwinfo/patches/0004-add-rtl8812au-devices.patch b/package/network/utils/iwinfo/patches/0004-add-rtl8812au-devices.patch
new file mode 100644
index 0000000000..43feb6412b
--- /dev/null
+++ b/package/network/utils/iwinfo/patches/0004-add-rtl8812au-devices.patch
@@ -0,0 +1,86 @@
+diff --git a/devices.txt b/devices.txt
+index 82d8421..f4408c2 100644
+--- a/devices.txt
++++ b/devices.txt
+@@ -192,6 +192,7 @@
+ 0x14e4 0xaa52 0x14e4 0xaa52    0      0  "Broadcom" "BCM43602"
+ 0x02d0 0xa9a6 0x0000 0x0000    0      0  "Cypress"  "CYW43455"
+ 0x1ae9 0x0310 0x1ae9 0x0000    0      0  "Wilocity" "Wil6210"
++0x02d0 0xa9bf 0x0000 0x0000    0      0  "Broadcom" "BCM43456"
+ 
+ # USB devices
+ # 0x0000 | 0x0000 | vendor id | product id | ...
+@@ -236,7 +237,72 @@
+ # mt7615/usb.c
+ 0x0000 0x0000 0x0e8d 0x7663    0      0  "MediaTek" "MT7663U"
+ 0x0000 0x0000 0x043e 0x310c    0      0  "LG" "LGSBWAC02"
+-
++# RTL8812A
++0x0000 0x0000 0x0409 0x0408    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x0411 0x025D    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x04BB 0x0952    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x050D 0x1106    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x050D 0x1109    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x0586 0x3426    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x0789 0x016E    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x07B8 0x8812    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x0846 0x9051    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x0B05 0x17D2    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x0DF6 0x0074    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x0E66 0x0022    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x1058 0x0632    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x13B1 0x003F    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x148F 0x9097    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x1740 0x0100    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2001 0x330E    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2001 0x3313    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2001 0x3315    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2001 0x3316    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2019 0xAB30    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x20F4 0x805B    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2357 0x0101    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2357 0x0103    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2357 0x010D    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2357 0x010E    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2357 0x010F    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2357 0x0122    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x2604 0x0012    0      0  "Realtek" "RTL8812"
++0x0000 0x0000 0x7392 0xA822    0      0  "Realtek" "RTL8812"
++# RTL8814A
++0x0000 0x0000 0x0B05 0x1817    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x0B05 0x1852    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x0B05 0x1853    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x056E 0x400B    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x056E 0x400D    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x0846 0x9054    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x0E66 0x0026    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x2001 0x331A    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x20F4 0x809A    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x20F4 0x809B    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x2357 0x0106    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x7392 0xA834    0      0  "Realtek" "RTL8814A"
++0x0000 0x0000 0x7392 0xA833    0      0  "Realtek" "RTL8814A"
++# RTL8821A
++0x0000 0x0000 0x0bda 0x0811    0      0  "Realtek" "RTL8821" /* Alfa AWUS036ACS */
++0x0000 0x0000 0x0411 0x0242    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x0411 0x029B    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x04BB 0x0953    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x056E 0x4007    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x056E 0x400E    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x056E 0x400F    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x0846 0x9052    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x0E66 0x0023    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x2001 0x3314    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x2001 0x3318    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x2019 0xAB32    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x2357 0x011E    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x2357 0x011F    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x2357 0x0120    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x3823 0x6249    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x7392 0xA811    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x7392 0xA812    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x7392 0xA813    0      0  "Realtek" "RTL8821"
++0x0000 0x0000 0x7392 0xB611    0      0  "Realtek" "RTL8821"
+ # FDT compatible strings
+ # "compatible" | txpower offset | frequency offset | ...
+ "qca,ar9130-wmac"       0      0  "Atheros"  "AR9130"
-- 
2.40.1


From 84cb2e98f2214d6aeb17c263ac7028d10f07c1a0 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Thu, 23 Feb 2023 19:04:52 -0500
Subject: [PATCH 24/38] linux-firmware: add realtek bluetooth

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 package/firmware/linux-firmware/realtek.mk | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/package/firmware/linux-firmware/realtek.mk b/package/firmware/linux-firmware/realtek.mk
index b4880b6a7f..8329f36f91 100644
--- a/package/firmware/linux-firmware/realtek.mk
+++ b/package/firmware/linux-firmware/realtek.mk
@@ -116,6 +116,16 @@ define Package/rtl8761bu-firmware/install
 endef
 $(eval $(call BuildPackage,rtl8761bu-firmware))
 
+Package/realtek-bluetooth-firmware = $(call Package/firmware-default,RealTek bluetooth firmware)
+define Package/realtek-bluetooth-firmware/install
+	$(INSTALL_DIR) $(1)/lib/firmware/rtl_bt
+	$(CP) \
+		$(PKG_BUILD_DIR)/rtl_bt/* \
+		$(1)/lib/firmware/rtl_bt
+endef
+$(eval $(call BuildPackage,realtek-bluetooth-firmware))
+
+
 Package/rtl8821ae-firmware = $(call Package/firmware-default,RealTek RTL8821AE firmware)
 define Package/rtl8821ae-firmware/install
 	$(INSTALL_DIR) $(1)/lib/firmware/rtlwifi
-- 
2.40.1


From b6b4be033805754251ef6e8f8eca73157beb90c1 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Tue, 14 Nov 2023 00:41:15 -0500
Subject: [PATCH 25/38] mac80211: add realtek rtw89 driver

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 package/kernel/mac80211/realtek.mk | 45 +++++++++++++++++++++++++++++-
 1 file changed, 44 insertions(+), 1 deletion(-)

diff --git a/package/kernel/mac80211/realtek.mk b/package/kernel/mac80211/realtek.mk
index 04057b3106..40af2f0f4a 100644
--- a/package/kernel/mac80211/realtek.mk
+++ b/package/kernel/mac80211/realtek.mk
@@ -3,7 +3,7 @@ PKG_DRIVERS += \
 	rtl8192ce rtl8192se rtl8192de rtl8192cu rtl8723bs rtl8821ae \
 	rtl8xxxu rtw88 rtw88-pci rtw88-usb rtw88-8821c rtw88-8822b rtw88-8822c \
 	rtw88-8723d rtw88-8821ce rtw88-8821cu rtw88-8822be rtw88-8822bu \
-	rtw88-8822ce rtw88-8822cu rtw88-8723de
+	rtw88-8822ce rtw88-8822cu rtw88-8723de rtw89
 
 config-$(call config_package,rtlwifi) += RTL_CARDS RTLWIFI
 config-$(call config_package,rtlwifi-pci) += RTLWIFI_PCI
@@ -40,6 +40,12 @@ config-$(call config_package,rtw88-8723de) += RTW88_8723DE
 config-$(CONFIG_PACKAGE_RTW88_DEBUG) += RTW88_DEBUG
 config-$(CONFIG_PACKAGE_RTW88_DEBUGFS) += RTW88_DEBUGFS
 
+config-$(call config_package,rtw89) += RTW89 RTW89_CORE RTW89_PCI
+config-y += RTW89_8852AE RTW89_8852BE RTW89_8852CE
+config-$(CONFIG_PACKAGE_RTW89_DEBUG) += RTW89_DEBUG
+config-$(CONFIG_PACKAGE_RTW89_DEBUGFS) += RTW89_DEBUGFS
+config-$(CONFIG_PACKAGE_RTW89_DEBUGMSG) += RTW89_DEBUGMSG
+
 define KernelPackage/rtlwifi/config
 	config PACKAGE_RTLWIFI_DEBUG
 		bool "Realtek wireless debugging"
@@ -312,3 +318,40 @@ define KernelPackage/rtl8723bs/description
  on the 1st gen Intel Compute Stick, the CHIP and many other Intel Atom and ARM
  based devices.
 endef
+
+define KernelPackage/rtw89/config
+	config PACKAGE_RTW89_DEBUG
+		bool "Realtek wireless debugging (rtw89)"
+		depends on PACKAGE_kmod-rtw89
+		help
+		  Enable debugging output for rtw89 devices
+
+	config PACKAGE_RTW89_DEBUGFS
+		bool "Enable rtw89 debugfs support"
+		select KERNEL_DEBUG_FS
+		depends on PACKAGE_kmod-rtw89
+		help
+		  Select this to see extensive information about
+		  the internal state of rtw89 in debugfs.
+	config PACKAGE_RTW89_DEBUGMSG
+		bool "Realtek rtw89 debug message support"
+		depends on PACKAGE_kmod-rtw89
+		help
+		  Enable debug message support
+endef
+
+define KernelPackage/rtw89
+  $(call KernelPackage/mac80211/Default)
+  TITLE:=Realtek RTL8852AE/BE/CE
+  DEPENDS+= @(PCI_SUPPORT) +kmod-mac80211 +@DRIVER_11AX_SUPPORT +rtl8851be-firmware +rtl8852ae-firmware +rtl8852be-firmware +rtl8852ce-firmware
+  FILES:=\
+	$(PKG_BUILD_DIR)/drivers/net/wireless/realtek/rtw89/rtw89_8852a.ko \
+	$(PKG_BUILD_DIR)/drivers/net/wireless/realtek/rtw89/rtw89_8852ae.ko \
+	$(PKG_BUILD_DIR)/drivers/net/wireless/realtek/rtw89/rtw89_8852b.ko \
+	$(PKG_BUILD_DIR)/drivers/net/wireless/realtek/rtw89/rtw89_8852be.ko \
+	$(PKG_BUILD_DIR)/drivers/net/wireless/realtek/rtw89/rtw89_8852c.ko \
+	$(PKG_BUILD_DIR)/drivers/net/wireless/realtek/rtw89/rtw89_8852ce.ko \
+	$(PKG_BUILD_DIR)/drivers/net/wireless/realtek/rtw89/rtw89_core.ko \
+	$(PKG_BUILD_DIR)/drivers/net/wireless/realtek/rtw89/rtw89_pci.ko
+  AUTOLOAD:=$(call AutoProbe,rtw89_8852ae rtw89_8852be rtw89_8852ce)
+endef
-- 
2.40.1


From aa29249b3efd392864f4c19a8c07a42b4d2baf6c Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Tue, 7 Mar 2023 16:58:59 -0500
Subject: [PATCH 26/38] iwinfo: add rtl8852ae

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../iwinfo/patches/0005-add-realtek-rtl8852ae.patch    | 10 ++++++++++
 1 file changed, 10 insertions(+)
 create mode 100644 package/network/utils/iwinfo/patches/0005-add-realtek-rtl8852ae.patch

diff --git a/package/network/utils/iwinfo/patches/0005-add-realtek-rtl8852ae.patch b/package/network/utils/iwinfo/patches/0005-add-realtek-rtl8852ae.patch
new file mode 100644
index 0000000000..70aaed4146
--- /dev/null
+++ b/package/network/utils/iwinfo/patches/0005-add-realtek-rtl8852ae.patch
@@ -0,0 +1,10 @@
+--- a/devices.txt
++++ b/devices.txt
+@@ -194,6 +194,7 @@
+ 0x02d0 0xa9a6 0x0000 0x0000    0      0  "Cypress"  "CYW43455"
+ 0x1ae9 0x0310 0x1ae9 0x0000    0      0  "Wilocity" "Wil6210"
+ 0x02d0 0xa9bf 0x0000 0x0000    0      0  "Broadcom" "BCM43456"
++0x10ec 0x8852 0x1e26 0x007f    0      0  "Realtek" "RTL8852AE"
+ 
+ # USB devices
+ # 0x0000 | 0x0000 | vendor id | product id | ...
-- 
2.40.1


From 5335bc95e9e221ba64faa2bd6c312443d9f1486a Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Tue, 25 Jul 2023 12:19:46 -0400
Subject: [PATCH 27/38] iwinfo:devices: add device id for TP-Link T3u Plus

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 ...s-add-device-id-for-TP-Link-T3u-Plus.patch | 21 +++++++++++++++++++
 1 file changed, 21 insertions(+)
 create mode 100644 package/network/utils/iwinfo/patches/0006-devices-add-device-id-for-TP-Link-T3u-Plus.patch

diff --git a/package/network/utils/iwinfo/patches/0006-devices-add-device-id-for-TP-Link-T3u-Plus.patch b/package/network/utils/iwinfo/patches/0006-devices-add-device-id-for-TP-Link-T3u-Plus.patch
new file mode 100644
index 0000000000..51a0d274c0
--- /dev/null
+++ b/package/network/utils/iwinfo/patches/0006-devices-add-device-id-for-TP-Link-T3u-Plus.patch
@@ -0,0 +1,21 @@
+From 0a51ed9d7cd60a20e981fa058271cba48c94ed66 Mon Sep 17 00:00:00 2001
+From: Marty Jones <mj8263788@gmail.com>
+Date: Tue, 25 Jul 2023 11:59:27 -0400
+Subject: [PATCH 4/4] devices: add device id for TP-Link T3u Plus
+
+Signed-off-by: Marty Jones <mj8263788@gmail.com>
+---
+ devices.txt | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/devices.txt
++++ b/devices.txt
+@@ -302,6 +302,8 @@
+ 0x0000 0x0000 0x7392 0xA812    0      0  "Realtek" "RTL8821"
+ 0x0000 0x0000 0x7392 0xA813    0      0  "Realtek" "RTL8821"
+ 0x0000 0x0000 0x7392 0xB611    0      0  "Realtek" "RTL8821"
++# RTW88 USB
++0x0000 0x0000 0x2357 0x0138    0      0  "Realtek" "RTW88" /* TP-Link T3u Plus */
+ # FDT compatible strings
+ # "compatible" | txpower offset | frequency offset | ...
+ "qca,ar9130-wmac"       0      0  "Atheros"  "AR9130"
-- 
2.40.1


From 725aed30b5c55bf8de2e252a15819c732ef2140e Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Sun, 25 Jun 2023 17:38:27 -0400
Subject: [PATCH 28/38] arm-trusted-firmware-rockchip: update to v2.9.0

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../arm-trusted-firmware-rockchip/Makefile    | 72 +++++++------------
 1 file changed, 25 insertions(+), 47 deletions(-)

diff --git a/package/boot/arm-trusted-firmware-rockchip/Makefile b/package/boot/arm-trusted-firmware-rockchip/Makefile
index aaae4ce392..af24b8ddde 100644
--- a/package/boot/arm-trusted-firmware-rockchip/Makefile
+++ b/package/boot/arm-trusted-firmware-rockchip/Makefile
@@ -7,66 +7,44 @@
 
 include $(TOPDIR)/rules.mk
 
-PKG_VERSION:=2.9
+PKG_NAME:=arm-trusted-firmware-rockchip
+PKG_VERSION:=2.9.0
 PKG_RELEASE:=1
 
-PKG_HASH:=76a66a1de0c01aeb83dfc7b72b51173fe62c6e51d6fca17cc562393117bed08b
+PKG_SOURCE:=atf-v$(PKG_VERSION).tar.gz
+PKG_SOURCE_URL:=https://github.com/mj22226/atf/releases/download/v$(PKG_VERSION)-1686372922/atf-v$(PKG_VERSION).tar.gz?
+PKG_HASH:=d5b299c63e24477bef981adaccaea5c273661ecaf4fe6f4a7113d2c3a22fbf1f
+
+PKG_LICENSE:=BSD-3-Clause
+PKG_LICENSE_FILES:=license.md
 
 PKG_MAINTAINER:=Tobias Maedel <openwrt@tbspace.de>
 
-include $(INCLUDE_DIR)/kernel.mk
-include $(INCLUDE_DIR)/trusted-firmware-a.mk
+MAKE_PATH:=$(PKG_NAME)
+
 include $(INCLUDE_DIR)/package.mk
 
-define Trusted-Firmware-A/Default
-  NAME:=Rockchip $(1) SoCs
-  BUILD_TARGET:=rockchip
+define Package/arm-trusted-firmware-rockchip
+    SECTION:=boot
+    CATEGORY:=Boot Loaders
+    TITLE:=ARM Trusted Firmware for Rockchip
+    DEPENDS:=@TARGET_rockchip_armv8
 endef
 
-define Trusted-Firmware-A/rk3328
-  BUILD_SUBTARGET:=armv8
-  PLAT=rk3328
+define Build/Prepare
+	$(TAR) -C $(PKG_BUILD_DIR) -xf $(DL_DIR)/$(PKG_SOURCE)
 endef
 
-define Trusted-Firmware-A/rk3399
-  BUILD_SUBTARGET:=armv8
-  PLAT:=rk3399
+define Build/Compile
 endef
 
-TFA_TARGETS:= \
-	rk3328 \
-	rk3399
-
-ifeq ($(BUILD_VARIANT),rk3399)
-  M0_GCC_NAME:=gcc-arm
-  M0_GCC_RELEASE:=11.2-2022.02
-  M0_GCC_VERSION:=$(HOST_ARCH)-arm-none-eabi
-  M0_GCC_SOURCE:=$(M0_GCC_NAME)-$(M0_GCC_RELEASE)-$(M0_GCC_VERSION).tar.xz
-
-  define Download/m0-gcc
-    FILE:=$(M0_GCC_SOURCE)
-    URL:=https://developer.arm.com/-/media/Files/downloads/gnu/$(M0_GCC_RELEASE)/binrel
-  ifeq ($(HOST_ARCH),aarch64)
-    HASH:=ef1d82e5894e3908cb7ed49c5485b5b95deefa32872f79c2b5f6f5447cabf55f
-  else
-    HASH:=8c5acd5ae567c0100245b0556941c237369f210bceb196edfe5a2e7532c60326
-  endif
-  endef
-
-  define Build/Prepare
-	$(eval $(call Download,m0-gcc))
-	$(call Build/Prepare/Default)
-
-	xzcat $(DL_DIR)/$(M0_GCC_SOURCE) | $(HOST_TAR) -C $(PKG_BUILD_DIR)/ $(TAR_OPTIONS)
-  endef
-
-  TFA_MAKE_FLAGS+= \
-    M0_CROSS_COMPILE=$(PKG_BUILD_DIR)/$(M0_GCC_NAME)-$(M0_GCC_RELEASE)-$(M0_GCC_VERSION)/bin/arm-none-eabi-
-endif
+define Build/InstallDev
+	$(INSTALL_DIR) -p $(STAGING_DIR_IMAGE)
+	$(CP) $(PKG_BUILD_DIR)/rk*.elf $(STAGING_DIR_IMAGE)/
+	$(CP) $(PKG_BUILD_DIR)/rk*.bin $(STAGING_DIR_IMAGE)/
+endef
 
-define Package/trusted-firmware-a/install
-	$(INSTALL_DIR) $(STAGING_DIR_IMAGE)
-	$(INSTALL_DATA) $(PKG_BUILD_DIR)/build/$(PLAT)/release/bl31/bl31.elf $(STAGING_DIR_IMAGE)/$(BUILD_VARIANT)_bl31.elf
+define Package/arm-trusted-firmware-rockchip/install
 endef
 
-$(eval $(call BuildPackage/Trusted-Firmware-A))
+$(eval $(call BuildPackage,arm-trusted-firmware-rockchip))
-- 
2.40.1


From 4e9e36a3235d3b69c7aa2fffaab6562e6d16e44c Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Thu, 27 Apr 2023 21:08:38 -0400
Subject: [PATCH 29/38] rockchip: add FriendlyElec NanoPi R6C

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../rockchip/armv8/base-files/etc/board.d/01_leds      |  5 +++++
 .../rockchip/armv8/base-files/etc/board.d/02_network   |  6 +++++-
 .../base-files/etc/hotplug.d/net/40-net-smp-affinity   |  4 ++++
 target/linux/rockchip/image/armv8.mk                   | 10 ++++++++++
 target/linux/rockchip/image/nanopi-r6c.bootscript      |  8 ++++++++
 5 files changed, 32 insertions(+), 1 deletion(-)
 create mode 100644 target/linux/rockchip/image/nanopi-r6c.bootscript

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index dd6836435b..3e08f61617 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -29,6 +29,11 @@ friendlyelec,nanopi-r5s)
 	ucidef_set_led_netdev "lan1" "LAN1" "green:lan1" "eth1"
 	ucidef_set_led_netdev "lan2" "LAN2" "green:lan2" "eth2"
 	;;
+friendlyelec,nanopi-r6c)
+	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth0"
+	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth1"
+	ucidef_set_led_netdev "led1" "LED1" "green:led1" "eth2"
+	;;
 pine64,quartz64-a)
 	ucidef_set_led_netdev "lan" "LAN" "work-led" "br-lan"
 	;;
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index b88eeaf026..6f72b23b34 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -17,6 +17,9 @@ rockchip_setup_interfaces()
 	friendlyelec,nanopi-r5s)
 		ucidef_set_interfaces_lan_wan 'eth1 eth2' 'eth0'
 		;;
+	friendlyelec,nanopi-r6c)
+		ucidef_set_interfaces_lan_wan 'eth1' 'eth0'
+		;;
 	pine64,rockpro64|\
 	pine64,rockpro64-v2.1|\
 	pine64,quartz64-a|\
@@ -51,7 +54,7 @@ nanopi_r4s_get_mac()
 			address=$(macaddr_setbit_la "$address")
 		fi
 	else
-		address=$(macaddr_generate_from_mmc_cid mmcblk1)
+		address=$(macaddr_generate_from_mmc_cid mmcblk*)
 		if [ "$interface" = "lan" ]; then
 			address=$(macaddr_add "$address" 1)
 		fi
@@ -72,6 +75,7 @@ rockchip_setup_macs()
 		wan_mac=$(macaddr_generate_from_mmc_cid mmcblk0)
 		lan_mac=$(macaddr_add "$wan_mac" 1)
 		;;
+	friendlyelec,nanopi-r6c|\
 	friendlyarm,nanopi-r4s)
 		wan_mac=$(nanopi_r4s_get_mac wan)
 		lan_mac=$(nanopi_r4s_get_mac lan)
diff --git a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
index 08736c99b0..1d1cd13761 100644
--- a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
+++ b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
@@ -46,6 +46,10 @@ friendlyelec,nanopi-r5s)
 	set_interface_core 4 "eth1"
 	set_interface_core 8 "eth2"
 	;;
+friendlyelec,nanopi-r6c)
+	set_interface_core 2 "eth0"
+	set_interface_core 4 "eth1"
+	;;
 rockchip,rk3568-bpi-r2pro)
 	set_interface_core 1 "eth0"
 	set_interface_core 3 "eth1"
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index e7fdeb0ed3..93ac90dafe 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -65,6 +65,16 @@ define Device/friendlyelec_nanopi-r5s
 endef
 TARGET_DEVICES += friendlyelec_nanopi-r5s
 
+define Device/friendlyelec_nanopi-r6c
+  DEVICE_VENDOR := Friendlyelec
+  DEVICE_MODEL := NanoPi R6C
+  SOC := rk3588s
+  UBOOT_DEVICE_NAME := nanopi-r6c-rk3588
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r6c | pine64-img | gzip | append-metadata
+  DEVICE_PACKAGES := kmod-r8169
+endef
+TARGET_DEVICES += friendlyelec_nanopi-r6c
+
 define Device/pine64_rockpro64
   DEVICE_VENDOR := Pine64
   DEVICE_MODEL := RockPro64
diff --git a/target/linux/rockchip/image/nanopi-r6c.bootscript b/target/linux/rockchip/image/nanopi-r6c.bootscript
new file mode 100644
index 0000000000..17d9b68059
--- /dev/null
+++ b/target/linux/rockchip/image/nanopi-r6c.bootscript
@@ -0,0 +1,8 @@
+part uuid mmc ${devnum}:2 uuid
+
+setenv bootargs "console=ttyS2,1500000 earlycon=uart8250,mmio32,0xfeb50000 root=PARTUUID=${uuid} rw rootwait"
+
+
+load mmc ${devnum}:1 ${kernel_addr_r} kernel.img
+
+bootm ${kernel_addr_r}
-- 
2.40.1


From 5abbf875bbcb320677282e5dc3ca9b4e3f4acae8 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Thu, 27 Apr 2023 22:08:42 -0400
Subject: [PATCH 30/38] rockchip: add FriendlyElec NanoPi R6S

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../rockchip/armv8/base-files/etc/board.d/01_leds      |  5 +++++
 .../rockchip/armv8/base-files/etc/board.d/02_network   |  4 ++++
 .../base-files/etc/hotplug.d/net/40-net-smp-affinity   |  5 +++++
 target/linux/rockchip/image/armv8.mk                   | 10 ++++++++++
 4 files changed, 24 insertions(+)

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index 3e08f61617..4abcef48d8 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -34,6 +34,11 @@ friendlyelec,nanopi-r6c)
 	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth1"
 	ucidef_set_led_netdev "led1" "LED1" "green:led1" "eth2"
 	;;
+friendlyelec,nanopi-r6s)
+	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth2"
+	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth0"
+	ucidef_set_led_netdev "lan2" "LAN2" "green:lan1" "eth1"
+	;;
 pine64,quartz64-a)
 	ucidef_set_led_netdev "lan" "LAN" "work-led" "br-lan"
 	;;
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index 6f72b23b34..fdaba1a15b 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -20,6 +20,9 @@ rockchip_setup_interfaces()
 	friendlyelec,nanopi-r6c)
 		ucidef_set_interfaces_lan_wan 'eth1' 'eth0'
 		;;
+	friendlyelec,nanopi-r6s)
+		ucidef_set_interfaces_lan_wan 'eth1 eth0' 'eth2'
+		;;
 	pine64,rockpro64|\
 	pine64,rockpro64-v2.1|\
 	pine64,quartz64-a|\
@@ -76,6 +79,7 @@ rockchip_setup_macs()
 		lan_mac=$(macaddr_add "$wan_mac" 1)
 		;;
 	friendlyelec,nanopi-r6c|\
+	friendlyelec,nanopi-r6s|\
 	friendlyarm,nanopi-r4s)
 		wan_mac=$(nanopi_r4s_get_mac wan)
 		lan_mac=$(nanopi_r4s_get_mac lan)
diff --git a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
index 1d1cd13761..891cbf6d5d 100644
--- a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
+++ b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
@@ -50,6 +50,11 @@ friendlyelec,nanopi-r6c)
 	set_interface_core 2 "eth0"
 	set_interface_core 4 "eth1"
 	;;
+friendlyelec,nanopi-r6s)
+	set_interface_core 1 "eth0"
+	set_interface_core 6 "eth1"
+	set_interface_core 8 "eth2"
+	;;
 rockchip,rk3568-bpi-r2pro)
 	set_interface_core 1 "eth0"
 	set_interface_core 3 "eth1"
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index 93ac90dafe..6a49307389 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -75,6 +75,16 @@ define Device/friendlyelec_nanopi-r6c
 endef
 TARGET_DEVICES += friendlyelec_nanopi-r6c
 
+define Device/friendlyelec_nanopi-r6s
+  DEVICE_VENDOR := Friendlyelec
+  DEVICE_MODEL := NanoPi R6S
+  SOC := rk3588s
+  UBOOT_DEVICE_NAME := nanopi-r6s-rk3588
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r6c | pine64-img | gzip | append-metadata
+  DEVICE_PACKAGES := kmod-r8169
+endef
+TARGET_DEVICES += friendlyelec_nanopi-r6s
+
 define Device/pine64_rockpro64
   DEVICE_VENDOR := Pine64
   DEVICE_MODEL := RockPro64
-- 
2.40.1


From a834d59598985ae241357a1706cc9e8eacfdfbe2 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Tue, 13 Jun 2023 02:51:51 -0400
Subject: [PATCH 31/38] rockchip: add FriendlyElec NanoPi R6C Plus

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../rockchip/armv8/base-files/etc/board.d/01_leds      |  5 +++++
 .../rockchip/armv8/base-files/etc/board.d/02_network   |  4 ++++
 .../base-files/etc/hotplug.d/net/40-net-smp-affinity   |  6 ++++++
 target/linux/rockchip/image/armv8.mk                   | 10 ++++++++++
 4 files changed, 25 insertions(+)

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index 4abcef48d8..45fc1577eb 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -39,6 +39,11 @@ friendlyelec,nanopi-r6s)
 	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth0"
 	ucidef_set_led_netdev "lan2" "LAN2" "green:lan1" "eth1"
 	;;
+friendlyelec,nanopi-r6c-plus)
+	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth2"
+	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth0"
+	ucidef_set_led_netdev "lan2" "LAN2" "green:lan1" "eth1"
+	;;
 pine64,quartz64-a)
 	ucidef_set_led_netdev "lan" "LAN" "work-led" "br-lan"
 	;;
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index fdaba1a15b..ad45ded9a7 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -23,6 +23,9 @@ rockchip_setup_interfaces()
 	friendlyelec,nanopi-r6s)
 		ucidef_set_interfaces_lan_wan 'eth1 eth0' 'eth2'
 		;;
+	friendlyelec,nanopi-r6c-plus)
+		ucidef_set_interfaces_lan_wan 'eth0 eth1 eth3' 'eth2'
+		;;
 	pine64,rockpro64|\
 	pine64,rockpro64-v2.1|\
 	pine64,quartz64-a|\
@@ -80,6 +83,7 @@ rockchip_setup_macs()
 		;;
 	friendlyelec,nanopi-r6c|\
 	friendlyelec,nanopi-r6s|\
+	friendlyelec,nanopi-r6c-plus|\
 	friendlyarm,nanopi-r4s)
 		wan_mac=$(nanopi_r4s_get_mac wan)
 		lan_mac=$(nanopi_r4s_get_mac lan)
diff --git a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
index 891cbf6d5d..9cd5c29810 100644
--- a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
+++ b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
@@ -55,6 +55,12 @@ friendlyelec,nanopi-r6s)
 	set_interface_core 6 "eth1"
 	set_interface_core 8 "eth2"
 	;;
+friendlyelec,nanopi-r6c-plus)
+	set_interface_core 1 "eth0"
+	set_interface_core 4 "eth1"
+	set_interface_core 6 "eth2"
+	set_interface_core 8 "eth3"
+	;;
 rockchip,rk3568-bpi-r2pro)
 	set_interface_core 1 "eth0"
 	set_interface_core 3 "eth1"
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index 6a49307389..31d10f5fa8 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -75,6 +75,16 @@ define Device/friendlyelec_nanopi-r6c
 endef
 TARGET_DEVICES += friendlyelec_nanopi-r6c
 
+define Device/friendlyelec_nanopi-r6c-plus
+  DEVICE_VENDOR := Friendlyelec
+  DEVICE_MODEL := NanoPi R6C Plus
+  SOC := rk3588s
+  UBOOT_DEVICE_NAME := nanopi-r6c-rk3588
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r6c | pine64-img | gzip | append-metadata
+  DEVICE_PACKAGES := kmod-r8169
+endef
+TARGET_DEVICES += friendlyelec_nanopi-r6c-plus
+
 define Device/friendlyelec_nanopi-r6s
   DEVICE_VENDOR := Friendlyelec
   DEVICE_MODEL := NanoPi R6S
-- 
2.40.1


From c4db16b823fbc7ad685d8ee71a1955047789e241 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Matt=20Marjanovi=C4=87?= <maddog@mir.com>
Date: Tue, 27 Jun 2023 13:52:51 -0700
Subject: [PATCH 32/38] rockchip: Fix port/LED order on NanoPi R6S
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This commit fixes the ethernet device and LED setup on the FriendlyElec
NanoPi R6S to match the physical layout/labels on the case of the device.

The actual case-label, ethernet device, and underlying NIC device,
from left-to-right on back of case:
 * "LAN2" - eth0 - rk_gmac-dwmac fe1c0000.ethernet
 * "LAN1" - eth2 - r8169 0004:41:00.0
 * "WAN"  - eth1 - r8169 0003:31:00.0

The actual case-label and LED sys-name, from left-to-right on the
front of case:
 * "WAN" - "green:wan"
 * "1"   - "green:lan"
 * "2"   - "green:lan1"

(This is the layout on my R6S box; I assume it is the same for all boxes,
but I have no idea how "ethN" device names are assigned to the underlying
NIC hardware.)

I don't think any change to the smp-affinity is required, since this
commit swaps the use of the eth1 and eth2 devices, which were already
both assigned to the "big" cores (as I understand it).

Signed-off-by: Matt Marjanović <maddog@mir.com>
Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 target/linux/rockchip/armv8/base-files/etc/board.d/01_leds  | 6 +++---
 .../linux/rockchip/armv8/base-files/etc/board.d/02_network  | 2 +-
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index 45fc1577eb..f1fd935e91 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -35,9 +35,9 @@ friendlyelec,nanopi-r6c)
 	ucidef_set_led_netdev "led1" "LED1" "green:led1" "eth2"
 	;;
 friendlyelec,nanopi-r6s)
-	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth2"
-	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth0"
-	ucidef_set_led_netdev "lan2" "LAN2" "green:lan1" "eth1"
+	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth1"
+	ucidef_set_led_netdev "lan" "LAN" "green:lan" "eth2"
+	ucidef_set_led_netdev "lan2" "LAN2" "green:lan1" "eth0"
 	;;
 friendlyelec,nanopi-r6c-plus)
 	ucidef_set_led_netdev "wan" "WAN" "green:wan" "eth2"
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index ad45ded9a7..2cf141aad0 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -21,7 +21,7 @@ rockchip_setup_interfaces()
 		ucidef_set_interfaces_lan_wan 'eth1' 'eth0'
 		;;
 	friendlyelec,nanopi-r6s)
-		ucidef_set_interfaces_lan_wan 'eth1 eth0' 'eth2'
+		ucidef_set_interfaces_lan_wan 'eth2 eth0' 'eth1'
 		;;
 	friendlyelec,nanopi-r6c-plus)
 		ucidef_set_interfaces_lan_wan 'eth0 eth1 eth3' 'eth2'
-- 
2.40.1


From 924bf072b2f3cafaa42e47d26e88b5823a71e211 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Mon, 16 Oct 2023 10:29:55 -0400
Subject: [PATCH 33/38] rockchip: add orange pi 5 plus

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 .../armv8/base-files/etc/board.d/02_network   |   8 +-
 .../etc/hotplug.d/net/40-net-smp-affinity     |   4 +
 .../dts/rockchip/rk3588-orangepi-5-plus.dts   | 983 ++++++++++++++++++
 target/linux/rockchip/image/armv8.mk          |  11 +
 4 files changed, 1004 insertions(+), 2 deletions(-)
 create mode 100644 target/linux/rockchip/files/arch/arm64/boot/dts/rockchip/rk3588-orangepi-5-plus.dts

diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index 2cf141aad0..bc59bae662 100644
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -32,11 +32,14 @@ rockchip_setup_interfaces()
 	radxa,rock3a)
 		ucidef_set_interfaces_lan_wan 'eth0' 'eth1'
 		;;
+	rockchip,rk3588-orangepi-5-plus)
+		ucidef_set_interfaces_lan_wan 'eth0' 'eth1'
+		;;
 	rockchip,rk3568-bpi-r2pro)
 		ucidef_set_interfaces_lan_wan 'lan0 lan1 lan2 lan3' 'eth0'
 		;;
 	*)
-		ucidef_set_interface_lan 'eth0'
+		ucidef_set_interfaces_lan_wan 'eth0' 'eth1'
 		;;
 	esac
 }
@@ -84,7 +87,8 @@ rockchip_setup_macs()
 	friendlyelec,nanopi-r6c|\
 	friendlyelec,nanopi-r6s|\
 	friendlyelec,nanopi-r6c-plus|\
-	friendlyarm,nanopi-r4s)
+	friendlyarm,nanopi-r4s|\
+	rockchip,rk3588-orangepi-5-plus)
 		wan_mac=$(nanopi_r4s_get_mac wan)
 		lan_mac=$(nanopi_r4s_get_mac lan)
 		;;
diff --git a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
index 9cd5c29810..8d704109dc 100644
--- a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
+++ b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
@@ -65,5 +65,9 @@ rockchip,rk3568-bpi-r2pro)
 	set_interface_core 1 "eth0"
 	set_interface_core 3 "eth1"
 	;;
+rockchip,rk3588-orangepi-5-plus)
+	set_interface_core 20 "eth0"
+	set_interface_core 40 "eth1"
+	;;
 esac
 
diff --git a/target/linux/rockchip/files/arch/arm64/boot/dts/rockchip/rk3588-orangepi-5-plus.dts b/target/linux/rockchip/files/arch/arm64/boot/dts/rockchip/rk3588-orangepi-5-plus.dts
new file mode 100644
index 0000000000..66ee2bb462
--- /dev/null
+++ b/target/linux/rockchip/files/arch/arm64/boot/dts/rockchip/rk3588-orangepi-5-plus.dts
@@ -0,0 +1,983 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+
+/dts-v1/;
+
+#include <dt-bindings/pinctrl/rockchip.h>
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/input/input.h>
+#include <dt-bindings/usb/pd.h>
+#include "rk3588.dtsi"
+
+/ {
+	model = "RK3588 OPi 5 Plus";
+	compatible = "rockchip,rk3588-orangepi-5-plus", "rockchip,rk3588";
+
+	aliases {
+		mmc0 = &sdmmc;
+		mmc1 = &sdhci;
+		serial2 = &uart2;
+	};
+
+	chosen {
+		stdout-path = "serial2:1500000n8";
+	};
+
+	gpio_leds: leds {
+		compatible = "gpio-leds";
+		pinctrl-names = "default";
+		pinctrl-0 =<&leds_rgb>;
+		status = "okay";
+
+		blue_led@1 {
+			gpios = <&gpio3 RK_PA6 GPIO_ACTIVE_HIGH>;
+			label = "blue_led";
+			linux,default-trigger = "heartbeat";
+			linux,default-trigger-delay-ms = <0>;
+		};
+
+		green_led@2 {
+			gpios = <&gpio3 RK_PB1 GPIO_ACTIVE_HIGH>;
+			label = "green_led";
+			linux,default-trigger = "heartbeat";
+			linux,default-trigger-delay-ms = <0>;
+		};
+	};
+
+	fan: pwm-fan {
+		compatible = "pwm-fan";
+		cooling-levels = <0 70 75 80 100>;
+		fan-supply = <&vcc5v0_sys>;
+		pwms = <&pwm3 0 50000 0>;
+		#cooling-cells = <2>;
+	};
+
+	vcc12v_dcin: vcc12v-dcin-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc12v_dcin";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <12000000>;
+		regulator-max-microvolt = <12000000>;
+	};
+
+	vcc5v0_sys: vcc5v0-sys-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc5v0_sys";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		vin-supply = <&vcc12v_dcin>;
+	};
+
+	vcc_1v1_nldo_s3: vcc-1v1-nldo-s3-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc_1v1_nldo_s3";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <1100000>;
+		regulator-max-microvolt = <1100000>;
+		vin-supply = <&vcc5v0_sys>;
+	};
+
+	vcc_3v3_sd_s0: vcc-3v3-sd-s0 {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc_3v3_sd_s0";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpios = <&gpio3 RK_PD5 GPIO_ACTIVE_LOW>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&sdmmc_pwr>;
+		enable-active-low;
+	};
+
+	vcc5v0_usbdcin: vcc5v0-usbdcin-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc5v0_usbdcin";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		vin-supply = <&vcc12v_dcin>;
+	};
+
+	vcc5v0_usb: vcc5v0-usb-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc5v0_usb";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		vin-supply = <&vcc5v0_usbdcin>;
+	};
+
+	vbus5v0_typec: vbus5v0-typec-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vbus5v0_typec";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		enable-active-high;
+		gpio = <&gpio4 RK_PB0 GPIO_ACTIVE_HIGH>;
+		vin-supply = <&vcc5v0_usb>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&typec5v_pwren>;
+	};
+
+	pcie20_avdd0v85: pcie20-avdd0v85-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "pcie20_avdd0v85";
+		regulator-boot-on;
+		regulator-always-on;
+		regulator-min-microvolt = <850000>;
+		regulator-max-microvolt = <850000>;
+		vin-supply = <&vdd_0v85_s0>;
+	};
+
+	pcie20_avdd1v8: pcie20-avdd1v8-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "pcie20_avdd1v8";
+		regulator-boot-on;
+		regulator-always-on;
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <1800000>;
+		vin-supply = <&avcc_1v8_s0>;
+	};
+
+	pcie30_avdd0v75: pcie30-avdd0v75-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "pcie30_avdd0v75";
+		regulator-boot-on;
+		regulator-always-on;
+		regulator-min-microvolt = <750000>;
+		regulator-max-microvolt = <750000>;
+		vin-supply = <&avdd_0v75_s0>;
+	};
+
+	pcie30_avdd1v8: pcie30-avdd1v8-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "pcie30_avdd1v8";
+		regulator-boot-on;
+		regulator-always-on;
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <1800000>;
+		vin-supply = <&avcc_1v8_s0>;
+	};
+
+	vcc3v3_pcie30: vcc3v3-pcie30-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc3v3_pcie30";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		enable-active-high;
+		gpios = <&gpio2 RK_PB6 GPIO_ACTIVE_HIGH>;
+		startup-delay-us = <5000>;
+		vin-supply = <&vcc5v0_sys>;
+	};
+
+	vcc3v3_pcie2x1l0: vcc3v3-pcie2x1l0-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc3v3_pcie2x1l0";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		enable-active-high;
+		gpios = <&gpio2 RK_PC5 GPIO_ACTIVE_HIGH>;
+		startup-delay-us = <50000>;
+		vin-supply = <&vcc12v_dcin>;
+	};
+
+	vcc3v3_pcie_eth: vcc3v3-pcie-eth-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc3v3_pcie_eth";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-boot-on;
+		regulator-always-on;
+		enable-active-low;
+		gpios = <&gpio3 RK_PB4 GPIO_ACTIVE_LOW>;
+		startup-delay-us = <50000>;
+		vin-supply = <&vcc12v_dcin>;
+	};
+
+	vcc5v0_host: vcc5v0-host-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc5v0_host";
+		regulator-boot-on;
+		regulator-always-on;
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		enable-active-high;
+		gpio = <&gpio3 RK_PB7 GPIO_ACTIVE_HIGH>;
+		vin-supply = <&vcc5v0_usb>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&vcc5v0_host_en>;
+	};
+};
+
+&combphy0_ps {
+	status = "okay";
+};
+
+&combphy1_ps {
+	status = "okay";
+};
+
+&combphy2_psu {
+	status = "okay";
+};
+
+&cpu_b0 {
+	cpu-supply = <&vdd_cpu_big0_s0>;
+	mem-supply = <&vdd_cpu_big0_mem_s0>;
+};
+
+&cpu_b1 {
+	cpu-supply = <&vdd_cpu_big0_s0>;
+	mem-supply = <&vdd_cpu_big0_mem_s0>;
+};
+
+&cpu_b2 {
+	cpu-supply = <&vdd_cpu_big1_s0>;
+	mem-supply = <&vdd_cpu_big1_mem_s0>;
+};
+
+&cpu_b3 {
+	cpu-supply = <&vdd_cpu_big1_s0>;
+	mem-supply = <&vdd_cpu_big1_mem_s0>;
+};
+
+&cpu_l0 {
+	cpu-supply = <&vdd_cpu_lit_s0>;
+	mem-supply = <&vdd_cpu_lit_mem_s0>;
+};
+
+&cpu_l1 {
+	cpu-supply = <&vdd_cpu_lit_s0>;
+	mem-supply = <&vdd_cpu_lit_mem_s0>;
+};
+
+&cpu_l2 {
+	cpu-supply = <&vdd_cpu_lit_s0>;
+	mem-supply = <&vdd_cpu_lit_mem_s0>;
+};
+
+&cpu_l3 {
+	cpu-supply = <&vdd_cpu_lit_s0>;
+	mem-supply = <&vdd_cpu_lit_mem_s0>;
+};
+
+&i2c0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&i2c0m2_xfer>;
+	status = "okay";
+
+	vdd_cpu_big0_s0: vdd_cpu_big0_mem_s0: regulator@42 {
+		compatible = "rockchip,rk8602";
+		reg = <0x42>;
+		fcs,suspend-voltage-selector = <1>;
+		regulator-name = "vdd_cpu_big0_s0";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <550000>;
+		regulator-max-microvolt = <1050000>;
+		regulator-ramp-delay = <2300>;
+		vin-supply = <&vcc5v0_sys>;
+
+		regulator-state-mem {
+			regulator-off-in-suspend;
+		};
+	};
+
+	vdd_cpu_big1_s0: vdd_cpu_big1_mem_s0: regulator@43 {
+		compatible = "rockchip,rk8603", "rockchip,rk8602";
+		reg = <0x43>;
+		fcs,suspend-voltage-selector = <1>;
+		regulator-name = "vdd_cpu_big1_s0";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <550000>;
+		regulator-max-microvolt = <1050000>;
+		regulator-ramp-delay = <2300>;
+		vin-supply = <&vcc5v0_sys>;
+
+		regulator-state-mem {
+			regulator-off-in-suspend;
+		};
+	};
+};
+
+&i2c1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&i2c1m2_xfer>;
+	status = "okay";
+
+	vdd_npu_s0: vdd_npu_mem_s0: rk8602@42 {
+		compatible = "rockchip,rk8602";
+		reg = <0x42>;
+		vin-supply = <&vcc5v0_sys>;
+		regulator-compatible = "rk860x-reg";
+		regulator-name = "vdd_npu_s0";
+		regulator-min-microvolt = <550000>;
+		regulator-max-microvolt = <950000>;
+		regulator-ramp-delay = <2300>;
+		rockchip,suspend-voltage-selector = <1>;
+		regulator-boot-on;
+		regulator-always-on;
+
+		regulator-state-mem {
+			regulator-off-in-suspend;
+		};
+	};
+};
+
+&i2c6 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&i2c6m0_xfer>;
+	status = "okay";
+
+	usbc0: usb-typec@22 {
+		compatible = "fcs,fusb302";
+		reg = <0x22>;
+		interrupt-parent = <&gpio0>;
+		interrupts = <RK_PD3 IRQ_TYPE_LEVEL_LOW>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&usbc0_int>;
+		vbus-supply = <&vbus5v0_typec>;
+		status = "okay";
+
+		usb_con: connector {
+			compatible = "usb-c-connector";
+			label = "USB-C";
+			data-role = "dual";
+			power-role = "dual";
+			try-power-role = "sink";
+			op-sink-microwatt = <1000000>;
+			sink-pdos =
+				<PDO_FIXED(5000, 1000, PDO_FIXED_USB_COMM)>;
+			source-pdos =
+				<PDO_FIXED(5000, 3000, PDO_FIXED_USB_COMM)>;
+
+			ports {
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				port@0 {
+					reg = <0>;
+					usbc0_hs: endpoint {
+						remote-endpoint = <&usb_host0_xhci_drd_sw>;
+					};
+				};
+
+				port@1 {
+					reg = <1>;
+					usbc0_ss: endpoint {
+						remote-endpoint = <&usbdp_phy0_typec_ss>;
+					};
+				};
+
+				port@2 {
+					reg = <2>;
+					usbc0_sbu: endpoint {
+						remote-endpoint = <&usbdp_phy0_typec_sbu>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&i2c7 {
+	status = "okay";
+
+	es8388: audio-codec@11 {
+		compatible = "everest,es8388";
+		reg = <0x11>;
+		clocks = <&cru I2S0_8CH_MCLKOUT>;
+		clock-names = "mclk";
+		assigned-clocks = <&cru I2S0_8CH_MCLKOUT>;
+		assigned-clock-rates = <12288000>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&i2s0_mclk>;
+		#sound-dai-cells = <0>;
+	};
+};
+
+&i2s0_8ch {
+	pinctrl-0 = <&i2s0_lrck
+		     &i2s0_sclk
+		     &i2s0_sdi0
+		     &i2s0_sdo0>;
+	status = "okay";
+};
+
+&pinctrl {
+	usb {
+		vcc5v0_host_en: vcc5v0-host-en {
+			rockchip,pins = <3 RK_PB7 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
+	};
+
+	usb-typec {
+		usbc0_int: usbc0-int {
+			rockchip,pins = <0 RK_PD3 RK_FUNC_GPIO &pcfg_pull_up>;
+		};
+
+		typec5v_pwren: typec5v-pwren {
+			rockchip,pins = <4 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
+	};
+
+	sdmmc {
+		sdmmc_pwr: sdmmc_pwr {
+			rockchip,pins = <3 RK_PD5 RK_FUNC_GPIO &pcfg_pull_down>;
+		};
+	};
+
+	gpio-func {
+		leds_rgb: leds-rgb {
+		        rockchip,pins = <3 RK_PA6 RK_FUNC_GPIO &pcfg_pull_up>,
+					<3 RK_PB1 RK_FUNC_GPIO &pcfg_pull_up>;
+		};
+	};
+};
+
+&pwm2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pwm2m2_pins>;
+	status = "okay";
+};
+
+&pwm3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pwm3m1_pins>;
+	status = "okay";
+};
+
+&saradc {
+	vref-supply = <&avcc_1v8_s0>;
+	status = "okay";
+};
+
+&sdhci {
+	bus-width = <8>;
+	no-sdio;
+	no-sd;
+	non-removable;
+	max-frequency = <200000000>;
+	mmc-hs400-1_8v;
+	mmc-hs400-enhanced-strobe;
+	status = "okay";
+};
+
+&sdmmc {
+	max-frequency = <150000000>;
+	no-sdio;
+	no-mmc;
+	bus-width = <4>;
+	cap-mmc-highspeed;
+	cap-sd-highspeed;
+	disable-wp;
+	sd-uhs-sdr104;
+	vmmc-supply = <&vcc_3v3_sd_s0>;
+	vqmmc-supply = <&vccio_sd_s0>;
+	status = "okay";
+};
+
+&spi0 {
+	assigned-clocks = <&cru CLK_SPI0>;
+	assigned-clock-rates = <200000000>;
+	num-cs = <2>;
+	status = "disabled";
+};
+
+&spi2 {
+	status = "okay";
+	assigned-clocks = <&cru CLK_SPI2>;
+	assigned-clock-rates = <200000000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&spi2m2_cs0 &spi2m2_pins>;
+	num-cs = <1>;
+
+	pmic@0 {
+		compatible = "rockchip,rk806";
+		spi-max-frequency = <1000000>;
+		reg = <0x0>;
+
+		interrupt-parent = <&gpio0>;
+		interrupts = <7 IRQ_TYPE_LEVEL_LOW>;
+
+		pinctrl-names = "default";
+		pinctrl-0 = <&pmic_pins>, <&rk806_dvs1_null>,
+			    <&rk806_dvs2_null>, <&rk806_dvs3_null>;
+
+		vcc1-supply = <&vcc5v0_sys>;
+		vcc2-supply = <&vcc5v0_sys>;
+		vcc3-supply = <&vcc5v0_sys>;
+		vcc4-supply = <&vcc5v0_sys>;
+		vcc5-supply = <&vcc5v0_sys>;
+		vcc6-supply = <&vcc5v0_sys>;
+		vcc7-supply = <&vcc5v0_sys>;
+		vcc8-supply = <&vcc5v0_sys>;
+		vcc9-supply = <&vcc5v0_sys>;
+		vcc10-supply = <&vcc5v0_sys>;
+		vcc11-supply = <&vcc_2v0_pldo_s3>;
+		vcc12-supply = <&vcc5v0_sys>;
+		vcc13-supply = <&vcc_1v1_nldo_s3>;
+		vcc14-supply = <&vcc_1v1_nldo_s3>;
+		vcca-supply = <&vcc5v0_sys>;
+
+		gpio-controller;
+		#gpio-cells = <2>;
+
+		rk806_dvs1_null: dvs1-null-pins {
+			pins = "gpio_pwrctrl2";
+			function = "pin_fun0";
+		};
+
+		rk806_dvs2_null: dvs2-null-pins {
+			pins = "gpio_pwrctrl2";
+			function = "pin_fudr_moden0";
+		};
+
+		rk806_dvs3_null: dvs3-null-pins {
+			pins = "gpio_pwrctrl3";
+			function = "pin_fun0";
+		};
+
+		regulators {
+			vdd_gpu_s0: vdd_gpu_mem_s0: dcdc-reg1 {
+				regulator-boot-on;
+				regulator-min-microvolt = <550000>;
+				regulator-max-microvolt = <950000>;
+				regulator-ramp-delay = <12500>;
+				regulator-name = "vdd_gpu_s0";
+				regulator-enable-ramp-delay = <400>;
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+				};
+			};
+
+			vdd_cpu_lit_s0: vdd_cpu_lit_mem_s0: dcdc-reg2 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <550000>;
+				regulator-max-microvolt = <950000>;
+				regulator-ramp-delay = <12500>;
+				regulator-name = "vdd_cpu_lit_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+				};
+			};
+
+			vdd_log_s0: dcdc-reg3 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <675000>;
+				regulator-max-microvolt = <750000>;
+				regulator-ramp-delay = <12500>;
+				regulator-name = "vdd_log_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+					regulator-suspend-microvolt = <750000>;
+				};
+			};
+
+			vdd_vdenc_s0: vdd_vdenc_mem_s0: dcdc-reg4 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <550000>;
+				regulator-max-microvolt = <950000>;
+				regulator-init-microvolt = <750000>;
+				regulator-ramp-delay = <12500>;
+				regulator-name = "vdd_vdenc_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+				};
+			};
+
+			vdd_ddr_s0: dcdc-reg5 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <675000>;
+				regulator-max-microvolt = <900000>;
+				regulator-ramp-delay = <12500>;
+				regulator-name = "vdd_ddr_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+					regulator-suspend-microvolt = <850000>;
+				};
+			};
+
+			vdd2_ddr_s3: dcdc-reg6 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-name = "vdd2_ddr_s3";
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+				};
+			};
+
+			vcc_2v0_pldo_s3: dcdc-reg7 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <2000000>;
+				regulator-max-microvolt = <2000000>;
+				regulator-ramp-delay = <12500>;
+				regulator-name = "vdd_2v0_pldo_s3";
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <2000000>;
+				};
+			};
+
+			vcc_3v3_s3: dcdc-reg8 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <3300000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-name = "vcc_3v3_s3";
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <3300000>;
+				};
+			};
+
+			vddq_ddr_s0: dcdc-reg9 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-name = "vddq_ddr_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+				};
+			};
+
+			vcc_1v8_s3: dcdc-reg10 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+				regulator-name = "vcc_1v8_s3";
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <1800000>;
+				};
+			};
+
+			avcc_1v8_s0: pldo-reg1 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+				regulator-name = "avcc_1v8_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+				};
+			};
+
+			vcc_1v8_s0: pldo-reg2 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+				regulator-name = "vcc_1v8_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+					regulator-suspend-microvolt = <1800000>;
+				};
+			};
+
+			avdd_1v2_s0: pldo-reg3 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1200000>;
+				regulator-max-microvolt = <1200000>;
+				regulator-name = "avdd_1v2_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+				};
+			};
+
+			vcc_3v3_s0: pldo-reg4 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <3300000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-ramp-delay = <12500>;
+				regulator-name = "vcc_3v3_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+				};
+			};
+
+			vccio_sd_s0: pldo-reg5 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-ramp-delay = <12500>;
+				regulator-name = "vccio_sd_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+				};
+			};
+
+			pldo6_s3: pldo-reg6 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+				regulator-name = "pldo6_s3";
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <1800000>;
+				};
+			};
+
+			vdd_0v75_s3: nldo-reg1 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <750000>;
+				regulator-max-microvolt = <750000>;
+				regulator-name = "vdd_0v75_s3";
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <750000>;
+				};
+			};
+
+			vdd_ddr_pll_s0: nldo-reg2 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <850000>;
+				regulator-max-microvolt = <850000>;
+				regulator-name = "vdd_ddr_pll_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+					regulator-suspend-microvolt = <850000>;
+				};
+			};
+
+			avdd_0v75_s0: nldo-reg3 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <750000>;
+				regulator-max-microvolt = <750000>;
+				regulator-name = "avdd_0v75_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+				};
+			};
+
+			vdd_0v85_s0: nldo-reg4 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <850000>;
+				regulator-max-microvolt = <850000>;
+				regulator-name = "vdd_0v85_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+				};
+			};
+
+			vdd_0v75_s0: nldo-reg5 {
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <750000>;
+				regulator-max-microvolt = <750000>;
+				regulator-name = "vdd_0v75_s0";
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+				};
+			};
+		};
+	};
+};
+
+&spi4 {
+	assigned-clocks = <&cru CLK_SPI4>;
+	assigned-clock-rates = <200000000>;
+	num-cs = <2>;
+	status = "disabled";
+};
+
+&uart2 {
+	pinctrl-0 = <&uart2m0_xfer>;
+	status = "okay";
+};
+
+&uart9 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart9m0_xfer &uart9m0_ctsn>;
+	status = "okay";
+};
+
+&tsadc {
+	status = "okay";
+};
+
+&pcie2x1l0 {
+	reset-gpios = <&gpio4 RK_PA5 GPIO_ACTIVE_HIGH>;
+	vpcie3v3-supply = <&vcc3v3_pcie2x1l0>;
+	rockchip,skip-scan-in-resume;
+	status = "okay";
+};
+
+&pcie2x1l1 {
+	reset-gpios = <&gpio3 RK_PB3 GPIO_ACTIVE_HIGH>;
+	rockchip,init-delay-ms = <100>;
+	status = "okay";
+};
+
+&pcie2x1l2 {
+	reset-gpios = <&gpio4 RK_PA2 GPIO_ACTIVE_HIGH>;
+	status = "okay";
+};
+
+&pcie30phy {
+	status = "okay";
+};
+
+&pcie3x4 {
+	reset-gpios = <&gpio4 RK_PB6 GPIO_ACTIVE_HIGH>;
+	vpcie3v3-supply = <&vcc3v3_pcie30>;
+	status = "okay";
+};
+
+&u2phy0 {
+	status = "okay";
+};
+
+&u2phy0_otg {
+	rockchip,typec-vbus-det;
+	status = "okay";
+};
+
+&u2phy1 {
+	status = "okay";
+};
+
+&u2phy1_otg {
+	phy-supply = <&vcc5v0_host>;
+	status = "okay";
+};
+
+&u2phy2 {
+	status = "okay";
+};
+
+&u2phy2_host {
+	phy-supply = <&vcc5v0_host>;
+	status = "okay";
+};
+
+&u2phy3 {
+	status = "okay";
+};
+
+&u2phy3_host {
+	phy-supply = <&vcc5v0_host>;
+	status = "okay";
+};
+
+&usbdp_phy0 {
+	orientation-switch;
+	mode-switch;
+	status = "okay";
+	sbu1-dc-gpios = <&gpio4 RK_PA6 GPIO_ACTIVE_HIGH>;
+	sbu2-dc-gpios = <&gpio4 RK_PA7 GPIO_ACTIVE_HIGH>;
+
+	port {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		usbdp_phy0_typec_ss: endpoint@0 {
+			reg = <0>;
+			remote-endpoint = <&usbc0_ss>;
+		};
+
+		usbdp_phy0_typec_sbu: endpoint@1 {
+			reg = <1>;
+			remote-endpoint = <&usbc0_sbu>;
+		};
+	};
+};
+
+&usbdp_phy0_dp {
+	status = "okay";
+};
+
+&usbdp_phy0_u3 {
+	status = "okay";
+};
+
+&usbdp_phy1 {
+	rockchip,dp-lane-mux = <2 3>;
+	status = "okay";
+};
+
+&usbdp_phy1_dp {
+	status = "okay";
+};
+
+&usbdp_phy1_u3 {
+	status = "okay";
+};
+
+&usb_host0_ehci {
+	status = "okay";
+};
+
+&usb_host0_ohci {
+	status = "okay";
+};
+
+&usb_host0_xhci {
+	usb-role-switch;
+	dr_mode = "otg";
+	status = "okay";
+
+	port {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		usb_host0_xhci_drd_sw: endpoint {
+			remote-endpoint = <&usbc0_hs>;
+		};
+	};
+};
+
+&usb_host1_ehci {
+	status = "okay";
+};
+
+&usb_host1_ohci {
+	status = "okay";
+};
+
+&usb_host1_xhci {
+	status = "okay";
+};
+
+&wdt {
+	status = "okay";
+};
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index 31d10f5fa8..1f3a278474 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -148,3 +148,14 @@ define Device/rockchip_bpi-r2-pro
   IMAGE/sysupgrade.img.gz := boot-common | boot-script quartz64-a | pine64-img | gzip | append-metadata
 endef
 TARGET_DEVICES += rockchip_bpi-r2-pro
+
+define Device/xunlong_orangepi-5-plus
+  DEVICE_VENDOR := XunLong
+  DEVICE_MODEL := RK3588 OPi 5 Plus
+  SOC := rk3588
+  UBOOT_DEVICE_NAME := orangepi-5-plus-rk3588
+  SUPPORTED_DEVICES := rockchip,rk3588-orangepi-5-plus
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r6c | pine64-img | gzip | append-metadata
+ DEVICE_PACKAGES := kmod-r8169
+endef
+TARGET_DEVICES += xunlong_orangepi-5-plus
-- 
2.40.1


From b396b020c33f0e32b28fb4050226b2406ca5ce8f Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Tue, 5 Dec 2023 22:17:41 -0500
Subject: [PATCH 34/38] uboot-rockchip: update to 2024.1

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 package/boot/uboot-rockchip/Makefile                        | 4 ++--
 .../patches/106-uboot-rockchip-add-nanopi-r6c.patch         | 6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/package/boot/uboot-rockchip/Makefile b/package/boot/uboot-rockchip/Makefile
index ffc97f1c1f..13905f94c5 100644
--- a/package/boot/uboot-rockchip/Makefile
+++ b/package/boot/uboot-rockchip/Makefile
@@ -5,10 +5,10 @@
 include $(TOPDIR)/rules.mk
 include $(INCLUDE_DIR)/kernel.mk
 
-PKG_VERSION:=2024.01-rc2
+PKG_VERSION:=2024.01
 PKG_RELEASE:=1
 
-PKG_HASH:=7585328ee545bd0566a90965ef02c3a8d1c828f56a92548a03e88e7644dd76bd
+PKG_HASH:=b99611f1ed237bf3541bdc8434b68c96a6e05967061f992443cb30aabebef5b3
 
 PKG_MAINTAINER:=Tobias Maedel <openwrt@tbspace.de>
 
diff --git a/package/boot/uboot-rockchip/patches/106-uboot-rockchip-add-nanopi-r6c.patch b/package/boot/uboot-rockchip/patches/106-uboot-rockchip-add-nanopi-r6c.patch
index e54b88848c..02f2eec9e0 100644
--- a/package/boot/uboot-rockchip/patches/106-uboot-rockchip-add-nanopi-r6c.patch
+++ b/package/boot/uboot-rockchip/patches/106-uboot-rockchip-add-nanopi-r6c.patch
@@ -26,8 +26,8 @@ Signed-off-by: Marty Jones <mj8263788@gmail.com>
 --- a/arch/arm/dts/Makefile
 +++ b/arch/arm/dts/Makefile
 @@ -196,6 +196,7 @@ dtb-$(CONFIG_ROCKCHIP_RK3588) += \
- 	rk3588s-orangepi-5.dtb \
  	rk3588-orangepi-5-plus.dtb \
+ 	rk3588-quartzpro64.dtb \
  	rk3588s-rock-5a.dtb \
 +	rk3588-nanopi-r6c.dtb \
  	rk3588-rock-5b.dtb
@@ -277,9 +277,9 @@ Signed-off-by: Marty Jones <mj8263788@gmail.com>
  config TARGET_ROCK5B_RK3588
  	bool "Radxa ROCK5B RK3588 board"
  	select BOARD_LATE_INIT
-@@ -140,6 +146,7 @@ config SYS_MALLOC_F_LEN
- source board/edgeble/neural-compute-module-6/Kconfig
+@@ -148,6 +154,7 @@ source board/edgeble/neural-compute-modu
  source board/friendlyelec/nanopc-t6-rk3588/Kconfig
+ source board/pine64/quartzpro64-rk3588/Kconfig
  source board/rockchip/evb_rk3588/Kconfig
 +source board/friendlyelec/nanopi-r6c-rk3588/Kconfig
  source board/radxa/rock5a-rk3588s/Kconfig
-- 
2.40.1


From 4a20284f68a3af3cd8238518723ff133dfd76e59 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Mon, 8 Jan 2024 14:48:14 -0500
Subject: [PATCH 35/38] kernel: r8152: sync with linux-next

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 ...-Hold-the-rtnl_lock-for-all-of-reset.patch | 88 +++++++++++++++++++
 ...-USB-config-with-choose_configuratio.patch | 70 +++++++++++++++
 ...orce-USB-generic_subclass-drivers-to.patch | 33 +++++++
 ...ubclassed-USB-drivers-to-override-us.patch | 76 ++++++++++++++++
 ...sh-w-usb_choose_configuration-if-no-.patch | 55 ++++++++++++
 ...-clock-gating-feature-on-Rockchip-So.patch | 26 ++++++
 6 files changed, 348 insertions(+)
 create mode 100644 target/linux/generic/backport-6.1/795-v6.7-18-r8152-Hold-the-rtnl_lock-for-all-of-reset.patch
 create mode 100644 target/linux/generic/backport-6.1/795-v6.8-19-r8152-Choose-our-USB-config-with-choose_configuratio.patch
 create mode 100644 target/linux/generic/backport-6.1/795-v6.8-20-usb-core-Don-t-force-USB-generic_subclass-drivers-to.patch
 create mode 100644 target/linux/generic/backport-6.1/795-v6.8-21-usb-core-Allow-subclassed-USB-drivers-to-override-us.patch
 create mode 100644 target/linux/generic/backport-6.1/795-v6.8-22-usb-core-Fix-crash-w-usb_choose_configuration-if-no-.patch
 create mode 100644 target/linux/generic/backport-6.1/795-v6.8-25-usb-dwc2-Disable-clock-gating-feature-on-Rockchip-So.patch

diff --git a/target/linux/generic/backport-6.1/795-v6.7-18-r8152-Hold-the-rtnl_lock-for-all-of-reset.patch b/target/linux/generic/backport-6.1/795-v6.7-18-r8152-Hold-the-rtnl_lock-for-all-of-reset.patch
new file mode 100644
index 0000000000..cce28a5735
--- /dev/null
+++ b/target/linux/generic/backport-6.1/795-v6.7-18-r8152-Hold-the-rtnl_lock-for-all-of-reset.patch
@@ -0,0 +1,88 @@
+From e62adaeecdc6a1e8ae86e7f3f9f8223a3ede94f5 Mon Sep 17 00:00:00 2001
+From: Douglas Anderson <dianders@chromium.org>
+Date: Wed, 29 Nov 2023 13:25:20 -0800
+Subject: [PATCH] r8152: Hold the rtnl_lock for all of reset
+
+As of commit d9962b0d4202 ("r8152: Block future register access if
+register access fails") there is a race condition that can happen
+between the USB device reset thread and napi_enable() (not) getting
+called during rtl8152_open(). Specifically:
+* While rtl8152_open() is running we get a register access error
+  that's _not_ -ENODEV and queue up a USB reset.
+* rtl8152_open() exits before calling napi_enable() due to any reason
+  (including usb_submit_urb() returning an error).
+
+In that case:
+* Since the USB reset is perform in a separate thread asynchronously,
+  it can run at anytime USB device lock is not held - even before
+  rtl8152_open() has exited with an error and caused __dev_open() to
+  clear the __LINK_STATE_START bit.
+* The rtl8152_pre_reset() will notice that the netif_running() returns
+  true (since __LINK_STATE_START wasn't cleared) so it won't exit
+  early.
+* rtl8152_pre_reset() will then hang in napi_disable() because
+  napi_enable() was never called.
+
+We can fix the race by making sure that the r8152 reset routines don't
+run at the same time as we're opening the device. Specifically we need
+the reset routines in their entirety rely on the return value of
+netif_running(). The only way to reliably depend on that is for them
+to hold the rntl_lock() mutex for the duration of reset.
+
+Grabbing the rntl_lock() mutex for the duration of reset seems like a
+long time, but reset is not expected to be common and the rtnl_lock()
+mutex is already held for long durations since the core grabs it
+around the open/close calls.
+
+Fixes: d9962b0d4202 ("r8152: Block future register access if register access fails")
+Reviewed-by: Grant Grundler <grundler@chromium.org>
+Signed-off-by: Douglas Anderson <dianders@chromium.org>
+Signed-off-by: David S. Miller <davem@davemloft.net>
+---
+ drivers/net/usb/r8152.c | 13 +++++++------
+ 1 file changed, 7 insertions(+), 6 deletions(-)
+
+--- a/drivers/net/usb/r8152.c
++++ b/drivers/net/usb/r8152.c
+@@ -8410,6 +8410,8 @@ static int rtl8152_pre_reset(struct usb_
+ 	struct r8152 *tp = usb_get_intfdata(intf);
+ 	struct net_device *netdev;
+ 
++	rtnl_lock();
++
+ 	if (!tp || !test_bit(PROBED_WITH_NO_ERRORS, &tp->flags))
+ 		return 0;
+ 
+@@ -8441,20 +8443,17 @@ static int rtl8152_post_reset(struct usb
+ 	struct sockaddr sa;
+ 
+ 	if (!tp || !test_bit(PROBED_WITH_NO_ERRORS, &tp->flags))
+-		return 0;
++		goto exit;
+ 
+ 	rtl_set_accessible(tp);
+ 
+ 	/* reset the MAC address in case of policy change */
+-	if (determine_ethernet_addr(tp, &sa) >= 0) {
+-		rtnl_lock();
++	if (determine_ethernet_addr(tp, &sa) >= 0)
+ 		dev_set_mac_address (tp->netdev, &sa, NULL);
+-		rtnl_unlock();
+-	}
+ 
+ 	netdev = tp->netdev;
+ 	if (!netif_running(netdev))
+-		return 0;
++		goto exit;
+ 
+ 	set_bit(WORK_ENABLE, &tp->flags);
+ 	if (netif_carrier_ok(netdev)) {
+@@ -8473,6 +8472,8 @@ static int rtl8152_post_reset(struct usb
+ 	if (!list_empty(&tp->rx_done))
+ 		napi_schedule(&tp->napi);
+ 
++exit:
++	rtnl_unlock();
+ 	return 0;
+ }
+ 
diff --git a/target/linux/generic/backport-6.1/795-v6.8-19-r8152-Choose-our-USB-config-with-choose_configuratio.patch b/target/linux/generic/backport-6.1/795-v6.8-19-r8152-Choose-our-USB-config-with-choose_configuratio.patch
new file mode 100644
index 0000000000..05fb69bc21
--- /dev/null
+++ b/target/linux/generic/backport-6.1/795-v6.8-19-r8152-Choose-our-USB-config-with-choose_configuratio.patch
@@ -0,0 +1,70 @@
+From aa4f2b3e418e8673e55145de8b8016a7a9920306 Mon Sep 17 00:00:00 2001
+From: Douglas Anderson <dianders@chromium.org>
+Date: Fri, 1 Dec 2023 10:29:52 -0800
+Subject: [PATCH] r8152: Choose our USB config with choose_configuration()
+ rather than probe()
+
+If you deauthorize the r8152 device (by writing 0 to the "authorized"
+field in sysfs) and then reauthorize it (by writing a 1) then it no
+longer works. This is because when you do the above we lose the
+special configuration that we set in rtl8152_cfgselector_probe().
+Deauthorizing causes the config to be set to -1 and then reauthorizing
+runs the default logic for choosing the best config.
+
+I made an attempt to fix it so that the config is kept across
+deauthorizing / reauthorizing [1] but it was a bit ugly.
+
+Let's instead use the new USB core feature to override
+choose_configuration().
+
+This patch relies upon the patches ("usb: core: Don't force USB
+generic_subclass drivers to define probe()") and ("usb: core: Allow
+subclassed USB drivers to override usb_choose_configuration()")
+
+[1] https://lore.kernel.org/r/20231130154337.1.Ie00e07f07f87149c9ce0b27ae4e26991d307e14b@changeid
+
+Fixes: ec51fbd1b8a2 ("r8152: add USB device driver for config selection")
+Suggested-by: Alan Stern <stern@rowland.harvard.edu>
+Signed-off-by: Douglas Anderson <dianders@chromium.org>
+Reviewed-by: Grant Grundler <grundler@chromium.org>
+Link: https://lore.kernel.org/r/20231201102946.v2.3.Ie00e07f07f87149c9ce0b27ae4e26991d307e14b@changeid
+Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+---
+ drivers/net/usb/r8152.c | 16 +++++-----------
+ 1 file changed, 5 insertions(+), 11 deletions(-)
+
+--- a/drivers/net/usb/r8152.c
++++ b/drivers/net/usb/r8152.c
+@@ -10068,7 +10068,7 @@ static struct usb_driver rtl8152_driver
+ 	.disable_hub_initiated_lpm = 1,
+ };
+ 
+-static int rtl8152_cfgselector_probe(struct usb_device *udev)
++static int rtl8152_cfgselector_choose_configuration(struct usb_device *udev)
+ {
+ 	struct usb_host_config *c;
+ 	int i, num_configs;
+@@ -10095,19 +10095,13 @@ static int rtl8152_cfgselector_probe(str
+ 	if (i == num_configs)
+ 		return -ENODEV;
+ 
+-	if (usb_set_configuration(udev, c->desc.bConfigurationValue)) {
+-		dev_err(&udev->dev, "Failed to set configuration %d\n",
+-			c->desc.bConfigurationValue);
+-		return -ENODEV;
+-	}
+-
+-	return 0;
++	return c->desc.bConfigurationValue;
+ }
+ 
+ static struct usb_device_driver rtl8152_cfgselector_driver = {
+-	.name =		MODULENAME "-cfgselector",
+-	.probe =	rtl8152_cfgselector_probe,
+-	.id_table =	rtl8152_table,
++	.name =	MODULENAME "-cfgselector",
++	.choose_configuration = rtl8152_cfgselector_choose_configuration,
++	.id_table = rtl8152_table,
+ 	.generic_subclass = 1,
+ 	.supports_autosuspend = 1,
+ };
diff --git a/target/linux/generic/backport-6.1/795-v6.8-20-usb-core-Don-t-force-USB-generic_subclass-drivers-to.patch b/target/linux/generic/backport-6.1/795-v6.8-20-usb-core-Don-t-force-USB-generic_subclass-drivers-to.patch
new file mode 100644
index 0000000000..c5652c7a7b
--- /dev/null
+++ b/target/linux/generic/backport-6.1/795-v6.8-20-usb-core-Don-t-force-USB-generic_subclass-drivers-to.patch
@@ -0,0 +1,33 @@
+From c2d95fcff0f01fa00d9683dddeeea6732b74c779 Mon Sep 17 00:00:00 2001
+From: Douglas Anderson <dianders@chromium.org>
+Date: Fri, 1 Dec 2023 10:29:50 -0800
+Subject: [PATCH] usb: core: Don't force USB generic_subclass drivers to define
+ probe()
+
+There's no real reason that subclassed USB drivers _need_ to define
+probe() since they might want to subclass for some other reason. Make
+it optional to define probe() if we're a generic_subclass.
+
+Signed-off-by: Douglas Anderson <dianders@chromium.org>
+Reviewed-by: Grant Grundler <grundler@chromium.org>
+Reviewed-by: Alan Stern <stern@rowland.harvard.edu>
+Link: https://lore.kernel.org/r/20231201102946.v2.1.I7ea0dd55ee2acdb48b0e6d28c1a704ab2c29206f@changeid
+Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+---
+ drivers/usb/core/driver.c | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
+
+--- a/drivers/usb/core/driver.c
++++ b/drivers/usb/core/driver.c
+@@ -290,7 +290,10 @@ static int usb_probe_device(struct devic
+ 	 * specialised device drivers prior to setting the
+ 	 * use_generic_driver bit.
+ 	 */
+-	error = udriver->probe(udev);
++	if (udriver->probe)
++		error = udriver->probe(udev);
++	else if (!udriver->generic_subclass)
++		error = -EINVAL;
+ 	if (error == -ENODEV && udriver != &usb_generic_driver &&
+ 	    (udriver->id_table || udriver->match)) {
+ 		udev->use_generic_driver = 1;
diff --git a/target/linux/generic/backport-6.1/795-v6.8-21-usb-core-Allow-subclassed-USB-drivers-to-override-us.patch b/target/linux/generic/backport-6.1/795-v6.8-21-usb-core-Allow-subclassed-USB-drivers-to-override-us.patch
new file mode 100644
index 0000000000..46db091a10
--- /dev/null
+++ b/target/linux/generic/backport-6.1/795-v6.8-21-usb-core-Allow-subclassed-USB-drivers-to-override-us.patch
@@ -0,0 +1,76 @@
+From a87b8e3be926af0fc3b9b1af42b1127bd1ff077c Mon Sep 17 00:00:00 2001
+From: Douglas Anderson <dianders@chromium.org>
+Date: Fri, 1 Dec 2023 10:29:51 -0800
+Subject: [PATCH] usb: core: Allow subclassed USB drivers to override
+ usb_choose_configuration()
+
+For some USB devices we might want to do something different for
+usb_choose_configuration(). One example here is the r8152 driver where
+we want to end up using the vendor driver with the preferred
+interface.
+
+The r8152 driver tried to make things work by implementing a USB
+generic_subclass driver and then overriding the normal config
+selection after it happened. This is less than ideal and also caused
+breakage if someone deauthorized and re-authorized the USB device
+because the USB core ended up going back to it's default logic for
+choosing the best config. I made an attempt to fix this [1] but it was
+a bit ugly.
+
+Let's do this better and allow USB generic_subclass drivers to
+override usb_choose_configuration().
+
+[1] https://lore.kernel.org/r/20231130154337.1.Ie00e07f07f87149c9ce0b27ae4e26991d307e14b@changeid
+
+Suggested-by: Alan Stern <stern@rowland.harvard.edu>
+Signed-off-by: Douglas Anderson <dianders@chromium.org>
+Reviewed-by: Alan Stern <stern@rowland.harvard.edu>
+Link: https://lore.kernel.org/r/20231201102946.v2.2.Iade5fa31997f1a0ca3e1dec0591633b02471df12@changeid
+Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+---
+ drivers/usb/core/generic.c | 7 +++++++
+ include/linux/usb.h        | 6 ++++++
+ 2 files changed, 13 insertions(+)
+
+--- a/drivers/usb/core/generic.c
++++ b/drivers/usb/core/generic.c
+@@ -59,10 +59,17 @@ int usb_choose_configuration(struct usb_
+ 	int num_configs;
+ 	int insufficient_power = 0;
+ 	struct usb_host_config *c, *best;
++	struct usb_device_driver *udriver = to_usb_device_driver(udev->dev.driver);
+ 
+ 	if (usb_device_is_owned(udev))
+ 		return 0;
+ 
++	if (udriver->choose_configuration) {
++		i = udriver->choose_configuration(udev);
++		if (i >= 0)
++			return i;
++	}
++
+ 	best = NULL;
+ 	c = udev->config;
+ 	num_configs = udev->descriptor.bNumConfigurations;
+--- a/include/linux/usb.h
++++ b/include/linux/usb.h
+@@ -1234,6 +1234,9 @@ struct usb_driver {
+  *	module is being unloaded.
+  * @suspend: Called when the device is going to be suspended by the system.
+  * @resume: Called when the device is being resumed by the system.
++ * @choose_configuration: If non-NULL, called instead of the default
++ *	usb_choose_configuration(). If this returns an error then we'll go
++ *	on to call the normal usb_choose_configuration().
+  * @dev_groups: Attributes attached to the device that will be created once it
+  *	is bound to the driver.
+  * @drvwrap: Driver-model core structure wrapper.
+@@ -1257,6 +1260,9 @@ struct usb_device_driver {
+ 
+ 	int (*suspend) (struct usb_device *udev, pm_message_t message);
+ 	int (*resume) (struct usb_device *udev, pm_message_t message);
++
++	int (*choose_configuration) (struct usb_device *udev);
++
+ 	const struct attribute_group **dev_groups;
+ 	struct usbdrv_wrap drvwrap;
+ 	const struct usb_device_id *id_table;
diff --git a/target/linux/generic/backport-6.1/795-v6.8-22-usb-core-Fix-crash-w-usb_choose_configuration-if-no-.patch b/target/linux/generic/backport-6.1/795-v6.8-22-usb-core-Fix-crash-w-usb_choose_configuration-if-no-.patch
new file mode 100644
index 0000000000..abfdcef37e
--- /dev/null
+++ b/target/linux/generic/backport-6.1/795-v6.8-22-usb-core-Fix-crash-w-usb_choose_configuration-if-no-.patch
@@ -0,0 +1,55 @@
+From 44995e6f07028f798efd0c3c11a1efc78330f600 Mon Sep 17 00:00:00 2001
+From: Douglas Anderson <dianders@chromium.org>
+Date: Mon, 11 Dec 2023 07:32:41 -0800
+Subject: [PATCH] usb: core: Fix crash w/ usb_choose_configuration() if no
+ driver
+
+It's possible that usb_choose_configuration() can get called when a
+USB device has no driver. In this case the recent commit a87b8e3be926
+("usb: core: Allow subclassed USB drivers to override
+usb_choose_configuration()") can cause a crash since it dereferenced
+the driver structure without checking for NULL. Let's add a check.
+
+A USB device with no driver is an anomaly, so make
+usb_choose_configuration() return immediately if there is no driver.
+
+This was seen in the real world when usbguard got ahold of a r8152
+device at the wrong time. It can also be simulated via this on a
+computer with one r8152-based USB Ethernet adapter:
+  cd /sys/bus/usb/drivers/r8152-cfgselector
+  to_unbind="$(ls -d *-*)"
+  real_dir="$(readlink -f "${to_unbind}")"
+  echo "${to_unbind}" > unbind
+  cd "${real_dir}"
+  echo 0 > authorized
+  echo 1 > authorized
+
+Fixes: a87b8e3be926 ("usb: core: Allow subclassed USB drivers to override usb_choose_configuration()")
+Reviewed-by: Alan Stern <stern@rowland.harvard.edu>
+Signed-off-by: Douglas Anderson <dianders@chromium.org>
+Link: https://lore.kernel.org/r/20231211073237.v3.1.If27eb3bf7812f91ab83810f232292f032f4203e0@changeid
+Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+---
+ drivers/usb/core/generic.c | 11 ++++++++++-
+ 1 file changed, 10 insertions(+), 1 deletion(-)
+
+--- a/drivers/usb/core/generic.c
++++ b/drivers/usb/core/generic.c
+@@ -59,7 +59,16 @@ int usb_choose_configuration(struct usb_
+ 	int num_configs;
+ 	int insufficient_power = 0;
+ 	struct usb_host_config *c, *best;
+-	struct usb_device_driver *udriver = to_usb_device_driver(udev->dev.driver);
++	struct usb_device_driver *udriver;
++
++	/*
++	 * If a USB device (not an interface) doesn't have a driver then the
++	 * kernel has no business trying to select or install a configuration
++	 * for it.
++	 */
++	if (!udev->dev.driver)
++		return -1;
++	udriver = to_usb_device_driver(udev->dev.driver);
+ 
+ 	if (usb_device_is_owned(udev))
+ 		return 0;
diff --git a/target/linux/generic/backport-6.1/795-v6.8-25-usb-dwc2-Disable-clock-gating-feature-on-Rockchip-So.patch b/target/linux/generic/backport-6.1/795-v6.8-25-usb-dwc2-Disable-clock-gating-feature-on-Rockchip-So.patch
new file mode 100644
index 0000000000..a9ba2b5b4a
--- /dev/null
+++ b/target/linux/generic/backport-6.1/795-v6.8-25-usb-dwc2-Disable-clock-gating-feature-on-Rockchip-So.patch
@@ -0,0 +1,26 @@
+From ca2dc35e555e7043de585f4e46123d8fbd2b5a21 Mon Sep 17 00:00:00 2001
+From: William Wu <william.wu@rock-chips.com>
+Date: Tue, 26 Dec 2023 15:19:59 +0800
+Subject: [PATCH] usb: dwc2: Disable clock gating feature on Rockchip SoCs
+
+The DWC2 IP on the Rockchip SoCs doesn't support clock gating.
+When a clock gating is enabled, system hangs.
+
+Signed-off-by: William Wu <william.wu@rock-chips.com>
+Acked-by: Minas Harutyunyan <hminas@synopsys.com>
+Link: https://lore.kernel.org/r/1703575199-23638-1-git-send-email-william.wu@rock-chips.com
+Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+---
+ drivers/usb/dwc2/params.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/drivers/usb/dwc2/params.c
++++ b/drivers/usb/dwc2/params.c
+@@ -155,6 +155,7 @@ static void dwc2_set_amlogic_g12a_params
+ 	p->lpm_clock_gating = false;
+ 	p->besl = false;
+ 	p->hird_threshold_en = false;
++	p->no_clock_gating = true;
+ }
+ 
+ static void dwc2_set_amcc_params(struct dwc2_hsotg *hsotg)
-- 
2.40.1


From 08a2c7136c4486be7c18e1751920bdb0a9f0bef3 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Mon, 15 Jan 2024 14:19:37 -0500
Subject: [PATCH 36/38] kernel: Linux 6.1.72

https://lore.kernel.org/r/20240108153511.214254205@linuxfoundation.org

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 include/kernel-6.1                                          | 4 ++--
 ...723-v6.3-net-pcs-add-driver-for-MediaTek-SGMII-PCS.patch | 2 +-
 ...0010-net-dsa-mt7530-introduce-separate-MDIO-driver.patch | 2 +-
 ...t-dsa-mt7530-introduce-driver-for-MT7988-built-in-.patch | 2 +-
 ...y-Add-driver-for-Motorcomm-yt8521-gigabit-ethernet.patch | 2 +-
 .../hack-6.1/650-netfilter-add-xt_FLOWOFFLOAD-target.patch  | 6 +++---
 target/linux/generic/hack-6.1/901-debloat_sock_diag.patch   | 2 +-
 target/linux/generic/hack-6.1/902-debloat_proc.patch        | 2 +-
 ...tfilter-nft_flow_offload-handle-netdevice-events-f.patch | 6 +++---
 9 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/include/kernel-6.1 b/include/kernel-6.1
index c52b94712f..836cecf7de 100644
--- a/include/kernel-6.1
+++ b/include/kernel-6.1
@@ -1,2 +1,2 @@
-LINUX_VERSION-6.1 = .71
-LINUX_KERNEL_HASH-6.1.71 = 2df774dd53f9ffd4e57ebf804cf597709295df6a304fe261d25220a134b7f041
+LINUX_VERSION-6.1 = .72
+LINUX_KERNEL_HASH-6.1.72 = 98dce69077c35cffca799dcdbbd32a02242aad6b0950eb931936bb2ef69f0926
diff --git a/target/linux/generic/backport-6.1/723-v6.3-net-pcs-add-driver-for-MediaTek-SGMII-PCS.patch b/target/linux/generic/backport-6.1/723-v6.3-net-pcs-add-driver-for-MediaTek-SGMII-PCS.patch
index 980cb0f914..d56a142451 100644
--- a/target/linux/generic/backport-6.1/723-v6.3-net-pcs-add-driver-for-MediaTek-SGMII-PCS.patch
+++ b/target/linux/generic/backport-6.1/723-v6.3-net-pcs-add-driver-for-MediaTek-SGMII-PCS.patch
@@ -32,7 +32,7 @@ Signed-off-by: Jakub Kicinski <kuba@kernel.org>
 
 --- a/MAINTAINERS
 +++ b/MAINTAINERS
-@@ -12926,6 +12926,14 @@ L:	netdev@vger.kernel.org
+@@ -12928,6 +12928,14 @@ L:	netdev@vger.kernel.org
  S:	Maintained
  F:	drivers/net/ethernet/mediatek/
  
diff --git a/target/linux/generic/backport-6.1/790-v6.4-0010-net-dsa-mt7530-introduce-separate-MDIO-driver.patch b/target/linux/generic/backport-6.1/790-v6.4-0010-net-dsa-mt7530-introduce-separate-MDIO-driver.patch
index b75710ba57..d203711884 100644
--- a/target/linux/generic/backport-6.1/790-v6.4-0010-net-dsa-mt7530-introduce-separate-MDIO-driver.patch
+++ b/target/linux/generic/backport-6.1/790-v6.4-0010-net-dsa-mt7530-introduce-separate-MDIO-driver.patch
@@ -25,7 +25,7 @@ Signed-off-by: David S. Miller <davem@davemloft.net>
 
 --- a/MAINTAINERS
 +++ b/MAINTAINERS
-@@ -13060,6 +13060,7 @@ M:	Landen Chao <Landen.Chao@mediatek.com
+@@ -13062,6 +13062,7 @@ M:	Landen Chao <Landen.Chao@mediatek.com
  M:	DENG Qingfang <dqfext@gmail.com>
  L:	netdev@vger.kernel.org
  S:	Maintained
diff --git a/target/linux/generic/backport-6.1/790-v6.4-0012-net-dsa-mt7530-introduce-driver-for-MT7988-built-in-.patch b/target/linux/generic/backport-6.1/790-v6.4-0012-net-dsa-mt7530-introduce-driver-for-MT7988-built-in-.patch
index 934af995cd..63bf0e77fa 100644
--- a/target/linux/generic/backport-6.1/790-v6.4-0012-net-dsa-mt7530-introduce-driver-for-MT7988-built-in-.patch
+++ b/target/linux/generic/backport-6.1/790-v6.4-0012-net-dsa-mt7530-introduce-driver-for-MT7988-built-in-.patch
@@ -28,7 +28,7 @@ Signed-off-by: David S. Miller <davem@davemloft.net>
 
 --- a/MAINTAINERS
 +++ b/MAINTAINERS
-@@ -13058,9 +13058,11 @@ MEDIATEK SWITCH DRIVER
+@@ -13060,9 +13060,11 @@ MEDIATEK SWITCH DRIVER
  M:	Sean Wang <sean.wang@mediatek.com>
  M:	Landen Chao <Landen.Chao@mediatek.com>
  M:	DENG Qingfang <dqfext@gmail.com>
diff --git a/target/linux/generic/backport-6.1/791-v6.2-01-net-phy-Add-driver-for-Motorcomm-yt8521-gigabit-ethernet.patch b/target/linux/generic/backport-6.1/791-v6.2-01-net-phy-Add-driver-for-Motorcomm-yt8521-gigabit-ethernet.patch
index 06dddffcaa..4cdd67cdcc 100644
--- a/target/linux/generic/backport-6.1/791-v6.2-01-net-phy-Add-driver-for-Motorcomm-yt8521-gigabit-ethernet.patch
+++ b/target/linux/generic/backport-6.1/791-v6.2-01-net-phy-Add-driver-for-Motorcomm-yt8521-gigabit-ethernet.patch
@@ -21,7 +21,7 @@ Signed-off-by: David S. Miller <davem@davemloft.net>
 
 --- a/MAINTAINERS
 +++ b/MAINTAINERS
-@@ -13962,6 +13962,7 @@ F:	include/uapi/linux/meye.h
+@@ -13964,6 +13964,7 @@ F:	include/uapi/linux/meye.h
  
  MOTORCOMM PHY DRIVER
  M:	Peter Geis <pgwipeout@gmail.com>
diff --git a/target/linux/generic/hack-6.1/650-netfilter-add-xt_FLOWOFFLOAD-target.patch b/target/linux/generic/hack-6.1/650-netfilter-add-xt_FLOWOFFLOAD-target.patch
index 386291bfe8..9ff45a414e 100644
--- a/target/linux/generic/hack-6.1/650-netfilter-add-xt_FLOWOFFLOAD-target.patch
+++ b/target/linux/generic/hack-6.1/650-netfilter-add-xt_FLOWOFFLOAD-target.patch
@@ -654,7 +654,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
 +};
 +
 +static int nf_flow_rule_route_inet(struct net *net,
-+				   const struct flow_offload *flow,
++				   struct flow_offload *flow,
 +				   enum flow_offload_tuple_dir dir,
 +				   struct nf_flow_rule *flow_rule)
 +{
@@ -755,7 +755,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  		      void (*iter)(struct nf_flowtable *flowtable,
  				   struct flow_offload *flow, void *data),
  		      void *data)
-@@ -436,6 +434,7 @@ static void nf_flow_offload_gc_step(stru
+@@ -443,6 +441,7 @@ static void nf_flow_offload_gc_step(stru
  		nf_flow_offload_stats(flow_table, flow);
  	}
  }
@@ -785,7 +785,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
 +#endif /* _XT_FLOWOFFLOAD_H */
 --- a/include/net/netfilter/nf_flow_table.h
 +++ b/include/net/netfilter/nf_flow_table.h
-@@ -280,6 +280,11 @@ void nf_flow_table_free(struct nf_flowta
+@@ -293,6 +293,11 @@ void nf_flow_table_free(struct nf_flowta
  
  void flow_offload_teardown(struct flow_offload *flow);
  
diff --git a/target/linux/generic/hack-6.1/901-debloat_sock_diag.patch b/target/linux/generic/hack-6.1/901-debloat_sock_diag.patch
index b4403e82c8..ffa6e8ac60 100644
--- a/target/linux/generic/hack-6.1/901-debloat_sock_diag.patch
+++ b/target/linux/generic/hack-6.1/901-debloat_sock_diag.patch
@@ -79,7 +79,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  INDIRECT_CALLABLE_DECLARE(struct dst_entry *ip6_dst_check(struct dst_entry *,
  							  u32));
  INDIRECT_CALLABLE_DECLARE(struct dst_entry *ipv4_dst_check(struct dst_entry *,
-@@ -2180,9 +2194,11 @@ static void __sk_free(struct sock *sk)
+@@ -2187,9 +2201,11 @@ static void __sk_free(struct sock *sk)
  	if (likely(sk->sk_net_refcnt))
  		sock_inuse_add(sock_net(sk), -1);
  
diff --git a/target/linux/generic/hack-6.1/902-debloat_proc.patch b/target/linux/generic/hack-6.1/902-debloat_proc.patch
index a5db9b21c1..0d844994aa 100644
--- a/target/linux/generic/hack-6.1/902-debloat_proc.patch
+++ b/target/linux/generic/hack-6.1/902-debloat_proc.patch
@@ -330,7 +330,7 @@ Signed-off-by: Felix Fietkau <nbd@nbd.name>
  
 --- a/net/core/sock.c
 +++ b/net/core/sock.c
-@@ -4105,6 +4105,8 @@ static __net_initdata struct pernet_oper
+@@ -4113,6 +4113,8 @@ static __net_initdata struct pernet_oper
  
  static int __init proto_init(void)
  {
diff --git a/target/linux/generic/pending-6.1/700-netfilter-nft_flow_offload-handle-netdevice-events-f.patch b/target/linux/generic/pending-6.1/700-netfilter-nft_flow_offload-handle-netdevice-events-f.patch
index 6050db3f5b..47c742cff0 100644
--- a/target/linux/generic/pending-6.1/700-netfilter-nft_flow_offload-handle-netdevice-events-f.patch
+++ b/target/linux/generic/pending-6.1/700-netfilter-nft_flow_offload-handle-netdevice-events-f.patch
@@ -10,7 +10,7 @@ Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
 
 --- a/net/netfilter/nf_flow_table_core.c
 +++ b/net/netfilter/nf_flow_table_core.c
-@@ -659,6 +659,23 @@ static struct pernet_operations nf_flow_
+@@ -666,6 +666,23 @@ static struct pernet_operations nf_flow_
  	.exit_batch = nf_flow_table_pernet_exit,
  };
  
@@ -34,7 +34,7 @@ Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
  static int __init nf_flow_table_module_init(void)
  {
  	int ret;
-@@ -671,8 +688,14 @@ static int __init nf_flow_table_module_i
+@@ -678,8 +695,14 @@ static int __init nf_flow_table_module_i
  	if (ret)
  		goto out_offload;
  
@@ -49,7 +49,7 @@ Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
  out_offload:
  	unregister_pernet_subsys(&nf_flow_table_net_ops);
  	return ret;
-@@ -680,6 +703,7 @@ out_offload:
+@@ -687,6 +710,7 @@ out_offload:
  
  static void __exit nf_flow_table_module_exit(void)
  {
-- 
2.40.1


From 28e298225f39c72c92812e5796129e5160ef5e73 Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Mon, 15 Jan 2024 14:24:32 -0500
Subject: [PATCH 37/38] kernel: Linux 6.1.73

Link: https://lore.kernel.org/r/20240113094204.017594027@linuxfoundation.org

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 include/kernel-6.1                             |  4 ++--
 ...ing-with-source-address-failed-policy.patch | 18 +++++++++---------
 2 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/include/kernel-6.1 b/include/kernel-6.1
index 836cecf7de..fde32f3ca3 100644
--- a/include/kernel-6.1
+++ b/include/kernel-6.1
@@ -1,2 +1,2 @@
-LINUX_VERSION-6.1 = .72
-LINUX_KERNEL_HASH-6.1.72 = 98dce69077c35cffca799dcdbbd32a02242aad6b0950eb931936bb2ef69f0926
+LINUX_VERSION-6.1 = .73
+LINUX_KERNEL_HASH-6.1.73 = 6cad48706bf1cde342613dca2a2cd6dd4f79f88f9e4d356263564e4b2a5d7e87
diff --git a/target/linux/generic/pending-6.1/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch b/target/linux/generic/pending-6.1/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch
index 003a0f20ac..72e8de2f1d 100644
--- a/target/linux/generic/pending-6.1/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch
+++ b/target/linux/generic/pending-6.1/670-ipv6-allow-rejecting-with-source-address-failed-policy.patch
@@ -157,7 +157,7 @@ Signed-off-by: Jonas Gorski <jogo@openwrt.org>
  	case RTN_THROW:
  	case RTN_UNREACHABLE:
  	default:
-@@ -4543,6 +4562,17 @@ static int ip6_pkt_prohibit_out(struct n
+@@ -4540,6 +4559,17 @@ static int ip6_pkt_prohibit_out(struct n
  	return ip6_pkt_drop(skb, ICMPV6_ADM_PROHIBITED, IPSTATS_MIB_OUTNOROUTES);
  }
  
@@ -175,7 +175,7 @@ Signed-off-by: Jonas Gorski <jogo@openwrt.org>
  /*
   *	Allocate a dst for local (unicast / anycast) address.
   */
-@@ -5036,7 +5066,8 @@ static int rtm_to_fib6_config(struct sk_
+@@ -5033,7 +5063,8 @@ static int rtm_to_fib6_config(struct sk_
  	if (rtm->rtm_type == RTN_UNREACHABLE ||
  	    rtm->rtm_type == RTN_BLACKHOLE ||
  	    rtm->rtm_type == RTN_PROHIBIT ||
@@ -185,7 +185,7 @@ Signed-off-by: Jonas Gorski <jogo@openwrt.org>
  		cfg->fc_flags |= RTF_REJECT;
  
  	if (rtm->rtm_type == RTN_LOCAL)
-@@ -6290,6 +6321,8 @@ static int ip6_route_dev_notify(struct n
+@@ -6287,6 +6318,8 @@ static int ip6_route_dev_notify(struct n
  #ifdef CONFIG_IPV6_MULTIPLE_TABLES
  		net->ipv6.ip6_prohibit_entry->dst.dev = dev;
  		net->ipv6.ip6_prohibit_entry->rt6i_idev = in6_dev_get(dev);
@@ -194,7 +194,7 @@ Signed-off-by: Jonas Gorski <jogo@openwrt.org>
  		net->ipv6.ip6_blk_hole_entry->dst.dev = dev;
  		net->ipv6.ip6_blk_hole_entry->rt6i_idev = in6_dev_get(dev);
  #endif
-@@ -6301,6 +6334,7 @@ static int ip6_route_dev_notify(struct n
+@@ -6298,6 +6331,7 @@ static int ip6_route_dev_notify(struct n
  		in6_dev_put_clear(&net->ipv6.ip6_null_entry->rt6i_idev);
  #ifdef CONFIG_IPV6_MULTIPLE_TABLES
  		in6_dev_put_clear(&net->ipv6.ip6_prohibit_entry->rt6i_idev);
@@ -202,7 +202,7 @@ Signed-off-by: Jonas Gorski <jogo@openwrt.org>
  		in6_dev_put_clear(&net->ipv6.ip6_blk_hole_entry->rt6i_idev);
  #endif
  	}
-@@ -6492,6 +6526,8 @@ static int __net_init ip6_route_net_init
+@@ -6489,6 +6523,8 @@ static int __net_init ip6_route_net_init
  
  #ifdef CONFIG_IPV6_MULTIPLE_TABLES
  	net->ipv6.fib6_has_custom_rules = false;
@@ -211,7 +211,7 @@ Signed-off-by: Jonas Gorski <jogo@openwrt.org>
  	net->ipv6.ip6_prohibit_entry = kmemdup(&ip6_prohibit_entry_template,
  					       sizeof(*net->ipv6.ip6_prohibit_entry),
  					       GFP_KERNEL);
-@@ -6502,11 +6538,21 @@ static int __net_init ip6_route_net_init
+@@ -6499,11 +6535,21 @@ static int __net_init ip6_route_net_init
  			 ip6_template_metrics, true);
  	INIT_LIST_HEAD(&net->ipv6.ip6_prohibit_entry->rt6i_uncached);
  
@@ -234,7 +234,7 @@ Signed-off-by: Jonas Gorski <jogo@openwrt.org>
  	net->ipv6.ip6_blk_hole_entry->dst.ops = &net->ipv6.ip6_dst_ops;
  	dst_init_metrics(&net->ipv6.ip6_blk_hole_entry->dst,
  			 ip6_template_metrics, true);
-@@ -6533,6 +6579,8 @@ out:
+@@ -6530,6 +6576,8 @@ out:
  	return ret;
  
  #ifdef CONFIG_IPV6_MULTIPLE_TABLES
@@ -243,7 +243,7 @@ Signed-off-by: Jonas Gorski <jogo@openwrt.org>
  out_ip6_prohibit_entry:
  	kfree(net->ipv6.ip6_prohibit_entry);
  out_ip6_null_entry:
-@@ -6552,6 +6600,7 @@ static void __net_exit ip6_route_net_exi
+@@ -6549,6 +6597,7 @@ static void __net_exit ip6_route_net_exi
  	kfree(net->ipv6.ip6_null_entry);
  #ifdef CONFIG_IPV6_MULTIPLE_TABLES
  	kfree(net->ipv6.ip6_prohibit_entry);
@@ -251,7 +251,7 @@ Signed-off-by: Jonas Gorski <jogo@openwrt.org>
  	kfree(net->ipv6.ip6_blk_hole_entry);
  #endif
  	dst_entries_destroy(&net->ipv6.ip6_dst_ops);
-@@ -6635,6 +6684,9 @@ void __init ip6_route_init_special_entri
+@@ -6632,6 +6681,9 @@ void __init ip6_route_init_special_entri
  	init_net.ipv6.ip6_prohibit_entry->rt6i_idev = in6_dev_get(init_net.loopback_dev);
  	init_net.ipv6.ip6_blk_hole_entry->dst.dev = init_net.loopback_dev;
  	init_net.ipv6.ip6_blk_hole_entry->rt6i_idev = in6_dev_get(init_net.loopback_dev);
-- 
2.40.1


From 25fca70ee1954eace5103bedf99ba8b61464b6fc Mon Sep 17 00:00:00 2001
From: Marty Jones <mj8263788@gmail.com>
Date: Tue, 16 Jan 2024 14:04:04 -0500
Subject: [PATCH 38/38] kernel: queue/6.1.74

Signed-off-by: Marty Jones <mj8263788@gmail.com>
---
 ...icitly-null-terminate-the-xattr-list.patch |  34 +++
 ...inctrl-lochnagar-Don-t-build-on-MIPS.patch |  35 +++
 ...aker-and-headset-mic-pin-config-for-.patch |  52 ++++
 ...init-value-in-mptcp_incoming_options.patch |  28 ++
 ...211-lock-wiphy-mutex-for-rfkill-poll.patch |  29 +++
 ...d-offset-calculation-on-NULL-pointer.patch |  38 +++
 ...ndle-320-MHz-in-ieee80211_ht_cap_ie_.patch |  31 +++
 ...debugfs-fix-automount-d_fsdata-usage.patch | 138 ++++++++++
 ...-debugfs-handlers-vs.-removal-with-l.patch | 107 ++++++++
 ...hlt-Ignore-vbps-when-looking-for-DMI.patch |  97 +++++++
 ...memory-leak-in-nvme_ns_info_from_ide.patch |  43 +++
 ...y-update-dcn315-lpddr-pstate-latency.patch |  58 +++++
 ...at-debugfs-amdgpu_regs_didt-causes-k.patch |  49 ++++
 ...b-client-common-fix-fortify-warnings.patch | 202 +++++++++++++++
 ...nt-completed-flush-data-request-as-i.patch |  63 +++++
 ...e-core-check-for-too-small-lba-shift.patch |  35 +++
 ...tt-Handle-the-interrupt-in-hardirq-c.patch |  43 +++
 ...-hisi_ptt-Don-t-try-to-attach-a-task.patch |  31 +++
 ...oC-wm8974-Correct-boost-mixer-inputs.patch |  42 +++
 ...ip-fix-rk356x-pcie-msg-interrupt-nam.patch |  30 +++
 ...kylake-Fix-mem-leak-in-few-functions.patch |  50 ++++
 ...-incorrect-type-in-assignment-and-ca.patch |  68 +++++
 ...ke-mem-leak-in-skl-register-function.patch |  45 ++++
 ...-Fix-the-position-of-const-qualifier.patch |  36 +++
 ...-incorrect-frame-delay-configuration.patch |  27 ++
 ...mutex-to-avoid-the-jack-detection-fa.patch |  72 +++++
 ...da_dsp_generic-Drop-HDMI-routes-when.patch |  37 +++
 ...au-tu102-flush-all-pdbs-on-vmm-flush.patch |  31 +++
 ...DMI-entry-to-support-System76-Pangol.patch |  34 +++
 ...nditionally-register-dais-for-HDMI-a.patch |  89 +++++++
 ...fix-race-condition-in-tg3_reset_task.patch |  87 +++++++
 ...219-Support-low-DC-impedance-headset.patch |  29 +++
 ...rect-range-check-for-limiting-volume.patch |  33 +++
 ...ce-helper-function-to-get-ctrl-state.patch |  33 +++
 ...-prevent-potential-spectre-v1-gadget.patch |  47 ++++
 ...ip-Fix-PCI-node-addresses-on-rk3399-.patch |  67 +++++
 ...-rcutree_report_cpu_starting-earlier.patch |  70 +++++
 ...Use-channel_width-2-for-vram-table-3.patch |  38 +++
 ...dd-NULL-checks-for-function-pointers.patch |  48 ++++
 ...-potential-error-pointer-dereference.patch |  33 +++
 ...rm-exynos-fix-a-wrong-error-checking.patch |  55 ++++
 ...-corsair-psu-Fix-probe-when-built-in.patch |  50 ++++
 ...ch-Preserve-syscall-nr-across-execve.patch |  43 +++
 ...hip-rk3568-Add-PLL-rate-for-292.5MHz.patch |  32 +++
 ...ip-rk3128-Fix-HCLK_OTG-gate-register.patch |  28 ++
 ...-printing-of-write_flags-in-jbd2_wri.patch |  35 +++
 ...2-increase-the-journal-IO-s-priority.patch | 149 +++++++++++
 ...uninit-value-bug-in-drm_mode_setcrtc.patch |  72 +++++
 ...let-neigh_forced_gc-disable-preempti.patch |  58 +++++
 ...el-vbtn-Fix-missing-tablet-mode-swit.patch |  93 +++++++
 ...ckup-in-journal_finish_inode_data_bu.patch |  75 ++++++
 ...ge-events-show-up-as-LINE-TOO-BIG-in.patch |  72 +++++
 ...-check-when-printing-trace_marker-ou.patch |  60 +++++
 ...ngson-drop-useless-check-for-compati.patch |  38 +++
 ...n-drop-incorrect-dwmac-fallback-comp.patch |  48 ++++
 ...issue-when-open-the-hist-or-hist_deb.patch | 169 ++++++++++++
 ...ot-record-in-NMI-if-the-arch-does-no.patch |  38 +++
 ...able-Synaptics-InterTouch-for-ThinkP.patch |  43 +++
 ...hi6220-fix-Wvoid-pointer-to-enum-cas.patch |  32 +++
 ...p-ATKBD_CMD_GETID-in-translated-mode.patch | 119 +++++++++
 ...2-add-nomux-quirk-for-Acer-P459-G2-M.patch |  38 +++
 ...irtual-vs-physical-address-confusion.patch |  52 ++++
 ...queue-6.1.74-063-ARC-fix-spare-error.patch |  41 +++
 ...cie-avoid-a-NULL-pointer-dereference.patch |  32 +++
 ...-xpad-add-Razer-Wolverine-V2-support.patch |  27 ++
 ...lsa-fixed-a-print-formatting-warning.patch |  30 +++
 ...-initializer-element-is-not-constant.patch |  74 ++++++
 ...nkpad_acpi-fix-for-incorrect-fan-rep.patch | 245 ++++++++++++++++++
 ..._rt5640-Add-quirk-for-the-Medion-Lif.patch |  42 +++
 ..._rt5640-Add-new-swapped-speakers-qui.patch |  97 +++++++
 ...-Add-quirks-for-ASUS-Zenbook-2022-Mo.patch |  44 ++++
 ...nfig-so-DM_AUDIT-depends-on-BLK_DEV_.patch |  23 ++
 ...tendo-Prevent-divide-by-zero-on-code.patch |  95 +++++++
 ...ix-potential-OOB-in-smb2_dump_detail.patch |  84 ++++++
 ...potential-spinlock-recursion-on-poll.patch |  77 ++++++
 ...get-dprefclk-ss-info-from-integratio.patch |  75 ++++++
 ...6.1.74-077-pinctrl-cy8c95x0-Fix-typo.patch |  28 ++
 ...-078-pinctrl-cy8c95x0-Fix-get_pincfg.patch |  29 +++
 ...in-ida_free-when-the-bitmap-is-empty.patch |  90 +++++++
 ...snprintf-truncation-compiler-warning.patch |  76 ++++++
 ...turn-0-if-server-port-is-not-present.patch |  38 +++
 ...x-return-code-check-of-of_property_m.patch |  43 +++
 ...-crtc-fix-uninitialized-variable-use.patch |  47 ++++
 ...-only-v2-leases-handle-the-directory.patch |  30 +++
 84 files changed, 4925 insertions(+)
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-001-f2fs-explicitly-null-terminate-the-xattr-list.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-002-pinctrl-lochnagar-Don-t-build-on-MIPS.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-003-ALSA-hda-Fix-speaker-and-headset-mic-pin-config-for-.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-004-mptcp-fix-uninit-value-in-mptcp_incoming_options.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-005-wifi-cfg80211-lock-wiphy-mutex-for-rfkill-poll.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-006-wifi-avoid-offset-calculation-on-NULL-pointer.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-007-wifi-mac80211-handle-320-MHz-in-ieee80211_ht_cap_ie_.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-008-debugfs-fix-automount-d_fsdata-usage.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-009-debugfs-annotate-debugfs-handlers-vs.-removal-with-l.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-010-ALSA-hda-intel-nhlt-Ignore-vbps-when-looking-for-DMI.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-011-nvme-core-fix-a-memory-leak-in-nvme_ns_info_from_ide.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-012-drm-amd-display-update-dcn315-lpddr-pstate-latency.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-013-drm-amdgpu-Fix-cat-debugfs-amdgpu_regs_didt-causes-k.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-014-smb-client-common-fix-fortify-warnings.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-015-blk-mq-don-t-count-completed-flush-data-request-as-i.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-016-nvme-core-check-for-too-small-lba-shift.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-017-hwtracing-hisi_ptt-Handle-the-interrupt-in-hardirq-c.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-018-hwtracing-hisi_ptt-Don-t-try-to-attach-a-task.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-019-ASoC-wm8974-Correct-boost-mixer-inputs.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-020-arm64-dts-rockchip-fix-rk356x-pcie-msg-interrupt-nam.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-021-ASoC-Intel-Skylake-Fix-mem-leak-in-few-functions.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-022-ASoC-nau8822-Fix-incorrect-type-in-assignment-and-ca.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-023-ASoC-Intel-Skylake-mem-leak-in-skl-register-function.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-024-ASoC-cs43130-Fix-the-position-of-const-qualifier.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-025-ASoC-cs43130-Fix-incorrect-frame-delay-configuration.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-026-ASoC-rt5650-add-mutex-to-avoid-the-jack-detection-fa.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-027-ASoC-Intel-skl_hda_dsp_generic-Drop-HDMI-routes-when.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-028-nouveau-tu102-flush-all-pdbs-on-vmm-flush.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-029-ASoC-amd-yc-Add-DMI-entry-to-support-System76-Pangol.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-030-ASoC-hdac_hda-Conditionally-register-dais-for-HDMI-a.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-031-net-tg3-fix-race-condition-in-tg3_reset_task.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-032-ASoC-da7219-Support-low-DC-impedance-headset.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-033-ASoC-ops-add-correct-range-check-for-limiting-volume.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-034-nvme-introduce-helper-function-to-get-ctrl-state.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-035-nvme-prevent-potential-spectre-v1-gadget.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-036-arm64-dts-rockchip-Fix-PCI-node-addresses-on-rk3399-.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-037-mips-smp-Call-rcutree_report_cpu_starting-earlier.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-038-drm-amd-display-Use-channel_width-2-for-vram-table-3.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-039-drm-amdgpu-Add-NULL-checks-for-function-pointers.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-040-drm-exynos-fix-a-potential-error-pointer-dereference.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-041-drm-exynos-fix-a-wrong-error-checking.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-042-hwmon-corsair-psu-Fix-probe-when-built-in.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-043-LoongArch-Preserve-syscall-nr-across-execve.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-044-clk-rockchip-rk3568-Add-PLL-rate-for-292.5MHz.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-045-clk-rockchip-rk3128-Fix-HCLK_OTG-gate-register.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-046-jbd2-correct-the-printing-of-write_flags-in-jbd2_wri.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-047-jbd2-increase-the-journal-IO-s-priority.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-048-drm-crtc-Fix-uninit-value-bug-in-drm_mode_setcrtc.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-049-neighbour-Don-t-let-neigh_forced_gc-disable-preempti.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-050-platform-x86-intel-vbtn-Fix-missing-tablet-mode-swit.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-051-jbd2-fix-soft-lockup-in-journal_finish_inode_data_bu.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-052-tracing-Have-large-events-show-up-as-LINE-TOO-BIG-in.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-053-tracing-Add-size-check-when-printing-trace_marker-ou.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-054-stmmac-dwmac-loongson-drop-useless-check-for-compati.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-055-MIPS-dts-loongson-drop-incorrect-dwmac-fallback-comp.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-056-tracing-Fix-uaf-issue-when-open-the-hist-or-hist_deb.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-057-ring-buffer-Do-not-record-in-NMI-if-the-arch-does-no.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-058-Input-psmouse-enable-Synaptics-InterTouch-for-ThinkP.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-059-reset-hisilicon-hi6220-fix-Wvoid-pointer-to-enum-cas.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-060-Input-atkbd-skip-ATKBD_CMD_GETID-in-translated-mode.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-061-Input-i8042-add-nomux-quirk-for-Acer-P459-G2-M.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-062-s390-scm-fix-virtual-vs-physical-address-confusion.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-063-ARC-fix-spare-error.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-064-wifi-iwlwifi-pcie-avoid-a-NULL-pointer-dereference.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-065-Input-xpad-add-Razer-Wolverine-V2-support.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-066-kselftest-alsa-fixed-a-print-formatting-warning.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-067-HID-nintendo-fix-initializer-element-is-not-constant.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-068-platform-x86-thinkpad_acpi-fix-for-incorrect-fan-rep.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-069-ASoC-Intel-bytcr_rt5640-Add-quirk-for-the-Medion-Lif.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-070-ASoC-Intel-bytcr_rt5640-Add-new-swapped-speakers-qui.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-071-ALSA-hda-realtek-Add-quirks-for-ASUS-Zenbook-2022-Mo.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-072-dm-audit-fix-Kconfig-so-DM_AUDIT-depends-on-BLK_DEV_.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-073-HID-nintendo-Prevent-divide-by-zero-on-code.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-074-smb-client-fix-potential-OOB-in-smb2_dump_detail.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-075-i2c-rk3x-fix-potential-spinlock-recursion-on-poll.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-076-drm-amd-display-get-dprefclk-ss-info-from-integratio.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-077-pinctrl-cy8c95x0-Fix-typo.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-078-pinctrl-cy8c95x0-Fix-get_pincfg.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-079-ida-Fix-crash-in-ida_free-when-the-bitmap-is-empty.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-080-virtio_blk-fix-snprintf-truncation-compiler-warning.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-081-net-qrtr-ns-Return-0-if-server-port-is-not-present.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-082-ARM-sun9i-smp-fix-return-code-check-of-of_property_m.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-083-drm-crtc-fix-uninitialized-variable-use.patch
 create mode 100644 target/linux/generic/backport-6.1/0-queue-6.1.74-084-ksmbd-only-v2-leases-handle-the-directory.patch

diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-001-f2fs-explicitly-null-terminate-the-xattr-list.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-001-f2fs-explicitly-null-terminate-the-xattr-list.patch
new file mode 100644
index 0000000000..7d954facbd
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-001-f2fs-explicitly-null-terminate-the-xattr-list.patch
@@ -0,0 +1,34 @@
+From 4da7ef1b0cb186fc21aa0c209e095299b1af370a Mon Sep 17 00:00:00 2001
+From: Eric Biggers <ebiggers@google.com>
+Date: Mon, 6 Nov 2023 20:44:34 -0800
+Subject: [PATCH] f2fs: explicitly null-terminate the xattr list
+
+commit e26b6d39270f5eab0087453d9b544189a38c8564 upstream.
+
+When setting an xattr, explicitly null-terminate the xattr list.  This
+eliminates the fragile assumption that the unused xattr space is always
+zeroed.
+
+Signed-off-by: Eric Biggers <ebiggers@google.com>
+Reviewed-by: Chao Yu <chao@kernel.org>
+Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
+Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+---
+ fs/f2fs/xattr.c | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+--- a/fs/f2fs/xattr.c
++++ b/fs/f2fs/xattr.c
+@@ -754,6 +754,12 @@ retry:
+ 		memcpy(pval, value, size);
+ 		last->e_value_size = cpu_to_le16(size);
+ 		new_hsize += newsize;
++		/*
++		 * Explicitly add the null terminator.  The unused xattr space
++		 * is supposed to always be zeroed, which would make this
++		 * unnecessary, but don't depend on that.
++		 */
++		*(u32 *)((u8 *)last + newsize) = 0;
+ 	}
+ 
+ 	error = write_all_xattrs(inode, new_hsize, base_addr, ipage);
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-002-pinctrl-lochnagar-Don-t-build-on-MIPS.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-002-pinctrl-lochnagar-Don-t-build-on-MIPS.patch
new file mode 100644
index 0000000000..b8fef41413
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-002-pinctrl-lochnagar-Don-t-build-on-MIPS.patch
@@ -0,0 +1,35 @@
+From 9133da388927b2aaabe643bffa5adebd14f958ec Mon Sep 17 00:00:00 2001
+From: Charles Keepax <ckeepax@opensource.cirrus.com>
+Date: Wed, 15 Nov 2023 16:28:53 +0000
+Subject: [PATCH] pinctrl: lochnagar: Don't build on MIPS
+
+[ Upstream commit 6588732445ff19f6183f0fa72ddedf67e5a5be32 ]
+
+MIPS appears to define a RST symbol at a high level, which clashes
+with some register naming in the driver. Since there is currently
+no case for running this driver on MIPS devices simply cut off the
+build of this driver on MIPS.
+
+Reported-by: kernel test robot <lkp@intel.com>
+Closes: https://lore.kernel.org/oe-kbuild-all/202311071303.JJMAOjy4-lkp@intel.com/
+Suggested-by: Linus Walleij <linus.walleij@linaro.org>
+Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
+Link: https://lore.kernel.org/r/20231115162853.1891940-1-ckeepax@opensource.cirrus.com
+Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/pinctrl/cirrus/Kconfig | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+--- a/drivers/pinctrl/cirrus/Kconfig
++++ b/drivers/pinctrl/cirrus/Kconfig
+@@ -1,7 +1,8 @@
+ # SPDX-License-Identifier: GPL-2.0-only
+ config PINCTRL_LOCHNAGAR
+ 	tristate "Cirrus Logic Lochnagar pinctrl driver"
+-	depends on MFD_LOCHNAGAR
++	# Avoid clash caused by MIPS defining RST, which is used in the driver
++	depends on MFD_LOCHNAGAR && !MIPS
+ 	select GPIOLIB
+ 	select PINMUX
+ 	select PINCONF
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-003-ALSA-hda-Fix-speaker-and-headset-mic-pin-config-for-.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-003-ALSA-hda-Fix-speaker-and-headset-mic-pin-config-for-.patch
new file mode 100644
index 0000000000..4f4ddbee4a
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-003-ALSA-hda-Fix-speaker-and-headset-mic-pin-config-for-.patch
@@ -0,0 +1,52 @@
+From f081042f04ea1a4863dcb97e19e8e168ea74f9d4 Mon Sep 17 00:00:00 2001
+From: Vasiliy Kovalev <kovalev@altlinux.org>
+Date: Fri, 17 Nov 2023 20:09:23 +0300
+Subject: [PATCH] ALSA: hda - Fix speaker and headset mic pin config for CHUWI
+ CoreBook XPro
+
+[ Upstream commit 7c9caa299335df94ad1c58f70a22f16a540eab60 ]
+
+This patch corrected the speaker and headset mic pin config to the more
+appropriate values.
+
+Signed-off-by: Vasiliy Kovalev <kovalev@altlinux.org>
+Link: https://lore.kernel.org/r/20231117170923.106822-1-kovalev@altlinux.org
+Signed-off-by: Takashi Iwai <tiwai@suse.de>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/pci/hda/patch_realtek.c | 10 ++++++++++
+ 1 file changed, 10 insertions(+)
+
+--- a/sound/pci/hda/patch_realtek.c
++++ b/sound/pci/hda/patch_realtek.c
+@@ -7108,6 +7108,7 @@ enum {
+ 	ALC290_FIXUP_SUBWOOFER_HSJACK,
+ 	ALC269_FIXUP_THINKPAD_ACPI,
+ 	ALC269_FIXUP_DMIC_THINKPAD_ACPI,
++	ALC269VB_FIXUP_CHUWI_COREBOOK_XPRO,
+ 	ALC255_FIXUP_ACER_MIC_NO_PRESENCE,
+ 	ALC255_FIXUP_ASUS_MIC_NO_PRESENCE,
+ 	ALC255_FIXUP_DELL1_MIC_NO_PRESENCE,
+@@ -7454,6 +7455,14 @@ static const struct hda_fixup alc269_fix
+ 		.type = HDA_FIXUP_FUNC,
+ 		.v.func = alc269_fixup_pincfg_U7x7_headset_mic,
+ 	},
++	[ALC269VB_FIXUP_CHUWI_COREBOOK_XPRO] = {
++		.type = HDA_FIXUP_PINS,
++		.v.pins = (const struct hda_pintbl[]) {
++			{ 0x18, 0x03a19020 }, /* headset mic */
++			{ 0x1b, 0x90170150 }, /* speaker */
++			{ }
++		},
++	},
+ 	[ALC269_FIXUP_AMIC] = {
+ 		.type = HDA_FIXUP_PINS,
+ 		.v.pins = (const struct hda_pintbl[]) {
+@@ -10032,6 +10041,7 @@ static const struct snd_pci_quirk alc269
+ 	SND_PCI_QUIRK(0x1d72, 0x1901, "RedmiBook 14", ALC256_FIXUP_ASUS_HEADSET_MIC),
+ 	SND_PCI_QUIRK(0x1d72, 0x1945, "Redmi G", ALC256_FIXUP_ASUS_HEADSET_MIC),
+ 	SND_PCI_QUIRK(0x1d72, 0x1947, "RedmiBook Air", ALC255_FIXUP_XIAOMI_HEADSET_MIC),
++	SND_PCI_QUIRK(0x2782, 0x0232, "CHUWI CoreBook XPro", ALC269VB_FIXUP_CHUWI_COREBOOK_XPRO),
+ 	SND_PCI_QUIRK(0x8086, 0x2074, "Intel NUC 8", ALC233_FIXUP_INTEL_NUC8_DMIC),
+ 	SND_PCI_QUIRK(0x8086, 0x2080, "Intel NUC 8 Rugged", ALC256_FIXUP_INTEL_NUC8_RUGGED),
+ 	SND_PCI_QUIRK(0x8086, 0x2081, "Intel NUC 10", ALC256_FIXUP_INTEL_NUC10),
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-004-mptcp-fix-uninit-value-in-mptcp_incoming_options.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-004-mptcp-fix-uninit-value-in-mptcp_incoming_options.patch
new file mode 100644
index 0000000000..eba19e58da
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-004-mptcp-fix-uninit-value-in-mptcp_incoming_options.patch
@@ -0,0 +1,28 @@
+From 02d9b44f1cfe8db0b1fcae95c346b789bf8e2cb5 Mon Sep 17 00:00:00 2001
+From: Edward Adam Davis <eadavis@qq.com>
+Date: Thu, 23 Nov 2023 09:23:39 +0800
+Subject: [PATCH] mptcp: fix uninit-value in mptcp_incoming_options
+
+[ Upstream commit 237ff253f2d4f6307b7b20434d7cbcc67693298b ]
+
+Added initialization use_ack to mptcp_parse_option().
+
+Reported-by: syzbot+b834a6b2decad004cfa1@syzkaller.appspotmail.com
+Signed-off-by: Edward Adam Davis <eadavis@qq.com>
+Acked-by: Paolo Abeni <pabeni@redhat.com>
+Signed-off-by: David S. Miller <davem@davemloft.net>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ net/mptcp/options.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/net/mptcp/options.c
++++ b/net/mptcp/options.c
+@@ -103,6 +103,7 @@ static void mptcp_parse_option(const str
+ 			mp_opt->suboptions |= OPTION_MPTCP_DSS;
+ 			mp_opt->use_map = 1;
+ 			mp_opt->mpc_map = 1;
++			mp_opt->use_ack = 0;
+ 			mp_opt->data_len = get_unaligned_be16(ptr);
+ 			ptr += 2;
+ 		}
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-005-wifi-cfg80211-lock-wiphy-mutex-for-rfkill-poll.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-005-wifi-cfg80211-lock-wiphy-mutex-for-rfkill-poll.patch
new file mode 100644
index 0000000000..1524400d33
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-005-wifi-cfg80211-lock-wiphy-mutex-for-rfkill-poll.patch
@@ -0,0 +1,29 @@
+From 455bd00064b24299b3f8cc08888d791fa968a187 Mon Sep 17 00:00:00 2001
+From: Johannes Berg <johannes.berg@intel.com>
+Date: Wed, 8 Nov 2023 13:41:25 +0100
+Subject: [PATCH] wifi: cfg80211: lock wiphy mutex for rfkill poll
+
+[ Upstream commit 8e2f6f2366219b3304b227bdd2f04b64c92e3e12 ]
+
+We want to guarantee the mutex is held for pretty much
+all operations, so ensure that here as well.
+
+Reported-by: syzbot+7e59a5bfc7a897247e18@syzkaller.appspotmail.com
+Signed-off-by: Johannes Berg <johannes.berg@intel.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ net/wireless/core.c | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/net/wireless/core.c
++++ b/net/wireless/core.c
+@@ -216,7 +216,9 @@ static void cfg80211_rfkill_poll(struct
+ {
+ 	struct cfg80211_registered_device *rdev = data;
+ 
++	wiphy_lock(&rdev->wiphy);
+ 	rdev_rfkill_poll(rdev);
++	wiphy_unlock(&rdev->wiphy);
+ }
+ 
+ void cfg80211_stop_p2p_device(struct cfg80211_registered_device *rdev,
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-006-wifi-avoid-offset-calculation-on-NULL-pointer.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-006-wifi-avoid-offset-calculation-on-NULL-pointer.patch
new file mode 100644
index 0000000000..239c6f4689
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-006-wifi-avoid-offset-calculation-on-NULL-pointer.patch
@@ -0,0 +1,38 @@
+From 9037c7daf9233060ada9c1ee1db20a1026e7672c Mon Sep 17 00:00:00 2001
+From: Michael-CY Lee <michael-cy.lee@mediatek.com>
+Date: Wed, 22 Nov 2023 11:02:37 +0800
+Subject: [PATCH] wifi: avoid offset calculation on NULL pointer
+
+[ Upstream commit ef5828805842204dd0259ecfc132b5916c8a77ae ]
+
+ieee80211_he_6ghz_oper() can be passed a NULL pointer
+and checks for that, but already did the calculation
+to inside of it before. Move it after the check.
+
+Signed-off-by: Michael-CY Lee <michael-cy.lee@mediatek.com>
+Link: https://lore.kernel.org/r/20231122030237.31276-1-michael-cy.lee@mediatek.com
+[rewrite commit message]
+Signed-off-by: Johannes Berg <johannes.berg@intel.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ include/linux/ieee80211.h | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+--- a/include/linux/ieee80211.h
++++ b/include/linux/ieee80211.h
+@@ -2658,12 +2658,14 @@ ieee80211_he_oper_size(const u8 *he_oper
+ static inline const struct ieee80211_he_6ghz_oper *
+ ieee80211_he_6ghz_oper(const struct ieee80211_he_operation *he_oper)
+ {
+-	const u8 *ret = (const void *)&he_oper->optional;
++	const u8 *ret;
+ 	u32 he_oper_params;
+ 
+ 	if (!he_oper)
+ 		return NULL;
+ 
++	ret = (const void *)&he_oper->optional;
++
+ 	he_oper_params = le32_to_cpu(he_oper->he_oper_params);
+ 
+ 	if (!(he_oper_params & IEEE80211_HE_OPERATION_6GHZ_OP_INFO))
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-007-wifi-mac80211-handle-320-MHz-in-ieee80211_ht_cap_ie_.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-007-wifi-mac80211-handle-320-MHz-in-ieee80211_ht_cap_ie_.patch
new file mode 100644
index 0000000000..e3cd410c56
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-007-wifi-mac80211-handle-320-MHz-in-ieee80211_ht_cap_ie_.patch
@@ -0,0 +1,31 @@
+From 447188ec8769e9dbd047d524a2340ba5e55a831e Mon Sep 17 00:00:00 2001
+From: Ben Greear <greearb@candelatech.com>
+Date: Thu, 9 Nov 2023 10:22:01 -0800
+Subject: [PATCH] wifi: mac80211: handle 320 MHz in
+ ieee80211_ht_cap_ie_to_sta_ht_cap
+
+[ Upstream commit 00f7d153f3358a7c7e35aef66fcd9ceb95d90430 ]
+
+The new 320 MHz channel width wasn't handled, so connecting
+a station to a 320 MHz AP would limit the station to 20 MHz
+(on HT) after a warning, handle 320 MHz to fix that.
+
+Signed-off-by: Ben Greear <greearb@candelatech.com>
+Link: https://lore.kernel.org/r/20231109182201.495381-1-greearb@candelatech.com
+[write a proper commit message]
+Signed-off-by: Johannes Berg <johannes.berg@intel.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ net/mac80211/ht.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/net/mac80211/ht.c
++++ b/net/mac80211/ht.c
+@@ -271,6 +271,7 @@ bool ieee80211_ht_cap_ie_to_sta_ht_cap(s
+ 	case NL80211_CHAN_WIDTH_80:
+ 	case NL80211_CHAN_WIDTH_80P80:
+ 	case NL80211_CHAN_WIDTH_160:
++	case NL80211_CHAN_WIDTH_320:
+ 		bw = ht_cap.cap & IEEE80211_HT_CAP_SUP_WIDTH_20_40 ?
+ 				IEEE80211_STA_RX_BW_40 : IEEE80211_STA_RX_BW_20;
+ 		break;
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-008-debugfs-fix-automount-d_fsdata-usage.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-008-debugfs-fix-automount-d_fsdata-usage.patch
new file mode 100644
index 0000000000..e470fe78f4
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-008-debugfs-fix-automount-d_fsdata-usage.patch
@@ -0,0 +1,138 @@
+From dbe0ef2b8fdbcbfd095c36f0db9c9bc6fea7c8ad Mon Sep 17 00:00:00 2001
+From: Johannes Berg <johannes.berg@intel.com>
+Date: Fri, 24 Nov 2023 17:25:24 +0100
+Subject: [PATCH] debugfs: fix automount d_fsdata usage
+
+[ Upstream commit 0ed04a1847a10297595ac24dc7d46b35fb35f90a ]
+
+debugfs_create_automount() stores a function pointer in d_fsdata,
+but since commit 7c8d469877b1 ("debugfs: add support for more
+elaborate ->d_fsdata") debugfs_release_dentry() will free it, now
+conditionally on DEBUGFS_FSDATA_IS_REAL_FOPS_BIT, but that's not
+set for the function pointer in automount. As a result, removing
+an automount dentry would attempt to free the function pointer.
+Luckily, the only user of this (tracing) never removes it.
+
+Nevertheless, it's safer if we just handle the fsdata in one way,
+namely either DEBUGFS_FSDATA_IS_REAL_FOPS_BIT or allocated. Thus,
+change the automount to allocate it, and use the real_fops in the
+data to indicate whether or not automount is filled, rather than
+adding a type tag. At least for now this isn't actually needed,
+but the next changes will require it.
+
+Also check in debugfs_file_get() that it gets only called
+on regular files, just to make things clearer.
+
+Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+Signed-off-by: Johannes Berg <johannes.berg@intel.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ fs/debugfs/file.c     |  8 ++++++++
+ fs/debugfs/inode.c    | 27 ++++++++++++++++++++-------
+ fs/debugfs/internal.h | 10 ++++++++--
+ 3 files changed, 36 insertions(+), 9 deletions(-)
+
+--- a/fs/debugfs/file.c
++++ b/fs/debugfs/file.c
+@@ -84,6 +84,14 @@ int debugfs_file_get(struct dentry *dent
+ 	struct debugfs_fsdata *fsd;
+ 	void *d_fsd;
+ 
++	/*
++	 * This could only happen if some debugfs user erroneously calls
++	 * debugfs_file_get() on a dentry that isn't even a file, let
++	 * them know about it.
++	 */
++	if (WARN_ON(!d_is_reg(dentry)))
++		return -EINVAL;
++
+ 	d_fsd = READ_ONCE(dentry->d_fsdata);
+ 	if (!((unsigned long)d_fsd & DEBUGFS_FSDATA_IS_REAL_FOPS_BIT)) {
+ 		fsd = d_fsd;
+--- a/fs/debugfs/inode.c
++++ b/fs/debugfs/inode.c
+@@ -237,17 +237,19 @@ static const struct super_operations deb
+ 
+ static void debugfs_release_dentry(struct dentry *dentry)
+ {
+-	void *fsd = dentry->d_fsdata;
++	struct debugfs_fsdata *fsd = dentry->d_fsdata;
+ 
+-	if (!((unsigned long)fsd & DEBUGFS_FSDATA_IS_REAL_FOPS_BIT))
+-		kfree(dentry->d_fsdata);
++	if ((unsigned long)fsd & DEBUGFS_FSDATA_IS_REAL_FOPS_BIT)
++		return;
++
++	kfree(fsd);
+ }
+ 
+ static struct vfsmount *debugfs_automount(struct path *path)
+ {
+-	debugfs_automount_t f;
+-	f = (debugfs_automount_t)path->dentry->d_fsdata;
+-	return f(path->dentry, d_inode(path->dentry)->i_private);
++	struct debugfs_fsdata *fsd = path->dentry->d_fsdata;
++
++	return fsd->automount(path->dentry, d_inode(path->dentry)->i_private);
+ }
+ 
+ static const struct dentry_operations debugfs_dops = {
+@@ -635,13 +637,23 @@ struct dentry *debugfs_create_automount(
+ 					void *data)
+ {
+ 	struct dentry *dentry = start_creating(name, parent);
++	struct debugfs_fsdata *fsd;
+ 	struct inode *inode;
+ 
+ 	if (IS_ERR(dentry))
+ 		return dentry;
+ 
++	fsd = kzalloc(sizeof(*fsd), GFP_KERNEL);
++	if (!fsd) {
++		failed_creating(dentry);
++		return ERR_PTR(-ENOMEM);
++	}
++
++	fsd->automount = f;
++
+ 	if (!(debugfs_allow & DEBUGFS_ALLOW_API)) {
+ 		failed_creating(dentry);
++		kfree(fsd);
+ 		return ERR_PTR(-EPERM);
+ 	}
+ 
+@@ -649,13 +661,14 @@ struct dentry *debugfs_create_automount(
+ 	if (unlikely(!inode)) {
+ 		pr_err("out of free dentries, can not create automount '%s'\n",
+ 		       name);
++		kfree(fsd);
+ 		return failed_creating(dentry);
+ 	}
+ 
+ 	make_empty_dir_inode(inode);
+ 	inode->i_flags |= S_AUTOMOUNT;
+ 	inode->i_private = data;
+-	dentry->d_fsdata = (void *)f;
++	dentry->d_fsdata = fsd;
+ 	/* directory inodes start off with i_nlink == 2 (for "." entry) */
+ 	inc_nlink(inode);
+ 	d_instantiate(dentry, inode);
+--- a/fs/debugfs/internal.h
++++ b/fs/debugfs/internal.h
+@@ -17,8 +17,14 @@ extern const struct file_operations debu
+ 
+ struct debugfs_fsdata {
+ 	const struct file_operations *real_fops;
+-	refcount_t active_users;
+-	struct completion active_users_drained;
++	union {
++		/* automount_fn is used when real_fops is NULL */
++		debugfs_automount_t automount;
++		struct {
++			refcount_t active_users;
++			struct completion active_users_drained;
++		};
++	};
+ };
+ 
+ /*
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-009-debugfs-annotate-debugfs-handlers-vs.-removal-with-l.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-009-debugfs-annotate-debugfs-handlers-vs.-removal-with-l.patch
new file mode 100644
index 0000000000..64ccae8472
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-009-debugfs-annotate-debugfs-handlers-vs.-removal-with-l.patch
@@ -0,0 +1,107 @@
+From 2afe9c83b07f8d3538bdb85381cc6d07c4a80e5e Mon Sep 17 00:00:00 2001
+From: Johannes Berg <johannes.berg@intel.com>
+Date: Fri, 24 Nov 2023 17:25:25 +0100
+Subject: [PATCH] debugfs: annotate debugfs handlers vs. removal with lockdep
+
+[ Upstream commit f4acfcd4deb158b96595250cc332901b282d15b0 ]
+
+When you take a lock in a debugfs handler but also try
+to remove the debugfs file under that lock, things can
+deadlock since the removal has to wait for all users
+to finish.
+
+Add lockdep annotations in debugfs_file_get()/_put()
+to catch such issues.
+
+Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
+Signed-off-by: Johannes Berg <johannes.berg@intel.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ fs/debugfs/file.c     | 10 ++++++++++
+ fs/debugfs/inode.c    | 12 ++++++++++++
+ fs/debugfs/internal.h |  6 ++++++
+ 3 files changed, 28 insertions(+)
+
+--- a/fs/debugfs/file.c
++++ b/fs/debugfs/file.c
+@@ -108,6 +108,12 @@ int debugfs_file_get(struct dentry *dent
+ 			kfree(fsd);
+ 			fsd = READ_ONCE(dentry->d_fsdata);
+ 		}
++#ifdef CONFIG_LOCKDEP
++		fsd->lock_name = kasprintf(GFP_KERNEL, "debugfs:%pd", dentry);
++		lockdep_register_key(&fsd->key);
++		lockdep_init_map(&fsd->lockdep_map, fsd->lock_name ?: "debugfs",
++				 &fsd->key, 0);
++#endif
+ 	}
+ 
+ 	/*
+@@ -124,6 +130,8 @@ int debugfs_file_get(struct dentry *dent
+ 	if (!refcount_inc_not_zero(&fsd->active_users))
+ 		return -EIO;
+ 
++	lock_map_acquire_read(&fsd->lockdep_map);
++
+ 	return 0;
+ }
+ EXPORT_SYMBOL_GPL(debugfs_file_get);
+@@ -141,6 +149,8 @@ void debugfs_file_put(struct dentry *den
+ {
+ 	struct debugfs_fsdata *fsd = READ_ONCE(dentry->d_fsdata);
+ 
++	lock_map_release(&fsd->lockdep_map);
++
+ 	if (refcount_dec_and_test(&fsd->active_users))
+ 		complete(&fsd->active_users_drained);
+ }
+--- a/fs/debugfs/inode.c
++++ b/fs/debugfs/inode.c
+@@ -242,6 +242,14 @@ static void debugfs_release_dentry(struc
+ 	if ((unsigned long)fsd & DEBUGFS_FSDATA_IS_REAL_FOPS_BIT)
+ 		return;
+ 
++	/* check it wasn't a dir (no fsdata) or automount (no real_fops) */
++	if (fsd && fsd->real_fops) {
++#ifdef CONFIG_LOCKDEP
++		lockdep_unregister_key(&fsd->key);
++		kfree(fsd->lock_name);
++#endif
++	}
++
+ 	kfree(fsd);
+ }
+ 
+@@ -745,6 +753,10 @@ static void __debugfs_file_removed(struc
+ 	fsd = READ_ONCE(dentry->d_fsdata);
+ 	if ((unsigned long)fsd & DEBUGFS_FSDATA_IS_REAL_FOPS_BIT)
+ 		return;
++
++	lock_map_acquire(&fsd->lockdep_map);
++	lock_map_release(&fsd->lockdep_map);
++
+ 	if (!refcount_dec_and_test(&fsd->active_users))
+ 		wait_for_completion(&fsd->active_users_drained);
+ }
+--- a/fs/debugfs/internal.h
++++ b/fs/debugfs/internal.h
+@@ -7,6 +7,7 @@
+ 
+ #ifndef _DEBUGFS_INTERNAL_H_
+ #define _DEBUGFS_INTERNAL_H_
++#include <linux/lockdep.h>
+ 
+ struct file_operations;
+ 
+@@ -23,6 +24,11 @@ struct debugfs_fsdata {
+ 		struct {
+ 			refcount_t active_users;
+ 			struct completion active_users_drained;
++#ifdef CONFIG_LOCKDEP
++			struct lockdep_map lockdep_map;
++			struct lock_class_key key;
++			char *lock_name;
++#endif
+ 		};
+ 	};
+ };
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-010-ALSA-hda-intel-nhlt-Ignore-vbps-when-looking-for-DMI.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-010-ALSA-hda-intel-nhlt-Ignore-vbps-when-looking-for-DMI.patch
new file mode 100644
index 0000000000..1f58fb21e3
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-010-ALSA-hda-intel-nhlt-Ignore-vbps-when-looking-for-DMI.patch
@@ -0,0 +1,97 @@
+From b168c2fecd03fe7bcfcc02df4ed296a53d55808f Mon Sep 17 00:00:00 2001
+From: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
+Date: Mon, 27 Nov 2023 13:16:58 +0200
+Subject: [PATCH] ALSA: hda: intel-nhlt: Ignore vbps when looking for DMIC 32
+ bps format
+
+[ Upstream commit 7b4c93a50a2ebbbaf656cc4fa6aca74a6166d85b ]
+
+When looking up DMIC blob from the NHLT table and the format is 32 bits,
+ignore the vbps matching for 32 bps for DMIC since some NHLT table have
+the vbps as 24, some have it as 32.
+The DMIC hardware supports only one type of 32 bit sample size, which is
+24 bit sampling on the MSB side and bits[1:0] is used for indicating the
+channel number.
+
+Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
+Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
+Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
+Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
+Link: https://lore.kernel.org/r/20231127111658.17275-1-peter.ujfalusi@linux.intel.com
+Signed-off-by: Takashi Iwai <tiwai@suse.de>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/hda/intel-nhlt.c | 33 +++++++++++++++++++++++++++++----
+ 1 file changed, 29 insertions(+), 4 deletions(-)
+
+--- a/sound/hda/intel-nhlt.c
++++ b/sound/hda/intel-nhlt.c
+@@ -238,7 +238,7 @@ EXPORT_SYMBOL(intel_nhlt_ssp_mclk_mask);
+ 
+ static struct nhlt_specific_cfg *
+ nhlt_get_specific_cfg(struct device *dev, struct nhlt_fmt *fmt, u8 num_ch,
+-		      u32 rate, u8 vbps, u8 bps)
++		      u32 rate, u8 vbps, u8 bps, bool ignore_vbps)
+ {
+ 	struct nhlt_fmt_cfg *cfg = fmt->fmt_config;
+ 	struct wav_fmt *wfmt;
+@@ -255,8 +255,12 @@ nhlt_get_specific_cfg(struct device *dev
+ 		dev_dbg(dev, "Endpoint format: ch=%d fmt=%d/%d rate=%d\n",
+ 			wfmt->channels, _vbps, _bps, wfmt->samples_per_sec);
+ 
++		/*
++		 * When looking for exact match of configuration ignore the vbps
++		 * from NHLT table when ignore_vbps is true
++		 */
+ 		if (wfmt->channels == num_ch && wfmt->samples_per_sec == rate &&
+-		    vbps == _vbps && bps == _bps)
++		    (ignore_vbps || vbps == _vbps) && bps == _bps)
+ 			return &cfg->config;
+ 
+ 		cfg = (struct nhlt_fmt_cfg *)(cfg->config.caps + cfg->config.size);
+@@ -289,6 +293,7 @@ intel_nhlt_get_endpoint_blob(struct devi
+ {
+ 	struct nhlt_specific_cfg *cfg;
+ 	struct nhlt_endpoint *epnt;
++	bool ignore_vbps = false;
+ 	struct nhlt_fmt *fmt;
+ 	int i;
+ 
+@@ -298,7 +303,26 @@ intel_nhlt_get_endpoint_blob(struct devi
+ 	dev_dbg(dev, "Looking for configuration:\n");
+ 	dev_dbg(dev, "  vbus_id=%d link_type=%d dir=%d, dev_type=%d\n",
+ 		bus_id, link_type, dir, dev_type);
+-	dev_dbg(dev, "  ch=%d fmt=%d/%d rate=%d\n", num_ch, vbps, bps, rate);
++	if (link_type == NHLT_LINK_DMIC && bps == 32 && (vbps == 24 || vbps == 32)) {
++		/*
++		 * The DMIC hardware supports only one type of 32 bits sample
++		 * size, which is 24 bit sampling on the MSB side and bits[1:0]
++		 * are used for indicating the channel number.
++		 * It has been observed that some NHLT tables have the vbps
++		 * specified as 32 while some uses 24.
++		 * The format these variations describe are identical, the
++		 * hardware is configured and behaves the same way.
++		 * Note: when the samples assumed to be vbps=32 then the 'noise'
++		 * introduced by the lower two bits (channel number) have no
++		 * real life implication on audio quality.
++		 */
++		dev_dbg(dev,
++			"  ch=%d fmt=%d rate=%d (vbps is ignored for DMIC 32bit format)\n",
++			num_ch, bps, rate);
++		ignore_vbps = true;
++	} else {
++		dev_dbg(dev, "  ch=%d fmt=%d/%d rate=%d\n", num_ch, vbps, bps, rate);
++	}
+ 	dev_dbg(dev, "Endpoint count=%d\n", nhlt->endpoint_count);
+ 
+ 	epnt = (struct nhlt_endpoint *)nhlt->desc;
+@@ -307,7 +331,8 @@ intel_nhlt_get_endpoint_blob(struct devi
+ 		if (nhlt_check_ep_match(dev, epnt, bus_id, link_type, dir, dev_type)) {
+ 			fmt = (struct nhlt_fmt *)(epnt->config.caps + epnt->config.size);
+ 
+-			cfg = nhlt_get_specific_cfg(dev, fmt, num_ch, rate, vbps, bps);
++			cfg = nhlt_get_specific_cfg(dev, fmt, num_ch, rate,
++						    vbps, bps, ignore_vbps);
+ 			if (cfg)
+ 				return cfg;
+ 		}
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-011-nvme-core-fix-a-memory-leak-in-nvme_ns_info_from_ide.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-011-nvme-core-fix-a-memory-leak-in-nvme_ns_info_from_ide.patch
new file mode 100644
index 0000000000..82551f5ac3
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-011-nvme-core-fix-a-memory-leak-in-nvme_ns_info_from_ide.patch
@@ -0,0 +1,43 @@
+From a328340d7c59fc536b13a4078dc3905499927f0a Mon Sep 17 00:00:00 2001
+From: Maurizio Lombardi <mlombard@redhat.com>
+Date: Thu, 23 Nov 2023 15:07:41 +0100
+Subject: [PATCH] nvme-core: fix a memory leak in nvme_ns_info_from_identify()
+
+[ Upstream commit e3139cef8257fcab1725441e2fd5fd0ccb5481b1 ]
+
+In case of error, free the nvme_id_ns structure that was allocated
+by nvme_identify_ns().
+
+Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
+Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
+Reviewed-by: Kanchan Joshi <joshi.k@samsung.com>
+Signed-off-by: Keith Busch <kbusch@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/nvme/host/core.c | 7 +++++--
+ 1 file changed, 5 insertions(+), 2 deletions(-)
+
+--- a/drivers/nvme/host/core.c
++++ b/drivers/nvme/host/core.c
+@@ -1511,7 +1511,8 @@ static int nvme_ns_info_from_identify(st
+ 	if (id->ncap == 0) {
+ 		/* namespace not allocated or attached */
+ 		info->is_removed = true;
+-		return -ENODEV;
++		ret = -ENODEV;
++		goto error;
+ 	}
+ 
+ 	info->anagrpid = id->anagrpid;
+@@ -1529,8 +1530,10 @@ static int nvme_ns_info_from_identify(st
+ 		    !memchr_inv(ids->nguid, 0, sizeof(ids->nguid)))
+ 			memcpy(ids->nguid, id->nguid, sizeof(ids->nguid));
+ 	}
++
++error:
+ 	kfree(id);
+-	return 0;
++	return ret;
+ }
+ 
+ static int nvme_ns_info_from_id_cs_indep(struct nvme_ctrl *ctrl,
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-012-drm-amd-display-update-dcn315-lpddr-pstate-latency.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-012-drm-amd-display-update-dcn315-lpddr-pstate-latency.patch
new file mode 100644
index 0000000000..a646df6d09
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-012-drm-amd-display-update-dcn315-lpddr-pstate-latency.patch
@@ -0,0 +1,58 @@
+From c0e5c6fcfd38f4b7b9f7834f9723286dabb15536 Mon Sep 17 00:00:00 2001
+From: Dmytro Laktyushkin <dmytro.laktyushkin@amd.com>
+Date: Fri, 3 Nov 2023 14:55:37 -0400
+Subject: [PATCH] drm/amd/display: update dcn315 lpddr pstate latency
+
+[ Upstream commit c92da0403d373c03ea5c65c0260c7db6762013b0 ]
+
+[WHY/HOW]
+Increase the pstate latency to improve ac/dc transition
+
+Reviewed-by: Charlene Liu <charlene.liu@amd.com>
+Acked-by: Tom Chung <chiahsuan.chung@amd.com>
+Signed-off-by: Dmytro Laktyushkin <dmytro.laktyushkin@amd.com>
+Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
+Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ .../drm/amd/display/dc/clk_mgr/dcn315/dcn315_clk_mgr.c    | 8 ++++----
+ 1 file changed, 4 insertions(+), 4 deletions(-)
+
+--- a/drivers/gpu/drm/amd/display/dc/clk_mgr/dcn315/dcn315_clk_mgr.c
++++ b/drivers/gpu/drm/amd/display/dc/clk_mgr/dcn315/dcn315_clk_mgr.c
+@@ -324,7 +324,7 @@ static struct wm_table lpddr5_wm_table =
+ 		{
+ 			.wm_inst = WM_A,
+ 			.wm_type = WM_TYPE_PSTATE_CHG,
+-			.pstate_latency_us = 11.65333,
++			.pstate_latency_us = 129.0,
+ 			.sr_exit_time_us = 11.5,
+ 			.sr_enter_plus_exit_time_us = 14.5,
+ 			.valid = true,
+@@ -332,7 +332,7 @@ static struct wm_table lpddr5_wm_table =
+ 		{
+ 			.wm_inst = WM_B,
+ 			.wm_type = WM_TYPE_PSTATE_CHG,
+-			.pstate_latency_us = 11.65333,
++			.pstate_latency_us = 129.0,
+ 			.sr_exit_time_us = 11.5,
+ 			.sr_enter_plus_exit_time_us = 14.5,
+ 			.valid = true,
+@@ -340,7 +340,7 @@ static struct wm_table lpddr5_wm_table =
+ 		{
+ 			.wm_inst = WM_C,
+ 			.wm_type = WM_TYPE_PSTATE_CHG,
+-			.pstate_latency_us = 11.65333,
++			.pstate_latency_us = 129.0,
+ 			.sr_exit_time_us = 11.5,
+ 			.sr_enter_plus_exit_time_us = 14.5,
+ 			.valid = true,
+@@ -348,7 +348,7 @@ static struct wm_table lpddr5_wm_table =
+ 		{
+ 			.wm_inst = WM_D,
+ 			.wm_type = WM_TYPE_PSTATE_CHG,
+-			.pstate_latency_us = 11.65333,
++			.pstate_latency_us = 129.0,
+ 			.sr_exit_time_us = 11.5,
+ 			.sr_enter_plus_exit_time_us = 14.5,
+ 			.valid = true,
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-013-drm-amdgpu-Fix-cat-debugfs-amdgpu_regs_didt-causes-k.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-013-drm-amdgpu-Fix-cat-debugfs-amdgpu_regs_didt-causes-k.patch
new file mode 100644
index 0000000000..bf1b44bd79
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-013-drm-amdgpu-Fix-cat-debugfs-amdgpu_regs_didt-causes-k.patch
@@ -0,0 +1,49 @@
+From 05eb635667b12fed9ec3490a10b6240188954e60 Mon Sep 17 00:00:00 2001
+From: Lu Yao <yaolu@kylinos.cn>
+Date: Thu, 23 Nov 2023 09:22:34 +0800
+Subject: [PATCH] drm/amdgpu: Fix cat debugfs amdgpu_regs_didt causes kernel
+ null pointer
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+[ Upstream commit 2161e09cd05a50d80736fe397145340d2e8f6c05 ]
+
+For 'AMDGPU_FAMILY_SI' family cards, in 'si_common_early_init' func, init
+'didt_rreg' and 'didt_wreg' to 'NULL'. But in func
+'amdgpu_debugfs_regs_didt_read/write', using 'RREG32_DIDT' 'WREG32_DIDT'
+lacks of relevant judgment. And other 'amdgpu_ip_block_version' that use
+these two definitions won't be added for 'AMDGPU_FAMILY_SI'.
+
+So, add null pointer judgment before calling.
+
+Reviewed-by: Christian König <christian.koenig@amd.com>
+Signed-off-by: Lu Yao <yaolu@kylinos.cn>
+Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/gpu/drm/amd/amdgpu/amdgpu_debugfs.c | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_debugfs.c
++++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_debugfs.c
+@@ -479,6 +479,9 @@ static ssize_t amdgpu_debugfs_regs_didt_
+ 	if (size & 0x3 || *pos & 0x3)
+ 		return -EINVAL;
+ 
++	if (!adev->didt_rreg)
++		return -EOPNOTSUPP;
++
+ 	r = pm_runtime_get_sync(adev_to_drm(adev)->dev);
+ 	if (r < 0) {
+ 		pm_runtime_put_autosuspend(adev_to_drm(adev)->dev);
+@@ -535,6 +538,9 @@ static ssize_t amdgpu_debugfs_regs_didt_
+ 	if (size & 0x3 || *pos & 0x3)
+ 		return -EINVAL;
+ 
++	if (!adev->didt_wreg)
++		return -EOPNOTSUPP;
++
+ 	r = pm_runtime_get_sync(adev_to_drm(adev)->dev);
+ 	if (r < 0) {
+ 		pm_runtime_put_autosuspend(adev_to_drm(adev)->dev);
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-014-smb-client-common-fix-fortify-warnings.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-014-smb-client-common-fix-fortify-warnings.patch
new file mode 100644
index 0000000000..256f603d42
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-014-smb-client-common-fix-fortify-warnings.patch
@@ -0,0 +1,202 @@
+From 307babce56e8eb29a919df41f6bcfcbd43bd2250 Mon Sep 17 00:00:00 2001
+From: Dmitry Antipov <dmantipov@yandex.ru>
+Date: Tue, 28 Nov 2023 13:53:47 +0300
+Subject: [PATCH] smb: client, common: fix fortify warnings
+
+[ Upstream commit 0015eb6e12384ff1c589928e84deac2ad1ceb236 ]
+
+When compiling with gcc version 14.0.0 20231126 (experimental)
+and CONFIG_FORTIFY_SOURCE=y, I've noticed the following:
+
+In file included from ./include/linux/string.h:295,
+                 from ./include/linux/bitmap.h:12,
+                 from ./include/linux/cpumask.h:12,
+                 from ./arch/x86/include/asm/paravirt.h:17,
+                 from ./arch/x86/include/asm/cpuid.h:62,
+                 from ./arch/x86/include/asm/processor.h:19,
+                 from ./arch/x86/include/asm/cpufeature.h:5,
+                 from ./arch/x86/include/asm/thread_info.h:53,
+                 from ./include/linux/thread_info.h:60,
+                 from ./arch/x86/include/asm/preempt.h:9,
+                 from ./include/linux/preempt.h:79,
+                 from ./include/linux/spinlock.h:56,
+                 from ./include/linux/wait.h:9,
+                 from ./include/linux/wait_bit.h:8,
+                 from ./include/linux/fs.h:6,
+                 from fs/smb/client/smb2pdu.c:18:
+In function 'fortify_memcpy_chk',
+    inlined from '__SMB2_close' at fs/smb/client/smb2pdu.c:3480:4:
+./include/linux/fortify-string.h:588:25: warning: call to '__read_overflow2_field'
+declared with attribute warning: detected read beyond size of field (2nd parameter);
+maybe use struct_group()? [-Wattribute-warning]
+  588 |                         __read_overflow2_field(q_size_field, size);
+      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+and:
+
+In file included from ./include/linux/string.h:295,
+                 from ./include/linux/bitmap.h:12,
+                 from ./include/linux/cpumask.h:12,
+                 from ./arch/x86/include/asm/paravirt.h:17,
+                 from ./arch/x86/include/asm/cpuid.h:62,
+                 from ./arch/x86/include/asm/processor.h:19,
+                 from ./arch/x86/include/asm/cpufeature.h:5,
+                 from ./arch/x86/include/asm/thread_info.h:53,
+                 from ./include/linux/thread_info.h:60,
+                 from ./arch/x86/include/asm/preempt.h:9,
+                 from ./include/linux/preempt.h:79,
+                 from ./include/linux/spinlock.h:56,
+                 from ./include/linux/wait.h:9,
+                 from ./include/linux/wait_bit.h:8,
+                 from ./include/linux/fs.h:6,
+                 from fs/smb/client/cifssmb.c:17:
+In function 'fortify_memcpy_chk',
+    inlined from 'CIFS_open' at fs/smb/client/cifssmb.c:1248:3:
+./include/linux/fortify-string.h:588:25: warning: call to '__read_overflow2_field'
+declared with attribute warning: detected read beyond size of field (2nd parameter);
+maybe use struct_group()? [-Wattribute-warning]
+  588 |                         __read_overflow2_field(q_size_field, size);
+      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+In both cases, the fortification logic inteprets calls to 'memcpy()' as an
+attempts to copy an amount of data which exceeds the size of the specified
+field (i.e. more than 8 bytes from __le64 value) and thus issues an overread
+warning. Both of these warnings may be silenced by using the convenient
+'struct_group()' quirk.
+
+Signed-off-by: Dmitry Antipov <dmantipov@yandex.ru>
+Acked-by: Namjae Jeon <linkinjeon@kernel.org>
+Signed-off-by: Steve French <stfrench@microsoft.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ fs/smb/client/cifspdu.h | 24 ++++++++++++++----------
+ fs/smb/client/cifssmb.c |  6 ++++--
+ fs/smb/client/smb2pdu.c |  8 +++-----
+ fs/smb/client/smb2pdu.h | 16 +++++++++-------
+ fs/smb/common/smb2pdu.h | 17 ++++++++++-------
+ 5 files changed, 40 insertions(+), 31 deletions(-)
+
+--- a/fs/smb/client/cifspdu.h
++++ b/fs/smb/client/cifspdu.h
+@@ -882,11 +882,13 @@ typedef struct smb_com_open_rsp {
+ 	__u8 OplockLevel;
+ 	__u16 Fid;
+ 	__le32 CreateAction;
+-	__le64 CreationTime;
+-	__le64 LastAccessTime;
+-	__le64 LastWriteTime;
+-	__le64 ChangeTime;
+-	__le32 FileAttributes;
++	struct_group(common_attributes,
++		__le64 CreationTime;
++		__le64 LastAccessTime;
++		__le64 LastWriteTime;
++		__le64 ChangeTime;
++		__le32 FileAttributes;
++	);
+ 	__le64 AllocationSize;
+ 	__le64 EndOfFile;
+ 	__le16 FileType;
+@@ -2268,11 +2270,13 @@ typedef struct {
+ /* QueryFileInfo/QueryPathinfo (also for SetPath/SetFile) data buffer formats */
+ /******************************************************************************/
+ typedef struct { /* data block encoding of response to level 263 QPathInfo */
+-	__le64 CreationTime;
+-	__le64 LastAccessTime;
+-	__le64 LastWriteTime;
+-	__le64 ChangeTime;
+-	__le32 Attributes;
++	struct_group(common_attributes,
++		__le64 CreationTime;
++		__le64 LastAccessTime;
++		__le64 LastWriteTime;
++		__le64 ChangeTime;
++		__le32 Attributes;
++	);
+ 	__u32 Pad1;
+ 	__le64 AllocationSize;
+ 	__le64 EndOfFile;	/* size ie offset to first free byte in file */
+--- a/fs/smb/client/cifssmb.c
++++ b/fs/smb/client/cifssmb.c
+@@ -1234,8 +1234,10 @@ openRetry:
+ 		*oplock |= CIFS_CREATE_ACTION;
+ 
+ 	if (buf) {
+-		/* copy from CreationTime to Attributes */
+-		memcpy((char *)buf, (char *)&rsp->CreationTime, 36);
++		/* copy commonly used attributes */
++		memcpy(&buf->common_attributes,
++		       &rsp->common_attributes,
++		       sizeof(buf->common_attributes));
+ 		/* the file_info buf is endian converted by caller */
+ 		buf->AllocationSize = rsp->AllocationSize;
+ 		buf->EndOfFile = rsp->EndOfFile;
+--- a/fs/smb/client/smb2pdu.c
++++ b/fs/smb/client/smb2pdu.c
+@@ -3429,12 +3429,10 @@ __SMB2_close(const unsigned int xid, str
+ 	} else {
+ 		trace_smb3_close_done(xid, persistent_fid, tcon->tid,
+ 				      ses->Suid);
+-		/*
+-		 * Note that have to subtract 4 since struct network_open_info
+-		 * has a final 4 byte pad that close response does not have
+-		 */
+ 		if (pbuf)
+-			memcpy(pbuf, (char *)&rsp->CreationTime, sizeof(*pbuf) - 4);
++			memcpy(&pbuf->network_open_info,
++			       &rsp->network_open_info,
++			       sizeof(pbuf->network_open_info));
+ 	}
+ 
+ 	atomic_dec(&tcon->num_remote_opens);
+--- a/fs/smb/client/smb2pdu.h
++++ b/fs/smb/client/smb2pdu.h
+@@ -339,13 +339,15 @@ struct smb2_file_reparse_point_info {
+ } __packed;
+ 
+ struct smb2_file_network_open_info {
+-	__le64 CreationTime;
+-	__le64 LastAccessTime;
+-	__le64 LastWriteTime;
+-	__le64 ChangeTime;
+-	__le64 AllocationSize;
+-	__le64 EndOfFile;
+-	__le32 Attributes;
++	struct_group(network_open_info,
++		__le64 CreationTime;
++		__le64 LastAccessTime;
++		__le64 LastWriteTime;
++		__le64 ChangeTime;
++		__le64 AllocationSize;
++		__le64 EndOfFile;
++		__le32 Attributes;
++	);
+ 	__le32 Reserved;
+ } __packed; /* level 34 Query also similar returned in close rsp and open rsp */
+ 
+--- a/fs/smb/common/smb2pdu.h
++++ b/fs/smb/common/smb2pdu.h
+@@ -699,13 +699,16 @@ struct smb2_close_rsp {
+ 	__le16 StructureSize; /* 60 */
+ 	__le16 Flags;
+ 	__le32 Reserved;
+-	__le64 CreationTime;
+-	__le64 LastAccessTime;
+-	__le64 LastWriteTime;
+-	__le64 ChangeTime;
+-	__le64 AllocationSize;	/* Beginning of FILE_STANDARD_INFO equivalent */
+-	__le64 EndOfFile;
+-	__le32 Attributes;
++	struct_group(network_open_info,
++		__le64 CreationTime;
++		__le64 LastAccessTime;
++		__le64 LastWriteTime;
++		__le64 ChangeTime;
++		/* Beginning of FILE_STANDARD_INFO equivalent */
++		__le64 AllocationSize;
++		__le64 EndOfFile;
++		__le32 Attributes;
++	);
+ } __packed;
+ 
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-015-blk-mq-don-t-count-completed-flush-data-request-as-i.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-015-blk-mq-don-t-count-completed-flush-data-request-as-i.patch
new file mode 100644
index 0000000000..dc76058ac5
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-015-blk-mq-don-t-count-completed-flush-data-request-as-i.patch
@@ -0,0 +1,63 @@
+From ad41b305a52c7824d5d0d19fd9c487f043ac3fd9 Mon Sep 17 00:00:00 2001
+From: Ming Lei <ming.lei@redhat.com>
+Date: Fri, 1 Dec 2023 16:56:05 +0800
+Subject: [PATCH] blk-mq: don't count completed flush data request as inflight
+ in case of quiesce
+
+[ Upstream commit 0e4237ae8d159e3d28f3cd83146a46f576ffb586 ]
+
+Request queue quiesce may interrupt flush sequence, and the original request
+may have been marked as COMPLETE, but can't get finished because of
+queue quiesce.
+
+This way is fine from driver viewpoint, because flush sequence is block
+layer concept, and it isn't related with driver.
+
+However, driver(such as dm-rq) can call blk_mq_queue_inflight() to count &
+drain inflight requests, then the wait & drain never gets done because
+the completed & not-finished flush request is counted as inflight.
+
+Fix this issue by not counting completed flush data request as inflight in
+case of quiesce.
+
+Cc: Mike Snitzer <snitzer@kernel.org>
+Cc: David Jeffery <djeffery@redhat.com>
+Cc: John Pittman <jpittman@redhat.com>
+Signed-off-by: Ming Lei <ming.lei@redhat.com>
+Link: https://lore.kernel.org/r/20231201085605.577730-1-ming.lei@redhat.com
+Signed-off-by: Jens Axboe <axboe@kernel.dk>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ block/blk-mq.c | 14 +++++++++++++-
+ 1 file changed, 13 insertions(+), 1 deletion(-)
+
+--- a/block/blk-mq.c
++++ b/block/blk-mq.c
+@@ -1500,14 +1500,26 @@ void blk_mq_delay_kick_requeue_list(stru
+ }
+ EXPORT_SYMBOL(blk_mq_delay_kick_requeue_list);
+ 
++static bool blk_is_flush_data_rq(struct request *rq)
++{
++	return (rq->rq_flags & RQF_FLUSH_SEQ) && !is_flush_rq(rq);
++}
++
+ static bool blk_mq_rq_inflight(struct request *rq, void *priv)
+ {
+ 	/*
+ 	 * If we find a request that isn't idle we know the queue is busy
+ 	 * as it's checked in the iter.
+ 	 * Return false to stop the iteration.
++	 *
++	 * In case of queue quiesce, if one flush data request is completed,
++	 * don't count it as inflight given the flush sequence is suspended,
++	 * and the original flush data request is invisible to driver, just
++	 * like other pending requests because of quiesce
+ 	 */
+-	if (blk_mq_request_started(rq)) {
++	if (blk_mq_request_started(rq) && !(blk_queue_quiesced(rq->q) &&
++				blk_is_flush_data_rq(rq) &&
++				blk_mq_request_completed(rq))) {
+ 		bool *busy = priv;
+ 
+ 		*busy = true;
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-016-nvme-core-check-for-too-small-lba-shift.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-016-nvme-core-check-for-too-small-lba-shift.patch
new file mode 100644
index 0000000000..cfad6f2b8e
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-016-nvme-core-check-for-too-small-lba-shift.patch
@@ -0,0 +1,35 @@
+From a1ae33cced9f311d912803b56d7ca32e21c011b3 Mon Sep 17 00:00:00 2001
+From: Keith Busch <kbusch@kernel.org>
+Date: Tue, 28 Nov 2023 09:36:04 -0800
+Subject: [PATCH] nvme-core: check for too small lba shift
+
+[ Upstream commit 74fbc88e161424b3b96a22b23a8e3e1edab9d05c ]
+
+The block layer doesn't support logical block sizes smaller than 512
+bytes. The nvme spec doesn't support that small either, but the driver
+isn't checking to make sure the device responded with usable data.
+Failing to catch this will result in a kernel bug, either from a
+division by zero when stacking, or a zero length bio.
+
+Reviewed-by: Jens Axboe <axboe@kernel.dk>
+Signed-off-by: Keith Busch <kbusch@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/nvme/host/core.c | 5 +++--
+ 1 file changed, 3 insertions(+), 2 deletions(-)
+
+--- a/drivers/nvme/host/core.c
++++ b/drivers/nvme/host/core.c
+@@ -1925,9 +1925,10 @@ static void nvme_update_disk_info(struct
+ 
+ 	/*
+ 	 * The block layer can't support LBA sizes larger than the page size
+-	 * yet, so catch this early and don't allow block I/O.
++	 * or smaller than a sector size yet, so catch this early and don't
++	 * allow block I/O.
+ 	 */
+-	if (ns->lba_shift > PAGE_SHIFT) {
++	if (ns->lba_shift > PAGE_SHIFT || ns->lba_shift < SECTOR_SHIFT) {
+ 		capacity = 0;
+ 		bs = (1 << 9);
+ 	}
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-017-hwtracing-hisi_ptt-Handle-the-interrupt-in-hardirq-c.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-017-hwtracing-hisi_ptt-Handle-the-interrupt-in-hardirq-c.patch
new file mode 100644
index 0000000000..cc9cf9dd08
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-017-hwtracing-hisi_ptt-Handle-the-interrupt-in-hardirq-c.patch
@@ -0,0 +1,43 @@
+From efbc2b9f438015f025078f5e38959c562e59583c Mon Sep 17 00:00:00 2001
+From: Yicong Yang <yangyicong@hisilicon.com>
+Date: Tue, 10 Oct 2023 16:47:28 +0800
+Subject: [PATCH] hwtracing: hisi_ptt: Handle the interrupt in hardirq context
+
+[ Upstream commit e0dd27ad8af00f147ac3c9de88e0687986afc3ea ]
+
+Handle the trace interrupt in the hardirq context, make sure the irq
+core won't threaded it by declaring IRQF_NO_THREAD and userspace won't
+balance it by declaring IRQF_NOBALANCING. Otherwise we may violate the
+synchronization requirements of the perf core, referenced to the
+change of arm-ccn PMU
+  commit 0811ef7e2f54 ("bus: arm-ccn: fix PMU interrupt flags").
+
+In the interrupt handler we mainly doing 2 things:
+- Copy the data from the local DMA buffer to the AUX buffer
+- Commit the data in the AUX buffer
+
+Signed-off-by: Yicong Yang <yangyicong@hisilicon.com>
+Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+[ Fixed commit description to suppress checkpatch warning ]
+Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
+Link: https://lore.kernel.org/r/20231010084731.30450-3-yangyicong@huawei.com
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/hwtracing/ptt/hisi_ptt.c | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+--- a/drivers/hwtracing/ptt/hisi_ptt.c
++++ b/drivers/hwtracing/ptt/hisi_ptt.c
+@@ -342,9 +342,9 @@ static int hisi_ptt_register_irq(struct
+ 		return ret;
+ 
+ 	hisi_ptt->trace_irq = pci_irq_vector(pdev, HISI_PTT_TRACE_DMA_IRQ);
+-	ret = devm_request_threaded_irq(&pdev->dev, hisi_ptt->trace_irq,
+-					NULL, hisi_ptt_isr, 0,
+-					DRV_NAME, hisi_ptt);
++	ret = devm_request_irq(&pdev->dev, hisi_ptt->trace_irq, hisi_ptt_isr,
++				IRQF_NOBALANCING | IRQF_NO_THREAD, DRV_NAME,
++				hisi_ptt);
+ 	if (ret) {
+ 		pci_err(pdev, "failed to request irq %d, ret = %d\n",
+ 			hisi_ptt->trace_irq, ret);
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-018-hwtracing-hisi_ptt-Don-t-try-to-attach-a-task.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-018-hwtracing-hisi_ptt-Don-t-try-to-attach-a-task.patch
new file mode 100644
index 0000000000..27bb1a6487
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-018-hwtracing-hisi_ptt-Don-t-try-to-attach-a-task.patch
@@ -0,0 +1,31 @@
+From 527285988eb0f17341000128ce9f5c5da8cb4e69 Mon Sep 17 00:00:00 2001
+From: Yicong Yang <yangyicong@hisilicon.com>
+Date: Tue, 10 Oct 2023 16:47:30 +0800
+Subject: [PATCH] hwtracing: hisi_ptt: Don't try to attach a task
+
+[ Upstream commit aff787f64ad7cbb54614b51b82c682fe06411ef3 ]
+
+PTT is an uncore PMU and shouldn't be attached to any task. Block
+the usage in pmu::event_init().
+
+Signed-off-by: Yicong Yang <yangyicong@hisilicon.com>
+Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
+Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
+Link: https://lore.kernel.org/r/20231010084731.30450-5-yangyicong@huawei.com
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/hwtracing/ptt/hisi_ptt.c | 3 +++
+ 1 file changed, 3 insertions(+)
+
+--- a/drivers/hwtracing/ptt/hisi_ptt.c
++++ b/drivers/hwtracing/ptt/hisi_ptt.c
+@@ -659,6 +659,9 @@ static int hisi_ptt_pmu_event_init(struc
+ 		return -EOPNOTSUPP;
+ 	}
+ 
++	if (event->attach_state & PERF_ATTACH_TASK)
++		return -EOPNOTSUPP;
++
+ 	if (event->attr.type != hisi_ptt->hisi_ptt_pmu.type)
+ 		return -ENOENT;
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-019-ASoC-wm8974-Correct-boost-mixer-inputs.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-019-ASoC-wm8974-Correct-boost-mixer-inputs.patch
new file mode 100644
index 0000000000..27f3335337
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-019-ASoC-wm8974-Correct-boost-mixer-inputs.patch
@@ -0,0 +1,42 @@
+From c5e5dc82773a118a81f1c95ed7e8d6d00f70d325 Mon Sep 17 00:00:00 2001
+From: Charles Keepax <ckeepax@opensource.cirrus.com>
+Date: Mon, 13 Nov 2023 15:59:16 +0000
+Subject: [PATCH] ASoC: wm8974: Correct boost mixer inputs
+
+[ Upstream commit 37e6fd0cebf0b9f71afb38fd95b10408799d1f0b ]
+
+Bit 6 of INPPGA (INPPGAMUTE) does not control the Aux path, it controls
+the input PGA path, as can been seen from Figure 8 Input Boost Stage in
+the datasheet. Update the naming of things in the driver to match this
+and update the routing to also reflect this.
+
+Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
+Link: https://lore.kernel.org/r/20231113155916.1741027-1-ckeepax@opensource.cirrus.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/codecs/wm8974.c | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+--- a/sound/soc/codecs/wm8974.c
++++ b/sound/soc/codecs/wm8974.c
+@@ -186,7 +186,7 @@ SOC_DAPM_SINGLE("PCM Playback Switch", W
+ 
+ /* Boost mixer */
+ static const struct snd_kcontrol_new wm8974_boost_mixer[] = {
+-SOC_DAPM_SINGLE("Aux Switch", WM8974_INPPGA, 6, 1, 1),
++SOC_DAPM_SINGLE("PGA Switch", WM8974_INPPGA, 6, 1, 1),
+ };
+ 
+ /* Input PGA */
+@@ -246,8 +246,8 @@ static const struct snd_soc_dapm_route w
+ 
+ 	/* Boost Mixer */
+ 	{"ADC", NULL, "Boost Mixer"},
+-	{"Boost Mixer", "Aux Switch", "Aux Input"},
+-	{"Boost Mixer", NULL, "Input PGA"},
++	{"Boost Mixer", NULL, "Aux Input"},
++	{"Boost Mixer", "PGA Switch", "Input PGA"},
+ 	{"Boost Mixer", NULL, "MICP"},
+ 
+ 	/* Input PGA */
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-020-arm64-dts-rockchip-fix-rk356x-pcie-msg-interrupt-nam.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-020-arm64-dts-rockchip-fix-rk356x-pcie-msg-interrupt-nam.patch
new file mode 100644
index 0000000000..d65b48afd2
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-020-arm64-dts-rockchip-fix-rk356x-pcie-msg-interrupt-nam.patch
@@ -0,0 +1,30 @@
+From 9b4ea4353716679f17ad9840ea19e196bfd14983 Mon Sep 17 00:00:00 2001
+From: Heiko Stuebner <heiko@sntech.de>
+Date: Tue, 14 Nov 2023 16:38:34 +0100
+Subject: [PATCH] arm64: dts: rockchip: fix rk356x pcie msg interrupt name
+
+[ Upstream commit 3cee9c635f27d1003d46f624d816f3455698b625 ]
+
+The expected name by the binding at this position is "msg" and the SoC's
+manual also calls the interrupt in question "msg", so fix the rk356x dtsi
+to use the correct name.
+
+Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Link: https://lore.kernel.org/r/20231114153834.934978-1-heiko@sntech.de
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ arch/arm64/boot/dts/rockchip/rk356x.dtsi | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk356x.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk356x.dtsi
+@@ -958,7 +958,7 @@
+ 			     <GIC_SPI 73 IRQ_TYPE_LEVEL_HIGH>,
+ 			     <GIC_SPI 72 IRQ_TYPE_LEVEL_HIGH>,
+ 			     <GIC_SPI 71 IRQ_TYPE_LEVEL_HIGH>;
+-		interrupt-names = "sys", "pmc", "msi", "legacy", "err";
++		interrupt-names = "sys", "pmc", "msg", "legacy", "err";
+ 		bus-range = <0x0 0xf>;
+ 		clocks = <&cru ACLK_PCIE20_MST>, <&cru ACLK_PCIE20_SLV>,
+ 			 <&cru ACLK_PCIE20_DBI>, <&cru PCLK_PCIE20>,
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-021-ASoC-Intel-Skylake-Fix-mem-leak-in-few-functions.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-021-ASoC-Intel-Skylake-Fix-mem-leak-in-few-functions.patch
new file mode 100644
index 0000000000..305436e052
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-021-ASoC-Intel-Skylake-Fix-mem-leak-in-few-functions.patch
@@ -0,0 +1,50 @@
+From aac62635899e680ef0b5e99be1b9007f3f1f24a8 Mon Sep 17 00:00:00 2001
+From: Kamil Duljas <kamil.duljas@gmail.com>
+Date: Thu, 16 Nov 2023 13:51:50 +0100
+Subject: [PATCH] ASoC: Intel: Skylake: Fix mem leak in few functions
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+[ Upstream commit d5c65be34df73fa01ed05611aafb73b440d89e29 ]
+
+The resources should be freed when function return error.
+
+Signed-off-by: Kamil Duljas <kamil.duljas@gmail.com>
+Reviewed-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
+Link: https://lore.kernel.org/r/20231116125150.1436-1-kamil.duljas@gmail.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/intel/skylake/skl-pcm.c     | 4 +++-
+ sound/soc/intel/skylake/skl-sst-ipc.c | 4 +++-
+ 2 files changed, 6 insertions(+), 2 deletions(-)
+
+--- a/sound/soc/intel/skylake/skl-pcm.c
++++ b/sound/soc/intel/skylake/skl-pcm.c
+@@ -251,8 +251,10 @@ static int skl_pcm_open(struct snd_pcm_s
+ 	snd_pcm_set_sync(substream);
+ 
+ 	mconfig = skl_tplg_fe_get_cpr_module(dai, substream->stream);
+-	if (!mconfig)
++	if (!mconfig) {
++		kfree(dma_params);
+ 		return -EINVAL;
++	}
+ 
+ 	skl_tplg_d0i3_get(skl, mconfig->d0i3_caps);
+ 
+--- a/sound/soc/intel/skylake/skl-sst-ipc.c
++++ b/sound/soc/intel/skylake/skl-sst-ipc.c
+@@ -1003,8 +1003,10 @@ int skl_ipc_get_large_config(struct sst_
+ 
+ 	reply.size = (reply.header >> 32) & IPC_DATA_OFFSET_SZ_MASK;
+ 	buf = krealloc(reply.data, reply.size, GFP_KERNEL);
+-	if (!buf)
++	if (!buf) {
++		kfree(reply.data);
+ 		return -ENOMEM;
++	}
+ 	*payload = buf;
+ 	*bytes = reply.size;
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-022-ASoC-nau8822-Fix-incorrect-type-in-assignment-and-ca.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-022-ASoC-nau8822-Fix-incorrect-type-in-assignment-and-ca.patch
new file mode 100644
index 0000000000..3aa0ba5456
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-022-ASoC-nau8822-Fix-incorrect-type-in-assignment-and-ca.patch
@@ -0,0 +1,68 @@
+From 4a08ec55f12cbb3c5fddfa214cc1f1bbc59e92c3 Mon Sep 17 00:00:00 2001
+From: David Lin <CTLIN0@nuvoton.com>
+Date: Fri, 17 Nov 2023 12:30:12 +0800
+Subject: [PATCH] ASoC: nau8822: Fix incorrect type in assignment and cast to
+ restricted __be16
+
+[ Upstream commit c1501f2597dd08601acd42256a4b0a0fc36bf302 ]
+
+This issue is reproduced when W=1 build in compiler gcc-12.
+The following are sparse warnings:
+
+sound/soc/codecs/nau8822.c:199:25: sparse: sparse: incorrect type in assignment
+sound/soc/codecs/nau8822.c:199:25: sparse: expected unsigned short
+sound/soc/codecs/nau8822.c:199:25: sparse: got restricted __be16
+sound/soc/codecs/nau8822.c:235:25: sparse: sparse: cast to restricted __be16
+sound/soc/codecs/nau8822.c:235:25: sparse: sparse: cast to restricted __be16
+sound/soc/codecs/nau8822.c:235:25: sparse: sparse: cast to restricted __be16
+sound/soc/codecs/nau8822.c:235:25: sparse: sparse: cast to restricted __be16
+
+Reported-by: kernel test robot <lkp@intel.com>
+Closes: https://lore.kernel.org/oe-kbuild-all/202311122320.T1opZVkP-lkp@intel.com/
+Signed-off-by: David Lin <CTLIN0@nuvoton.com>
+Link: https://lore.kernel.org/r/20231117043011.1747594-1-CTLIN0@nuvoton.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/codecs/nau8822.c | 9 ++++++---
+ 1 file changed, 6 insertions(+), 3 deletions(-)
+
+--- a/sound/soc/codecs/nau8822.c
++++ b/sound/soc/codecs/nau8822.c
+@@ -184,6 +184,7 @@ static int nau8822_eq_get(struct snd_kco
+ 	struct soc_bytes_ext *params = (void *)kcontrol->private_value;
+ 	int i, reg;
+ 	u16 reg_val, *val;
++	__be16 tmp;
+ 
+ 	val = (u16 *)ucontrol->value.bytes.data;
+ 	reg = NAU8822_REG_EQ1;
+@@ -192,8 +193,8 @@ static int nau8822_eq_get(struct snd_kco
+ 		/* conversion of 16-bit integers between native CPU format
+ 		 * and big endian format
+ 		 */
+-		reg_val = cpu_to_be16(reg_val);
+-		memcpy(val + i, &reg_val, sizeof(reg_val));
++		tmp = cpu_to_be16(reg_val);
++		memcpy(val + i, &tmp, sizeof(tmp));
+ 	}
+ 
+ 	return 0;
+@@ -216,6 +217,7 @@ static int nau8822_eq_put(struct snd_kco
+ 	void *data;
+ 	u16 *val, value;
+ 	int i, reg, ret;
++	__be16 *tmp;
+ 
+ 	data = kmemdup(ucontrol->value.bytes.data,
+ 		params->max, GFP_KERNEL | GFP_DMA);
+@@ -228,7 +230,8 @@ static int nau8822_eq_put(struct snd_kco
+ 		/* conversion of 16-bit integers between native CPU format
+ 		 * and big endian format
+ 		 */
+-		value = be16_to_cpu(*(val + i));
++		tmp = (__be16 *)(val + i);
++		value = be16_to_cpup(tmp);
+ 		ret = snd_soc_component_write(component, reg + i, value);
+ 		if (ret) {
+ 			dev_err(component->dev,
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-023-ASoC-Intel-Skylake-mem-leak-in-skl-register-function.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-023-ASoC-Intel-Skylake-mem-leak-in-skl-register-function.patch
new file mode 100644
index 0000000000..c316bdc12d
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-023-ASoC-Intel-Skylake-mem-leak-in-skl-register-function.patch
@@ -0,0 +1,45 @@
+From 8960b26c39a2aad1a78db3fb9484cab7c6361931 Mon Sep 17 00:00:00 2001
+From: Kamil Duljas <kamil.duljas@gmail.com>
+Date: Thu, 16 Nov 2023 23:41:13 +0100
+Subject: [PATCH] ASoC: Intel: Skylake: mem leak in skl register function
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+[ Upstream commit f8ba14b780273fd290ddf7ee0d7d7decb44cc365 ]
+
+skl_platform_register() uses krealloc. When krealloc is fail,
+then previous memory is not freed. The leak is also when soc
+component registration failed.
+
+Signed-off-by: Kamil Duljas <kamil.duljas@gmail.com>
+Reviewed-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
+Link: https://lore.kernel.org/r/20231116224112.2209-2-kamil.duljas@gmail.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/intel/skylake/skl-pcm.c | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
+
+--- a/sound/soc/intel/skylake/skl-pcm.c
++++ b/sound/soc/intel/skylake/skl-pcm.c
+@@ -1473,6 +1473,7 @@ int skl_platform_register(struct device
+ 		dais = krealloc(skl->dais, sizeof(skl_fe_dai) +
+ 				sizeof(skl_platform_dai), GFP_KERNEL);
+ 		if (!dais) {
++			kfree(skl->dais);
+ 			ret = -ENOMEM;
+ 			goto err;
+ 		}
+@@ -1485,8 +1486,10 @@ int skl_platform_register(struct device
+ 
+ 	ret = devm_snd_soc_register_component(dev, &skl_component,
+ 					 skl->dais, num_dais);
+-	if (ret)
++	if (ret) {
++		kfree(skl->dais);
+ 		dev_err(dev, "soc component registration failed %d\n", ret);
++	}
+ err:
+ 	return ret;
+ }
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-024-ASoC-cs43130-Fix-the-position-of-const-qualifier.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-024-ASoC-cs43130-Fix-the-position-of-const-qualifier.patch
new file mode 100644
index 0000000000..34ba669183
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-024-ASoC-cs43130-Fix-the-position-of-const-qualifier.patch
@@ -0,0 +1,36 @@
+From 8a8bed719d7af58d0c812ad1897b0cb9b5f97484 Mon Sep 17 00:00:00 2001
+From: Maciej Strozek <mstrozek@opensource.cirrus.com>
+Date: Fri, 17 Nov 2023 14:13:38 +0000
+Subject: [PATCH] ASoC: cs43130: Fix the position of const qualifier
+
+[ Upstream commit e7f289a59e76a5890a57bc27b198f69f175f75d9 ]
+
+Signed-off-by: Maciej Strozek <mstrozek@opensource.cirrus.com>
+Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
+Link: https://lore.kernel.org/r/20231117141344.64320-2-mstrozek@opensource.cirrus.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/codecs/cs43130.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+--- a/sound/soc/codecs/cs43130.c
++++ b/sound/soc/codecs/cs43130.c
+@@ -1683,7 +1683,7 @@ static ssize_t hpload_dc_r_show(struct d
+ 	return cs43130_show_dc(dev, buf, HP_RIGHT);
+ }
+ 
+-static u16 const cs43130_ac_freq[CS43130_AC_FREQ] = {
++static const u16 cs43130_ac_freq[CS43130_AC_FREQ] = {
+ 	24,
+ 	43,
+ 	93,
+@@ -2363,7 +2363,7 @@ static const struct regmap_config cs4313
+ 	.use_single_write	= true,
+ };
+ 
+-static u16 const cs43130_dc_threshold[CS43130_DC_THRESHOLD] = {
++static const u16 cs43130_dc_threshold[CS43130_DC_THRESHOLD] = {
+ 	50,
+ 	120,
+ };
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-025-ASoC-cs43130-Fix-incorrect-frame-delay-configuration.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-025-ASoC-cs43130-Fix-incorrect-frame-delay-configuration.patch
new file mode 100644
index 0000000000..f2a86136b6
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-025-ASoC-cs43130-Fix-incorrect-frame-delay-configuration.patch
@@ -0,0 +1,27 @@
+From 59ebc39f03a7b6b36467dd2be642f459624bcdeb Mon Sep 17 00:00:00 2001
+From: Maciej Strozek <mstrozek@opensource.cirrus.com>
+Date: Fri, 17 Nov 2023 14:13:39 +0000
+Subject: [PATCH] ASoC: cs43130: Fix incorrect frame delay configuration
+
+[ Upstream commit aa7e8e5e4011571022dc06e4d7a2f108feb53d1a ]
+
+Signed-off-by: Maciej Strozek <mstrozek@opensource.cirrus.com>
+Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
+Link: https://lore.kernel.org/r/20231117141344.64320-3-mstrozek@opensource.cirrus.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/codecs/cs43130.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/sound/soc/codecs/cs43130.c
++++ b/sound/soc/codecs/cs43130.c
+@@ -579,7 +579,7 @@ static int cs43130_set_sp_fmt(int dai_id
+ 		break;
+ 	case SND_SOC_DAIFMT_LEFT_J:
+ 		hi_size = bitwidth_sclk;
+-		frm_delay = 2;
++		frm_delay = 0;
+ 		frm_phase = 1;
+ 		break;
+ 	case SND_SOC_DAIFMT_DSP_A:
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-026-ASoC-rt5650-add-mutex-to-avoid-the-jack-detection-fa.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-026-ASoC-rt5650-add-mutex-to-avoid-the-jack-detection-fa.patch
new file mode 100644
index 0000000000..69a84fa200
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-026-ASoC-rt5650-add-mutex-to-avoid-the-jack-detection-fa.patch
@@ -0,0 +1,72 @@
+From f5af9a4fa071cefc74c2624ca4149f4f004d85cc Mon Sep 17 00:00:00 2001
+From: Shuming Fan <shumingf@realtek.com>
+Date: Wed, 22 Nov 2023 18:01:23 +0800
+Subject: [PATCH] ASoC: rt5650: add mutex to avoid the jack detection failure
+
+[ Upstream commit cdba4301adda7c60a2064bf808e48fccd352aaa9 ]
+
+This patch adds the jd_mutex to protect the jack detection control flow.
+And only the headset type could check the button status.
+
+Signed-off-by: Shuming Fan <shumingf@realtek.com>
+Link: https://lore.kernel.org/r/20231122100123.2831753-1-shumingf@realtek.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/codecs/rt5645.c | 10 +++++++++-
+ 1 file changed, 9 insertions(+), 1 deletion(-)
+
+--- a/sound/soc/codecs/rt5645.c
++++ b/sound/soc/codecs/rt5645.c
+@@ -448,6 +448,7 @@ struct rt5645_priv {
+ 	struct regulator_bulk_data supplies[ARRAY_SIZE(rt5645_supply_names)];
+ 	struct rt5645_eq_param_s *eq_param;
+ 	struct timer_list btn_check_timer;
++	struct mutex jd_mutex;
+ 
+ 	int codec_type;
+ 	int sysclk;
+@@ -3189,6 +3190,8 @@ static int rt5645_jack_detect(struct snd
+ 				rt5645_enable_push_button_irq(component, true);
+ 			}
+ 		} else {
++			if (rt5645->en_button_func)
++				rt5645_enable_push_button_irq(component, false);
+ 			snd_soc_dapm_disable_pin(dapm, "Mic Det Power");
+ 			snd_soc_dapm_sync(dapm);
+ 			rt5645->jack_type = SND_JACK_HEADPHONE;
+@@ -3269,6 +3272,8 @@ static void rt5645_jack_detect_work(stru
+ 	if (!rt5645->component)
+ 		return;
+ 
++	mutex_lock(&rt5645->jd_mutex);
++
+ 	switch (rt5645->pdata.jd_mode) {
+ 	case 0: /* Not using rt5645 JD */
+ 		if (rt5645->gpiod_hp_det) {
+@@ -3295,7 +3300,7 @@ static void rt5645_jack_detect_work(stru
+ 
+ 	if (!val && (rt5645->jack_type == 0)) { /* jack in */
+ 		report = rt5645_jack_detect(rt5645->component, 1);
+-	} else if (!val && rt5645->jack_type != 0) {
++	} else if (!val && rt5645->jack_type == SND_JACK_HEADSET) {
+ 		/* for push button and jack out */
+ 		btn_type = 0;
+ 		if (snd_soc_component_read(rt5645->component, RT5645_INT_IRQ_ST) & 0x4) {
+@@ -3351,6 +3356,8 @@ static void rt5645_jack_detect_work(stru
+ 		rt5645_jack_detect(rt5645->component, 0);
+ 	}
+ 
++	mutex_unlock(&rt5645->jd_mutex);
++
+ 	snd_soc_jack_report(rt5645->hp_jack, report, SND_JACK_HEADPHONE);
+ 	snd_soc_jack_report(rt5645->mic_jack, report, SND_JACK_MICROPHONE);
+ 	if (rt5645->en_button_func)
+@@ -4119,6 +4126,7 @@ static int rt5645_i2c_probe(struct i2c_c
+ 	}
+ 	timer_setup(&rt5645->btn_check_timer, rt5645_btn_check_callback, 0);
+ 
++	mutex_init(&rt5645->jd_mutex);
+ 	INIT_DELAYED_WORK(&rt5645->jack_detect_work, rt5645_jack_detect_work);
+ 	INIT_DELAYED_WORK(&rt5645->rcclock_work, rt5645_rcclock_work);
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-027-ASoC-Intel-skl_hda_dsp_generic-Drop-HDMI-routes-when.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-027-ASoC-Intel-skl_hda_dsp_generic-Drop-HDMI-routes-when.patch
new file mode 100644
index 0000000000..5a60aa7f5e
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-027-ASoC-Intel-skl_hda_dsp_generic-Drop-HDMI-routes-when.patch
@@ -0,0 +1,37 @@
+From 812289cd364d77f635b6c5e5d69c4d5dcc99c092 Mon Sep 17 00:00:00 2001
+From: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
+Date: Fri, 24 Nov 2023 14:40:15 +0200
+Subject: [PATCH] ASoC: Intel: skl_hda_dsp_generic: Drop HDMI routes when HDMI
+ is not available
+
+[ Upstream commit 3d1dc8b1030df8ca0fdfd4905c88ee10db943bf8 ]
+
+When the HDMI is not present due to disabled display support
+we will use dummy codec and the HDMI routes will refer to non existent
+DAPM widgets.
+
+Trim the route list from the HDMI routes to be able to probe the card even
+if the HDMI dais are not registered.
+
+Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
+Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
+Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
+Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
+Link: https://lore.kernel.org/r/20231124124015.15878-1-peter.ujfalusi@linux.intel.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/intel/boards/skl_hda_dsp_generic.c | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/sound/soc/intel/boards/skl_hda_dsp_generic.c
++++ b/sound/soc/intel/boards/skl_hda_dsp_generic.c
+@@ -157,6 +157,8 @@ static int skl_hda_fill_card_info(struct
+ 		card->dapm_widgets = skl_hda_widgets;
+ 		card->num_dapm_widgets = ARRAY_SIZE(skl_hda_widgets);
+ 		if (!ctx->idisp_codec) {
++			card->dapm_routes = &skl_hda_map[IDISP_ROUTE_COUNT];
++			num_route -= IDISP_ROUTE_COUNT;
+ 			for (i = 0; i < IDISP_DAI_COUNT; i++) {
+ 				skl_hda_be_dai_links[i].codecs = dummy_codec;
+ 				skl_hda_be_dai_links[i].num_codecs =
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-028-nouveau-tu102-flush-all-pdbs-on-vmm-flush.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-028-nouveau-tu102-flush-all-pdbs-on-vmm-flush.patch
new file mode 100644
index 0000000000..b7fed00cf7
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-028-nouveau-tu102-flush-all-pdbs-on-vmm-flush.patch
@@ -0,0 +1,31 @@
+From 42946b06020c78aadf0c99e3fa1299d6809607de Mon Sep 17 00:00:00 2001
+From: Dave Airlie <airlied@redhat.com>
+Date: Thu, 30 Nov 2023 11:08:52 +1000
+Subject: [PATCH] nouveau/tu102: flush all pdbs on vmm flush
+
+[ Upstream commit cb9c919364653eeafb49e7ff5cd32f1ad64063ac ]
+
+This is a hack around a bug exposed with the GSP code, I'm not sure
+what is happening exactly, but it appears some of our flushes don't
+result in proper tlb invalidation for out BAR2 and we get a BAR2
+fault from GSP and it all dies.
+
+Signed-off-by: Dave Airlie <airlied@redhat.com>
+Signed-off-by: Danilo Krummrich <dakr@redhat.com>
+Link: https://patchwork.freedesktop.org/patch/msgid/20231130010852.4034774-1-airlied@gmail.com
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/gpu/drm/nouveau/nvkm/subdev/mmu/vmmtu102.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/gpu/drm/nouveau/nvkm/subdev/mmu/vmmtu102.c
++++ b/drivers/gpu/drm/nouveau/nvkm/subdev/mmu/vmmtu102.c
+@@ -31,7 +31,7 @@ tu102_vmm_flush(struct nvkm_vmm *vmm, in
+ 
+ 	type |= 0x00000001; /* PAGE_ALL */
+ 	if (atomic_read(&vmm->engref[NVKM_SUBDEV_BAR]))
+-		type |= 0x00000004; /* HUB_ONLY */
++		type |= 0x00000006; /* HUB_ONLY | ALL PDB (hack) */
+ 
+ 	mutex_lock(&vmm->mmu->mutex);
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-029-ASoC-amd-yc-Add-DMI-entry-to-support-System76-Pangol.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-029-ASoC-amd-yc-Add-DMI-entry-to-support-System76-Pangol.patch
new file mode 100644
index 0000000000..e5dfc066c0
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-029-ASoC-amd-yc-Add-DMI-entry-to-support-System76-Pangol.patch
@@ -0,0 +1,34 @@
+From c056b36f857112223b15ff505e3b2500b9aa9644 Mon Sep 17 00:00:00 2001
+From: Jeremy Soller <jeremy@system76.com>
+Date: Mon, 27 Nov 2023 11:42:38 -0700
+Subject: [PATCH] ASoC: amd: yc: Add DMI entry to support System76 Pangolin 13
+
+[ Upstream commit 19650c0f402f53abe48a55a1c49c8ed9576a088c ]
+
+Add pang13 quirk to enable the internal microphone.
+
+Signed-off-by: Jeremy Soller <jeremy@system76.com>
+Signed-off-by: Tim Crawford <tcrawford@system76.com>
+Link: https://lore.kernel.org/r/20231127184237.32077-2-tcrawford@system76.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/amd/yc/acp6x-mach.c | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+--- a/sound/soc/amd/yc/acp6x-mach.c
++++ b/sound/soc/amd/yc/acp6x-mach.c
+@@ -353,6 +353,13 @@ static const struct dmi_system_id yc_acp
+ 			DMI_MATCH(DMI_PRODUCT_VERSION, "pang12"),
+ 		}
+ 	},
++	{
++		.driver_data = &acp6x_card,
++		.matches = {
++			DMI_MATCH(DMI_BOARD_VENDOR, "System76"),
++			DMI_MATCH(DMI_PRODUCT_VERSION, "pang13"),
++		}
++	},
+ 	{}
+ };
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-030-ASoC-hdac_hda-Conditionally-register-dais-for-HDMI-a.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-030-ASoC-hdac_hda-Conditionally-register-dais-for-HDMI-a.patch
new file mode 100644
index 0000000000..b30c3dacab
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-030-ASoC-hdac_hda-Conditionally-register-dais-for-HDMI-a.patch
@@ -0,0 +1,89 @@
+From 3a8e118db6bb95b5fe9844efd14d826a7fda4cd4 Mon Sep 17 00:00:00 2001
+From: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
+Date: Tue, 28 Nov 2023 14:39:14 +0200
+Subject: [PATCH] ASoC: hdac_hda: Conditionally register dais for HDMI and
+ Analog
+
+[ Upstream commit a0575b4add21a243cc3257e75ad913cd5377d5f2 ]
+
+The current driver is registering the same dais for each hdev found in the
+system which results duplicated widgets to be registered and the kernel
+log contains similar prints:
+snd_hda_codec_realtek ehdaudio0D0: ASoC: sink widget AIF1TX overwritten
+snd_hda_codec_realtek ehdaudio0D0: ASoC: source widget AIF1RX overwritten
+skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: sink widget hifi3 overwritten
+skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: sink widget hifi2 overwritten
+skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: sink widget hifi1 overwritten
+skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: source widget Codec Output Pin1 overwritten
+skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: sink widget Codec Input Pin1 overwritten
+skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: sink widget Analog Codec Playback overwritten
+skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: sink widget Digital Codec Playback overwritten
+skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: sink widget Alt Analog Codec Playback overwritten
+skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: source widget Analog Codec Capture overwritten
+skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: source widget Digital Codec Capture overwritten
+skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: source widget Alt Analog Codec Capture overwritten
+
+To avoid such issue, split the dai array into HDMI and non HDMI array and
+register them conditionally:
+for HDMI hdev only register the dais needed for HDMI
+for non HDMI hdev do not  register the HDMI dais.
+
+Depends-on: 3d1dc8b1030d ("ASoC: Intel: skl_hda_dsp_generic: Drop HDMI routes when HDMI is not available")
+Link: https://github.com/thesofproject/linux/issues/4509
+Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
+Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
+Link: https://lore.kernel.org/r/20231128123914.3986-1-peter.ujfalusi@linux.intel.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/codecs/hdac_hda.c | 23 ++++++++++++++++++++---
+ 1 file changed, 20 insertions(+), 3 deletions(-)
+
+--- a/sound/soc/codecs/hdac_hda.c
++++ b/sound/soc/codecs/hdac_hda.c
+@@ -124,6 +124,9 @@ static struct snd_soc_dai_driver hdac_hd
+ 		.sig_bits = 24,
+ 	},
+ },
++};
++
++static struct snd_soc_dai_driver hdac_hda_hdmi_dais[] = {
+ {
+ 	.id = HDAC_HDMI_0_DAI_ID,
+ 	.name = "intel-hdmi-hifi1",
+@@ -578,8 +581,16 @@ static const struct snd_soc_component_dr
+ 	.endianness		= 1,
+ };
+ 
++static const struct snd_soc_component_driver hdac_hda_hdmi_codec = {
++	.probe			= hdac_hda_codec_probe,
++	.remove			= hdac_hda_codec_remove,
++	.idle_bias_on		= false,
++	.endianness		= 1,
++};
++
+ static int hdac_hda_dev_probe(struct hdac_device *hdev)
+ {
++	struct hdac_hda_priv *hda_pvt = dev_get_drvdata(&hdev->dev);
+ 	struct hdac_ext_link *hlink;
+ 	int ret;
+ 
+@@ -592,9 +603,15 @@ static int hdac_hda_dev_probe(struct hda
+ 	snd_hdac_ext_bus_link_get(hdev->bus, hlink);
+ 
+ 	/* ASoC specific initialization */
+-	ret = devm_snd_soc_register_component(&hdev->dev,
+-					 &hdac_hda_codec, hdac_hda_dais,
+-					 ARRAY_SIZE(hdac_hda_dais));
++	if (hda_pvt->need_display_power)
++		ret = devm_snd_soc_register_component(&hdev->dev,
++						&hdac_hda_hdmi_codec, hdac_hda_hdmi_dais,
++						ARRAY_SIZE(hdac_hda_hdmi_dais));
++	else
++		ret = devm_snd_soc_register_component(&hdev->dev,
++						&hdac_hda_codec, hdac_hda_dais,
++						ARRAY_SIZE(hdac_hda_dais));
++
+ 	if (ret < 0) {
+ 		dev_err(&hdev->dev, "failed to register HDA codec %d\n", ret);
+ 		return ret;
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-031-net-tg3-fix-race-condition-in-tg3_reset_task.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-031-net-tg3-fix-race-condition-in-tg3_reset_task.patch
new file mode 100644
index 0000000000..e4da2ffba2
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-031-net-tg3-fix-race-condition-in-tg3_reset_task.patch
@@ -0,0 +1,87 @@
+From 882ea0b68372ba12c2d119feafe83d76e59107c3 Mon Sep 17 00:00:00 2001
+From: Thinh Tran <thinhtr@linux.vnet.ibm.com>
+Date: Thu, 30 Nov 2023 18:19:11 -0600
+Subject: [PATCH] net/tg3: fix race condition in tg3_reset_task()
+
+[ Upstream commit 16b55b1f2269962fb6b5154b8bf43f37c9a96637 ]
+
+When an EEH error is encountered by a PCI adapter, the EEH driver
+modifies the PCI channel's state as shown below:
+
+   enum {
+      /* I/O channel is in normal state */
+      pci_channel_io_normal = (__force pci_channel_state_t) 1,
+
+      /* I/O to channel is blocked */
+      pci_channel_io_frozen = (__force pci_channel_state_t) 2,
+
+      /* PCI card is dead */
+      pci_channel_io_perm_failure = (__force pci_channel_state_t) 3,
+   };
+
+If the same EEH error then causes the tg3 driver's transmit timeout
+logic to execute, the tg3_tx_timeout() function schedules a reset
+task via tg3_reset_task_schedule(), which may cause a race condition
+between the tg3 and EEH driver as both attempt to recover the HW via
+a reset action.
+
+EEH driver gets error event
+--> eeh_set_channel_state()
+    and set device to one of
+    error state above           scheduler: tg3_reset_task() get
+                                returned error from tg3_init_hw()
+                             --> dev_close() shuts down the interface
+tg3_io_slot_reset() and
+tg3_io_resume() fail to
+reset/resume the device
+
+To resolve this issue, we avoid the race condition by checking the PCI
+channel state in the tg3_reset_task() function and skip the tg3 driver
+initiated reset when the PCI channel is not in the normal state.  (The
+driver has no access to tg3 device registers at this point and cannot
+even complete the reset task successfully without external assistance.)
+We'll leave the reset procedure to be managed by the EEH driver which
+calls the tg3_io_error_detected(), tg3_io_slot_reset() and
+tg3_io_resume() functions as appropriate.
+
+Adding the same checking in tg3_dump_state() to avoid dumping all
+device registers when the PCI channel is not in the normal state.
+
+Signed-off-by: Thinh Tran <thinhtr@linux.vnet.ibm.com>
+Tested-by: Venkata Sai Duggi <venkata.sai.duggi@ibm.com>
+Reviewed-by: David Christensen <drc@linux.vnet.ibm.com>
+Reviewed-by: Michael Chan <michael.chan@broadcom.com>
+Link: https://lore.kernel.org/r/20231201001911.656-1-thinhtr@linux.vnet.ibm.com
+Signed-off-by: Jakub Kicinski <kuba@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/net/ethernet/broadcom/tg3.c | 11 ++++++++++-
+ 1 file changed, 10 insertions(+), 1 deletion(-)
+
+--- a/drivers/net/ethernet/broadcom/tg3.c
++++ b/drivers/net/ethernet/broadcom/tg3.c
+@@ -6447,6 +6447,14 @@ static void tg3_dump_state(struct tg3 *t
+ 	int i;
+ 	u32 *regs;
+ 
++	/* If it is a PCI error, all registers will be 0xffff,
++	 * we don't dump them out, just report the error and return
++	 */
++	if (tp->pdev->error_state != pci_channel_io_normal) {
++		netdev_err(tp->dev, "PCI channel ERROR!\n");
++		return;
++	}
++
+ 	regs = kzalloc(TG3_REG_BLK_SIZE, GFP_ATOMIC);
+ 	if (!regs)
+ 		return;
+@@ -11184,7 +11192,8 @@ static void tg3_reset_task(struct work_s
+ 	rtnl_lock();
+ 	tg3_full_lock(tp, 0);
+ 
+-	if (tp->pcierr_recovery || !netif_running(tp->dev)) {
++	if (tp->pcierr_recovery || !netif_running(tp->dev) ||
++	    tp->pdev->error_state != pci_channel_io_normal) {
+ 		tg3_flag_clear(tp, RESET_TASK_PENDING);
+ 		tg3_full_unlock(tp);
+ 		rtnl_unlock();
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-032-ASoC-da7219-Support-low-DC-impedance-headset.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-032-ASoC-da7219-Support-low-DC-impedance-headset.patch
new file mode 100644
index 0000000000..1ca685cecb
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-032-ASoC-da7219-Support-low-DC-impedance-headset.patch
@@ -0,0 +1,29 @@
+From 4e6f197d509ee4873f70c0349204635a3a9481d8 Mon Sep 17 00:00:00 2001
+From: David Rau <David.Rau.opensource@dm.renesas.com>
+Date: Fri, 1 Dec 2023 12:29:33 +0800
+Subject: [PATCH] ASoC: da7219: Support low DC impedance headset
+
+[ Upstream commit 5f44de697383fcc9a9a1a78f99e09d1838704b90 ]
+
+Change the default MIC detection impedance threshold to 200ohm
+to support low mic DC impedance headset.
+
+Signed-off-by: David Rau <David.Rau.opensource@dm.renesas.com>
+Link: https://lore.kernel.org/r/20231201042933.26392-1-David.Rau.opensource@dm.renesas.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/codecs/da7219-aad.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/sound/soc/codecs/da7219-aad.c
++++ b/sound/soc/codecs/da7219-aad.c
+@@ -663,7 +663,7 @@ static struct da7219_aad_pdata *da7219_a
+ 		aad_pdata->mic_det_thr =
+ 			da7219_aad_fw_mic_det_thr(dev, fw_val32);
+ 	else
+-		aad_pdata->mic_det_thr = DA7219_AAD_MIC_DET_THR_500_OHMS;
++		aad_pdata->mic_det_thr = DA7219_AAD_MIC_DET_THR_200_OHMS;
+ 
+ 	if (fwnode_property_read_u32(aad_np, "dlg,jack-ins-deb", &fw_val32) >= 0)
+ 		aad_pdata->jack_ins_deb =
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-033-ASoC-ops-add-correct-range-check-for-limiting-volume.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-033-ASoC-ops-add-correct-range-check-for-limiting-volume.patch
new file mode 100644
index 0000000000..03c9d4d215
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-033-ASoC-ops-add-correct-range-check-for-limiting-volume.patch
@@ -0,0 +1,33 @@
+From 54c02a8828daa7b8f57a078f15edde7284899a56 Mon Sep 17 00:00:00 2001
+From: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
+Date: Mon, 4 Dec 2023 12:47:35 +0000
+Subject: [PATCH] ASoC: ops: add correct range check for limiting volume
+
+[ Upstream commit fb9ad24485087e0f00d84bee7a5914640b2b9024 ]
+
+Volume can have ranges that start with negative values, ex: -84dB to
++40dB. Apply correct range check in snd_soc_limit_volume before setting
+the platform_max. Without this patch, for example setting a 0dB limit on
+a volume range of -84dB to +40dB would fail.
+
+Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
+Tested-by: Johan Hovold <johan+linaro@kernel.org>
+Reviewed-by: Johan Hovold <johan+linaro@kernel.org>
+Link: https://lore.kernel.org/r/20231204124736.132185-2-srinivas.kandagatla@linaro.org
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/soc-ops.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/sound/soc/soc-ops.c
++++ b/sound/soc/soc-ops.c
+@@ -661,7 +661,7 @@ int snd_soc_limit_volume(struct snd_soc_
+ 	kctl = snd_soc_card_get_kcontrol(card, name);
+ 	if (kctl) {
+ 		struct soc_mixer_control *mc = (struct soc_mixer_control *)kctl->private_value;
+-		if (max <= mc->max) {
++		if (max <= mc->max - mc->min) {
+ 			mc->platform_max = max;
+ 			ret = 0;
+ 		}
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-034-nvme-introduce-helper-function-to-get-ctrl-state.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-034-nvme-introduce-helper-function-to-get-ctrl-state.patch
new file mode 100644
index 0000000000..63d75b1661
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-034-nvme-introduce-helper-function-to-get-ctrl-state.patch
@@ -0,0 +1,33 @@
+From 895569c6f5cfd980801271ee373e1e4298dcf8b7 Mon Sep 17 00:00:00 2001
+From: Keith Busch <kbusch@kernel.org>
+Date: Mon, 30 Oct 2023 08:13:09 -0700
+Subject: [PATCH] nvme: introduce helper function to get ctrl state
+
+[ Upstream commit 5c687c287c46fadb14644091823298875a5216aa ]
+
+The controller state is typically written by another CPU, so reading it
+should ensure no optimizations are taken. This is a repeated pattern in
+the driver, so start with adding a convenience function that returns the
+controller state with READ_ONCE().
+
+Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
+Signed-off-by: Keith Busch <kbusch@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/nvme/host/nvme.h | 5 +++++
+ 1 file changed, 5 insertions(+)
+
+--- a/drivers/nvme/host/nvme.h
++++ b/drivers/nvme/host/nvme.h
+@@ -382,6 +382,11 @@ struct nvme_ctrl {
+ 	enum nvme_dctype dctype;
+ };
+ 
++static inline enum nvme_ctrl_state nvme_ctrl_state(struct nvme_ctrl *ctrl)
++{
++	return READ_ONCE(ctrl->state);
++}
++
+ enum nvme_iopolicy {
+ 	NVME_IOPOLICY_NUMA,
+ 	NVME_IOPOLICY_RR,
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-035-nvme-prevent-potential-spectre-v1-gadget.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-035-nvme-prevent-potential-spectre-v1-gadget.patch
new file mode 100644
index 0000000000..b32022a0a1
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-035-nvme-prevent-potential-spectre-v1-gadget.patch
@@ -0,0 +1,47 @@
+From 54593fb382852349c36d311d0329841bcfe20311 Mon Sep 17 00:00:00 2001
+From: Nitesh Shetty <nj.shetty@samsung.com>
+Date: Tue, 28 Nov 2023 17:59:57 +0530
+Subject: [PATCH] nvme: prevent potential spectre v1 gadget
+
+[ Upstream commit 20dc66f2d76b4a410df14e4675e373b718babc34 ]
+
+This patch fixes the smatch warning, "nvmet_ns_ana_grpid_store() warn:
+potential spectre issue 'nvmet_ana_group_enabled' [w] (local cap)"
+Prevent the contents of kernel memory from being leaked to  user space
+via speculative execution by using array_index_nospec.
+
+Signed-off-by: Nitesh Shetty <nj.shetty@samsung.com>
+Reviewed-by: Christoph Hellwig <hch@lst.de>
+Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
+Signed-off-by: Keith Busch <kbusch@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/nvme/target/configfs.c | 3 +++
+ 1 file changed, 3 insertions(+)
+
+--- a/drivers/nvme/target/configfs.c
++++ b/drivers/nvme/target/configfs.c
+@@ -16,6 +16,7 @@
+ #endif
+ #include <crypto/hash.h>
+ #include <crypto/kpp.h>
++#include <linux/nospec.h>
+ 
+ #include "nvmet.h"
+ 
+@@ -508,6 +509,7 @@ static ssize_t nvmet_ns_ana_grpid_store(
+ 
+ 	down_write(&nvmet_ana_sem);
+ 	oldgrpid = ns->anagrpid;
++	newgrpid = array_index_nospec(newgrpid, NVMET_MAX_ANAGRPS);
+ 	nvmet_ana_group_enabled[newgrpid]++;
+ 	ns->anagrpid = newgrpid;
+ 	nvmet_ana_group_enabled[oldgrpid]--;
+@@ -1580,6 +1582,7 @@ static struct config_group *nvmet_ana_gr
+ 	grp->grpid = grpid;
+ 
+ 	down_write(&nvmet_ana_sem);
++	grpid = array_index_nospec(grpid, NVMET_MAX_ANAGRPS);
+ 	nvmet_ana_group_enabled[grpid]++;
+ 	up_write(&nvmet_ana_sem);
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-036-arm64-dts-rockchip-Fix-PCI-node-addresses-on-rk3399-.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-036-arm64-dts-rockchip-Fix-PCI-node-addresses-on-rk3399-.patch
new file mode 100644
index 0000000000..9e38cb63b3
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-036-arm64-dts-rockchip-Fix-PCI-node-addresses-on-rk3399-.patch
@@ -0,0 +1,67 @@
+From c414f00e86c94eb147452bd9bc9005ec109c2d41 Mon Sep 17 00:00:00 2001
+From: Rob Herring <robh@kernel.org>
+Date: Thu, 30 Nov 2023 13:18:29 -0600
+Subject: [PATCH] arm64: dts: rockchip: Fix PCI node addresses on rk3399-gru
+
+[ Upstream commit c13c823a78b77ea0e5f1f73112d910e259911101 ]
+
+The rk3399-gru PCI node addresses are wrong.
+
+In rk3399-gru-scarlet, the bus number in the address should be 0. This is
+because bus number assignment is dynamic and not known up front. For FDT,
+the bus number is simply ignored.
+
+In rk3399-gru-chromebook, the addresses are simply invalid. The first
+"reg" entry must be the configuration space for the device. The entry
+should be all 0s except for device/slot and function numbers. The existing
+64-bit memory space (0x83000000) entries are not valid because they must
+have the BAR address in the lower byte of the first cell.
+
+Warnings for these are enabled by adding the missing 'device_type = "pci"'
+for the root port node.
+
+Signed-off-by: Rob Herring <robh@kernel.org>
+Link: https://lore.kernel.org/r/20231130191830.2424361-1-robh@kernel.org
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ arch/arm64/boot/dts/rockchip/rk3399-gru-chromebook.dtsi  | 3 +--
+ arch/arm64/boot/dts/rockchip/rk3399-gru-scarlet-dumo.dts | 4 ++--
+ arch/arm64/boot/dts/rockchip/rk3399-gru.dtsi             | 1 +
+ 3 files changed, 4 insertions(+), 4 deletions(-)
+
+--- a/arch/arm64/boot/dts/rockchip/rk3399-gru-chromebook.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399-gru-chromebook.dtsi
+@@ -510,8 +510,7 @@ ap_i2c_tp: &i2c5 {
+ &pci_rootport {
+ 	mvl_wifi: wifi@0,0 {
+ 		compatible = "pci1b4b,2b42";
+-		reg = <0x83010000 0x0 0x00000000 0x0 0x00100000
+-		       0x83010000 0x0 0x00100000 0x0 0x00100000>;
++		reg = <0x0000 0x0 0x0 0x0 0x0>;
+ 		interrupt-parent = <&gpio0>;
+ 		interrupts = <8 IRQ_TYPE_LEVEL_LOW>;
+ 		pinctrl-names = "default";
+--- a/arch/arm64/boot/dts/rockchip/rk3399-gru-scarlet-dumo.dts
++++ b/arch/arm64/boot/dts/rockchip/rk3399-gru-scarlet-dumo.dts
+@@ -34,8 +34,8 @@
+ &pci_rootport {
+ 	wifi@0,0 {
+ 		compatible = "qcom,ath10k";
+-		reg = <0x00010000 0x0 0x00000000 0x0 0x00000000>,
+-		      <0x03010010 0x0 0x00000000 0x0 0x00200000>;
++		reg = <0x00000000 0x0 0x00000000 0x0 0x00000000>,
++		      <0x03000010 0x0 0x00000000 0x0 0x00200000>;
+ 		qcom,ath10k-calibration-variant = "GO_DUMO";
+ 	};
+ };
+--- a/arch/arm64/boot/dts/rockchip/rk3399-gru.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399-gru.dtsi
+@@ -489,6 +489,7 @@ ap_i2c_audio: &i2c8 {
+ 		#address-cells = <3>;
+ 		#size-cells = <2>;
+ 		ranges;
++		device_type = "pci";
+ 	};
+ };
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-037-mips-smp-Call-rcutree_report_cpu_starting-earlier.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-037-mips-smp-Call-rcutree_report_cpu_starting-earlier.patch
new file mode 100644
index 0000000000..13b6c7d7d4
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-037-mips-smp-Call-rcutree_report_cpu_starting-earlier.patch
@@ -0,0 +1,70 @@
+From 8138af99528fde0ade8c24af17c10652cf92bfa0 Mon Sep 17 00:00:00 2001
+From: Stefan Wiehler <stefan.wiehler@nokia.com>
+Date: Mon, 6 Nov 2023 13:12:07 +0100
+Subject: [PATCH] mips/smp: Call rcutree_report_cpu_starting() earlier
+
+[ Upstream commit 55702ec9603ebeffb15e6f7b113623fe1d8872f4 ]
+
+rcutree_report_cpu_starting() must be called before
+clockevents_register_device() to avoid the following lockdep splat triggered by
+calling list_add() when CONFIG_PROVE_RCU_LIST=y:
+
+  WARNING: suspicious RCU usage
+  ...
+  -----------------------------
+  kernel/locking/lockdep.c:3680 RCU-list traversed in non-reader section!!
+
+  other info that might help us debug this:
+
+  RCU used illegally from offline CPU!
+  rcu_scheduler_active = 1, debug_locks = 1
+  no locks held by swapper/1/0.
+  ...
+  Call Trace:
+  [<ffffffff8012a434>] show_stack+0x64/0x158
+  [<ffffffff80a93d98>] dump_stack_lvl+0x90/0xc4
+  [<ffffffff801c9e9c>] __lock_acquire+0x1404/0x2940
+  [<ffffffff801cbf3c>] lock_acquire+0x14c/0x448
+  [<ffffffff80aa4260>] _raw_spin_lock_irqsave+0x50/0x88
+  [<ffffffff8021e0c8>] clockevents_register_device+0x60/0x1e8
+  [<ffffffff80130ff0>] r4k_clockevent_init+0x220/0x3a0
+  [<ffffffff801339d0>] start_secondary+0x50/0x3b8
+
+raw_smp_processor_id() is required in order to avoid calling into lockdep
+before RCU has declared the CPU to be watched for readers.
+
+See also commit 29368e093921 ("x86/smpboot:  Move rcu_cpu_starting() earlier"),
+commit de5d9dae150c ("s390/smp: move rcu_cpu_starting() earlier") and commit
+99f070b62322 ("powerpc/smp: Call rcu_cpu_starting() earlier").
+
+Signed-off-by: Stefan Wiehler <stefan.wiehler@nokia.com>
+Reviewed-by: Huacai Chen <chenhuacai@loongson.cn>
+Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ arch/mips/kernel/smp.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+--- a/arch/mips/kernel/smp.c
++++ b/arch/mips/kernel/smp.c
+@@ -333,10 +333,11 @@ early_initcall(mips_smp_ipi_init);
+  */
+ asmlinkage void start_secondary(void)
+ {
+-	unsigned int cpu;
++	unsigned int cpu = raw_smp_processor_id();
+ 
+ 	cpu_probe();
+ 	per_cpu_trap_init(false);
++	rcutree_report_cpu_starting(cpu);
+ 	mips_clockevent_init();
+ 	mp_ops->init_secondary();
+ 	cpu_report();
+@@ -348,7 +349,6 @@ asmlinkage void start_secondary(void)
+ 	 */
+ 
+ 	calibrate_delay();
+-	cpu = smp_processor_id();
+ 	cpu_data[cpu].udelay_val = loops_per_jiffy;
+ 
+ 	set_cpu_sibling_map(cpu);
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-038-drm-amd-display-Use-channel_width-2-for-vram-table-3.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-038-drm-amd-display-Use-channel_width-2-for-vram-table-3.patch
new file mode 100644
index 0000000000..bd3e634af5
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-038-drm-amd-display-Use-channel_width-2-for-vram-table-3.patch
@@ -0,0 +1,38 @@
+From 076de8e69ad2b5ffdec82e315c9fd6fa4d70b538 Mon Sep 17 00:00:00 2001
+From: Alvin Lee <alvin.lee2@amd.com>
+Date: Fri, 1 Dec 2023 06:25:07 -0700
+Subject: [PATCH] drm/amd/display: Use channel_width = 2 for vram table 3.0
+
+[ Upstream commit fec05adc40c25a028c9dfa9d540f800a2d433f80 ]
+
+VBIOS has suggested to use channel_width=2 for any ASIC that uses vram
+info 3.0. This is because channel_width in the vram table no longer
+represents the memory width
+
+Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
+Reviewed-by: Samson Tam <samson.tam@amd.com>
+Acked-by: Rodrigo Siqueira <rodrigo.siqueira@amd.com>
+Signed-off-by: Alvin Lee <alvin.lee2@amd.com>
+Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/gpu/drm/amd/display/dc/bios/bios_parser2.c | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
+
+--- a/drivers/gpu/drm/amd/display/dc/bios/bios_parser2.c
++++ b/drivers/gpu/drm/amd/display/dc/bios/bios_parser2.c
+@@ -2402,7 +2402,13 @@ static enum bp_result get_vram_info_v30(
+ 		return BP_RESULT_BADBIOSTABLE;
+ 
+ 	info->num_chans = info_v30->channel_num;
+-	info->dram_channel_width_bytes = (1 << info_v30->channel_width) / 8;
++	/* As suggested by VBIOS we should always use
++	 * dram_channel_width_bytes = 2 when using VRAM
++	 * table version 3.0. This is because the channel_width
++	 * param in the VRAM info table is changed in 7000 series and
++	 * no longer represents the memory channel width.
++	 */
++	info->dram_channel_width_bytes = 2;
+ 
+ 	return result;
+ }
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-039-drm-amdgpu-Add-NULL-checks-for-function-pointers.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-039-drm-amdgpu-Add-NULL-checks-for-function-pointers.patch
new file mode 100644
index 0000000000..17bc16b0b8
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-039-drm-amdgpu-Add-NULL-checks-for-function-pointers.patch
@@ -0,0 +1,48 @@
+From 2f88eccc990b6e5af212336f6f975a4bbd307cf6 Mon Sep 17 00:00:00 2001
+From: Lijo Lazar <lijo.lazar@amd.com>
+Date: Wed, 29 Nov 2023 12:37:34 +0530
+Subject: [PATCH] drm/amdgpu: Add NULL checks for function pointers
+
+[ Upstream commit 81577503efb49f4ad76af22f9941d72900ef4aab ]
+
+Check if function is implemented before making the call.
+
+Signed-off-by: Lijo Lazar <lijo.lazar@amd.com>
+Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
+Acked-by: Alex Deucher <alexander.deucher@amd.com>
+Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/gpu/drm/amd/amdgpu/soc15.c | 12 ++++++++----
+ 1 file changed, 8 insertions(+), 4 deletions(-)
+
+--- a/drivers/gpu/drm/amd/amdgpu/soc15.c
++++ b/drivers/gpu/drm/amd/amdgpu/soc15.c
+@@ -1411,9 +1411,11 @@ static void soc15_common_get_clockgating
+ 	if (amdgpu_sriov_vf(adev))
+ 		*flags = 0;
+ 
+-	adev->nbio.funcs->get_clockgating_state(adev, flags);
++	if (adev->nbio.funcs && adev->nbio.funcs->get_clockgating_state)
++		adev->nbio.funcs->get_clockgating_state(adev, flags);
+ 
+-	adev->hdp.funcs->get_clock_gating_state(adev, flags);
++	if (adev->hdp.funcs && adev->hdp.funcs->get_clock_gating_state)
++		adev->hdp.funcs->get_clock_gating_state(adev, flags);
+ 
+ 	if (adev->ip_versions[MP0_HWIP][0] != IP_VERSION(13, 0, 2)) {
+ 
+@@ -1429,9 +1431,11 @@ static void soc15_common_get_clockgating
+ 	}
+ 
+ 	/* AMD_CG_SUPPORT_ROM_MGCG */
+-	adev->smuio.funcs->get_clock_gating_state(adev, flags);
++	if (adev->smuio.funcs && adev->smuio.funcs->get_clock_gating_state)
++		adev->smuio.funcs->get_clock_gating_state(adev, flags);
+ 
+-	adev->df.funcs->get_clockgating_state(adev, flags);
++	if (adev->df.funcs && adev->df.funcs->get_clockgating_state)
++		adev->df.funcs->get_clockgating_state(adev, flags);
+ }
+ 
+ static int soc15_common_set_powergating_state(void *handle,
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-040-drm-exynos-fix-a-potential-error-pointer-dereference.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-040-drm-exynos-fix-a-potential-error-pointer-dereference.patch
new file mode 100644
index 0000000000..eb210b355b
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-040-drm-exynos-fix-a-potential-error-pointer-dereference.patch
@@ -0,0 +1,33 @@
+From e1ced9137251f2f78160063ae3cd5f77e3613105 Mon Sep 17 00:00:00 2001
+From: Xiang Yang <xiangyang3@huawei.com>
+Date: Sat, 12 Aug 2023 14:27:48 +0800
+Subject: [PATCH] drm/exynos: fix a potential error pointer dereference
+
+[ Upstream commit 73bf1c9ae6c054c53b8e84452c5e46f86dd28246 ]
+
+Smatch reports the warning below:
+drivers/gpu/drm/exynos/exynos_hdmi.c:1864 hdmi_bind()
+error: 'crtc' dereferencing possible ERR_PTR()
+
+The return value of exynos_drm_crtc_get_by_type maybe ERR_PTR(-ENODEV),
+which can not be used directly. Fix this by checking the return value
+before using it.
+
+Signed-off-by: Xiang Yang <xiangyang3@huawei.com>
+Signed-off-by: Inki Dae <inki.dae@samsung.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/gpu/drm/exynos/exynos_hdmi.c | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/drivers/gpu/drm/exynos/exynos_hdmi.c
++++ b/drivers/gpu/drm/exynos/exynos_hdmi.c
+@@ -1861,6 +1861,8 @@ static int hdmi_bind(struct device *dev,
+ 		return ret;
+ 
+ 	crtc = exynos_drm_crtc_get_by_type(drm_dev, EXYNOS_DISPLAY_TYPE_HDMI);
++	if (IS_ERR(crtc))
++		return PTR_ERR(crtc);
+ 	crtc->pipe_clk = &hdata->phy_clk;
+ 
+ 	ret = hdmi_create_connector(encoder);
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-041-drm-exynos-fix-a-wrong-error-checking.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-041-drm-exynos-fix-a-wrong-error-checking.patch
new file mode 100644
index 0000000000..99b5529569
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-041-drm-exynos-fix-a-wrong-error-checking.patch
@@ -0,0 +1,55 @@
+From e167290ea3dc73afee5a11d515f1e0a809007827 Mon Sep 17 00:00:00 2001
+From: Inki Dae <inki.dae@samsung.com>
+Date: Wed, 1 Nov 2023 18:36:51 +0900
+Subject: [PATCH] drm/exynos: fix a wrong error checking
+
+[ Upstream commit 8d1b7809684c688005706125b804e1f9792d2b1b ]
+
+Fix a wrong error checking in exynos_drm_dma.c module.
+
+In the exynos_drm_register_dma function, both arm_iommu_create_mapping()
+and iommu_get_domain_for_dev() functions are expected to return NULL as
+an error.
+
+However, the error checking is performed using the statement
+if(IS_ERR(mapping)), which doesn't provide a suitable error value.
+So check if 'mapping' is NULL, and if it is, return -ENODEV.
+
+This issue[1] was reported by Dan.
+
+Changelog v1:
+- fix build warning.
+
+[1] https://lore.kernel.org/all/33e52277-1349-472b-a55b-ab5c3462bfcf@moroto.mountain/
+
+Reported-by : Dan Carpenter <dan.carpenter@linaro.org>
+Signed-off-by: Inki Dae <inki.dae@samsung.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/gpu/drm/exynos/exynos_drm_dma.c | 8 +++-----
+ 1 file changed, 3 insertions(+), 5 deletions(-)
+
+--- a/drivers/gpu/drm/exynos/exynos_drm_dma.c
++++ b/drivers/gpu/drm/exynos/exynos_drm_dma.c
+@@ -107,18 +107,16 @@ int exynos_drm_register_dma(struct drm_d
+ 		return 0;
+ 
+ 	if (!priv->mapping) {
+-		void *mapping;
++		void *mapping = NULL;
+ 
+ 		if (IS_ENABLED(CONFIG_ARM_DMA_USE_IOMMU))
+ 			mapping = arm_iommu_create_mapping(&platform_bus_type,
+ 				EXYNOS_DEV_ADDR_START, EXYNOS_DEV_ADDR_SIZE);
+ 		else if (IS_ENABLED(CONFIG_IOMMU_DMA))
+ 			mapping = iommu_get_domain_for_dev(priv->dma_dev);
+-		else
+-			mapping = ERR_PTR(-ENODEV);
+ 
+-		if (IS_ERR(mapping))
+-			return PTR_ERR(mapping);
++		if (!mapping)
++			return -ENODEV;
+ 		priv->mapping = mapping;
+ 	}
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-042-hwmon-corsair-psu-Fix-probe-when-built-in.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-042-hwmon-corsair-psu-Fix-probe-when-built-in.patch
new file mode 100644
index 0000000000..fdfdc047a5
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-042-hwmon-corsair-psu-Fix-probe-when-built-in.patch
@@ -0,0 +1,50 @@
+From 403a3ca972d5b57286ffa4322eacec1bf8d2a8de Mon Sep 17 00:00:00 2001
+From: Armin Wolf <W_Armin@gmx.de>
+Date: Thu, 7 Dec 2023 22:07:23 +0100
+Subject: [PATCH] hwmon: (corsair-psu) Fix probe when built-in
+
+[ Upstream commit 307004e8b254ad28e150b63f299ab9caa4bc7c3e ]
+
+It seems that when the driver is built-in, the HID bus is
+initialized after the driver is loaded, which whould cause
+module_hid_driver() to fail.
+Fix this by registering the driver after the HID bus using
+late_initcall() in accordance with other hwmon HID drivers.
+
+Signed-off-by: Armin Wolf <W_Armin@gmx.de>
+Link: https://lore.kernel.org/r/20231207210723.222552-1-W_Armin@gmx.de
+[groeck: Dropped "compile tested" comment; the patch has been tested
+ but the tester did not provide a Tested-by: tag]
+Signed-off-by: Guenter Roeck <linux@roeck-us.net>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/hwmon/corsair-psu.c | 18 +++++++++++++++++-
+ 1 file changed, 17 insertions(+), 1 deletion(-)
+
+--- a/drivers/hwmon/corsair-psu.c
++++ b/drivers/hwmon/corsair-psu.c
+@@ -837,7 +837,23 @@ static struct hid_driver corsairpsu_driv
+ 	.reset_resume	= corsairpsu_resume,
+ #endif
+ };
+-module_hid_driver(corsairpsu_driver);
++
++static int __init corsair_init(void)
++{
++	return hid_register_driver(&corsairpsu_driver);
++}
++
++static void __exit corsair_exit(void)
++{
++	hid_unregister_driver(&corsairpsu_driver);
++}
++
++/*
++ * With module_init() the driver would load before the HID bus when
++ * built-in, so use late_initcall() instead.
++ */
++late_initcall(corsair_init);
++module_exit(corsair_exit);
+ 
+ MODULE_LICENSE("GPL");
+ MODULE_AUTHOR("Wilken Gottwalt <wilken.gottwalt@posteo.net>");
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-043-LoongArch-Preserve-syscall-nr-across-execve.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-043-LoongArch-Preserve-syscall-nr-across-execve.patch
new file mode 100644
index 0000000000..2c90e8eb59
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-043-LoongArch-Preserve-syscall-nr-across-execve.patch
@@ -0,0 +1,43 @@
+From 5cc8f97549e9a458a942e03bb77e2e227b15220b Mon Sep 17 00:00:00 2001
+From: Hengqi Chen <hengqi.chen@gmail.com>
+Date: Sat, 9 Dec 2023 15:49:15 +0800
+Subject: [PATCH] LoongArch: Preserve syscall nr across execve()
+
+[ Upstream commit d6c5f06e46a836e6a70c7cfd95bb38a67d9252ec ]
+
+Currently, we store syscall nr in pt_regs::regs[11] and syscall execve()
+accidentally overrides it during its execution:
+
+    sys_execve()
+      -> do_execve()
+        -> do_execveat_common()
+          -> bprm_execve()
+            -> exec_binprm()
+              -> search_binary_handler()
+                -> load_elf_binary()
+                  -> ELF_PLAT_INIT()
+
+ELF_PLAT_INIT() reset regs[11] to 0, so in syscall_exit_to_user_mode()
+we later get a wrong syscall nr. This breaks tools like execsnoop since
+it relies on execve() tracepoints.
+
+Skip pt_regs::regs[11] reset in ELF_PLAT_INIT() to fix the issue.
+
+Signed-off-by: Hengqi Chen <hengqi.chen@gmail.com>
+Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ arch/loongarch/include/asm/elf.h | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/arch/loongarch/include/asm/elf.h
++++ b/arch/loongarch/include/asm/elf.h
+@@ -293,7 +293,7 @@ extern const char *__elf_platform;
+ #define ELF_PLAT_INIT(_r, load_addr)	do { \
+ 	_r->regs[1] = _r->regs[2] = _r->regs[3] = _r->regs[4] = 0;	\
+ 	_r->regs[5] = _r->regs[6] = _r->regs[7] = _r->regs[8] = 0;	\
+-	_r->regs[9] = _r->regs[10] = _r->regs[11] = _r->regs[12] = 0;	\
++	_r->regs[9] = _r->regs[10] /* syscall n */ = _r->regs[12] = 0;	\
+ 	_r->regs[13] = _r->regs[14] = _r->regs[15] = _r->regs[16] = 0;	\
+ 	_r->regs[17] = _r->regs[18] = _r->regs[19] = _r->regs[20] = 0;	\
+ 	_r->regs[21] = _r->regs[22] = _r->regs[23] = _r->regs[24] = 0;	\
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-044-clk-rockchip-rk3568-Add-PLL-rate-for-292.5MHz.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-044-clk-rockchip-rk3568-Add-PLL-rate-for-292.5MHz.patch
new file mode 100644
index 0000000000..b7b6ec01c6
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-044-clk-rockchip-rk3568-Add-PLL-rate-for-292.5MHz.patch
@@ -0,0 +1,32 @@
+From 7b0cb596e8bfc99e1047d856bcef52de9cadea42 Mon Sep 17 00:00:00 2001
+From: Chris Morgan <macromorgan@hotmail.com>
+Date: Wed, 18 Oct 2023 10:33:55 -0500
+Subject: [PATCH] clk: rockchip: rk3568: Add PLL rate for 292.5MHz
+
+[ Upstream commit 1af27671f62ce919f1fb76082ed81f71cb090989 ]
+
+Add support for a PLL rate of 292.5MHz so that the Powkiddy RGB30 panel
+can run at a requested 60hz (59.96, close enough).
+
+I have confirmed this rate fits with all the constraints
+listed in the TRM for the VPLL (as an integer PLL) in Part 1 "Chapter
+2 Clock & Reset Unit (CRU)."
+
+Signed-off-by: Chris Morgan <macromorgan@hotmail.com>
+Link: https://lore.kernel.org/r/20231018153357.343142-2-macroalpha82@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/clk/rockchip/clk-rk3568.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/drivers/clk/rockchip/clk-rk3568.c
++++ b/drivers/clk/rockchip/clk-rk3568.c
+@@ -72,6 +72,7 @@ static struct rockchip_pll_rate_table rk
+ 	RK3036_PLL_RATE(408000000, 1, 68, 2, 2, 1, 0),
+ 	RK3036_PLL_RATE(312000000, 1, 78, 6, 1, 1, 0),
+ 	RK3036_PLL_RATE(297000000, 2, 99, 4, 1, 1, 0),
++	RK3036_PLL_RATE(292500000, 1, 195, 4, 4, 1, 0),
+ 	RK3036_PLL_RATE(241500000, 2, 161, 4, 2, 1, 0),
+ 	RK3036_PLL_RATE(216000000, 1, 72, 4, 2, 1, 0),
+ 	RK3036_PLL_RATE(200000000, 1, 100, 3, 4, 1, 0),
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-045-clk-rockchip-rk3128-Fix-HCLK_OTG-gate-register.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-045-clk-rockchip-rk3128-Fix-HCLK_OTG-gate-register.patch
new file mode 100644
index 0000000000..eecbedfc01
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-045-clk-rockchip-rk3128-Fix-HCLK_OTG-gate-register.patch
@@ -0,0 +1,28 @@
+From 5386a0337351d8bc3c85fd4313b601e4d5355cbc Mon Sep 17 00:00:00 2001
+From: Weihao Li <cn.liweihao@gmail.com>
+Date: Tue, 31 Oct 2023 19:18:16 +0800
+Subject: [PATCH] clk: rockchip: rk3128: Fix HCLK_OTG gate register
+
+[ Upstream commit c6c5a5580dcb6631aa6369dabe12ef3ce784d1d2 ]
+
+The HCLK_OTG gate control is in CRU_CLKGATE5_CON, not CRU_CLKGATE3_CON.
+
+Signed-off-by: Weihao Li <cn.liweihao@gmail.com>
+Link: https://lore.kernel.org/r/20231031111816.8777-1-cn.liweihao@gmail.com
+Signed-off-by: Heiko Stuebner <heiko@sntech.de>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/clk/rockchip/clk-rk3128.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/clk/rockchip/clk-rk3128.c
++++ b/drivers/clk/rockchip/clk-rk3128.c
+@@ -490,7 +490,7 @@ static struct rockchip_clk_branch common
+ 	GATE(HCLK_I2S_2CH, "hclk_i2s_2ch", "hclk_peri", 0, RK2928_CLKGATE_CON(7), 2, GFLAGS),
+ 	GATE(0, "hclk_usb_peri", "hclk_peri", CLK_IGNORE_UNUSED, RK2928_CLKGATE_CON(9), 13, GFLAGS),
+ 	GATE(HCLK_HOST2, "hclk_host2", "hclk_peri", 0, RK2928_CLKGATE_CON(7), 3, GFLAGS),
+-	GATE(HCLK_OTG, "hclk_otg", "hclk_peri", 0, RK2928_CLKGATE_CON(3), 13, GFLAGS),
++	GATE(HCLK_OTG, "hclk_otg", "hclk_peri", 0, RK2928_CLKGATE_CON(5), 13, GFLAGS),
+ 	GATE(0, "hclk_peri_ahb", "hclk_peri", CLK_IGNORE_UNUSED, RK2928_CLKGATE_CON(9), 14, GFLAGS),
+ 	GATE(HCLK_SPDIF, "hclk_spdif", "hclk_peri", 0, RK2928_CLKGATE_CON(10), 9, GFLAGS),
+ 	GATE(HCLK_TSP, "hclk_tsp", "hclk_peri", 0, RK2928_CLKGATE_CON(10), 12, GFLAGS),
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-046-jbd2-correct-the-printing-of-write_flags-in-jbd2_wri.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-046-jbd2-correct-the-printing-of-write_flags-in-jbd2_wri.patch
new file mode 100644
index 0000000000..ea9b8b96fc
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-046-jbd2-correct-the-printing-of-write_flags-in-jbd2_wri.patch
@@ -0,0 +1,35 @@
+From b46a4ac92eeabb5d197c77b3328135eda63a746e Mon Sep 17 00:00:00 2001
+From: Zhang Yi <yi.zhang@huawei.com>
+Date: Wed, 29 Nov 2023 19:47:39 +0800
+Subject: [PATCH] jbd2: correct the printing of write_flags in
+ jbd2_write_superblock()
+
+[ Upstream commit 85559227211020b270728104c3b89918f7af27ac ]
+
+The write_flags print in the trace of jbd2_write_superblock() is not
+real, so move the modification before the trace.
+
+Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
+Reviewed-by: Jan Kara <jack@suse.cz>
+Link: https://lore.kernel.org/r/20231129114740.2686201-1-yi.zhang@huaweicloud.com
+Signed-off-by: Theodore Ts'o <tytso@mit.edu>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ fs/jbd2/journal.c | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+--- a/fs/jbd2/journal.c
++++ b/fs/jbd2/journal.c
+@@ -1620,9 +1620,11 @@ static int jbd2_write_superblock(journal
+ 		return -EIO;
+ 	}
+ 
+-	trace_jbd2_write_superblock(journal, write_flags);
+ 	if (!(journal->j_flags & JBD2_BARRIER))
+ 		write_flags &= ~(REQ_FUA | REQ_PREFLUSH);
++
++	trace_jbd2_write_superblock(journal, write_flags);
++
+ 	if (buffer_write_io_error(bh)) {
+ 		/*
+ 		 * Oh, dear.  A previous attempt to write the journal
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-047-jbd2-increase-the-journal-IO-s-priority.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-047-jbd2-increase-the-journal-IO-s-priority.patch
new file mode 100644
index 0000000000..e1ede3e247
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-047-jbd2-increase-the-journal-IO-s-priority.patch
@@ -0,0 +1,149 @@
+From bbbceb3a49dd152adae586dea12356040230175b Mon Sep 17 00:00:00 2001
+From: Zhang Yi <yi.zhang@huawei.com>
+Date: Wed, 29 Nov 2023 19:47:40 +0800
+Subject: [PATCH] jbd2: increase the journal IO's priority
+
+[ Upstream commit 6a3afb6ac6dfab158ebdd4b87941178f58c8939f ]
+
+Current jbd2 only add REQ_SYNC for descriptor block, metadata log
+buffer, commit buffer and superblock buffer, the submitted IO could be
+throttled by writeback throttle in block layer, that could lead to
+priority inversion in some cases. The log IO looks like a kind of high
+priority metadata IO, so it should not be throttled by WBT like QOS
+policies in block layer, let's add REQ_SYNC | REQ_IDLE to exempt from
+writeback throttle, and also add REQ_META together indicates it's a
+metadata IO.
+
+Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
+Reviewed-by: Jan Kara <jack@suse.cz>
+Link: https://lore.kernel.org/r/20231129114740.2686201-2-yi.zhang@huaweicloud.com
+Signed-off-by: Theodore Ts'o <tytso@mit.edu>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ fs/jbd2/commit.c     |  9 +++++----
+ fs/jbd2/journal.c    | 20 +++++++++++---------
+ include/linux/jbd2.h |  3 +++
+ 3 files changed, 19 insertions(+), 13 deletions(-)
+
+--- a/fs/jbd2/commit.c
++++ b/fs/jbd2/commit.c
+@@ -123,7 +123,7 @@ static int journal_submit_commit_record(
+ 	struct commit_header *tmp;
+ 	struct buffer_head *bh;
+ 	struct timespec64 now;
+-	blk_opf_t write_flags = REQ_OP_WRITE | REQ_SYNC;
++	blk_opf_t write_flags = REQ_OP_WRITE | JBD2_JOURNAL_REQ_FLAGS;
+ 
+ 	*cbh = NULL;
+ 
+@@ -429,8 +429,7 @@ void jbd2_journal_commit_transaction(jou
+ 		 */
+ 		jbd2_journal_update_sb_log_tail(journal,
+ 						journal->j_tail_sequence,
+-						journal->j_tail,
+-						REQ_SYNC);
++						journal->j_tail, 0);
+ 		mutex_unlock(&journal->j_checkpoint_mutex);
+ 	} else {
+ 		jbd2_debug(3, "superblock not updated\n");
+@@ -749,6 +748,7 @@ start_journal_io:
+ 
+ 			for (i = 0; i < bufs; i++) {
+ 				struct buffer_head *bh = wbuf[i];
++
+ 				/*
+ 				 * Compute checksum.
+ 				 */
+@@ -761,7 +761,8 @@ start_journal_io:
+ 				clear_buffer_dirty(bh);
+ 				set_buffer_uptodate(bh);
+ 				bh->b_end_io = journal_end_buffer_io_sync;
+-				submit_bh(REQ_OP_WRITE | REQ_SYNC, bh);
++				submit_bh(REQ_OP_WRITE | JBD2_JOURNAL_REQ_FLAGS,
++					  bh);
+ 			}
+ 			cond_resched();
+ 
+--- a/fs/jbd2/journal.c
++++ b/fs/jbd2/journal.c
+@@ -1109,8 +1109,7 @@ int __jbd2_update_log_tail(journal_t *jo
+ 	 * space and if we lose sb update during power failure we'd replay
+ 	 * old transaction with possibly newly overwritten data.
+ 	 */
+-	ret = jbd2_journal_update_sb_log_tail(journal, tid, block,
+-					      REQ_SYNC | REQ_FUA);
++	ret = jbd2_journal_update_sb_log_tail(journal, tid, block, REQ_FUA);
+ 	if (ret)
+ 		goto out;
+ 
+@@ -1597,8 +1596,7 @@ static int journal_reset(journal_t *jour
+ 		 */
+ 		jbd2_journal_update_sb_log_tail(journal,
+ 						journal->j_tail_sequence,
+-						journal->j_tail,
+-						REQ_SYNC | REQ_FUA);
++						journal->j_tail, REQ_FUA);
+ 		mutex_unlock(&journal->j_checkpoint_mutex);
+ 	}
+ 	return jbd2_journal_start_thread(journal);
+@@ -1620,6 +1618,11 @@ static int jbd2_write_superblock(journal
+ 		return -EIO;
+ 	}
+ 
++	/*
++	 * Always set high priority flags to exempt from block layer's
++	 * QOS policies, e.g. writeback throttle.
++	 */
++	write_flags |= JBD2_JOURNAL_REQ_FLAGS;
+ 	if (!(journal->j_flags & JBD2_BARRIER))
+ 		write_flags &= ~(REQ_FUA | REQ_PREFLUSH);
+ 
+@@ -1873,7 +1876,7 @@ void jbd2_journal_update_sb_errno(journa
+ 	jbd2_debug(1, "JBD2: updating superblock error (errno %d)\n", errcode);
+ 	sb->s_errno    = cpu_to_be32(errcode);
+ 
+-	jbd2_write_superblock(journal, REQ_SYNC | REQ_FUA);
++	jbd2_write_superblock(journal, REQ_FUA);
+ }
+ EXPORT_SYMBOL(jbd2_journal_update_sb_errno);
+ 
+@@ -2178,8 +2181,7 @@ int jbd2_journal_destroy(journal_t *jour
+ 				++journal->j_transaction_sequence;
+ 			write_unlock(&journal->j_state_lock);
+ 
+-			jbd2_mark_journal_empty(journal,
+-					REQ_SYNC | REQ_PREFLUSH | REQ_FUA);
++			jbd2_mark_journal_empty(journal, REQ_PREFLUSH | REQ_FUA);
+ 			mutex_unlock(&journal->j_checkpoint_mutex);
+ 		} else
+ 			err = -EIO;
+@@ -2488,7 +2490,7 @@ int jbd2_journal_flush(journal_t *journa
+ 	 * the magic code for a fully-recovered superblock.  Any future
+ 	 * commits of data to the journal will restore the current
+ 	 * s_start value. */
+-	jbd2_mark_journal_empty(journal, REQ_SYNC | REQ_FUA);
++	jbd2_mark_journal_empty(journal, REQ_FUA);
+ 
+ 	if (flags)
+ 		err = __jbd2_journal_erase(journal, flags);
+@@ -2538,7 +2540,7 @@ int jbd2_journal_wipe(journal_t *journal
+ 	if (write) {
+ 		/* Lock to make assertions happy... */
+ 		mutex_lock_io(&journal->j_checkpoint_mutex);
+-		jbd2_mark_journal_empty(journal, REQ_SYNC | REQ_FUA);
++		jbd2_mark_journal_empty(journal, REQ_FUA);
+ 		mutex_unlock(&journal->j_checkpoint_mutex);
+ 	}
+ 
+--- a/include/linux/jbd2.h
++++ b/include/linux/jbd2.h
+@@ -1374,6 +1374,9 @@ JBD2_FEATURE_INCOMPAT_FUNCS(csum2,		CSUM
+ JBD2_FEATURE_INCOMPAT_FUNCS(csum3,		CSUM_V3)
+ JBD2_FEATURE_INCOMPAT_FUNCS(fast_commit,	FAST_COMMIT)
+ 
++/* Journal high priority write IO operation flags */
++#define JBD2_JOURNAL_REQ_FLAGS		(REQ_META | REQ_SYNC | REQ_IDLE)
++
+ /*
+  * Journal flag definitions
+  */
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-048-drm-crtc-Fix-uninit-value-bug-in-drm_mode_setcrtc.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-048-drm-crtc-Fix-uninit-value-bug-in-drm_mode_setcrtc.patch
new file mode 100644
index 0000000000..458c534cff
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-048-drm-crtc-Fix-uninit-value-bug-in-drm_mode_setcrtc.patch
@@ -0,0 +1,72 @@
+From b97aaf74638258222bef2e5a92328eacd247e86a Mon Sep 17 00:00:00 2001
+From: Ziqi Zhao <astrajoan@yahoo.com>
+Date: Fri, 21 Jul 2023 09:14:46 -0700
+Subject: [PATCH] drm/crtc: Fix uninit-value bug in drm_mode_setcrtc
+
+[ Upstream commit 3823119b9c2b5f9e9b760336f75bc989b805cde6 ]
+
+The connector_set contains uninitialized values when allocated with
+kmalloc_array. However, in the "out" branch, the logic assumes that any
+element in connector_set would be equal to NULL if failed to
+initialize, which causes the bug reported by Syzbot. The fix is to use
+an extra variable to keep track of how many connectors are initialized
+indeed, and use that variable to decrease any refcounts in the "out"
+branch.
+
+Reported-by: syzbot+4fad2e57beb6397ab2fc@syzkaller.appspotmail.com
+Signed-off-by: Ziqi Zhao <astrajoan@yahoo.com>
+Reported-and-tested-by: syzbot+4fad2e57beb6397ab2fc@syzkaller.appspotmail.com
+Tested-by: Harshit Mogalapalli <harshit.m.mogalapalli@oracle.com>
+Link: https://lore.kernel.org/r/20230721161446.8602-1-astrajoan@yahoo.com
+Signed-off-by: Maxime Ripard <mripard@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/gpu/drm/drm_crtc.c | 9 +++++----
+ 1 file changed, 5 insertions(+), 4 deletions(-)
+
+--- a/drivers/gpu/drm/drm_crtc.c
++++ b/drivers/gpu/drm/drm_crtc.c
+@@ -715,8 +715,7 @@ int drm_mode_setcrtc(struct drm_device *
+ 	struct drm_mode_set set;
+ 	uint32_t __user *set_connectors_ptr;
+ 	struct drm_modeset_acquire_ctx ctx;
+-	int ret;
+-	int i;
++	int ret, i, num_connectors;
+ 
+ 	if (!drm_core_check_feature(dev, DRIVER_MODESET))
+ 		return -EOPNOTSUPP;
+@@ -851,6 +850,7 @@ int drm_mode_setcrtc(struct drm_device *
+ 			goto out;
+ 		}
+ 
++		num_connectors = 0;
+ 		for (i = 0; i < crtc_req->count_connectors; i++) {
+ 			connector_set[i] = NULL;
+ 			set_connectors_ptr = (uint32_t __user *)(unsigned long)crtc_req->set_connectors_ptr;
+@@ -871,6 +871,7 @@ int drm_mode_setcrtc(struct drm_device *
+ 					connector->name);
+ 
+ 			connector_set[i] = connector;
++			num_connectors++;
+ 		}
+ 	}
+ 
+@@ -879,7 +880,7 @@ int drm_mode_setcrtc(struct drm_device *
+ 	set.y = crtc_req->y;
+ 	set.mode = mode;
+ 	set.connectors = connector_set;
+-	set.num_connectors = crtc_req->count_connectors;
++	set.num_connectors = num_connectors;
+ 	set.fb = fb;
+ 
+ 	if (drm_drv_uses_atomic_modeset(dev))
+@@ -892,7 +893,7 @@ out:
+ 		drm_framebuffer_put(fb);
+ 
+ 	if (connector_set) {
+-		for (i = 0; i < crtc_req->count_connectors; i++) {
++		for (i = 0; i < num_connectors; i++) {
+ 			if (connector_set[i])
+ 				drm_connector_put(connector_set[i]);
+ 		}
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-049-neighbour-Don-t-let-neigh_forced_gc-disable-preempti.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-049-neighbour-Don-t-let-neigh_forced_gc-disable-preempti.patch
new file mode 100644
index 0000000000..0c913777fa
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-049-neighbour-Don-t-let-neigh_forced_gc-disable-preempti.patch
@@ -0,0 +1,58 @@
+From 77c5bda68aa5ddbe6befb98e2718997a861b8f5f Mon Sep 17 00:00:00 2001
+From: Judy Hsiao <judyhsiao@chromium.org>
+Date: Wed, 6 Dec 2023 03:38:33 +0000
+Subject: [PATCH] neighbour: Don't let neigh_forced_gc() disable preemption for
+ long
+
+[ Upstream commit e5dc5afff62f3e97e86c3643ec9fcad23de4f2d3 ]
+
+We are seeing cases where neigh_cleanup_and_release() is called by
+neigh_forced_gc() many times in a row with preemption turned off.
+When running on a low powered CPU at a low CPU frequency, this has
+been measured to keep preemption off for ~10 ms. That's not great on a
+system with HZ=1000 which expects tasks to be able to schedule in
+with ~1ms latency.
+
+Suggested-by: Douglas Anderson <dianders@chromium.org>
+Signed-off-by: Judy Hsiao <judyhsiao@chromium.org>
+Reviewed-by: David Ahern <dsahern@kernel.org>
+Reviewed-by: Eric Dumazet <edumazet@google.com>
+Reviewed-by: Douglas Anderson <dianders@chromium.org>
+Signed-off-by: David S. Miller <davem@davemloft.net>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ net/core/neighbour.c | 9 ++++++++-
+ 1 file changed, 8 insertions(+), 1 deletion(-)
+
+--- a/net/core/neighbour.c
++++ b/net/core/neighbour.c
+@@ -253,9 +253,11 @@ static int neigh_forced_gc(struct neigh_
+ {
+ 	int max_clean = atomic_read(&tbl->gc_entries) -
+ 			READ_ONCE(tbl->gc_thresh2);
++	u64 tmax = ktime_get_ns() + NSEC_PER_MSEC;
+ 	unsigned long tref = jiffies - 5 * HZ;
+ 	struct neighbour *n, *tmp;
+ 	int shrunk = 0;
++	int loop = 0;
+ 
+ 	NEIGH_CACHE_STAT_INC(tbl, forced_gc_runs);
+ 
+@@ -278,11 +280,16 @@ static int neigh_forced_gc(struct neigh_
+ 				shrunk++;
+ 			if (shrunk >= max_clean)
+ 				break;
++			if (++loop == 16) {
++				if (ktime_get_ns() > tmax)
++					goto unlock;
++				loop = 0;
++			}
+ 		}
+ 	}
+ 
+ 	WRITE_ONCE(tbl->last_flush, jiffies);
+-
++unlock:
+ 	write_unlock_bh(&tbl->lock);
+ 
+ 	return shrunk;
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-050-platform-x86-intel-vbtn-Fix-missing-tablet-mode-swit.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-050-platform-x86-intel-vbtn-Fix-missing-tablet-mode-swit.patch
new file mode 100644
index 0000000000..71565d9e66
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-050-platform-x86-intel-vbtn-Fix-missing-tablet-mode-swit.patch
@@ -0,0 +1,93 @@
+From 1e947e77527fdb7eb33934d513f53a7e56660056 Mon Sep 17 00:00:00 2001
+From: Hans de Goede <hdegoede@redhat.com>
+Date: Mon, 4 Dec 2023 16:06:01 +0100
+Subject: [PATCH] platform/x86: intel-vbtn: Fix missing tablet-mode-switch
+ events
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+[ Upstream commit 14c200b7ca46b9a9f4af9e81d258a58274320b6f ]
+
+2 issues have been reported on the Dell Inspiron 7352:
+
+1. Sometimes the tablet-mode-switch stops reporting tablet-mode
+   change events.
+
+   Add a "VBDL" call to notify_handler() to work around this.
+
+2. Sometimes the tablet-mode is incorrect after suspend/resume
+
+   Add a detect_tablet_mode() to resume() to fix this.
+
+Reported-by: Arnold Gozum <arngozum@gmail.com>
+Closes: https://lore.kernel.org/platform-driver-x86/87271a74-c831-4eec-b7a4-1371d0e42471@gmail.com/
+Tested-by: Arnold Gozum <arngozum@gmail.com>
+Signed-off-by: Hans de Goede <hdegoede@redhat.com>
+Reviewed-by: Andy Shevchenko <andy@kernel.org>
+Link: https://lore.kernel.org/r/20231204150601.46976-1-hdegoede@redhat.com
+Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
+Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/platform/x86/intel/vbtn.c | 19 +++++++++++++++----
+ 1 file changed, 15 insertions(+), 4 deletions(-)
+
+--- a/drivers/platform/x86/intel/vbtn.c
++++ b/drivers/platform/x86/intel/vbtn.c
+@@ -73,10 +73,10 @@ struct intel_vbtn_priv {
+ 	bool wakeup_mode;
+ };
+ 
+-static void detect_tablet_mode(struct platform_device *device)
++static void detect_tablet_mode(struct device *dev)
+ {
+-	struct intel_vbtn_priv *priv = dev_get_drvdata(&device->dev);
+-	acpi_handle handle = ACPI_HANDLE(&device->dev);
++	struct intel_vbtn_priv *priv = dev_get_drvdata(dev);
++	acpi_handle handle = ACPI_HANDLE(dev);
+ 	unsigned long long vgbs;
+ 	acpi_status status;
+ 	int m;
+@@ -89,6 +89,8 @@ static void detect_tablet_mode(struct pl
+ 	input_report_switch(priv->switches_dev, SW_TABLET_MODE, m);
+ 	m = (vgbs & VGBS_DOCK_MODE_FLAG) ? 1 : 0;
+ 	input_report_switch(priv->switches_dev, SW_DOCK, m);
++
++	input_sync(priv->switches_dev);
+ }
+ 
+ /*
+@@ -134,7 +136,7 @@ static int intel_vbtn_input_setup(struct
+ 	priv->switches_dev->id.bustype = BUS_HOST;
+ 
+ 	if (priv->has_switches) {
+-		detect_tablet_mode(device);
++		detect_tablet_mode(&device->dev);
+ 
+ 		ret = input_register_device(priv->switches_dev);
+ 		if (ret)
+@@ -198,6 +200,9 @@ static void notify_handler(acpi_handle h
+ 	autorelease = val && (!ke_rel || ke_rel->type == KE_IGNORE);
+ 
+ 	sparse_keymap_report_event(input_dev, event, val, autorelease);
++
++	/* Some devices need this to report further events */
++	acpi_evaluate_object(handle, "VBDL", NULL, NULL);
+ }
+ 
+ /*
+@@ -358,7 +363,13 @@ static void intel_vbtn_pm_complete(struc
+ 
+ static int intel_vbtn_pm_resume(struct device *dev)
+ {
++	struct intel_vbtn_priv *priv = dev_get_drvdata(dev);
++
+ 	intel_vbtn_pm_complete(dev);
++
++	if (priv->has_switches)
++		detect_tablet_mode(dev);
++
+ 	return 0;
+ }
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-051-jbd2-fix-soft-lockup-in-journal_finish_inode_data_bu.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-051-jbd2-fix-soft-lockup-in-journal_finish_inode_data_bu.patch
new file mode 100644
index 0000000000..6f47289b84
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-051-jbd2-fix-soft-lockup-in-journal_finish_inode_data_bu.patch
@@ -0,0 +1,75 @@
+From 4514f70e9c90f59dcf3f0aa5463e383efe9f9d9f Mon Sep 17 00:00:00 2001
+From: Ye Bin <yebin10@huawei.com>
+Date: Mon, 11 Dec 2023 19:25:44 +0800
+Subject: [PATCH] jbd2: fix soft lockup in journal_finish_inode_data_buffers()
+
+[ Upstream commit 6c02757c936063f0631b4e43fe156f8c8f1f351f ]
+
+There's issue when do io test:
+WARN: soft lockup - CPU#45 stuck for 11s! [jbd2/dm-2-8:4170]
+CPU: 45 PID: 4170 Comm: jbd2/dm-2-8 Kdump: loaded Tainted: G  OE
+Call trace:
+ dump_backtrace+0x0/0x1a0
+ show_stack+0x24/0x30
+ dump_stack+0xb0/0x100
+ watchdog_timer_fn+0x254/0x3f8
+ __hrtimer_run_queues+0x11c/0x380
+ hrtimer_interrupt+0xfc/0x2f8
+ arch_timer_handler_phys+0x38/0x58
+ handle_percpu_devid_irq+0x90/0x248
+ generic_handle_irq+0x3c/0x58
+ __handle_domain_irq+0x68/0xc0
+ gic_handle_irq+0x90/0x320
+ el1_irq+0xcc/0x180
+ queued_spin_lock_slowpath+0x1d8/0x320
+ jbd2_journal_commit_transaction+0x10f4/0x1c78 [jbd2]
+ kjournald2+0xec/0x2f0 [jbd2]
+ kthread+0x134/0x138
+ ret_from_fork+0x10/0x18
+
+Analyzed informations from vmcore as follows:
+(1) There are about 5k+ jbd2_inode in 'commit_transaction->t_inode_list';
+(2) Now is processing the 855th jbd2_inode;
+(3) JBD2 task has TIF_NEED_RESCHED flag;
+(4) There's no pags in address_space around the 855th jbd2_inode;
+(5) There are some process is doing drop caches;
+(6) Mounted with 'nodioread_nolock' option;
+(7) 128 CPUs;
+
+According to informations from vmcore we know 'journal->j_list_lock' spin lock
+competition is fierce. So journal_finish_inode_data_buffers() maybe process
+slowly. Theoretically, there is scheduling point in the filemap_fdatawait_range_keep_errors().
+However, if inode's address_space has no pages which taged with PAGECACHE_TAG_WRITEBACK,
+will not call cond_resched(). So may lead to soft lockup.
+journal_finish_inode_data_buffers
+  filemap_fdatawait_range_keep_errors
+    __filemap_fdatawait_range
+      while (index <= end)
+        nr_pages = pagevec_lookup_range_tag(&pvec, mapping, &index, end, PAGECACHE_TAG_WRITEBACK);
+        if (!nr_pages)
+           break;    --> If 'nr_pages' is equal zero will break, then will not call cond_resched()
+        for (i = 0; i < nr_pages; i++)
+          wait_on_page_writeback(page);
+        cond_resched();
+
+To solve above issue, add scheduling point in the journal_finish_inode_data_buffers();
+
+Signed-off-by: Ye Bin <yebin10@huawei.com>
+Reviewed-by: Jan Kara <jack@suse.cz>
+Link: https://lore.kernel.org/r/20231211112544.3879780-1-yebin10@huawei.com
+Signed-off-by: Theodore Ts'o <tytso@mit.edu>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ fs/jbd2/commit.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/fs/jbd2/commit.c
++++ b/fs/jbd2/commit.c
+@@ -300,6 +300,7 @@ static int journal_finish_inode_data_buf
+ 			if (!ret)
+ 				ret = err;
+ 		}
++		cond_resched();
+ 		spin_lock(&journal->j_list_lock);
+ 		jinode->i_flags &= ~JI_COMMIT_RUNNING;
+ 		smp_mb();
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-052-tracing-Have-large-events-show-up-as-LINE-TOO-BIG-in.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-052-tracing-Have-large-events-show-up-as-LINE-TOO-BIG-in.patch
new file mode 100644
index 0000000000..72e9ce2ffd
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-052-tracing-Have-large-events-show-up-as-LINE-TOO-BIG-in.patch
@@ -0,0 +1,72 @@
+From 724ac47c05d2aa22f0d9a683bb4bc4f0b5c0bbf3 Mon Sep 17 00:00:00 2001
+From: "Steven Rostedt (Google)" <rostedt@goodmis.org>
+Date: Sat, 9 Dec 2023 17:10:58 -0500
+Subject: [PATCH] tracing: Have large events show up as '[LINE TOO BIG]'
+ instead of nothing
+
+[ Upstream commit b55b0a0d7c4aa2dac3579aa7e6802d1f57445096 ]
+
+If a large event was added to the ring buffer that is larger than what the
+trace_seq can handle, it just drops the output:
+
+ ~# cat /sys/kernel/tracing/trace
+ # tracer: nop
+ #
+ # entries-in-buffer/entries-written: 2/2   #P:8
+ #
+ #                                _-----=> irqs-off/BH-disabled
+ #                               / _----=> need-resched
+ #                              | / _---=> hardirq/softirq
+ #                              || / _--=> preempt-depth
+ #                              ||| / _-=> migrate-disable
+ #                              |||| /     delay
+ #           TASK-PID     CPU#  |||||  TIMESTAMP  FUNCTION
+ #              | |         |   |||||     |         |
+            <...>-859     [001] .....   141.118951: tracing_mark_write           <...>-859     [001] .....   141.148201: tracing_mark_write: 78901234
+
+Instead, catch this case and add some context:
+
+ ~# cat /sys/kernel/tracing/trace
+ # tracer: nop
+ #
+ # entries-in-buffer/entries-written: 2/2   #P:8
+ #
+ #                                _-----=> irqs-off/BH-disabled
+ #                               / _----=> need-resched
+ #                              | / _---=> hardirq/softirq
+ #                              || / _--=> preempt-depth
+ #                              ||| / _-=> migrate-disable
+ #                              |||| /     delay
+ #           TASK-PID     CPU#  |||||  TIMESTAMP  FUNCTION
+ #              | |         |   |||||     |         |
+            <...>-852     [001] .....   121.550551: tracing_mark_write[LINE TOO BIG]
+            <...>-852     [001] .....   121.550581: tracing_mark_write: 78901234
+
+This now emulates the same output as trace_pipe.
+
+Link: https://lore.kernel.org/linux-trace-kernel/20231209171058.78c1a026@gandalf.local.home
+
+Cc: Mark Rutland <mark.rutland@arm.com>
+Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
+Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
+Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ kernel/trace/trace.c | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
+
+--- a/kernel/trace/trace.c
++++ b/kernel/trace/trace.c
+@@ -4679,7 +4679,11 @@ static int s_show(struct seq_file *m, vo
+ 		iter->leftover = ret;
+ 
+ 	} else {
+-		print_trace_line(iter);
++		ret = print_trace_line(iter);
++		if (ret == TRACE_TYPE_PARTIAL_LINE) {
++			iter->seq.full = 0;
++			trace_seq_puts(&iter->seq, "[LINE TOO BIG]\n");
++		}
+ 		ret = trace_print_seq(m, &iter->seq);
+ 		/*
+ 		 * If we overflow the seq_file buffer, then it will
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-053-tracing-Add-size-check-when-printing-trace_marker-ou.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-053-tracing-Add-size-check-when-printing-trace_marker-ou.patch
new file mode 100644
index 0000000000..0b35be54ee
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-053-tracing-Add-size-check-when-printing-trace_marker-ou.patch
@@ -0,0 +1,60 @@
+From 6088107b64e773bef123c3a54cf8d06eef22e916 Mon Sep 17 00:00:00 2001
+From: "Steven Rostedt (Google)" <rostedt@goodmis.org>
+Date: Tue, 12 Dec 2023 08:44:44 -0500
+Subject: [PATCH] tracing: Add size check when printing trace_marker output
+
+[ Upstream commit 60be76eeabb3d83858cc6577fc65c7d0f36ffd42 ]
+
+If for some reason the trace_marker write does not have a nul byte for the
+string, it will overflow the print:
+
+  trace_seq_printf(s, ": %s", field->buf);
+
+The field->buf could be missing the nul byte. To prevent overflow, add the
+max size that the buf can be by using the event size and the field
+location.
+
+  int max = iter->ent_size - offsetof(struct print_entry, buf);
+
+  trace_seq_printf(s, ": %*.s", max, field->buf);
+
+Link: https://lore.kernel.org/linux-trace-kernel/20231212084444.4619b8ce@gandalf.local.home
+
+Cc: Mark Rutland <mark.rutland@arm.com>
+Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
+Reviewed-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>
+Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ kernel/trace/trace_output.c | 6 ++++--
+ 1 file changed, 4 insertions(+), 2 deletions(-)
+
+--- a/kernel/trace/trace_output.c
++++ b/kernel/trace/trace_output.c
+@@ -1445,11 +1445,12 @@ static enum print_line_t trace_print_pri
+ {
+ 	struct print_entry *field;
+ 	struct trace_seq *s = &iter->seq;
++	int max = iter->ent_size - offsetof(struct print_entry, buf);
+ 
+ 	trace_assign_type(field, iter->ent);
+ 
+ 	seq_print_ip_sym(s, field->ip, flags);
+-	trace_seq_printf(s, ": %s", field->buf);
++	trace_seq_printf(s, ": %.*s", max, field->buf);
+ 
+ 	return trace_handle_return(s);
+ }
+@@ -1458,10 +1459,11 @@ static enum print_line_t trace_print_raw
+ 					 struct trace_event *event)
+ {
+ 	struct print_entry *field;
++	int max = iter->ent_size - offsetof(struct print_entry, buf);
+ 
+ 	trace_assign_type(field, iter->ent);
+ 
+-	trace_seq_printf(&iter->seq, "# %lx %s", field->ip, field->buf);
++	trace_seq_printf(&iter->seq, "# %lx %.*s", field->ip, max, field->buf);
+ 
+ 	return trace_handle_return(&iter->seq);
+ }
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-054-stmmac-dwmac-loongson-drop-useless-check-for-compati.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-054-stmmac-dwmac-loongson-drop-useless-check-for-compati.patch
new file mode 100644
index 0000000000..f3528ece8e
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-054-stmmac-dwmac-loongson-drop-useless-check-for-compati.patch
@@ -0,0 +1,38 @@
+From 00b016bba7eea7a7d2610d3ce5a5221946221bb2 Mon Sep 17 00:00:00 2001
+From: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Date: Mon, 11 Dec 2023 18:33:53 +0800
+Subject: [PATCH] stmmac: dwmac-loongson: drop useless check for compatible
+ fallback
+
+[ Upstream commit 31fea092c6f9f8fb2c40a08137907f5fbeae55dd ]
+
+Device binds to proper PCI ID (LOONGSON, 0x7a03), already listed in DTS,
+so checking for some other compatible does not make sense.  It cannot be
+bound to unsupported platform.
+
+Drop useless, incorrect (space in between) and undocumented compatible.
+
+Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Yanteng Si <siyanteng@loongson.cn>
+Reviewed-by: Conor Dooley <conor.dooley@microchip.com>
+Acked-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
+Signed-off-by: David S. Miller <davem@davemloft.net>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/net/ethernet/stmicro/stmmac/dwmac-loongson.c | 5 -----
+ 1 file changed, 5 deletions(-)
+
+--- a/drivers/net/ethernet/stmicro/stmmac/dwmac-loongson.c
++++ b/drivers/net/ethernet/stmicro/stmmac/dwmac-loongson.c
+@@ -59,11 +59,6 @@ static int loongson_dwmac_probe(struct p
+ 		return -ENODEV;
+ 	}
+ 
+-	if (!of_device_is_compatible(np, "loongson, pci-gmac")) {
+-		pr_info("dwmac_loongson_pci: Incompatible OF node\n");
+-		return -ENODEV;
+-	}
+-
+ 	plat = devm_kzalloc(&pdev->dev, sizeof(*plat), GFP_KERNEL);
+ 	if (!plat)
+ 		return -ENOMEM;
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-055-MIPS-dts-loongson-drop-incorrect-dwmac-fallback-comp.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-055-MIPS-dts-loongson-drop-incorrect-dwmac-fallback-comp.patch
new file mode 100644
index 0000000000..d8e5ef319d
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-055-MIPS-dts-loongson-drop-incorrect-dwmac-fallback-comp.patch
@@ -0,0 +1,48 @@
+From d58b2c4067d4a084383edfd0e032958b8793b107 Mon Sep 17 00:00:00 2001
+From: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Date: Mon, 11 Dec 2023 18:33:54 +0800
+Subject: [PATCH] MIPS: dts: loongson: drop incorrect dwmac fallback compatible
+
+[ Upstream commit 4907a3f54b12b8209864572a312cf967befcae80 ]
+
+Device binds to proper PCI ID (LOONGSON, 0x7a03), already listed in DTS,
+so checking for some other compatible does not make sense.  It cannot be
+bound to unsupported platform.
+
+Drop useless, incorrect (space in between) and undocumented compatible.
+
+Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Signed-off-by: Yanteng Si <siyanteng@loongson.cn>
+Reviewed-by: Conor Dooley <conor.dooley@microchip.com>
+Acked-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
+Signed-off-by: David S. Miller <davem@davemloft.net>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ arch/mips/boot/dts/loongson/loongson64-2k1000.dtsi | 3 +--
+ arch/mips/boot/dts/loongson/ls7a-pch.dtsi          | 3 +--
+ 2 files changed, 2 insertions(+), 4 deletions(-)
+
+--- a/arch/mips/boot/dts/loongson/loongson64-2k1000.dtsi
++++ b/arch/mips/boot/dts/loongson/loongson64-2k1000.dtsi
+@@ -123,8 +123,7 @@
+ 				compatible = "pci0014,7a03.0",
+ 						   "pci0014,7a03",
+ 						   "pciclass0c0320",
+-						   "pciclass0c03",
+-						   "loongson, pci-gmac";
++						   "pciclass0c03";
+ 
+ 				reg = <0x1800 0x0 0x0 0x0 0x0>;
+ 				interrupts = <12 IRQ_TYPE_LEVEL_LOW>,
+--- a/arch/mips/boot/dts/loongson/ls7a-pch.dtsi
++++ b/arch/mips/boot/dts/loongson/ls7a-pch.dtsi
+@@ -186,8 +186,7 @@
+ 				compatible = "pci0014,7a03.0",
+ 						   "pci0014,7a03",
+ 						   "pciclass020000",
+-						   "pciclass0200",
+-						   "loongson, pci-gmac";
++						   "pciclass0200";
+ 
+ 				reg = <0x1800 0x0 0x0 0x0 0x0>;
+ 				interrupts = <12 IRQ_TYPE_LEVEL_HIGH>,
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-056-tracing-Fix-uaf-issue-when-open-the-hist-or-hist_deb.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-056-tracing-Fix-uaf-issue-when-open-the-hist-or-hist_deb.patch
new file mode 100644
index 0000000000..547676944b
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-056-tracing-Fix-uaf-issue-when-open-the-hist-or-hist_deb.patch
@@ -0,0 +1,169 @@
+From 209b41d32812bce7c2030d81ae1c63c6ed54918f Mon Sep 17 00:00:00 2001
+From: Zheng Yejian <zhengyejian1@huawei.com>
+Date: Thu, 14 Dec 2023 09:21:53 +0800
+Subject: [PATCH] tracing: Fix uaf issue when open the hist or hist_debug file
+
+[ Upstream commit 1cc111b9cddc71ce161cd388f11f0e9048edffdb ]
+
+KASAN report following issue. The root cause is when opening 'hist'
+file of an instance and accessing 'trace_event_file' in hist_show(),
+but 'trace_event_file' has been freed due to the instance being removed.
+'hist_debug' file has the same problem. To fix it, call
+tracing_{open,release}_file_tr() in file_operations callback to have
+the ref count and avoid 'trace_event_file' being freed.
+
+  BUG: KASAN: slab-use-after-free in hist_show+0x11e0/0x1278
+  Read of size 8 at addr ffff242541e336b8 by task head/190
+
+  CPU: 4 PID: 190 Comm: head Not tainted 6.7.0-rc5-g26aff849438c #133
+  Hardware name: linux,dummy-virt (DT)
+  Call trace:
+   dump_backtrace+0x98/0xf8
+   show_stack+0x1c/0x30
+   dump_stack_lvl+0x44/0x58
+   print_report+0xf0/0x5a0
+   kasan_report+0x80/0xc0
+   __asan_report_load8_noabort+0x1c/0x28
+   hist_show+0x11e0/0x1278
+   seq_read_iter+0x344/0xd78
+   seq_read+0x128/0x1c0
+   vfs_read+0x198/0x6c8
+   ksys_read+0xf4/0x1e0
+   __arm64_sys_read+0x70/0xa8
+   invoke_syscall+0x70/0x260
+   el0_svc_common.constprop.0+0xb0/0x280
+   do_el0_svc+0x44/0x60
+   el0_svc+0x34/0x68
+   el0t_64_sync_handler+0xb8/0xc0
+   el0t_64_sync+0x168/0x170
+
+  Allocated by task 188:
+   kasan_save_stack+0x28/0x50
+   kasan_set_track+0x28/0x38
+   kasan_save_alloc_info+0x20/0x30
+   __kasan_slab_alloc+0x6c/0x80
+   kmem_cache_alloc+0x15c/0x4a8
+   trace_create_new_event+0x84/0x348
+   __trace_add_new_event+0x18/0x88
+   event_trace_add_tracer+0xc4/0x1a0
+   trace_array_create_dir+0x6c/0x100
+   trace_array_create+0x2e8/0x568
+   instance_mkdir+0x48/0x80
+   tracefs_syscall_mkdir+0x90/0xe8
+   vfs_mkdir+0x3c4/0x610
+   do_mkdirat+0x144/0x200
+   __arm64_sys_mkdirat+0x8c/0xc0
+   invoke_syscall+0x70/0x260
+   el0_svc_common.constprop.0+0xb0/0x280
+   do_el0_svc+0x44/0x60
+   el0_svc+0x34/0x68
+   el0t_64_sync_handler+0xb8/0xc0
+   el0t_64_sync+0x168/0x170
+
+  Freed by task 191:
+   kasan_save_stack+0x28/0x50
+   kasan_set_track+0x28/0x38
+   kasan_save_free_info+0x34/0x58
+   __kasan_slab_free+0xe4/0x158
+   kmem_cache_free+0x19c/0x508
+   event_file_put+0xa0/0x120
+   remove_event_file_dir+0x180/0x320
+   event_trace_del_tracer+0xb0/0x180
+   __remove_instance+0x224/0x508
+   instance_rmdir+0x44/0x78
+   tracefs_syscall_rmdir+0xbc/0x140
+   vfs_rmdir+0x1cc/0x4c8
+   do_rmdir+0x220/0x2b8
+   __arm64_sys_unlinkat+0xc0/0x100
+   invoke_syscall+0x70/0x260
+   el0_svc_common.constprop.0+0xb0/0x280
+   do_el0_svc+0x44/0x60
+   el0_svc+0x34/0x68
+   el0t_64_sync_handler+0xb8/0xc0
+   el0t_64_sync+0x168/0x170
+
+Link: https://lore.kernel.org/linux-trace-kernel/20231214012153.676155-1-zhengyejian1@huawei.com
+
+Suggested-by: Steven Rostedt <rostedt@goodmis.org>
+Signed-off-by: Zheng Yejian <zhengyejian1@huawei.com>
+Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ kernel/trace/trace.c             |  6 ++++++
+ kernel/trace/trace.h             |  1 +
+ kernel/trace/trace_events_hist.c | 12 ++++++++----
+ 3 files changed, 15 insertions(+), 4 deletions(-)
+
+--- a/kernel/trace/trace.c
++++ b/kernel/trace/trace.c
+@@ -4916,6 +4916,12 @@ int tracing_release_file_tr(struct inode
+ 	return 0;
+ }
+ 
++int tracing_single_release_file_tr(struct inode *inode, struct file *filp)
++{
++	tracing_release_file_tr(inode, filp);
++	return single_release(inode, filp);
++}
++
+ static int tracing_mark_open(struct inode *inode, struct file *filp)
+ {
+ 	stream_open(inode, filp);
+--- a/kernel/trace/trace.h
++++ b/kernel/trace/trace.h
+@@ -592,6 +592,7 @@ int tracing_open_generic(struct inode *i
+ int tracing_open_generic_tr(struct inode *inode, struct file *filp);
+ int tracing_open_file_tr(struct inode *inode, struct file *filp);
+ int tracing_release_file_tr(struct inode *inode, struct file *filp);
++int tracing_single_release_file_tr(struct inode *inode, struct file *filp);
+ bool tracing_is_disabled(void);
+ bool tracer_tracing_is_on(struct trace_array *tr);
+ void tracer_tracing_on(struct trace_array *tr);
+--- a/kernel/trace/trace_events_hist.c
++++ b/kernel/trace/trace_events_hist.c
+@@ -5532,10 +5532,12 @@ static int event_hist_open(struct inode
+ {
+ 	int ret;
+ 
+-	ret = security_locked_down(LOCKDOWN_TRACEFS);
++	ret = tracing_open_file_tr(inode, file);
+ 	if (ret)
+ 		return ret;
+ 
++	/* Clear private_data to avoid warning in single_open() */
++	file->private_data = NULL;
+ 	return single_open(file, hist_show, file);
+ }
+ 
+@@ -5543,7 +5545,7 @@ const struct file_operations event_hist_
+ 	.open = event_hist_open,
+ 	.read = seq_read,
+ 	.llseek = seq_lseek,
+-	.release = single_release,
++	.release = tracing_single_release_file_tr,
+ };
+ 
+ #ifdef CONFIG_HIST_TRIGGERS_DEBUG
+@@ -5809,10 +5811,12 @@ static int event_hist_debug_open(struct
+ {
+ 	int ret;
+ 
+-	ret = security_locked_down(LOCKDOWN_TRACEFS);
++	ret = tracing_open_file_tr(inode, file);
+ 	if (ret)
+ 		return ret;
+ 
++	/* Clear private_data to avoid warning in single_open() */
++	file->private_data = NULL;
+ 	return single_open(file, hist_debug_show, file);
+ }
+ 
+@@ -5820,7 +5824,7 @@ const struct file_operations event_hist_
+ 	.open = event_hist_debug_open,
+ 	.read = seq_read,
+ 	.llseek = seq_lseek,
+-	.release = single_release,
++	.release = tracing_single_release_file_tr,
+ };
+ #endif
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-057-ring-buffer-Do-not-record-in-NMI-if-the-arch-does-no.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-057-ring-buffer-Do-not-record-in-NMI-if-the-arch-does-no.patch
new file mode 100644
index 0000000000..82eab559c4
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-057-ring-buffer-Do-not-record-in-NMI-if-the-arch-does-no.patch
@@ -0,0 +1,38 @@
+From 74dbb0ef21e64d4b6a4a10e612eb62bbc3dfd7ce Mon Sep 17 00:00:00 2001
+From: "Steven Rostedt (Google)" <rostedt@goodmis.org>
+Date: Wed, 13 Dec 2023 17:54:03 -0500
+Subject: [PATCH] ring-buffer: Do not record in NMI if the arch does not
+ support cmpxchg in NMI
+
+[ Upstream commit 712292308af2265cd9b126aedfa987f10f452a33 ]
+
+As the ring buffer recording requires cmpxchg() to work, if the
+architecture does not support cmpxchg in NMI, then do not do any recording
+within an NMI.
+
+Link: https://lore.kernel.org/linux-trace-kernel/20231213175403.6fc18540@gandalf.local.home
+
+Cc: Masami Hiramatsu <mhiramat@kernel.org>
+Cc: Mark Rutland <mark.rutland@arm.com>
+Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
+Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ kernel/trace/ring_buffer.c | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+--- a/kernel/trace/ring_buffer.c
++++ b/kernel/trace/ring_buffer.c
+@@ -3644,6 +3644,12 @@ rb_reserve_next_event(struct trace_buffe
+ 	int nr_loops = 0;
+ 	int add_ts_default;
+ 
++	/* ring buffer does cmpxchg, make sure it is safe in NMI context */
++	if (!IS_ENABLED(CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG) &&
++	    (unlikely(in_nmi()))) {
++		return NULL;
++	}
++
+ 	rb_start_commit(cpu_buffer);
+ 	/* The commit page can not change after this */
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-058-Input-psmouse-enable-Synaptics-InterTouch-for-ThinkP.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-058-Input-psmouse-enable-Synaptics-InterTouch-for-ThinkP.patch
new file mode 100644
index 0000000000..4b6aaf1387
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-058-Input-psmouse-enable-Synaptics-InterTouch-for-ThinkP.patch
@@ -0,0 +1,43 @@
+From b82421d2f4d298bcf46cb0c12ca4cd51362c95fd Mon Sep 17 00:00:00 2001
+From: =?UTF-8?q?Jos=C3=A9=20Pekkarinen?= <jose.pekkarinen@foxhound.fi>
+Date: Wed, 15 Nov 2023 16:50:23 +0000
+Subject: [PATCH] Input: psmouse - enable Synaptics InterTouch for ThinkPad L14
+ G1
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+[ Upstream commit c1f342f35f820b33390571293498c3e2e9bc77ec ]
+
+Observed on dmesg of my laptop I see the following
+output:
+
+[   19.898700] psmouse serio1: synaptics: queried max coordinates: x [..5678], y [..4694]
+[   19.936057] psmouse serio1: synaptics: queried min coordinates: x [1266..], y [1162..]
+[   19.936076] psmouse serio1: synaptics: Your touchpad (PNP: LEN0411 PNP0f13) says it can support a different bus. If i2c-hid and hid-rmi are not used, you might want to try setting psmouse.synaptics_intertouch to 1 and report this to linux-input@vger.kernel.org.
+[   20.008901] psmouse serio1: synaptics: Touchpad model: 1, fw: 10.32, id: 0x1e2a1, caps: 0xf014a3/0x940300/0x12e800/0x500000, board id: 3471, fw id: 2909640
+[   20.008925] psmouse serio1: synaptics: serio: Synaptics pass-through port at isa0060/serio1/input0
+[   20.053344] input: SynPS/2 Synaptics TouchPad as /devices/platform/i8042/serio1/input/input7
+[   20.397608] mousedev: PS/2 mouse device common for all mice
+
+This patch will add its pnp id to the smbus list to
+produce the setup of intertouch for the device.
+
+Signed-off-by: José Pekkarinen <jose.pekkarinen@foxhound.fi>
+Link: https://lore.kernel.org/r/20231114063607.71772-1-jose.pekkarinen@foxhound.fi
+Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/input/mouse/synaptics.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/drivers/input/mouse/synaptics.c
++++ b/drivers/input/mouse/synaptics.c
+@@ -183,6 +183,7 @@ static const char * const smbus_pnp_ids[
+ 	"LEN009b", /* T580 */
+ 	"LEN0402", /* X1 Extreme Gen 2 / P1 Gen 2 */
+ 	"LEN040f", /* P1 Gen 3 */
++	"LEN0411", /* L14 Gen 1 */
+ 	"LEN200f", /* T450s */
+ 	"LEN2044", /* L470  */
+ 	"LEN2054", /* E480 */
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-059-reset-hisilicon-hi6220-fix-Wvoid-pointer-to-enum-cas.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-059-reset-hisilicon-hi6220-fix-Wvoid-pointer-to-enum-cas.patch
new file mode 100644
index 0000000000..ff497435ef
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-059-reset-hisilicon-hi6220-fix-Wvoid-pointer-to-enum-cas.patch
@@ -0,0 +1,32 @@
+From cce1ebcd60b669485b8fad76416bc2921254ea2b Mon Sep 17 00:00:00 2001
+From: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Date: Thu, 10 Aug 2023 11:13:00 +0200
+Subject: [PATCH] reset: hisilicon: hi6220: fix Wvoid-pointer-to-enum-cast
+ warning
+
+[ Upstream commit b5ec294472794ed9ecba0cb4b8208372842e7e0d ]
+
+'type' is an enum, thus cast of pointer on 64-bit compile test with W=1
+causes:
+
+  hi6220_reset.c:166:9: error: cast to smaller integer type 'enum hi6220_reset_ctrl_type' from 'const void *' [-Werror,-Wvoid-pointer-to-enum-cast]
+
+Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
+Link: https://lore.kernel.org/r/20230810091300.70197-1-krzysztof.kozlowski@linaro.org
+Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/reset/hisilicon/hi6220_reset.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/reset/hisilicon/hi6220_reset.c
++++ b/drivers/reset/hisilicon/hi6220_reset.c
+@@ -164,7 +164,7 @@ static int hi6220_reset_probe(struct pla
+ 	if (!data)
+ 		return -ENOMEM;
+ 
+-	type = (enum hi6220_reset_ctrl_type)of_device_get_match_data(dev);
++	type = (uintptr_t)of_device_get_match_data(dev);
+ 
+ 	regmap = syscon_node_to_regmap(np);
+ 	if (IS_ERR(regmap)) {
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-060-Input-atkbd-skip-ATKBD_CMD_GETID-in-translated-mode.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-060-Input-atkbd-skip-ATKBD_CMD_GETID-in-translated-mode.patch
new file mode 100644
index 0000000000..f6e21cdb06
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-060-Input-atkbd-skip-ATKBD_CMD_GETID-in-translated-mode.patch
@@ -0,0 +1,119 @@
+From 32f0da9ee1e073fd0501fa64b22d156ac40150b9 Mon Sep 17 00:00:00 2001
+From: Hans de Goede <hdegoede@redhat.com>
+Date: Fri, 24 Nov 2023 19:59:24 -0800
+Subject: [PATCH] Input: atkbd - skip ATKBD_CMD_GETID in translated mode
+
+[ Upstream commit 936e4d49ecbc8c404790504386e1422b599dec39 ]
+
+There have been multiple reports of keyboard issues on recent laptop models
+which can be worked around by setting i8042.dumbkbd, with the downside
+being this breaks the capslock LED.
+
+It seems that these issues are caused by recent laptops getting confused by
+ATKBD_CMD_GETID. Rather then adding and endless growing list of quirks for
+this, just skip ATKBD_CMD_GETID alltogether on laptops in translated mode.
+
+The main goal of sending ATKBD_CMD_GETID is to skip binding to ps/2
+mice/touchpads and those are never used in translated mode.
+
+Examples of laptop models which benefit from skipping ATKBD_CMD_GETID:
+
+* "HP Laptop 15s-fq2xxx", "HP laptop 15s-fq4xxx" and "HP Laptop 15-dy2xxx"
+  models the kbd stops working for the first 2 - 5 minutes after boot
+  (waiting for EC watchdog reset?)
+
+* On "HP Spectre x360 13-aw2xxx" atkbd fails to probe the keyboard
+
+* At least 9 different Lenovo models have issues with ATKBD_CMD_GETID, see:
+  https://github.com/yescallop/atkbd-nogetid
+
+This has been tested on:
+
+1. A MSI B550M PRO-VDH WIFI desktop, where the i8042 controller is not
+   in translated mode when no keyboard is plugged in and with a ps/2 kbd
+   a "AT Translated Set 2 keyboard" /dev/input/event# node shows up
+
+2. A Lenovo ThinkPad X1 Yoga gen 8 (always has a translated set 2 keyboard)
+
+Reported-by: Shang Ye <yesh25@mail2.sysu.edu.cn>
+Closes: https://lore.kernel.org/linux-input/886D6167733841AE+20231017135318.11142-1-yesh25@mail2.sysu.edu.cn/
+Closes: https://github.com/yescallop/atkbd-nogetid
+Reported-by: gurevitch <mail@gurevit.ch>
+Closes: https://lore.kernel.org/linux-input/2iAJTwqZV6lQs26cTb38RNYqxvsink6SRmrZ5h0cBUSuf9NT0tZTsf9fEAbbto2maavHJEOP8GA1evlKa6xjKOsaskDhtJWxjcnrgPigzVo=@gurevit.ch/
+Reported-by: Egor Ignatov <egori@altlinux.org>
+Closes: https://lore.kernel.org/all/20210609073333.8425-1-egori@altlinux.org/
+Reported-by: Anton Zhilyaev <anton@cpp.in>
+Closes: https://lore.kernel.org/linux-input/20210201160336.16008-1-anton@cpp.in/
+Closes: https://bugzilla.redhat.com/show_bug.cgi?id=2086156
+Signed-off-by: Hans de Goede <hdegoede@redhat.com>
+Link: https://lore.kernel.org/r/20231115174625.7462-1-hdegoede@redhat.com
+Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/input/keyboard/atkbd.c | 46 +++++++++++++++++++++++++++++++---
+ 1 file changed, 42 insertions(+), 4 deletions(-)
+
+--- a/drivers/input/keyboard/atkbd.c
++++ b/drivers/input/keyboard/atkbd.c
+@@ -746,6 +746,44 @@ static void atkbd_deactivate(struct atkb
+ 			ps2dev->serio->phys);
+ }
+ 
++#ifdef CONFIG_X86
++static bool atkbd_is_portable_device(void)
++{
++	static const char * const chassis_types[] = {
++		"8",	/* Portable */
++		"9",	/* Laptop */
++		"10",	/* Notebook */
++		"14",	/* Sub-Notebook */
++		"31",	/* Convertible */
++		"32",	/* Detachable */
++	};
++	int i;
++
++	for (i = 0; i < ARRAY_SIZE(chassis_types); i++)
++		if (dmi_match(DMI_CHASSIS_TYPE, chassis_types[i]))
++			return true;
++
++	return false;
++}
++
++/*
++ * On many modern laptops ATKBD_CMD_GETID may cause problems, on these laptops
++ * the controller is always in translated mode. In this mode mice/touchpads will
++ * not work. So in this case simply assume a keyboard is connected to avoid
++ * confusing some laptop keyboards.
++ *
++ * Skipping ATKBD_CMD_GETID ends up using a fake keyboard id. Using a fake id is
++ * ok in translated mode, only atkbd_select_set() checks atkbd->id and in
++ * translated mode that is a no-op.
++ */
++static bool atkbd_skip_getid(struct atkbd *atkbd)
++{
++	return atkbd->translated && atkbd_is_portable_device();
++}
++#else
++static inline bool atkbd_skip_getid(struct atkbd *atkbd) { return false; }
++#endif
++
+ /*
+  * atkbd_probe() probes for an AT keyboard on a serio port.
+  */
+@@ -775,12 +813,12 @@ static int atkbd_probe(struct atkbd *atk
+  */
+ 
+ 	param[0] = param[1] = 0xa5;	/* initialize with invalid values */
+-	if (ps2_command(ps2dev, param, ATKBD_CMD_GETID)) {
++	if (atkbd_skip_getid(atkbd) || ps2_command(ps2dev, param, ATKBD_CMD_GETID)) {
+ 
+ /*
+- * If the get ID command failed, we check if we can at least set the LEDs on
+- * the keyboard. This should work on every keyboard out there. It also turns
+- * the LEDs off, which we want anyway.
++ * If the get ID command was skipped or failed, we check if we can at least set
++ * the LEDs on the keyboard. This should work on every keyboard out there.
++ * It also turns the LEDs off, which we want anyway.
+  */
+ 		param[0] = 0;
+ 		if (ps2_command(ps2dev, param, ATKBD_CMD_SETLEDS))
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-061-Input-i8042-add-nomux-quirk-for-Acer-P459-G2-M.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-061-Input-i8042-add-nomux-quirk-for-Acer-P459-G2-M.patch
new file mode 100644
index 0000000000..e75658fba4
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-061-Input-i8042-add-nomux-quirk-for-Acer-P459-G2-M.patch
@@ -0,0 +1,38 @@
+From 2efa67b08c5dd99aa889219ae3b6a49f3619c3a2 Mon Sep 17 00:00:00 2001
+From: Esther Shimanovich <eshimanovich@chromium.org>
+Date: Thu, 30 Nov 2023 19:56:19 +0000
+Subject: [PATCH] Input: i8042 - add nomux quirk for Acer P459-G2-M
+
+[ Upstream commit 335fe00319e030d481a54d5e0e68d50c5e672c0e ]
+
+After the laptop lid is opened, and the device resumes from S3 deep
+sleep, if the user presses a keyboard key while the screen is still black,
+the mouse and keyboard become unusable.
+
+Enabling this quirk prevents this behavior from occurring.
+
+Signed-off-by: Esther Shimanovich <eshimanovich@chromium.org>
+Link: https://lore.kernel.org/r/20231130195615.v2.1.Ibe78a9df97ecd18dc227a5cff67d3029631d9c11@changeid
+Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/input/serio/i8042-acpipnpio.h | 8 ++++++++
+ 1 file changed, 8 insertions(+)
+
+--- a/drivers/input/serio/i8042-acpipnpio.h
++++ b/drivers/input/serio/i8042-acpipnpio.h
+@@ -361,6 +361,14 @@ static const struct dmi_system_id i8042_
+ 		.driver_data = (void *)(SERIO_QUIRK_DRITEK)
+ 	},
+ 	{
++		/* Acer TravelMate P459-G2-M */
++		.matches = {
++			DMI_MATCH(DMI_SYS_VENDOR, "Acer"),
++			DMI_MATCH(DMI_PRODUCT_NAME, "TravelMate P459-G2-M"),
++		},
++		.driver_data = (void *)(SERIO_QUIRK_NOMUX)
++	},
++	{
+ 		/* Amoi M636/A737 */
+ 		.matches = {
+ 			DMI_MATCH(DMI_SYS_VENDOR, "Amoi Electronics CO.,LTD."),
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-062-s390-scm-fix-virtual-vs-physical-address-confusion.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-062-s390-scm-fix-virtual-vs-physical-address-confusion.patch
new file mode 100644
index 0000000000..091653d4a5
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-062-s390-scm-fix-virtual-vs-physical-address-confusion.patch
@@ -0,0 +1,52 @@
+From 553a02594de0b7c5d372e75ea594d7a76714df2f Mon Sep 17 00:00:00 2001
+From: Vineeth Vijayan <vneethv@linux.ibm.com>
+Date: Thu, 23 Nov 2023 22:52:53 +0100
+Subject: [PATCH] s390/scm: fix virtual vs physical address confusion
+
+[ Upstream commit b1a6a1a77f0666a5a6dc0893ab6ec8fcae46f24c ]
+
+Fix virtual vs physical address confusion (which currently are the same).
+
+Signed-off-by: Vineeth Vijayan <vneethv@linux.ibm.com>
+Reviewed-by: Peter Oberparleiter <oberpar@linux.ibm.com>
+Acked-by: Alexander Gordeev <agordeev@linux.ibm.com>
+Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/s390/block/scm_blk.c | 7 ++++---
+ 1 file changed, 4 insertions(+), 3 deletions(-)
+
+--- a/drivers/s390/block/scm_blk.c
++++ b/drivers/s390/block/scm_blk.c
+@@ -17,6 +17,7 @@
+ #include <linux/blk-mq.h>
+ #include <linux/slab.h>
+ #include <linux/list.h>
++#include <linux/io.h>
+ #include <asm/eadm.h>
+ #include "scm_blk.h"
+ 
+@@ -130,7 +131,7 @@ static void scm_request_done(struct scm_
+ 
+ 	for (i = 0; i < nr_requests_per_io && scmrq->request[i]; i++) {
+ 		msb = &scmrq->aob->msb[i];
+-		aidaw = msb->data_addr;
++		aidaw = (u64)phys_to_virt(msb->data_addr);
+ 
+ 		if ((msb->flags & MSB_FLAG_IDA) && aidaw &&
+ 		    IS_ALIGNED(aidaw, PAGE_SIZE))
+@@ -195,12 +196,12 @@ static int scm_request_prepare(struct sc
+ 	msb->scm_addr = scmdev->address + ((u64) blk_rq_pos(req) << 9);
+ 	msb->oc = (rq_data_dir(req) == READ) ? MSB_OC_READ : MSB_OC_WRITE;
+ 	msb->flags |= MSB_FLAG_IDA;
+-	msb->data_addr = (u64) aidaw;
++	msb->data_addr = (u64)virt_to_phys(aidaw);
+ 
+ 	rq_for_each_segment(bv, req, iter) {
+ 		WARN_ON(bv.bv_offset);
+ 		msb->blk_count += bv.bv_len >> 12;
+-		aidaw->data_addr = (u64) page_address(bv.bv_page);
++		aidaw->data_addr = virt_to_phys(page_address(bv.bv_page));
+ 		aidaw++;
+ 	}
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-063-ARC-fix-spare-error.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-063-ARC-fix-spare-error.patch
new file mode 100644
index 0000000000..bf6b3640ff
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-063-ARC-fix-spare-error.patch
@@ -0,0 +1,41 @@
+From 46952f982b36d0fdcee4dc60b375259a4b79a777 Mon Sep 17 00:00:00 2001
+From: Vineet Gupta <vgupta@kernel.org>
+Date: Fri, 8 Dec 2023 15:57:07 -0800
+Subject: [PATCH] ARC: fix spare error
+
+[ Upstream commit aca02d933f63ba8bc84258bf35f9ffaf6b664336 ]
+
+Reported-by: kernel test robot <lkp@intel.com>
+Closes: https://lore.kernel.org/oe-kbuild-all/202312082320.VDN5A9hb-lkp@intel.com/
+Signed-off-by: Vineet Gupta <vgupta@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ arch/arc/kernel/signal.c | 6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+--- a/arch/arc/kernel/signal.c
++++ b/arch/arc/kernel/signal.c
+@@ -61,7 +61,7 @@ struct rt_sigframe {
+ 	unsigned int sigret_magic;
+ };
+ 
+-static int save_arcv2_regs(struct sigcontext *mctx, struct pt_regs *regs)
++static int save_arcv2_regs(struct sigcontext __user *mctx, struct pt_regs *regs)
+ {
+ 	int err = 0;
+ #ifndef CONFIG_ISA_ARCOMPACT
+@@ -74,12 +74,12 @@ static int save_arcv2_regs(struct sigcon
+ #else
+ 	v2abi.r58 = v2abi.r59 = 0;
+ #endif
+-	err = __copy_to_user(&mctx->v2abi, &v2abi, sizeof(v2abi));
++	err = __copy_to_user(&mctx->v2abi, (void const *)&v2abi, sizeof(v2abi));
+ #endif
+ 	return err;
+ }
+ 
+-static int restore_arcv2_regs(struct sigcontext *mctx, struct pt_regs *regs)
++static int restore_arcv2_regs(struct sigcontext __user *mctx, struct pt_regs *regs)
+ {
+ 	int err = 0;
+ #ifndef CONFIG_ISA_ARCOMPACT
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-064-wifi-iwlwifi-pcie-avoid-a-NULL-pointer-dereference.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-064-wifi-iwlwifi-pcie-avoid-a-NULL-pointer-dereference.patch
new file mode 100644
index 0000000000..3eed7a5069
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-064-wifi-iwlwifi-pcie-avoid-a-NULL-pointer-dereference.patch
@@ -0,0 +1,32 @@
+From eea630f81429ea5a09509591920e9a93dd03af37 Mon Sep 17 00:00:00 2001
+From: Avraham Stern <avraham.stern@intel.com>
+Date: Thu, 7 Dec 2023 04:50:17 +0200
+Subject: [PATCH] wifi: iwlwifi: pcie: avoid a NULL pointer dereference
+
+[ Upstream commit ce038edfce43fb345f8dfdca0f7b17f535896701 ]
+
+It possible that while the rx rb is being handled, the transport has
+been stopped and re-started. In this case the tx queue pointer is not
+yet initialized, which will lead to a NULL pointer dereference.
+Fix it.
+
+Signed-off-by: Avraham Stern <avraham.stern@intel.com>
+Signed-off-by: Miri Korenblit <miriam.rachel.korenblit@intel.com>
+Link: https://msgid.link/20231207044813.cd0898cafd89.I0b84daae753ba9612092bf383f5c6f761446e964@changeid
+Signed-off-by: Johannes Berg <johannes.berg@intel.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/net/wireless/intel/iwlwifi/pcie/rx.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/net/wireless/intel/iwlwifi/pcie/rx.c
++++ b/drivers/net/wireless/intel/iwlwifi/pcie/rx.c
+@@ -1381,7 +1381,7 @@ static void iwl_pcie_rx_handle_rb(struct
+ 		 * if it is true then one of the handlers took the page.
+ 		 */
+ 
+-		if (reclaim) {
++		if (reclaim && txq) {
+ 			u16 sequence = le16_to_cpu(pkt->hdr.sequence);
+ 			int index = SEQ_TO_INDEX(sequence);
+ 			int cmd_index = iwl_txq_get_cmd_index(txq, index);
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-065-Input-xpad-add-Razer-Wolverine-V2-support.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-065-Input-xpad-add-Razer-Wolverine-V2-support.patch
new file mode 100644
index 0000000000..b7d9a686c7
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-065-Input-xpad-add-Razer-Wolverine-V2-support.patch
@@ -0,0 +1,27 @@
+From 0945026b1e75a1870199f1b65e8c1c08b97c7e2f Mon Sep 17 00:00:00 2001
+From: Luca Weiss <luca@z3ntu.xyz>
+Date: Sat, 25 Nov 2023 17:22:15 +0100
+Subject: [PATCH] Input: xpad - add Razer Wolverine V2 support
+
+[ Upstream commit c3d1610345b79cbe29ef6ca04a4780eff0d360c7 ]
+
+Add the VID and PID of Razer Wolverine V2 to xpad_device.
+
+Signed-off-by: Luca Weiss <luca@z3ntu.xyz>
+Link: https://lore.kernel.org/r/20231125-razer-wolverine-v2-v1-1-979fe9f9288e@z3ntu.xyz
+Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/input/joystick/xpad.c | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/drivers/input/joystick/xpad.c
++++ b/drivers/input/joystick/xpad.c
+@@ -286,6 +286,7 @@ static const struct xpad_device {
+ 	{ 0x146b, 0x0604, "Bigben Interactive DAIJA Arcade Stick", MAP_TRIGGERS_TO_BUTTONS, XTYPE_XBOX360 },
+ 	{ 0x1532, 0x0a00, "Razer Atrox Arcade Stick", MAP_TRIGGERS_TO_BUTTONS, XTYPE_XBOXONE },
+ 	{ 0x1532, 0x0a03, "Razer Wildcat", 0, XTYPE_XBOXONE },
++	{ 0x1532, 0x0a29, "Razer Wolverine V2", 0, XTYPE_XBOXONE },
+ 	{ 0x15e4, 0x3f00, "Power A Mini Pro Elite", 0, XTYPE_XBOX360 },
+ 	{ 0x15e4, 0x3f0a, "Xbox Airflo wired controller", 0, XTYPE_XBOX360 },
+ 	{ 0x15e4, 0x3f10, "Batarang Xbox 360 controller", 0, XTYPE_XBOX360 },
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-066-kselftest-alsa-fixed-a-print-formatting-warning.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-066-kselftest-alsa-fixed-a-print-formatting-warning.patch
new file mode 100644
index 0000000000..aebaf93ecc
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-066-kselftest-alsa-fixed-a-print-formatting-warning.patch
@@ -0,0 +1,30 @@
+From 3f3b18902e7329ec5f45a4aac021f4169a1505d9 Mon Sep 17 00:00:00 2001
+From: Ghanshyam Agrawal <ghanshyam1898@gmail.com>
+Date: Sun, 17 Dec 2023 13:30:19 +0530
+Subject: [PATCH] kselftest: alsa: fixed a print formatting warning
+
+[ Upstream commit 13d605e32e4cfdedcecdf3d98d21710ffe887708 ]
+
+A statement used %d print formatter where %s should have
+been used. The same has been fixed in this commit.
+
+Signed-off-by: Ghanshyam Agrawal <ghanshyam1898@gmail.com>
+Link: 5aaf9efffc57 ("kselftest: alsa: Add simplistic test for ALSA mixer controls kselftest")
+Link: https://lore.kernel.org/r/20231217080019.1063476-1-ghanshyam1898@gmail.com
+Signed-off-by: Takashi Iwai <tiwai@suse.de>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ tools/testing/selftests/alsa/mixer-test.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/tools/testing/selftests/alsa/mixer-test.c
++++ b/tools/testing/selftests/alsa/mixer-test.c
+@@ -177,7 +177,7 @@ static void find_controls(void)
+ 			err = snd_ctl_elem_info(card_data->handle,
+ 						ctl_data->info);
+ 			if (err < 0) {
+-				ksft_print_msg("%s getting info for %d\n",
++				ksft_print_msg("%s getting info for %s\n",
+ 					       snd_strerror(err),
+ 					       ctl_data->name);
+ 			}
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-067-HID-nintendo-fix-initializer-element-is-not-constant.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-067-HID-nintendo-fix-initializer-element-is-not-constant.patch
new file mode 100644
index 0000000000..2a8f85b665
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-067-HID-nintendo-fix-initializer-element-is-not-constant.patch
@@ -0,0 +1,74 @@
+From d60c130f4c1557783857063a746dad33048b16bc Mon Sep 17 00:00:00 2001
+From: Ryan McClelland <rymcclel@gmail.com>
+Date: Thu, 14 Dec 2023 09:25:41 -0800
+Subject: [PATCH] HID: nintendo: fix initializer element is not constant error
+
+[ Upstream commit 0b7dd38c1c520b650a889a81919838671b689eb9 ]
+
+With gcc-7 builds, an error happens with the controller button values being
+defined as const. Change to a define.
+
+Reported-by: kernel test robot <lkp@intel.com>
+Closes: https://lore.kernel.org/oe-kbuild-all/202312141227.C2h1IzfI-lkp@intel.com/
+
+Signed-off-by: Ryan McClelland <rymcclel@gmail.com>
+Reviewed-by: Daniel J. Ogorchock <djogorchock@gmail.com>
+Signed-off-by: Jiri Kosina <jkosina@suse.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/hid/hid-nintendo.c | 44 +++++++++++++++++++-------------------
+ 1 file changed, 22 insertions(+), 22 deletions(-)
+
+--- a/drivers/hid/hid-nintendo.c
++++ b/drivers/hid/hid-nintendo.c
+@@ -325,28 +325,28 @@ struct joycon_imu_cal {
+  * All the controller's button values are stored in a u32.
+  * They can be accessed with bitwise ANDs.
+  */
+-static const u32 JC_BTN_Y	= BIT(0);
+-static const u32 JC_BTN_X	= BIT(1);
+-static const u32 JC_BTN_B	= BIT(2);
+-static const u32 JC_BTN_A	= BIT(3);
+-static const u32 JC_BTN_SR_R	= BIT(4);
+-static const u32 JC_BTN_SL_R	= BIT(5);
+-static const u32 JC_BTN_R	= BIT(6);
+-static const u32 JC_BTN_ZR	= BIT(7);
+-static const u32 JC_BTN_MINUS	= BIT(8);
+-static const u32 JC_BTN_PLUS	= BIT(9);
+-static const u32 JC_BTN_RSTICK	= BIT(10);
+-static const u32 JC_BTN_LSTICK	= BIT(11);
+-static const u32 JC_BTN_HOME	= BIT(12);
+-static const u32 JC_BTN_CAP	= BIT(13); /* capture button */
+-static const u32 JC_BTN_DOWN	= BIT(16);
+-static const u32 JC_BTN_UP	= BIT(17);
+-static const u32 JC_BTN_RIGHT	= BIT(18);
+-static const u32 JC_BTN_LEFT	= BIT(19);
+-static const u32 JC_BTN_SR_L	= BIT(20);
+-static const u32 JC_BTN_SL_L	= BIT(21);
+-static const u32 JC_BTN_L	= BIT(22);
+-static const u32 JC_BTN_ZL	= BIT(23);
++#define JC_BTN_Y	 BIT(0)
++#define JC_BTN_X	 BIT(1)
++#define JC_BTN_B	 BIT(2)
++#define JC_BTN_A	 BIT(3)
++#define JC_BTN_SR_R	 BIT(4)
++#define JC_BTN_SL_R	 BIT(5)
++#define JC_BTN_R	 BIT(6)
++#define JC_BTN_ZR	 BIT(7)
++#define JC_BTN_MINUS	 BIT(8)
++#define JC_BTN_PLUS	 BIT(9)
++#define JC_BTN_RSTICK	 BIT(10)
++#define JC_BTN_LSTICK	 BIT(11)
++#define JC_BTN_HOME	 BIT(12)
++#define JC_BTN_CAP	 BIT(13) /* capture button */
++#define JC_BTN_DOWN	 BIT(16)
++#define JC_BTN_UP	 BIT(17)
++#define JC_BTN_RIGHT	 BIT(18)
++#define JC_BTN_LEFT	 BIT(19)
++#define JC_BTN_SR_L	 BIT(20)
++#define JC_BTN_SL_L	 BIT(21)
++#define JC_BTN_L	 BIT(22)
++#define JC_BTN_ZL	 BIT(23)
+ 
+ enum joycon_msg_type {
+ 	JOYCON_MSG_TYPE_NONE,
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-068-platform-x86-thinkpad_acpi-fix-for-incorrect-fan-rep.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-068-platform-x86-thinkpad_acpi-fix-for-incorrect-fan-rep.patch
new file mode 100644
index 0000000000..978ac765d6
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-068-platform-x86-thinkpad_acpi-fix-for-incorrect-fan-rep.patch
@@ -0,0 +1,245 @@
+From af3c40a35e200e59c7e5bfbc786efcceb4ec035a Mon Sep 17 00:00:00 2001
+From: Vishnu Sankar <vishnuocv@gmail.com>
+Date: Thu, 14 Dec 2023 22:47:02 +0900
+Subject: [PATCH] platform/x86: thinkpad_acpi: fix for incorrect fan reporting
+ on some ThinkPad systems
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+[ Upstream commit 66e92e23a72761f5b53f970aeb1badc5fd92fc74 ]
+
+Some ThinkPad systems ECFW use non-standard addresses for fan control
+and reporting. This patch adds support for such ECFW so that it can report
+the correct fan values.
+Tested on Thinkpads L13 Yoga Gen 2 and X13 Yoga Gen 2.
+
+Suggested-by: Mark Pearson <mpearson-lenovo@squebb.ca>
+Signed-off-by: Vishnu Sankar <vishnuocv@gmail.com>
+Reviewed-by: Hans de Goede <hdegoede@redhat.com>
+Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
+Link: https://lore.kernel.org/r/20231214134702.166464-1-vishnuocv@gmail.com
+Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/platform/x86/thinkpad_acpi.c | 98 ++++++++++++++++++++++++----
+ 1 file changed, 85 insertions(+), 13 deletions(-)
+
+--- a/drivers/platform/x86/thinkpad_acpi.c
++++ b/drivers/platform/x86/thinkpad_acpi.c
+@@ -8149,8 +8149,19 @@ static struct ibm_struct volume_driver_d
+  * 	TPACPI_FAN_WR_TPEC is also available and should be used to
+  * 	command the fan.  The X31/X40/X41 seems to have 8 fan levels,
+  * 	but the ACPI tables just mention level 7.
++ *
++ * TPACPI_FAN_RD_TPEC_NS:
++ *	This mode is used for a few ThinkPads (L13 Yoga Gen2, X13 Yoga Gen2 etc.)
++ *	that are using non-standard EC locations for reporting fan speeds.
++ *	Currently these platforms only provide fan rpm reporting.
++ *
+  */
+ 
++#define FAN_RPM_CAL_CONST 491520	/* FAN RPM calculation offset for some non-standard ECFW */
++
++#define FAN_NS_CTRL_STATUS	BIT(2)		/* Bit which determines control is enabled or not */
++#define FAN_NS_CTRL		BIT(4)		/* Bit which determines control is by host or EC */
++
+ enum {					/* Fan control constants */
+ 	fan_status_offset = 0x2f,	/* EC register 0x2f */
+ 	fan_rpm_offset = 0x84,		/* EC register 0x84: LSB, 0x85 MSB (RPM)
+@@ -8158,6 +8169,11 @@ enum {					/* Fan control constants */
+ 	fan_select_offset = 0x31,	/* EC register 0x31 (Firmware 7M)
+ 					   bit 0 selects which fan is active */
+ 
++	fan_status_offset_ns = 0x93,	/* Special status/control offset for non-standard EC Fan1 */
++	fan2_status_offset_ns = 0x96,	/* Special status/control offset for non-standard EC Fan2 */
++	fan_rpm_status_ns = 0x95,	/* Special offset for Fan1 RPM status for non-standard EC */
++	fan2_rpm_status_ns = 0x98,	/* Special offset for Fan2 RPM status for non-standard EC */
++
+ 	TP_EC_FAN_FULLSPEED = 0x40,	/* EC fan mode: full speed */
+ 	TP_EC_FAN_AUTO	    = 0x80,	/* EC fan mode: auto fan control */
+ 
+@@ -8168,6 +8184,7 @@ enum fan_status_access_mode {
+ 	TPACPI_FAN_NONE = 0,		/* No fan status or control */
+ 	TPACPI_FAN_RD_ACPI_GFAN,	/* Use ACPI GFAN */
+ 	TPACPI_FAN_RD_TPEC,		/* Use ACPI EC regs 0x2f, 0x84-0x85 */
++	TPACPI_FAN_RD_TPEC_NS,		/* Use non-standard ACPI EC regs (eg: L13 Yoga gen2 etc.) */
+ };
+ 
+ enum fan_control_access_mode {
+@@ -8195,6 +8212,8 @@ static u8 fan_control_desired_level;
+ static u8 fan_control_resume_level;
+ static int fan_watchdog_maxinterval;
+ 
++static bool fan_with_ns_addr;
++
+ static struct mutex fan_mutex;
+ 
+ static void fan_watchdog_fire(struct work_struct *ignored);
+@@ -8325,6 +8344,15 @@ static int fan_get_status(u8 *status)
+ 		}
+ 
+ 		break;
++	case TPACPI_FAN_RD_TPEC_NS:
++		/* Default mode is AUTO which means controlled by EC */
++		if (!acpi_ec_read(fan_status_offset_ns, &s))
++			return -EIO;
++
++		if (status)
++			*status = s;
++
++		break;
+ 
+ 	default:
+ 		return -ENXIO;
+@@ -8341,7 +8369,8 @@ static int fan_get_status_safe(u8 *statu
+ 	if (mutex_lock_killable(&fan_mutex))
+ 		return -ERESTARTSYS;
+ 	rc = fan_get_status(&s);
+-	if (!rc)
++	/* NS EC doesn't have register with level settings */
++	if (!rc && !fan_with_ns_addr)
+ 		fan_update_desired_level(s);
+ 	mutex_unlock(&fan_mutex);
+ 
+@@ -8368,7 +8397,13 @@ static int fan_get_speed(unsigned int *s
+ 
+ 		if (likely(speed))
+ 			*speed = (hi << 8) | lo;
++		break;
++	case TPACPI_FAN_RD_TPEC_NS:
++		if (!acpi_ec_read(fan_rpm_status_ns, &lo))
++			return -EIO;
+ 
++		if (speed)
++			*speed = lo ? FAN_RPM_CAL_CONST / lo : 0;
+ 		break;
+ 
+ 	default:
+@@ -8380,7 +8415,7 @@ static int fan_get_speed(unsigned int *s
+ 
+ static int fan2_get_speed(unsigned int *speed)
+ {
+-	u8 hi, lo;
++	u8 hi, lo, status;
+ 	bool rc;
+ 
+ 	switch (fan_status_access_mode) {
+@@ -8396,7 +8431,21 @@ static int fan2_get_speed(unsigned int *
+ 
+ 		if (likely(speed))
+ 			*speed = (hi << 8) | lo;
++		break;
+ 
++	case TPACPI_FAN_RD_TPEC_NS:
++		rc = !acpi_ec_read(fan2_status_offset_ns, &status);
++		if (rc)
++			return -EIO;
++		if (!(status & FAN_NS_CTRL_STATUS)) {
++			pr_info("secondary fan control not supported\n");
++			return -EIO;
++		}
++		rc = !acpi_ec_read(fan2_rpm_status_ns, &lo);
++		if (rc)
++			return -EIO;
++		if (speed)
++			*speed = lo ? FAN_RPM_CAL_CONST / lo : 0;
+ 		break;
+ 
+ 	default:
+@@ -8899,6 +8948,7 @@ static const struct attribute_group fan_
+ #define TPACPI_FAN_2FAN		0x0002		/* EC 0x31 bit 0 selects fan2 */
+ #define TPACPI_FAN_2CTL		0x0004		/* selects fan2 control */
+ #define TPACPI_FAN_NOFAN	0x0008		/* no fan available */
++#define TPACPI_FAN_NS		0x0010		/* For EC with non-Standard register addresses */
+ 
+ static const struct tpacpi_quirk fan_quirk_table[] __initconst = {
+ 	TPACPI_QEC_IBM('1', 'Y', TPACPI_FAN_Q1),
+@@ -8917,6 +8967,8 @@ static const struct tpacpi_quirk fan_qui
+ 	TPACPI_Q_LNV3('N', '2', 'O', TPACPI_FAN_2CTL),	/* P1 / X1 Extreme (2nd gen) */
+ 	TPACPI_Q_LNV3('N', '3', '0', TPACPI_FAN_2CTL),	/* P15 (1st gen) / P15v (1st gen) */
+ 	TPACPI_Q_LNV3('N', '3', '7', TPACPI_FAN_2CTL),  /* T15g (2nd gen) */
++	TPACPI_Q_LNV3('R', '1', 'F', TPACPI_FAN_NS),	/* L13 Yoga Gen 2 */
++	TPACPI_Q_LNV3('N', '2', 'U', TPACPI_FAN_NS),	/* X13 Yoga Gen 2*/
+ 	TPACPI_Q_LNV3('N', '1', 'O', TPACPI_FAN_NOFAN),	/* X1 Tablet (2nd gen) */
+ };
+ 
+@@ -8951,18 +9003,27 @@ static int __init fan_init(struct ibm_in
+ 		return -ENODEV;
+ 	}
+ 
++	if (quirks & TPACPI_FAN_NS) {
++		pr_info("ECFW with non-standard fan reg control found\n");
++		fan_with_ns_addr = 1;
++		/* Fan ctrl support from host is undefined for now */
++		tp_features.fan_ctrl_status_undef = 1;
++	}
++
+ 	if (gfan_handle) {
+ 		/* 570, 600e/x, 770e, 770x */
+ 		fan_status_access_mode = TPACPI_FAN_RD_ACPI_GFAN;
+ 	} else {
+ 		/* all other ThinkPads: note that even old-style
+ 		 * ThinkPad ECs supports the fan control register */
+-		if (likely(acpi_ec_read(fan_status_offset,
+-					&fan_control_initial_status))) {
++		if (fan_with_ns_addr ||
++		    likely(acpi_ec_read(fan_status_offset, &fan_control_initial_status))) {
+ 			int res;
+ 			unsigned int speed;
+ 
+-			fan_status_access_mode = TPACPI_FAN_RD_TPEC;
++			fan_status_access_mode = fan_with_ns_addr ?
++				TPACPI_FAN_RD_TPEC_NS : TPACPI_FAN_RD_TPEC;
++
+ 			if (quirks & TPACPI_FAN_Q1)
+ 				fan_quirk1_setup();
+ 			/* Try and probe the 2nd fan */
+@@ -8971,7 +9032,8 @@ static int __init fan_init(struct ibm_in
+ 			if (res >= 0 && speed != FAN_NOT_PRESENT) {
+ 				/* It responded - so let's assume it's there */
+ 				tp_features.second_fan = 1;
+-				tp_features.second_fan_ctl = 1;
++				/* fan control not currently available for ns ECFW */
++				tp_features.second_fan_ctl = !fan_with_ns_addr;
+ 				pr_info("secondary fan control detected & enabled\n");
+ 			} else {
+ 				/* Fan not auto-detected */
+@@ -9146,6 +9208,7 @@ static int fan_read(struct seq_file *m)
+ 			       str_enabled_disabled(status), status);
+ 		break;
+ 
++	case TPACPI_FAN_RD_TPEC_NS:
+ 	case TPACPI_FAN_RD_TPEC:
+ 		/* all except 570, 600e/x, 770e, 770x */
+ 		rc = fan_get_status_safe(&status);
+@@ -9160,13 +9223,22 @@ static int fan_read(struct seq_file *m)
+ 
+ 		seq_printf(m, "speed:\t\t%d\n", speed);
+ 
+-		if (status & TP_EC_FAN_FULLSPEED)
+-			/* Disengaged mode takes precedence */
+-			seq_printf(m, "level:\t\tdisengaged\n");
+-		else if (status & TP_EC_FAN_AUTO)
+-			seq_printf(m, "level:\t\tauto\n");
+-		else
+-			seq_printf(m, "level:\t\t%d\n", status);
++		if (fan_status_access_mode == TPACPI_FAN_RD_TPEC_NS) {
++			/*
++			 * No full speed bit in NS EC
++			 * EC Auto mode is set by default.
++			 * No other levels settings available
++			 */
++			seq_printf(m, "level:\t\t%s\n", status & FAN_NS_CTRL ? "unknown" : "auto");
++		} else {
++			if (status & TP_EC_FAN_FULLSPEED)
++				/* Disengaged mode takes precedence */
++				seq_printf(m, "level:\t\tdisengaged\n");
++			else if (status & TP_EC_FAN_AUTO)
++				seq_printf(m, "level:\t\tauto\n");
++			else
++				seq_printf(m, "level:\t\t%d\n", status);
++		}
+ 		break;
+ 
+ 	case TPACPI_FAN_NONE:
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-069-ASoC-Intel-bytcr_rt5640-Add-quirk-for-the-Medion-Lif.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-069-ASoC-Intel-bytcr_rt5640-Add-quirk-for-the-Medion-Lif.patch
new file mode 100644
index 0000000000..40b3dd0dce
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-069-ASoC-Intel-bytcr_rt5640-Add-quirk-for-the-Medion-Lif.patch
@@ -0,0 +1,42 @@
+From 71ee502a80ce35e2a2af00199a04837fa917eb55 Mon Sep 17 00:00:00 2001
+From: Hans de Goede <hdegoede@redhat.com>
+Date: Sun, 17 Dec 2023 22:32:20 +0100
+Subject: [PATCH] ASoC: Intel: bytcr_rt5640: Add quirk for the Medion Lifetab
+ S10346
+
+[ Upstream commit 99c7bb44f5749373bc01b73af02b50b69bcbf43d ]
+
+Add a quirk for the Medion Lifetab S10346, this BYTCR tablet has no CHAN
+package in its ACPI tables and uses SSP0-AIF1 rather then SSP0-AIF2 which
+is the default for BYTCR devices.
+
+Signed-off-by: Hans de Goede <hdegoede@redhat.com>
+Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
+Link: https://msgid.link/r/20231217213221.49424-1-hdegoede@redhat.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/intel/boards/bytcr_rt5640.c | 12 ++++++++++++
+ 1 file changed, 12 insertions(+)
+
+--- a/sound/soc/intel/boards/bytcr_rt5640.c
++++ b/sound/soc/intel/boards/bytcr_rt5640.c
+@@ -884,6 +884,18 @@ static const struct dmi_system_id byt_rt
+ 					BYT_RT5640_SSP0_AIF1 |
+ 					BYT_RT5640_MCLK_EN),
+ 	},
++	{
++		/* Medion Lifetab S10346 */
++		.matches = {
++			DMI_MATCH(DMI_BOARD_VENDOR, "AMI Corporation"),
++			DMI_MATCH(DMI_BOARD_NAME, "Aptio CRB"),
++			/* Above strings are much too generic, also match on BIOS date */
++			DMI_MATCH(DMI_BIOS_DATE, "10/22/2015"),
++		},
++		.driver_data = (void *)(BYTCR_INPUT_DEFAULTS |
++					BYT_RT5640_SSP0_AIF1 |
++					BYT_RT5640_MCLK_EN),
++	},
+ 	{	/* Mele PCG03 Mini PC */
+ 		.matches = {
+ 			DMI_EXACT_MATCH(DMI_BOARD_VENDOR, "Mini PC"),
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-070-ASoC-Intel-bytcr_rt5640-Add-new-swapped-speakers-qui.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-070-ASoC-Intel-bytcr_rt5640-Add-new-swapped-speakers-qui.patch
new file mode 100644
index 0000000000..8de3d85688
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-070-ASoC-Intel-bytcr_rt5640-Add-new-swapped-speakers-qui.patch
@@ -0,0 +1,97 @@
+From 9809d56658d06c9ac3c5018adc6abcc6b7e6279d Mon Sep 17 00:00:00 2001
+From: Hans de Goede <hdegoede@redhat.com>
+Date: Sun, 17 Dec 2023 22:32:21 +0100
+Subject: [PATCH] ASoC: Intel: bytcr_rt5640: Add new swapped-speakers quirk
+
+[ Upstream commit b1b6131bca35a55a69fadc39d51577968fa2ee97 ]
+
+Some BYTCR x86 tablets with a rt5640 codec have the left and right channels
+of their speakers swapped.
+
+Add a new BYT_RT5640_SWAPPED_SPEAKERS quirk for this which sets
+cfg-spk:swapped in the components string to let userspace know
+about the swapping so that the UCM profile can configure the mixer
+to correct this.
+
+Enable this new quirk on the Medion Lifetab S10346 which has its
+speakers swapped.
+
+Signed-off-by: Hans de Goede <hdegoede@redhat.com>
+Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
+Link: https://msgid.link/r/20231217213221.49424-2-hdegoede@redhat.com
+Signed-off-by: Mark Brown <broonie@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/soc/intel/boards/bytcr_rt5640.c | 19 +++++++++++++------
+ 1 file changed, 13 insertions(+), 6 deletions(-)
+
+--- a/sound/soc/intel/boards/bytcr_rt5640.c
++++ b/sound/soc/intel/boards/bytcr_rt5640.c
+@@ -83,6 +83,7 @@ enum {
+ #define BYT_RT5640_HSMIC2_ON_IN1	BIT(27)
+ #define BYT_RT5640_JD_HP_ELITEP_1000G2	BIT(28)
+ #define BYT_RT5640_USE_AMCR0F28		BIT(29)
++#define BYT_RT5640_SWAPPED_SPEAKERS	BIT(30)
+ 
+ #define BYTCR_INPUT_DEFAULTS				\
+ 	(BYT_RT5640_IN3_MAP |				\
+@@ -157,6 +158,8 @@ static void log_quirks(struct device *de
+ 		dev_info(dev, "quirk MONO_SPEAKER enabled\n");
+ 	if (byt_rt5640_quirk & BYT_RT5640_NO_SPEAKERS)
+ 		dev_info(dev, "quirk NO_SPEAKERS enabled\n");
++	if (byt_rt5640_quirk & BYT_RT5640_SWAPPED_SPEAKERS)
++		dev_info(dev, "quirk SWAPPED_SPEAKERS enabled\n");
+ 	if (byt_rt5640_quirk & BYT_RT5640_LINEOUT)
+ 		dev_info(dev, "quirk LINEOUT enabled\n");
+ 	if (byt_rt5640_quirk & BYT_RT5640_LINEOUT_AS_HP2)
+@@ -893,6 +896,7 @@ static const struct dmi_system_id byt_rt
+ 			DMI_MATCH(DMI_BIOS_DATE, "10/22/2015"),
+ 		},
+ 		.driver_data = (void *)(BYTCR_INPUT_DEFAULTS |
++					BYT_RT5640_SWAPPED_SPEAKERS |
+ 					BYT_RT5640_SSP0_AIF1 |
+ 					BYT_RT5640_MCLK_EN),
+ 	},
+@@ -1621,11 +1625,11 @@ static int snd_byt_rt5640_mc_probe(struc
+ 	const char *platform_name;
+ 	struct acpi_device *adev;
+ 	struct device *codec_dev;
++	const char *cfg_spk;
+ 	bool sof_parent;
+ 	int ret_val = 0;
+ 	int dai_index = 0;
+-	int i, cfg_spk;
+-	int aif;
++	int i, aif;
+ 
+ 	is_bytcr = false;
+ 	priv = devm_kzalloc(dev, sizeof(*priv), GFP_KERNEL);
+@@ -1785,13 +1789,16 @@ static int snd_byt_rt5640_mc_probe(struc
+ 	}
+ 
+ 	if (byt_rt5640_quirk & BYT_RT5640_NO_SPEAKERS) {
+-		cfg_spk = 0;
++		cfg_spk = "0";
+ 		spk_type = "none";
+ 	} else if (byt_rt5640_quirk & BYT_RT5640_MONO_SPEAKER) {
+-		cfg_spk = 1;
++		cfg_spk = "1";
+ 		spk_type = "mono";
++	} else if (byt_rt5640_quirk & BYT_RT5640_SWAPPED_SPEAKERS) {
++		cfg_spk = "swapped";
++		spk_type = "swapped";
+ 	} else {
+-		cfg_spk = 2;
++		cfg_spk = "2";
+ 		spk_type = "stereo";
+ 	}
+ 
+@@ -1806,7 +1813,7 @@ static int snd_byt_rt5640_mc_probe(struc
+ 		headset2_string = " cfg-hs2:in1";
+ 
+ 	snprintf(byt_rt5640_components, sizeof(byt_rt5640_components),
+-		 "cfg-spk:%d cfg-mic:%s aif:%d%s%s", cfg_spk,
++		 "cfg-spk:%s cfg-mic:%s aif:%d%s%s", cfg_spk,
+ 		 map_name[BYT_RT5640_MAP(byt_rt5640_quirk)], aif,
+ 		 lineout_string, headset2_string);
+ 	byt_rt5640_card.components = byt_rt5640_components;
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-071-ALSA-hda-realtek-Add-quirks-for-ASUS-Zenbook-2022-Mo.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-071-ALSA-hda-realtek-Add-quirks-for-ASUS-Zenbook-2022-Mo.patch
new file mode 100644
index 0000000000..6dec3e1d42
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-071-ALSA-hda-realtek-Add-quirks-for-ASUS-Zenbook-2022-Mo.patch
@@ -0,0 +1,44 @@
+From daaf7a142f2b8e4ef5a6e71025f2152fb7741584 Mon Sep 17 00:00:00 2001
+From: Stefan Binding <sbinding@opensource.cirrus.com>
+Date: Mon, 18 Dec 2023 15:12:19 +0000
+Subject: [PATCH] ALSA: hda/realtek: Add quirks for ASUS Zenbook 2022 Models
+
+[ Upstream commit 51d976079976c800ef19ed1b542602fcf63f0edb ]
+
+These models use 2xCS35L41amps with HDA using SPI and I2C.
+Models use internal and external boost.
+All models require DSD support to be added inside
+cs35l41_hda_property.c
+
+Signed-off-by: Stefan Binding <sbinding@opensource.cirrus.com>
+Link: https://lore.kernel.org/r/20231218151221.388745-6-sbinding@opensource.cirrus.com
+Signed-off-by: Takashi Iwai <tiwai@suse.de>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ sound/pci/hda/patch_realtek.c | 5 ++++-
+ 1 file changed, 4 insertions(+), 1 deletion(-)
+
+--- a/sound/pci/hda/patch_realtek.c
++++ b/sound/pci/hda/patch_realtek.c
+@@ -9779,17 +9779,20 @@ static const struct snd_pci_quirk alc269
+ 	SND_PCI_QUIRK(0x1043, 0x1d1f, "ASUS ROG Strix G17 2023 (G713PV)", ALC287_FIXUP_CS35L41_I2C_2),
+ 	SND_PCI_QUIRK(0x1043, 0x1d42, "ASUS Zephyrus G14 2022", ALC289_FIXUP_ASUS_GA401),
+ 	SND_PCI_QUIRK(0x1043, 0x1d4e, "ASUS TM420", ALC256_FIXUP_ASUS_HPE),
++	SND_PCI_QUIRK(0x1043, 0x1da2, "ASUS UP6502ZA/ZD", ALC245_FIXUP_CS35L41_SPI_2),
+ 	SND_PCI_QUIRK(0x1043, 0x1e02, "ASUS UX3402ZA", ALC245_FIXUP_CS35L41_SPI_2),
+ 	SND_PCI_QUIRK(0x1043, 0x16a3, "ASUS UX3402VA", ALC245_FIXUP_CS35L41_SPI_2),
+ 	SND_PCI_QUIRK(0x1043, 0x1f62, "ASUS UX7602ZM", ALC245_FIXUP_CS35L41_SPI_2),
+ 	SND_PCI_QUIRK(0x1043, 0x1e11, "ASUS Zephyrus G15", ALC289_FIXUP_ASUS_GA502),
+-	SND_PCI_QUIRK(0x1043, 0x1e12, "ASUS UM3402", ALC287_FIXUP_CS35L41_I2C_2),
++	SND_PCI_QUIRK(0x1043, 0x1e12, "ASUS UM6702RA/RC", ALC287_FIXUP_CS35L41_I2C_2),
+ 	SND_PCI_QUIRK(0x1043, 0x1e51, "ASUS Zephyrus M15", ALC294_FIXUP_ASUS_GU502_PINS),
+ 	SND_PCI_QUIRK(0x1043, 0x1e5e, "ASUS ROG Strix G513", ALC294_FIXUP_ASUS_G513_PINS),
+ 	SND_PCI_QUIRK(0x1043, 0x1e8e, "ASUS Zephyrus G15", ALC289_FIXUP_ASUS_GA401),
++	SND_PCI_QUIRK(0x1043, 0x1ee2, "ASUS UM3402", ALC287_FIXUP_CS35L41_I2C_2),
+ 	SND_PCI_QUIRK(0x1043, 0x1c52, "ASUS Zephyrus G15 2022", ALC289_FIXUP_ASUS_GA401),
+ 	SND_PCI_QUIRK(0x1043, 0x1f11, "ASUS Zephyrus G14", ALC289_FIXUP_ASUS_GA401),
+ 	SND_PCI_QUIRK(0x1043, 0x1f12, "ASUS UM5302", ALC287_FIXUP_CS35L41_I2C_2),
++	SND_PCI_QUIRK(0x1043, 0x1f62, "ASUS UX7602ZM", ALC245_FIXUP_CS35L41_SPI_2),
+ 	SND_PCI_QUIRK(0x1043, 0x1f92, "ASUS ROG Flow X16", ALC289_FIXUP_ASUS_GA401),
+ 	SND_PCI_QUIRK(0x1043, 0x3030, "ASUS ZN270IE", ALC256_FIXUP_ASUS_AIO_GPIO2),
+ 	SND_PCI_QUIRK(0x1043, 0x3a20, "ASUS G614JZR", ALC245_FIXUP_CS35L41_SPI_2),
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-072-dm-audit-fix-Kconfig-so-DM_AUDIT-depends-on-BLK_DEV_.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-072-dm-audit-fix-Kconfig-so-DM_AUDIT-depends-on-BLK_DEV_.patch
new file mode 100644
index 0000000000..38ac68cd77
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-072-dm-audit-fix-Kconfig-so-DM_AUDIT-depends-on-BLK_DEV_.patch
@@ -0,0 +1,23 @@
+From 3aff42af15a40ccee900cd032bdb80b7725537fc Mon Sep 17 00:00:00 2001
+From: Mike Snitzer <snitzer@kernel.org>
+Date: Wed, 13 Dec 2023 14:46:19 -0500
+Subject: [PATCH] dm audit: fix Kconfig so DM_AUDIT depends on BLK_DEV_DM
+
+[ Upstream commit 6849302fdff126997765d16df355b73231f130d4 ]
+
+Signed-off-by: Mike Snitzer <snitzer@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/md/Kconfig | 1 +
+ 1 file changed, 1 insertion(+)
+
+--- a/drivers/md/Kconfig
++++ b/drivers/md/Kconfig
+@@ -650,6 +650,7 @@ config DM_ZONED
+ 
+ config DM_AUDIT
+ 	bool "DM audit events"
++	depends on BLK_DEV_DM
+ 	depends on AUDIT
+ 	help
+ 	  Generate audit events for device-mapper.
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-073-HID-nintendo-Prevent-divide-by-zero-on-code.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-073-HID-nintendo-Prevent-divide-by-zero-on-code.patch
new file mode 100644
index 0000000000..df6a3547af
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-073-HID-nintendo-Prevent-divide-by-zero-on-code.patch
@@ -0,0 +1,95 @@
+From 501a174716324fc82b83a30fefb1c7ebc02ec56d Mon Sep 17 00:00:00 2001
+From: "Guilherme G. Piccoli" <gpiccoli@igalia.com>
+Date: Tue, 5 Dec 2023 18:15:51 -0300
+Subject: [PATCH] HID: nintendo: Prevent divide-by-zero on code
+
+[ Upstream commit 6eb04ca8c52e3f8c8ea7102ade81d642eee87f4a ]
+
+It was reported [0] that adding a generic joycon to the system caused
+a kernel crash on Steam Deck, with the below panic spew:
+
+divide error: 0000 [#1] PREEMPT SMP NOPTI
+[...]
+Hardware name: Valve Jupiter/Jupiter, BIOS F7A0119 10/24/2023
+RIP: 0010:nintendo_hid_event+0x340/0xcc1 [hid_nintendo]
+[...]
+Call Trace:
+ [...]
+ ? exc_divide_error+0x38/0x50
+ ? nintendo_hid_event+0x340/0xcc1 [hid_nintendo]
+ ? asm_exc_divide_error+0x1a/0x20
+ ? nintendo_hid_event+0x307/0xcc1 [hid_nintendo]
+ hid_input_report+0x143/0x160
+ hidp_session_run+0x1ce/0x700 [hidp]
+
+Since it's a divide-by-0 error, by tracking the code for potential
+denominator issues, we've spotted 2 places in which this could happen;
+so let's guard against the possibility and log in the kernel if the
+condition happens. This is specially useful since some data that
+fills some denominators are read from the joycon HW in some cases,
+increasing the potential for flaws.
+
+[0] https://github.com/ValveSoftware/SteamOS/issues/1070
+
+Signed-off-by: Guilherme G. Piccoli <gpiccoli@igalia.com>
+Tested-by: Sam Lantinga <slouken@libsdl.org>
+Signed-off-by: Jiri Kosina <jkosina@suse.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/hid/hid-nintendo.c | 27 ++++++++++++++++++++-------
+ 1 file changed, 20 insertions(+), 7 deletions(-)
+
+--- a/drivers/hid/hid-nintendo.c
++++ b/drivers/hid/hid-nintendo.c
+@@ -859,14 +859,27 @@ static int joycon_request_calibration(st
+  */
+ static void joycon_calc_imu_cal_divisors(struct joycon_ctlr *ctlr)
+ {
+-	int i;
++	int i, divz = 0;
+ 
+ 	for (i = 0; i < 3; i++) {
+ 		ctlr->imu_cal_accel_divisor[i] = ctlr->accel_cal.scale[i] -
+ 						ctlr->accel_cal.offset[i];
+ 		ctlr->imu_cal_gyro_divisor[i] = ctlr->gyro_cal.scale[i] -
+ 						ctlr->gyro_cal.offset[i];
++
++		if (ctlr->imu_cal_accel_divisor[i] == 0) {
++			ctlr->imu_cal_accel_divisor[i] = 1;
++			divz++;
++		}
++
++		if (ctlr->imu_cal_gyro_divisor[i] == 0) {
++			ctlr->imu_cal_gyro_divisor[i] = 1;
++			divz++;
++		}
+ 	}
++
++	if (divz)
++		hid_warn(ctlr->hdev, "inaccurate IMU divisors (%d)\n", divz);
+ }
+ 
+ static const s16 DFLT_ACCEL_OFFSET /*= 0*/;
+@@ -1095,16 +1108,16 @@ static void joycon_parse_imu_report(stru
+ 		    JC_IMU_SAMPLES_PER_DELTA_AVG) {
+ 			ctlr->imu_avg_delta_ms = ctlr->imu_delta_samples_sum /
+ 						 ctlr->imu_delta_samples_count;
+-			/* don't ever want divide by zero shenanigans */
+-			if (ctlr->imu_avg_delta_ms == 0) {
+-				ctlr->imu_avg_delta_ms = 1;
+-				hid_warn(ctlr->hdev,
+-					 "calculated avg imu delta of 0\n");
+-			}
+ 			ctlr->imu_delta_samples_count = 0;
+ 			ctlr->imu_delta_samples_sum = 0;
+ 		}
+ 
++		/* don't ever want divide by zero shenanigans */
++		if (ctlr->imu_avg_delta_ms == 0) {
++			ctlr->imu_avg_delta_ms = 1;
++			hid_warn(ctlr->hdev, "calculated avg imu delta of 0\n");
++		}
++
+ 		/* useful for debugging IMU sample rate */
+ 		hid_dbg(ctlr->hdev,
+ 			"imu_report: ms=%u last_ms=%u delta=%u avg_delta=%u\n",
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-074-smb-client-fix-potential-OOB-in-smb2_dump_detail.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-074-smb-client-fix-potential-OOB-in-smb2_dump_detail.patch
new file mode 100644
index 0000000000..2373d330d3
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-074-smb-client-fix-potential-OOB-in-smb2_dump_detail.patch
@@ -0,0 +1,84 @@
+From 7aeb4bb3f3155eafb712a46fb20a1a63f3e9f970 Mon Sep 17 00:00:00 2001
+From: Paulo Alcantara <pc@manguebit.com>
+Date: Tue, 19 Dec 2023 13:10:31 -0300
+Subject: [PATCH] smb: client: fix potential OOB in smb2_dump_detail()
+
+[ Upstream commit 567320c46a60a3c39b69aa1df802d753817a3f86 ]
+
+Validate SMB message with ->check_message() before calling
+->calc_smb_size().
+
+This fixes CVE-2023-6610.
+
+Reported-by: j51569436@gmail.com
+Closes: https://bugzilla.kernel.org/show_bug.cgi?id=218219
+Cc; stable@vger.kernel.org
+Signed-off-by: Paulo Alcantara <pc@manguebit.com>
+Signed-off-by: Steve French <stfrench@microsoft.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ fs/smb/client/smb2misc.c | 30 +++++++++++++++---------------
+ fs/smb/client/smb2ops.c  |  6 ++++--
+ 2 files changed, 19 insertions(+), 17 deletions(-)
+
+--- a/fs/smb/client/smb2misc.c
++++ b/fs/smb/client/smb2misc.c
+@@ -173,6 +173,21 @@ smb2_check_message(char *buf, unsigned i
+ 	}
+ 
+ 	mid = le64_to_cpu(shdr->MessageId);
++	if (check_smb2_hdr(shdr, mid))
++		return 1;
++
++	if (shdr->StructureSize != SMB2_HEADER_STRUCTURE_SIZE) {
++		cifs_dbg(VFS, "Invalid structure size %u\n",
++			 le16_to_cpu(shdr->StructureSize));
++		return 1;
++	}
++
++	command = le16_to_cpu(shdr->Command);
++	if (command >= NUMBER_OF_SMB2_COMMANDS) {
++		cifs_dbg(VFS, "Invalid SMB2 command %d\n", command);
++		return 1;
++	}
++
+ 	if (len < pdu_size) {
+ 		if ((len >= hdr_size)
+ 		    && (shdr->Status != 0)) {
+@@ -193,21 +208,6 @@ smb2_check_message(char *buf, unsigned i
+ 		return 1;
+ 	}
+ 
+-	if (check_smb2_hdr(shdr, mid))
+-		return 1;
+-
+-	if (shdr->StructureSize != SMB2_HEADER_STRUCTURE_SIZE) {
+-		cifs_dbg(VFS, "Invalid structure size %u\n",
+-			 le16_to_cpu(shdr->StructureSize));
+-		return 1;
+-	}
+-
+-	command = le16_to_cpu(shdr->Command);
+-	if (command >= NUMBER_OF_SMB2_COMMANDS) {
+-		cifs_dbg(VFS, "Invalid SMB2 command %d\n", command);
+-		return 1;
+-	}
+-
+ 	if (smb2_rsp_struct_sizes[command] != pdu->StructureSize2) {
+ 		if (command != SMB2_OPLOCK_BREAK_HE && (shdr->Status == 0 ||
+ 		    pdu->StructureSize2 != SMB2_ERROR_STRUCTURE_SIZE2_LE)) {
+--- a/fs/smb/client/smb2ops.c
++++ b/fs/smb/client/smb2ops.c
+@@ -398,8 +398,10 @@ smb2_dump_detail(void *buf, struct TCP_S
+ 	cifs_server_dbg(VFS, "Cmd: %d Err: 0x%x Flags: 0x%x Mid: %llu Pid: %d\n",
+ 		 shdr->Command, shdr->Status, shdr->Flags, shdr->MessageId,
+ 		 shdr->Id.SyncId.ProcessId);
+-	cifs_server_dbg(VFS, "smb buf %p len %u\n", buf,
+-		 server->ops->calc_smb_size(buf));
++	if (!server->ops->check_message(buf, server->total_read, server)) {
++		cifs_server_dbg(VFS, "smb buf %p len %u\n", buf,
++				server->ops->calc_smb_size(buf));
++	}
+ #endif
+ }
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-075-i2c-rk3x-fix-potential-spinlock-recursion-on-poll.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-075-i2c-rk3x-fix-potential-spinlock-recursion-on-poll.patch
new file mode 100644
index 0000000000..985b36f3ff
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-075-i2c-rk3x-fix-potential-spinlock-recursion-on-poll.patch
@@ -0,0 +1,77 @@
+From 880083ed8354e9aa173743943f126ffc5ed637e1 Mon Sep 17 00:00:00 2001
+From: Jensen Huang <jensenhuang@friendlyarm.com>
+Date: Thu, 7 Dec 2023 16:21:59 +0800
+Subject: [PATCH] i2c: rk3x: fix potential spinlock recursion on poll
+
+[ Upstream commit 19cde9c92b8d3b7ee555d0da3bcb0232d3a784f4 ]
+
+Possible deadlock scenario (on reboot):
+rk3x_i2c_xfer_common(polling)
+    -> rk3x_i2c_wait_xfer_poll()
+        -> rk3x_i2c_irq(0, i2c);
+            --> spin_lock(&i2c->lock);
+            ...
+        <rk3x i2c interrupt>
+        -> rk3x_i2c_irq(0, i2c);
+            --> spin_lock(&i2c->lock); (deadlock here)
+
+Store the IRQ number and disable/enable it around the polling transfer.
+This patch has been tested on NanoPC-T4.
+
+Signed-off-by: Jensen Huang <jensenhuang@friendlyarm.com>
+Reviewed-by: Heiko Stuebner <heiko@sntech.de>
+Reviewed-by: Andi Shyti <andi.shyti@kernel.org>
+Signed-off-by: Wolfram Sang <wsa@kernel.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/i2c/busses/i2c-rk3x.c | 13 +++++++++++--
+ 1 file changed, 11 insertions(+), 2 deletions(-)
+
+--- a/drivers/i2c/busses/i2c-rk3x.c
++++ b/drivers/i2c/busses/i2c-rk3x.c
+@@ -178,6 +178,7 @@ struct rk3x_i2c_soc_data {
+  * @clk: function clk for rk3399 or function & Bus clks for others
+  * @pclk: Bus clk for rk3399
+  * @clk_rate_nb: i2c clk rate change notify
++ * @irq: irq number
+  * @t: I2C known timing information
+  * @lock: spinlock for the i2c bus
+  * @wait: the waitqueue to wait for i2c transfer
+@@ -200,6 +201,7 @@ struct rk3x_i2c {
+ 	struct clk *clk;
+ 	struct clk *pclk;
+ 	struct notifier_block clk_rate_nb;
++	int irq;
+ 
+ 	/* Settings */
+ 	struct i2c_timings t;
+@@ -1087,13 +1089,18 @@ static int rk3x_i2c_xfer_common(struct i
+ 
+ 		spin_unlock_irqrestore(&i2c->lock, flags);
+ 
+-		rk3x_i2c_start(i2c);
+-
+ 		if (!polling) {
++			rk3x_i2c_start(i2c);
++
+ 			timeout = wait_event_timeout(i2c->wait, !i2c->busy,
+ 						     msecs_to_jiffies(WAIT_TIMEOUT));
+ 		} else {
++			disable_irq(i2c->irq);
++			rk3x_i2c_start(i2c);
++
+ 			timeout = rk3x_i2c_wait_xfer_poll(i2c);
++
++			enable_irq(i2c->irq);
+ 		}
+ 
+ 		spin_lock_irqsave(&i2c->lock, flags);
+@@ -1310,6 +1317,8 @@ static int rk3x_i2c_probe(struct platfor
+ 		return ret;
+ 	}
+ 
++	i2c->irq = irq;
++
+ 	platform_set_drvdata(pdev, i2c);
+ 
+ 	if (i2c->soc_data->calc_timings == rk3x_i2c_v0_calc_timings) {
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-076-drm-amd-display-get-dprefclk-ss-info-from-integratio.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-076-drm-amd-display-get-dprefclk-ss-info-from-integratio.patch
new file mode 100644
index 0000000000..c5dc90af5d
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-076-drm-amd-display-get-dprefclk-ss-info-from-integratio.patch
@@ -0,0 +1,75 @@
+From 3ee24f85f028fc66348e1d3a223e0ca29eb81b35 Mon Sep 17 00:00:00 2001
+From: Charlene Liu <charlene.liu@amd.com>
+Date: Wed, 6 Dec 2023 17:14:48 -0500
+Subject: [PATCH] drm/amd/display: get dprefclk ss info from integration info
+ table
+
+[ Upstream commit 51e7b64690776a9981355428b537af9048308a95 ]
+
+[why & how]
+we have two SSC_En:
+we get ssc_info from dce_info for MPLL_SSC_EN.
+we used to call VBIOS cmdtbl's smu_info's SS persentage for DPRECLK SS info,
+is used for DP AUDIO and VBIOS' smu_info table was from systemIntegrationInfoTable.
+
+since dcn35 VBIOS removed smu_info, driver need to use integrationInfotable directly.
+
+Reviewed-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
+Acked-by: Wayne Lin <wayne.lin@amd.com>
+Signed-off-by: Charlene Liu <charlene.liu@amd.com>
+Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
+Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ .../drm/amd/display/dc/bios/bios_parser2.c    | 19 ++++++++++++++-----
+ .../display/include/grph_object_ctrl_defs.h   |  2 ++
+ 2 files changed, 16 insertions(+), 5 deletions(-)
+
+--- a/drivers/gpu/drm/amd/display/dc/bios/bios_parser2.c
++++ b/drivers/gpu/drm/amd/display/dc/bios/bios_parser2.c
+@@ -1018,13 +1018,20 @@ static enum bp_result get_ss_info_v4_5(
+ 		DC_LOG_BIOS("AS_SIGNAL_TYPE_HDMI ss_percentage: %d\n", ss_info->spread_spectrum_percentage);
+ 		break;
+ 	case AS_SIGNAL_TYPE_DISPLAY_PORT:
+-		ss_info->spread_spectrum_percentage =
++		if (bp->base.integrated_info) {
++			DC_LOG_BIOS("gpuclk_ss_percentage (unit of 0.001 percent): %d\n", bp->base.integrated_info->gpuclk_ss_percentage);
++			ss_info->spread_spectrum_percentage =
++					bp->base.integrated_info->gpuclk_ss_percentage;
++			ss_info->type.CENTER_MODE =
++					bp->base.integrated_info->gpuclk_ss_type;
++		} else {
++			ss_info->spread_spectrum_percentage =
+ 				disp_cntl_tbl->dp_ss_percentage;
+-		ss_info->spread_spectrum_range =
++			ss_info->spread_spectrum_range =
+ 				disp_cntl_tbl->dp_ss_rate_10hz * 10;
+-		if (disp_cntl_tbl->dp_ss_mode & ATOM_SS_CENTRE_SPREAD_MODE)
+-			ss_info->type.CENTER_MODE = true;
+-
++			if (disp_cntl_tbl->dp_ss_mode & ATOM_SS_CENTRE_SPREAD_MODE)
++				ss_info->type.CENTER_MODE = true;
++		}
+ 		DC_LOG_BIOS("AS_SIGNAL_TYPE_DISPLAY_PORT ss_percentage: %d\n", ss_info->spread_spectrum_percentage);
+ 		break;
+ 	case AS_SIGNAL_TYPE_GPU_PLL:
+@@ -2836,6 +2843,8 @@ static enum bp_result get_integrated_inf
+ 	info->ma_channel_number = info_v2_2->umachannelnumber;
+ 	info->dp_ss_control =
+ 		le16_to_cpu(info_v2_2->reserved1);
++	info->gpuclk_ss_percentage = info_v2_2->gpuclk_ss_percentage;
++	info->gpuclk_ss_type = info_v2_2->gpuclk_ss_type;
+ 
+ 	for (i = 0; i < NUMBER_OF_UCHAR_FOR_GUID; ++i) {
+ 		info->ext_disp_conn_info.gu_id[i] =
+--- a/drivers/gpu/drm/amd/display/include/grph_object_ctrl_defs.h
++++ b/drivers/gpu/drm/amd/display/include/grph_object_ctrl_defs.h
+@@ -417,6 +417,8 @@ struct integrated_info {
+ 	/* V2.1 */
+ 	struct edp_info edp1_info;
+ 	struct edp_info edp2_info;
++	uint32_t gpuclk_ss_percentage;
++	uint32_t gpuclk_ss_type;
+ };
+ 
+ /*
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-077-pinctrl-cy8c95x0-Fix-typo.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-077-pinctrl-cy8c95x0-Fix-typo.patch
new file mode 100644
index 0000000000..ebd0184bbe
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-077-pinctrl-cy8c95x0-Fix-typo.patch
@@ -0,0 +1,28 @@
+From 0d5bf979e4ab430d6caad469319034b03cc77f42 Mon Sep 17 00:00:00 2001
+From: Patrick Rudolph <patrick.rudolph@9elements.com>
+Date: Tue, 19 Dec 2023 13:51:16 +0100
+Subject: [PATCH] pinctrl: cy8c95x0: Fix typo
+
+[ Upstream commit 47b1fa48116238208c1b1198dba10f56fc1b6eb2 ]
+
+Fix typo to make pinctrl-cy8c95x compile again.
+
+Signed-off-by: Patrick Rudolph <patrick.rudolph@9elements.com>
+Link: https://lore.kernel.org/r/20231219125120.4028862-1-patrick.rudolph@9elements.com
+Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/pinctrl/pinctrl-cy8c95x0.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+--- a/drivers/pinctrl/pinctrl-cy8c95x0.c
++++ b/drivers/pinctrl/pinctrl-cy8c95x0.c
+@@ -857,7 +857,7 @@ static int cy8c95x0_setup_gpiochip(struc
+ 	gc->get_direction = cy8c95x0_gpio_get_direction;
+ 	gc->get_multiple = cy8c95x0_gpio_get_multiple;
+ 	gc->set_multiple = cy8c95x0_gpio_set_multiple;
+-	gc->set_config = gpiochip_generic_config,
++	gc->set_config = gpiochip_generic_config;
+ 	gc->can_sleep = true;
+ 	gc->add_pin_ranges = cy8c95x0_add_pin_ranges;
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-078-pinctrl-cy8c95x0-Fix-get_pincfg.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-078-pinctrl-cy8c95x0-Fix-get_pincfg.patch
new file mode 100644
index 0000000000..fa55fc349b
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-078-pinctrl-cy8c95x0-Fix-get_pincfg.patch
@@ -0,0 +1,29 @@
+From ba3c85fa3162b0d0eff20e361240e0f666ac0896 Mon Sep 17 00:00:00 2001
+From: Patrick Rudolph <patrick.rudolph@9elements.com>
+Date: Tue, 19 Dec 2023 13:51:18 +0100
+Subject: [PATCH] pinctrl: cy8c95x0: Fix get_pincfg
+
+[ Upstream commit 94c71705cc49092cef60ece13a28680809096fd4 ]
+
+Invert the register value for PIN_CONFIG_OUTPUT_ENABLE to return
+the opposite of PIN_CONFIG_INPUT_ENABLE.
+
+Signed-off-by: Patrick Rudolph <patrick.rudolph@9elements.com>
+Link: https://lore.kernel.org/r/20231219125120.4028862-3-patrick.rudolph@9elements.com
+Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/pinctrl/pinctrl-cy8c95x0.c | 2 ++
+ 1 file changed, 2 insertions(+)
+
+--- a/drivers/pinctrl/pinctrl-cy8c95x0.c
++++ b/drivers/pinctrl/pinctrl-cy8c95x0.c
+@@ -749,6 +749,8 @@ static int cy8c95x0_gpio_get_pincfg(stru
+ 	ret = regmap_read(chip->regmap, reg, &reg_val);
+ 	if (reg_val & bit)
+ 		arg = 1;
++	if (param == PIN_CONFIG_OUTPUT_ENABLE)
++		arg = !arg;
+ 
+ 	*config = pinconf_to_config_packed(param, (u16)arg);
+ out:
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-079-ida-Fix-crash-in-ida_free-when-the-bitmap-is-empty.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-079-ida-Fix-crash-in-ida_free-when-the-bitmap-is-empty.patch
new file mode 100644
index 0000000000..9c82855c0e
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-079-ida-Fix-crash-in-ida_free-when-the-bitmap-is-empty.patch
@@ -0,0 +1,90 @@
+From ecc9df2da97052d6b9d2da9c4146235275dddddd Mon Sep 17 00:00:00 2001
+From: "Matthew Wilcox (Oracle)" <willy@infradead.org>
+Date: Thu, 21 Dec 2023 16:53:57 +0000
+Subject: [PATCH] ida: Fix crash in ida_free when the bitmap is empty
+
+[ Upstream commit af73483f4e8b6f5c68c9aa63257bdd929a9c194a ]
+
+The IDA usually detects double-frees, but that detection failed to
+consider the case when there are no nearby IDs allocated and so we have a
+NULL bitmap rather than simply having a clear bit.  Add some tests to the
+test-suite to be sure we don't inadvertently reintroduce this problem.
+Unfortunately they're quite noisy so include a message to disregard
+the warnings.
+
+Reported-by: Zhenghan Wang <wzhmmmmm@gmail.com>
+Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
+Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ lib/idr.c      |  2 +-
+ lib/test_ida.c | 40 ++++++++++++++++++++++++++++++++++++++++
+ 2 files changed, 41 insertions(+), 1 deletion(-)
+
+--- a/lib/idr.c
++++ b/lib/idr.c
+@@ -508,7 +508,7 @@ void ida_free(struct ida *ida, unsigned
+ 			goto delete;
+ 		xas_store(&xas, xa_mk_value(v));
+ 	} else {
+-		if (!test_bit(bit, bitmap->bitmap))
++		if (!bitmap || !test_bit(bit, bitmap->bitmap))
+ 			goto err;
+ 		__clear_bit(bit, bitmap->bitmap);
+ 		xas_set_mark(&xas, XA_FREE_MARK);
+--- a/lib/test_ida.c
++++ b/lib/test_ida.c
+@@ -150,6 +150,45 @@ static void ida_check_conv(struct ida *i
+ 	IDA_BUG_ON(ida, !ida_is_empty(ida));
+ }
+ 
++/*
++ * Check various situations where we attempt to free an ID we don't own.
++ */
++static void ida_check_bad_free(struct ida *ida)
++{
++	unsigned long i;
++
++	printk("vvv Ignore \"not allocated\" warnings\n");
++	/* IDA is empty; all of these will fail */
++	ida_free(ida, 0);
++	for (i = 0; i < 31; i++)
++		ida_free(ida, 1 << i);
++
++	/* IDA contains a single value entry */
++	IDA_BUG_ON(ida, ida_alloc_min(ida, 3, GFP_KERNEL) != 3);
++	ida_free(ida, 0);
++	for (i = 0; i < 31; i++)
++		ida_free(ida, 1 << i);
++
++	/* IDA contains a single bitmap */
++	IDA_BUG_ON(ida, ida_alloc_min(ida, 1023, GFP_KERNEL) != 1023);
++	ida_free(ida, 0);
++	for (i = 0; i < 31; i++)
++		ida_free(ida, 1 << i);
++
++	/* IDA contains a tree */
++	IDA_BUG_ON(ida, ida_alloc_min(ida, (1 << 20) - 1, GFP_KERNEL) != (1 << 20) - 1);
++	ida_free(ida, 0);
++	for (i = 0; i < 31; i++)
++		ida_free(ida, 1 << i);
++	printk("^^^ \"not allocated\" warnings over\n");
++
++	ida_free(ida, 3);
++	ida_free(ida, 1023);
++	ida_free(ida, (1 << 20) - 1);
++
++	IDA_BUG_ON(ida, !ida_is_empty(ida));
++}
++
+ static DEFINE_IDA(ida);
+ 
+ static int ida_checks(void)
+@@ -162,6 +201,7 @@ static int ida_checks(void)
+ 	ida_check_leaf(&ida, 1024 * 64);
+ 	ida_check_max(&ida);
+ 	ida_check_conv(&ida);
++	ida_check_bad_free(&ida);
+ 
+ 	printk("IDA: %u of %u tests passed\n", tests_passed, tests_run);
+ 	return (tests_run != tests_passed) ? 0 : -EINVAL;
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-080-virtio_blk-fix-snprintf-truncation-compiler-warning.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-080-virtio_blk-fix-snprintf-truncation-compiler-warning.patch
new file mode 100644
index 0000000000..73fc122184
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-080-virtio_blk-fix-snprintf-truncation-compiler-warning.patch
@@ -0,0 +1,76 @@
+From df9426241c5aa74b6dbee30ce35282bc8654a8d9 Mon Sep 17 00:00:00 2001
+From: Stefan Hajnoczi <stefanha@redhat.com>
+Date: Mon, 4 Dec 2023 09:07:43 -0500
+Subject: [PATCH] virtio_blk: fix snprintf truncation compiler warning
+MIME-Version: 1.0
+Content-Type: text/plain; charset=UTF-8
+Content-Transfer-Encoding: 8bit
+
+[ Upstream commit b8e0792449928943c15d1af9f63816911d139267 ]
+
+Commit 4e0400525691 ("virtio-blk: support polling I/O") triggers the
+following gcc 13 W=1 warnings:
+
+drivers/block/virtio_blk.c: In function ‘init_vq’:
+drivers/block/virtio_blk.c:1077:68: warning: ‘%d’ directive output may be truncated writing between 1 and 11 bytes into a region of size 7 [-Wformat-truncation=]
+ 1077 |                 snprintf(vblk->vqs[i].name, VQ_NAME_LEN, "req_poll.%d", i);
+      |                                                                    ^~
+drivers/block/virtio_blk.c:1077:58: note: directive argument in the range [-2147483648, 65534]
+ 1077 |                 snprintf(vblk->vqs[i].name, VQ_NAME_LEN, "req_poll.%d", i);
+      |                                                          ^~~~~~~~~~~~~
+drivers/block/virtio_blk.c:1077:17: note: ‘snprintf’ output between 11 and 21 bytes into a destination of size 16
+ 1077 |                 snprintf(vblk->vqs[i].name, VQ_NAME_LEN, "req_poll.%d", i);
+      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+This is a false positive because the lower bound -2147483648 is
+incorrect. The true range of i is [0, num_vqs - 1] where 0 < num_vqs <
+65536.
+
+The code mixes int, unsigned short, and unsigned int types in addition
+to using "%d" for an unsigned value. Use unsigned short and "%u"
+consistently to solve the compiler warning.
+
+Cc: Suwan Kim <suwan.kim027@gmail.com>
+Reported-by: kernel test robot <lkp@intel.com>
+Closes: https://lore.kernel.org/oe-kbuild-all/202312041509.DIyvEt9h-lkp@intel.com/
+Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>
+Message-Id: <20231204140743.1487843-1-stefanha@redhat.com>
+Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/block/virtio_blk.c | 8 ++++----
+ 1 file changed, 4 insertions(+), 4 deletions(-)
+
+--- a/drivers/block/virtio_blk.c
++++ b/drivers/block/virtio_blk.c
+@@ -609,12 +609,12 @@ static void virtblk_config_changed(struc
+ static int init_vq(struct virtio_blk *vblk)
+ {
+ 	int err;
+-	int i;
++	unsigned short i;
+ 	vq_callback_t **callbacks;
+ 	const char **names;
+ 	struct virtqueue **vqs;
+ 	unsigned short num_vqs;
+-	unsigned int num_poll_vqs;
++	unsigned short num_poll_vqs;
+ 	struct virtio_device *vdev = vblk->vdev;
+ 	struct irq_affinity desc = { 0, };
+ 
+@@ -658,13 +658,13 @@ static int init_vq(struct virtio_blk *vb
+ 
+ 	for (i = 0; i < num_vqs - num_poll_vqs; i++) {
+ 		callbacks[i] = virtblk_done;
+-		snprintf(vblk->vqs[i].name, VQ_NAME_LEN, "req.%d", i);
++		snprintf(vblk->vqs[i].name, VQ_NAME_LEN, "req.%u", i);
+ 		names[i] = vblk->vqs[i].name;
+ 	}
+ 
+ 	for (; i < num_vqs; i++) {
+ 		callbacks[i] = NULL;
+-		snprintf(vblk->vqs[i].name, VQ_NAME_LEN, "req_poll.%d", i);
++		snprintf(vblk->vqs[i].name, VQ_NAME_LEN, "req_poll.%u", i);
+ 		names[i] = vblk->vqs[i].name;
+ 	}
+ 
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-081-net-qrtr-ns-Return-0-if-server-port-is-not-present.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-081-net-qrtr-ns-Return-0-if-server-port-is-not-present.patch
new file mode 100644
index 0000000000..a9e11e83ce
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-081-net-qrtr-ns-Return-0-if-server-port-is-not-present.patch
@@ -0,0 +1,38 @@
+From c4a8a128184b852c9c82100c6a0c393d611b0dfc Mon Sep 17 00:00:00 2001
+From: Sarannya S <quic_sarannya@quicinc.com>
+Date: Thu, 21 Dec 2023 15:36:51 +0530
+Subject: [PATCH] net: qrtr: ns: Return 0 if server port is not present
+
+[ Upstream commit 9bf2e9165f90dc9f416af53c902be7e33930f728 ]
+
+When a 'DEL_CLIENT' message is received from the remote, the corresponding
+server port gets deleted. A DEL_SERVER message is then announced for this
+server. As part of handling the subsequent DEL_SERVER message, the name-
+server attempts to delete the server port which results in a '-ENOENT' error.
+The return value from server_del() is then propagated back to qrtr_ns_worker,
+causing excessive error prints.
+To address this, return 0 from control_cmd_del_server() without checking the
+return value of server_del(), since the above scenario is not an error case
+and hence server_del() doesn't have any other error return value.
+
+Signed-off-by: Sarannya Sasikumar <quic_sarannya@quicinc.com>
+Reviewed-by: Simon Horman <horms@kernel.org>
+Signed-off-by: David S. Miller <davem@davemloft.net>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ net/qrtr/ns.c | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+--- a/net/qrtr/ns.c
++++ b/net/qrtr/ns.c
+@@ -569,7 +569,9 @@ static int ctrl_cmd_del_server(struct so
+ 	if (!node)
+ 		return -ENOENT;
+ 
+-	return server_del(node, port, true);
++	server_del(node, port, true);
++
++	return 0;
+ }
+ 
+ static int ctrl_cmd_new_lookup(struct sockaddr_qrtr *from,
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-082-ARM-sun9i-smp-fix-return-code-check-of-of_property_m.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-082-ARM-sun9i-smp-fix-return-code-check-of-of_property_m.patch
new file mode 100644
index 0000000000..01afc1a221
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-082-ARM-sun9i-smp-fix-return-code-check-of-of_property_m.patch
@@ -0,0 +1,43 @@
+From 3e0e03997396778909b64a6099b413af0d812b46 Mon Sep 17 00:00:00 2001
+From: Stefan Wahren <wahrenst@gmx.net>
+Date: Thu, 28 Dec 2023 20:39:03 +0100
+Subject: [PATCH] ARM: sun9i: smp: fix return code check of
+ of_property_match_string
+
+[ Upstream commit 643fe70e7bcdcc9e2d96952f7fc2bab56385cce5 ]
+
+of_property_match_string returns an int; either an index from 0 or
+greater if successful or negative on failure. Even it's very
+unlikely that the DT CPU node contains multiple enable-methods
+these checks should be fixed.
+
+This patch was inspired by the work of Nick Desaulniers.
+
+Link: https://lore.kernel.org/lkml/20230516-sunxi-v1-1-ac4b9651a8c1@google.com/T/
+Cc: Nick Desaulniers <ndesaulniers@google.com>
+Signed-off-by: Stefan Wahren <wahrenst@gmx.net>
+Link: https://lore.kernel.org/r/20231228193903.9078-2-wahrenst@gmx.net
+Reviewed-by: Chen-Yu Tsai <wens@csie.org>
+Signed-off-by: Arnd Bergmann <arnd@arndb.de>
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ arch/arm/mach-sunxi/mc_smp.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+--- a/arch/arm/mach-sunxi/mc_smp.c
++++ b/arch/arm/mach-sunxi/mc_smp.c
+@@ -804,12 +804,12 @@ static int __init sunxi_mc_smp_init(void
+ 	for (i = 0; i < ARRAY_SIZE(sunxi_mc_smp_data); i++) {
+ 		ret = of_property_match_string(node, "enable-method",
+ 					       sunxi_mc_smp_data[i].enable_method);
+-		if (!ret)
++		if (ret >= 0)
+ 			break;
+ 	}
+ 
+ 	of_node_put(node);
+-	if (ret)
++	if (ret < 0)
+ 		return -ENODEV;
+ 
+ 	is_a83t = sunxi_mc_smp_data[i].is_a83t;
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-083-drm-crtc-fix-uninitialized-variable-use.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-083-drm-crtc-fix-uninitialized-variable-use.patch
new file mode 100644
index 0000000000..1fd22714e2
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-083-drm-crtc-fix-uninitialized-variable-use.patch
@@ -0,0 +1,47 @@
+From 1cc2ec63081b49f69026d5e47b35ace2bc7e862a Mon Sep 17 00:00:00 2001
+From: Jani Nikula <jani.nikula@intel.com>
+Date: Fri, 8 Dec 2023 15:12:38 +0200
+Subject: [PATCH] drm/crtc: fix uninitialized variable use
+
+[ Upstream commit 6e455f5dcdd15fa28edf0ffb5b44d3508512dccf ]
+
+Commit 3823119b9c2b ("drm/crtc: Fix uninit-value bug in
+drm_mode_setcrtc") was supposed to fix use of an uninitialized variable,
+but introduced another.
+
+num_connectors is only initialized if crtc_req->count_connectors > 0,
+but it's used regardless. Fix it.
+
+Fixes: 3823119b9c2b ("drm/crtc: Fix uninit-value bug in drm_mode_setcrtc")
+Cc: syzbot+4fad2e57beb6397ab2fc@syzkaller.appspotmail.com
+Cc: Ziqi Zhao <astrajoan@yahoo.com>
+Cc: Maxime Ripard <mripard@kernel.org>
+Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
+Cc: Thomas Zimmermann <tzimmermann@suse.de>
+Signed-off-by: Jani Nikula <jani.nikula@intel.com>
+Signed-off-by: Maxime Ripard <mripard@kernel.org>
+Link: https://patchwork.freedesktop.org/patch/msgid/20231208131238.2924571-1-jani.nikula@intel.com
+Signed-off-by: Sasha Levin <sashal@kernel.org>
+---
+ drivers/gpu/drm/drm_crtc.c | 3 +--
+ 1 file changed, 1 insertion(+), 2 deletions(-)
+
+--- a/drivers/gpu/drm/drm_crtc.c
++++ b/drivers/gpu/drm/drm_crtc.c
+@@ -715,7 +715,7 @@ int drm_mode_setcrtc(struct drm_device *
+ 	struct drm_mode_set set;
+ 	uint32_t __user *set_connectors_ptr;
+ 	struct drm_modeset_acquire_ctx ctx;
+-	int ret, i, num_connectors;
++	int ret, i, num_connectors = 0;
+ 
+ 	if (!drm_core_check_feature(dev, DRIVER_MODESET))
+ 		return -EOPNOTSUPP;
+@@ -850,7 +850,6 @@ int drm_mode_setcrtc(struct drm_device *
+ 			goto out;
+ 		}
+ 
+-		num_connectors = 0;
+ 		for (i = 0; i < crtc_req->count_connectors; i++) {
+ 			connector_set[i] = NULL;
+ 			set_connectors_ptr = (uint32_t __user *)(unsigned long)crtc_req->set_connectors_ptr;
diff --git a/target/linux/generic/backport-6.1/0-queue-6.1.74-084-ksmbd-only-v2-leases-handle-the-directory.patch b/target/linux/generic/backport-6.1/0-queue-6.1.74-084-ksmbd-only-v2-leases-handle-the-directory.patch
new file mode 100644
index 0000000000..ada63b4953
--- /dev/null
+++ b/target/linux/generic/backport-6.1/0-queue-6.1.74-084-ksmbd-only-v2-leases-handle-the-directory.patch
@@ -0,0 +1,30 @@
+From 49603ff4241a68c5540e48ee61a2b51168a85b55 Mon Sep 17 00:00:00 2001
+From: Namjae Jeon <linkinjeon@kernel.org>
+Date: Mon, 15 Jan 2024 10:34:32 +0900
+Subject: [PATCH] ksmbd: only v2 leases handle the directory
+
+When smb2 leases is disable, ksmbd can send oplock break notification
+and cause wait oplock break ack timeout. It may appear like hang when
+accessing a directory. This patch make only v2 leases handle the
+directory.
+
+Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
+---
+ fs/smb/server/oplock.c | 6 ++++++
+ 1 file changed, 6 insertions(+)
+
+--- a/fs/smb/server/oplock.c
++++ b/fs/smb/server/oplock.c
+@@ -1191,6 +1191,12 @@ int smb_grant_oplock(struct ksmbd_work *
+ 	bool prev_op_has_lease;
+ 	__le32 prev_op_state = 0;
+ 
++	/* Only v2 leases handle the directory */
++	if (S_ISDIR(file_inode(fp->filp)->i_mode)) {
++		if (!lctx || lctx->version != 2)
++			return 0;
++	}
++
+ 	opinfo = alloc_opinfo(work, pid, tid);
+ 	if (!opinfo)
+ 		return -ENOMEM;
-- 
2.40.1

